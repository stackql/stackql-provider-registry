openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Firebase App Check API
  description: Firebase App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.
  version: v1
  x-discovery-doc-revision: '20221212'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://firebase.google.com/docs/app-check
servers:
  - url: https://firebaseappcheck.googleapis.com
components:
  schemas:
    GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest
      type: object
      properties:
        recaptchaV3Token:
          description: Required. The reCAPTCHA token as returned by the [reCAPTCHA v3 JavaScript API](https://developers.google.com/recaptcha/docs/v3).
          type: string
      description: Request message for the ExchangeRecaptchaV3Token method.
    GoogleFirebaseAppcheckV1UpdateServiceRequest:
      properties:
        service:
          $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
          description: 'Required. The Service to update. The Service''s `name` field is used to identify the Service to be updated, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)'
        updateMask:
          description: 'Required. A comma-separated list of names of fields in the Service to update. Example: `enforcement_mode`.'
          type: string
          format: google-fieldmask
      type: object
      id: GoogleFirebaseAppcheckV1UpdateServiceRequest
      description: Request message for the UpdateService method as well as an individual update message for the BatchUpdateServices method.
    GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse
      description: Response message for the BatchGetAppAttestConfigs method.
      type: object
      properties:
        configs:
          description: AppAttestConfigs retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
          type: array
    GoogleFirebaseAppcheckV1BatchUpdateServicesResponse:
      type: object
      id: GoogleFirebaseAppcheckV1BatchUpdateServicesResponse
      properties:
        services:
          type: array
          description: Service objects after the updates have been applied.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
      description: Response message for the BatchUpdateServices method.
    GoogleFirebaseAppcheckV1AppAttestConfig:
      properties:
        tokenTtl:
          format: google-duration
          description: Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
        name:
          type: string
          description: 'Required. The relative resource name of the App Attest configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/appAttestConfig ```'
      id: GoogleFirebaseAppcheckV1AppAttestConfig
      description: An app's App Attest configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangeAppAttestAttestation and ExchangeAppAttestAssertion, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).
      type: object
    GoogleFirebaseAppcheckV1DeviceCheckConfig:
      description: An app's DeviceCheck configuration object. This configuration is used by ExchangeDeviceCheckToken to validate device tokens issued to apps by DeviceCheck. It also controls certain properties of the returned `AppCheckToken`, such as its ttl. Note that the Team ID registered with your app is used as part of the validation process. Please register it via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).
      type: object
      id: GoogleFirebaseAppcheckV1DeviceCheckConfig
      properties:
        privateKeySet:
          type: boolean
          description: Output only. Whether the `private_key` field was previously set. Since we will never return the `private_key` field, this field is the only way to find out whether it was previously set.
          readOnly: true
        privateKey:
          description: Required. Input only. The contents of the private key (`.p8`) file associated with the key specified by `key_id`. For security reasons, this field will never be populated in any response.
          type: string
        tokenTtl:
          format: google-duration
          description: Specifies the duration for which App Check tokens exchanged from DeviceCheck tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
        keyId:
          description: Required. The key identifier of a private key enabled with DeviceCheck, created in your Apple Developer account.
          type: string
        name:
          description: 'Required. The relative resource name of the DeviceCheck configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/deviceCheckConfig ```'
          type: string
    GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest:
      id: GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest
      properties:
        attestationStatement:
          description: Required. The App Attest statement returned by the client-side App Attest API. This is a base64url encoded CBOR object in the JSON response.
          type: string
          format: byte
        keyId:
          format: byte
          description: Required. The key ID generated by App Attest for the client app.
          type: string
        challenge:
          format: byte
          description: Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.
          type: string
      description: Request message for the ExchangeAppAttestAttestation method.
      type: object
    GoogleFirebaseAppcheckV1PublicJwk:
      description: A JWK as specified by [section 4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1).
      type: object
      properties:
        'n':
          description: See [section 6.3.1.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1).
          type: string
        kid:
          type: string
          description: See [section 4.5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.5).
        alg:
          description: See [section 4.4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.4).
          type: string
        e:
          type: string
          description: See [section 6.3.1.2 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2).
        use:
          type: string
          description: See [section 4.2 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.2).
        kty:
          description: See [section 4.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.1).
          type: string
      id: GoogleFirebaseAppcheckV1PublicJwk
    GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest:
      description: Request message for the GeneratePlayIntegrityChallenge method.
      id: GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest
      properties: {}
      type: object
    GoogleFirebaseAppcheckV1PlayIntegrityConfig:
      properties:
        name:
          type: string
          description: 'Required. The relative resource name of the Play Integrity configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/playIntegrityConfig ```'
        tokenTtl:
          type: string
          description: Specifies the duration for which App Check tokens exchanged from Play Integrity tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          format: google-duration
      id: GoogleFirebaseAppcheckV1PlayIntegrityConfig
      type: object
      description: An app's Play Integrity configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangePlayIntegrityToken, such as its ttl. Note that your registered SHA-256 certificate fingerprints are used to validate tokens issued by the Play Integrity API; please register them via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps.sha/create).
    GoogleFirebaseAppcheckV1ListServicesResponse:
      description: Response message for the ListServices method.
      type: object
      properties:
        services:
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
          type: array
          description: The Services retrieved.
        nextPageToken:
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListServices to find the next group of Services. Page tokens are short-lived and should not be persisted.
          type: string
      id: GoogleFirebaseAppcheckV1ListServicesResponse
    GoogleFirebaseAppcheckV1PublicJwkSet:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PublicJwk'
          description: The set of public keys. See [section 5.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5).
      description: The currently active set of public keys that can be used to verify App Check tokens. This object is a JWK set as specified by [section 5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-5). For security, the response **must not** be cached for longer than six hours.
      id: GoogleFirebaseAppcheckV1PublicJwkSet
    GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse:
      type: object
      id: GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse
      description: Response message for the BatchGetDeviceCheckConfigs method.
      properties:
        configs:
          description: DeviceCheckConfigs retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
    GoogleFirebaseAppcheckV1DebugToken:
      type: object
      properties:
        name:
          type: string
          description: 'Required. The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```'
        token:
          type: string
          description: Required. Input only. Immutable. The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. This field is immutable once set, and cannot be provided during an UpdateDebugToken request. You can, however, delete this debug token using DeleteDebugToken to revoke it. For security reasons, this field will never be populated in any response.
        displayName:
          description: Required. A human readable display name used to identify this debug token.
          type: string
      id: GoogleFirebaseAppcheckV1DebugToken
      description: A *debug token* is a secret used during the development or integration testing of an app. It essentially allows the development or integration testing to bypass app attestation while still allowing App Check to enforce protection on supported production Firebase services.
    GoogleFirebaseAppcheckV1SafetyNetConfig:
      properties:
        tokenTtl:
          description: Specifies the duration for which App Check tokens exchanged from SafetyNet tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          format: google-duration
          type: string
        name:
          type: string
          description: 'Required. The relative resource name of the SafetyNet configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/safetyNetConfig ```'
      description: An app's SafetyNet configuration object. This configuration controls certain properties of the `AppCheckToken` returned by ExchangeSafetyNetToken, such as its ttl. Note that your registered SHA-256 certificate fingerprints are used to validate tokens issued by SafetyNet; please register them via the Firebase Console or programmatically via the [Firebase Management Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.androidApps.sha/create).
      type: object
      id: GoogleFirebaseAppcheckV1SafetyNetConfig
    GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse
      description: Response message for the BatchGetSafetyNetConfigs method.
      type: object
      properties:
        configs:
          type: array
          description: SafetyNetConfigs retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
    GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse:
      type: object
      properties:
        appCheckToken:
          description: Encapsulates an App Check token.
          $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
        artifact:
          format: byte
          description: An artifact that can be used in future calls to ExchangeAppAttestAssertion.
          type: string
      id: GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse
      description: Response message for the ExchangeAppAttestAttestation method.
    GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest:
      properties:
        recaptchaEnterpriseToken:
          description: Required. The reCAPTCHA token as returned by the [reCAPTCHA Enterprise JavaScript API](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages).
          type: string
      type: object
      description: Request message for the ExchangeRecaptchaEnterpriseToken method.
      id: GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest
    GoogleProtobufEmpty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: GoogleProtobufEmpty
      type: object
      properties: {}
    GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig:
      properties:
        tokenTtl:
          format: google-duration
          description: Specifies the duration for which App Check tokens exchanged from reCAPTCHA Enterprise tokens will be valid. If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
        name:
          type: string
          description: 'Required. The relative resource name of the reCAPTCHA Enterprise configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig ```'
        siteKey:
          description: 'The score-based site key [created in reCAPTCHA Enterprise](https://cloud.google.com/recaptcha-enterprise/docs/create-key#creating_a_site_key) used to [invoke reCAPTCHA and generate the reCAPTCHA tokens](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages) for your application. Important: This is *not* the `site_secret` (as it is in reCAPTCHA v3), but rather your score-based reCAPTCHA Enterprise site key.'
          type: string
      id: GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig
      description: An app's reCAPTCHA Enterprise configuration object. This configuration is used by ExchangeRecaptchaEnterpriseToken to validate reCAPTCHA tokens issued to apps by reCAPTCHA Enterprise. It also controls certain properties of the returned `AppCheckToken`, such as its ttl.
      type: object
    GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse:
      id: GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse
      type: object
      description: Response message for the GeneratePlayIntegrityChallenge method.
      properties:
        challenge:
          description: A one-time use [challenge](https://developer.android.com/google/play/integrity/verdict#protect-against-replay-attacks) for the client to pass to the Play Integrity API.
          type: string
        ttl:
          format: google-duration
          description: The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.
          type: string
    GoogleFirebaseAppcheckV1Service:
      properties:
        enforcementMode:
          description: Required. The App Check enforcement mode for this service.
          enumDescriptions:
            - Firebase App Check is not enforced for the service, nor are App Check metrics collected. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced. An unconfigured service is in this mode by default.
            - Firebase App Check is not enforced for the service. App Check metrics are collected to help you decide when to turn on enforcement for the service. Though the service is not protected by App Check in this mode, other applicable protections, such as user authorization, are still enforced.
            - Firebase App Check is enforced for the service. The service will reject any request that attempts to access your project's resources if it does not have valid App Check token attached, with some exceptions depending on the service; for example, some services will still allow requests bearing the developer's privileged service account credentials without an App Check token. App Check metrics continue to be collected to help you detect issues with your App Check integration and monitor the composition of your callers. While the service is protected by App Check, other applicable protections, such as user authorization, continue to be enforced at the same time. Use caution when choosing to enforce App Check on a Firebase service. If your users have not updated to an App Check capable version of your app, their apps will no longer be able to use your Firebase services that are enforcing App Check. App Check metrics can help you decide whether to enforce App Check on your Firebase services. If your app has not launched yet, you should enable enforcement immediately, since there are no outdated clients in use.
          type: string
          enum:
            - 'OFF'
            - UNENFORCED
            - ENFORCED
        name:
          description: 'Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)'
          type: string
      type: object
      description: The enforcement configuration for a Firebase service supported by App Check.
      id: GoogleFirebaseAppcheckV1Service
    GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest:
      type: object
      properties:
        deviceToken:
          description: Required. The `device_token` as returned by Apple's client-side [DeviceCheck API](https://developer.apple.com/documentation/devicecheck/dcdevice). This is the base64 encoded `Data` (Swift) or `NSData` (ObjC) object.
          type: string
      id: GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest
      description: Request message for the ExchangeDeviceCheckToken method.
    GoogleFirebaseAppcheckV1BatchUpdateServicesRequest:
      description: Request message for the BatchUpdateServices method.
      id: GoogleFirebaseAppcheckV1BatchUpdateServicesRequest
      properties:
        updateMask:
          type: string
          description: 'Optional. A comma-separated list of names of fields in the Services to update. Example: `display_name`. If the `update_mask` field is set in both this request and any of the UpdateServiceRequest messages, they must match or the entire batch fails and no updates will be committed.'
          format: google-fieldmask
        requests:
          description: Required. The request messages specifying the Services to update. A maximum of 100 objects can be updated in a batch.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1UpdateServiceRequest'
          type: array
      type: object
    GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest:
      description: Request message for the ExchangeSafetyNetToken method.
      id: GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest
      type: object
      properties:
        safetyNetToken:
          type: string
          description: Required. The [SafetyNet attestation response](https://developer.android.com/training/safetynet/attestation#request-attestation-step) issued to your app.
    GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest:
      description: Request message for the ExchangeAppAttestAssertion method.
      type: object
      id: GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest
      properties:
        artifact:
          description: Required. The artifact returned by a previous call to ExchangeAppAttestAttestation.
          format: byte
          type: string
        assertion:
          description: Required. The CBOR-encoded assertion returned by the client-side App Attest API.
          format: byte
          type: string
        challenge:
          format: byte
          type: string
          description: Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge.
    GoogleFirebaseAppcheckV1RecaptchaV3Config:
      properties:
        name:
          description: 'Required. The relative resource name of the reCAPTCHA v3 configuration object, in the format: ``` projects/{project_number}/apps/{app_id}/recaptchaV3Config ```'
          type: string
        siteSecretSet:
          description: Output only. Whether the `site_secret` field was previously set. Since we will never return the `site_secret` field, this field is the only way to find out whether it was previously set.
          type: boolean
          readOnly: true
        tokenTtl:
          description: Specifies the duration for which App Check tokens exchanged from reCAPTCHA tokens will be valid. If unset, a default value of 1 day is assumed. Must be between 30 minutes and 7 days, inclusive.
          format: google-duration
          type: string
        siteSecret:
          type: string
          description: Required. Input only. The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never be populated in any response.
      description: An app's reCAPTCHA v3 configuration object. This configuration is used by ExchangeRecaptchaV3Token to validate reCAPTCHA tokens issued to apps by reCAPTCHA v3. It also controls certain properties of the returned `AppCheckToken`, such as its ttl.
      id: GoogleFirebaseAppcheckV1RecaptchaV3Config
      type: object
    GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse:
      description: Response message for the BatchGetRecaptchaV3Configs method.
      id: GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse
      properties:
        configs:
          type: array
          description: RecaptchaV3Configs retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
      type: object
    GoogleFirebaseAppcheckV1ListDebugTokensResponse:
      id: GoogleFirebaseAppcheckV1ListDebugTokensResponse
      properties:
        debugTokens:
          description: The DebugTokens retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
          type: array
        nextPageToken:
          type: string
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListDebugTokens to find the next group of DebugTokens. Page tokens are short-lived and should not be persisted.
      type: object
      description: Response message for the ListDebugTokens method.
    GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest:
      description: Request message for the ExchangeCustomToken method.
      type: object
      id: GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest
      properties:
        customToken:
          type: string
          description: Required. A custom token signed using your project's Admin SDK service account credentials.
    GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse:
      description: Response message for the BatchGetRecaptchaEnterpriseConfigs method.
      properties:
        configs:
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig'
          description: RecaptchaEnterpriseConfigs retrieved.
      type: object
      id: GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse
    GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse:
      type: object
      id: GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse
      description: Response message for the GenerateAppAttestChallenge method.
      properties:
        challenge:
          format: byte
          type: string
          description: A one-time use challenge for the client to pass to the App Attest API.
        ttl:
          description: The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.
          format: google-duration
          type: string
    GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest:
      properties:
        debugToken:
          type: string
          description: Required. A debug token secret. This string must match a debug token secret previously created using CreateDebugToken.
      description: Request message for the ExchangeDebugToken method.
      id: GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest
      type: object
    GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest:
      properties:
        playIntegrityToken:
          type: string
          description: Required. The [integrity verdict response token from Play Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify) issued to your app.
      type: object
      id: GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest
      description: Request message for the ExchangePlayIntegrityToken method.
    GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest:
      type: object
      description: Request message for the GenerateAppAttestChallenge method.
      id: GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest
      properties: {}
    GoogleFirebaseAppcheckV1AppCheckToken:
      type: object
      description: Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.
      id: GoogleFirebaseAppcheckV1AppCheckToken
      properties:
        ttl:
          description: The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.
          format: google-duration
          type: string
        token:
          type: string
          description: The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.
    GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse:
      type: object
      description: Response message for the BatchGetPlayIntegrityConfigs method.
      id: GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse
      properties:
        configs:
          description: PlayIntegrityConfigs retrieved.
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig'
          type: array
  parameters:
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    app_attest_config:
      id: firebase.firebaseappcheck.app_attest_config
      name: app_attest_config
      title: App_attest_config
      methods:
        projects_apps_appAttestConfig_batchGet:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1-~1appAttestConfig:batchGet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_appAttestConfig_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1appAttestConfig/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_appAttestConfig_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1appAttestConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_attest_config/methods/projects_apps_appAttestConfig_get'
        insert: []
        update: []
        delete: []
    safety_net_config:
      id: firebase.firebaseappcheck.safety_net_config
      name: safety_net_config
      title: Safety_net_config
      methods:
        projects_apps_safetyNetConfig_batchGet:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1-~1safetyNetConfig:batchGet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_safetyNetConfig_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1safetyNetConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_safetyNetConfig_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1safetyNetConfig/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/safety_net_config/methods/projects_apps_safetyNetConfig_get'
        insert: []
        update: []
        delete: []
    debug_tokens:
      id: firebase.firebaseappcheck.debug_tokens
      name: debug_tokens
      title: Debug_tokens
      methods:
        projects_apps_debugTokens_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens~1{debugTokensId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_debugTokens_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens~1{debugTokensId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_debugTokens_delete:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens~1{debugTokensId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_debugTokens_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_debugTokens_create:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/projects_apps_debugTokens_get'
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/projects_apps_debugTokens_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/projects_apps_debugTokens_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/projects_apps_debugTokens_delete'
    recaptcha_v3_config:
      id: firebase.firebaseappcheck.recaptcha_v3_config
      name: recaptcha_v3_config
      title: Recaptcha_v3_config
      methods:
        projects_apps_recaptchaV3Config_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaV3Config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_recaptchaV3Config_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaV3Config/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_recaptchaV3Config_batchGet:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1-~1recaptchaV3Config:batchGet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recaptcha_v3_config/methods/projects_apps_recaptchaV3Config_get'
        insert: []
        update: []
        delete: []
    device_check_config:
      id: firebase.firebaseappcheck.device_check_config
      name: device_check_config
      title: Device_check_config
      methods:
        projects_apps_deviceCheckConfig_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1deviceCheckConfig/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_deviceCheckConfig_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1deviceCheckConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_deviceCheckConfig_batchGet:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1-~1deviceCheckConfig:batchGet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_check_config/methods/projects_apps_deviceCheckConfig_get'
        insert: []
        update: []
        delete: []
    recaptcha_enterprise_config:
      id: firebase.firebaseappcheck.recaptcha_enterprise_config
      name: recaptcha_enterprise_config
      title: Recaptcha_enterprise_config
      methods:
        projects_apps_recaptchaEnterpriseConfig_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaEnterpriseConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_recaptchaEnterpriseConfig_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaEnterpriseConfig/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_recaptchaEnterpriseConfig_batchGet:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1-~1recaptchaEnterpriseConfig:batchGet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recaptcha_enterprise_config/methods/projects_apps_recaptchaEnterpriseConfig_get'
        insert: []
        update: []
        delete: []
    play_integrity_config:
      id: firebase.firebaseappcheck.play_integrity_config
      name: play_integrity_config
      title: Play_integrity_config
      methods:
        projects_apps_playIntegrityConfig_batchGet:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1-~1playIntegrityConfig:batchGet/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_playIntegrityConfig_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1playIntegrityConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_playIntegrityConfig_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1playIntegrityConfig/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/play_integrity_config/methods/projects_apps_playIntegrityConfig_get'
        insert: []
        update: []
        delete: []
    apps:
      id: firebase.firebaseappcheck.apps
      name: apps
      title: Apps
      methods:
        projects_apps_generateAppAttestChallenge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:generateAppAttestChallenge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeCustomToken:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeCustomToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeRecaptchaEnterpriseToken:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeRecaptchaEnterpriseToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangePlayIntegrityToken:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangePlayIntegrityToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeAppAttestAttestation:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeAppAttestAttestation/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeRecaptchaV3Token:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeRecaptchaV3Token/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeSafetyNetToken:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeSafetyNetToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeAppAttestAssertion:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeAppAttestAssertion/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeDebugToken:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeDebugToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_generatePlayIntegrityChallenge:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:generatePlayIntegrityChallenge/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_apps_exchangeDeviceCheckToken:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeDeviceCheckToken/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    services:
      id: firebase.firebaseappcheck.services
      name: services
      title: Services
      methods:
        projects_services_list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_services_patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_services_get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_services_batchUpdate:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services:batchUpdate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/projects_services_get'
          - $ref: '#/components/x-stackQL-resources/services/methods/projects_services_list'
        insert: []
        update: []
        delete: []
    jwks:
      id: firebase.firebaseappcheck.jwks
      name: jwks
      title: Jwks
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1jwks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jwks/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /v1/projects/{projectsId}/apps/-/appAttestConfig:batchGet:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: Atomically gets the AppAttestConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: app_attest_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/{appsId}/appAttestConfig:
    parameters: *ref_1
    patch:
      description: Updates the AppAttestConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange AppAttest tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: app_attest_config
      x-stackQL-verb: exec
    get:
      description: Gets the AppAttestConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: app_attest_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/-/safetyNetConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the SafetyNetConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: safety_net_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/{appsId}/safetyNetConfig:
    parameters: *ref_1
    get:
      description: Gets the SafetyNetConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: safety_net_config
      x-stackQL-verb: select
    patch:
      description: Updates the SafetyNetConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange SafetyNet tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: safety_net_config
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}/debugTokens/{debugTokensId}:
    parameters: *ref_1
    get:
      description: Gets the specified DebugToken. For security reasons, the `token` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.debugTokens.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: select
    patch:
      description: Updates the specified DebugToken. For security reasons, the `token` field cannot be updated, nor will it be populated in the response, but you can revoke the debug token using DeleteDebugToken.
      operationId: firebaseappcheck.projects.apps.debugTokens.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified DebugToken. A deleted debug token cannot be used to exchange for an App Check token. Use this method when you suspect the secret `token` has been compromised or when you no longer need the debug token.
      operationId: firebaseappcheck.projects.apps.debugTokens.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: delete
  /v1/projects/{projectsId}/apps/{appsId}/debugTokens:
    parameters: *ref_1
    get:
      description: Lists all DebugTokens for the specified app. For security reasons, the `token` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.debugTokens.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ListDebugTokensResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: select
    post:
      description: Creates a new DebugToken for the specified app. For security reasons, after the creation operation completes, the `token` field cannot be updated or retrieved, but you can revoke the debug token using DeleteDebugToken. Each app can have a maximum of 20 debug tokens.
      operationId: firebaseappcheck.projects.apps.debugTokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: debug_tokens
      x-stackQL-verb: insert
  /v1/projects/{projectsId}/apps/{appsId}/recaptchaV3Config:
    parameters: *ref_1
    get:
      description: Gets the RecaptchaV3Config for the specified app. For security reasons, the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recaptcha_v3_config
      x-stackQL-verb: select
    patch:
      description: Updates the RecaptchaV3Config for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange reCAPTCHA tokens for App Check tokens. For security reasons, the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: recaptcha_v3_config
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/-/recaptchaV3Config:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the RecaptchaV3Configs for the specified list of apps. For security reasons, the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: recaptcha_v3_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/{appsId}/deviceCheckConfig:
    parameters: *ref_1
    patch:
      description: Updates the DeviceCheckConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange DeviceCheck tokens for App Check tokens. For security reasons, the `private_key` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: device_check_config
      x-stackQL-verb: exec
    get:
      description: Gets the DeviceCheckConfig for the specified app. For security reasons, the `private_key` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: device_check_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/-/deviceCheckConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the DeviceCheckConfigs for the specified list of apps. For security reasons, the `private_key` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: device_check_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/{appsId}/recaptchaEnterpriseConfig:
    parameters: *ref_1
    get:
      description: Gets the RecaptchaEnterpriseConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: recaptcha_enterprise_config
      x-stackQL-verb: select
    patch:
      description: Updates the RecaptchaEnterpriseConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange reCAPTCHA Enterprise tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: recaptcha_enterprise_config
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/-/recaptchaEnterpriseConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the RecaptchaEnterpriseConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: recaptcha_enterprise_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/-/playIntegrityConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the PlayIntegrityConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
      x-stackQL-resource: play_integrity_config
      x-stackQL-verb: select
  /v1/projects/{projectsId}/apps/{appsId}/playIntegrityConfig:
    parameters: *ref_1
    get:
      description: Gets the PlayIntegrityConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: play_integrity_config
      x-stackQL-verb: select
    patch:
      description: Updates the PlayIntegrityConfig for the specified app. While this configuration is incomplete or invalid, the app will be unable to exchange Play Integrity tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: play_integrity_config
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:generateAppAttestChallenge:
    parameters: *ref_1
    post:
      description: Generates a challenge that protects the integrity of an immediately following call to ExchangeAppAttestAttestation or ExchangeAppAttestAssertion. A challenge should not be reused for multiple calls.
      operationId: firebaseappcheck.projects.apps.generateAppAttestChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeCustomToken:
    parameters: *ref_1
    post:
      description: Validates a custom token signed using your project's Admin SDK service account credentials. If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaEnterpriseToken:
    parameters: *ref_1
    post:
      description: Validates a [reCAPTCHA Enterprise response token](https://cloud.google.com/recaptcha-enterprise/docs/create-assessment#retrieve_token). If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeRecaptchaEnterpriseToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangePlayIntegrityToken:
    parameters: *ref_1
    post:
      description: Validates an [integrity verdict response token from Play Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify). If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangePlayIntegrityToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAttestation:
    parameters: *ref_1
    post:
      description: Accepts an App Attest CBOR attestation and verifies it with Apple using your preconfigured team and bundle IDs. If valid, returns an attestation artifact that can later be exchanged for an AppCheckToken using ExchangeAppAttestAssertion. For convenience and performance, this method's response object will also contain an AppCheckToken (if the verification is successful).
      operationId: firebaseappcheck.projects.apps.exchangeAppAttestAttestation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaV3Token:
    parameters: *ref_1
    post:
      description: Validates a [reCAPTCHA v3 response token](https://developers.google.com/recaptcha/docs/v3). If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeRecaptchaV3Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeSafetyNetToken:
    parameters: *ref_1
    post:
      description: Validates a [SafetyNet token](https://developer.android.com/training/safetynet/attestation#request-attestation-step). If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeSafetyNetToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAssertion:
    parameters: *ref_1
    post:
      description: Accepts an App Attest assertion and an artifact previously obtained from ExchangeAppAttestAttestation and verifies those with Apple. If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeAppAttestAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeDebugToken:
    parameters: *ref_1
    post:
      description: Validates a debug token secret that you have previously created using CreateDebugToken. If valid, returns an AppCheckToken. Note that a restrictive quota is enforced on this method to prevent accidental exposure of the app to abuse.
      operationId: firebaseappcheck.projects.apps.exchangeDebugToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:generatePlayIntegrityChallenge:
    parameters: *ref_1
    post:
      description: Generates a challenge that protects the integrity of an immediately following integrity verdict request to the Play Integrity API. The next call to ExchangePlayIntegrityToken using the resulting integrity token will verify the presence and validity of the challenge. A challenge should not be reused for multiple calls.
      operationId: firebaseappcheck.projects.apps.generatePlayIntegrityChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/apps/{appsId}:exchangeDeviceCheckToken:
    parameters: *ref_1
    post:
      description: Accepts a [`device_token`](https://developer.apple.com/documentation/devicecheck/dcdevice) issued by DeviceCheck, and attempts to validate it with Apple. If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeDeviceCheckToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
      x-stackQL-resource: apps
      x-stackQL-verb: exec
  /v1/projects/{projectsId}/services:
    parameters: *ref_1
    get:
      description: Lists all Service configurations for the specified project. Only Services which were explicitly configured using UpdateService or BatchUpdateServices will be returned.
      operationId: firebaseappcheck.projects.services.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ListServicesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: select
  /v1/projects/{projectsId}/services/{servicesId}:
    parameters: *ref_1
    patch:
      description: Updates the specified Service configuration.
      operationId: firebaseappcheck.projects.services.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: exec
    get:
      description: Gets the Service configuration for the specified service name.
      operationId: firebaseappcheck.projects.services.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: select
  /v1/projects/{projectsId}/services:batchUpdate:
    parameters: *ref_1
    post:
      description: Atomically updates the specified Service configurations.
      operationId: firebaseappcheck.projects.services.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateServicesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateServicesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: services
      x-stackQL-verb: exec
  /v1/jwks:
    parameters: *ref_1
    get:
      description: Returns a public JWK set as specified by [RFC 7517](https://tools.ietf.org/html/rfc7517) that can be used to verify App Check tokens. Exactly one of the public keys in the returned set will successfully validate any App Check token that is currently valid.
      operationId: firebaseappcheck.jwks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PublicJwkSet'
      parameters: []
      x-stackQL-resource: jwks
      x-stackQL-verb: select
