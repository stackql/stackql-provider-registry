openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Firebase App Hosting API
  description: >-
    Firebase App Hosting streamlines the development and deployment of dynamic
    Next.js and Angular applications, offering built-in framework support,
    GitHub integration, and integration with other Firebase products. You can
    use this API to intervene in the Firebase App Hosting build process and add
    custom functionality not supported in our default Console & CLI flows,
    including triggering builds from external CI/CD workflows or deploying from
    pre-built container images. 
  version: v1
  x-discovery-doc-revision: '20250821'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://firebase.google.com/docs/app-hosting
servers:
  - url: https://firebaseapphosting.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    ListOperationsResponse:
      id: ListOperationsResponse
      description: The response message for Operations.ListOperations.
      type: object
      properties:
        operations:
          description: >-
            A list of operations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Operation:
      id: Operation
      description: >-
        This resource represents a long-running operation that is the result of
        a network API call.
      type: object
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that originally returns it. If you use the default HTTP
            mapping, the `name` should be a resource name ending with
            `operations/{unique_id}`.
          type: string
        metadata:
          description: >-
            Service-specific metadata associated with the operation. It
            typically contains progress information and common metadata such as
            create time. Some services might not provide such metadata. Any
            method that returns a long-running operation should document the
            metadata type, if any.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress. If `true`, the operation is completed, and either `error`
            or `response` is available.
          type: boolean
        error:
          description: >-
            The error result of the operation in case of failure or
            cancellation.
          $ref: '#/components/schemas/Status'
        response:
          description: >-
            The normal, successful response of the operation. If the original
            method returns no data on success, such as `Delete`, the response is
            `google.protobuf.Empty`. If the original method is standard
            `Get`/`Create`/`Update`, the response should be the resource. For
            other methods, the response should have the type `XxxResponse`,
            where `Xxx` is the original method name. For example, if the
            original method name is `TakeSnapshot()`, the inferred response type
            is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    Status:
      id: Status
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details. There is a common
            set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    CancelOperationRequest:
      id: CancelOperationRequest
      description: The request message for Operations.CancelOperation.
      type: object
      properties: {}
    ListBackendsResponse:
      id: ListBackendsResponse
      description: Message for response to list backends
      type: object
      properties:
        backends:
          description: The list of backends
          type: array
          items:
            $ref: '#/components/schemas/Backend'
        nextPageToken:
          description: >-
            A token identifying the next page of results the server should
            return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Backend:
      id: Backend
      description: A backend is the primary resource of App Hosting.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the backend. Format:
            `projects/{project}/locations/{locationId}/backends/{backendId}`.
          type: string
        displayName:
          description: Optional. Human-readable name. 63 character limit.
          type: string
        mode:
          description: 'Optional. Deprecated: Use `environment` instead.'
          deprecated: true
          type: string
        servingLocality:
          description: >-
            Required. Immutable. Specifies how App Hosting will serve the
            content for this backend. It will either be contained to a single
            region (REGIONAL_STRICT) or allowed to use App Hosting's
            global-replicated serving infrastructure (GLOBAL_ACCESS).
          type: string
          enumDescriptions:
            - Unspecified. Will return an error if used.
            - >-
              In this mode, App Hosting serves your backend's content from your
              chosen parent region. App Hosting only maintains data and serving
              infrastructure in that chosen region and does not replicate your
              data to other regions.
            - >-
              In this mode, App Hosting serves your backend's content from
              multiple points-of-presence (POP) across the globe. App Hosting
              replicates your backend's configuration and cached data to these
              POPs and uses a global CDN to further decrease response latency.
              App Hosting-maintained Cloud Resources on your project, such as
              Cloud Run services, Cloud Build build, and Artifact Registry
              Images are still confined to your backend's parent region.
              Responses cached by the CDN may be stored in the POPs for the
              duration of the cache's TTL.
          enum:
            - SERVING_LOCALITY_UNSPECIFIED
            - REGIONAL_STRICT
            - GLOBAL_ACCESS
        codebase:
          description: >-
            Optional. If specified, the connection to an external source
            repository to watch for event-driven updates to the backend.
          $ref: '#/components/schemas/Codebase'
        uri:
          description: Output only. The primary URI to communicate with the backend.
          readOnly: true
          type: string
        managedResources:
          description: Output only. A list of the resources managed by this backend.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedResource'
        serviceAccount:
          description: >-
            Required. The name of the service account used for Cloud Build and
            Cloud Run. Should have the role
            roles/firebaseapphosting.computeRunner or equivalent permissions.
          type: string
        appId:
          description: >-
            Optional. The [ID of a Web
            App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id)
            associated with the backend.
          type: string
        environment:
          description: >-
            Optional. The environment name of the backend, used to load
            environment variables from environment specific configuration.
          type: string
        reconciling:
          description: >-
            Output only. A field that, if true, indicates that the system is
            working to make adjustments to the backend during a LRO.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Time at which the backend was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time at which the backend was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. Time at which the backend was deleted.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Unstructured key value map that can be used to organize
            and categorize objects.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Unstructured key value map that may be set by external
            tools to store and arbitrary metadata. They are not queryable and
            should be preserved when modifying objects.
          type: object
          additionalProperties:
            type: string
        uid:
          description: Output only. System-assigned, unique identifier.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. Server-computed checksum based on other values; may be
            sent on update or delete to ensure operation is done on expected
            resource.
          readOnly: true
          type: string
    Codebase:
      id: Codebase
      description: >-
        The connection to an external source repository to watch for
        event-driven updates to the backend.
      type: object
      properties:
        repository:
          description: >-
            Required. The resource name for the Developer Connect
            [`gitRepositoryLink`](https://cloud.google.com/developer-connect/docs/api/reference/rest/v1/projects.locations.connections.gitRepositoryLinks)
            connected to this backend, in the format:
            `projects/{project}/locations/{location}/connections/{connection}/gitRepositoryLinks/{repositoryLink}`
            The connection for the `gitRepositoryLink` must made be using the
            Firebase App Hosting GitHub App via the Firebase Console.
          type: string
        rootDirectory:
          description: >-
            Optional. If `repository` is provided, the directory relative to the
            root of the repository to use as the root for the deployed web app.
          type: string
    ManagedResource:
      id: ManagedResource
      description: An external resource managed by App Hosting on the project.
      type: object
      properties:
        runService:
          description: >-
            A Cloud Run
            [`service`](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services#resource:-service),
            managed by App Hosting.
          $ref: '#/components/schemas/RunService'
    RunService:
      id: RunService
      description: >-
        A managed Cloud Run
        [`service`](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services#resource:-service).
      type: object
      properties:
        service:
          description: >-
            Optional. The name of the Cloud Run
            [`service`](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services#resource:-service),
            in the format:
            `projects/{project}/locations/{location}/services/{serviceId}`
          type: string
    Traffic:
      id: Traffic
      description: Controls traffic configuration for the backend.
      type: object
      properties:
        target:
          description: >-
            Set to manually control the desired traffic for the backend. This
            will cause `current` to eventually match this value. The percentages
            must add up to 100%.
          $ref: '#/components/schemas/TrafficSet'
        rolloutPolicy:
          description: >-
            A rollout policy specifies how new builds and automatic deployments
            are created.
          $ref: '#/components/schemas/RolloutPolicy'
        name:
          description: >-
            Identifier. The resource name of the backend's traffic. Format:
            `projects/{project}/locations/{locationId}/backends/{backendId}/traffic`.
          type: string
        current:
          description: >-
            Output only. Current state of traffic allocation for the backend.
            When setting `target`, this field may differ for some time until the
            desired state is reached.
          readOnly: true
          $ref: '#/components/schemas/TrafficSet'
        reconciling:
          description: >-
            Output only. A field that, if true, indicates that the system is
            working to make the backend's `current` match the requested `target`
            list.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Time at which the backend was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time at which the backend was last updated.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Unstructured key value map that can be used to organize
            and categorize objects.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Unstructured key value map that may be set by external
            tools to store and arbitrary metadata. They are not queryable and
            should be preserved when modifying objects.
          type: object
          additionalProperties:
            type: string
        etag:
          description: >-
            Output only. Server-computed checksum based on other values; may be
            sent on update or delete to ensure operation is done on expected
            resource.
          readOnly: true
          type: string
        uid:
          description: Output only. System-assigned, unique identifier.
          readOnly: true
          type: string
    TrafficSet:
      id: TrafficSet
      description: >-
        A list of traffic splits that together represent where traffic is being
        routed.
      type: object
      properties:
        splits:
          description: Required. The list of traffic splits.
          type: array
          items:
            $ref: '#/components/schemas/TrafficSplit'
    TrafficSplit:
      id: TrafficSplit
      description: The traffic allocation for the backend.
      type: object
      properties:
        build:
          description: Required. The build that traffic is being routed to.
          type: string
        percent:
          description: >-
            Required. The percentage of traffic to send to the build. Currently
            must be 100% or 0%.
          type: integer
          format: int32
    RolloutPolicy:
      id: RolloutPolicy
      description: >-
        The policy for how automatic builds and rollouts are triggered and
        rolled out.
      type: object
      properties:
        codebaseBranch:
          description: >-
            If set, specifies a branch that triggers a new build to be started
            with this policy. Otherwise, no automatic rollouts will happen.
          type: string
        disabled:
          description: >-
            Optional. A flag that, if true, prevents automatic rollouts from
            being created via this RolloutPolicy.
          type: boolean
        disabledTime:
          description: >-
            Output only. If `disabled` is set, the time at which the automatic
            rollouts were disabled.
          readOnly: true
          type: string
          format: google-datetime
    ListBuildsResponse:
      id: ListBuildsResponse
      description: Message for response to list builds.
      type: object
      properties:
        builds:
          description: The list of builds.
          type: array
          items:
            $ref: '#/components/schemas/Build'
        nextPageToken:
          description: >-
            A token identifying the next page of results the server should
            return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Build:
      id: Build
      description: >-
        A single build for a backend, at a specific point codebase reference tag
        and point in time. Encapsulates several resources, including an Artifact
        Registry container image, a Cloud Build invocation that built the image,
        and the Cloud Run revision that uses that image.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the build. Format:
            `projects/{project}/locations/{locationId}/backends/{backendId}/builds/{buildId}`.
          type: string
        displayName:
          description: Optional. Human-readable name. 63 character limit.
          type: string
        state:
          description: Output only. The state of the build.
          readOnly: true
          type: string
          enumDescriptions:
            - The build is in an unknown state.
            - The build is building.
            - >-
              The build has completed and is awaiting the next step. This may
              move to DEPLOYING once App Hosting starts to set up
              infrastructure.
            - The infrastructure for this build is being set up.
            - >-
              The infrastructure for this build is ready. The build may or may
              not be serving traffic - see `Backend.traffic` for the current
              state, or `Backend.traffic_statuses` for the desired state.
            - The build has failed.
          enum:
            - STATE_UNSPECIFIED
            - BUILDING
            - BUILT
            - DEPLOYING
            - READY
            - FAILED
        errors:
          description: >-
            Output only. A list of all errors that occurred during an App
            Hosting build.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Error'
        environment:
          description: >-
            Output only. The environment name of the backend when this build was
            created.
          readOnly: true
          type: string
        config:
          description: Optional. Additional configuration of the service.
          $ref: '#/components/schemas/Config'
        image:
          description: >-
            Output only. The Artifact Registry [container
            image](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.dockerImages)
            URI, used by the Cloud Run
            [`revision`](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services.revisions)
            for this build.
          readOnly: true
          type: string
        source:
          description: Required. Immutable. The source for the build.
          $ref: '#/components/schemas/BuildSource'
        buildLogsUri:
          description: >-
            Output only. The location of the [Cloud Build
            logs](https://cloud.google.com/build/docs/view-build-results) for
            the build process.
          readOnly: true
          type: string
        reconciling:
          description: >-
            Output only. A field that, if true, indicates that the build has an
            ongoing LRO.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Time at which the build was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time at which the build was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. Time at which the build was deleted.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Unstructured key value map that can be used to organize
            and categorize objects.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Unstructured key value map that may be set by external
            tools to store and arbitrary metadata. They are not queryable and
            should be preserved when modifying objects.
          type: object
          additionalProperties:
            type: string
        uid:
          description: Output only. System-assigned, unique identifier.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. Server-computed checksum based on other values; may be
            sent on update or delete to ensure operation is done on expected
            resource.
          readOnly: true
          type: string
    Error:
      id: Error
      description: >-
        The container for the rpc status and source for any errors found during
        the build process.
      type: object
      properties:
        error:
          description: >-
            Output only. A status and (human readable) error message for the
            build, if in a `FAILED` state.
          readOnly: true
          $ref: '#/components/schemas/Status'
        errorSource:
          description: >-
            Output only. The source of the error for the build, if in a `FAILED`
            state.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Indicates that generic error occurred outside of the Cloud Build
              or Cloud Run processes, such as a pre-empted or user-canceled App
              Hosting Build.
            - >-
              Indicates that the build failed during the Cloud Build process,
              such as a build timeout.
            - >-
              Indicates that the build failed during the Cloud Run process, such
              as a service creation failure.
          enum:
            - ERROR_SOURCE_UNSPECIFIED
            - CLOUD_BUILD
            - CLOUD_RUN
        cloudResource:
          description: Output only. Resource link
          readOnly: true
          type: string
    Config:
      id: Config
      description: Additional configuration of the backend for this build.
      type: object
      properties:
        runConfig:
          description: >-
            Optional. Additional configuration of the Cloud Run
            [`service`](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services#resource:-service).
          $ref: '#/components/schemas/RunConfig'
        env:
          description: Optional. Environment variables for this build.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
    RunConfig:
      id: RunConfig
      description: >-
        Additional configuration to apply to the Cloud Run
        [`service`](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services#resource:-service).
      type: object
      properties:
        cpu:
          description: >-
            Optional. Number of CPUs used for each serving instance. By default,
            cpu defaults to the Cloud Run's default of 1.0. CPU can be set to
            value 1, 2, 4, 6, or 8 CPUs, and for less than 1 CPU, a value from
            0.08 to less than 1.00, in increments of 0.01. If you set a value of
            less than 1 CPU, you must set concurrency to 1, and CPU will only be
            allocated during request processing. Increasing CPUs limit may
            require increase in memory limits: - 4 CPUs: at least 2 GiB - 6
            CPUs: at least 4 GiB - 8 CPUs: at least 4 GiB
          type: number
          format: float
        memoryMib:
          description: >-
            Optional. Amount of memory allocated for each serving instance in
            MiB. By default, memory defaults to the Cloud Run's default where
            each instance is allocated 512 MiB of memory. Memory can be set to
            any integer value between 128 to 32768. Increasing memory limit may
            require increase in CPUs limits: - Over 4 GiB: at least 2 CPUs -
            Over 8 GiB: at least 4 CPUs - Over 16 GiB: at least 6 CPUs - Over 24
            GiB: at least 8 CPUs
          type: integer
          format: int32
        concurrency:
          description: >-
            Optional. Maximum number of requests that each Cloud Run instance
            can receive. By default, each instance can receive Cloud Run's
            default of up to 80 requests at the same time. Concurrency can be
            set to any integer value up to 1000.
          type: integer
          format: int32
        maxInstances:
          description: >-
            Optional. Number of Cloud Run instances to maintain at maximum for
            each revision. By default, each Cloud Run
            [`service`](https://cloud.google.com/run/docs/reference/rest/v2/projects.locations.services#resource:-service)
            scales out to Cloud Run's default of a maximum of 100 instances. The
            maximum max_instances limit is based on your quota. See
            https://cloud.google.com/run/docs/configuring/max-instances#limits.
          type: integer
          format: int32
        minInstances:
          description: >-
            Optional. Number of Cloud Run instances to maintain at minimum for
            each Cloud Run Service. By default, there are no minimum. Even if
            the service splits traffic across multiple revisions, the total
            number of instances for a service will be capped at this value.
          type: integer
          format: int32
    EnvironmentVariable:
      id: EnvironmentVariable
      description: Environment variables for this build.
      type: object
      properties:
        value:
          description: >-
            A plaintext value. This value is encrypted at rest, but all project
            readers can view the value when reading your backend configuration.
          type: string
        secret:
          description: >-
            A fully qualified secret version. The value of the secret will be
            accessed once while building the application and once per cold start
            of the container at runtime. The service account used by Cloud Build
            and by Cloud Run must each have the `secretmanager.versions.access`
            permission on the secret.
          type: string
        variable:
          description: >-
            Required. The name of the environment variable. - Must be a valid
            environment variable name (e.g. A-Z or underscores). - May not start
            with "FIREBASE" or "GOOGLE". - May not be a reserved environment
            variable for KNative/Cloud Run
          type: string
        availability:
          description: >-
            Optional. Where this variable should be made available. If left
            unspecified, will be available in both BUILD and BACKEND.
          type: array
          items:
            type: string
            enumDescriptions:
              - The default value, unspecified, which is unused.
              - This value is available when creating a Build from source code.
              - This value is available at runtime within Cloud Run.
            enum:
              - AVAILABILITY_UNSPECIFIED
              - BUILD
              - RUNTIME
    BuildSource:
      id: BuildSource
      description: The source for the build.
      type: object
      properties:
        codebase:
          description: A codebase source.
          $ref: '#/components/schemas/CodebaseSource'
        container:
          description: An Artifact Registry container image source.
          $ref: '#/components/schemas/ContainerSource'
    CodebaseSource:
      id: CodebaseSource
      description: >-
        A codebase source, representing the state of the codebase that the build
        will be created at.
      type: object
      properties:
        branch:
          description: The branch in the codebase to build from, using the latest commit.
          type: string
        commit:
          description: The commit in the codebase to build from.
          type: string
        displayName:
          description: >-
            Output only. The human-friendly name to use for this Codebase when
            displaying a build. We use the first eight characters of the SHA-1
            hash for GitHub.com.
          readOnly: true
          type: string
        hash:
          description: Output only. The full SHA-1 hash of a Git commit, if available.
          readOnly: true
          type: string
        commitMessage:
          description: Output only. The message of a codebase change.
          readOnly: true
          type: string
        uri:
          description: >-
            Output only. A URI linking to the codebase on an hosting provider's
            website. May not be valid if the commit has been rebased or
            force-pushed out of existence in the linked repository.
          readOnly: true
          type: string
        author:
          description: >-
            Output only. The author contained in the metadata of a version
            control change.
          readOnly: true
          $ref: '#/components/schemas/UserMetadata'
        commitTime:
          description: Output only. The time the change was made.
          readOnly: true
          type: string
          format: google-datetime
    UserMetadata:
      id: UserMetadata
      description: >-
        Version control metadata for a user associated with a resolved codebase.
        Currently assumes a Git user.
      type: object
      properties:
        displayName:
          description: >-
            Output only. The 'name' field in a Git user's git.config. Required
            by Git.
          readOnly: true
          type: string
        email:
          description: >-
            Output only. The 'email' field in a Git user's git.config, if
            available.
          readOnly: true
          type: string
        imageUri:
          description: >-
            Output only. The URI of an image file associated with the user's
            account in an external source control provider, if available.
          readOnly: true
          type: string
    ContainerSource:
      id: ContainerSource
      description: >-
        The URI of an Artifact Registry [container
        image](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.dockerImages)
        to use as the build source.
      type: object
      properties:
        image:
          description: Required. A URI representing a container for the backend to use.
          type: string
    ListRolloutsResponse:
      id: ListRolloutsResponse
      description: Message for response to list rollouts.
      type: object
      properties:
        rollouts:
          description: The list of rollouts.
          type: array
          items:
            $ref: '#/components/schemas/Rollout'
        nextPageToken:
          description: >-
            A token identifying the next page of results the server should
            return.
          type: string
        unreachable:
          description: Locations that could not be reached.
          type: array
          items:
            type: string
    Rollout:
      id: Rollout
      description: A single rollout of a build for a backend.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the rollout. Format:
            `projects/{project}/locations/{locationId}/backends/{backendId}/rollouts/{rolloutId}`.
          type: string
        displayName:
          description: Optional. Human-readable name. 63 character limit.
          type: string
        state:
          description: Output only. The state of the rollout.
          readOnly: true
          type: string
          enumDescriptions:
            - The rollout is in an unknown state.
            - >-
              The rollout is waiting for actuation to begin. This may be because
              it is waiting on another rollout to complete.
            - >-
              The rollout is waiting for the build process to complete, which
              builds the code and sets up the underlying infrastructure.
            - The rollout has started and is actively modifying traffic.
            - >-
              The rollout has been paused due to either being manually paused or
              a PAUSED stage. This should be set while `paused = true`.
            - The rollout has completed.
            - The rollout has failed. See error for more information.
            - The rollout has been cancelled.
          enum:
            - STATE_UNSPECIFIED
            - QUEUED
            - PENDING_BUILD
            - PROGRESSING
            - PAUSED
            - SUCCEEDED
            - FAILED
            - CANCELLED
        error:
          description: >-
            Output only. A status and (human readable) error message for the
            rollout, if in a `FAILED` state.
          readOnly: true
          $ref: '#/components/schemas/Status'
        build:
          description: >-
            Immutable. The name of a build that already exists. It doesn't have
            to be built; a rollout will wait for a build to be ready before
            updating traffic.
          type: string
        reconciling:
          description: >-
            Output only. A field that, if true, indicates that the Rollout
            currently has an LRO.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. Time at which the rollout was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time at which the rollout was last updated.
          readOnly: true
          type: string
          format: google-datetime
        deleteTime:
          description: Output only. Time at which the rollout was deleted.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: >-
            Optional. Unstructured key value map that can be used to organize
            and categorize objects.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: >-
            Optional. Unstructured key value map that may be set by external
            tools to store and arbitrary metadata. They are not queryable and
            should be preserved when modifying objects.
          type: object
          additionalProperties:
            type: string
        uid:
          description: Output only. System-assigned, unique identifier.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. Server-computed checksum based on other values; may be
            sent on update or delete to ensure operation is done on expected
            resource.
          readOnly: true
          type: string
    ListDomainsResponse:
      id: ListDomainsResponse
      description: Message for response to list domains.
      type: object
      properties:
        domains:
          description: Output only. The list of domains.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Domain'
        nextPageToken:
          description: >-
            Output only. A token identifying the next page of results the server
            should return.
          readOnly: true
          type: string
        unreachable:
          description: Output only. Locations that could not be reached.
          readOnly: true
          type: array
          items:
            type: string
    Domain:
      id: Domain
      description: A domain name that is associated with a backend.
      type: object
      properties:
        name:
          description: >-
            Identifier. The resource name of the domain, e.g.
            `/projects/p/locations/l/backends/b/domains/foo.com`
          type: string
        displayName:
          description: >-
            Optional. Mutable human-readable name for the domain. 63 character
            limit. e.g. `prod domain`.
          type: string
        createTime:
          description: Output only. Time at which the domain was created.
          readOnly: true
          type: string
          format: google-datetime
        updateTime:
          description: Output only. Time at which the domain was last updated.
          readOnly: true
          type: string
          format: google-datetime
        type:
          description: Output only. The type of the domain.
          readOnly: true
          type: string
          enumDescriptions:
            - The type is unspecified (this should not happen).
            - >-
              Default, App Hosting-provided and managed domains. These domains
              are created automatically with their parent backend and cannot be
              deleted except by deleting that parent, and cannot be moved to
              another backend. Default domains can be disabled via the
              `disabled` field.
            - >-
              Custom, developer-owned domains. Custom Domains allow you to
              associate a domain you own with your App Hosting backend, and
              configure that domain to serve your backend's content.
          enum:
            - TYPE_UNSPECIFIED
            - DEFAULT
            - CUSTOM
        disabled:
          description: Optional. Whether the domain is disabled. Defaults to false.
          type: boolean
        serve:
          description: >-
            Optional. The serving behavior of the domain. If specified, the
            domain will serve content other than its backend's live content.
          $ref: '#/components/schemas/ServingBehavior'
        customDomainStatus:
          description: >-
            Output only. Represents the state and configuration of a `CUSTOM`
            type domain. It is only present on Domains of that type.
          readOnly: true
          $ref: '#/components/schemas/CustomDomainStatus'
        reconciling:
          description: >-
            Output only. A field that, if true, indicates that the build has an
            ongoing LRO.
          readOnly: true
          type: boolean
        deleteTime:
          description: Output only. Time at which the domain was deleted.
          readOnly: true
          type: string
          format: google-datetime
        labels:
          description: Optional. Labels as key value pairs.
          type: object
          additionalProperties:
            type: string
        annotations:
          description: Optional. Annotations as key value pairs.
          type: object
          additionalProperties:
            type: string
        uid:
          description: Output only. System-assigned, unique identifier.
          readOnly: true
          type: string
        etag:
          description: >-
            Output only. Server-computed checksum based on other values; may be
            sent on update or delete to ensure operation is done on expected
            resource.
          readOnly: true
          type: string
    ServingBehavior:
      id: ServingBehavior
      description: Indicates whether App Hosting will serve content on the domain.
      type: object
      properties:
        redirect:
          description: Optional. Redirect behavior for a domain, if provided.
          $ref: '#/components/schemas/Redirect'
    Redirect:
      id: Redirect
      description: Specifies redirect behavior for a domain.
      type: object
      properties:
        uri:
          description: >-
            Required. The URI of the redirect's intended destination. This URI
            will be prepended to the original request path. URI without a scheme
            are assumed to be HTTPS.
          type: string
        status:
          description: >-
            Optional. The status code to use in a redirect response. Must be a
            valid HTTP 3XX status code. Defaults to 302 if not present.
          type: string
          format: int64
    CustomDomainStatus:
      id: CustomDomainStatus
      description: The status of a custom domain's linkage to a backend.
      type: object
      properties:
        hostState:
          description: >-
            Output only. Tracks whether a custom domain is detected as
            appropriately directing traffic to App Hosting.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Your custom domain's host state is unspecified. The message is
              invalid if this is unspecified.
            - Your custom domain isn't associated with any IP addresses.
            - >-
              Your custom domain can't be reached. App Hosting services' DNS
              queries to find your domain's IP addresses resulted in errors. See
              your `CustomDomainStatus`'s `issues` field for more details.
            - >-
              Your domain has only IP addresses that don't ultimately resolve to
              App Hosting.
            - >-
              Your domain has IP addresses that resolve to both App Hosting and
              to other services. To ensure consistent results, remove `A` and
              `AAAA` records related to non-App-Hosting services.
            - >-
              Your domain has IP addresses that resolve to an incorrect instance
              of the App Hosting Data Plane. App Hosting has multiple data plane
              instances to ensure high availability. The SSL certificate that
              App Hosting creates for your domain is only available on its
              assigned instance. If your domain's IP addresses resolve to an
              incorrect instance, App Hosting won't be able to serve secure
              content on it.
            - >-
              All requests against your domain are served by App Hosting, via
              your domain's assigned shard. If the custom domain's
              `OwnershipState` is also `OWNERSHIP_ACTIVE`, App Hosting serves
              its backend's content on requests for the domain.
          enum:
            - HOST_STATE_UNSPECIFIED
            - HOST_UNHOSTED
            - HOST_UNREACHABLE
            - HOST_NON_FAH
            - HOST_CONFLICT
            - HOST_WRONG_SHARD
            - HOST_ACTIVE
        ownershipState:
          description: >-
            Output only. Tracks whether the backend is permitted to serve
            content on the domain, based off the domain's DNS records.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Your custom domain's ownership state is unspecified. This should
              never happen.
            - >-
              Your custom domain's domain has no App-Hosting-related ownership
              records; no backend is authorized to serve on the domain in this
              Origin shard.
            - >-
              Your custom domain can't be reached. App Hosting services' DNS
              queries to find your domain's ownership records resulted in
              errors. See your `CustomDomainStatus`'s `issues` field for more
              details.
            - >-
              Your custom domain is owned by another App Hosting custom domain.
              Remove the conflicting records and replace them with records for
              your current custom domain.
            - >-
              Your custom domain has conflicting `TXT` records that indicate
              ownership by both your current custom domain one or more others.
              Remove the extraneous ownership records to grant the current
              custom domain ownership.
            - >-
              Your custom domain's DNS records are configured correctly. App
              Hosting will transfer ownership of your domain to this custom
              domain within 24 hours.
            - Your custom domain owns its domain.
          enum:
            - OWNERSHIP_STATE_UNSPECIFIED
            - OWNERSHIP_MISSING
            - OWNERSHIP_UNREACHABLE
            - OWNERSHIP_MISMATCH
            - OWNERSHIP_CONFLICT
            - OWNERSHIP_PENDING
            - OWNERSHIP_ACTIVE
        certState:
          description: Output only. Tracks SSL certificate status for the domain.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              The certificate's state is unspecified. The message is invalid if
              this is unspecified.
            - >-
              The initial state of every certificate, represents App Hosting's
              intent to create a certificate before requests to a Certificate
              Authority are made.
            - >-
              App Hosting is validating whether a domain name's DNS records are
              in a state that allow certificate creation on its behalf.
            - >-
              The certificate was recently created, and needs time to propagate
              in App Hosting's load balancers.
            - >-
              The certificate is active, providing secure connections for the
              domain names it represents.
            - >-
              The certificate is expiring, all domain names on it will be given
              new certificates.
            - >-
              The certificate has expired. App Hosting can no longer serve
              secure content on your domain name.
          enum:
            - CERT_STATE_UNSPECIFIED
            - CERT_PREPARING
            - CERT_VALIDATING
            - CERT_PROPAGATING
            - CERT_ACTIVE
            - CERT_EXPIRING_SOON
            - CERT_EXPIRED
        requiredDnsUpdates:
          description: >-
            Output only. Lists the records that must added or removed to a
            custom domain's DNS in order to finish setup and start serving
            content. Field is present during onboarding. Also present after
            onboarding if one or more of the above states is not *_ACTIVE,
            indicating the domain's DNS records are in a bad state.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsUpdates'
        issues:
          description: >-
            Output only. A list of issues with domain configuration. Allows
            users to self-correct problems with DNS records.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Status'
    DnsUpdates:
      id: DnsUpdates
      description: >-
        A set of DNS record updates that you should make to allow App Hosting to
        serve secure content in response to requests against your domain. These
        updates present the current state of your domain's and related
        subdomains' DNS records when App Hosting last queried them, and the
        desired set of records that App Hosting needs to see before your custom
        domain can be fully active.
      type: object
      properties:
        domainName:
          description: Output only. The domain name the DNS updates pertain to.
          readOnly: true
          type: string
        discovered:
          description: >-
            Output only. The set of DNS records App Hosting discovered when
            inspecting a domain.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSet'
        desired:
          description: >-
            Output only. The set of DNS records App Hosting needs in order to be
            able to serve secure content on the domain.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsRecordSet'
        checkTime:
          description: >-
            Output only. The last time App Hosting checked your custom domain's
            DNS records.
          readOnly: true
          type: string
          format: google-datetime
    DnsRecordSet:
      id: DnsRecordSet
      description: >-
        A set of DNS records relevant to the setup and maintenance of a custom
        domain in App Hosting.
      type: object
      properties:
        domainName:
          description: Output only. The domain name the record set pertains to.
          readOnly: true
          type: string
        checkError:
          description: >-
            Output only. An error App Hosting services encountered when querying
            your domain's DNS records. Note: App Hosting ignores `NXDOMAIN`
            errors, as those generally just mean that a domain name hasn't been
            set up yet.
          readOnly: true
          $ref: '#/components/schemas/Status'
        records:
          description: Output only. Records on the domain.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsRecord'
    DnsRecord:
      id: DnsRecord
      description: >-
        A representation of a DNS records for a domain. DNS records are resource
        records that define how systems and services should behave when handling
        requests for a domain. For example, when you add `A` records to your
        domain's DNS records, you're informing other systems (such as your
        users' web browsers) to contact those IPv4 addresses to retrieve
        resources relevant to your domain (such as your App Hosting files).
      type: object
      properties:
        domainName:
          description: Output only. The domain the record pertains to, e.g. `foo.bar.com.`.
          readOnly: true
          type: string
        type:
          description: >-
            Output only. The record's type, which determines what data the
            record contains.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              The record's type is unspecified. The message is invalid if this
              is unspecified.
            - >-
              An `A` record, as defined in [RFC
              1035](https://tools.ietf.org/html/rfc1035). A records determine
              which IPv4 addresses a domain directs traffic towards.
            - >-
              A `CNAME` record, as defined in [RFC
              1035](https://tools.ietf.org/html/rfc1035). `CNAME` or Canonical
              Name records map a domain to a different, canonical domain. If a
              `CNAME` record is present, it should be the only record on the
              domain.
            - >-
              A `TXT` record, as defined in [RFC
              1035](https://tools.ietf.org/html/rfc1035). `TXT` records hold
              arbitrary text data on a domain. Hosting uses `TXT` records to
              establish which Firebase Project has permission to act on a
              domain.
            - >-
              An AAAA record, as defined in [RFC
              3596](https://tools.ietf.org/html/rfc3596) AAAA records determine
              which IPv6 addresses a domain directs traffic towards.
            - >-
              A CAA record, as defined in [RFC
              6844](https://tools.ietf.org/html/rfc6844). CAA, or Certificate
              Authority Authorization, records determine which Certificate
              Authorities (SSL certificate minting organizations) are authorized
              to mint a certificate for the domain. App Hosting uses `pki.goog`
              as its primary CA. CAA records cascade. A CAA record on `foo.com`
              also applies to `bar.foo.com` unless `bar.foo.com` has its own set
              of CAA records. CAA records are optional. If a domain and its
              parents have no CAA records, all CAs are authorized to mint
              certificates on its behalf. In general, App Hosting only asks you
              to modify CAA records when doing so is required to unblock SSL
              cert creation.
          enum:
            - TYPE_UNSPECIFIED
            - A
            - CNAME
            - TXT
            - AAAA
            - CAA
        rdata:
          description: >-
            Output only. The data of the record. The meaning of the value
            depends on record type: - A and AAAA: IP addresses for the domain. -
            CNAME: Another domain to check for records. - TXT: Arbitrary text
            strings associated with the domain. App Hosting uses TXT records to
            determine which Firebase projects have permission to act on the
            domain's behalf. - CAA: The record's flags, tag, and value, e.g. `0
            issue "pki.goog"`.
          readOnly: true
          type: string
        requiredAction:
          description: >-
            Output only. An enum that indicates the a required action for this
            record. Populated when the record is part of a required change in a
            `DnsUpdates` `discovered` or `desired` record set.
          readOnly: true
          type: string
          enumDescriptions:
            - No action necessary.
            - Add this record to your DNS records.
            - Remove this record from your DNS records.
          enum:
            - NONE
            - ADD
            - REMOVE
        relevantState:
          description: >-
            Output only. An enum that indicates which state(s) this DNS record
            applies to. Populated for all records with an `ADD` or `REMOVE`
            required action.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - This message is invalid if this is unspecified.
              - The custom domain's host state.
              - The custom domain's ownership state.
              - The custom domain's certificate state.
            enum:
              - CUSTOM_DOMAIN_STATE_UNSPECIFIED
              - HOST_STATE
              - OWNERSHIP_STATE
              - CERT_STATE
    ListLocationsResponse:
      id: ListLocationsResponse
      description: The response message for Locations.ListLocations.
      type: object
      properties:
        locations:
          description: >-
            A list of locations that matches the specified filter in the
            request.
          type: array
          items:
            $ref: '#/components/schemas/Location'
        nextPageToken:
          description: The standard List next-page token.
          type: string
    Location:
      id: Location
      description: A resource that represents a Google Cloud location.
      type: object
      properties:
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations. For example:
            `"projects/example-project/locations/us-east1"`
          type: string
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        displayName:
          description: >-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          description: >-
            Cross-service attributes for the location. For example
            {"cloud.googleapis.com/region": "us-east1"}
          type: object
          additionalProperties:
            type: string
        metadata:
          description: >-
            Service-specific metadata. For example the available capacity at the
            given location.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
    OperationMetadata:
      id: OperationMetadata
      description: Represents the metadata of a long-running operation.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
    DomainOperationMetadata:
      id: DomainOperationMetadata
      description: Represents the metadata of a long-running operation on domains.
      type: object
      properties:
        createTime:
          description: Output only. The time the operation was created.
          readOnly: true
          type: string
          format: google-datetime
        endTime:
          description: Output only. The time the operation finished running.
          readOnly: true
          type: string
          format: google-datetime
        target:
          description: >-
            Output only. Server-defined resource path for the target of the
            operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        requestedCancellation:
          description: >-
            Output only. Identifies whether the user has requested cancellation
            of the operation. Operations that have been cancelled successfully
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        customDomainOperationMetadata:
          description: Output only. Additional metadata for operations on custom domains.
          readOnly: true
          $ref: '#/components/schemas/CustomDomainOperationMetadata'
    CustomDomainOperationMetadata:
      id: CustomDomainOperationMetadata
      description: Additional metadata for operations on custom domains.
      type: object
      properties:
        hostState:
          description: >-
            Output only. The custom domain's `HostState`, which must be
            `HOST_ACTIVE` for Create operations of the domain name this
            `CustomDomain` refers toto complete.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Your custom domain's host state is unspecified. The message is
              invalid if this is unspecified.
            - Your custom domain isn't associated with any IP addresses.
            - >-
              Your custom domain can't be reached. App Hosting services' DNS
              queries to find your domain's IP addresses resulted in errors. See
              your `CustomDomainStatus`'s `issues` field for more details.
            - >-
              Your domain has only IP addresses that don't ultimately resolve to
              App Hosting.
            - >-
              Your domain has IP addresses that resolve to both App Hosting and
              to other services. To ensure consistent results, remove `A` and
              `AAAA` records related to non-App-Hosting services.
            - >-
              Your domain has IP addresses that resolve to an incorrect instance
              of the App Hosting Data Plane. App Hosting has multiple data plane
              instances to ensure high availability. The SSL certificate that
              App Hosting creates for your domain is only available on its
              assigned instance. If your domain's IP addresses resolve to an
              incorrect instance, App Hosting won't be able to serve secure
              content on it.
            - >-
              All requests against your domain are served by App Hosting, via
              your domain's assigned shard. If the custom domain's
              `OwnershipState` is also `OWNERSHIP_ACTIVE`, App Hosting serves
              its backend's content on requests for the domain.
          enum:
            - HOST_STATE_UNSPECIFIED
            - HOST_UNHOSTED
            - HOST_UNREACHABLE
            - HOST_NON_FAH
            - HOST_CONFLICT
            - HOST_WRONG_SHARD
            - HOST_ACTIVE
        ownershipState:
          description: >-
            Output only. The custom domain's `OwnershipState`, which must be
            `OWNERSHIP_ACTIVE` for the create operations to complete.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              Your custom domain's ownership state is unspecified. This should
              never happen.
            - >-
              Your custom domain's domain has no App-Hosting-related ownership
              records; no backend is authorized to serve on the domain in this
              Origin shard.
            - >-
              Your custom domain can't be reached. App Hosting services' DNS
              queries to find your domain's ownership records resulted in
              errors. See your `CustomDomainStatus`'s `issues` field for more
              details.
            - >-
              Your custom domain is owned by another App Hosting custom domain.
              Remove the conflicting records and replace them with records for
              your current custom domain.
            - >-
              Your custom domain has conflicting `TXT` records that indicate
              ownership by both your current custom domain one or more others.
              Remove the extraneous ownership records to grant the current
              custom domain ownership.
            - >-
              Your custom domain's DNS records are configured correctly. App
              Hosting will transfer ownership of your domain to this custom
              domain within 24 hours.
            - Your custom domain owns its domain.
          enum:
            - OWNERSHIP_STATE_UNSPECIFIED
            - OWNERSHIP_MISSING
            - OWNERSHIP_UNREACHABLE
            - OWNERSHIP_MISMATCH
            - OWNERSHIP_CONFLICT
            - OWNERSHIP_PENDING
            - OWNERSHIP_ACTIVE
        certState:
          description: >-
            Output only. The custom domain's `CertState`, which must be
            `CERT_ACTIVE` for the create operations to complete.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              The certificate's state is unspecified. The message is invalid if
              this is unspecified.
            - >-
              The initial state of every certificate, represents App Hosting's
              intent to create a certificate before requests to a Certificate
              Authority are made.
            - >-
              App Hosting is validating whether a domain name's DNS records are
              in a state that allow certificate creation on its behalf.
            - >-
              The certificate was recently created, and needs time to propagate
              in App Hosting's load balancers.
            - >-
              The certificate is active, providing secure connections for the
              domain names it represents.
            - >-
              The certificate is expiring, all domain names on it will be given
              new certificates.
            - >-
              The certificate has expired. App Hosting can no longer serve
              secure content on your domain name.
          enum:
            - CERT_STATE_UNSPECIFIED
            - CERT_PREPARING
            - CERT_VALIDATING
            - CERT_PROPAGATING
            - CERT_ACTIVE
            - CERT_EXPIRING_SOON
            - CERT_EXPIRED
        issues:
          description: >-
            Output only. A list of issues that are currently preventing the
            operation from completing. These are generally DNS-related issues
            encountered when querying a domain's records or attempting to mint
            an SSL certificate.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Status'
        quickSetupUpdates:
          description: >-
            Output only. A set of DNS record updates to perform, to allow App
            Hosting to serve secure content on the domain.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsUpdates'
        liveMigrationSteps:
          description: >-
            Output only. A list of steps that the user must complete to migrate
            their domain to App Hosting without downtime.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/LiveMigrationStep'
    LiveMigrationStep:
      id: LiveMigrationStep
      description: >-
        A set of updates including ACME challenges and DNS records that allow
        App Hosting to create an SSL certificate and establish project ownership
        for your domain name before you direct traffic to App Hosting servers.
        Use these updates to facilitate zero downtime migrations to App Hosting
        from other services. After you've made the recommended updates, check
        your custom domain's `ownershipState` and `certState`. To avoid
        downtime, they should be `OWNERSHIP_ACTIVE` and `CERT_ACTIVE`,
        respectively, before you update your `A` and `AAAA` records.
      type: object
      properties:
        stepState:
          description: >-
            Output only. The state of the live migration step, indicates whether
            you should work to complete the step now, in the future, or have
            already completed it.
          readOnly: true
          type: string
          enumDescriptions:
            - >-
              The step's state is unspecified. The message is invalid if this is
              unspecified.
            - >-
              App Hosting doesn't have enough information to construct the step
              yet. Complete any prior steps and/or resolve this step's issue to
              proceed.
            - >-
              The step's state is pending. Complete prior steps before working
              on a `PENDING` step.
            - >-
              The step is incomplete. You should complete any `dnsUpdates`
              changes to complete it.
            - >-
              You've done your part to update records and present challenges as
              necessary. App Hosting is now completing background processes to
              complete the step, e.g. minting an SSL cert for your domain.
            - >-
              The step is complete. You've already made the necessary changes to
              your domain and/or prior hosting service to advance to the next
              step. Once all steps are complete, App Hosting is ready to serve
              secure content on your domain.
          enum:
            - STEP_STATE_UNSPECIFIED
            - PREPARING
            - PENDING
            - INCOMPLETE
            - PROCESSING
            - COMPLETE
        relevantDomainStates:
          description: >-
            Output only. One or more states from the `CustomDomainStatus` of the
            migrating domain that this step is attempting to make ACTIVE. For
            example, if the step is attempting to mint an SSL certificate, this
            field will include `CERT_STATE`.
          readOnly: true
          type: array
          items:
            type: string
            enumDescriptions:
              - This message is invalid if this is unspecified.
              - The custom domain's host state.
              - The custom domain's ownership state.
              - The custom domain's certificate state.
            enum:
              - CUSTOM_DOMAIN_STATE_UNSPECIFIED
              - HOST_STATE
              - OWNERSHIP_STATE
              - CERT_STATE
        dnsUpdates:
          description: >-
            Output only. DNS updates to facilitate your domain's zero-downtime
            migration to App Hosting.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DnsUpdates'
        issues:
          description: Output only. Issues that prevent the current step from completing.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Status'
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    locations:
      id: firebase.apphosting.locations
      name: locations
      title: Locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.locations
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: firebase.apphosting.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.operations
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1operations~1{operationsId}:cancel/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    backends:
      id: firebase.apphosting.backends
      name: backends
      title: Backends
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.backends
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/backends/methods/get'
          - $ref: '#/components/x-stackQL-resources/backends/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/backends/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/backends/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/backends/methods/delete'
    traffic:
      id: firebase.apphosting.traffic
      name: traffic
      title: Traffic
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1traffic/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1traffic/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/traffic/methods/get'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/traffic/methods/patch'
        replace: []
        delete: []
    builds:
      id: firebase.apphosting.builds
      name: builds
      title: Builds
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1builds/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.builds
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1builds/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1builds~1{buildsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1builds~1{buildsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/builds/methods/get'
          - $ref: '#/components/x-stackQL-resources/builds/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/builds/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/builds/methods/delete'
    rollouts:
      id: firebase.apphosting.rollouts
      name: rollouts
      title: Rollouts
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1rollouts/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rollouts
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1rollouts/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1rollouts~1{rolloutsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/get'
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/rollouts/methods/create'
        update: []
        replace: []
        delete: []
    domains:
      id: firebase.apphosting.domains
      name: domains
      title: Domains
      methods:
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1domains/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.domains
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1domains/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1domains~1{domainsId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1domains~1{domainsId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1locations~1{locationsId}~1backends~1{backendsId}~1domains~1{domainsId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/domains/methods/get'
          - $ref: '#/components/x-stackQL-resources/domains/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/domains/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete'
paths:
  /v1/projects/{projectsId}/locations:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Lists information about the supported locations for this service.
      operationId: firebaseapphosting.projects.locations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: extraLocationTypes
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}:
    parameters: *ref_1
    get:
      description: Gets information about a location.
      operationId: firebaseapphosting.projects.locations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations:
    parameters: *ref_1
    get:
      description: >-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: firebaseapphosting.projects.locations.operations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the latest state of a long-running operation. Clients can use this
        method to poll the operation result at intervals as recommended by the
        API service.
      operationId: firebaseapphosting.projects.locations.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
    delete:
      description: >-
        Deletes a long-running operation. This method indicates that the client
        is no longer interested in the operation result. It does not cancel the
        operation. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`.
      operationId: firebaseapphosting.projects.locations.operations.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation. The server
        makes a best effort to cancel the operation, but success is not
        guaranteed. If the server doesn't support this method, it returns
        `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
        or other methods to check whether the cancellation succeeded or whether
        the operation completed despite cancellation. On successful
        cancellation, the operation is not deleted; instead, it becomes an
        operation with an Operation.error value with a google.rpc.Status.code of
        `1`, corresponding to `Code.CANCELLED`.
      operationId: firebaseapphosting.projects.locations.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backends:
    parameters: *ref_1
    get:
      description: Lists backends in a given project and location.
      operationId: firebaseapphosting.projects.locations.backends.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackendsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: Creates a new backend in a given project and location.
      operationId: firebaseapphosting.projects.locations.backends.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backend'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: query
          name: backendId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}:
    parameters: *ref_1
    get:
      description: Gets information about a backend.
      operationId: firebaseapphosting.projects.locations.backends.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backend'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the information for a single backend.
      operationId: firebaseapphosting.projects.locations.backends.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backend'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a single backend.
      operationId: firebaseapphosting.projects.locations.backends.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: force
          schema:
            type: boolean
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}/traffic:
    parameters: *ref_1
    get:
      description: Gets information about a backend's traffic.
      operationId: firebaseapphosting.projects.locations.backends.traffic.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Traffic'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
    patch:
      description: Updates a backend's traffic.
      operationId: firebaseapphosting.projects.locations.backends.traffic.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Traffic'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}/builds:
    parameters: *ref_1
    get:
      description: Lists builds in a given project, location, and backend.
      operationId: firebaseapphosting.projects.locations.backends.builds.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuildsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: Creates a new build for a backend.
      operationId: firebaseapphosting.projects.locations.backends.builds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Build'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: buildId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}/builds/{buildsId}:
    parameters: *ref_1
    get:
      description: Gets information about a build.
      operationId: firebaseapphosting.projects.locations.backends.builds.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: path
          name: buildsId
          required: true
          schema:
            type: string
    delete:
      description: Deletes a single build.
      operationId: firebaseapphosting.projects.locations.backends.builds.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: path
          name: buildsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}/rollouts:
    parameters: *ref_1
    get:
      description: Lists rollouts for a backend.
      operationId: firebaseapphosting.projects.locations.backends.rollouts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolloutsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: Creates a new rollout for a backend.
      operationId: firebaseapphosting.projects.locations.backends.rollouts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rollout'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: rolloutId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}/rollouts/{rolloutsId}:
    parameters: *ref_1
    get:
      description: Gets information about a rollout.
      operationId: firebaseapphosting.projects.locations.backends.rollouts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rollout'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: path
          name: rolloutsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}/domains:
    parameters: *ref_1
    get:
      description: Lists domains of a backend.
      operationId: firebaseapphosting.projects.locations.backends.domains.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDomainsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
    post:
      description: Links a new domain to a backend.
      operationId: firebaseapphosting.projects.locations.backends.domains.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: query
          name: domainId
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
  /v1/projects/{projectsId}/locations/{locationsId}/backends/{backendsId}/domains/{domainsId}:
    parameters: *ref_1
    get:
      description: Gets information about a domain.
      operationId: firebaseapphosting.projects.locations.backends.domains.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
    patch:
      description: Updates the information for a single domain.
      operationId: firebaseapphosting.projects.locations.backends.domains.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
        - in: query
          name: allowMissing
          schema:
            type: boolean
    delete:
      description: Deletes a single domain.
      operationId: firebaseapphosting.projects.locations.backends.domains.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: locationsId
          required: true
          schema:
            type: string
        - in: path
          name: backendsId
          required: true
          schema:
            type: string
        - in: path
          name: domainsId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
        - in: query
          name: validateOnly
          schema:
            type: boolean
