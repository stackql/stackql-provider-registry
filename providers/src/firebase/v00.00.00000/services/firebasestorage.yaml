openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Storage for Firebase API
  description: The Cloud Storage for Firebase API enables programmatic management of Cloud Storage buckets for use in Firebase projects
  version: v1beta
  x-discovery-doc-revision: '20221209'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://firebase.google.com/docs/storage
servers:
  - url: https://firebasestorage.googleapis.com
components:
  schemas:
    AddFirebaseRequest:
      description: The request used to link a Google Cloud Storage bucket to a Firebase project.
      properties: {}
      id: AddFirebaseRequest
      type: object
    Bucket:
      id: Bucket
      description: A storage bucket and its relation to a parent Firebase project.
      type: object
      properties:
        name:
          description: Resource name of the bucket.
          type: string
    GoogleFirebaseStorageControlplaneV1betaMigrateLocationDestructivelyMetadata:
      properties:
        createTime:
          type: string
          description: The time the LRO was created.
          format: google-datetime
        state:
          type: string
          enumDescriptions:
            - Unspecified state. Should not be used.
            - The MigrateLocationDestructively request has passed precondition checks and the bucket migration will begin soon.
            - Generating a unique bucket name, storing the source -> temp mapping in Spanner, and actually creating the temporary bucket via Bigstore.
            - The first STS transfer to move all objects from the source bucket to the temp bucket is underway.
            - The source bucket is being emptied and deleted.
            - The source bucket is being recreated in the new location.
            - The second STS transfer to move all objects from the temp bucket to the final bucket is underway.
            - The temp bucket is being emptied and deleted.
            - All stages of the migration have completed and the operation has been marked done and updated with a response.
            - The migration failed at some stage and it is not possible to continue retrying that stage. Manual recovery may be needed. Rollback is either impossible at this stage, or has been attempted and failed.
            - The migration has encountered a permanent failure and is now being rolled back so that the source bucket is restored to its original state.
            - The migration has been successfully rolled back.
          description: The current state of the migration.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - CREATING_TEMP_BUCKET
            - TRANSFERRING_TO_TEMP
            - DELETING_SOURCE_BUCKET
            - CREATING_DESTINATION_BUCKET
            - TRANSFERRING_TO_DESTINATION
            - DELETING_TEMP_BUCKET
            - SUCCEEDED
            - FAILED
            - ROLLING_BACK
            - ROLLED_BACK
        lastUpdateTime:
          type: string
          format: google-datetime
          description: The time the LRO was last updated.
      type: object
      description: Metadata for MigrateLocationDestructively LRO.
      id: GoogleFirebaseStorageControlplaneV1betaMigrateLocationDestructivelyMetadata
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
      properties: {}
    ListBucketsResponse:
      properties:
        nextPageToken:
          type: string
          description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
        buckets:
          items:
            $ref: '#/components/schemas/Bucket'
          description: The list of linked buckets.
          type: array
      id: ListBucketsResponse
      type: object
      description: The response returned by `ListBuckets`.
    RemoveFirebaseRequest:
      id: RemoveFirebaseRequest
      properties: {}
      description: The request used to unlink a Google Cloud Storage bucket from a Firebase project.
      type: object
    GoogleFirebaseStorageControlplaneV1alphaMigrateLocationDestructivelyMetadata:
      description: Metadata for MigrateLocationDestructively LRO.
      id: GoogleFirebaseStorageControlplaneV1alphaMigrateLocationDestructivelyMetadata
      properties:
        createTime:
          format: google-datetime
          type: string
          description: The time the LRO was created.
        state:
          enumDescriptions:
            - Unspecified state. Should not be used.
            - The MigrateLocationDestructively request has passed precondition checks and the bucket migration will begin soon.
            - Generating a unique bucket name, storing the source -> temp mapping in Spanner, and actually creating the temporary bucket via Bigstore.
            - The first STS transfer to move all objects from the source bucket to the temp bucket is underway.
            - The source bucket is being emptied and deleted.
            - The source bucket is being recreated in the new location.
            - The second STS transfer to move all objects from the temp bucket to the final bucket is underway.
            - The temp bucket is being emptied and deleted.
            - All stages of the migration have completed and the operation has been marked done and updated with a response.
            - The migration failed at some stage and it is not possible to continue retrying that stage. Manual recovery may be needed. Rollback is either impossible at this stage, or has been attempted and failed.
            - The migration has encountered a permanent failure and is now being rolled back so that the source bucket is restored to its original state.
            - The migration has been successfully rolled back.
          description: The current state of the migration.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - CREATING_TEMP_BUCKET
            - TRANSFERRING_TO_TEMP
            - DELETING_SOURCE_BUCKET
            - CREATING_DESTINATION_BUCKET
            - TRANSFERRING_TO_DESTINATION
            - DELETING_TEMP_BUCKET
            - SUCCEEDED
            - FAILED
            - ROLLING_BACK
            - ROLLED_BACK
        lastUpdateTime:
          format: google-datetime
          description: The time the LRO was last updated.
          type: string
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    buckets:
      id: firebase.firebasestorage.buckets
      name: buckets
      title: Buckets
      methods:
        projects_buckets_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_buckets_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/projects_buckets_get'
          - $ref: '#/components/x-stackQL-resources/buckets/methods/projects_buckets_list'
        insert: []
        update: []
        delete: []
    buckets__firebase:
      id: firebase.firebasestorage.buckets__firebase
      name: buckets__firebase
      title: Buckets__firebase
      methods:
        projects_buckets_removeFirebase:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}:removeFirebase/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_buckets_addFirebase:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}:addFirebase/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1beta/projects/{projectsId}/buckets:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Lists the linked storage buckets for a project.
      operationId: firebasestorage.projects.buckets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBucketsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-verb: select
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:removeFirebase:
    parameters: *ref_1
    post:
      description: Unlinks a linked Google Cloud Storage bucket from a Firebase project.
      operationId: firebasestorage.projects.buckets.removeFirebase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFirebaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
      x-stackQL-resource: buckets__firebase
      x-stackQL-verb: delete
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:addFirebase:
    parameters: *ref_1
    post:
      description: Links a Google Cloud Storage bucket to a Firebase project.
      operationId: firebasestorage.projects.buckets.addFirebase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFirebaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
      x-stackQL-resource: buckets__firebase
      x-stackQL-verb: insert
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:
    parameters: *ref_1
    get:
      description: Gets a single linked storage bucket.
      operationId: firebasestorage.projects.buckets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
      x-stackQL-resource: buckets
      x-stackQL-verb: select
