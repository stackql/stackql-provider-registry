openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Firebase Management API
  description: The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.
  version: v1beta1
  x-discovery-doc-revision: '20221221'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://firebase.google.com
servers:
  - url: https://firebase.googleapis.com
components:
  schemas:
    Operation:
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
      type: object
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
        response:
          type: object
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        done:
          type: boolean
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
        error:
          $ref: '#/components/schemas/Status'
          description: The error result of the operation in case of failure or cancellation.
        name:
          type: string
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
    RemoveAnalyticsRequest:
      id: RemoveAnalyticsRequest
      type: object
      properties:
        analyticsPropertyId:
          type: string
          description: 'Optional. The ID of the Google Analytics property associated with the specified `FirebaseProject`. - If not set, then the Google Analytics property that is currently associated with the specified `FirebaseProject` is removed. - If set, and the specified `FirebaseProject` is currently associated with a *different* Google Analytics property, then the response is a `412 Precondition Failed` error. '
    AddFirebaseRequest:
      id: AddFirebaseRequest
      type: object
      description: All fields are required.
      properties:
        locationId:
          description: Deprecated. Instead, to set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the GCP `Project`. The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations).
          type: string
    StreamMapping:
      properties:
        app:
          type: string
          description: 'The resource name of the Firebase App associated with the Google Analytics data stream, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID or projects/PROJECT_IDENTIFIER/iosApps/APP_ID or projects/PROJECT_IDENTIFIER /webApps/APP_ID Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.'
        streamId:
          format: int64
          type: string
          description: The unique Google-assigned identifier of the Google Analytics data stream associated with the Firebase App. Learn more about Google Analytics data streams in the [Analytics documentation](https://support.google.com/analytics/answer/9303323).
        measurementId:
          description: Applicable for Firebase Web Apps only. The unique Google-assigned identifier of the Google Analytics web stream associated with the Firebase Web App. Firebase SDKs use this ID to interact with Google Analytics APIs. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/answer/9304153).
          type: string
      type: object
      id: StreamMapping
      description: A mapping of a Firebase App to a Google Analytics data stream
    Location:
      id: Location
      properties:
        type:
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - REGIONAL
            - MULTI_REGIONAL
          description: Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication.
          type: string
          enumDescriptions:
            - Used internally for distinguishing unset values and is not intended for external use.
            - The location is a regional location. Data in a regional location is replicated in multiple zones within a region.
            - The location is a multi-regional location. Data in a multi-region location is replicated in multiple regions. Within each region, data is replicated in multiple zones.
        locationId:
          type: string
          description: The ID of the GCP resource location. It will be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations#types).
        features:
          description: Products and services that are available in the GCP resource location.
          type: array
          items:
            enum:
              - LOCATION_FEATURE_UNSPECIFIED
              - FIRESTORE
              - DEFAULT_STORAGE
              - FUNCTIONS
            type: string
            enumDescriptions:
              - Used internally for distinguishing unset values and is not intended for external use.
              - This location supports Cloud Firestore database instances. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location).
              - This location supports default Cloud Storage buckets. App Engine is available in this location, so it can be a Project's [default GCP resource location](//firebase.google.com/docs/projects/locations#default-cloud-location).
              - Cloud Functions for Firebase is available in this location.
      type: object
      description: A GCP resource location that can be selected for a FirebaseProject.
    ProjectInfo:
      properties:
        locationId:
          description: The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). Not all Projects will have this field populated. If it is not populated, it means that the Project does not yet have a default GCP resource location. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.
          type: string
        project:
          type: string
          description: 'The resource name of the GCP `Project` to which Firebase resources can be added, in the format: projects/PROJECT_IDENTIFIER Refer to the `FirebaseProject` [`name`](../projects#FirebaseProject.FIELDS.name) field for details about PROJECT_IDENTIFIER values.'
        displayName:
          type: string
          description: 'The user-assigned display name of the GCP `Project`, for example: `My App`'
      type: object
      description: A reference to a Google Cloud Platform (GCP) `Project`.
      id: ProjectInfo
    FinalizeDefaultLocationRequest:
      properties:
        locationId:
          description: The ID of the Project's default GCP resource location. The location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations).
          type: string
      id: FinalizeDefaultLocationRequest
      type: object
    AndroidApp:
      description: Details of a Firebase App for Android.
      type: object
      id: AndroidApp
      properties:
        state:
          readOnly: true
          enumDescriptions:
            - Unspecified state.
            - The App is active.
            - The App has been soft-deleted. Firebase permanantely deletes an App after it has been in the `DELETED` state for more than 30 days. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete)).
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
          type: string
          description: Output only. The lifecycle state of the App.
        sha1Hashes:
          items:
            type: string
          type: array
          description: The SHA1 certificate hashes for the AndroidApp.
        name:
          description: 'The resource name of the AndroidApp, in the format: projects/ PROJECT_IDENTIFIER/androidApps/APP_ID * PROJECT_IDENTIFIER: the parent Project''s [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google''s [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)).'
          type: string
        projectId:
          readOnly: true
          description: Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `AndroidApp`.
          type: string
        apiKeyId:
          description: The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `AndroidApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.androidApps/getConfig). If `api_key_id` is not set in requests to [`androidApps.Create`](../../rest/v1beta1/projects.androidApps/create), then Firebase automatically associates an `api_key_id` with the `AndroidApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `AndroidApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.
          type: string
        sha256Hashes:
          type: array
          description: The SHA256 certificate hashes for the AndroidApp.
          items:
            type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.
          type: string
        appId:
          description: Output only. Immutable. The globally unique, Firebase-assigned identifier for the `AndroidApp`. This identifier should be treated as an opaque token, as the data format is not specified.
          readOnly: true
          type: string
        displayName:
          type: string
          description: The user-assigned display name for the `AndroidApp`.
        packageName:
          type: string
          description: Immutable. The canonical package name of the Android app as would appear in the Google Play Developer Console.
    IosApp:
      id: IosApp
      properties:
        name:
          type: string
          description: 'The resource name of the IosApp, in the format: projects/PROJECT_IDENTIFIER /iosApps/APP_ID * PROJECT_IDENTIFIER: the parent Project''s [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google''s [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.iosApps#IosApp.FIELDS.app_id)).'
        state:
          readOnly: true
          description: Output only. The lifecycle state of the App.
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
          enumDescriptions:
            - Unspecified state.
            - The App is active.
            - The App has been soft-deleted. Firebase permanantely deletes an App after it has been in the `DELETED` state for more than 30 days. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete)).
        bundleId:
          type: string
          description: Immutable. The canonical bundle ID of the iOS app as it would appear in the iOS AppStore.
        projectId:
          type: string
          description: Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `IosApp`.
          readOnly: true
        appStoreId:
          description: The automatically generated Apple ID assigned to the iOS app by Apple in the iOS App Store.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.
          type: string
        appId:
          type: string
          readOnly: true
          description: Output only. Immutable. The globally unique, Firebase-assigned identifier for the `IosApp`. This identifier should be treated as an opaque token, as the data format is not specified.
        teamId:
          description: The Apple Developer Team ID associated with the App in the App Store.
          type: string
        apiKeyId:
          type: string
          description: The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `IosApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.iosApps/getConfig). If `api_key_id` is not set in requests to [`iosApps.Create`](../../rest/v1beta1/projects.iosApps/create), then Firebase automatically associates an `api_key_id` with the `IosApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `IosApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.
        displayName:
          type: string
          description: The user-assigned display name for the `IosApp`.
      type: object
      description: Details of a Firebase App for iOS.
    ListShaCertificatesResponse:
      type: object
      id: ListShaCertificatesResponse
      properties:
        certificates:
          type: array
          description: The list of each `ShaCertificate` associated with the `AndroidApp`.
          items:
            $ref: '#/components/schemas/ShaCertificate'
    RemoveIosAppRequest:
      type: object
      properties:
        immediate:
          description: Determines whether to _immediately_ delete the App. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means that the App may be restored to the Project within 30 days using UndeleteIosApp
          type: boolean
        validateOnly:
          type: boolean
          description: If set to true, the request is only validated. The App will _not_ be removed.
        allowMissing:
          type: boolean
          description: If set to true, and the App is not found, the request will succeed but no action will be taken on the server.
        etag:
          type: string
          description: Checksum provided in the IosApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.
      id: RemoveIosAppRequest
    RemoveWebAppRequest:
      type: object
      properties:
        allowMissing:
          type: boolean
          description: If set to true, and the App is not found, the request will succeed but no action will be taken on the server.
        validateOnly:
          description: If set to true, the request is only validated. The App will _not_ be removed.
          type: boolean
        immediate:
          type: boolean
          description: Determines whether to _immediately_ delete the App. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means that the App may be restored to the Project within 30 days using UndeleteWebApp
        etag:
          description: Checksum provided in the WebApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.
          type: string
      id: RemoveWebAppRequest
    FirebaseAppInfo:
      id: FirebaseAppInfo
      description: A high-level summary of an App.
      properties:
        displayName:
          description: The user-assigned display name of the Firebase App.
          type: string
        platform:
          description: The platform of the Firebase App.
          type: string
          enum:
            - PLATFORM_UNSPECIFIED
            - IOS
            - ANDROID
            - WEB
          enumDescriptions:
            - Unknown state. This is only used for distinguishing unset values.
            - The Firebase App is associated with iOS.
            - The Firebase App is associated with Android.
            - The Firebase App is associated with web.
        name:
          description: 'The resource name of the Firebase App, in the format: projects/PROJECT_ID /iosApps/APP_ID or projects/PROJECT_ID/androidApps/APP_ID or projects/ PROJECT_ID/webApps/APP_ID'
          type: string
        appId:
          description: Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified.
          readOnly: true
          type: string
        namespace:
          description: 'Output only. Immutable. The platform-specific identifier of the App. *Note:* For most use cases, use `appId`, which is the canonical, globally unique identifier for referencing an App. This string is derived from a native identifier for each platform: `packageName` for an `AndroidApp`, `bundleId` for an `IosApp`, and `webId` for a `WebApp`. Its contents should be treated as opaque, as the native identifier format may change as platforms evolve. This string is only unique within a `FirebaseProject` and its associated Apps.'
          type: string
          readOnly: true
        apiKeyId:
          description: The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the App. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's configuration artifact ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/getConfig) | [`IosApp`](../../rest/v1beta1/projects.iosApps/getConfig) | [`WebApp`](../../rest/v1beta1/projects.webApps/getConfig)). If `api_key_id` is not set in requests to create the App ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/create) | [`IosApp`](../../rest/v1beta1/projects.iosApps/create) | [`WebApp`](../../rest/v1beta1/projects.webApps/create)), then Firebase automatically associates an `api_key_id` with the App. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
          type: string
        state:
          enumDescriptions:
            - Unspecified state.
            - The App is active.
            - The App has been soft-deleted. Firebase permanantely deletes an App after it has been in the `DELETED` state for more than 30 days. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete)).
          readOnly: true
          type: string
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
          description: Output only. The lifecycle state of the App.
      type: object
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      id: Status
      properties:
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        code:
          format: int32
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
    WebApp:
      description: Details of a Firebase App for the web.
      type: object
      id: WebApp
      properties:
        appId:
          type: string
          readOnly: true
          description: Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified.
        name:
          type: string
          description: 'The resource name of the WebApp, in the format: projects/PROJECT_IDENTIFIER /webApps/APP_ID * PROJECT_IDENTIFIER: the parent Project''s [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google''s [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.webApps#WebApp.FIELDS.app_id)).'
        state:
          type: string
          enumDescriptions:
            - Unspecified state.
            - The App is active.
            - The App has been soft-deleted. Firebase permanantely deletes an App after it has been in the `DELETED` state for more than 30 days. Up until this time, you can restore the App by calling `Undelete` ([Android](projects.androidApps/undelete) | [iOS](projects.iosApps/undelete) | [web](projects.webApps/undelete)).
          readOnly: true
          description: Output only. The lifecycle state of the App.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
        displayName:
          description: The user-assigned display name for the `WebApp`.
          type: string
        webId:
          readOnly: true
          description: Output only. Immutable. A unique, Firebase-assigned identifier for the `WebApp`. This identifier is only used to populate the `namespace` value for the `WebApp`. For most use cases, use `appId` to identify or reference the App. The `webId` value is only unique within a `FirebaseProject` and its associated Apps.
          type: string
        appUrls:
          type: array
          items:
            type: string
          description: The URLs where the `WebApp` is hosted.
        projectId:
          description: Output only. Immutable. A user-assigned unique identifier of the parent FirebaseProject for the `WebApp`.
          type: string
          readOnly: true
        apiKeyId:
          type: string
          description: The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the `WebApp`. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's [configuration artifact](../../rest/v1beta1/projects.webApps/getConfig). If `api_key_id` is not set in requests to [`webApps.Create`](../../rest/v1beta1/projects.webApps/create), then Firebase automatically associates an `api_key_id` with the `WebApp`. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned. In patch requests, `api_key_id` cannot be set to an empty value, and the new UID must have no restrictions or only have restrictions that are valid for the associated `WebApp`. We recommend using the [Google Cloud Console](https://console.cloud.google.com/apis/credentials) to manage API keys.
        etag:
          description: This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.
          type: string
    DefaultResources:
      properties:
        locationId:
          readOnly: true
          description: Output only. The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.
          type: string
        hostingSite:
          type: string
          description: 'Output only. The default Firebase Hosting site name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Hosting site in another project (learn more about creating non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Hosting site name. For example, if your `projectId` is `myproject123`, your default Hosting site name might be: `myproject123-a5c16`'
          readOnly: true
        storageBucket:
          description: 'Output only. The default Cloud Storage for Firebase storage bucket, in the format: PROJECT_ID.appspot.com'
          readOnly: true
          type: string
        realtimeDatabaseInstance:
          readOnly: true
          type: string
          description: 'Output only. The default Firebase Realtime Database instance name, in the format: PROJECT_ID Though rare, your `projectId` might already be used as the name for an existing Realtime Database instance in another project (learn more about [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default Realtime Database instance name. For example, if your `projectId` is `myproject123`, your default database instance name might be: `myproject123-a5c16`'
      description: The default resources associated with the Project.
      id: DefaultResources
      type: object
    AnalyticsDetails:
      type: object
      id: AnalyticsDetails
      properties:
        analyticsProperty:
          $ref: '#/components/schemas/AnalyticsProperty'
          description: The Analytics Property object associated with the specified `FirebaseProject`. This object contains the details of the Google Analytics property associated with the Project.
        streamMappings:
          description: ' - For `AndroidApps` and `IosApps`: a map of `app` to `streamId` for each Firebase App in the specified `FirebaseProject`. Each `app` and `streamId` appears only once. - For `WebApps`: a map of `app` to `streamId` and `measurementId` for each `WebApp` in the specified `FirebaseProject`. Each `app`, `streamId`, and `measurementId` appears only once.'
          items:
            $ref: '#/components/schemas/StreamMapping'
          type: array
    StatusProto:
      id: StatusProto
      properties:
        space:
          description: The following are usually only present when code != 0 Space to which this status belongs
          type: string
        canonicalCode:
          format: int32
          type: integer
          description: The canonical error code (see codes.proto) that most closely corresponds to this status. May be missing.
        messageSet:
          description: message_set associates an arbitrary proto message with the status.
          $ref: '#/components/schemas/MessageSet'
        message:
          type: string
          description: Detail message
        code:
          description: Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto
          type: integer
          format: int32
      type: object
      description: Wire-format for a Status object
    ListIosAppsResponse:
      id: ListIosAppsResponse
      properties:
        apps:
          items:
            $ref: '#/components/schemas/IosApp'
          type: array
          description: List of each `IosApp` associated with the specified `FirebaseProject`.
        nextPageToken:
          type: string
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListIosApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.
      type: object
    UndeleteAndroidAppRequest:
      properties:
        etag:
          description: Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.
          type: string
        validateOnly:
          description: If set to true, the request is only validated. The App will _not_ be undeleted.
          type: boolean
      id: UndeleteAndroidAppRequest
      type: object
    ShaCertificate:
      type: object
      id: ShaCertificate
      description: A SHA-1 or SHA-256 certificate associated with the AndroidApp.
      properties:
        name:
          type: string
          description: 'The resource name of the ShaCertificate for the AndroidApp, in the format: projects/PROJECT_IDENTIFIER/androidApps/APP_ID/sha/SHA_HASH * PROJECT_IDENTIFIER: the parent Project''s [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google''s [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`. * APP_ID: the globally unique, Firebase-assigned identifier for the App (see [`appId`](../projects.androidApps#AndroidApp.FIELDS.app_id)). * SHA_HASH: the certificate hash for the App (see [`shaHash`](../projects.androidApps.sha#ShaCertificate.FIELDS.sha_hash)).'
        shaHash:
          type: string
          description: The certificate hash for the `AndroidApp`.
        certType:
          type: string
          description: The type of SHA certificate encoded in the hash.
          enumDescriptions:
            - Unknown state. This is only used for distinguishing unset values.
            - Certificate is a SHA-1 type certificate.
            - Certificate is a SHA-256 type certificate.
          enum:
            - SHA_CERTIFICATE_TYPE_UNSPECIFIED
            - SHA_1
            - SHA_256
    AdminSdkConfig:
      properties:
        locationId:
          type: string
          description: The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.
        storageBucket:
          description: The default Cloud Storage for Firebase storage bucket name.
          type: string
        databaseURL:
          description: The default Firebase Realtime Database URL.
          type: string
        projectId:
          type: string
          description: Immutable. A user-assigned unique identifier for the `FirebaseProject`. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project.
      id: AdminSdkConfig
      type: object
    UndeleteIosAppRequest:
      properties:
        validateOnly:
          type: boolean
          description: If set to true, the request is only validated. The App will _not_ be undeleted.
        etag:
          type: string
          description: Checksum provided in the IosApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.
      id: UndeleteIosAppRequest
      type: object
    AndroidAppConfig:
      description: Configuration metadata of a single Firebase App for Android.
      type: object
      properties:
        configFilename:
          type: string
          description: 'The filename that the configuration artifact for the `AndroidApp` is typically saved as. For example: `google-services.json`'
        configFileContents:
          description: The contents of the JSON configuration file.
          format: byte
          type: string
      id: AndroidAppConfig
    WebAppConfig:
      description: Configuration metadata of a single Firebase App for the web.
      properties:
        databaseURL:
          description: The default Firebase Realtime Database URL.
          type: string
        authDomain:
          type: string
          description: 'The domain Firebase Auth configures for OAuth redirects, in the format: PROJECT_ID.firebaseapp.com'
        projectId:
          description: Immutable. A user-assigned unique identifier for the `FirebaseProject`.
          type: string
        appId:
          type: string
          description: Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`.
        messagingSenderId:
          type: string
          description: The sender ID for use with Firebase Cloud Messaging.
        storageBucket:
          type: string
          description: The default Cloud Storage for Firebase storage bucket name.
        locationId:
          description: The ID of the Project's default GCP resource location. The location is one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the default GCP resource location has not been finalized yet. To set a Project's default GCP resource location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to the Project.
          type: string
        measurementId:
          description: The unique Google-assigned identifier of the Google Analytics web stream associated with the `WebApp`. Firebase SDKs use this ID to interact with Google Analytics APIs. This field is only present if the `WebApp` is linked to a web stream in a Google Analytics App + Web property. Learn more about this ID and Google Analytics web streams in the [Analytics documentation](https://support.google.com/analytics/answer/9304153). To generate a `measurementId` and link the `WebApp` with a Google Analytics web stream, call [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics). For apps using the Firebase JavaScript SDK v7.20.0 and later, Firebase dynamically fetches the `measurementId` when your app initializes Analytics. Having this ID in your config object is optional, but it does serve as a fallback in the rare case that the dynamic fetch fails.
          type: string
        apiKey:
          type: string
          description: The [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key associated with the `WebApp`. Note that this value is _not_ the [`apiKeyId`](../projects.webApps#WebApp.FIELDS.api_key_id) (the UID) of the API key associated with the `WebApp`.
      type: object
      id: WebAppConfig
    ListAvailableProjectsResponse:
      properties:
        nextPageToken:
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListAvailableProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted.
          type: string
        projectInfo:
          description: The list of GCP `Projects` which can have Firebase resources added to them.
          items:
            $ref: '#/components/schemas/ProjectInfo'
          type: array
      type: object
      id: ListAvailableProjectsResponse
    RemoveAndroidAppRequest:
      id: RemoveAndroidAppRequest
      type: object
      properties:
        immediate:
          type: boolean
          description: Determines whether to _immediately_ delete the App. If set to true, the App is immediately deleted from the Project and cannot be restored to the Project. If not set, defaults to false, which means that the App may be restored to the Project within 30 days using UndeleteAndroidApp.
        etag:
          description: Checksum provided in the AndroidApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.
          type: string
        validateOnly:
          description: If set to true, the request is only validated. The App will _not_ be removed.
          type: boolean
        allowMissing:
          description: If set to true, and the App is not found, the request will succeed but no action will be taken on the server.
          type: boolean
    ListWebAppsResponse:
      id: ListWebAppsResponse
      type: object
      properties:
        nextPageToken:
          type: string
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListWebApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.
        apps:
          description: List of each `WebApp` associated with the specified `FirebaseProject`.
          items:
            $ref: '#/components/schemas/WebApp'
          type: array
    UndeleteWebAppRequest:
      type: object
      id: UndeleteWebAppRequest
      properties:
        etag:
          type: string
          description: Checksum provided in the WebApp resource. If provided, this checksum ensures that the client has an up-to-date value before proceeding.
        validateOnly:
          description: If set to true, the request is only validated. The App will _not_ be undeleted.
          type: boolean
    MessageSet:
      description: This is proto2's version of MessageSet.
      properties: {}
      id: MessageSet
      type: object
    FirebaseProject:
      type: object
      id: FirebaseProject
      description: A `FirebaseProject` is the top-level Firebase entity. It is the container for Firebase Apps, Firebase Hosting sites, storage systems (Firebase Realtime Database, Cloud Firestore, Cloud Storage buckets), and other Firebase and Google Cloud Platform (GCP) resources. You create a `FirebaseProject` by calling AddFirebase and specifying an *existing* [GCP `Project`](https://cloud.google.com/resource-manager/reference/rest/v1/projects). This adds Firebase resources to the existing GCP `Project`. Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` has the same underlying GCP identifiers (`projectNumber` and `projectId`). This allows for easy interop with Google APIs.
      properties:
        projectNumber:
          readOnly: true
          type: string
          description: Output only. Immutable. The globally unique, Google-assigned canonical identifier for the Project. Use this identifier when configuring integrations and/or making API calls to Firebase or third-party services.
          format: int64
        annotations:
          additionalProperties:
            type: string
          type: object
          description: A set of user-defined annotations for the FirebaseProject. Learn more about annotations in Google's [AIP-128 standard](https://google.aip.dev/128#annotations). These annotations are intended solely for developers and client-side tools. Firebase services will not mutate this annotations set.
        resources:
          readOnly: true
          $ref: '#/components/schemas/DefaultResources'
          description: Output only. The default Firebase resources associated with the Project.
        state:
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DELETED
          enumDescriptions:
            - Unspecified state.
            - The Project is active.
            - The Project has been soft-deleted.
          description: Output only. The lifecycle state of the Project.
          readOnly: true
          type: string
        projectId:
          type: string
          description: Output only. Immutable. A user-assigned unique identifier for the Project. This identifier may appear in URLs or names for some Firebase resources associated with the Project, but it should generally be treated as a convenience alias to reference the Project.
          readOnly: true
        displayName:
          type: string
          description: The user-assigned display name of the Project.
        name:
          description: 'The resource name of the Project, in the format: projects/PROJECT_IDENTIFIER PROJECT_IDENTIFIER: the Project''s [`ProjectNumber`](../projects#FirebaseProject.FIELDS.project_number) ***(recommended)*** or its [`ProjectId`](../projects#FirebaseProject.FIELDS.project_id). Learn more about using project identifiers in Google''s [AIP 2510 standard](https://google.aip.dev/cloud/2510). Note that the value for PROJECT_IDENTIFIER in any response body will be the `ProjectId`.'
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and it may be sent with update requests to ensure the client has an up-to-date value before proceeding. Learn more about `etag` in Google's [AIP-154 standard](https://google.aip.dev/154#declarative-friendly-resources). This etag is strongly validated.
          type: string
    IosAppConfig:
      properties:
        configFilename:
          type: string
          description: 'The filename that the configuration artifact for the `IosApp` is typically saved as. For example: `GoogleService-Info.plist`'
        configFileContents:
          description: The content of the XML configuration file.
          type: string
          format: byte
      type: object
      id: IosAppConfig
      description: Configuration metadata of a single Firebase App for iOS.
    ListFirebaseProjectsResponse:
      properties:
        results:
          description: One page of the list of Projects that are accessible to the caller.
          items:
            $ref: '#/components/schemas/FirebaseProject'
          type: array
        nextPageToken:
          type: string
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent calls to `ListFirebaseProjects` to find the next group of Projects. Page tokens are short-lived and should not be persisted.
      type: object
      id: ListFirebaseProjectsResponse
    ListAvailableLocationsResponse:
      id: ListAvailableLocationsResponse
      properties:
        locations:
          items:
            $ref: '#/components/schemas/Location'
          description: One page of results from a call to `ListAvailableLocations`.
          type: array
        nextPageToken:
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results and all available locations have been listed. This token can be used in a subsequent call to `ListAvailableLocations` to find more locations. Page tokens are short-lived and should not be persisted.
          type: string
      type: object
    AddGoogleAnalyticsRequest:
      id: AddGoogleAnalyticsRequest
      type: object
      properties:
        analyticsPropertyId:
          type: string
          description: The ID for the existing Google Analytics property that you want to associate with the `FirebaseProject`.
        analyticsAccountId:
          description: The ID for the existing [Google Analytics account](http://www.google.com/analytics/) that you want to link with the `FirebaseProject`. Specifying this field will provision a new Google Analytics property in your Google Analytics account and associate the new property with the `FirebaseProject`.
          type: string
    SearchFirebaseAppsResponse:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/FirebaseAppInfo'
          description: One page of results from a call to `SearchFirebaseApps`.
        nextPageToken:
          description: If the result list is too large to fit in a single response, then a token is returned. This token can be used in a subsequent calls to `SearchFirebaseApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.
          type: string
      id: SearchFirebaseAppsResponse
    AnalyticsProperty:
      id: AnalyticsProperty
      description: Details of a Google Analytics property
      properties:
        displayName:
          description: The display name of the Google Analytics property associated with the specified `FirebaseProject`.
          type: string
        analyticsAccountId:
          type: string
          readOnly: true
          description: Output only. The ID of the [Google Analytics account](https://www.google.com/analytics/) for the Google Analytics property associated with the specified FirebaseProject.
        id:
          type: string
          description: The globally unique, Google-assigned identifier of the Google Analytics property associated with the specified `FirebaseProject`. If you called [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) to link the `FirebaseProject` with a Google Analytics account, the value in this `id` field is the same as the ID of the property either specified or provisioned with that call to `AddGoogleAnalytics`.
      type: object
    Empty:
      properties: {}
      id: Empty
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    ListAndroidAppsResponse:
      type: object
      id: ListAndroidAppsResponse
      properties:
        apps:
          items:
            $ref: '#/components/schemas/AndroidApp'
          description: List of each `AndroidApp` associated with the specified `FirebaseProject`.
          type: array
        nextPageToken:
          type: string
          description: If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListAndroidApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
            https://www.googleapis.com/auth/firebase.readonly: View all your Firebase data and settings
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    operations:
      id: firebase.firebase.operations
      name: operations
      title: Operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1beta1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        delete: []
    available_projects:
      id: firebase.firebase.available_projects
      name: available_projects
      title: Available_projects
      methods:
        availableProjects_list:
          operation:
            $ref: '#/paths/~1v1beta1~1availableProjects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_projects/methods/availableProjects_list'
        insert: []
        update: []
        delete: []
    sha:
      id: firebase.firebase.sha
      name: sha
      title: Sha
      methods:
        projects_androidApps_sha_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}~1sha/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_androidApps_sha_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}~1sha/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_androidApps_sha_delete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}~1sha~1{shaId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sha/methods/projects_androidApps_sha_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sha/methods/projects_androidApps_sha_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sha/methods/projects_androidApps_sha_delete'
    android_apps:
      id: firebase.firebase.android_apps
      name: android_apps
      title: Android_apps
      methods:
        projects_androidApps_remove:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}:remove/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_androidApps_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_androidApps_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_androidApps_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_androidApps_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_androidApps_undelete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/android_apps/methods/projects_androidApps_get'
          - $ref: '#/components/x-stackQL-resources/android_apps/methods/projects_androidApps_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/android_apps/methods/projects_androidApps_create'
        update: []
        delete: []
    android_apps__config:
      id: firebase.firebase.android_apps__config
      name: android_apps__config
      title: Android_apps__config
      methods:
        projects_androidApps_getConfig:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1androidApps~1{androidAppsId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/android_apps__config/methods/projects_androidApps_getConfig'
        insert: []
        update: []
        delete: []
    default_location:
      id: firebase.firebase.default_location
      name: default_location
      title: Default_location
      methods:
        projects_defaultLocation_finalize:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1defaultLocation:finalize/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    available_locations:
      id: firebase.firebase.available_locations
      name: available_locations
      title: Available_locations
      methods:
        projects_availableLocations_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1availableLocations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_locations/methods/projects_availableLocations_list'
        insert: []
        update: []
        delete: []
    ios_apps:
      id: firebase.firebase.ios_apps
      name: ios_apps
      title: Ios_apps
      methods:
        projects_iosApps_undelete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1iosApps~1{iosAppsId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_iosApps_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1iosApps~1{iosAppsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_iosApps_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1iosApps~1{iosAppsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_iosApps_remove:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1iosApps~1{iosAppsId}:remove/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_iosApps_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1iosApps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_iosApps_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1iosApps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ios_apps/methods/projects_iosApps_get'
          - $ref: '#/components/x-stackQL-resources/ios_apps/methods/projects_iosApps_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/ios_apps/methods/projects_iosApps_create'
        update: []
        delete: []
    ios_apps__config:
      id: firebase.firebase.ios_apps__config
      name: ios_apps__config
      title: Ios_apps__config
      methods:
        projects_iosApps_getConfig:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1iosApps~1{iosAppsId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ios_apps__config/methods/projects_iosApps_getConfig'
        insert: []
        update: []
        delete: []
    web_apps:
      id: firebase.firebase.web_apps
      name: web_apps
      title: Web_apps
      methods:
        projects_webApps_get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1webApps~1{webAppsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_webApps_patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1webApps~1{webAppsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_webApps_remove:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1webApps~1{webAppsId}:remove/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_webApps_list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1webApps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_webApps_create:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1webApps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_webApps_undelete:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1webApps~1{webAppsId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_apps/methods/projects_webApps_get'
          - $ref: '#/components/x-stackQL-resources/web_apps/methods/projects_webApps_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/web_apps/methods/projects_webApps_create'
        update: []
        delete: []
    web_apps__config:
      id: firebase.firebase.web_apps__config
      name: web_apps__config
      title: Web_apps__config
      methods:
        projects_webApps_getConfig:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1webApps~1{webAppsId}~1config/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_apps__config/methods/projects_webApps_getConfig'
        insert: []
        update: []
        delete: []
    projects:
      id: firebase.firebase.projects
      name: projects
      title: Projects
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1beta1~1projects/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        searchApps:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}:searchApps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list'
        insert: []
        update: []
        delete: []
    projects__google_analytics:
      id: firebase.firebase.projects__google_analytics
      name: projects__google_analytics
      title: Projects__google_analytics
      methods:
        projects_addGoogleAnalytics:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}:addGoogleAnalytics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    projects__analytics_details:
      id: firebase.firebase.projects__analytics_details
      name: projects__analytics_details
      title: Projects__analytics_details
      methods:
        projects_getAnalyticsDetails:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1analyticsDetails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects__analytics_details/methods/projects_getAnalyticsDetails'
        insert: []
        update: []
        delete: []
    projects__admin_sdk_config:
      id: firebase.firebase.projects__admin_sdk_config
      name: projects__admin_sdk_config
      title: Projects__admin_sdk_config
      methods:
        projects_getAdminSdkConfig:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}~1adminSdkConfig/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects__admin_sdk_config/methods/projects_getAdminSdkConfig'
        insert: []
        update: []
        delete: []
    projects__analytics:
      id: firebase.firebase.projects__analytics
      name: projects__analytics
      title: Projects__analytics
      methods:
        projects_removeAnalytics:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}:removeAnalytics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    projects__firebase:
      id: firebase.firebase.projects__firebase
      name: projects__firebase
      title: Projects__firebase
      methods:
        projects_addFirebase:
          operation:
            $ref: '#/paths/~1v1beta1~1projects~1{projectsId}:addFirebase/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1beta1/operations/{operationsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: firebase.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1beta1/availableProjects:
    parameters: *ref_1
    get:
      description: 'Lists each [Google Cloud Platform (GCP) `Project`] (https://cloud.google.com/resource-manager/reference/rest/v1/projects) that can have Firebase resources added to it. A Project will only be listed if: - The caller has sufficient [Google IAM](https://cloud.google.com/iam) permissions to call AddFirebase. - The Project is not already a FirebaseProject. - The Project is not in an Organization which has policies that prevent Firebase resources from being added. '
      operationId: firebase.availableProjects.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAvailableProjectsResponse'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: available_projects
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/androidApps/{androidAppsId}/sha:
    parameters: *ref_1
    get:
      description: Lists the SHA-1 and SHA-256 certificates for the specified AndroidApp.
      operationId: firebase.projects.androidApps.sha.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShaCertificatesResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sha
      x-stackQL-verb: select
    post:
      description: Adds a ShaCertificate to the specified AndroidApp.
      operationId: firebase.projects.androidApps.sha.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShaCertificate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShaCertificate'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: sha
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/androidApps/{androidAppsId}/sha/{shaId}:
    parameters: *ref_1
    delete:
      description: Removes a ShaCertificate from the specified AndroidApp.
      operationId: firebase.projects.androidApps.sha.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
        - in: path
          name: shaId
          required: true
          schema:
            type: string
      x-stackQL-resource: sha
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/androidApps/{androidAppsId}:remove:
    parameters: *ref_1
    post:
      description: Removes the specified AndroidApp from the FirebaseProject.
      operationId: firebase.projects.androidApps.remove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAndroidAppRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: android_apps
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/androidApps/{androidAppsId}:
    parameters: *ref_1
    get:
      description: Gets the specified AndroidApp.
      operationId: firebase.projects.androidApps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AndroidApp'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: android_apps
      x-stackQL-verb: select
    patch:
      description: Updates the attributes of the specified AndroidApp.
      operationId: firebase.projects.androidApps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AndroidApp'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AndroidApp'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: android_apps
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/androidApps:
    parameters: *ref_1
    get:
      description: Lists each AndroidApp associated with the specified FirebaseProject. The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`.
      operationId: firebase.projects.androidApps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAndroidAppsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: android_apps
      x-stackQL-verb: select
    post:
      description: Requests the creation of a new AndroidApp in the specified FirebaseProject. The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`.
      operationId: firebase.projects.androidApps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AndroidApp'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: android_apps
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/androidApps/{androidAppsId}:undelete:
    parameters: *ref_1
    post:
      description: Restores the specified AndroidApp to the FirebaseProject.
      operationId: firebase.projects.androidApps.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteAndroidAppRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: android_apps
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/androidApps/{androidAppsId}/config:
    parameters: *ref_1
    get:
      description: Gets the configuration artifact associated with the specified AndroidApp.
      operationId: firebase.projects.androidApps.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AndroidAppConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: androidAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: android_apps__config
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/defaultLocation:finalize:
    parameters: *ref_1
    post:
      description: Sets the default Google Cloud Platform (GCP) resource location for the specified FirebaseProject. This method creates an App Engine application with a [default Cloud Storage bucket](https://cloud.google.com/appengine/docs/standard/python/googlecloudstorageclient/setting-up-cloud-storage#activating_a_cloud_storage_bucket), located in the specified [`locationId`](#body.request_body.FIELDS.location_id). This location must be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations). After the default GCP resource location is finalized, or if it was already set, it cannot be changed. The default GCP resource location for the specified `FirebaseProject` might already be set because either the underlying GCP `Project` already has an App Engine application or `FinalizeDefaultLocation` was previously called with a specified `locationId`. Any new calls to `FinalizeDefaultLocation` with a *different* specified `locationId` will return a 409 error. The result of this call is an [`Operation`](../../v1beta1/operations), which can be used to track the provisioning process. The [`response`](../../v1beta1/operations#Operation.FIELDS.response) type of the `Operation` is google.protobuf.Empty. The `Operation` can be polled by its `name` using GetOperation until `done` is true. When `done` is true, the `Operation` has either succeeded or failed. If the `Operation` has succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) will be set to a google.protobuf.Empty; if the `Operation` has failed, its `error` will be set to a google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call DeleteOperation. All fields listed in the [request body](#request-body) are required. To call `FinalizeDefaultLocation`, a member must be an Owner of the Project.
      operationId: firebase.projects.defaultLocation.finalize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinalizeDefaultLocationRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: default_location
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/availableLocations:
    parameters: *ref_1
    get:
      description: Lists the valid Google Cloud Platform (GCP) resource locations for the specified Project (including a FirebaseProject). One of these locations can be selected as the Project's [_default_ GCP resource location](https://firebase.google.com/docs/projects/locations), which is the geographical location where the Project's resources, such as Cloud Firestore, will be provisioned by default. However, if the default GCP resource location has already been set for the Project, then this setting cannot be changed. This call checks for any possible [location restrictions](https://cloud.google.com/resource-manager/docs/organization-policy/defining-locations) for the specified Project and, thus, might return a subset of all possible GCP resource locations. To list all GCP resource locations (regardless of any restrictions), call the endpoint without specifying a unique project identifier (that is, `/v1beta1/{parent=projects/-}/listAvailableLocations`). To call `ListAvailableLocations` with a specified project, a member must be at minimum a Viewer of the Project. Calls without a specified project do not require any specific project permissions.
      operationId: firebase.projects.availableLocations.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAvailableLocationsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: available_locations
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/iosApps/{iosAppsId}:undelete:
    parameters: *ref_1
    post:
      description: Restores the specified IosApp to the FirebaseProject.
      operationId: firebase.projects.iosApps.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteIosAppRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: iosAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: ios_apps
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/iosApps/{iosAppsId}:
    parameters: *ref_1
    patch:
      description: Updates the attributes of the specified IosApp.
      operationId: firebase.projects.iosApps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IosApp'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IosApp'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: iosAppsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: ios_apps
      x-stackQL-verb: exec
    get:
      description: Gets the specified IosApp.
      operationId: firebase.projects.iosApps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IosApp'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: iosAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: ios_apps
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/iosApps/{iosAppsId}/config:
    parameters: *ref_1
    get:
      description: Gets the configuration artifact associated with the specified IosApp.
      operationId: firebase.projects.iosApps.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IosAppConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: iosAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: ios_apps__config
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/iosApps/{iosAppsId}:remove:
    parameters: *ref_1
    post:
      description: Removes the specified IosApp from the FirebaseProject.
      operationId: firebase.projects.iosApps.remove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveIosAppRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: iosAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: ios_apps
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/iosApps:
    parameters: *ref_1
    post:
      description: Requests the creation of a new IosApp in the specified FirebaseProject. The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`.
      operationId: firebase.projects.iosApps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IosApp'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: ios_apps
      x-stackQL-verb: insert
    get:
      description: Lists each IosApp associated with the specified FirebaseProject. The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`.
      operationId: firebase.projects.iosApps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIosAppsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: ios_apps
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/webApps/{webAppsId}:
    parameters: *ref_1
    get:
      description: Gets the specified WebApp.
      operationId: firebase.projects.webApps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApp'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: webAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_apps
      x-stackQL-verb: select
    patch:
      description: Updates the attributes of the specified WebApp.
      operationId: firebase.projects.webApps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApp'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApp'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: webAppsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: web_apps
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}/webApps/{webAppsId}:remove:
    parameters: *ref_1
    post:
      description: Removes the specified WebApp from the FirebaseProject.
      operationId: firebase.projects.webApps.remove
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveWebAppRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: webAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_apps
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}/webApps/{webAppsId}/config:
    parameters: *ref_1
    get:
      description: Gets the configuration artifact associated with the specified WebApp.
      operationId: firebase.projects.webApps.getConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: webAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_apps__config
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/webApps:
    parameters: *ref_1
    get:
      description: Lists each WebApp associated with the specified FirebaseProject. The elements are returned in no particular order, but will be a consistent view of the Apps when additional requests are made with a `pageToken`.
      operationId: firebase.projects.webApps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebAppsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: web_apps
      x-stackQL-verb: select
    post:
      description: Requests the creation of a new WebApp in the specified FirebaseProject. The result of this call is an `Operation` which can be used to track the provisioning process. The `Operation` is automatically deleted after completion, so there is no need to call `DeleteOperation`.
      operationId: firebase.projects.webApps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApp'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_apps
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/webApps/{webAppsId}:undelete:
    parameters: *ref_1
    post:
      description: Restores the specified WebApp to the FirebaseProject.
      operationId: firebase.projects.webApps.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteWebAppRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: webAppsId
          required: true
          schema:
            type: string
      x-stackQL-resource: web_apps
      x-stackQL-verb: exec
  /v1beta1/projects:
    parameters: *ref_1
    get:
      description: Lists each FirebaseProject accessible to the caller. The elements are returned in no particular order, but they will be a consistent view of the Projects when additional requests are made with a `pageToken`. This method is eventually consistent with Project mutations, which means newly provisioned Projects and recent modifications to existing Projects might not be reflected in the set of Projects. The list will include only ACTIVE Projects. Use GetFirebaseProject for consistent reads as well as for additional Project details.
      operationId: firebase.projects.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirebaseProjectsResponse'
      parameters:
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}:
    parameters: *ref_1
    patch:
      description: Updates the attributes of the specified FirebaseProject. All [query parameters](#query-parameters) are required.
      operationId: firebase.projects.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirebaseProject'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirebaseProject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: exec
    get:
      description: Gets the specified FirebaseProject.
      operationId: firebase.projects.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirebaseProject'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}:searchApps:
    parameters: *ref_1
    get:
      description: Lists all available Apps for the specified FirebaseProject. This is a convenience method. Typically, interaction with an App should be done using the platform-specific service, but some tool use-cases require a summary of all known Apps (such as for App selector interfaces).
      operationId: firebase.projects.searchApps
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchFirebaseAppsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
      x-stackQL-resource: projects
      x-stackQL-verb: exec
  /v1beta1/projects/{projectsId}:addGoogleAnalytics:
    parameters: *ref_1
    post:
      description: 'Links the specified FirebaseProject with an existing [Google Analytics account](http://www.google.com/analytics/). Using this call, you can either: - Specify an `analyticsAccountId` to provision a new Google Analytics property within the specified account and associate the new property with the `FirebaseProject`. - Specify an existing `analyticsPropertyId` to associate the property with the `FirebaseProject`. Note that when you call `AddGoogleAnalytics`: 1. The first check determines if any existing data streams in the Google Analytics property correspond to any existing Firebase Apps in the `FirebaseProject` (based on the `packageName` or `bundleId` associated with the data stream). Then, as applicable, the data streams and apps are linked. Note that this auto-linking only applies to `AndroidApps` and `IosApps`. 2. If no corresponding data streams are found for the Firebase Apps, new data streams are provisioned in the Google Analytics property for each of the Firebase Apps. Note that a new data stream is always provisioned for a Web App even if it was previously associated with a data stream in the Analytics property. Learn more about the hierarchy and structure of Google Analytics accounts in the [Analytics documentation](https://support.google.com/analytics/answer/9303323). The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done) is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation` succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to an AnalyticsDetails; if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error) is set to a google.rpc.Status. To call `AddGoogleAnalytics`, a project member must be an Owner for the existing `FirebaseProject` and have the [`Edit` permission](https://support.google.com/analytics/answer/2884495) for the Google Analytics account. If the `FirebaseProject` already has Google Analytics enabled, and you call `AddGoogleAnalytics` using an `analyticsPropertyId` that''s different from the currently associated property, then the call will fail. Analytics may have already been enabled in the Firebase console or by specifying `timeZone` and `regionCode` in the call to [`AddFirebase`](../../v1beta1/projects/addFirebase).'
      operationId: firebase.projects.addGoogleAnalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGoogleAnalyticsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects__google_analytics
      x-stackQL-verb: insert
  /v1beta1/projects/{projectsId}/analyticsDetails:
    parameters: *ref_1
    get:
      description: Gets the Google Analytics details currently associated with the specified FirebaseProject. If the `FirebaseProject` is not yet linked to Google Analytics, then the response to `GetAnalyticsDetails` is `NOT_FOUND`.
      operationId: firebase.projects.getAnalyticsDetails
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsDetails'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects__analytics_details
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}/adminSdkConfig:
    parameters: *ref_1
    get:
      description: Gets the configuration artifact associated with the specified FirebaseProject, which can be used by servers to simplify initialization. Typically, this configuration is used with the Firebase Admin SDK [initializeApp](https://firebase.google.com/docs/admin/setup#initialize_the_sdk) command.
      operationId: firebase.projects.getAdminSdkConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
        - Oauth2:
            - https://www.googleapis.com/auth/firebase.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/firebase.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSdkConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects__admin_sdk_config
      x-stackQL-verb: select
  /v1beta1/projects/{projectsId}:removeAnalytics:
    parameters: *ref_1
    post:
      description: Unlinks the specified FirebaseProject from its Google Analytics account. This call removes the association of the specified `FirebaseProject` with its current Google Analytics property. However, this call does not delete the Google Analytics resources, such as the Google Analytics property or any data streams. These resources may be re-associated later to the `FirebaseProject` by calling [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) and specifying the same `analyticsPropertyId`. For Android Apps and iOS Apps, this call re-links data streams with their corresponding apps. However, for Web Apps, this call provisions a *new* data stream for each Web App. To call `RemoveAnalytics`, a project member must be an Owner for the `FirebaseProject`.
      operationId: firebase.projects.removeAnalytics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAnalyticsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects__analytics
      x-stackQL-verb: delete
  /v1beta1/projects/{projectsId}:addFirebase:
    parameters: *ref_1
    post:
      description: 'Adds Firebase resources to the specified existing [Google Cloud Platform (GCP) `Project`] (https://cloud.google.com/resource-manager/reference/rest/v1/projects). Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` has the same underlying GCP identifiers (`projectNumber` and `projectId`). This allows for easy interop with Google APIs. The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done) is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation` succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to a FirebaseProject; if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error) is set to a google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call DeleteOperation. This method does not modify any billing account information on the underlying GCP `Project`. To call `AddFirebase`, a project member or service account must have the following permissions (the IAM roles of Editor and Owner contain these permissions): `firebase.projects.update`, `resourcemanager.projects.get`, `serviceusage.services.enable`, and `serviceusage.services.get`.'
      operationId: firebase.projects.addFirebase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFirebaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects__firebase
      x-stackQL-verb: insert
