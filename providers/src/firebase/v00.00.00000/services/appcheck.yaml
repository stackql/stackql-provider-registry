openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Firebase App Check API
  description: >-
    Firebase App Check works alongside other Firebase services to help protect
    your backend resources from abuse, such as billing fraud or phishing.
  version: v1
  x-discovery-doc-revision: '20250729'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://firebase.google.com/docs/app-check
servers:
  - url: https://firebaseappcheck.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    GoogleFirebaseAppcheckV1AppAttestConfig:
      id: GoogleFirebaseAppcheckV1AppAttestConfig
      description: >-
        An app's App Attest configuration object. This configuration controls
        certain properties of the `AppCheckToken` returned by
        ExchangeAppAttestAttestation and ExchangeAppAttestAssertion, such as its
        ttl. Note that the Team ID registered with your app is used as part of
        the validation process. Please register it via the Firebase Console or
        programmatically via the [Firebase Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the App Attest configuration
            object, in the format: ```
            projects/{project_number}/apps/{app_id}/appAttestConfig ```
          type: string
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from App
            Attest artifacts will be valid. If unset, a default value of 1 hour
            is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
          format: google-duration
    GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse
      description: Response message for the BatchGetAppAttestConfigs method.
      type: object
      properties:
        configs:
          description: AppAttestConfigs retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
    GoogleFirebaseAppcheckV1DeviceCheckConfig:
      id: GoogleFirebaseAppcheckV1DeviceCheckConfig
      description: >-
        An app's DeviceCheck configuration object. This configuration is used by
        ExchangeDeviceCheckToken to validate device tokens issued to apps by
        DeviceCheck. It also controls certain properties of the returned
        `AppCheckToken`, such as its ttl. Note that the Team ID registered with
        your app is used as part of the validation process. Please register it
        via the Firebase Console or programmatically via the [Firebase
        Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.iosApps/patch).
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the DeviceCheck
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/deviceCheckConfig ```
          type: string
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            DeviceCheck tokens will be valid. If unset, a default value of 1
            hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
          format: google-duration
        keyId:
          description: >-
            Required. The key identifier of a private key enabled with
            DeviceCheck, created in your Apple Developer account.
          type: string
        privateKey:
          description: >-
            Required. Input only. The contents of the private key (`.p8`) file
            associated with the key specified by `key_id`. For security reasons,
            this field will never be populated in any response.
          type: string
        privateKeySet:
          description: >-
            Output only. Whether the `private_key` field was previously set.
            Since we will never return the `private_key` field, this field is
            the only way to find out whether it was previously set.
          readOnly: true
          type: boolean
    GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse
      description: Response message for the BatchGetDeviceCheckConfigs method.
      type: object
      properties:
        configs:
          description: DeviceCheckConfigs retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
    GoogleFirebaseAppcheckV1RecaptchaV3Config:
      id: GoogleFirebaseAppcheckV1RecaptchaV3Config
      description: >-
        An app's reCAPTCHA v3 configuration object. This configuration is used
        by ExchangeRecaptchaV3Token to validate reCAPTCHA tokens issued to apps
        by reCAPTCHA v3. It also controls certain properties of the returned
        `AppCheckToken`, such as its ttl.
      type: object
      properties:
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            reCAPTCHA tokens will be valid. If unset, a default value of 1 day
            is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
          format: google-duration
        name:
          description: >-
            Required. The relative resource name of the reCAPTCHA v3
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/recaptchaV3Config ```
          type: string
        siteSecret:
          description: >-
            Required. Input only. The site secret used to identify your service
            for reCAPTCHA v3 verification. For security reasons, this field will
            never be populated in any response.
          type: string
        siteSecretSet:
          description: >-
            Output only. Whether the `site_secret` field was previously set.
            Since we will never return the `site_secret` field, this field is
            the only way to find out whether it was previously set.
          readOnly: true
          type: boolean
    GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse
      description: Response message for the BatchGetRecaptchaV3Configs method.
      type: object
      properties:
        configs:
          description: RecaptchaV3Configs retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
    GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig:
      id: GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig
      description: >-
        An app's reCAPTCHA Enterprise configuration object. This configuration
        is used by ExchangeRecaptchaEnterpriseToken to validate reCAPTCHA tokens
        issued to apps by reCAPTCHA Enterprise. It also controls certain
        properties of the returned `AppCheckToken`, such as its ttl.
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the reCAPTCHA Enterprise
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/recaptchaEnterpriseConfig
            ```
          type: string
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            reCAPTCHA Enterprise tokens will be valid. If unset, a default value
            of 1 hour is assumed. Must be between 30 minutes and 7 days,
            inclusive.
          type: string
          format: google-duration
        siteKey:
          description: >-
            The score-based site key [created in reCAPTCHA
            Enterprise](https://cloud.google.com/recaptcha-enterprise/docs/create-key#creating_a_site_key)
            used to [invoke reCAPTCHA and generate the reCAPTCHA
            tokens](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages)
            for your application. Important: This is *not* the `site_secret` (as
            it is in reCAPTCHA v3), but rather your score-based reCAPTCHA
            Enterprise site key.
          type: string
    GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse
      description: Response message for the BatchGetRecaptchaEnterpriseConfigs method.
      type: object
      properties:
        configs:
          description: RecaptchaEnterpriseConfigs retrieved.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig
    GoogleFirebaseAppcheckV1SafetyNetConfig:
      id: GoogleFirebaseAppcheckV1SafetyNetConfig
      deprecated: true
      description: >-
        An app's SafetyNet configuration object. This configuration controls
        certain properties of the `AppCheckToken` returned by
        ExchangeSafetyNetToken, such as its ttl. Note that your registered
        SHA-256 certificate fingerprints are used to validate tokens issued by
        SafetyNet; please register them via the Firebase Console or
        programmatically via the [Firebase Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v11/projects.androidApps.sha/create).
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the SafetyNet configuration
            object, in the format: ```
            projects/{project_number}/apps/{app_id}/safetyNetConfig ```
          type: string
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            SafetyNet tokens will be valid. If unset, a default value of 1 hour
            is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
          format: google-duration
    GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse
      deprecated: true
      description: Response message for the BatchGetSafetyNetConfigs method.
      type: object
      properties:
        configs:
          description: SafetyNetConfigs retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
    GoogleFirebaseAppcheckV1PlayIntegrityConfig:
      id: GoogleFirebaseAppcheckV1PlayIntegrityConfig
      description: >-
        An app's Play Integrity configuration object. This configuration
        controls certain properties of the `AppCheckToken` returned by
        ExchangePlayIntegrityToken, such as its ttl. Note that your registered
        SHA-256 certificate fingerprints are used to validate tokens issued by
        the Play Integrity API; please register them via the Firebase Console or
        programmatically via the [Firebase Management
        Service](https://firebase.google.com/docs/projects/api/reference/rest/v1beta1/projects.androidApps.sha/create).
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the Play Integrity
            configuration object, in the format: ```
            projects/{project_number}/apps/{app_id}/playIntegrityConfig ```
          type: string
        tokenTtl:
          description: >-
            Specifies the duration for which App Check tokens exchanged from
            Play Integrity tokens will be valid. If unset, a default value of 1
            hour is assumed. Must be between 30 minutes and 7 days, inclusive.
          type: string
          format: google-duration
    GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse:
      id: GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse
      description: Response message for the BatchGetPlayIntegrityConfigs method.
      type: object
      properties:
        configs:
          description: PlayIntegrityConfigs retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig'
    GoogleFirebaseAppcheckV1DebugToken:
      id: GoogleFirebaseAppcheckV1DebugToken
      description: >-
        A *debug token* is a secret used during the development or integration
        testing of an app. It essentially allows the development or integration
        testing to bypass app attestation while still allowing App Check to
        enforce protection on supported production Firebase services.
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the debug token, in the
            format: ```
            projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id}
            ```
          type: string
        displayName:
          description: >-
            Required. A human readable display name used to identify this debug
            token.
          type: string
        token:
          description: >-
            Required. Input only. Immutable. The secret token itself. Must be
            provided during creation, and must be a UUID4, case insensitive.
            This field is immutable once set, and cannot be provided during an
            UpdateDebugToken request. You can, however, delete this debug token
            using DeleteDebugToken to revoke it. For security reasons, this
            field will never be populated in any response.
          type: string
        updateTime:
          description: >-
            Output only. Timestamp when this debug token was most recently
            updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleFirebaseAppcheckV1ListDebugTokensResponse:
      id: GoogleFirebaseAppcheckV1ListDebugTokensResponse
      description: Response message for the ListDebugTokens method.
      type: object
      properties:
        debugTokens:
          description: The DebugTokens retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
        nextPageToken:
          description: >-
            If the result list is too large to fit in a single response, then a
            token is returned. If the string is empty or omitted, then this
            response is the last page of results. This token can be used in a
            subsequent call to ListDebugTokens to find the next group of
            DebugTokens. Page tokens are short-lived and should not be
            persisted.
          type: string
    GoogleProtobufEmpty:
      id: GoogleProtobufEmpty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    GoogleFirebaseAppcheckV1Service:
      id: GoogleFirebaseAppcheckV1Service
      description: >-
        The enforcement configuration for a Firebase service supported by App
        Check.
      type: object
      properties:
        name:
          description: >-
            Required. The relative resource name of the service configuration
            object, in the format: ```
            projects/{project_number}/services/{service_id} ``` Note that the
            `service_id` element must be a supported service ID. Currently, the
            following service IDs are supported: *
            `firebasestorage.googleapis.com` (Cloud Storage for Firebase) *
            `firebasedatabase.googleapis.com` (Firebase Realtime Database) *
            `firestore.googleapis.com` (Cloud Firestore) *
            `oauth2.googleapis.com` (Google Identity for iOS)
          type: string
        enforcementMode:
          description: Required. The App Check enforcement mode for this service.
          type: string
          enumDescriptions:
            - >-
              Firebase App Check is not enforced for the service, nor are App
              Check metrics collected. Though the service is not protected by
              App Check in this mode, other applicable protections, such as user
              authorization, are still enforced. An unconfigured service is in
              this mode by default.
            - >-
              Firebase App Check is not enforced for the service. App Check
              metrics are collected to help you decide when to turn on
              enforcement for the service. Though the service is not protected
              by App Check in this mode, other applicable protections, such as
              user authorization, are still enforced. Some services require
              certain conditions to be met before they will work with App Check,
              such as requiring you to upgrade to a specific service tier. Until
              those requirements are met for a service, this `UNENFORCED`
              setting will have no effect and App Check will not work with that
              service.
            - >-
              Firebase App Check is enforced for the service. The service will
              reject any request that attempts to access your project's
              resources if it does not have valid App Check token attached, with
              some exceptions depending on the service; for example, some
              services will still allow requests bearing the developer's
              privileged service account credentials without an App Check token.
              App Check metrics continue to be collected to help you detect
              issues with your App Check integration and monitor the composition
              of your callers. While the service is protected by App Check,
              other applicable protections, such as user authorization, continue
              to be enforced at the same time. Use caution when choosing to
              enforce App Check on a Firebase service. If your users have not
              updated to an App Check capable version of your app, their apps
              will no longer be able to use your Firebase services that are
              enforcing App Check. App Check metrics can help you decide whether
              to enforce App Check on your Firebase services. If your app has
              not launched yet, you should enable enforcement immediately, since
              there are no outdated clients in use. Some services require
              certain conditions to be met before they will work with App Check,
              such as requiring you to upgrade to a specific service tier. Until
              those requirements are met for a service, this `ENFORCED` setting
              will have no effect and App Check will not work with that service.
          enum:
            - 'OFF'
            - UNENFORCED
            - ENFORCED
    GoogleFirebaseAppcheckV1ListServicesResponse:
      id: GoogleFirebaseAppcheckV1ListServicesResponse
      description: Response message for the ListServices method.
      type: object
      properties:
        services:
          description: The Services retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
        nextPageToken:
          description: >-
            If the result list is too large to fit in a single response, then a
            token is returned. If the string is empty or omitted, then this
            response is the last page of results. This token can be used in a
            subsequent call to ListServices to find the next group of Services.
            Page tokens are short-lived and should not be persisted.
          type: string
    GoogleFirebaseAppcheckV1BatchUpdateServicesRequest:
      id: GoogleFirebaseAppcheckV1BatchUpdateServicesRequest
      description: Request message for the BatchUpdateServices method.
      type: object
      properties:
        updateMask:
          description: >-
            Optional. A comma-separated list of names of fields in the Services
            to update. Example: `display_name`. If the `update_mask` field is
            set in both this request and any of the UpdateServiceRequest
            messages, they must match or the entire batch fails and no updates
            will be committed.
          type: string
          format: google-fieldmask
        requests:
          description: >-
            Required. The request messages specifying the Services to update. A
            maximum of 100 objects can be updated in a batch.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1UpdateServiceRequest'
    GoogleFirebaseAppcheckV1UpdateServiceRequest:
      id: GoogleFirebaseAppcheckV1UpdateServiceRequest
      description: >-
        Request message for the UpdateService method as well as an individual
        update message for the BatchUpdateServices method.
      type: object
      properties:
        service:
          description: >-
            Required. The Service to update. The Service's `name` field is used
            to identify the Service to be updated, in the format: ```
            projects/{project_number}/services/{service_id} ``` Note that the
            `service_id` element must be a supported service ID. Currently, the
            following service IDs are supported: *
            `firebasestorage.googleapis.com` (Cloud Storage for Firebase) *
            `firebasedatabase.googleapis.com` (Firebase Realtime Database) *
            `firestore.googleapis.com` (Cloud Firestore) *
            `oauth2.googleapis.com` (Google Identity for iOS)
          $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
        updateMask:
          description: >-
            Required. A comma-separated list of names of fields in the Service
            to update. Example: `enforcement_mode`.
          type: string
          format: google-fieldmask
    GoogleFirebaseAppcheckV1BatchUpdateServicesResponse:
      id: GoogleFirebaseAppcheckV1BatchUpdateServicesResponse
      description: Response message for the BatchUpdateServices method.
      type: object
      properties:
        services:
          description: Service objects after the updates have been applied.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
    GoogleFirebaseAppcheckV1ResourcePolicy:
      id: GoogleFirebaseAppcheckV1ResourcePolicy
      description: >-
        App Check enforcement policy for a specific resource of a Google service
        supported by App Check. Note that this policy will override the
        service-level configuration.
      type: object
      properties:
        name:
          description: >-
            Required. Identifier. The relative name of the resource policy
            object, in the format: ```
            projects/{project_number}/services/{service_id}/resourcePolicies/{resource_policy_id}
            ``` Note that the `service_id` element must be a supported service
            ID. Currently, the following service IDs are supported: *
            `oauth2.googleapis.com` (Google Identity for iOS)
            `resource_policy_id` is a system-generated UID.
          type: string
        targetResource:
          description: >-
            Required. Service specific name of the resource object to which this
            policy applies, in the format: * **iOS OAuth clients** (Google
            Identity for iOS):
            `//oauth2.googleapis.com/projects/{project_number}/oauthClients/{oauth_client_id}`
            Note that the resource must belong to the service specified in the
            `name` and be from the same project as this policy, but the resource
            is allowed to be missing at the time of creation of this policy; in
            that case, we make a best-effort attempt at respecting this policy,
            but it may not have any effect until the resource is fully created.
          type: string
        enforcementMode:
          description: >-
            Required. The App Check enforcement mode for this resource. This
            will override the EnforcementMode setting on the service.
          type: string
          enumDescriptions:
            - >-
              Firebase App Check is not enforced for the service, nor are App
              Check metrics collected. Though the service is not protected by
              App Check in this mode, other applicable protections, such as user
              authorization, are still enforced. An unconfigured service is in
              this mode by default.
            - >-
              Firebase App Check is not enforced for the service. App Check
              metrics are collected to help you decide when to turn on
              enforcement for the service. Though the service is not protected
              by App Check in this mode, other applicable protections, such as
              user authorization, are still enforced. Some services require
              certain conditions to be met before they will work with App Check,
              such as requiring you to upgrade to a specific service tier. Until
              those requirements are met for a service, this `UNENFORCED`
              setting will have no effect and App Check will not work with that
              service.
            - >-
              Firebase App Check is enforced for the service. The service will
              reject any request that attempts to access your project's
              resources if it does not have valid App Check token attached, with
              some exceptions depending on the service; for example, some
              services will still allow requests bearing the developer's
              privileged service account credentials without an App Check token.
              App Check metrics continue to be collected to help you detect
              issues with your App Check integration and monitor the composition
              of your callers. While the service is protected by App Check,
              other applicable protections, such as user authorization, continue
              to be enforced at the same time. Use caution when choosing to
              enforce App Check on a Firebase service. If your users have not
              updated to an App Check capable version of your app, their apps
              will no longer be able to use your Firebase services that are
              enforcing App Check. App Check metrics can help you decide whether
              to enforce App Check on your Firebase services. If your app has
              not launched yet, you should enable enforcement immediately, since
              there are no outdated clients in use. Some services require
              certain conditions to be met before they will work with App Check,
              such as requiring you to upgrade to a specific service tier. Until
              those requirements are met for a service, this `ENFORCED` setting
              will have no effect and App Check will not work with that service.
          enum:
            - 'OFF'
            - UNENFORCED
            - ENFORCED
        etag:
          description: >-
            This checksum is computed by the server based on the value of other
            fields, and may be sent on update and delete requests to ensure the
            client has an up-to-date value before proceeding. This etag is
            strongly validated as defined by RFC 7232.
          type: string
        updateTime:
          description: >-
            Output only. Timestamp when this resource policy configuration
            object was most recently updated.
          readOnly: true
          type: string
          format: google-datetime
    GoogleFirebaseAppcheckV1ListResourcePoliciesResponse:
      id: GoogleFirebaseAppcheckV1ListResourcePoliciesResponse
      description: Response message for the ListResourcePolicies method.
      type: object
      properties:
        resourcePolicies:
          description: The ResourcePolicy objects retrieved.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
        nextPageToken:
          description: >-
            If the result list is too large to fit in a single response, then a
            token is returned. If the string is empty or omitted, then this
            response is the last page of results. This token can be used in a
            subsequent call to ListResourcePolicies to find the next group of
            ResourcePolicy objects. Page tokens are short-lived and should not
            be persisted.
          type: string
    GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesRequest:
      id: GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesRequest
      description: Request message for the BatchUpdateResourcePolicies method.
      type: object
      properties:
        updateMask:
          description: >-
            Optional. A comma-separated list of names of fields in the
            ResourcePolicy objects to update. Example: `enforcement_mode`. If
            this field is present, the `update_mask` field in the
            UpdateResourcePolicyRequest messages must all match this field, or
            the entire batch fails and no updates will be committed.
          type: string
          format: google-fieldmask
        requests:
          description: >-
            Required. The request messages specifying the ResourcePolicy objects
            to update. A maximum of 100 objects can be updated in a batch.
          type: array
          items:
            $ref: >-
              #/components/schemas/GoogleFirebaseAppcheckV1UpdateResourcePolicyRequest
    GoogleFirebaseAppcheckV1UpdateResourcePolicyRequest:
      id: GoogleFirebaseAppcheckV1UpdateResourcePolicyRequest
      description: >-
        Request message for the UpdateResourcePolicy method as well as an
        individual update message for the BatchUpdateResourcePolicies method.
      type: object
      properties:
        resourcePolicy:
          description: >-
            Required. The ResourcePolicy to update. The ResourcePolicy's `name`
            field is used to identify the ResourcePolicy to be updated, in the
            format: ```
            projects/{project_number}/services/{service_id}/resourcePolicies/{resource_policy_id}
            ``` Note that the `service_id` element must be a supported service
            ID. Currently, the following service IDs are supported: *
            `oauth2.googleapis.com` (Google Identity for iOS)
          $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
        updateMask:
          description: >-
            Required. A comma-separated list of names of fields in the
            ResourcePolicy to update. Example: `enforcement_mode`.
          type: string
          format: google-fieldmask
    GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesResponse:
      id: GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesResponse
      description: Response message for the BatchUpdateResourcePolicies method.
      type: object
      properties:
        resourcePolicies:
          description: ResourcePolicy objects after the updates have been applied.
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
    GoogleFirebaseAppcheckV1PublicJwkSet:
      id: GoogleFirebaseAppcheckV1PublicJwkSet
      description: >-
        The currently active set of public keys that can be used to verify App
        Check tokens. This object is a JWK set as specified by [section 5 of RFC
        7517](https://tools.ietf.org/html/rfc7517#section-5). For security, the
        response **must not** be cached for longer than six hours.
      type: object
      properties:
        keys:
          description: >-
            The set of public keys. See [section 5.1 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-5).
          type: array
          items:
            $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PublicJwk'
    GoogleFirebaseAppcheckV1PublicJwk:
      id: GoogleFirebaseAppcheckV1PublicJwk
      description: >-
        A JWK as specified by [section 4 of RFC
        7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1
        of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1).
      type: object
      properties:
        kty:
          description: >-
            See [section 4.1 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.1).
          type: string
        use:
          description: >-
            See [section 4.2 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.2).
          type: string
        alg:
          description: >-
            See [section 4.4 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.4).
          type: string
        kid:
          description: >-
            See [section 4.5 of RFC
            7517](https://tools.ietf.org/html/rfc7517#section-4.5).
          type: string
        'n':
          description: >-
            See [section 6.3.1.1 of RFC
            7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1).
          type: string
        e:
          description: >-
            See [section 6.3.1.2 of RFC
            7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2).
          type: string
    GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest
      deprecated: true
      description: Request message for the ExchangeSafetyNetToken method.
      type: object
      properties:
        safetyNetToken:
          description: >-
            Required. The [SafetyNet attestation
            response](https://developer.android.com/training/safetynet/attestation#request-attestation-step)
            issued to your app.
          type: string
    GoogleFirebaseAppcheckV1AppCheckToken:
      id: GoogleFirebaseAppcheckV1AppCheckToken
      description: >-
        Encapsulates an *App Check token*, which are used to access backend
        services protected by App Check.
      type: object
      properties:
        token:
          description: >-
            The App Check token. App Check tokens are signed
            [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that
            identify the attested app and GCP project. This token is used to
            access Google services protected by App Check. These tokens can also
            be [verified by your own custom
            backends](https://firebase.google.com/docs/app-check/custom-resource-backend)
            using the Firebase Admin SDK or third-party libraries.
          type: string
        ttl:
          description: >-
            The duration from the time this token is minted until its
            expiration. This field is intended to ease client-side token
            management, since the client may have clock skew, but is still able
            to accurately measure a duration.
          type: string
          format: google-duration
    GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest:
      id: GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest
      description: Request message for the GeneratePlayIntegrityChallenge method.
      type: object
      properties: {}
    GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse:
      id: GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse
      description: Response message for the GeneratePlayIntegrityChallenge method.
      type: object
      properties:
        challenge:
          description: >-
            A one-time use
            [challenge](https://developer.android.com/google/play/integrity/verdict#protect-against-replay-attacks)
            for the client to pass to the Play Integrity API.
          type: string
        ttl:
          description: >-
            The duration from the time this challenge is minted until its
            expiration. This field is intended to ease client-side token
            management, since the client may have clock skew, but is still able
            to accurately measure a duration.
          type: string
          format: google-duration
    GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest
      description: Request message for the ExchangePlayIntegrityToken method.
      type: object
      properties:
        playIntegrityToken:
          description: >-
            Required. The [integrity verdict response token from Play
            Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify)
            issued to your app.
          type: string
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
    GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest
      description: Request message for the ExchangeDeviceCheckToken method.
      type: object
      properties:
        deviceToken:
          description: >-
            Required. The `device_token` as returned by Apple's client-side
            [DeviceCheck
            API](https://developer.apple.com/documentation/devicecheck/dcdevice).
            This is the base64 encoded `Data` (Swift) or `NSData` (ObjC) object.
          type: string
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
    GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest
      description: Request message for the ExchangeRecaptchaV3Token method.
      type: object
      properties:
        recaptchaV3Token:
          description: >-
            Required. The reCAPTCHA token as returned by the [reCAPTCHA v3
            JavaScript API](https://developers.google.com/recaptcha/docs/v3).
          type: string
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
    GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest
      description: Request message for the ExchangeRecaptchaEnterpriseToken method.
      type: object
      properties:
        recaptchaEnterpriseToken:
          description: >-
            Required. The reCAPTCHA token as returned by the [reCAPTCHA
            Enterprise JavaScript
            API](https://cloud.google.com/recaptcha-enterprise/docs/instrument-web-pages).
          type: string
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
    GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest
      description: Request message for the ExchangeCustomToken method.
      type: object
      properties:
        customToken:
          description: >-
            Required. A custom token signed using your project's Admin SDK
            service account credentials.
          type: string
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
    GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest:
      id: GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest
      description: Request message for the ExchangeDebugToken method.
      type: object
      properties:
        debugToken:
          description: >-
            Required. A debug token secret. This string must match a debug token
            secret previously created using CreateDebugToken.
          type: string
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
    GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest:
      id: GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest
      description: Request message for the GenerateAppAttestChallenge method.
      type: object
      properties: {}
    GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse:
      id: GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse
      description: Response message for the GenerateAppAttestChallenge method.
      type: object
      properties:
        challenge:
          description: >-
            A one-time use challenge for the client to pass to the App Attest
            API.
          type: string
          format: byte
        ttl:
          description: >-
            The duration from the time this challenge is minted until its
            expiration. This field is intended to ease client-side token
            management, since the client may have clock skew, but is still able
            to accurately measure a duration.
          type: string
          format: google-duration
    GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest:
      id: GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest
      description: Request message for the ExchangeAppAttestAttestation method.
      type: object
      properties:
        attestationStatement:
          description: >-
            Required. The App Attest statement returned by the client-side App
            Attest API. This is a base64url encoded CBOR object in the JSON
            response.
          type: string
          format: byte
        challenge:
          description: >-
            Required. A one-time challenge returned by an immediately prior call
            to GenerateAppAttestChallenge.
          type: string
          format: byte
        keyId:
          description: Required. The key ID generated by App Attest for the client app.
          type: string
          format: byte
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
    GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse:
      id: GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse
      description: Response message for the ExchangeAppAttestAttestation method.
      type: object
      properties:
        artifact:
          description: >-
            An artifact that can be used in future calls to
            ExchangeAppAttestAssertion.
          type: string
          format: byte
        appCheckToken:
          description: Encapsulates an App Check token.
          $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
    GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest:
      id: GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest
      description: Request message for the ExchangeAppAttestAssertion method.
      type: object
      properties:
        artifact:
          description: >-
            Required. The artifact returned by a previous call to
            ExchangeAppAttestAttestation.
          type: string
          format: byte
        assertion:
          description: >-
            Required. The CBOR-encoded assertion returned by the client-side App
            Attest API.
          type: string
          format: byte
        challenge:
          description: >-
            Required. A one-time challenge returned by an immediately prior call
            to GenerateAppAttestChallenge.
          type: string
          format: byte
        limitedUse:
          description: >-
            Specifies whether this attestation is for use in a *limited use*
            (`true`) or *session based* (`false`) context. To enable this
            attestation to be used with the *replay protection* feature, set
            this to `true`. The default value is `false`.
          type: boolean
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    services:
      id: firebase.appcheck.services
      name: services
      title: Services
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.services
        batch_update:
          operation:
            $ref: '#/paths/~1v1~1projects~1{projectsId}~1services:batchUpdate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/services/methods/patch'
          - $ref: '#/components/x-stackQL-resources/services/methods/batch_update'
        replace: []
        delete: []
    resource_policies:
      id: firebase.appcheck.resource_policies
      name: resource_policies
      title: Resource_policies
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}~1resourcePolicies~1{resourcePoliciesId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}~1resourcePolicies~1{resourcePoliciesId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}~1resourcePolicies~1{resourcePoliciesId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}~1resourcePolicies/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.resourcePolicies
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}~1resourcePolicies/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_update:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1services~1{servicesId}~1resourcePolicies:batchUpdate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/patch'
          - $ref: >-
              #/components/x-stackQL-resources/resource_policies/methods/batch_update
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_policies/methods/delete'
    apps:
      id: firebase.appcheck.apps
      name: apps
      title: Apps
      methods:
        exchange_safety_net_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeSafetyNetToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_play_integrity_challenge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:generatePlayIntegrityChallenge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_play_integrity_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangePlayIntegrityToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_device_check_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeDeviceCheckToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_recaptcha_v3_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeRecaptchaV3Token/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_recaptcha_enterprise_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeRecaptchaEnterpriseToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_custom_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeCustomToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_debug_token:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeDebugToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_app_attest_challenge:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:generateAppAttestChallenge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_app_attest_attestation:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeAppAttestAttestation/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_app_attest_assertion:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}:exchangeAppAttestAssertion/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    app_attest_config:
      id: firebase.appcheck.app_attest_config
      name: app_attest_config
      title: App_attest_config
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1appAttestConfig/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1appAttestConfig/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1-~1appAttestConfig:batchGet/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_attest_config/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/app_attest_config/methods/batch_get
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/app_attest_config/methods/patch'
        replace: []
        delete: []
    device_check_config:
      id: firebase.appcheck.device_check_config
      name: device_check_config
      title: Device_check_config
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1deviceCheckConfig/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1deviceCheckConfig/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1-~1deviceCheckConfig:batchGet/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/device_check_config/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/device_check_config/methods/batch_get
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/device_check_config/methods/patch'
        replace: []
        delete: []
    recaptcha_v3_config:
      id: firebase.appcheck.recaptcha_v3_config
      name: recaptcha_v3_config
      title: Recaptcha_v3_config
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaV3Config/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaV3Config/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1-~1recaptchaV3Config:batchGet/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recaptcha_v3_config/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/recaptcha_v3_config/methods/batch_get
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/recaptcha_v3_config/methods/patch'
        replace: []
        delete: []
    recaptcha_enterprise_config:
      id: firebase.appcheck.recaptcha_enterprise_config
      name: recaptcha_enterprise_config
      title: Recaptcha_enterprise_config
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaEnterpriseConfig/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1recaptchaEnterpriseConfig/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1-~1recaptchaEnterpriseConfig:batchGet/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/recaptcha_enterprise_config/methods/get
          - $ref: >-
              #/components/x-stackQL-resources/recaptcha_enterprise_config/methods/batch_get
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/recaptcha_enterprise_config/methods/patch
        replace: []
        delete: []
    safety_net_config:
      id: firebase.appcheck.safety_net_config
      name: safety_net_config
      title: Safety_net_config
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1safetyNetConfig/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1safetyNetConfig/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1-~1safetyNetConfig:batchGet/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/safety_net_config/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/safety_net_config/methods/batch_get
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/safety_net_config/methods/patch'
        replace: []
        delete: []
    play_integrity_config:
      id: firebase.appcheck.play_integrity_config
      name: play_integrity_config
      title: Play_integrity_config
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1playIntegrityConfig/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1playIntegrityConfig/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batch_get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1-~1playIntegrityConfig:batchGet/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/play_integrity_config/methods/get'
          - $ref: >-
              #/components/x-stackQL-resources/play_integrity_config/methods/batch_get
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/play_integrity_config/methods/patch
        replace: []
        delete: []
    debug_tokens:
      id: firebase.appcheck.debug_tokens
      name: debug_tokens
      title: Debug_tokens
      methods:
        get:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens~1{debugTokensId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens~1{debugTokensId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens~1{debugTokensId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.debugTokens
        create:
          operation:
            $ref: >-
              #/paths/~1v1~1projects~1{projectsId}~1apps~1{appsId}~1debugTokens/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/get'
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/patch'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/debug_tokens/methods/delete'
    jwks:
      id: firebase.appcheck.jwks
      name: jwks
      title: Jwks
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1jwks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jwks/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    oauth_clients:
      id: firebase.appcheck.oauth_clients
      name: oauth_clients
      title: Oauth_clients
      methods:
        exchange_debug_token:
          operation:
            $ref: >-
              #/paths/~1v1~1oauthClients~1{oauthClientsId}:exchangeDebugToken/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_app_attest_challenge:
          operation:
            $ref: >-
              #/paths/~1v1~1oauthClients~1{oauthClientsId}:generateAppAttestChallenge/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_app_attest_attestation:
          operation:
            $ref: >-
              #/paths/~1v1~1oauthClients~1{oauthClientsId}:exchangeAppAttestAttestation/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        exchange_app_attest_assertion:
          operation:
            $ref: >-
              #/paths/~1v1~1oauthClients~1{oauthClientsId}:exchangeAppAttestAssertion/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v1/projects/{projectsId}/services/{servicesId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets the Service configuration for the specified service name.
      operationId: firebaseappcheck.projects.services.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified Service configuration.
      operationId: firebaseappcheck.projects.services.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1Service'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/services:
    parameters: *ref_1
    get:
      description: >-
        Lists all Service configurations for the specified project. Only
        Services which were explicitly configured using UpdateService or
        BatchUpdateServices will be returned.
      operationId: firebaseappcheck.projects.services.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1ListServicesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1/projects/{projectsId}/services:batchUpdate:
    parameters: *ref_1
    post:
      description: Atomically updates the specified Service configurations.
      operationId: firebaseappcheck.projects.services.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateServicesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateServicesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/services/{servicesId}/resourcePolicies/{resourcePoliciesId}:
    parameters: *ref_1
    get:
      description: Gets the requested ResourcePolicy configuration.
      operationId: firebaseappcheck.projects.services.resourcePolicies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: path
          name: resourcePoliciesId
          required: true
          schema:
            type: string
    patch:
      description: Updates the specified ResourcePolicy configuration.
      operationId: firebaseappcheck.projects.services.resourcePolicies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: path
          name: resourcePoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: Deletes the specified ResourcePolicy configuration.
      operationId: firebaseappcheck.projects.services.resourcePolicies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: path
          name: resourcePoliciesId
          required: true
          schema:
            type: string
        - in: query
          name: etag
          schema:
            type: string
  /v1/projects/{projectsId}/services/{servicesId}/resourcePolicies:
    parameters: *ref_1
    get:
      description: >-
        Lists all ResourcePolicy configurations for the specified project and
        service.
      operationId: firebaseappcheck.projects.services.resourcePolicies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1ListResourcePoliciesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
    post:
      description: Creates the specified ResourcePolicy configuration.
      operationId: firebaseappcheck.projects.services.resourcePolicies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1ResourcePolicy'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/services/{servicesId}/resourcePolicies:batchUpdate:
    parameters: *ref_1
    post:
      description: Atomically updates the specified ResourcePolicy configurations.
      operationId: firebaseappcheck.projects.services.resourcePolicies.batchUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchUpdateResourcePoliciesResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: servicesId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeSafetyNetToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a [SafetyNet
        token](https://developer.android.com/training/safetynet/attestation#request-attestation-step).
        If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeSafetyNetToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeSafetyNetTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:generatePlayIntegrityChallenge:
    parameters: *ref_1
    post:
      description: >-
        Generates a challenge that protects the integrity of an immediately
        following integrity verdict request to the Play Integrity API. The next
        call to ExchangePlayIntegrityToken using the resulting integrity token
        will verify the presence and validity of the challenge. A challenge
        should not be reused for multiple calls.
      operationId: firebaseappcheck.projects.apps.generatePlayIntegrityChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1GeneratePlayIntegrityChallengeResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangePlayIntegrityToken:
    parameters: *ref_1
    post:
      description: >-
        Validates an [integrity verdict response token from Play
        Integrity](https://developer.android.com/google/play/integrity/verdict#decrypt-verify).
        If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangePlayIntegrityToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangePlayIntegrityTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeDeviceCheckToken:
    parameters: *ref_1
    post:
      description: >-
        Accepts a
        [`device_token`](https://developer.apple.com/documentation/devicecheck/dcdevice)
        issued by DeviceCheck, and attempts to validate it with Apple. If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeDeviceCheckToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeDeviceCheckTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaV3Token:
    parameters: *ref_1
    post:
      description: >-
        Validates a [reCAPTCHA v3 response
        token](https://developers.google.com/recaptcha/docs/v3). If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeRecaptchaV3Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeRecaptchaV3TokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeRecaptchaEnterpriseToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a [reCAPTCHA Enterprise response
        token](https://cloud.google.com/recaptcha-enterprise/docs/create-assessment#retrieve_token).
        If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeRecaptchaEnterpriseToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeCustomToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a custom token signed using your project's Admin SDK service
        account credentials. If valid, returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeCustomToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeCustomTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeDebugToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a debug token secret that you have previously created using
        CreateDebugToken. If valid, returns an AppCheckToken. Note that a
        restrictive quota is enforced on this method to prevent accidental
        exposure of the app to abuse.
      operationId: firebaseappcheck.projects.apps.exchangeDebugToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:generateAppAttestChallenge:
    parameters: *ref_1
    post:
      description: >-
        Generates a challenge that protects the integrity of an immediately
        following call to ExchangeAppAttestAttestation or
        ExchangeAppAttestAssertion. A challenge should not be reused for
        multiple calls.
      operationId: firebaseappcheck.projects.apps.generateAppAttestChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAttestation:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest CBOR attestation and verifies it with Apple using
        your preconfigured team and bundle IDs. If valid, returns an attestation
        artifact that can later be exchanged for an AppCheckToken using
        ExchangeAppAttestAssertion. For convenience and performance, this
        method's response object will also contain an AppCheckToken (if the
        verification is successful).
      operationId: firebaseappcheck.projects.apps.exchangeAppAttestAttestation
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}:exchangeAppAttestAssertion:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest assertion and an artifact previously obtained from
        ExchangeAppAttestAttestation and verifies those with Apple. If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.projects.apps.exchangeAppAttestAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/appAttestConfig:
    parameters: *ref_1
    get:
      description: Gets the AppAttestConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the AppAttestConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange AppAttest tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/apps/-/appAttestConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the AppAttestConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.appAttestConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchGetAppAttestConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/deviceCheckConfig:
    parameters: *ref_1
    get:
      description: >-
        Gets the DeviceCheckConfig for the specified app. For security reasons,
        the `private_key` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the DeviceCheckConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange DeviceCheck tokens for App Check tokens. For security reasons,
        the `private_key` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/apps/-/deviceCheckConfig:batchGet:
    parameters: *ref_1
    get:
      description: >-
        Atomically gets the DeviceCheckConfigs for the specified list of apps.
        For security reasons, the `private_key` field is never populated in the
        response.
      operationId: firebaseappcheck.projects.apps.deviceCheckConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchGetDeviceCheckConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/recaptchaV3Config:
    parameters: *ref_1
    get:
      description: >-
        Gets the RecaptchaV3Config for the specified app. For security reasons,
        the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the RecaptchaV3Config for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange reCAPTCHA V3 tokens for App Check tokens. For security reasons,
        the `site_secret` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/apps/-/recaptchaV3Config:batchGet:
    parameters: *ref_1
    get:
      description: >-
        Atomically gets the RecaptchaV3Configs for the specified list of apps.
        For security reasons, the `site_secret` field is never populated in the
        response.
      operationId: firebaseappcheck.projects.apps.recaptchaV3Config.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchGetRecaptchaV3ConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/recaptchaEnterpriseConfig:
    parameters: *ref_1
    get:
      description: Gets the RecaptchaEnterpriseConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the RecaptchaEnterpriseConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange reCAPTCHA Enterprise tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/apps/-/recaptchaEnterpriseConfig:batchGet:
    parameters: *ref_1
    get:
      description: >-
        Atomically gets the RecaptchaEnterpriseConfigs for the specified list of
        apps.
      operationId: firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchGetRecaptchaEnterpriseConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/safetyNetConfig:
    parameters: *ref_1
    get:
      description: Gets the SafetyNetConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the SafetyNetConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange SafetyNet tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/apps/-/safetyNetConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the SafetyNetConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.safetyNetConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchGetSafetyNetConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/playIntegrityConfig:
    parameters: *ref_1
    get:
      description: Gets the PlayIntegrityConfig for the specified app.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the PlayIntegrityConfig for the specified app. While this
        configuration is incomplete or invalid, the app will be unable to
        exchange Play Integrity tokens for App Check tokens.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
  /v1/projects/{projectsId}/apps/-/playIntegrityConfig:batchGet:
    parameters: *ref_1
    get:
      description: Atomically gets the PlayIntegrityConfigs for the specified list of apps.
      operationId: firebaseappcheck.projects.apps.playIntegrityConfig.batchGet
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1BatchGetPlayIntegrityConfigsResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: names
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/debugTokens/{debugTokensId}:
    parameters: *ref_1
    get:
      description: >-
        Gets the specified DebugToken. For security reasons, the `token` field
        is never populated in the response.
      operationId: firebaseappcheck.projects.apps.debugTokens.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
    patch:
      description: >-
        Updates the specified DebugToken. For security reasons, the `token`
        field cannot be updated, nor will it be populated in the response, but
        you can revoke the debug token using DeleteDebugToken.
      operationId: firebaseappcheck.projects.apps.debugTokens.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
        - in: query
          name: updateMask
          schema:
            type: string
            format: google-fieldmask
    delete:
      description: >-
        Deletes the specified DebugToken. A deleted debug token cannot be used
        to exchange for an App Check token. Use this method when you suspect the
        secret `token` has been compromised or when you no longer need the debug
        token.
      operationId: firebaseappcheck.projects.apps.debugTokens.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: path
          name: debugTokensId
          required: true
          schema:
            type: string
  /v1/projects/{projectsId}/apps/{appsId}/debugTokens:
    parameters: *ref_1
    get:
      description: >-
        Lists all DebugTokens for the specified app. For security reasons, the
        `token` field is never populated in the response.
      operationId: firebaseappcheck.projects.apps.debugTokens.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1ListDebugTokensResponse
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
    post:
      description: >-
        Creates a new DebugToken for the specified app. For security reasons,
        after the creation operation completes, the `token` field cannot be
        updated or retrieved, but you can revoke the debug token using
        DeleteDebugToken. Each app can have a maximum of 20 debug tokens.
      operationId: firebaseappcheck.projects.apps.debugTokens.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1DebugToken'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: appsId
          required: true
          schema:
            type: string
  /v1/jwks:
    parameters: *ref_1
    get:
      description: >-
        Returns a public JWK set as specified by [RFC
        7517](https://tools.ietf.org/html/rfc7517) that can be used to verify
        App Check tokens. Exactly one of the public keys in the returned set
        will successfully validate any App Check token that is currently valid.
      operationId: firebaseappcheck.jwks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1PublicJwkSet'
      parameters: []
  /v1/oauthClients/{oauthClientsId}:exchangeDebugToken:
    parameters: *ref_1
    post:
      description: >-
        Validates a debug token secret that you have previously created using
        CreateDebugToken. If valid, returns an AppCheckToken. Note that a
        restrictive quota is enforced on this method to prevent accidental
        exposure of the app to abuse.
      operationId: firebaseappcheck.oauthClients.exchangeDebugToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeDebugTokenRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
  /v1/oauthClients/{oauthClientsId}:generateAppAttestChallenge:
    parameters: *ref_1
    post:
      description: >-
        Generates a challenge that protects the integrity of an immediately
        following call to ExchangeAppAttestAttestation or
        ExchangeAppAttestAssertion. A challenge should not be reused for
        multiple calls.
      operationId: firebaseappcheck.oauthClients.generateAppAttestChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1GenerateAppAttestChallengeResponse
      parameters:
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
  /v1/oauthClients/{oauthClientsId}:exchangeAppAttestAttestation:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest CBOR attestation and verifies it with Apple using
        your preconfigured team and bundle IDs. If valid, returns an attestation
        artifact that can later be exchanged for an AppCheckToken using
        ExchangeAppAttestAssertion. For convenience and performance, this
        method's response object will also contain an AppCheckToken (if the
        verification is successful).
      operationId: firebaseappcheck.oauthClients.exchangeAppAttestAttestation
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAttestationResponse
      parameters:
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
  /v1/oauthClients/{oauthClientsId}:exchangeAppAttestAssertion:
    parameters: *ref_1
    post:
      description: >-
        Accepts an App Attest assertion and an artifact previously obtained from
        ExchangeAppAttestAttestation and verifies those with Apple. If valid,
        returns an AppCheckToken.
      operationId: firebaseappcheck.oauthClients.exchangeAppAttestAssertion
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GoogleFirebaseAppcheckV1ExchangeAppAttestAssertionRequest
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken'
      parameters:
        - in: path
          name: oauthClientsId
          required: true
          schema:
            type: string
