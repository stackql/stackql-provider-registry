openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Storage for Firebase API
  description: >-
    The Cloud Storage for Firebase API enables programmatic management of Cloud
    Storage buckets for use in Firebase projects
  version: v1beta
  x-discovery-doc-revision: '20250822'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://firebase.google.com/docs/storage
servers:
  - url: https://firebasestorage.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: >-
              See, edit, configure, and delete your Google Cloud data and see
              the email address for your Google Account.
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    Bucket:
      id: Bucket
      description: A storage bucket and its relation to a parent Firebase project.
      type: object
      properties:
        name:
          description: Output only. Resource name of the bucket.
          readOnly: true
          type: string
    ListBucketsResponse:
      id: ListBucketsResponse
      description: The response returned by `ListBuckets`.
      type: object
      properties:
        buckets:
          description: The list of linked buckets.
          type: array
          items:
            $ref: '#/components/schemas/Bucket'
        nextPageToken:
          description: >-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
    DefaultBucket:
      id: DefaultBucket
      description: >-
        Spark tier-eligible Cloud Storage bucket. One per project. This resource
        exists if the underlying Cloud Storage bucket exists and it is linked to
        your Firebase project. See https://firebase.google.com/pricing for
        pricing details.
      type: object
      properties:
        name:
          description: Resource name of the default bucket.
          type: string
        location:
          description: Immutable. Location of the default bucket.
          type: string
        bucket:
          description: Output only. Underlying bucket resource.
          readOnly: true
          $ref: '#/components/schemas/Bucket'
        storageClass:
          description: >-
            Immutable. Storage class of the default bucket. Supported values are
            available at
            https://cloud.google.com/storage/docs/storage-classes#classes.
          type: string
    Empty:
      id: Empty
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated
        empty messages in your APIs. A typical example is to use it as the
        request or the response type of an API method. For instance: service Foo
        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
      type: object
      properties: {}
    AddFirebaseRequest:
      id: AddFirebaseRequest
      description: >-
        The request used to link a Google Cloud Storage bucket to a Firebase
        project.
      type: object
      properties: {}
    RemoveFirebaseRequest:
      id: RemoveFirebaseRequest
      description: >-
        The request used to unlink a Google Cloud Storage bucket from a Firebase
        project.
      type: object
      properties: {}
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    default_bucket:
      id: firebase.storage.default_bucket
      name: default_bucket
      title: Default_bucket
      methods:
        get_default_bucket:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1defaultBucket/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_default_bucket:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1defaultBucket/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1defaultBucket/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/default_bucket/methods/get_default_bucket
        insert:
          - $ref: '#/components/x-stackQL-resources/default_bucket/methods/create'
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/default_bucket/methods/delete_default_bucket
    buckets:
      id: firebase.storage.buckets
      name: buckets
      title: Buckets
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.buckets
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/get'
          - $ref: '#/components/x-stackQL-resources/buckets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    buckets_firebase:
      id: firebase.storage.buckets_firebase
      name: buckets_firebase
      title: Buckets_firebase
      methods:
        add_firebase:
          operation:
            $ref: >-
              #/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}:addFirebase/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_firebase:
          operation:
            $ref: >-
              #/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}:removeFirebase/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/buckets_firebase/methods/add_firebase
        update: []
        replace: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/buckets_firebase/methods/remove_firebase
paths:
  /v1beta/projects/{projectsId}/defaultBucket:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: Gets the default bucket.
      operationId: firebasestorage.projects.getDefaultBucket
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultBucket'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
    delete:
      description: Unlinks and deletes the default bucket.
      operationId: firebasestorage.projects.deleteDefaultBucket
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
    post:
      description: >-
        Creates a Spark tier-eligible Cloud Storage bucket and links it to your
        Firebase project. If the default bucket already exists, this method will
        re-link it to your Firebase project. See
        https://firebase.google.com/pricing for pricing details.
      operationId: firebasestorage.projects.defaultBucket.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultBucket'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultBucket'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:
    parameters: *ref_1
    get:
      description: Gets a single linked storage bucket.
      operationId: firebasestorage.projects.buckets.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
  /v1beta/projects/{projectsId}/buckets:
    parameters: *ref_1
    get:
      description: Lists the linked storage buckets for a project.
      operationId: firebasestorage.projects.buckets.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBucketsResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:addFirebase:
    parameters: *ref_1
    post:
      description: Links a Google Cloud Storage bucket to a Firebase project.
      operationId: firebasestorage.projects.buckets.addFirebase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFirebaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:removeFirebase:
    parameters: *ref_1
    post:
      description: Unlinks a linked Google Cloud Storage bucket from a Firebase project.
      operationId: firebasestorage.projects.buckets.removeFirebase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFirebaseRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
