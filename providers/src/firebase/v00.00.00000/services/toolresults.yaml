openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Cloud Tool Results API
  description: API to publish and access results from developer tools.
  version: v1beta3
  x-discovery-doc-revision: '20230105'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://firebase.google.com/docs/test-lab/
servers:
  - url: https://toolresults.googleapis.com
components:
  schemas:
    ListTestCasesResponse:
      type: object
      id: ListTestCasesResponse
      properties:
        testCases:
          type: array
          description: List of test cases.
          items:
            $ref: '#/components/schemas/TestCase'
        nextPageToken:
          type: string
      description: Response message for StepService.ListTestCases.
    DeviceOutOfMemory:
      type: object
      description: A warning that device ran out of memory
      properties: {}
      id: DeviceOutOfMemory
    TestTiming:
      type: object
      id: TestTiming
      description: Testing timing break down to know phases.
      properties:
        testProcessDuration:
          description: 'How long it took to run the test process. - In response: present if previously set. - In create/update request: optional'
          $ref: '#/components/schemas/Duration'
    MergedResult:
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
          description: Outcome of the resource
        state:
          enum:
            - unknownState
            - pending
            - inProgress
            - complete
          enumDescriptions:
            - Should never be in this state. Exists for proto deserialization backward compatibility.
            - The Execution/Step is created, ready to run, but not running yet. If an Execution/Step is created without initial state, it is assumed that the Execution/Step is in PENDING state.
            - The Execution/Step is in progress.
            - The finalized, immutable state. Steps/Executions in this state cannot be modified.
          type: string
          description: State of the resource
        testSuiteOverviews:
          description: 'The combined and rolled-up result of each test suite that was run as part of this environment. Combining: When the test cases from a suite are run in different steps (sharding), the results are added back together in one overview. (e.g., if shard1 has 2 failures and shard2 has 1 failure than the overview failure_count = 3). Rollup: When test cases from the same suite are run multiple times (flaky), the results are combined (e.g., if testcase1.run1 fails, testcase1.run2 passes, and both testcase2.run1 and testcase2.run2 fail then the overview flaky_count = 1 and failure_count = 1).'
          type: array
          items:
            $ref: '#/components/schemas/TestSuiteOverview'
      id: MergedResult
      description: Merged test result for environment. If the environment has only one step (no reruns or shards), then the merged result is the same as the step result. If the environment has multiple shards and/or reruns, then the results of shards and reruns that belong to the same environment are merged into one environment result.
      type: object
    StepLabelsEntry:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      id: StepLabelsEntry
    NonSdkApiUsageViolation:
      properties:
        apiSignatures:
          type: array
          description: Signatures of a subset of those hidden API's.
          items:
            type: string
        uniqueApis:
          description: Total number of unique hidden API's accessed.
          type: integer
          format: int32
      id: NonSdkApiUsageViolation
      type: object
      description: Additional details for a non-sdk API usage violation.
    IosTest:
      id: IosTest
      properties:
        iosRoboTest:
          description: An iOS Robo test.
          $ref: '#/components/schemas/IosRoboTest'
        iosAppInfo:
          $ref: '#/components/schemas/IosAppInfo'
          description: Information about the application under test.
        testTimeout:
          $ref: '#/components/schemas/Duration'
          description: Max time a test is allowed to run before it is automatically cancelled.
        iosXcTest:
          description: An iOS XCTest.
          $ref: '#/components/schemas/IosXcTest'
        iosTestLoop:
          $ref: '#/components/schemas/IosTestLoop'
          description: An iOS test loop.
      type: object
      description: A iOS mobile test specification
    IndividualOutcome:
      type: object
      description: Step Id and outcome of each individual step that was run as a group with other steps with the same configuration.
      id: IndividualOutcome
      properties:
        stepId:
          type: string
        runDuration:
          $ref: '#/components/schemas/Duration'
          description: How long it took for this step to run.
        outcomeSummary:
          enumDescriptions:
            - Do not use. For proto versioning only.
            - 'The test matrix run was successful, for instance: - All the test cases passed. - Robo did not detect a crash of the application under test.'
            - 'A run failed, for instance: - One or more test case failed. - A test timed out. - The application under test crashed.'
            - Something unexpected happened. The run should still be considered unsuccessful but this is likely a transient problem and re-running the test might be successful.
            - 'All tests were skipped, for instance: - All device configurations were incompatible.'
            - A group of steps that were run with the same configuration had both failure and success outcomes.
          type: string
          enum:
            - unset
            - success
            - failure
            - inconclusive
            - skipped
            - flaky
        multistepNumber:
          type: integer
          format: int32
          description: Unique int given to each step. Ranges from 0(inclusive) to total number of steps(exclusive). The primary step is 0.
    PrimaryStep:
      type: object
      properties:
        rollUp:
          enumDescriptions:
            - Do not use. For proto versioning only.
            - 'The test matrix run was successful, for instance: - All the test cases passed. - Robo did not detect a crash of the application under test.'
            - 'A run failed, for instance: - One or more test case failed. - A test timed out. - The application under test crashed.'
            - Something unexpected happened. The run should still be considered unsuccessful but this is likely a transient problem and re-running the test might be successful.
            - 'All tests were skipped, for instance: - All device configurations were incompatible.'
            - A group of steps that were run with the same configuration had both failure and success outcomes.
          enum:
            - unset
            - success
            - failure
            - inconclusive
            - skipped
            - flaky
          description: Rollup test status of multiple steps that were run with the same configuration as a group.
          type: string
        individualOutcome:
          description: Step Id and outcome of each individual step.
          items:
            $ref: '#/components/schemas/IndividualOutcome'
          type: array
      id: PrimaryStep
      description: Stores rollup test status of multiple steps that were run as a group and outcome of each individual step.
    ListScreenshotClustersResponse:
      id: ListScreenshotClustersResponse
      properties:
        clusters:
          description: The set of clusters associated with an execution Always set
          type: array
          items:
            $ref: '#/components/schemas/ScreenshotCluster'
      type: object
    ListPerfSampleSeriesResponse:
      id: ListPerfSampleSeriesResponse
      properties:
        perfSampleSeries:
          items:
            $ref: '#/components/schemas/PerfSampleSeries'
          description: The resulting PerfSampleSeries sorted by id
          type: array
      type: object
    NonSdkApiInsight:
      properties:
        upgradeInsight:
          $ref: '#/components/schemas/UpgradeInsight'
          description: An insight indicating that the hidden API usage originates from the use of a library that needs to be upgraded.
        pendingGoogleUpdateInsight:
          $ref: '#/components/schemas/PendingGoogleUpdateInsight'
          description: An insight indicating that the hidden API usage originates from a Google-provided library.
        exampleTraceMessages:
          type: array
          items:
            type: string
          description: Optional sample stack traces, for which this insight applies (there should be at least one).
        matcherId:
          description: A unique ID, to be used for determining the effectiveness of this particular insight in the context of a matcher. (required)
          type: string
      description: Non-SDK API insights (to address debugging solutions).
      type: object
      id: NonSdkApiInsight
    Environment:
      id: Environment
      type: object
      properties:
        environmentResult:
          description: Merged result of the environment.
          $ref: '#/components/schemas/MergedResult'
        displayName:
          description: 'A short human-readable name to display in the UI. Maximum of 100 characters. For example: Nexus 5, API 27.'
          type: string
        creationTime:
          description: Output only. The time when the Environment was created.
          $ref: '#/components/schemas/Timestamp'
        executionId:
          description: Output only. An Execution id.
          type: string
        dimensionValue:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentDimensionValueEntry'
          description: 'Dimension values describing the environment. Dimension values always consist of "Model", "Version", "Locale", and "Orientation". - In response: always set - In create request: always set - In update request: never set'
        completionTime:
          $ref: '#/components/schemas/Timestamp'
          description: Output only. The time when the Environment status was set to complete. This value will be set automatically when state transitions to COMPLETE.
        resultsStorage:
          $ref: '#/components/schemas/ResultsStorage'
          description: The location where output files are stored in the user bucket.
        environmentId:
          type: string
          description: Output only. An Environment id.
        projectId:
          description: Output only. A Project id.
          type: string
        shardSummaries:
          description: Output only. Summaries of shards. Only one shard will present unless sharding feature is enabled in TestExecutionService.
          items:
            $ref: '#/components/schemas/ShardSummary'
          type: array
        historyId:
          type: string
          description: Output only. A History id.
      description: An Environment represents the set of test runs (Steps) from the parent Execution that are configured with the same set of dimensions (Model, Version, Locale, and Orientation). Multiple such runs occur particularly because of features like sharding (splitting up a test suite to run in parallel across devices) and reruns (running a test multiple times to check for different outcomes).
    UsedRoboDirective:
      id: UsedRoboDirective
      properties:
        resourceName:
          type: string
          description: The name of the resource that was used.
      type: object
      description: Additional details of a used Robo directive.
    Thumbnail:
      id: Thumbnail
      type: object
      properties:
        widthPx:
          format: int32
          description: The width of the thumbnail, in pixels. Always set.
          type: integer
        contentType:
          description: The thumbnail's content type, i.e. "image/png". Always set.
          type: string
        data:
          format: byte
          description: The thumbnail file itself. That is, the bytes here are precisely the bytes that make up the thumbnail file; they can be served as an image as-is (with the appropriate content type.) Always set.
          type: string
        heightPx:
          format: int32
          type: integer
          description: The height of the thumbnail, in pixels. Always set.
      description: A single thumbnail, with its size and format.
    PerfSample:
      id: PerfSample
      description: Resource representing a single performance measure or data point
      type: object
      properties:
        sampleTime:
          $ref: '#/components/schemas/Timestamp'
          description: Timestamp of collection.
        value:
          description: Value observed
          format: double
          type: number
    CrashDialogError:
      description: Crash dialog was detected during the test execution
      id: CrashDialogError
      type: object
      properties:
        crashPackage:
          type: string
          description: The name of the package that caused the dialog.
    IosTestLoop:
      type: object
      id: IosTestLoop
      properties:
        bundleId:
          type: string
          description: Bundle ID of the app.
      description: A game loop test of an iOS application.
    ProjectSettings:
      type: object
      properties:
        name:
          description: 'The name of the project''s settings. Always of the form: projects/{project-id}/settings In update request: never set In response: always set'
          type: string
        defaultBucket:
          description: 'The name of the Google Cloud Storage bucket to which results are written. By default, this is unset. In update request: optional In response: optional'
          type: string
      description: Per-project settings for the Tool Results service.
      id: ProjectSettings
    PerfEnvironment:
      id: PerfEnvironment
      properties:
        cpuInfo:
          $ref: '#/components/schemas/CPUInfo'
          description: CPU related environment info
        memoryInfo:
          $ref: '#/components/schemas/MemoryInfo'
          description: Memory related environment info
      type: object
      description: Encapsulates performance environment info
    UnusedRoboDirective:
      id: UnusedRoboDirective
      type: object
      description: Additional details of an unused robodirective.
      properties:
        resourceName:
          description: The name of the resource that was unused.
          type: string
    ListEnvironmentsResponse:
      id: ListEnvironmentsResponse
      properties:
        executionId:
          description: A Execution id Always set.
          type: string
        nextPageToken:
          type: string
          description: A continuation token to resume the query at the next item. Will only be set if there are more Environments to fetch.
        projectId:
          description: A Project id. Always set.
          type: string
        environments:
          items:
            $ref: '#/components/schemas/Environment'
          description: Environments. Always set.
          type: array
        historyId:
          type: string
          description: A History id. Always set.
      type: object
      description: Response message for EnvironmentService.ListEnvironments.
    InsufficientCoverage:
      type: object
      id: InsufficientCoverage
      properties: {}
      description: A warning that Robo did not crawl potentially important parts of the app.
    TestSuiteOverview:
      description: 'A summary of a test suite result either parsed from XML or uploaded directly by a user. Note: the API related comments are for StepService only. This message is also being used in ExecutionService in a read only mode for the corresponding step.'
      properties:
        failureCount:
          description: 'Number of failed test cases, typically set by the service by parsing the xml_source. May also be set by the user. - In create/response: always set - In update request: never'
          type: integer
          format: int32
        name:
          type: string
          description: 'The name of the test suite. - In create/response: always set - In update request: never'
        skippedCount:
          type: integer
          format: int32
          description: 'Number of test cases not run, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never'
        totalCount:
          format: int32
          type: integer
          description: 'Number of test cases, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never'
        xmlSource:
          description: 'If this test suite was parsed from XML, this is the URI where the original XML file is stored. Note: Multiple test suites can share the same xml_source Returns INVALID_ARGUMENT if the uri format is not supported. - In create/response: optional - In update request: never'
          $ref: '#/components/schemas/FileReference'
        errorCount:
          description: 'Number of test cases in error, typically set by the service by parsing the xml_source. - In create/response: always set - In update request: never'
          type: integer
          format: int32
        elapsedTime:
          description: Elapsed time of test suite.
          $ref: '#/components/schemas/Duration'
        flakyCount:
          type: integer
          format: int32
          description: Number of flaky test cases, set by the service by rolling up flaky test attempts. Present only for rollup test suite overview at environment level. A step cannot have flaky test cases.
      id: TestSuiteOverview
      type: object
    Timestamp:
      description: A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one. All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear). The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.
      id: Timestamp
      properties:
        nanos:
          type: integer
          format: int32
          description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.
        seconds:
          type: string
          format: int64
          description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
      type: object
    NativeCrash:
      properties:
        stackTrace:
          $ref: '#/components/schemas/StackTrace'
          description: The stack trace of the native crash. Optional.
      type: object
      description: Additional details for a native crash.
      id: NativeCrash
    Image:
      id: Image
      properties:
        thumbnail:
          description: The thumbnail.
          $ref: '#/components/schemas/Thumbnail'
        sourceImage:
          $ref: '#/components/schemas/ToolOutputReference'
          description: A reference to the full-size, original image. This is the same as the tool_outputs entry for the image under its Step. Always set.
        error:
          description: An error explaining why the thumbnail could not be rendered.
          $ref: '#/components/schemas/Status'
        stepId:
          type: string
          description: The step to which the image is attached. Always set.
      type: object
      description: An image, with a link to the main image and a thumbnail.
    ToolExecutionStep:
      properties:
        toolExecution:
          description: 'A Tool execution. - In response: present if set by create/update request - In create/update request: optional'
          $ref: '#/components/schemas/ToolExecution'
      id: ToolExecutionStep
      type: object
      description: 'Generic tool step to be used for binaries we do not explicitly support. For example: running cp to copy artifacts from one location to another.'
    ResultsStorage:
      type: object
      description: The storage for test results.
      id: ResultsStorage
      properties:
        xunitXmlFile:
          $ref: '#/components/schemas/FileReference'
          description: The path to the Xunit XML file.
        resultsStoragePath:
          description: The root directory for test results.
          $ref: '#/components/schemas/FileReference'
    StepSummary:
      id: StepSummary
      description: Lightweight summary of a step within this execution.
      properties: {}
      type: object
    UpgradeInsight:
      description: This insight is a recommendation to upgrade a given library to the specified version, in order to avoid dependencies on non-SDK APIs.
      properties:
        upgradeToVersion:
          description: 'The suggested version to upgrade to. Optional: In case we are not sure which version solves this problem'
          type: string
        packageName:
          type: string
          description: The name of the package to be upgraded.
      id: UpgradeInsight
      type: object
    ToolExitCode:
      properties:
        number:
          type: integer
          description: 'Tool execution exit code. A value of 0 means that the execution was successful. - In response: always set - In create/update request: always set'
          format: int32
      type: object
      id: ToolExitCode
      description: Exit code from a tool execution.
    BatchCreatePerfSamplesResponse:
      id: BatchCreatePerfSamplesResponse
      type: object
      properties:
        perfSamples:
          items:
            $ref: '#/components/schemas/PerfSample'
          type: array
    BatchCreatePerfSamplesRequest:
      id: BatchCreatePerfSamplesRequest
      type: object
      description: The request must provide up to a maximum of 5000 samples to be created; a larger sample size will cause an INVALID_ARGUMENT error
      properties:
        perfSamples:
          type: array
          description: The set of PerfSamples to create should not include existing timestamps
          items:
            $ref: '#/components/schemas/PerfSample'
    Duration:
      type: object
      properties:
        nanos:
          description: Signed fractions of a second at nanosecond resolution of the span of time. Durations less than one second are represented with a 0 `seconds` field and a positive or negative `nanos` field. For durations of one second or more, a non-zero value for the `nanos` field must be of the same sign as the `seconds` field. Must be from -999,999,999 to +999,999,999 inclusive.
          format: int32
          type: integer
        seconds:
          format: int64
          description: 'Signed seconds of the span of time. Must be from -315,576,000,000 to +315,576,000,000 inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'
          type: string
      description: ' A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.'
      id: Duration
    TestIssue:
      description: An issue detected occurring during a test execution.
      properties:
        stackTrace:
          $ref: '#/components/schemas/StackTrace'
          description: Deprecated in favor of stack trace fields inside specific warnings.
        category:
          enum:
            - unspecifiedCategory
            - common
            - robo
          enumDescriptions:
            - Default unspecified category. Do not use. For versioning only.
            - Issue is not specific to a particular test kind (e.g., a native crash).
            - Issue is specific to Robo run.
          description: Category of issue. Required.
          type: string
        errorMessage:
          description: A brief human-readable message describing the issue. Required.
          type: string
        warning:
          description: Warning message with additional details of the issue. Should always be a message from com.google.devtools.toolresults.v1.warnings
          $ref: '#/components/schemas/Any'
        severity:
          enumDescriptions:
            - Default unspecified severity. Do not use. For versioning only.
            - Non critical issue, providing users with some info about the test run.
            - Non critical issue, providing users with some hints on improving their testing experience, e.g., suggesting to use Game Loops.
            - Potentially critical issue.
            - Critical issue.
          description: Severity of issue. Required.
          enum:
            - unspecifiedSeverity
            - info
            - suggestion
            - warning
            - severe
          type: string
        type:
          enum:
            - unspecifiedType
            - fatalException
            - nativeCrash
            - anr
            - unusedRoboDirective
            - compatibleWithOrchestrator
            - launcherActivityNotFound
            - startActivityNotFound
            - incompleteRoboScriptExecution
            - completeRoboScriptExecution
            - failedToInstall
            - availableDeepLinks
            - nonSdkApiUsageViolation
            - nonSdkApiUsageReport
            - encounteredNonAndroidUiWidgetScreen
            - encounteredLoginScreen
            - performedGoogleLogin
            - iosException
            - iosCrash
            - performedMonkeyActions
            - usedRoboDirective
            - usedRoboIgnoreDirective
            - insufficientCoverage
            - inAppPurchases
            - crashDialogError
            - uiElementsTooDeep
            - blankScreen
            - overlappingUiElements
            - unityException
            - deviceOutOfMemory
            - logcatCollectionError
            - detectedAppSplashScreen
          enumDescriptions:
            - Default unspecified type. Do not use. For versioning only.
            - Issue is a fatal exception.
            - Issue is a native crash.
            - Issue is an ANR crash.
            - Issue is an unused robo directive.
            - Issue is a suggestion to use orchestrator.
            - Issue with finding a launcher activity
            - Issue with resolving a user-provided intent to start an activity
            - A Robo script was not fully executed.
            - A Robo script was fully and successfully executed.
            - The APK failed to install.
            - The app-under-test has deep links, but none were provided to Robo.
            - App accessed a non-sdk Api.
            - App accessed a non-sdk Api (new detailed report)
            - Robo crawl encountered at least one screen with elements that are not Android UI widgets.
            - Robo crawl encountered at least one probable login screen.
            - Robo signed in with Google.
            - iOS App crashed with an exception.
            - iOS App crashed without an exception (e.g. killed).
            - Robo crawl involved performing some monkey actions.
            - Robo crawl used a Robo directive.
            - Robo crawl used a Robo directive to ignore an UI element.
            - Robo did not crawl some potentially important parts of the app.
            - Robo crawl involved some in-app purchases.
            - Crash dialog was detected during the test execution
            - UI element depth is greater than the threshold
            - Blank screen is found in the Robo crawl
            - Overlapping UI elements are found in the Robo crawl
            - An uncaught Unity exception was detected (these don't crash apps).
            - Device running out of memory was detected
            - Problems detected while collecting logcat
            - Robo detected a splash screen provided by app (vs. Android OS splash screen).
          description: Type of issue. Required.
          type: string
      type: object
      id: TestIssue
    AvailableDeepLinks:
      id: AvailableDeepLinks
      type: object
      properties: {}
      description: A suggestion to use deep links for a Robo run.
    InconclusiveDetail:
      type: object
      id: InconclusiveDetail
      description: Details for an outcome with an INCONCLUSIVE outcome summary.
      properties:
        infrastructureFailure:
          description: If the test runner could not determine success or failure because the test depends on a component other than the system under test which failed. For example, a mobile test requires provisioning a device where the test executes, and that provisioning can fail.
          type: boolean
        abortedByUser:
          type: boolean
          description: If the end user aborted the test execution before a pass or fail could be determined. For example, the user pressed ctrl-c which sent a kill signal to the test runner while the test was running.
        hasErrorLogs:
          type: boolean
          description: If results are being provided to the user in certain cases of infrastructure failures
    PendingGoogleUpdateInsight:
      type: object
      id: PendingGoogleUpdateInsight
      description: This insight indicates that the hidden API usage originates from a Google-provided library. Users need not take any action.
      properties:
        nameOfGoogleLibrary:
          type: string
          description: The name of the Google-provided library with the non-SDK API dependency.
    Any:
      id: Any
      properties:
        value:
          format: byte
          description: Must be a valid serialized protocol buffer of the above specified type.
          type: string
        typeUrl:
          description: 'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL''s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a google.protobuf.Type value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the URL, or have them precompiled into a binary to avoid any lookup. Therefore, binary compatibility needs to be preserved on changes to types. (Use versioned type names to manage breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'
          type: string
      description: ' `Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++. Foo foo = ...; Any any; any.PackFrom(foo); ... if (any.UnpackTo(&foo)) { ... } Example 2: Pack and unpack a message in Java. Foo foo = ...; Any any = Any.pack(foo); ... if (any.is(Foo.class)) { foo = any.unpack(Foo.class); } Example 3: Pack and unpack a message in Python. foo = Foo(...) any = Any() any.Pack(foo) ... if any.Is(Foo.DESCRIPTOR): any.Unpack(foo) ... Example 4: Pack and unpack a message in Go foo := &pb.Foo{...} any, err := ptypes.MarshalAny(foo) ... foo := &pb.Foo{} if err := ptypes.UnmarshalAny(any, foo); err != nil { ... } The pack methods provided by protobuf library will by default use ''type.googleapis.com/full.type.name'' as the type URL and the unpack methods only use the fully qualified type name after the last ''/'' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". # JSON The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example: package google.profile; message Person { string first_name = 1; string last_name = 2; } { "@type": "type.googleapis.com/google.profile.Person", "firstName": , "lastName": } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message google.protobuf.Duration): { "@type": "type.googleapis.com/google.protobuf.Duration", "value": "1.212s" }'
      type: object
    SuccessDetail:
      type: object
      description: Details for an outcome with a SUCCESS outcome summary. LINT.IfChange
      id: SuccessDetail
      properties:
        otherNativeCrash:
          type: boolean
          description: If a native process other than the app crashed.
    IosAppInfo:
      description: iOS app information
      type: object
      properties:
        name:
          description: The name of the app. Required
          type: string
      id: IosAppInfo
    StackTrace:
      id: StackTrace
      type: object
      description: A stacktrace.
      properties:
        exception:
          description: The stack trace message. Required
          type: string
    Screen:
      properties:
        fileReference:
          type: string
          description: File reference of the png file. Required.
        model:
          description: Model of the device that the screenshot was taken on. Required.
          type: string
        version:
          description: OS version of the device that the screenshot was taken on. Required.
          type: string
        locale:
          type: string
          description: Locale of the device that the screenshot was taken on. Required.
      type: object
      id: Screen
    ListStepsResponse:
      properties:
        nextPageToken:
          type: string
          description: A continuation token to resume the query at the next item. If set, indicates that there are more steps to read, by calling list again with this value in the page_token field.
        steps:
          type: array
          description: Steps.
          items:
            $ref: '#/components/schemas/Step'
      type: object
      id: ListStepsResponse
      description: Response message for StepService.List.
    AndroidRoboTest:
      type: object
      id: AndroidRoboTest
      description: A test of an android application that explores the application on a virtual or physical Android device, finding culprits and crashes as it goes.
      properties:
        maxSteps:
          description: The max number of steps/actions Robo can execute. Default is no limit (0). Optional
          format: int32
          type: integer
        maxDepth:
          type: integer
          description: The max depth of the traversal stack Robo can explore. Optional
          format: int32
        bootstrapRunnerClass:
          type: string
          description: The runner class for the bootstrap. Optional
        appInitialActivity:
          type: string
          description: The initial activity that should be used to start the app. Optional
        bootstrapPackageId:
          type: string
          description: The java package for the bootstrap. Optional
    Execution:
      id: Execution
      description: 'An Execution represents a collection of Steps. For instance, it could represent: - a mobile test executed across a range of device configurations - a jenkins job with a build step followed by a test step The maximum size of an execution message is 1 MiB. An Execution can be updated until its state is set to COMPLETE at which point it becomes immutable.'
      type: object
      properties:
        completionTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the Execution status transitioned to COMPLETE. This value will be set automatically when state transitions to COMPLETE. - In response: set if the execution state is COMPLETE. - In create/update request: never set'
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the Execution was created. This value will be set automatically when CreateExecution is called. - In response: always set - In create/update request: never set'
        dimensionDefinitions:
          type: array
          items:
            $ref: '#/components/schemas/MatrixDimensionDefinition'
          description: 'The dimensions along which different steps in this execution may vary. This must remain fixed over the life of the execution. Returns INVALID_ARGUMENT if this field is set in an update request. Returns INVALID_ARGUMENT if the same name occurs in more than one dimension_definition. Returns INVALID_ARGUMENT if the size of the list is over 100. - In response: present if set by create - In create request: optional - In update request: never set'
        executionId:
          type: string
          description: 'A unique identifier within a History for this Execution. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create/update request: never set'
        specification:
          $ref: '#/components/schemas/Specification'
          description: 'Lightweight information about execution request. - In response: present if set by create - In create: optional - In update: optional'
        state:
          type: string
          enumDescriptions:
            - Should never be in this state. Exists for proto deserialization backward compatibility.
            - The Execution/Step is created, ready to run, but not running yet. If an Execution/Step is created without initial state, it is assumed that the Execution/Step is in PENDING state.
            - The Execution/Step is in progress.
            - The finalized, immutable state. Steps/Executions in this state cannot be modified.
          enum:
            - unknownState
            - pending
            - inProgress
            - complete
          description: 'The initial state is IN_PROGRESS. The only legal state transitions is from IN_PROGRESS to COMPLETE. A PRECONDITION_FAILED will be returned if an invalid transition is requested. The state can only be set to COMPLETE once. A FAILED_PRECONDITION will be returned if the state is set to COMPLETE multiple times. If the state is set to COMPLETE, all the in-progress steps within the execution will be set as COMPLETE. If the outcome of the step is not set, the outcome will be set to INCONCLUSIVE. - In response always set - In create/update request: optional'
        testExecutionMatrixId:
          type: string
          description: 'TestExecution Matrix ID that the TestExecutionService uses. - In response: present if set by create - In create: optional - In update: never set'
        outcome:
          description: 'Classify the result, for example into SUCCESS or FAILURE - In response: present if set by create/update request - In create/update request: optional'
          $ref: '#/components/schemas/Outcome'
    GraphicsStatsBucket:
      id: GraphicsStatsBucket
      properties:
        renderMillis:
          description: Lower bound of render time in milliseconds.
          type: string
          format: int64
        frameCount:
          type: string
          format: int64
          description: Number of frames in the bucket.
      type: object
    EnvironmentDimensionValueEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
      id: EnvironmentDimensionValueEntry
    Step:
      description: 'A Step represents a single operation performed as part of Execution. A step can be used to represent the execution of a tool ( for example a test runner execution or an execution of a compiler). Steps can overlap (for instance two steps might have the same start time if some operations are done in parallel). Here is an example, let''s consider that we have a continuous build is executing a test runner for each iteration. The workflow would look like: - user creates a Execution with id 1 - user creates an TestExecutionStep with id 100 for Execution 1 - user update TestExecutionStep with id 100 to add a raw xml log + the service parses the xml logs and returns a TestExecutionStep with updated TestResult(s). - user update the status of TestExecutionStep with id 100 to COMPLETE A Step can be updated until its state is set to COMPLETE at which points it becomes immutable. Next tag: 27'
      type: object
      id: Step
      properties:
        creationTime:
          description: 'The time when the step was created. - In response: always set - In create/update request: never set'
          $ref: '#/components/schemas/Timestamp'
        testExecutionStep:
          description: An execution of a test runner.
          $ref: '#/components/schemas/TestExecutionStep'
        multiStep:
          description: 'Details when multiple steps are run with the same configuration as a group. These details can be used identify which group this step is part of. It also identifies the groups ''primary step'' which indexes all the group members. - In response: present if previously set. - In create request: optional, set iff this step was performed more than once. - In update request: optional'
          $ref: '#/components/schemas/MultiStep'
        completionTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The time when the step status was set to complete. This value will be set automatically when state transitions to COMPLETE. - In response: set if the execution state is COMPLETE. - In create/update request: never set'
        toolExecutionStep:
          $ref: '#/components/schemas/ToolExecutionStep'
          description: An execution of a tool (used for steps we don't explicitly support).
        dimensionValue:
          type: array
          items:
            $ref: '#/components/schemas/StepDimensionValueEntry'
          description: 'If the execution containing this step has any dimension_definition set, then this field allows the child to specify the values of the dimensions. The keys must exactly match the dimension_definition of the execution. For example, if the execution has `dimension_definition = [''attempt'', ''device'']` then a step must define values for those dimensions, eg. `dimension_value = [''attempt'': ''1'', ''device'': ''Nexus 6'']` If a step does not participate in one dimension of the matrix, the value for that dimension should be empty string. For example, if one of the tests is executed by a runner which does not support retries, the step could have `dimension_value = [''attempt'': '''', ''device'': ''Nexus 6'']` If the step does not participate in any dimensions of the matrix, it may leave dimension_value unset. A PRECONDITION_FAILED will be returned if any of the keys do not exist in the dimension_definition of the execution. A PRECONDITION_FAILED will be returned if another step in this execution already has the same name and dimension_value, but differs on other data fields, for example, step field is different. A PRECONDITION_FAILED will be returned if dimension_value is set, and there is a dimension_definition in the execution which is not specified as one of the keys. - In response: present if set by create - In create request: optional - In update request: never set'
        outcome:
          description: 'Classification of the result, for example into SUCCESS or FAILURE - In response: present if set by create/update request - In create/update request: optional'
          $ref: '#/components/schemas/Outcome'
        deviceUsageDuration:
          $ref: '#/components/schemas/Duration'
          description: 'How much the device resource is used to perform the test. This is the device usage used for billing purpose, which is different from the run_duration, for example, infrastructure failure won''t be charged for device usage. PRECONDITION_FAILED will be returned if one attempts to set a device_usage on a step which already has this field set. - In response: present if previously set. - In create request: optional - In update request: optional'
        stepId:
          type: string
          description: 'A unique identifier within a Execution for this Step. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response: always set - In create/update request: never set'
        hasImages:
          type: boolean
          description: 'Whether any of the outputs of this step are images whose thumbnails can be fetched with ListThumbnails. - In response: always set - In create/update request: never set'
        state:
          type: string
          enumDescriptions:
            - Should never be in this state. Exists for proto deserialization backward compatibility.
            - The Execution/Step is created, ready to run, but not running yet. If an Execution/Step is created without initial state, it is assumed that the Execution/Step is in PENDING state.
            - The Execution/Step is in progress.
            - The finalized, immutable state. Steps/Executions in this state cannot be modified.
          enum:
            - unknownState
            - pending
            - inProgress
            - complete
          description: 'The initial state is IN_PROGRESS. The only legal state transitions are * IN_PROGRESS -> COMPLETE A PRECONDITION_FAILED will be returned if an invalid transition is requested. It is valid to create Step with a state set to COMPLETE. The state can only be set to COMPLETE once. A PRECONDITION_FAILED will be returned if the state is set to COMPLETE multiple times. - In response: always set - In create/update request: optional'
        runDuration:
          $ref: '#/components/schemas/Duration'
          description: 'How long it took for this step to run. If unset, this is set to the difference between creation_time and completion_time when the step is set to the COMPLETE state. In some cases, it is appropriate to set this value separately: For instance, if a step is created, but the operation it represents is queued for a few minutes before it executes, it would be appropriate not to include the time spent queued in its run_duration. PRECONDITION_FAILED will be returned if one attempts to set a run_duration on a step which already has this field set. - In response: present if previously set; always present on COMPLETE step - In create request: optional - In update request: optional'
        description:
          description: 'A description of this tool For example: mvn clean package -D skipTests=true - In response: present if set by create/update request - In create/update request: optional'
          type: string
        name:
          type: string
          description: 'A short human-readable name to display in the UI. Maximum of 100 characters. For example: Clean build A PRECONDITION_FAILED will be returned upon creating a new step if it shares its name and dimension_value with an existing step. If two steps represent a similar action, but have different dimension values, they should share the same name. For instance, if the same set of tests is run on two different platforms, the two steps should have the same name. - In response: always set - In create request: always set - In update request: never set'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/StepLabelsEntry'
          description: 'Arbitrary user-supplied key/value pairs that are associated with the step. Users are responsible for managing the key namespace such that keys don''t accidentally collide. An INVALID_ARGUMENT will be returned if the number of labels exceeds 100 or if the length of any of the keys or values exceeds 100 characters. - In response: always set - In create request: optional - In update request: optional; any new key/value pair will be added to the map, and any new value for an existing key will update that key''s value'
    AndroidInstrumentationTest:
      type: object
      description: A test of an Android application that can control an Android component independently of its normal lifecycle. See for more information on types of Android tests.
      id: AndroidInstrumentationTest
      properties:
        testTargets:
          items:
            type: string
          description: 'Each target must be fully qualified with the package name or class name, in one of these formats: - "package package_name" - "class package_name.class_name" - "class package_name.class_name#method_name" If empty, all targets in the module will be run.'
          type: array
        testRunnerClass:
          type: string
          description: The InstrumentationTestRunner class. Required
        testPackageId:
          description: The java package for the test to be executed. Required
          type: string
        useOrchestrator:
          description: The flag indicates whether Android Test Orchestrator will be used to run test or not.
          type: boolean
    Specification:
      description: The details about how to run the execution.
      type: object
      properties:
        androidTest:
          $ref: '#/components/schemas/AndroidTest'
          description: An Android mobile test execution specification.
        iosTest:
          $ref: '#/components/schemas/IosTest'
          description: An iOS mobile test execution specification.
      id: Specification
    UnspecifiedWarning:
      id: UnspecifiedWarning
      type: object
      description: Default unspecified warning.
      properties: {}
    AndroidTestLoop:
      id: AndroidTestLoop
      description: Test Loops are tests that can be launched by the app itself, determining when to run by listening for an intent.
      type: object
      properties: {}
    MatrixDimensionDefinition:
      id: MatrixDimensionDefinition
      description: One dimension of the matrix of different runs of a step.
      properties: {}
      type: object
    StartActivityNotFound:
      type: object
      description: User provided intent failed to resolve to an activity.
      properties:
        uri:
          type: string
        action:
          type: string
      id: StartActivityNotFound
    IosRoboTest:
      type: object
      properties: {}
      description: A Robo test for an iOS application.
      id: IosRoboTest
    LogcatCollectionError:
      description: A warning that there were issues in logcat collection.
      type: object
      properties: {}
      id: LogcatCollectionError
    SuggestionProto:
      properties:
        region:
          $ref: '#/components/schemas/RegionProto'
          description: Region within the screenshot that is relevant to this suggestion. Optional.
        helpUrl:
          description: Reference to a help center article concerning this type of suggestion. Always set.
          type: string
        shortMessage:
          description: Concise message, in the user's language, representing the suggestion, which may contain markup. Always set.
          $ref: '#/components/schemas/SafeHtmlProto'
        screenId:
          description: ID of the screen for the suggestion. It is used for getting the corresponding screenshot path. For example, screen_id "1" corresponds to "1.png" file in GCS. Always set.
          type: string
        resourceName:
          type: string
          description: Reference to a view element, identified by its resource name, if it has one.
        title:
          description: General title for the suggestion, in the user's language, without markup. Always set.
          type: string
        longMessage:
          $ref: '#/components/schemas/SafeHtmlProto'
          description: Message, in the user's language, explaining the suggestion, which may contain markup. Always set.
        secondaryPriority:
          description: Relative importance of a suggestion as compared with other suggestions that have the same priority and category. This is a meaningless value that can be used to order suggestions that are in the same category and have the same priority. The larger values have higher priority (i.e., are more important). Optional.
          type: number
          format: double
        pseudoResourceId:
          description: A somewhat human readable identifier of the source view, if it does not have a resource_name. This is a path within the accessibility hierarchy, an element with resource name; similar to an XPath.
          type: string
        priority:
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
          description: Relative importance of a suggestion. Always set.
          enum:
            - unknownPriority
            - error
            - warning
            - info
      type: object
      id: SuggestionProto
    SuggestionClusterProto:
      description: A set of similar suggestions that we suspect are closely related. This proto and most of the nested protos are branched from foxandcrown.prelaunchreport.service.SuggestionClusterProto, replacing PLR's dependencies with FTL's.
      type: object
      properties:
        category:
          type: string
          enum:
            - unknownCategory
            - contentLabeling
            - touchTargetSize
            - lowContrast
            - implementation
          description: Category in which these types of suggestions should appear. Always set.
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        suggestions:
          items:
            $ref: '#/components/schemas/SuggestionProto'
          type: array
          description: A sequence of suggestions. All of the suggestions within a cluster must have the same SuggestionPriority and belong to the same SuggestionCategory. Suggestions with the same screenshot URL should be adjacent.
      id: SuggestionClusterProto
    TestExecutionStep:
      id: TestExecutionStep
      description: A step that represents running tests. It accepts ant-junit xml files which will be parsed into structured test results by the service. Xml file paths are updated in order to append more files, however they can't be deleted. Users can also add test results manually by using the test_result field.
      properties:
        testTiming:
          $ref: '#/components/schemas/TestTiming'
          description: 'The timing break down of the test execution. - In response: present if set by create or update - In create/update request: optional'
        testIssues:
          items:
            $ref: '#/components/schemas/TestIssue'
          description: 'Issues observed during the test execution. For example, if the mobile app under test crashed during the test, the error message and the stack trace content can be recorded here to assist debugging. - In response: present if set by create or update - In create/update request: optional'
          type: array
        toolExecution:
          $ref: '#/components/schemas/ToolExecution'
          description: 'Represents the execution of the test runner. The exit code of this tool will be used to determine if the test passed. - In response: always set - In create/update request: optional'
        testSuiteOverviews:
          items:
            $ref: '#/components/schemas/TestSuiteOverview'
          type: array
          description: 'List of test suite overview contents. This could be parsed from xUnit XML log by server, or uploaded directly by user. This references should only be called when test suites are fully parsed or uploaded. The maximum allowed number of test suite overviews per step is 1000. - In response: always set - In create request: optional - In update request: never (use publishXunitXmlFiles custom method instead)'
      type: object
    ListPerfSamplesResponse:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Optional, returned if result size exceeds the page size specified in the request (or the default page size, 500, if unspecified). It indicates the last sample timestamp to be used as page_token in subsequent request
        perfSamples:
          items:
            $ref: '#/components/schemas/PerfSample'
          type: array
      id: ListPerfSamplesResponse
    EncounteredNonAndroidUiWidgetScreen:
      description: Additional details about encountered screens with elements that are not Android UI widgets.
      id: EncounteredNonAndroidUiWidgetScreen
      properties:
        distinctScreens:
          description: Number of encountered distinct screens with non Android UI widgets.
          type: integer
          format: int32
        screenIds:
          type: array
          description: Subset of screens which contain non Android UI widgets.
          items:
            type: string
      type: object
    FailureDetail:
      description: Details for an outcome with a FAILURE outcome summary.
      properties:
        timedOut:
          description: If the test overran some time limit, and that is why it failed.
          type: boolean
        crashed:
          description: If the failure was severe because the system (app) under test crashed.
          type: boolean
        notInstalled:
          description: If an app is not installed and thus no test can be run with the app. This might be caused by trying to run a test on an unsupported platform.
          type: boolean
        failedRoboscript:
          description: If the Roboscript failed to complete successfully, e.g., because a Roboscript action or assertion failed or a Roboscript action could not be matched during the entire crawl.
          type: boolean
        unableToCrawl:
          description: If the robo was unable to crawl the app; perhaps because the app did not start.
          type: boolean
        otherNativeCrash:
          type: boolean
          description: If a native process (including any other than the app) crashed.
        deviceOutOfMemory:
          type: boolean
          description: If the device ran out of memory during a test, causing the test to crash.
      type: object
      id: FailureDetail
    IosAppCrashed:
      properties:
        stackTrace:
          $ref: '#/components/schemas/StackTrace'
          description: The stack trace, if one is available. Optional.
      id: IosAppCrashed
      description: Additional details for an iOS app crash.
      type: object
    PerformedGoogleLogin:
      properties: {}
      type: object
      description: A notification that Robo signed in with Google.
      id: PerformedGoogleLogin
    SafeHtmlProto:
      id: SafeHtmlProto
      properties:
        privateDoNotAccessOrElseSafeHtmlWrappedValue:
          description: 'IMPORTANT: Never set or read this field, even from tests, it is private. See documentation at the top of .proto file for programming language packages with which to create or read this message.'
          type: string
      description: 'IMPORTANT: It is unsafe to accept this message from an untrusted source, since it''s trivial for an attacker to forge serialized messages that don''t fulfill the type''s safety contract -- for example, it could contain attacker controlled script. A system which receives a SafeHtmlProto implicitly trusts the producer of the SafeHtmlProto. So, it''s generally safe to return this message in RPC responses, but generally unsafe to accept it in RPC requests.'
      type: object
    AndroidAppInfo:
      properties:
        packageName:
          type: string
          description: The package name of the app. Required.
        versionCode:
          type: string
          description: The internal version code of the app. Optional.
        versionName:
          type: string
          description: The version name of the app. Optional.
        name:
          description: The name of the app. Optional
          type: string
      type: object
      id: AndroidAppInfo
      description: Android app information.
    BasicPerfSampleSeries:
      id: BasicPerfSampleSeries
      properties:
        perfMetricType:
          enum:
            - perfMetricTypeUnspecified
            - memory
            - cpu
            - network
            - graphics
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
        perfUnit:
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          type: string
          enum:
            - perfUnitUnspecified
            - kibibyte
            - percent
            - bytesPerSecond
            - framesPerSecond
            - byte
        sampleSeriesLabel:
          enumDescriptions:
            - ''
            - Memory sample series
            - ''
            - ''
            - ''
            - CPU sample series
            - ''
            - ''
            - Network sample series
            - ''
            - ''
            - ''
            - Graphics sample series
          type: string
          enum:
            - sampleSeriesTypeUnspecified
            - memoryRssPrivate
            - memoryRssShared
            - memoryRssTotal
            - memoryTotal
            - cpuUser
            - cpuKernel
            - cpuTotal
            - ntBytesTransferred
            - ntBytesReceived
            - networkSent
            - networkReceived
            - graphicsFrameRate
      type: object
      description: Encapsulates the metadata for basic sample series represented by a line chart
    PerfMetricsSummary:
      id: PerfMetricsSummary
      type: object
      properties:
        appStartTime:
          $ref: '#/components/schemas/AppStartTime'
        projectId:
          type: string
          description: The cloud project @OutputOnly
        executionId:
          description: A tool results execution ID. @OutputOnly
          type: string
        perfMetrics:
          items:
            enum:
              - perfMetricTypeUnspecified
              - memory
              - cpu
              - network
              - graphics
            enumDescriptions:
              - ''
              - ''
              - ''
              - ''
              - ''
            type: string
          type: array
          description: Set of resource collected
        stepId:
          description: A tool results step ID. @OutputOnly
          type: string
        perfEnvironment:
          $ref: '#/components/schemas/PerfEnvironment'
          description: Describes the environment in which the performance metrics were collected
        graphicsStats:
          $ref: '#/components/schemas/GraphicsStats'
          description: Graphics statistics for the entire run. Statistics are reset at the beginning of the run and collected at the end of the run.
        historyId:
          type: string
          description: A tool results history ID. @OutputOnly
      description: A summary of perf metrics collected and performance environment info
    PerformedMonkeyActions:
      description: A notification that Robo performed some monkey actions.
      type: object
      properties:
        totalActions:
          type: integer
          description: The total number of monkey actions performed during the crawl.
          format: int32
      id: PerformedMonkeyActions
    RoboScriptExecution:
      id: RoboScriptExecution
      properties:
        successfulActions:
          description: The number of Robo script actions executed successfully.
          type: integer
          format: int32
        totalActions:
          format: int32
          type: integer
          description: The total number of actions in the Robo script.
      description: Execution stats for a user-provided Robo script.
      type: object
    FileReference:
      type: object
      properties:
        fileUri:
          description: 'The URI of a file stored in Google Cloud Storage. For example: http://storage.googleapis.com/mybucket/path/to/test.xml or in gsutil format: gs://mybucket/path/to/test.xml with version-specific info, gs://mybucket/path/to/test.xml#1360383693690000 An INVALID_ARGUMENT error will be returned if the URI format is not supported. - In response: always set - In create/update request: always set'
          type: string
      id: FileReference
      description: A reference to a file.
    DetectedAppSplashScreen:
      description: A notification that Robo detected a splash screen provided by app (vs. Android OS splash screen).
      type: object
      id: DetectedAppSplashScreen
      properties: {}
    SkippedDetail:
      id: SkippedDetail
      type: object
      description: Details for an outcome with a SKIPPED outcome summary.
      properties:
        incompatibleArchitecture:
          type: boolean
          description: If the App doesn't run on the specific architecture, for example, x86.
        incompatibleAppVersion:
          type: boolean
          description: If the App doesn't support the specific API level.
        incompatibleDevice:
          description: If the requested OS version doesn't run on the specific device model.
          type: boolean
    NonSdkApiUsageViolationReport:
      description: Contains a summary and examples of non-sdk API usage violations.
      id: NonSdkApiUsageViolationReport
      type: object
      properties:
        exampleApis:
          items:
            $ref: '#/components/schemas/NonSdkApi'
          description: Examples of the detected API usages.
          type: array
        targetSdkVersion:
          type: integer
          description: Specifies the API Level on which the application is designed to run.
          format: int32
        uniqueApis:
          description: Total number of unique Non-SDK API's accessed.
          format: int32
          type: integer
        minSdkVersion:
          type: integer
          description: Minimum API level required for the application to run.
          format: int32
    PublishXunitXmlFilesRequest:
      description: Request message for StepService.PublishXunitXmlFiles.
      properties:
        xunitXmlFiles:
          description: URI of the Xunit XML files to publish. The maximum size of the file this reference is pointing to is 50MB. Required.
          items:
            $ref: '#/components/schemas/FileReference'
          type: array
      id: PublishXunitXmlFilesRequest
      type: object
    FatalException:
      type: object
      properties:
        stackTrace:
          description: The stack trace of the fatal exception. Optional.
          $ref: '#/components/schemas/StackTrace'
      id: FatalException
      description: Additional details for a fatal exception.
    ListHistoriesResponse:
      id: ListHistoriesResponse
      properties:
        nextPageToken:
          description: A continuation token to resume the query at the next item. Will only be set if there are more histories to fetch. Tokens are valid for up to one hour from the time of the first list request. For instance, if you make a list request at 1PM and use the token from this first request 10 minutes later, the token from this second response will only be valid for 50 minutes.
          type: string
        histories:
          type: array
          items:
            $ref: '#/components/schemas/History'
          description: Histories.
      description: Response message for HistoryService.List
      type: object
    CPUInfo:
      type: object
      id: CPUInfo
      properties:
        cpuProcessor:
          type: string
          description: description of the device processor ie '1.8 GHz hexa core 64-bit ARMv8-A'
        cpuSpeedInGhz:
          format: float
          type: number
          description: the CPU clock speed in GHz
        numberOfCores:
          type: integer
          format: int32
          description: the number of CPU cores
    FailedToInstall:
      description: Failed to install the APK.
      type: object
      properties: {}
      id: FailedToInstall
    RegionProto:
      description: A rectangular region.
      id: RegionProto
      properties:
        heightPx:
          description: The height, in pixels. Always set.
          format: int32
          type: integer
        leftPx:
          format: int32
          description: The left side of the rectangle, in pixels. Always set.
          type: integer
        widthPx:
          type: integer
          format: int32
          description: The width, in pixels. Always set.
        topPx:
          description: The top of the rectangle, in pixels. Always set.
          type: integer
          format: int32
      type: object
    ToolExecution:
      type: object
      id: ToolExecution
      properties:
        commandLineArguments:
          items:
            type: string
          type: array
          description: 'The full tokenized command line including the program name (equivalent to argv in a C program). - In response: present if set by create request - In create request: optional - In update request: never set'
        exitCode:
          $ref: '#/components/schemas/ToolExitCode'
          description: 'Tool execution exit code. This field will be set once the tool has exited. - In response: present if set by create/update request - In create request: optional - In update request: optional, a FAILED_PRECONDITION error will be returned if an exit_code is already set.'
        toolOutputs:
          description: 'References to opaque files of any format output by the tool execution. The maximum allowed number of tool outputs per step is 1000. - In response: present if set by create/update request - In create request: optional - In update request: optional, any value provided will be appended to the existing list'
          items:
            $ref: '#/components/schemas/ToolOutputReference'
          type: array
        toolLogs:
          items:
            $ref: '#/components/schemas/FileReference'
          description: 'References to any plain text logs output the tool execution. This field can be set before the tool has exited in order to be able to have access to a live view of the logs while the tool is running. The maximum allowed number of tool logs per step is 1000. - In response: present if set by create/update request - In create request: optional - In update request: optional, any value provided will be appended to the existing list'
          type: array
      description: An execution of an arbitrary tool. It could be a test runner or a tool copying artifacts or deploying code.
    Status:
      type: object
      id: Status
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          type: array
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
    MemoryInfo:
      id: MemoryInfo
      type: object
      properties:
        memoryTotalInKibibyte:
          format: int64
          type: string
          description: Total memory available on the device in KiB
        memoryCapInKibibyte:
          type: string
          format: int64
          description: Maximum memory that can be allocated to the process in KiB
    StepDimensionValueEntry:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
      id: StepDimensionValueEntry
    ListStepThumbnailsResponse:
      properties:
        nextPageToken:
          type: string
          description: A continuation token to resume the query at the next item. If set, indicates that there are more thumbnails to read, by calling list again with this value in the page_token field.
        thumbnails:
          type: array
          description: 'A list of image data. Images are returned in a deterministic order; they are ordered by these factors, in order of importance: * First, by their associated test case. Images without a test case are considered greater than images with one. * Second, by their creation time. Images without a creation time are greater than images with one. * Third, by the order in which they were added to the step (by calls to CreateStep or UpdateStep).'
          items:
            $ref: '#/components/schemas/Image'
      type: object
      id: ListStepThumbnailsResponse
      description: A response containing the thumbnails in a step.
    UsedRoboIgnoreDirective:
      properties:
        resourceName:
          type: string
          description: The name of the resource that was ignored.
      id: UsedRoboIgnoreDirective
      description: 'Additional details of a used Robo directive with an ignore action. Note: This is a different scenario than unused directive.'
      type: object
    Outcome:
      properties:
        inconclusiveDetail:
          description: More information about an INCONCLUSIVE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not INCONCLUSIVE. Optional
          $ref: '#/components/schemas/InconclusiveDetail'
        successDetail:
          $ref: '#/components/schemas/SuccessDetail'
          description: More information about a SUCCESS outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SUCCESS. Optional
        summary:
          enumDescriptions:
            - Do not use. For proto versioning only.
            - 'The test matrix run was successful, for instance: - All the test cases passed. - Robo did not detect a crash of the application under test.'
            - 'A run failed, for instance: - One or more test case failed. - A test timed out. - The application under test crashed.'
            - Something unexpected happened. The run should still be considered unsuccessful but this is likely a transient problem and re-running the test might be successful.
            - 'All tests were skipped, for instance: - All device configurations were incompatible.'
            - A group of steps that were run with the same configuration had both failure and success outcomes.
          type: string
          enum:
            - unset
            - success
            - failure
            - inconclusive
            - skipped
            - flaky
          description: The simplest way to interpret a result. Required
        skippedDetail:
          description: More information about a SKIPPED outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not SKIPPED. Optional
          $ref: '#/components/schemas/SkippedDetail'
        failureDetail:
          $ref: '#/components/schemas/FailureDetail'
          description: More information about a FAILURE outcome. Returns INVALID_ARGUMENT if this field is set but the summary is not FAILURE. Optional
      id: Outcome
      type: object
      description: Interprets a result so that humans and machines can act on it.
    ANR:
      properties:
        stackTrace:
          $ref: '#/components/schemas/StackTrace'
          description: The stack trace of the ANR crash. Optional.
      description: Additional details for an ANR crash.
      id: ANR
      type: object
    InAppPurchasesFound:
      id: InAppPurchasesFound
      type: object
      description: Additional details of in-app purchases encountered during the crawl.
      properties:
        inAppPurchasesFlowsExplored:
          description: 'The total number of in-app purchases flows explored: how many times the robo tries to buy a SKU.'
          type: integer
          format: int32
        inAppPurchasesFlowsStarted:
          description: The total number of in-app purchases flows started.
          type: integer
          format: int32
    ToolOutputReference:
      description: A reference to a ToolExecution output file.
      type: object
      id: ToolOutputReference
      properties:
        creationTime:
          $ref: '#/components/schemas/Timestamp'
          description: 'The creation time of the file. - In response: present if set by create/update request - In create/update request: optional'
        output:
          description: 'A FileReference to an output file. - In response: always set - In create/update request: always set'
          $ref: '#/components/schemas/FileReference'
        testCase:
          $ref: '#/components/schemas/TestCaseReference'
          description: 'The test case to which this output file belongs. - In response: present if set by create/update request - In create/update request: optional'
    UIElementTooDeep:
      type: object
      id: UIElementTooDeep
      properties:
        screenId:
          type: string
          description: The screen id of the element
        depth:
          type: integer
          description: The depth of the screen element
          format: int32
        screenStateId:
          description: The screen state id of the element
          type: string
      description: A warning that the screen hierarchy is deeper than the recommended threshold.
    NonSdkApi:
      type: object
      id: NonSdkApi
      properties:
        insights:
          type: array
          items:
            $ref: '#/components/schemas/NonSdkApiInsight'
          description: Optional debugging insights for non-SDK API violations.
        invocationCount:
          format: int32
          description: The total number of times this API was observed to have been called.
          type: integer
        apiSignature:
          description: The signature of the Non-SDK API
          type: string
        exampleStackTraces:
          description: Example stack traces of this API being called.
          type: array
          items:
            type: string
        list:
          enum:
            - NONE
            - WHITE
            - BLACK
            - GREY
            - GREY_MAX_O
            - GREY_MAX_P
            - GREY_MAX_Q
            - GREY_MAX_R
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
            - ''
          description: Which list this API appears on
          type: string
      description: A non-sdk API and examples of it being called along with other metadata See https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces
    ScreenshotCluster:
      properties:
        keyScreen:
          description: A singular screen that represents the cluster as a whole. This screen will act as the "cover" of the entire cluster. When users look at the clusters, only the key screen from each cluster will be shown. Which screen is the key screen is determined by the ClusteringAlgorithm
          $ref: '#/components/schemas/Screen'
        screens:
          description: Full list of screens.
          items:
            $ref: '#/components/schemas/Screen'
          type: array
        activity:
          type: string
          description: A string that describes the activity of every screen in the cluster.
        clusterId:
          description: A unique identifier for the cluster. @OutputOnly
          type: string
      id: ScreenshotCluster
      type: object
    ListExecutionsResponse:
      type: object
      properties:
        executions:
          items:
            $ref: '#/components/schemas/Execution'
          description: Executions. Always set.
          type: array
        nextPageToken:
          description: A continuation token to resume the query at the next item. Will only be set if there are more Executions to fetch.
          type: string
      id: ListExecutionsResponse
    TestCaseReference:
      properties:
        testSuiteName:
          type: string
          description: The name of the test suite to which this test case belongs.
        name:
          description: The name of the test case. Required.
          type: string
        className:
          description: The name of the class.
          type: string
      description: 'A reference to a test case. Test case references are canonically ordered lexicographically by these three factors: * First, by test_suite_name. * Second, by class_name. * Third, by name.'
      id: TestCaseReference
      type: object
    History:
      description: A History represents a sorted list of Executions ordered by the start_timestamp_millis field (descending). It can be used to group all the Executions of a continuous build. Note that the ordering only operates on one-dimension. If a repository has multiple branches, it means that multiple histories will need to be used in order to order Executions per branch.
      id: History
      type: object
      properties:
        displayName:
          description: 'A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional'
          type: string
        testPlatform:
          description: 'The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.'
          enum:
            - unknownPlatform
            - android
            - ios
          enumDescriptions:
            - ''
            - ''
            - ''
          type: string
        name:
          description: 'A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set'
          type: string
        historyId:
          type: string
          description: 'A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set'
    ListStepAccessibilityClustersResponse:
      type: object
      description: Response message for AccessibilityService.ListStepAccessibilityClusters.
      id: ListStepAccessibilityClustersResponse
      properties:
        name:
          type: string
          description: A full resource name of the step. For example, projects/my-project/histories/bh.1234567890abcdef/executions/ 1234567890123456789/steps/bs.1234567890abcdef Always presents.
        clusters:
          description: A sequence of accessibility suggestions, grouped into clusters. Within the sequence, clusters that belong to the same SuggestionCategory should be adjacent. Within each category, clusters should be ordered by their SuggestionPriority (ERRORs first). The categories should be ordered by their highest priority cluster.
          type: array
          items:
            $ref: '#/components/schemas/SuggestionClusterProto'
    BlankScreen:
      type: object
      description: A warning that Robo encountered a screen that was mostly blank; this may indicate a problem with the app.
      properties:
        screenId:
          type: string
          description: The screen id of the element
      id: BlankScreen
    OverlappingUIElements:
      id: OverlappingUIElements
      type: object
      properties:
        resourceName:
          description: Resource names of the overlapping screen elements
          type: array
          items:
            type: string
        screenId:
          description: The screen id of the elements
          type: string
      description: A warning that Robo encountered a screen that has overlapping clickable elements; this may indicate a potential UI issue.
    TestCase:
      type: object
      properties:
        testCaseReference:
          $ref: '#/components/schemas/TestCaseReference'
          description: Test case reference, e.g. name, class name and test suite name. Required.
        endTime:
          description: The end time of the test case.
          $ref: '#/components/schemas/Timestamp'
        startTime:
          description: The start time of the test case.
          $ref: '#/components/schemas/Timestamp'
        stackTraces:
          items:
            $ref: '#/components/schemas/StackTrace'
          description: The stack trace details if the test case failed or encountered an error. The maximum size of the stack traces is 100KiB, beyond which the stack track will be truncated. Zero if the test case passed.
          type: array
        toolOutputs:
          items:
            $ref: '#/components/schemas/ToolOutputReference'
          description: References to opaque files of any format output by the tool execution. @OutputOnly
          type: array
        elapsedTime:
          $ref: '#/components/schemas/Duration'
          description: The elapsed run time of the test case. Required.
        status:
          enum:
            - passed
            - failed
            - error
            - skipped
            - flaky
          type: string
          enumDescriptions:
            - Test passed.
            - Test failed.
            - Test encountered an error
            - Test skipped
            - Test flaked. Present only for rollup test cases; test cases from steps that were run with the same configuration had both failure and success outcomes.
          description: The status of the test case. Required.
        skippedMessage:
          type: string
          description: Why the test case was skipped. Present only for skipped test case
        testCaseId:
          type: string
          description: A unique identifier within a Step for this Test Case.
      id: TestCase
    GraphicsStats:
      type: object
      description: 'Graphics statistics for the App. The information is collected from ''adb shell dumpsys graphicsstats''. For more info see: https://developer.android.com/training/testing/performance.html Statistics will only be present for API 23+.'
      properties:
        p99Millis:
          format: int64
          description: 99th percentile frame render time in milliseconds.
          type: string
        totalFrames:
          format: int64
          description: Total frames rendered by package.
          type: string
        jankyFrames:
          description: Total frames with slow render time. Should be <= total_frames.
          format: int64
          type: string
        slowBitmapUploadCount:
          type: string
          format: int64
          description: Total "slow bitmap upload" events.
        p50Millis:
          format: int64
          description: 50th percentile frame render time in milliseconds.
          type: string
        buckets:
          items:
            $ref: '#/components/schemas/GraphicsStatsBucket'
          type: array
          description: Histogram of frame render times. There should be 154 buckets ranging from [5ms, 6ms) to [4950ms, infinity)
        p95Millis:
          description: 95th percentile frame render time in milliseconds.
          type: string
          format: int64
        highInputLatencyCount:
          description: Total "high input latency" events.
          type: string
          format: int64
        missedVsyncCount:
          description: Total "missed vsync" events.
          type: string
          format: int64
        slowUiThreadCount:
          description: Total "slow UI thread" events.
          type: string
          format: int64
        slowDrawCount:
          description: Total "slow draw" events.
          format: int64
          type: string
        p90Millis:
          description: 90th percentile frame render time in milliseconds.
          type: string
          format: int64
      id: GraphicsStats
    AppStartTime:
      type: object
      properties:
        initialDisplayTime:
          $ref: '#/components/schemas/Duration'
          description: The time from app start to the first displayed activity being drawn, as reported in Logcat. See https://developer.android.com/topic/performance/launch-time.html#time-initial
        fullyDrawnTime:
          $ref: '#/components/schemas/Duration'
          description: Optional. The time from app start to reaching the developer-reported "fully drawn" time. This is only stored if the app includes a call to Activity.reportFullyDrawn(). See https://developer.android.com/topic/performance/launch-time.html#time-full
      id: AppStartTime
    EncounteredLoginScreen:
      id: EncounteredLoginScreen
      properties:
        distinctScreens:
          format: int32
          description: Number of encountered distinct login screens.
          type: integer
        screenIds:
          items:
            type: string
          description: Subset of login screens.
          type: array
      description: Additional details about encountered login screens.
      type: object
    LauncherActivityNotFound:
      id: LauncherActivityNotFound
      description: Failed to find the launcher activity of an app.
      type: object
      properties: {}
    IosXcTest:
      description: A test of an iOS application that uses the XCTest framework.
      properties:
        bundleId:
          type: string
          description: Bundle ID of the app.
        xcodeVersion:
          description: Xcode version that the test was run with.
          type: string
      id: IosXcTest
      type: object
    PerfSampleSeries:
      properties:
        projectId:
          type: string
          description: The cloud project @OutputOnly
        historyId:
          description: A tool results history ID. @OutputOnly
          type: string
        stepId:
          description: A tool results step ID. @OutputOnly
          type: string
        sampleSeriesId:
          type: string
          description: A sample series id @OutputOnly
        basicPerfSampleSeries:
          $ref: '#/components/schemas/BasicPerfSampleSeries'
          description: Basic series represented by a line chart
        executionId:
          type: string
          description: A tool results execution ID. @OutputOnly
      id: PerfSampleSeries
      description: Resource representing a collection of performance samples (or data points)
      type: object
    AndroidTest:
      type: object
      id: AndroidTest
      properties:
        testTimeout:
          $ref: '#/components/schemas/Duration'
          description: Max time a test is allowed to run before it is automatically cancelled.
        androidAppInfo:
          description: Information about the application under test.
          $ref: '#/components/schemas/AndroidAppInfo'
        androidTestLoop:
          $ref: '#/components/schemas/AndroidTestLoop'
          description: An Android test loop.
        androidRoboTest:
          description: An Android robo test.
          $ref: '#/components/schemas/AndroidRoboTest'
        androidInstrumentationTest:
          $ref: '#/components/schemas/AndroidInstrumentationTest'
          description: An Android instrumentation test.
      description: An Android mobile test specification.
    MultiStep:
      id: MultiStep
      properties:
        multistepNumber:
          description: Unique int given to each step. Ranges from 0(inclusive) to total number of steps(exclusive). The primary step is 0.
          type: integer
          format: int32
        primaryStepId:
          type: string
          description: Step Id of the primary (original) step, which might be this step.
        primaryStep:
          description: Present if it is a primary (original) step.
          $ref: '#/components/schemas/PrimaryStep'
      type: object
      description: Details when multiple steps are run with the same configuration as a group.
    ShardSummary:
      id: ShardSummary
      properties:
        runs:
          description: Summaries of the steps belonging to the shard. With flaky_test_attempts enabled from TestExecutionService, more than one run (Step) can present. And the runs will be sorted by multistep_number.
          items:
            $ref: '#/components/schemas/StepSummary'
          type: array
        shardResult:
          description: Merged result of the shard.
          $ref: '#/components/schemas/MergedResult'
      description: Result summary for a shard in an environment.
      type: object
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    steps:
      id: firebase.toolresults.steps
      name: steps
      title: Steps
      methods:
        projects_histories_executions_steps_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_create:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_accessibilityClusters:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectsId}~1histories~1{historiesId}~1executions~1{executionsId}~1steps~1{stepsId}:accessibilityClusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_patch:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_get:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_publishXunitXmlFiles:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}:publishXunitXmlFiles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/steps/methods/projects_histories_executions_steps_get'
          - $ref: '#/components/x-stackQL-resources/steps/methods/projects_histories_executions_steps_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/steps/methods/projects_histories_executions_steps_create'
        update: []
        delete: []
    steps__perf_metrics_summary:
      id: firebase.toolresults.steps__perf_metrics_summary
      name: steps__perf_metrics_summary
      title: Steps__perf_metrics_summary
      methods:
        projects_histories_executions_steps_getPerfMetricsSummary:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1perfMetricsSummary/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/steps__perf_metrics_summary/methods/projects_histories_executions_steps_getPerfMetricsSummary'
        insert: []
        update: []
        delete: []
    perf_metrics_summary:
      id: firebase.toolresults.perf_metrics_summary
      name: perf_metrics_summary
      title: Perf_metrics_summary
      methods:
        projects_histories_executions_steps_perfMetricsSummary_create:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1perfMetricsSummary/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/perf_metrics_summary/methods/projects_histories_executions_steps_perfMetricsSummary_create'
        update: []
        delete: []
    thumbnails:
      id: firebase.toolresults.thumbnails
      name: thumbnails
      title: Thumbnails
      methods:
        projects_histories_executions_steps_thumbnails_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1thumbnails/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/thumbnails/methods/projects_histories_executions_steps_thumbnails_list'
        insert: []
        update: []
        delete: []
    test_cases:
      id: firebase.toolresults.test_cases
      name: test_cases
      title: Test_cases
      methods:
        projects_histories_executions_steps_testCases_get:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1testCases~1{testCaseId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_testCases_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1testCases/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/test_cases/methods/projects_histories_executions_steps_testCases_get'
          - $ref: '#/components/x-stackQL-resources/test_cases/methods/projects_histories_executions_steps_testCases_list'
        insert: []
        update: []
        delete: []
    samples:
      id: firebase.toolresults.samples
      name: samples
      title: Samples
      methods:
        projects_histories_executions_steps_perfSampleSeries_samples_batchCreate:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1perfSampleSeries~1{sampleSeriesId}~1samples:batchCreate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_perfSampleSeries_samples_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1perfSampleSeries~1{sampleSeriesId}~1samples/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/samples/methods/projects_histories_executions_steps_perfSampleSeries_samples_list'
        insert: []
        update: []
        delete: []
    perf_sample_series:
      id: firebase.toolresults.perf_sample_series
      name: perf_sample_series
      title: Perf_sample_series
      methods:
        projects_histories_executions_steps_perfSampleSeries_get:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1perfSampleSeries~1{sampleSeriesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_perfSampleSeries_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1perfSampleSeries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_steps_perfSampleSeries_create:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1steps~1{stepId}~1perfSampleSeries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/perf_sample_series/methods/projects_histories_executions_steps_perfSampleSeries_get'
          - $ref: '#/components/x-stackQL-resources/perf_sample_series/methods/projects_histories_executions_steps_perfSampleSeries_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/perf_sample_series/methods/projects_histories_executions_steps_perfSampleSeries_create'
        update: []
        delete: []
    clusters:
      id: firebase.toolresults.clusters
      name: clusters
      title: Clusters
      methods:
        projects_histories_executions_clusters_get:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1clusters~1{clusterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_clusters_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1clusters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_histories_executions_clusters_get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/projects_histories_executions_clusters_list'
        insert: []
        update: []
        delete: []
    environments:
      id: firebase.toolresults.environments
      name: environments
      title: Environments
      methods:
        projects_histories_executions_environments_get:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1environments~1{environmentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_environments_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}~1environments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_histories_executions_environments_get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/projects_histories_executions_environments_list'
        insert: []
        update: []
        delete: []
    executions:
      id: firebase.toolresults.executions
      name: executions
      title: Executions
      methods:
        projects_histories_executions_patch:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_get:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions~1{executionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_executions_create:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}~1executions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/executions/methods/projects_histories_executions_get'
          - $ref: '#/components/x-stackQL-resources/executions/methods/projects_histories_executions_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/executions/methods/projects_histories_executions_create'
        update: []
        delete: []
    histories:
      id: firebase.toolresults.histories
      name: histories
      title: Histories
      methods:
        projects_histories_create:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_list:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_histories_get:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1histories~1{historyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/histories/methods/projects_histories_get'
          - $ref: '#/components/x-stackQL-resources/histories/methods/projects_histories_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/histories/methods/projects_histories_create'
        update: []
        delete: []
    projects:
      id: firebase.toolresults.projects
      name: projects
      title: Projects
      methods:
        initializeSettings:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}:initializeSettings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    projects__settings:
      id: firebase.toolresults.projects__settings
      name: projects__settings
      title: Projects__settings
      methods:
        projects_getSettings:
          operation:
            $ref: '#/paths/~1toolresults~1v1beta3~1projects~1{projectId}~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects__settings/methods/projects_getSettings'
        insert: []
        update: []
        delete: []
paths:
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps:
    parameters: &ref_1
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
    get:
      description: 'Lists Steps for a given Execution. The steps are sorted by creation_time in descending order. The step_id key will be used to order the steps with the same creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if an attempt is made to list the children of a nonexistent Step - NOT_FOUND - if the containing Execution does not exist'
      operationId: toolresults.projects.histories.executions.steps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStepsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: steps
      x-stackQL-verb: select
    post:
      description: 'Creates a Step. The returned Step will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist'
      operationId: toolresults.projects.histories.executions.steps.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Step'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: steps
      x-stackQL-verb: insert
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfMetricsSummary:
    parameters: *ref_1
    get:
      description: 'Retrieves a PerfMetricsSummary. May return any of the following error code(s): - NOT_FOUND - The specified PerfMetricsSummary does not exist'
      operationId: toolresults.projects.histories.executions.steps.getPerfMetricsSummary
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfMetricsSummary'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
      x-stackQL-resource: steps__perf_metrics_summary
      x-stackQL-verb: select
    post:
      description: 'Creates a PerfMetricsSummary resource. Returns the existing one if it has already been created. May return any of the following error code(s): - NOT_FOUND - The containing Step does not exist'
      operationId: toolresults.projects.histories.executions.steps.perfMetricsSummary.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerfMetricsSummary'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfMetricsSummary'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
      x-stackQL-resource: perf_metrics_summary
      x-stackQL-verb: insert
  /toolresults/v1beta3/projects/{projectsId}/histories/{historiesId}/executions/{executionsId}/steps/{stepsId}:accessibilityClusters:
    parameters: *ref_1
    get:
      description: 'Lists accessibility clusters for a given Step May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if an argument in the request happens to be invalid; e.g. if the locale format is incorrect - NOT_FOUND - if the containing Step does not exist'
      operationId: toolresults.projects.histories.executions.steps.accessibilityClusters
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStepAccessibilityClustersResponse'
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: historiesId
          required: true
          schema:
            type: string
        - in: path
          name: executionsId
          required: true
          schema:
            type: string
        - in: path
          name: stepsId
          required: true
          schema:
            type: string
        - in: query
          name: locale
          schema:
            type: string
      x-stackQL-resource: steps
      x-stackQL-verb: exec
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}:
    parameters: *ref_1
    patch:
      description: 'Updates an existing Step with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal (e.g try to upload a duplicate xml file), if the updated step is too large (more than 10Mib) - NOT_FOUND - if the containing Execution does not exist'
      operationId: toolresults.projects.histories.executions.steps.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Step'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: steps
      x-stackQL-verb: exec
    get:
      description: 'Gets a Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Step does not exist'
      operationId: toolresults.projects.histories.executions.steps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
      x-stackQL-resource: steps
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}:publishXunitXmlFiles:
    parameters: *ref_1
    post:
      description: 'Publish xml files to an existing Step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal, e.g try to upload a duplicate xml file or a file too large. - NOT_FOUND - if the containing Execution does not exist'
      operationId: toolresults.projects.histories.executions.steps.publishXunitXmlFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishXunitXmlFilesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Step'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
      x-stackQL-resource: steps
      x-stackQL-verb: exec
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/thumbnails:
    parameters: *ref_1
    get:
      description: 'Lists thumbnails of images attached to a step. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from the project, or from any of the images - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the step does not exist, or if any of the images do not exist'
      operationId: toolresults.projects.histories.executions.steps.thumbnails.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStepThumbnailsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: thumbnails
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/testCases/{testCaseId}:
    parameters: *ref_1
    get:
      description: 'Gets details of a Test Case for a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Test Case does not exist'
      operationId: toolresults.projects.histories.executions.steps.testCases.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCase'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: path
          name: testCaseId
          required: true
          schema:
            type: string
      x-stackQL-resource: test_cases
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/testCases:
    parameters: *ref_1
    get:
      description: 'Lists Test Cases attached to a Step. Experimental test cases API. Still in active development. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Step does not exist'
      operationId: toolresults.projects.histories.executions.steps.testCases.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTestCasesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: test_cases
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}/samples:batchCreate:
    parameters: *ref_1
    post:
      description: 'Creates a batch of PerfSamples - a client can submit multiple batches of Perf Samples through repeated calls to this method in order to split up a large request payload - duplicates and existing timestamp entries will be ignored. - the batch operation may partially succeed - the set of elements successfully inserted is returned in the response (omits items which already existed in the database). May return any of the following canonical error codes: - NOT_FOUND - The containing PerfSampleSeries does not exist'
      operationId: toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreatePerfSamplesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreatePerfSamplesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: path
          name: sampleSeriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: samples
      x-stackQL-verb: insert
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}/samples:
    parameters: *ref_1
    get:
      description: 'Lists the Performance Samples of a given Sample Series - The list results are sorted by timestamps ascending - The default page size is 500 samples; and maximum size allowed 5000 - The response token indicates the last returned PerfSample timestamp - When the results size exceeds the page size, submit a subsequent request including the page token to return the rest of the samples up to the page limit May return any of the following canonical error codes: - OUT_OF_RANGE - The specified request page_token is out of valid range - NOT_FOUND - The containing PerfSampleSeries does not exist'
      operationId: toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPerfSamplesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: path
          name: sampleSeriesId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: samples
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}:
    parameters: *ref_1
    get:
      description: 'Gets a PerfSampleSeries. May return any of the following error code(s): - NOT_FOUND - The specified PerfSampleSeries does not exist'
      operationId: toolresults.projects.histories.executions.steps.perfSampleSeries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfSampleSeries'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: path
          name: sampleSeriesId
          required: true
          schema:
            type: string
      x-stackQL-resource: perf_sample_series
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries:
    parameters: *ref_1
    get:
      description: 'Lists PerfSampleSeries for a given Step. The request provides an optional filter which specifies one or more PerfMetricsType to include in the result; if none returns all. The resulting PerfSampleSeries are sorted by ids. May return any of the following canonical error codes: - NOT_FOUND - The containing Step does not exist'
      operationId: toolresults.projects.histories.executions.steps.perfSampleSeries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPerfSampleSeriesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
      x-stackQL-resource: perf_sample_series
      x-stackQL-verb: select
    post:
      description: 'Creates a PerfSampleSeries. May return any of the following error code(s): - ALREADY_EXISTS - PerfMetricSummary already exists for the given Step - NOT_FOUND - The containing Step does not exist'
      operationId: toolresults.projects.histories.executions.steps.perfSampleSeries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerfSampleSeries'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfSampleSeries'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: stepId
          required: true
          schema:
            type: string
      x-stackQL-resource: perf_sample_series
      x-stackQL-verb: insert
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/clusters/{clusterId}:
    parameters: *ref_1
    get:
      description: Retrieves a single screenshot cluster by its ID
      operationId: toolresults.projects.histories.executions.clusters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotCluster'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: clusterId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/clusters:
    parameters: *ref_1
    get:
      description: Lists Screenshot Clusters Returns the list of screenshot clusters corresponding to an execution. Screenshot clusters are created after the execution is finished. Clusters are created from a set of screenshots. Between any two screenshots, a matching score is calculated based off their metadata that determines how similar they are. Screenshots are placed in the cluster that has screens which have the highest matching scores.
      operationId: toolresults.projects.histories.executions.clusters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScreenshotClustersResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
      x-stackQL-resource: clusters
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/environments/{environmentId}:
    parameters: *ref_1
    get:
      description: 'Gets an Environment. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Environment does not exist'
      operationId: toolresults.projects.histories.executions.environments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: path
          name: environmentId
          required: true
          schema:
            type: string
      x-stackQL-resource: environments
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/environments:
    parameters: *ref_1
    get:
      description: 'Lists Environments for a given Execution. The Environments are sorted by display name. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing Execution does not exist'
      operationId: toolresults.projects.histories.executions.environments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: environments
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}:
    parameters: *ref_1
    patch:
      description: 'Updates an existing Execution with the supplied partial entity. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - FAILED_PRECONDITION - if the requested state transition is illegal - NOT_FOUND - if the containing History does not exist'
      operationId: toolresults.projects.histories.executions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: exec
    get:
      description: 'Gets an Execution. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the Execution does not exist'
      operationId: toolresults.projects.histories.executions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: path
          name: executionId
          required: true
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions:
    parameters: *ref_1
    get:
      description: 'Lists Executions for a given History. The executions are sorted by creation_time in descending order. The execution_id key will be used to order the executions with the same creation_time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist'
      operationId: toolresults.projects.histories.executions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExecutionsResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: select
    post:
      description: 'Creates an Execution. The returned Execution will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing History does not exist'
      operationId: toolresults.projects.histories.executions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execution'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Execution'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: executions
      x-stackQL-verb: insert
  /toolresults/v1beta3/projects/{projectId}/histories:
    parameters: *ref_1
    post:
      description: 'Creates a History. The returned History will have the id set. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to write to project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the containing project does not exist'
      operationId: toolresults.projects.histories.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/History'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: requestId
          schema:
            type: string
      x-stackQL-resource: histories
      x-stackQL-verb: insert
    get:
      description: 'Lists Histories for a given Project. The histories are sorted by modification time in descending order. The history_id key will be used to order the history with the same modification time. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the History does not exist'
      operationId: toolresults.projects.histories.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHistoriesResponse'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filterByName
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: histories
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}/histories/{historyId}:
    parameters: *ref_1
    get:
      description: 'Gets a History. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read project - INVALID_ARGUMENT - if the request is malformed - NOT_FOUND - if the History does not exist'
      operationId: toolresults.projects.histories.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: historyId
          required: true
          schema:
            type: string
      x-stackQL-resource: histories
      x-stackQL-verb: select
  /toolresults/v1beta3/projects/{projectId}:initializeSettings:
    parameters: *ref_1
    post:
      description: 'Creates resources for settings which have not yet been set. Currently, this creates a single resource: a Google Cloud Storage bucket, to be used as the default bucket for this project. The bucket is created in an FTL-own storage project. Except for in rare cases, calling this method in parallel from multiple clients will only create a single bucket. In order to avoid unnecessary storage charges, the bucket is configured to automatically delete objects older than 90 days. The bucket is created with the following permissions: - Owner access for owners of central storage project (FTL-owned) - Writer access for owners/editors of customer project - Reader access for viewers of customer project The default ACL on objects created in the bucket is: - Owner access for owners of central storage project - Reader access for owners/editors/viewers of customer project See Google Cloud Storage documentation for more details. If there is already a default bucket set and the project can access the bucket, this call does nothing. However, if the project doesn''t have the permission to access the bucket or the bucket is deleted, a new bucket will be created. May return any canonical error codes, including the following: - PERMISSION_DENIED - if the user is not authorized to write to project - Any error code raised by Google Cloud Storage'
      operationId: toolresults.projects.initializeSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettings'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects
      x-stackQL-verb: exec
  /toolresults/v1beta3/projects/{projectId}/settings:
    parameters: *ref_1
    get:
      description: 'Gets the Tool Results settings for a project. May return any of the following canonical error codes: - PERMISSION_DENIED - if the user is not authorized to read from project'
      operationId: toolresults.projects.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSettings'
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      x-stackQL-resource: projects__settings
      x-stackQL-verb: select
