components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        enum:
          - '1'
          - '2'
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AddFirebaseRequest:
      description: The request used to link a Google Cloud Storage bucket to a Firebase project.
      id: AddFirebaseRequest
      properties: {}
      type: object
    Bucket:
      description: A storage bucket and its relation to a parent Firebase project.
      id: Bucket
      properties:
        location:
          description: Output only. Location of the storage bucket.
          readOnly: true
          type: string
        name:
          description: Resource name of the bucket.
          type: string
        reconciling:
          description: Output only. Represents whether a bucket is being moved to a new location, in which case reconciling is set to true.
          readOnly: true
          type: boolean
      type: object
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      properties: {}
      type: object
    GoogleFirebaseStorageControlplaneV1alphaMigrateLocationDestructivelyMetadata:
      description: Metadata for MigrateLocationDestructively LRO.
      id: GoogleFirebaseStorageControlplaneV1alphaMigrateLocationDestructivelyMetadata
      properties:
        createTime:
          description: The time the LRO was created.
          format: google-datetime
          type: string
        lastUpdateTime:
          description: The time the LRO was last updated.
          format: google-datetime
          type: string
        state:
          description: The current state of the migration.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - CREATING_TEMP_BUCKET
            - TRANSFERRING_TO_TEMP
            - DELETING_SOURCE_BUCKET
            - CREATING_DESTINATION_BUCKET
            - TRANSFERRING_TO_DESTINATION
            - DELETING_TEMP_BUCKET
            - SUCCEEDED
            - FAILED
            - ROLLING_BACK
            - ROLLED_BACK
          enumDescriptions:
            - Unspecified state. Should not be used.
            - The MigrateLocationDestructively request has passed precondition checks and the bucket migration will begin soon.
            - Generating a unique bucket name, storing the source -> temp mapping in Spanner, and actually creating the temporary bucket via Bigstore.
            - The first STS transfer to move all objects from the source bucket to the temp bucket is underway.
            - The source bucket is being emptied and deleted.
            - The source bucket is being recreated in the new location.
            - The second STS transfer to move all objects from the temp bucket to the final bucket is underway.
            - The temp bucket is being emptied and deleted.
            - All stages of the migration have completed and the operation has been marked done and updated with a response.
            - The migration failed at some stage and it is not possible to continue retrying that stage. Manual recovery may be needed. Rollback is either impossible at this stage, or has been attempted and failed.
            - The migration has encountered a permanent failure and is now being rolled back so that the source bucket is restored to its original state.
            - The migration has been successfully rolled back.
          type: string
      type: object
    GoogleFirebaseStorageControlplaneV1betaMigrateLocationDestructivelyMetadata:
      description: Metadata for MigrateLocationDestructively LRO.
      id: GoogleFirebaseStorageControlplaneV1betaMigrateLocationDestructivelyMetadata
      properties:
        createTime:
          description: The time the LRO was created.
          format: google-datetime
          type: string
        lastUpdateTime:
          description: The time the LRO was last updated.
          format: google-datetime
          type: string
        state:
          description: The current state of the migration.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - CREATING_TEMP_BUCKET
            - TRANSFERRING_TO_TEMP
            - DELETING_SOURCE_BUCKET
            - CREATING_DESTINATION_BUCKET
            - TRANSFERRING_TO_DESTINATION
            - DELETING_TEMP_BUCKET
            - SUCCEEDED
            - FAILED
            - ROLLING_BACK
            - ROLLED_BACK
          enumDescriptions:
            - Unspecified state. Should not be used.
            - The MigrateLocationDestructively request has passed precondition checks and the bucket migration will begin soon.
            - Generating a unique bucket name, storing the source -> temp mapping in Spanner, and actually creating the temporary bucket via Bigstore.
            - The first STS transfer to move all objects from the source bucket to the temp bucket is underway.
            - The source bucket is being emptied and deleted.
            - The source bucket is being recreated in the new location.
            - The second STS transfer to move all objects from the temp bucket to the final bucket is underway.
            - The temp bucket is being emptied and deleted.
            - All stages of the migration have completed and the operation has been marked done and updated with a response.
            - The migration failed at some stage and it is not possible to continue retrying that stage. Manual recovery may be needed. Rollback is either impossible at this stage, or has been attempted and failed.
            - The migration has encountered a permanent failure and is now being rolled back so that the source bucket is restored to its original state.
            - The migration has been successfully rolled back.
          type: string
      type: object
    ListBucketsResponse:
      description: The response returned by `ListBuckets`.
      id: ListBucketsResponse
      properties:
        buckets:
          description: The list of linked buckets.
          items:
            $ref: '#/components/schemas/Bucket'
          type: array
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    RemoveFirebaseRequest:
      description: The request used to unlink a Google Cloud Storage bucket from a Firebase project.
      id: RemoveFirebaseRequest
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/firebase: View and administer all your Firebase data and settings
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
  x-stackQL-resources:
    buckets:
      id: firebase.firebasestorage.buckets
      name: buckets
      title: Buckets
      methods:
        projects_buckets_list:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_buckets_get:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/projects_buckets_get'
          - $ref: '#/components/x-stackQL-resources/buckets/methods/projects_buckets_list'
        insert: []
        update: []
        delete: []
    buckets_firebase:
      id: firebase.firebasestorage.buckets_firebase
      name: buckets_firebase
      title: Buckets_firebase
      methods:
        projects_buckets_addFirebase:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}:addFirebase/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        projects_buckets_removeFirebase:
          operation:
            $ref: '#/paths/~1v1beta~1projects~1{projectsId}~1buckets~1{bucketsId}:removeFirebase/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
externalDocs:
  url: https://firebase.google.com/docs/storage
info:
  description: The Cloud Storage for Firebase API enables programmatic management of Cloud Storage buckets for use in Firebase projects
  title: Cloud Storage for Firebase API
  version: v1beta
openapi: 3.1.0
paths:
  /v1beta/projects/{projectsId}/buckets:
    get:
      description: Lists the linked storage buckets for a project.
      operationId: firebasestorage.projects.buckets.list
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBucketsResponse'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - buckets
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:
    get:
      description: Gets a single linked storage bucket.
      operationId: firebasestorage.projects.buckets.get
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - buckets
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:addFirebase:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Links a Google Cloud Storage bucket to a Firebase project.
      operationId: firebasestorage.projects.buckets.addFirebase
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFirebaseRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - buckets_firebase
  /v1beta/projects/{projectsId}/buckets/{bucketsId}:removeFirebase:
    parameters:
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Unlinks a linked Google Cloud Storage bucket from a Firebase project.
      operationId: firebasestorage.projects.buckets.removeFirebase
      parameters:
        - in: path
          name: projectsId
          required: true
          schema:
            type: string
        - in: path
          name: bucketsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFirebaseRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/firebase
          Oauth2c:
            - https://www.googleapis.com/auth/firebase
      tags:
        - buckets_firebase
servers:
  - url: https://firebasestorage.googleapis.com
