openapi: 3.0.0
info:
  title: api.godaddy.com
  version: 0.0.0
servers:
  - url: 'https://api.godaddy.com/'
paths:
  /v1/aftermarket/listings:
    delete:
      parameters:
        - description: A comma separated list of domain names
          in: query
          name: domains
          required: true
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/json:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
          description: Request was successful
        '400':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '422':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: "\tRequired parameters must be specified in correct format"
        '429':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        '500':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      operationId: deleteListings
      description: Remove listings from GoDaddy Auction
  /v1/aftermarket/listings/expiry:
    post:
      responses:
        '200':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/json:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            application/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/javascript:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
            text/xml:
              schema:
                $ref: '#/components/schemas/AftermarketListingAction'
          description: Request was successful
        '400':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '422':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: "\tToo many Listings provided"
        '429':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        '500':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      operationId: addExpiryListings
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AftermarketListingExpiryCreate'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/AftermarketListingExpiryCreate'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/AftermarketListingExpiryCreate'
              type: array
        description: An array of expiry listings to be loaded
        required: true
      description: Add expiry listings into GoDaddy Auction
components:
  schemas:
    AftermarketListingAction:
      properties:
        listingActionId:
          description: Action Id
          type: integer
      required:
        - listingActionId
      type: object
    AftermarketListingExpiryCreate:
      properties:
        domain:
          description: Domain name
          type: string
        expiresAt:
          description: Date when the domain expires
          format: iso-datetime
          type: string
        losingRegistrarId:
          default: 1
          description: Losing registrar id for the domain
          minimum: 1
          type: integer
        pageViewsMonthly:
          description: Monthly traffic page view for the domain
          type: integer
        revenueMonthly:
          description: Monthly parking revenue (in USD micro unit) for the domain
          type: integer
      required:
        - domain
        - expiresAt
        - losingRegistrarId
      type: object
    Error:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        fields:
          description: 'List of the specific fields, and the errors found with their contents'
          items:
            $ref: '#/components/schemas/ErrorField'
          minItems: 1
          type: array
        message:
          description: 'Human-readable, English description of the error'
          type: string
      required:
        - code
      type: object
    ErrorField:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        message:
          description: 'Human-readable, English description of the problem with the contents of the field'
          type: string
        path:
          description: |
            JSONPath referring to a field containing an error
            OR
            JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`
          format: json-path
          type: string
        pathRelated:
          description: 'JSONPath referring to a field containing an error, which is referenced by `path`'
          format: json-path
          type: string
      required:
        - path
        - code
      type: object
    ErrorLimit:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        fields:
          description: 'List of the specific fields, and the errors found with their contents'
          items:
            $ref: '#/components/schemas/ErrorField'
          minItems: 1
          type: array
        message:
          description: 'Human-readable, English description of the error'
          type: string
        retryAfterSec:
          description: Number of seconds to wait before attempting a similar request
          format: integer-positive
          type: integer
      required:
        - retryAfterSec
        - code
      type: object
    expiry:
      properties:
        id:
          format: double
          type: number
      type: object
  securitySchemes:
    sso_key:
      type: apiKey
  x-stackQL-resources:
    listings:
      id: godaddy.aftermarket.listings
      name: listings
      title: Listings
      methods:
        delete_listings:
          operation:
            $ref: '#/paths/~1v1~1aftermarket~1listings/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_expiry_listings:
          operation:
            $ref: '#/paths/~1v1~1aftermarket~1listings~1expiry/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/listings/methods/delete_listings'
