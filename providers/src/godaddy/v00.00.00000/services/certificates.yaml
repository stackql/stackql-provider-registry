openapi: 3.0.0
info:
  title: api.godaddy.com
  version: '1'
servers:
  - url: 'https://api.godaddy.com/'
paths:
  /v1/certificates:
    post:
      parameters:
        - description: Setting locale for communications such as emails and error messages
          in: header
          name: X-Market-Id
          required: false
          schema:
            default: Default locale for shopper account
            type: string
      responses:
        '200':
          description: No response was specified
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateIdentifier'
          description: Request was successful
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow renew
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: '`csr` is invalid'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'Creating a certificate order can be a long running asynchronous operation in the PKI workflow. The PKI API supports 2 options for getting the completion stateful actions for this asynchronous operations: 1) by polling operations -- see /v1/certificates/{certificateId}/actions 2) via WebHook style callback -- see ''/v1/certificates/{certificateId}/callback''.'
      operationId: certificate_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreate'
        description: The certificate order information
        required: true
      summary: Create a pending order for certificate
  /v1/certificates/validate:
    post:
      parameters:
        - description: Setting locale for communications such as emails and error messages
          in: header
          name: X-Market-Id
          required: false
          schema:
            default: Default locale for shopper account
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: Request validated successfully
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow renew
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: '`csr` is invalid'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      operationId: certificate_validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreate'
        description: The certificate order info
        required: true
      summary: Validate a pending order for certificate
      description: Validate a pending order for certificate
  '/v1/certificates/{certificate_id}':
    get:
      parameters:
        - description: Certificate id to lookup
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: Certificate details retrieved
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'Once the certificate order has been created, this method can be used to check the status of the certificate. This method can also be used to retrieve details of the certificate.'
      operationId: certificate_get
      summary: Retrieve certificate details
  '/v1/certificates/{certificate_id}/actions':
    get:
      parameters:
        - description: Certificate id to register for callback
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateAction'
          description: Action retrieval successful
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: This method is used to retrieve all stateful actions relating to a certificate lifecycle.
      operationId: certificate_action_retrieve
      summary: Retrieve all certificate actions
  '/v1/certificates/{certificate_id}/callback':
    delete:
      parameters:
        - description: Certificate id to unregister callback
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: Callback removed
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: Unregister the callback for a particular certificate.
      operationId: certificate_callback_delete
      summary: Unregister system callback
    get:
      parameters:
        - description: Certificate id to register for stateful action callback
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCallback'
          description: Callback registered
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: This method is used to retrieve the registered callback url for a certificate.
      operationId: certificate_callback_get
      summary: Retrieve system stateful action callback url
    put:
      parameters:
        - description: Certificate id to register/replace for callback
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
        - description: Callback url registered/replaced to receive stateful actions
          in: query
          name: callbackUrl
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: Callback replaced/registered
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Callback url is malformed
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'This method is used to register/replace url for callbacks for stateful actions relating to a certificate lifecycle. The callback url is a Webhook style pattern and will receive POST http requests with json body defined in the CertificateAction model definition for each certificate action.  Only one callback URL is allowed to be registered for each certificateId, so it will replace a previous registration.'
      operationId: certificate_callback_replace
      summary: Register of certificate action callback
  '/v1/certificates/{certificate_id}/cancel':
    post:
      parameters:
        - description: Certificate id to cancel
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: Certificate order has been canceled
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow cancel
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: Use the cancel call to cancel a pending certificate order.
      operationId: certificate_cancel
      summary: Cancel a pending certificate
  '/v1/certificates/{certificate_id}/download':
    get:
      parameters:
        - description: Certificate id to download
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateBundle'
          description: Certificate retrieved
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow download
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      operationId: certificate_download
      summary: Download certificate
      description: Download certificate
  '/v1/certificates/{certificate_id}/reissue':
    post:
      parameters:
        - description: Certificate id to reissue
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '202':
          description: Reissue request created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow reissue
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Delay revocation exceeds maximum
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'Rekeying is the process by which the private and public key is changed for a certificate. It is a simplified reissue,where only the CSR is changed. Reissuing is the process by which domain  names are added or removed from a certificate.Once a request is validated and approved, the certificate  will be reissued with the new common name and sans specified. Unlimited reissues are available during the  lifetime of the certificate.New names added to a certificate that do not share the base domain of the  common name may take additional time to validate. If this API call is made before a previous pending  reissue has been validated and issued, the previous reissue request is automatically rejected and replaced  with the current request.'''
      operationId: certificate_reissue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateReissue'
        description: The reissue request info
        required: true
      summary: Reissue active certificate
  '/v1/certificates/{certificate_id}/renew':
    post:
      parameters:
        - description: Certificate id to renew
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '202':
          description: Renew request created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow renew
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: '`csr` is invalid'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'Renewal is the process by which the validity of a certificate is extended. Renewal is only available 60 days prior to expiration of the previous certificate and 30 days after the expiration of the previous certificate.  The renewal supports modifying a set of the original certificate order information. Once a request is validated and approved, the certificate  will be issued with extended validity. Since subject alternative names can be removed during a renewal, we  require that you provide the subject alternative names you expect in the renewed certificate. New names added to a certificate that do not share the base domain of the  common name may take additional time to validate. '
      operationId: certificate_renew
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRenew'
        description: The renew request info
        required: true
      summary: Renew active certificate
  '/v1/certificates/{certificate_id}/revoke':
    post:
      parameters:
        - description: Certificate id to revoke
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: Certificate Revoked
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow revoke
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'Use revoke call to revoke an active certificate, if the certificate has not been issued a 404 response will be returned.'
      operationId: certificate_revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateRevoke'
        description: The certificate revocation request
        required: true
      summary: Revoke active certificate
  '/v1/certificates/{certificate_id}/siteSeal':
    get:
      parameters:
        - description: Certificate id
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
        - description: 'This value represents the visual theme of the seal. If seal doesn''t exist, default values are used if params not present. If seal does exist, default values will not be used to update unless params present.'
          in: query
          name: theme
          required: false
          schema:
            default: LIGHT
            enum:
              - DARK
              - LIGHT
            type: string
        - description: 'Determine locale for text displayed in seal image and verification page. If seal doesn''t exist, default values are used if params not present. If seal does exist, default values will not be used to update unless params present.'
          in: query
          name: locale
          required: false
          schema:
            default: en
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateSiteSeal'
          description: Site seal retrieved
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow seal
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: '''locale'' is invalid'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'This method is used to obtain the site seal information for an issued certificate. A site seal is a graphic that the certificate purchaser can embed on their web site to show  their visitors information about their SSL certificate. If a web site visitor clicks on the  site seal image, a pop-up page is displayed that contains detailed information about the SSL  certificate. The site seal token is used to link the site seal graphic image to the appropriate  certificate details pop-up page display when a user clicks on the site seal. The site seal  images are expected to be static images and hosted on the reseller''''s website, to minimize  delays for customer page load times.'
      operationId: certificate_siteseal_get
      summary: Get Site seal
  '/v1/certificates/{certificate_id}/verifyDomainControl':
    post:
      parameters:
        - description: Certificate id to lookup
          in: path
          name: certificate_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No response was specified
        '204':
          description: Domain control was successful
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate id not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Certificate state does not allow domain control
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      description: 'Domain control is a means for verifying the domain included in the certificate order. This resource is useful for resellers that control the domains for their customers, and can expedite the verification process. See https://www.godaddy.com/help/verifying-your-domain-ownership-for-ssl-certificate-requests-html-or-dns-7452'
      operationId: certificate_verifydomaincontrol
      summary: Check Domain Control
components:
  schemas:
    Certificate:
      properties:
        certificateId:
          description: The unique identifier of the certificate request. Only present if no errors returned
          type: string
        commonName:
          description: Common name of certificate
          type: string
        contact:
          $ref: '#/components/schemas/CertificateContact'
          description: Requestor contact information
        createdAt:
          description: The date the certificate was ordered.
          format: iso-datetime
          type: string
        deniedReason:
          description: Only present if certificate order has been denied
          type: string
        organization:
          $ref: '#/components/schemas/CertificateOrganization'
          description: Organization Name in certificate
        period:
          description: Validity period of order. Specified in years
          type: integer
        productType:
          description: Certificate product type
          enum:
            - DV_SSL
            - DV_WILDCARD_SSL
            - EV_SSL
            - OV_CS
            - OV_DS
            - OV_SSL
            - OV_WILDCARD_SSL
            - UCC_DV_SSL
            - UCC_EV_SSL
            - UCC_OV_SSL
          type: string
        progress:
          description: Percentage of completion for certificate vetting
          type: integer
        revokedAt:
          description: The revocation date of certificate (if revoked).
          format: iso-datetime
          type: string
        rootType:
          description: Root Type
          enum:
            - GODADDY_SHA_1
            - GODADDY_SHA_2
            - STARFIELD_SHA_1
            - STARFIELD_SHA_2
          type: string
        serialNumber:
          description: Serial number of certificate (if issued or revoked)
          type: string
        serialNumberHex:
          description: Hexadecmial format for Serial number of certificate(if issued or revoked)
          type: string
        slotSize:
          description: 'Number of subject alternative names(SAN) to be included in certificate '
          enum:
            - FIVE
            - TEN
            - FIFTEEN
            - TWENTY
            - THIRTY
            - FOURTY
            - FIFTY
            - ONE_HUNDRED
          type: string
        status:
          description: Status of certificate
          enum:
            - PENDING_ISSUANCE
            - ISSUED
            - REVOKED
            - CANCELED
            - DENIED
            - PENDING_REVOCATION
            - PENDING_REKEY
            - UNUSED
            - EXPIRED
          type: string
        subjectAlternativeNames:
          description: Contains subject alternative names set
          items:
            $ref: '#/components/schemas/SubjectAlternativeNameDetails'
          type: array
        validEnd:
          description: The end date of the certificate's validity (if issued or revoked).
          format: iso-datetime
          type: string
        validStart:
          description: The start date of the certificate's validity (if issued or revoked).
          format: iso-datetime
          type: string
      required:
        - certificateId
        - status
        - contact
        - period
        - createdAt
        - productType
      type: object
    CertificateAction:
      properties:
        createdAt:
          description: Date action created
          format: iso-datetime
          type: string
        type:
          enum:
            - CERTIFICATE_ISSUED
            - CERTIFICATE_ORDER_CANCELED
            - CERTIFICATE_ORDER_CREATED
            - CERTIFICATE_REVOKED
            - DOMAIN_VALIDATION_COMPLETE
            - FRAUD_DETECTED
            - ORG_NAME_CHANGE
            - ORG_VALIDATION_COMPLETE
            - SAN_DROP
          type: string
      required:
        - type
        - createdAt
      type: object
    CertificateAddress:
      properties:
        address1:
          description: Address line 1 of organization address
          type: string
        address2:
          description: Address line 2 of organization address
          type: string
        city:
          description: City/Locality of organization address
          type: string
        country:
          description: Two character country code of organization
          enum:
            - AC
            - AD
            - AE
            - AF
            - AG
            - AI
            - AL
            - AM
            - AN
            - AO
            - AQ
            - AR
            - AS
            - AT
            - AU
            - AW
            - AZ
            - BA
            - BB
            - BD
            - BE
            - BF
            - BG
            - BH
            - BI
            - BJ
            - BM
            - BN
            - BO
            - BR
            - BS
            - BT
            - BV
            - BW
            - BY
            - BZ
            - CA
            - CC
            - CD
            - CF
            - CG
            - CH
            - CI
            - CK
            - CL
            - CM
            - CN
            - CO
            - CR
            - CV
            - CX
            - CY
            - CZ
            - DE
            - DJ
            - DK
            - DM
            - DO
            - DZ
            - EC
            - EE
            - EG
            - EH
            - ER
            - ES
            - ET
            - FI
            - FJ
            - FK
            - FM
            - FO
            - FR
            - GA
            - GB
            - GD
            - GE
            - GF
            - GG
            - GH
            - GI
            - GL
            - GM
            - GN
            - GP
            - GQ
            - GR
            - GS
            - GT
            - GU
            - GW
            - GY
            - HK
            - HM
            - HN
            - HR
            - HT
            - HU
            - ID
            - IE
            - IL
            - IM
            - IN
            - IO
            - IQ
            - IS
            - IT
            - JE
            - JM
            - JO
            - JP
            - KE
            - KG
            - KH
            - KI
            - KM
            - KN
            - KR
            - KW
            - KY
            - KZ
            - LA
            - LB
            - LC
            - LI
            - LK
            - LR
            - LS
            - LT
            - LU
            - LV
            - LY
            - MA
            - MC
            - MD
            - ME
            - MG
            - MH
            - ML
            - MM
            - MN
            - MO
            - MP
            - MQ
            - MR
            - MS
            - MT
            - MU
            - MV
            - MW
            - MX
            - MY
            - MZ
            - NA
            - NC
            - NE
            - NF
            - NG
            - NI
            - NL
            - 'NO'
            - NP
            - NR
            - NU
            - NZ
            - OM
            - PA
            - PE
            - PF
            - PG
            - PH
            - PK
            - PL
            - PM
            - PN
            - PR
            - PS
            - PT
            - PW
            - PY
            - QA
            - RE
            - RO
            - RS
            - RU
            - RW
            - SA
            - SB
            - SC
            - SE
            - SG
            - SH
            - SI
            - SJ
            - SK
            - SL
            - SM
            - SN
            - SO
            - SR
            - ST
            - SV
            - SZ
            - TC
            - TD
            - TF
            - TG
            - TH
            - TJ
            - TK
            - TL
            - TM
            - TN
            - TO
            - TP
            - TR
            - TT
            - TV
            - TW
            - TZ
            - UA
            - UG
            - UM
            - US
            - UY
            - UZ
            - VA
            - VC
            - VE
            - VG
            - VI
            - VN
            - VU
            - WF
            - WS
            - YE
            - YT
            - YU
            - ZA
            - ZM
            - ZW
          format: iso-country-code
          type: string
        postalCode:
          description: Postal code of organization address
          type: string
        state:
          description: Full name of State/Province/Territory of organization address
          type: string
      required:
        - address1
        - country
      type: object
    CertificateBundle:
      properties:
        pems:
          $ref: '#/components/schemas/PEMCertificates'
          description: Certificates in PEM format
        serialNumber:
          description: Serial number of certificate requested
          type: string
      required:
        - serialNumber
        - pems
      type: object
    CertificateCallback:
      properties:
        callbackUrl:
          description: Callback url registered to receive stateful actions
          type: string
      required:
        - callbackUrl
      type: object
    CertificateContact:
      properties:
        email:
          description: Email address of requestor contact
          type: string
        jobTitle:
          description: Only used for EVSSL. Job title of requestor contact
          type: string
        nameFirst:
          description: First name of requestor contact
          type: string
        nameLast:
          description: Last name of requestor contact
          type: string
        nameMiddle:
          description: Middle initial of requestor contact
          type: string
        phone:
          description: Phone number for requestor contact
          type: string
        suffix:
          description: Suffix of requestor contact
          type: string
      required:
        - nameFirst
        - nameLast
        - email
        - phone
      type: object
    CertificateCreate:
      properties:
        callbackUrl:
          description: Required if client would like to receive stateful actions via callback during certificate lifecyle
          type: string
        commonName:
          description: 'Name to be secured in certificate. If provided, CN field in CSR will be ignored.'
          type: string
        contact:
          $ref: '#/components/schemas/CertificateContact'
          description: Requestor contact information
        csr:
          description: Certificate Signing Request
          type: string
        intelVPro:
          default: false
          description: Only used for OV
          type: boolean
        organization:
          $ref: '#/components/schemas/CertificateOrganizationCreate'
          description: 'Required for EVSSL, OVSSL, CS, and DS'
        period:
          description: Number of years for certificate validity period
          type: integer
        productType:
          description: Type of product requesting a certificate. Only required non-renewal
          enum:
            - DV_SSL
            - DV_WILDCARD_SSL
            - EV_SSL
            - OV_CS
            - OV_DS
            - OV_SSL
            - OV_WILDCARD_SSL
            - UCC_DV_SSL
            - UCC_EV_SSL
            - UCC_OV_SSL
          type: string
        rootType:
          default: STARFIELD_SHA_2
          description: 'Root Type. Depending on certificate expiration date, SHA_1 not be allowed. Will default to SHA_2 if expiration date exceeds sha1 allowed date'
          enum:
            - GODADDY_SHA_1
            - GODADDY_SHA_2
            - STARFIELD_SHA_1
            - STARFIELD_SHA_2
          type: string
        slotSize:
          description: 'Number of subject alternative names(SAN) to be included in certificate '
          enum:
            - FIVE
            - TEN
            - FIFTEEN
            - TWENTY
            - THIRTY
            - FOURTY
            - FIFTY
            - ONE_HUNDRED
          type: string
        subjectAlternativeNames:
          description: Subject Alternative names. Collection of subjectAlternativeNames to be included in certificate.
          items:
            type: string
          type: array
          uniqueItems: true
      required:
        - csr
        - productType
        - period
        - contact
      type: object
    CertificateIdentifier:
      properties:
        certificateId:
          description: The unique identifier of the certificate request. Only present if verified.
          type: string
      required:
        - certificateId
      type: object
    CertificateOrganization:
      properties:
        address:
          $ref: '#/components/schemas/CertificateAddress'
          description: Organization presence address
        assumedName:
          description: Only for EVSSL. The DBA(does business as) name for the organization.
          type: string
        jurisdictionOfIncorporation:
          $ref: '#/components/schemas/JurisdictionOfIncorporation'
          description: Jurisdiction of Incorporation
        name:
          description: Name of organization that owns common name
          type: string
        phone:
          description: Phone number for organization
          type: string
        registrationAgent:
          description: Only for EVSSL.
          type: string
        registrationNumber:
          description: Only for EVSSL.
          type: string
      required:
        - name
        - phone
        - address
      type: object
    CertificateOrganizationCreate:
      properties:
        address:
          $ref: '#/components/schemas/CertificateAddress'
          description: Organization presence address
        assumedName:
          description: Only for EVSSL. The DBA(does business as) name for the organization.
          type: string
        name:
          description: Name of organization that owns common name
          type: string
        phone:
          description: Phone number for organization
          type: string
        registrationAgent:
          description: Only for EVSSL.
          type: string
        registrationNumber:
          description: Only for EVSSL.
          type: string
      required:
        - name
        - phone
      type: object
    CertificateReissue:
      properties:
        callbackUrl:
          description: Required if client would like to receive stateful action via callback during certificate lifecyle
          type: string
        commonName:
          default: Existing common name
          description: The common name of certificate to be secured
          type: string
        csr:
          default: Existing CSR
          description: Certificate Signing Request.
          type: string
        delayExistingRevoke:
          default: 72
          description: 'In hours, time to delay revoking existing certificate after issuance of new certificate. If revokeExistingCertOnIssuance is enabled, this value will be ignored'
          maximum: 168
          type: integer
        rootType:
          default: GODADDY_SHA_1
          description: 'Root Type. Depending on certificate expiration date, SHA_1 not be allowed. Will default to SHA_2 if expiration date exceeds sha1 allowed date'
          enum:
            - GODADDY_SHA_1
            - GODADDY_SHA_2
            - STARFIELD_SHA_1
            - STARFIELD_SHA_2
          type: string
        subjectAlternativeNames:
          description: Only used for UCC products. An array of subject alternative names to include in certificate.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    CertificateRenew:
      properties:
        callbackUrl:
          description: Required if client would like to receive stateful actions via callback during certificate lifecyle
          type: string
        commonName:
          default: Existing common name
          description: The common name of certificate to be secured
          type: string
        csr:
          default: Existing CSR
          description: Certificate Signing Request.
          type: string
        period:
          default: 0
          description: 'Number of years for certificate validity period, if different from previous certificate'
          type: integer
        rootType:
          default: GODADDY_SHA_1
          description: 'Root Type. Depending on certificate expiration date, SHA_1 not be allowed. Will default to SHA_2 if expiration date exceeds sha1 allowed date'
          enum:
            - GODADDY_SHA_1
            - GODADDY_SHA_2
            - STARFIELD_SHA_1
            - STARFIELD_SHA_2
          type: string
        subjectAlternativeNames:
          description: Only used for UCC products. An array of subject alternative names to include in certificate. Not including a subject alternative name that was in the previous certificate will remove it from the renewed certificate.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    CertificateRevoke:
      properties:
        reason:
          description: Reason for revocation
          enum:
            - AFFILIATION_CHANGED
            - CESSATION_OF_OPERATION
            - KEY_COMPROMISE
            - PRIVILEGE_WITHDRAWN
            - SUPERSEDED
          type: string
      required:
        - reason
      type: object
    CertificateSiteSeal:
      properties:
        html:
          description: Certificate Seal HTML
          type: string
      required:
        - html
      type: object
    Error:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        fields:
          description: 'List of the specific fields, and the errors found with their contents'
          items:
            $ref: '#/components/schemas/ErrorField'
          minItems: 1
          type: array
        message:
          description: Description of the error
          type: string
      required:
        - code
      type: object
    ErrorField:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        message:
          description: Description of the problem with the contents of the field
          type: string
        path:
          description: JSONPath referring to the field within the submitted data containing an error
          format: json-path
          type: string
      required:
        - path
        - code
      type: object
    JurisdictionOfIncorporation:
      properties:
        city:
          type: string
        country:
          format: iso-country-code
          type: string
        county:
          type: string
        state:
          type: string
      required:
        - country
      type: object
    PEMCertificates:
      properties:
        certificate:
          description: End entity certificate in PEM format
          type: string
        cross:
          description: CA Cross Intermediate certificate in PEM format
          type: string
        intermediate:
          description: CA Signing Intermediate certificate in PEM format
          type: string
        root:
          description: CA Root certificate in PEM format
          type: string
      required:
        - certificate
      type: object
    SubjectAlternativeNameDetails:
      properties:
        status:
          description: Total number of page results
          enum:
            - PENDING
            - INVALID
            - COMPLETED
            - FRAUD
          type: string
        subjectAlternativeName:
          description: Subject alternative name to be included in certificate
          type: string
      required:
        - subjectAlternativeName
        - status
      type: object
  securitySchemes:
    sso_key:
      type: apiKey
  x-stackQL-resources:
    certificates:
      id: godaddy.certificates.certificates
      name: certificates
      title: Certificates
      methods:
        certificate_create:
          operation:
            $ref: '#/paths/~1v1~1certificates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_validate:
          operation:
            $ref: '#/paths/~1v1~1certificates~1validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_get:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_cancel:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_download:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1download/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_reissue:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1reissue/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_renew:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1renew/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_revoke:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1revoke/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_verifydomaincontrol:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1verifyDomainControl/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/certificate_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/certificate_create'
        update: []
        delete: []
    actions:
      id: godaddy.certificates.actions
      name: actions
      title: Actions
      methods:
        certificate_action_retrieve:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1actions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/actions/methods/certificate_action_retrieve'
        insert: []
        update: []
        delete: []
    callback:
      id: godaddy.certificates.callback
      name: callback
      title: Callback
      methods:
        certificate_callback_delete:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1callback/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_callback_get:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1callback/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        certificate_callback_replace:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1callback/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/callback/methods/certificate_callback_get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/callback/methods/certificate_callback_delete'
    site_seal:
      id: godaddy.certificates.site_seal
      name: site_seal
      title: Site Seal
      methods:
        certificate_siteseal_get:
          operation:
            $ref: '#/paths/~1v1~1certificates~1{certificate_id}~1siteSeal/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/site_seal/methods/certificate_siteseal_get'
        insert: []
        update: []
        delete: []
