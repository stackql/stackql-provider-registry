openapi: 3.0.0
info:
  title: api.godaddy.com
  version: 1.0.0
servers:
  - url: 'https://api.godaddy.com/'
paths:
  /v1/abuse/tickets:
    get:
      parameters:
        - description: The type of abuse.
          in: query
          name: type
          required: false
          schema:
            enum:
              - A_RECORD
              - CHILD_ABUSE
              - CONTENT
              - FRAUD_WIRE
              - IP_BLOCK
              - MALWARE
              - NETWORK_ABUSE
              - PHISHING
              - SPAM
            type: string
        - description: Is this abuse ticket closed?
          in: query
          name: closed
          required: false
          schema:
            default: false
            type: boolean
        - description: The domain name or ip address abuse originated from
          in: query
          name: sourceDomainOrIp
          required: false
          schema:
            format: host-name-or-ip-address
            type: string
        - description: 'The brand/company the abuse is targeting. ie: brand name/bank name'
          in: query
          name: target
          required: false
          schema:
            type: string
        - description: The earliest abuse ticket creation date to pull abuse tickets for
          in: query
          name: createdStart
          required: false
          schema:
            format: iso-datetime
            type: string
        - description: The latest abuse ticket creation date to pull abuse tickets for
          in: query
          name: createdEnd
          required: false
          schema:
            format: iso-datetime
            type: string
        - description: Number of abuse ticket numbers to return.
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: integer-positive
            maximum: 100
            type: integer
        - description: The earliest result set record number to pull abuse tickets for
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: integer-positive
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbuseTicketList'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
        - sso_key: []
      operationId: getTickets
      description: List all abuse tickets ids that match user provided filters
    post:
      responses:
        '200':
          description: No response was specified
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbuseTicketId'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error
      security:
        - sso_key: []
      operationId: createTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbuseTicketCreate'
        description: The endpoint which allows the Reporter to create a new abuse ticket
        required: true
      description: Create a new abuse ticket
  '/v1/abuse/tickets/{ticket_id}':
    get:
      parameters:
        - description: A unique abuse ticket identifier
          in: path
          name: ticket_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbuseTicket'
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid ticket id provided
      security:
        - sso_key: []
      operationId: getTicketInfo
      description: Return the abuse ticket data for a given ticket id
components:
  schemas:
    AbuseTicket:
      description: 'The associated fields returned, given a unique abuse ticket id'
      properties:
        closed:
          default: false
          description: Is this abuse ticket closed?
          type: boolean
        closedAt:
          description: The date the abuse ticket was closed
          format: iso-datetime
          type: string
        createdAt:
          description: The date the abuse ticket was created
          format: iso-datetime
          type: string
        domainIp:
          description: The domain or IP the suspected abuse was reported against
          type: string
        reporter:
          description: The shopper id of the person who reported the suspected abuse
          type: string
        source:
          description: The single URL or IP the suspected abuse was reported against
          type: string
        target:
          description: The company the suspected abuse is targeting
          type: string
        ticketId:
          description: Abuse ticket ID
          type: string
        type:
          description: The type of abuse being reported
          enum:
            - A_RECORD
            - CHILD_ABUSE
            - CONTENT
            - FRAUD_WIRE
            - IP_BLOCK
            - MALWARE
            - NETWORK_ABUSE
            - PHISHING
            - SPAM
          type: string
      required:
        - ticketId
        - reporter
        - domainIp
        - closed
        - type
        - target
        - source
        - createdAt
        - closedAt
      type: object
    AbuseTicketCreate:
      properties:
        info:
          description: 'Additional information that may assist the abuse investigator. ie: server logs or email headers/body for SPAM'
          type: string
        infoUrl:
          description: Reporter URL if housing additional information that may assist the abuse investigator
          format: url
          type: string
        intentional:
          default: false
          description: Do you believe this is intentional abuse by the domain holder?
          type: boolean
        proxy:
          description: 'The Proxy information required to view the abuse being reported. ie: Specific IP used, or country of IP viewing from'
          type: string
        source:
          description: 'The URL or IP where live abuse content is located at. ie: https://www.example.com/bad_stuff/bad.php'
          type: string
        target:
          description: 'The brand/company the abuse is targeting. ie: brand name/bank name'
          type: string
        type:
          description: The type of abuse being reported.
          enum:
            - A_RECORD
            - CHILD_ABUSE
            - CONTENT
            - FRAUD_WIRE
            - IP_BLOCK
            - MALWARE
            - NETWORK_ABUSE
            - PHISHING
            - SPAM
          type: string
      type: object
    AbuseTicketId:
      description: The primary key of a newly created abuse ticket
      properties:
        ticketId:
          description: Abuse ticket ID
          type: string
      required:
        - ticketId
      type: object
    AbuseTicketList:
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        ticketIds:
          description: A list of abuse ticket ids originated by this reporter.
          items:
            type: string
          type: array
      required:
        - ticketIds
      type: object
    Error:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        fields:
          description: 'List of the specific fields, and the errors found with their contents'
          items:
            $ref: '#/components/schemas/ErrorField'
          minItems: 1
          type: array
        message:
          description: 'Human-readable, English description of the error'
          type: string
        stack:
          description: 'Stack trace indicating where the error occurred. NOTE: This attribute MAY be included for Development and Test environments. However, it MUST NOT be exposed from OTE nor Production systems.'
          items:
            type: string
          minItems: 1
          type: array
      required:
        - code
      type: object
    ErrorField:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        message:
          description: 'Human-readable, English description of the problem with the contents of the field'
          type: string
        path:
          description: 1) JSONPath referring to the field within the data containing an erroror2) JSONPath referring to an object containing an error
          format: json-path
          type: string
        pathRelated:
          description: JSONPath referring to the field on the object referenced by `path` containing an error
          format: json-path
          type: string
      required:
        - path
        - code
      type: object
    Pagination:
      properties:
        first:
          description: Optional link to first list of results
          type: string
        last:
          description: Optional link to last list of results
          type: string
        next:
          description: Optional link to next list of results
          type: string
        previous:
          description: Optional link to previous list of results
          type: string
        total:
          description: Number of records available
          type: integer
      type: object
  securitySchemes:
    sso_key:
      type: apiKey
  x-stackQL-resources:
    tickets:
      id: godaddy.abuse.tickets
      name: tickets
      title: Tickets
      methods:
        get_tickets:
          operation:
            $ref: '#/paths/~1v1~1abuse~1tickets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.ticketIds
        _get_tickets:
          operation:
            $ref: '#/paths/~1v1~1abuse~1tickets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_ticket:
          operation:
            $ref: '#/paths/~1v1~1abuse~1tickets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_ticket_info:
          operation:
            $ref: '#/paths/~1v1~1abuse~1tickets~1{ticket_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tickets/methods/get_ticket_info'
          - $ref: '#/components/x-stackQL-resources/tickets/methods/get_tickets'
        insert:
          - $ref: '#/components/x-stackQL-resources/tickets/methods/create_ticket'
        update: []
        delete: []
