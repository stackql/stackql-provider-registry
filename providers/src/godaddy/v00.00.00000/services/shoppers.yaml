openapi: 3.0.0
info:
  title: api.godaddy.com
  version: 1.0.0
servers:
  - url: 'https://api.godaddy.com/'
paths:
  /v1/shoppers/subaccount:
    post:
      responses:
        '200':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/json:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
          description: Request was successful
        '400':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '422':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: '`subaccount` does not fulfill the schema'
        '429':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        '500':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      operationId: createSubaccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubaccountCreate'
          application/xml:
            schema:
              $ref: '#/components/schemas/SubaccountCreate'
          text/xml:
            schema:
              $ref: '#/components/schemas/SubaccountCreate'
        description: The subaccount to create
        required: true
      description: Create a Subaccount owned by the authenticated Reseller
  '/v1/shoppers/{shopper_id}':
    get:
      parameters:
        - description: Shopper whose details are to be retrieved
          in: path
          name: shopper_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Shopper'
            application/json:
              schema:
                $ref: '#/components/schemas/Shopper'
            application/xml:
              schema:
                $ref: '#/components/schemas/Shopper'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Shopper'
            text/xml:
              schema:
                $ref: '#/components/schemas/Shopper'
          description: Request was successful
        '400':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found
        '429':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        '500':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      operationId: get
      description: Get details for the specified Shopper
    post:
      parameters:
        - description: The ID of the Shopper to update
          in: path
          name: shopper_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/json:
              schema:
                $ref: '#/components/schemas/ShopperId'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ShopperId'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShopperId'
          description: Request was successful
        '400':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request was malformed
        '401':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authentication info not sent or invalid
        '403':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Authenticated user is not allowed access
        '404':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource not found
        '422':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: '`Shopper` does not fulfill the schema'
        '429':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/javascript:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorLimit'
          description: Too many requests received within interval
        '500':
          content:
            application/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/javascript:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
        - sso_key: []
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopperUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/ShopperUpdate'
          text/xml:
            schema:
              $ref: '#/components/schemas/ShopperUpdate'
        description: The Shopper details to update
        required: true
      description: Update details for the specified Shopper
components:
  schemas:
    Error:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        fields:
          description: 'List of the specific fields, and the errors found with their contents'
          items:
            $ref: '#/components/schemas/ErrorField'
          minItems: 1
          type: array
        message:
          description: 'Human-readable, English description of the error'
          type: string
      required:
        - code
      type: object
    ErrorField:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        message:
          description: 'Human-readable, English description of the problem with the contents of the field'
          type: string
        path:
          description: |
            JSONPath referring to a field containing an error
            OR
            JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`
          format: json-path
          type: string
        pathRelated:
          description: 'JSONPath referring to a field containing an error, which is referenced by `path`'
          format: json-path
          type: string
      required:
        - path
        - code
      type: object
    ErrorLimit:
      properties:
        code:
          description: 'Short identifier for the error, suitable for indicating the specific error within client code'
          format: constant
          type: string
        fields:
          description: 'List of the specific fields, and the errors found with their contents'
          items:
            $ref: '#/components/schemas/ErrorField'
          minItems: 1
          type: array
        message:
          description: 'Human-readable, English description of the error'
          type: string
        retryAfterSec:
          description: Number of seconds to wait before attempting a similar request
          format: integer-positive
          type: integer
      required:
        - retryAfterSec
        - code
      type: object
    Shopper:
      properties:
        email:
          format: email
          type: string
        externalId:
          type: integer
        marketId:
          default: en-US
          format: bcp-47
          type: string
        nameFirst:
          type: string
        nameLast:
          type: string
        shopperId:
          type: string
      required:
        - shopperId
        - nameFirst
        - nameLast
        - email
        - marketId
      type: object
    ShopperId:
      properties:
        customerId:
          description: Identifier for the Customer record associated with this Shopper record. This is an alternate identifier that some systems use to identify an individual shopper record
          type: string
        shopperId:
          type: string
      required:
        - shopperId
      type: object
    ShopperUpdate:
      properties:
        email:
          format: email
          type: string
        externalId:
          type: integer
        marketId:
          format: bcp-47
          type: string
        nameFirst:
          type: string
        nameLast:
          type: string
      type: object
    SubaccountCreate:
      properties:
        email:
          format: email
          type: string
        externalId:
          type: integer
        marketId:
          default: en-US
          format: bcp-47
          type: string
        nameFirst:
          type: string
        nameLast:
          type: string
        password:
          format: shopper-password
          type: string
      required:
        - email
        - password
        - nameFirst
        - nameLast
      type: object
  securitySchemes:
    sso_key:
      type: apiKey
  x-stackQL-resources:
    subaccount:
      id: godaddy.shoppers.subaccount
      name: subaccount
      title: Subaccount
      methods:
        create_subaccount:
          operation:
            $ref: '#/paths/~1v1~1shoppers~1subaccount/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/subaccount/methods/create_subaccount'
        update: []
        delete: []
    shoppers:
      id: godaddy.shoppers.shoppers
      name: shoppers
      title: Shoppers
      methods:
        get:
          operation:
            $ref: '#/paths/~1v1~1shoppers~1{shopper_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v1~1shoppers~1{shopper_id}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shoppers/methods/get'
        insert: []
        update: []
        delete: []
