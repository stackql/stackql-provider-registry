openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Chrome UX Report API
  description: 'The Chrome UX Report API lets you view real user experience data for millions of websites. '
  version: v1
  x-discovery-doc-revision: '20230104'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/web/tools/chrome-user-experience-report/api/reference
servers:
  - url: https://chromeuxreport.googleapis.com
components:
  schemas:
    UrlNormalization:
      properties:
        originalUrl:
          description: The original requested URL prior to any normalization actions.
          type: string
        normalizedUrl:
          type: string
          description: The URL after any normalization actions. This is a valid user experience URL that could reasonably be looked up.
      description: Object representing the normalization actions taken to normalize a url to achieve a higher chance of successful lookup. These are simple automated changes that are taken when looking up the provided `url_patten` would be known to fail. Complex actions like following redirects are not handled.
      type: object
      id: UrlNormalization
    Bin:
      type: object
      description: A bin is a discrete portion of data spanning from start to end, or if no end is given, then from start to +inf. A bin's start and end values are given in the value type of the metric it represents. For example, "first contentful paint" is measured in milliseconds and exposed as ints, therefore its metric bins will use int32s for its start and end types. However, "cumulative layout shift" is measured in unitless decimals and is exposed as a decimal encoded as a string, therefore its metric bins will use strings for its value type.
      id: Bin
      properties:
        density:
          format: double
          description: The proportion of users that experienced this bin's value for the given metric.
          type: number
        start:
          type: any
          description: Start is the beginning of the data bin.
        end:
          description: End is the end of the data bin. If end is not populated, then the bin has no end and is valid from start to +inf.
          type: any
    Record:
      type: object
      description: Record is a single Chrome UX report data record. It contains use experience statistics for a single url pattern and set of dimensions.
      id: Record
      properties:
        metrics:
          additionalProperties:
            $ref: '#/components/schemas/Metric'
          type: object
          description: 'Metrics is the map of user experience data available for the record defined in the key field. Metrics are keyed on the metric name. Allowed key values: ["first_contentful_paint", "first_input_delay", "largest_contentful_paint", "cumulative_layout_shift"]'
        key:
          description: Key defines all of the unique querying parameters needed to look up a user experience record.
          $ref: '#/components/schemas/Key'
        collectionPeriod:
          description: The collection period indicates when the data reflected in this record was collected.
          $ref: '#/components/schemas/CollectionPeriod'
    Date:
      properties:
        year:
          type: integer
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          type: integer
          format: int32
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          type: integer
          format: int32
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      type: object
      id: Date
    Key:
      id: Key
      type: object
      properties:
        effectiveConnectionType:
          type: string
          description: 'The effective connection type is the general connection class that all users experienced for this record. This field uses the values ["offline", "slow-2G", "2G", "3G", "4G"] as specified in: https://wicg.github.io/netinfo/#effective-connection-types If the effective connection type is unspecified, then aggregated data over all effective connection types will be returned.'
        url:
          type: string
          description: 'Url specifies a specific url that this record is for. Note: When specifying a "url" only data for that specific url will be aggregated.'
        formFactor:
          enum:
            - ALL_FORM_FACTORS
            - PHONE
            - DESKTOP
            - TABLET
          type: string
          enumDescriptions:
            - The default value, representing all device classes.
            - The device class representing a "mobile"/"phone" sized client.
            - The device class representing a "desktop"/"laptop" type full size client.
            - The device class representing a "tablet" type client.
          description: The form factor is the device class that all users used to access the site for this record. If the form factor is unspecified, then aggregated data over all form factors will be returned.
        origin:
          description: 'Origin specifies the origin that this record is for. Note: When specifying an origin, data for loads under this origin over all pages are aggregated into origin level user experience data.'
          type: string
      description: Key defines all the dimensions that identify this record as unique.
    Percentiles:
      type: object
      id: Percentiles
      properties:
        p75:
          description: 75% of users experienced the given metric at or below this value.
          type: any
      description: Percentiles contains synthetic values of a metric at a given statistical percentile. These are used for estimating a metric's value as experienced by a percentage of users out of the total number of users.
    Metric:
      description: A `metric` is a set of user experience data for a single web performance metric, like "first contentful paint". It contains a summary histogram of real world Chrome usage as a series of `bins`.
      properties:
        percentiles:
          description: Common useful percentiles of the Metric. The value type for the percentiles will be the same as the value types given for the Histogram bins.
          $ref: '#/components/schemas/Percentiles'
        histogram:
          type: array
          description: The histogram of user experiences for a metric. The histogram will have at least one bin and the densities of all bins will add up to ~1.
          items:
            $ref: '#/components/schemas/Bin'
      type: object
      id: Metric
    QueryRequest:
      type: object
      description: Request payload sent by a physical web client. This request includes all necessary context to load a particular user experience record.
      id: QueryRequest
      properties:
        effectiveConnectionType:
          description: 'The effective connection type is a query dimension that specifies the effective network class that the record''s data should belong to. This field uses the values ["offline", "slow-2G", "2G", "3G", "4G"] as specified in: https://wicg.github.io/netinfo/#effective-connection-types Note: If no effective connection type is specified, then a special record with aggregated data over all effective connection types will be returned.'
          type: string
        metrics:
          type: array
          items:
            type: string
          description: 'The metrics that should be included in the response. If none are specified then any metrics found will be returned. Allowed values: ["first_contentful_paint", "first_input_delay", "largest_contentful_paint", "cumulative_layout_shift", "experimental_time_to_first_byte", "experimental_interaction_to_next_paint"]'
        origin:
          description: 'The url pattern "origin" refers to a url pattern that is the origin of a website. Examples: "https://example.com", "https://cloud.google.com"'
          type: string
        url:
          type: string
          description: 'The url pattern "url" refers to a url pattern that is any arbitrary url. Examples: "https://example.com/", "https://cloud.google.com/why-google-cloud/"'
        formFactor:
          enumDescriptions:
            - The default value, representing all device classes.
            - The device class representing a "mobile"/"phone" sized client.
            - The device class representing a "desktop"/"laptop" type full size client.
            - The device class representing a "tablet" type client.
          type: string
          enum:
            - ALL_FORM_FACTORS
            - PHONE
            - DESKTOP
            - TABLET
          description: 'The form factor is a query dimension that specifies the device class that the record''s data should belong to. Note: If no form factor is specified, then a special record with aggregated data over all form factors will be returned.'
    CollectionPeriod:
      type: object
      properties:
        firstDate:
          description: The first day in the collection period, inclusive.
          $ref: '#/components/schemas/Date'
        lastDate:
          $ref: '#/components/schemas/Date'
          description: The last day in the collection period, inclusive.
      description: The collection period is a date range which includes the `first` and `last` day.
      id: CollectionPeriod
    QueryResponse:
      properties:
        urlNormalizationDetails:
          $ref: '#/components/schemas/UrlNormalization'
          description: These are details about automated normalization actions that were taken in order to make the requested `url_pattern` valid.
        record:
          $ref: '#/components/schemas/Record'
          description: The record that was found.
      type: object
      description: Response payload sent back to a physical web client. This response contains the record found based on the identiers present in a `QueryRequest`. The returned response will have a record, and sometimes details on normalization actions taken on the request that were necessary to make the request successful.
      id: QueryResponse
  parameters:
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/chrome.management.policy.readonly: See policies applied to Chrome OS and Chrome Browsers managed within your organization
            https://www.googleapis.com/auth/chrome.management.policy: See, edit, create or delete policies applied to Chrome OS and Chrome Browsers managed within your organization
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    records:
      id: googleworkspace.chromeuxreport.records
      name: records
      title: Records
      methods:
        queryRecord:
          operation:
            $ref: '#/paths/~1v1~1records:queryRecord/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/records:queryRecord:
    parameters:
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Queries the Chrome User Experience for a single `record` for a given site. Returns a `record` that contains one or more `metrics` corresponding to performance data about the requested site.
      operationId: chromeuxreport.records.queryRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
      parameters: []
      x-stackQL-resource: records
      x-stackQL-verb: exec
