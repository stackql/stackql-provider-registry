openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Drive Activity API
  description: Provides a historical view of activity in Google Drive.
  version: v2
  x-discovery-doc-revision: '20241203'
  x-generated-date: '2024-12-07'
externalDocs:
  url: https://developers.google.com/drive/activity/
servers:
  - url: https://driveactivity.googleapis.com
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/drive.activity: View and add to the activity record of files in your Google Drive
            https://www.googleapis.com/auth/drive.activity.readonly: View the activity record of files in your Google Drive
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    QueryDriveActivityRequest:
      id: QueryDriveActivityRequest
      description: The request message for querying Drive activity.
      type: object
      properties:
        itemName:
          description: >-
            Return activities for this Drive item. The format is
            `items/ITEM_ID`.
          type: string
        ancestorName:
          description: >-
            Return activities for this Drive folder, plus all children and
            descendants. The format is `items/ITEM_ID`.
          type: string
        consolidationStrategy:
          description: >-
            Details on how to consolidate related actions that make up the
            activity. If not set, then related actions aren't consolidated.
          $ref: '#/components/schemas/ConsolidationStrategy'
        pageSize:
          description: >-
            The minimum number of activities desired in the response; the server
            attempts to return at least this quantity. The server may also
            return fewer activities if it has a partial response ready before
            the request times out. If not set, a default value is used.
          type: integer
          format: int32
        pageToken:
          description: >-
            The token identifies which page of results to return. Set this to
            the next_page_token value returned from a previous query to obtain
            the following page of results. If not set, the first page of results
            is returned.
          type: string
        filter:
          description: >-
            The filtering for items returned from this query request. The format
            of the filter string is a sequence of expressions, joined by an
            optional "AND", where each expression is of the form "field operator
            value". Supported fields: - `time`: Uses numerical operators on date
            values either in terms of milliseconds since Jan 1, 1970 or in RFC
            3339 format. Examples: - `time > 1452409200000 AND time <=
            1492812924310` - `time >= "2016-01-10T01:02:03-05:00"` -
            `detail.action_detail_case`: Uses the "has" operator (:) and either
            a singular value or a list of allowed action types enclosed in
            parentheses, separated by a space. To exclude a result from the
            response, prepend a hyphen (`-`) to the beginning of the filter
            string. Examples: - `detail.action_detail_case:RENAME` -
            `detail.action_detail_case:(CREATE RESTORE)` -
            `-detail.action_detail_case:MOVE` 
          type: string
    ConsolidationStrategy:
      id: ConsolidationStrategy
      description: >-
        How the individual activities are consolidated. If a set of activities
        is related they can be consolidated into one combined activity, such as
        one actor performing the same action on multiple targets, or multiple
        actors performing the same action on a single target. The strategy
        defines the rules for which activities are related.
      type: object
      properties:
        none:
          description: The individual activities are not consolidated.
          $ref: '#/components/schemas/NoConsolidation'
        legacy:
          description: >-
            The individual activities are consolidated using the legacy
            strategy.
          $ref: '#/components/schemas/Legacy'
    NoConsolidation:
      id: NoConsolidation
      description: A strategy that does no consolidation of individual activities.
      type: object
      properties: {}
    Legacy:
      id: Legacy
      description: >-
        A strategy that consolidates activities using the grouping rules from
        the legacy V1 Activity API. Similar actions occurring within a window of
        time can be grouped across multiple targets (such as moving a set of
        files at once) or multiple actors (such as several users editing the
        same item). Grouping rules for this strategy are specific to each type
        of action.
      type: object
      properties: {}
    QueryDriveActivityResponse:
      id: QueryDriveActivityResponse
      description: Response message for querying Drive activity.
      type: object
      properties:
        activities:
          description: List of activity requested.
          type: array
          items:
            $ref: '#/components/schemas/DriveActivity'
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
    DriveActivity:
      id: DriveActivity
      description: >-
        A single Drive activity comprising one or more Actions by one or more
        Actors on one or more Targets. Some Action groupings occur
        spontaneously, such as moving an item into a shared folder triggering a
        permission change. Other groupings of related Actions, such as multiple
        Actors editing one item or moving multiple files into a new folder, are
        controlled by the selection of a ConsolidationStrategy in the
        QueryDriveActivityRequest.
      type: object
      properties:
        primaryActionDetail:
          description: >-
            Key information about the primary action for this activity. This is
            either representative, or the most important, of all actions in the
            activity, according to the ConsolidationStrategy in the request.
          $ref: '#/components/schemas/ActionDetail'
        actors:
          description: All actor(s) responsible for the activity.
          type: array
          items:
            $ref: '#/components/schemas/Actor'
        actions:
          description: Details on all actions in this activity.
          type: array
          items:
            $ref: '#/components/schemas/Action'
        targets:
          description: >-
            All Google Drive objects this activity is about (e.g. file, folder,
            drive). This represents the state of the target immediately after
            the actions occurred.
          type: array
          items:
            $ref: '#/components/schemas/Target'
        timestamp:
          description: The activity occurred at this specific time.
          type: string
          format: google-datetime
        timeRange:
          description: The activity occurred over this time range.
          $ref: '#/components/schemas/TimeRange'
    ActionDetail:
      id: ActionDetail
      description: Data describing the type and additional information of an action.
      type: object
      properties:
        create:
          description: An object was created.
          $ref: '#/components/schemas/Create'
        edit:
          description: An object was edited.
          $ref: '#/components/schemas/Edit'
        move:
          description: An object was moved.
          $ref: '#/components/schemas/Move'
        rename:
          description: An object was renamed.
          $ref: '#/components/schemas/Rename'
        delete:
          description: An object was deleted.
          $ref: '#/components/schemas/Delete'
        restore:
          description: A deleted object was restored.
          $ref: '#/components/schemas/Restore'
        permissionChange:
          description: The permission on an object was changed.
          $ref: '#/components/schemas/PermissionChange'
        comment:
          description: A change about comments was made.
          $ref: '#/components/schemas/Comment'
        dlpChange:
          description: A change happened in data leak prevention status.
          $ref: '#/components/schemas/DataLeakPreventionChange'
        reference:
          description: An object was referenced in an application outside of Drive/Docs.
          $ref: '#/components/schemas/ApplicationReference'
        settingsChange:
          description: Settings were changed.
          $ref: '#/components/schemas/SettingsChange'
        appliedLabelChange:
          description: Label was changed.
          $ref: '#/components/schemas/AppliedLabelChange'
    Create:
      id: Create
      description: An object was created.
      type: object
      properties:
        new:
          description: >-
            If present, indicates the object was newly created (e.g. as a blank
            document), not derived from a Drive object or external object.
          $ref: '#/components/schemas/New'
        upload:
          description: >-
            If present, indicates the object originated externally and was
            uploaded to Drive.
          $ref: '#/components/schemas/Upload'
        copy:
          description: >-
            If present, indicates the object was created by copying an existing
            Drive object.
          $ref: '#/components/schemas/Copy'
    New:
      id: New
      description: An object was created from scratch.
      type: object
      properties: {}
    Upload:
      id: Upload
      description: An object was uploaded into Drive.
      type: object
      properties: {}
    Copy:
      id: Copy
      description: An object was created by copying an existing object.
      type: object
      properties:
        originalObject:
          description: The original object.
          $ref: '#/components/schemas/TargetReference'
    TargetReference:
      id: TargetReference
      description: A lightweight reference to the target of activity.
      type: object
      properties:
        driveItem:
          description: The target is a Drive item.
          $ref: '#/components/schemas/DriveItemReference'
        drive:
          description: The target is a shared drive.
          $ref: '#/components/schemas/DriveReference'
        teamDrive:
          description: This field is deprecated; please use the `drive` field instead.
          deprecated: true
          $ref: '#/components/schemas/TeamDriveReference'
    DriveItemReference:
      id: DriveItemReference
      description: A lightweight reference to a Drive item, such as a file or folder.
      type: object
      properties:
        name:
          description: The target Drive item. The format is `items/ITEM_ID`.
          type: string
        title:
          description: The title of the Drive item.
          type: string
        file:
          description: This field is deprecated; please use the `driveFile` field instead.
          deprecated: true
          $ref: '#/components/schemas/File'
        folder:
          description: >-
            This field is deprecated; please use the `driveFolder` field
            instead.
          deprecated: true
          $ref: '#/components/schemas/Folder'
        driveFile:
          description: The Drive item is a file.
          $ref: '#/components/schemas/DriveFile'
        driveFolder:
          description: >-
            The Drive item is a folder. Includes information about the type of
            folder.
          $ref: '#/components/schemas/DriveFolder'
    File:
      id: File
      deprecated: true
      description: This item is deprecated; please see `DriveFile` instead.
      type: object
      properties: {}
    Folder:
      id: Folder
      deprecated: true
      description: This item is deprecated; please see `DriveFolder` instead.
      type: object
      properties:
        type:
          description: This field is deprecated; please see `DriveFolder.type` instead.
          type: string
          enumDescriptions:
            - This item is deprecated; please see `DriveFolder.Type` instead.
            - This item is deprecated; please see `DriveFolder.Type` instead.
            - This item is deprecated; please see `DriveFolder.Type` instead.
            - This item is deprecated; please see `DriveFolder.Type` instead.
          enum:
            - TYPE_UNSPECIFIED
            - MY_DRIVE_ROOT
            - TEAM_DRIVE_ROOT
            - STANDARD_FOLDER
    DriveFile:
      id: DriveFile
      description: A Drive item which is a file.
      type: object
      properties: {}
    DriveFolder:
      id: DriveFolder
      description: A Drive item which is a folder.
      type: object
      properties:
        type:
          description: The type of Drive folder.
          type: string
          enumDescriptions:
            - The folder type is unknown.
            - The folder is the root of a user's MyDrive.
            - The folder is the root of a shared drive.
            - The folder is a standard, non-root, folder.
          enum:
            - TYPE_UNSPECIFIED
            - MY_DRIVE_ROOT
            - SHARED_DRIVE_ROOT
            - STANDARD_FOLDER
    DriveReference:
      id: DriveReference
      description: A lightweight reference to a shared drive.
      type: object
      properties:
        name:
          description: >-
            The resource name of the shared drive. The format is
            `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific
            collection ID for this resource name.
          type: string
        title:
          description: The title of the shared drive.
          type: string
    TeamDriveReference:
      id: TeamDriveReference
      deprecated: true
      description: This item is deprecated; please see `DriveReference` instead.
      type: object
      properties:
        name:
          description: This field is deprecated; please see `DriveReference.name` instead.
          type: string
        title:
          description: This field is deprecated; please see `DriveReference.title` instead.
          type: string
    Edit:
      id: Edit
      description: An empty message indicating an object was edited.
      type: object
      properties: {}
    Move:
      id: Move
      description: An object was moved.
      type: object
      properties:
        addedParents:
          description: The added parent object(s).
          type: array
          items:
            $ref: '#/components/schemas/TargetReference'
        removedParents:
          description: The removed parent object(s).
          type: array
          items:
            $ref: '#/components/schemas/TargetReference'
    Rename:
      id: Rename
      description: An object was renamed.
      type: object
      properties:
        oldTitle:
          description: The previous title of the drive object.
          type: string
        newTitle:
          description: The new title of the drive object.
          type: string
    Delete:
      id: Delete
      description: An object was deleted.
      type: object
      properties:
        type:
          description: The type of delete action taken.
          type: string
          enumDescriptions:
            - Deletion type is not available.
            - An object was put into the trash.
            - An object was deleted permanently.
          enum:
            - TYPE_UNSPECIFIED
            - TRASH
            - PERMANENT_DELETE
    Restore:
      id: Restore
      description: A deleted object was restored.
      type: object
      properties:
        type:
          description: The type of restore action taken.
          type: string
          enumDescriptions:
            - The type is not available.
            - An object was restored from the trash.
          enum:
            - TYPE_UNSPECIFIED
            - UNTRASH
    PermissionChange:
      id: PermissionChange
      description: A change of the permission setting on an item.
      type: object
      properties:
        addedPermissions:
          description: The set of permissions added by this change.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        removedPermissions:
          description: The set of permissions removed by this change.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    Permission:
      id: Permission
      description: The permission setting of an object.
      type: object
      properties:
        role:
          description: >-
            Indicates the [Google Drive permissions
            role](https://developers.google.com/drive/web/manage-sharing#roles).
            The role determines a user's ability to read, write, and comment on
            items.
          type: string
          enumDescriptions:
            - The role is not available.
            - A role granting full access.
            - A role granting the ability to manage people and settings.
            - A role granting the ability to contribute and manage content.
            - >-
              A role granting the ability to contribute content. This role is
              sometimes also known as "writer".
            - A role granting the ability to view and comment on content.
            - >-
              A role granting the ability to view content. This role is
              sometimes also known as "reader".
            - >-
              A role granting the ability to view content only after it has been
              published to the web. This role is sometimes also known as
              "published reader". See
              https://support.google.com/sites/answer/6372880 for more
              information.
          enum:
            - ROLE_UNSPECIFIED
            - OWNER
            - ORGANIZER
            - FILE_ORGANIZER
            - EDITOR
            - COMMENTER
            - VIEWER
            - PUBLISHED_VIEWER
        user:
          description: The user to whom this permission applies.
          $ref: '#/components/schemas/User'
        group:
          description: The group to whom this permission applies.
          $ref: '#/components/schemas/Group'
        domain:
          description: The domain to whom this permission applies.
          $ref: '#/components/schemas/Domain'
        anyone:
          description: If set, this permission applies to anyone, even logged out users.
          $ref: '#/components/schemas/Anyone'
        allowDiscovery:
          description: >-
            If true, the item can be discovered (e.g. in the user's "Shared with
            me" collection) without needing a link to the item.
          type: boolean
    User:
      id: User
      description: Information about an end user.
      type: object
      properties:
        knownUser:
          description: A known user.
          $ref: '#/components/schemas/KnownUser'
        deletedUser:
          description: A user whose account has since been deleted.
          $ref: '#/components/schemas/DeletedUser'
        unknownUser:
          description: A user about whom nothing is currently known.
          $ref: '#/components/schemas/UnknownUser'
    KnownUser:
      id: KnownUser
      description: A known user.
      type: object
      properties:
        personName:
          description: >-
            The identifier for this user that can be used with the People API to
            get more information. The format is `people/ACCOUNT_ID`. See
            https://developers.google.com/people/.
          type: string
        isCurrentUser:
          description: True if this is the user making the request.
          type: boolean
    DeletedUser:
      id: DeletedUser
      description: A user whose account has since been deleted.
      type: object
      properties: {}
    UnknownUser:
      id: UnknownUser
      description: A user about whom nothing is currently known.
      type: object
      properties: {}
    Group:
      id: Group
      description: Information about a group.
      type: object
      properties:
        email:
          description: The email address of the group.
          type: string
        title:
          description: The title of the group.
          type: string
    Domain:
      id: Domain
      description: Information about a domain.
      type: object
      properties:
        name:
          description: The name of the domain, e.g. `google.com`.
          type: string
        legacyId:
          description: An opaque string used to identify this domain.
          type: string
    Anyone:
      id: Anyone
      description: Represents any user (including a logged out user).
      type: object
      properties: {}
    Comment:
      id: Comment
      description: A change about comments on an object.
      type: object
      properties:
        post:
          description: A change on a regular posted comment.
          $ref: '#/components/schemas/Post'
        assignment:
          description: A change on an assignment.
          $ref: '#/components/schemas/Assignment'
        suggestion:
          description: A change on a suggestion.
          $ref: '#/components/schemas/Suggestion'
        mentionedUsers:
          description: Users who are mentioned in this comment.
          type: array
          items:
            $ref: '#/components/schemas/User'
    Post:
      id: Post
      description: A regular posted comment.
      type: object
      properties:
        subtype:
          description: The sub-type of this event.
          type: string
          enumDescriptions:
            - Subtype not available.
            - A post was added.
            - A post was deleted.
            - A reply was added.
            - A reply was deleted.
            - A posted comment was resolved.
            - A posted comment was reopened.
          enum:
            - SUBTYPE_UNSPECIFIED
            - ADDED
            - DELETED
            - REPLY_ADDED
            - REPLY_DELETED
            - RESOLVED
            - REOPENED
    Assignment:
      id: Assignment
      description: A comment with an assignment.
      type: object
      properties:
        subtype:
          description: The sub-type of this event.
          type: string
          enumDescriptions:
            - Subtype not available.
            - An assignment was added.
            - An assignment was deleted.
            - An assignment reply was added.
            - An assignment reply was deleted.
            - An assignment was resolved.
            - A resolved assignment was reopened.
            - An assignment was reassigned.
          enum:
            - SUBTYPE_UNSPECIFIED
            - ADDED
            - DELETED
            - REPLY_ADDED
            - REPLY_DELETED
            - RESOLVED
            - REOPENED
            - REASSIGNED
        assignedUser:
          description: The user to whom the comment was assigned.
          $ref: '#/components/schemas/User'
    Suggestion:
      id: Suggestion
      description: A suggestion.
      type: object
      properties:
        subtype:
          description: The sub-type of this event.
          type: string
          enumDescriptions:
            - Subtype not available.
            - A suggestion was added.
            - A suggestion was deleted.
            - A suggestion reply was added.
            - A suggestion reply was deleted.
            - A suggestion was accepted.
            - A suggestion was rejected.
            - An accepted suggestion was deleted.
            - A rejected suggestion was deleted.
          enum:
            - SUBTYPE_UNSPECIFIED
            - ADDED
            - DELETED
            - REPLY_ADDED
            - REPLY_DELETED
            - ACCEPTED
            - REJECTED
            - ACCEPT_DELETED
            - REJECT_DELETED
    DataLeakPreventionChange:
      id: DataLeakPreventionChange
      description: A change in the object's data leak prevention status.
      type: object
      properties:
        type:
          description: The type of Data Leak Prevention (DLP) change.
          type: string
          enumDescriptions:
            - An update to the DLP state that is neither FLAGGED or CLEARED.
            - Document has been flagged as containing sensitive content.
            - Document is no longer flagged as containing sensitive content.
          enum:
            - TYPE_UNSPECIFIED
            - FLAGGED
            - CLEARED
    ApplicationReference:
      id: ApplicationReference
      description: Activity in applications other than Drive.
      type: object
      properties:
        type:
          description: The reference type corresponding to this event.
          type: string
          enumDescriptions:
            - The type is not available.
            - The links of one or more Drive items were posted.
            - Comments were made regarding a Drive item.
          enum:
            - UNSPECIFIED_REFERENCE_TYPE
            - LINK
            - DISCUSS
    SettingsChange:
      id: SettingsChange
      description: Information about settings changes.
      type: object
      properties:
        restrictionChanges:
          description: The set of changes made to restrictions.
          type: array
          items:
            $ref: '#/components/schemas/RestrictionChange'
    RestrictionChange:
      id: RestrictionChange
      description: Information about restriction policy changes to a feature.
      type: object
      properties:
        feature:
          description: The feature which had a change in restriction policy.
          type: string
          enumDescriptions:
            - The feature which changed restriction settings was not available.
            - >-
              When restricted, this prevents items from being shared outside the
              domain.
            - When restricted, this prevents direct sharing of individual items.
            - >-
              When restricted, this prevents actions like copy, download, and
              print that might result in uncontrolled duplicates of items.
            - When restricted, this prevents use of Drive File Stream.
            - When restricted, this limits sharing of folders to managers only.
          enum:
            - FEATURE_UNSPECIFIED
            - SHARING_OUTSIDE_DOMAIN
            - DIRECT_SHARING
            - ITEM_DUPLICATION
            - DRIVE_FILE_STREAM
            - FILE_ORGANIZER_CAN_SHARE_FOLDERS
        newRestriction:
          description: The restriction in place after the change.
          type: string
          enumDescriptions:
            - The type of restriction is not available.
            - The feature is available without restriction.
            - The use of this feature is fully restricted.
          enum:
            - RESTRICTION_UNSPECIFIED
            - UNRESTRICTED
            - FULLY_RESTRICTED
    AppliedLabelChange:
      id: AppliedLabelChange
      description: Label changes that were made on the Target.
      type: object
      properties:
        changes:
          description: Changes that were made to the Label on the Target.
          type: array
          items:
            $ref: '#/components/schemas/AppliedLabelChangeDetail'
    AppliedLabelChangeDetail:
      id: AppliedLabelChangeDetail
      description: A change made to a Label on the Target.
      type: object
      properties:
        label:
          description: >-
            The Label name representing the Label that changed. This name always
            contains the revision of the Label that was used when this Action
            occurred. The format is `labels/id@revision`.
          type: string
        types:
          description: The types of changes made to the Label on the Target.
          type: array
          items:
            type: string
            enumDescriptions:
              - The type of change to this Label is not available.
              - The identified Label was added to the Target.
              - The identified Label was removed from the Target.
              - Field values were changed on the Target.
              - The Label was applied as a side-effect of Drive item creation.
            enum:
              - TYPE_UNSPECIFIED
              - LABEL_ADDED
              - LABEL_REMOVED
              - LABEL_FIELD_VALUE_CHANGED
              - LABEL_APPLIED_BY_ITEM_CREATE
        title:
          description: The human-readable title of the label that changed.
          type: string
        fieldChanges:
          description: >-
            Field Changes. Only present if `types` contains
            `LABEL_FIELD_VALUE_CHANGED`.
          type: array
          items:
            $ref: '#/components/schemas/FieldValueChange'
    FieldValueChange:
      id: FieldValueChange
      description: Change to a Field value.
      type: object
      properties:
        fieldId:
          description: The ID of this field. Field IDs are unique within a Label.
          type: string
        oldValue:
          description: >-
            The value that was previously set on the field. If not present, the
            field was newly set. At least one of {old_value|new_value} is always
            set.
          $ref: '#/components/schemas/FieldValue'
        newValue:
          description: >-
            The value that is now set on the field. If not present, the field
            was cleared. At least one of {old_value|new_value} is always set.
          $ref: '#/components/schemas/FieldValue'
        displayName:
          description: The human-readable display name for this field.
          type: string
    FieldValue:
      id: FieldValue
      description: Contains a value of a Field.
      type: object
      properties:
        text:
          description: Text Field value.
          $ref: '#/components/schemas/Text'
        textList:
          description: Text List Field value.
          $ref: '#/components/schemas/TextList'
        selection:
          description: Selection Field value.
          $ref: '#/components/schemas/Selection'
        selectionList:
          description: Selection List Field value.
          $ref: '#/components/schemas/SelectionList'
        integer:
          description: Integer Field value.
          $ref: '#/components/schemas/Integer'
        user:
          description: User Field value.
          $ref: '#/components/schemas/SingleUser'
        userList:
          description: User List Field value.
          $ref: '#/components/schemas/UserList'
        date:
          description: Date Field value.
          $ref: '#/components/schemas/Date'
    Text:
      id: Text
      description: Wrapper for Text Field value.
      type: object
      properties:
        value:
          description: Value of Text Field.
          type: string
    TextList:
      id: TextList
      description: Wrapper for Text List Field value.
      type: object
      properties:
        values:
          description: Text values.
          type: array
          items:
            $ref: '#/components/schemas/Text'
    Selection:
      id: Selection
      description: >-
        Wrapper for Selection Field value as combined value/display_name pair
        for selected choice.
      type: object
      properties:
        value:
          description: Selection value as Field Choice ID.
          type: string
        displayName:
          description: Selection value as human-readable display string.
          type: string
    SelectionList:
      id: SelectionList
      description: Wrapper for SelectionList Field value.
      type: object
      properties:
        values:
          description: Selection values.
          type: array
          items:
            $ref: '#/components/schemas/Selection'
    Integer:
      id: Integer
      description: Wrapper for Integer Field value.
      type: object
      properties:
        value:
          description: Integer value.
          type: string
          format: int64
    SingleUser:
      id: SingleUser
      description: Wrapper for User Field value.
      type: object
      properties:
        value:
          description: User value as email.
          type: string
    UserList:
      id: UserList
      description: Wrapper for UserList Field value.
      type: object
      properties:
        values:
          description: User values.
          type: array
          items:
            $ref: '#/components/schemas/SingleUser'
    Date:
      id: Date
      description: Wrapper for Date Field value.
      type: object
      properties:
        value:
          description: Date value.
          type: string
          format: google-datetime
    Actor:
      id: Actor
      description: The actor of a Drive activity.
      type: object
      properties:
        user:
          description: An end user.
          $ref: '#/components/schemas/User'
        anonymous:
          description: An anonymous user.
          $ref: '#/components/schemas/AnonymousUser'
        impersonation:
          description: An account acting on behalf of another.
          $ref: '#/components/schemas/Impersonation'
        system:
          description: A non-user actor (i.e. system triggered).
          $ref: '#/components/schemas/SystemEvent'
        administrator:
          description: An administrator.
          $ref: '#/components/schemas/Administrator'
    AnonymousUser:
      id: AnonymousUser
      description: >-
        Empty message representing an anonymous user or indicating the
        authenticated user should be anonymized.
      type: object
      properties: {}
    Impersonation:
      id: Impersonation
      description: >-
        Information about an impersonation, where an admin acts on behalf of an
        end user. Information about the acting admin is not currently available.
      type: object
      properties:
        impersonatedUser:
          description: The impersonated user.
          $ref: '#/components/schemas/User'
    SystemEvent:
      id: SystemEvent
      description: Event triggered by system operations instead of end users.
      type: object
      properties:
        type:
          description: The type of the system event that may triggered activity.
          type: string
          enumDescriptions:
            - The event type is unspecified.
            - The event is a consequence of a user account being deleted.
            - The event is due to the system automatically purging trash.
          enum:
            - TYPE_UNSPECIFIED
            - USER_DELETION
            - TRASH_AUTO_PURGE
    Administrator:
      id: Administrator
      description: Empty message representing an administrator.
      type: object
      properties: {}
    Action:
      id: Action
      description: Information about the action.
      type: object
      properties:
        detail:
          description: The type and detailed information about the action.
          $ref: '#/components/schemas/ActionDetail'
        actor:
          description: >-
            The actor responsible for this action (or empty if all actors are
            responsible).
          $ref: '#/components/schemas/Actor'
        target:
          description: >-
            The target this action affects (or empty if affecting all targets).
            This represents the state of the target immediately after this
            action occurred.
          $ref: '#/components/schemas/Target'
        timestamp:
          description: The action occurred at this specific time.
          type: string
          format: google-datetime
        timeRange:
          description: The action occurred over this time range.
          $ref: '#/components/schemas/TimeRange'
    Target:
      id: Target
      description: >-
        Information about the target of activity. For more information on how
        activity history is shared with users, see [Activity history
        visibility](https://developers.google.com/drive/activity/v2#activityhistory).
      type: object
      properties:
        driveItem:
          description: The target is a Drive item.
          $ref: '#/components/schemas/DriveItem'
        drive:
          description: The target is a shared drive.
          $ref: '#/components/schemas/Drive'
        fileComment:
          description: The target is a comment on a Drive file.
          $ref: '#/components/schemas/FileComment'
        teamDrive:
          description: This field is deprecated; please use the `drive` field instead.
          deprecated: true
          $ref: '#/components/schemas/TeamDrive'
    DriveItem:
      id: DriveItem
      description: A Drive item, such as a file or folder.
      type: object
      properties:
        name:
          description: The target Drive item. The format is `items/ITEM_ID`.
          type: string
        title:
          description: The title of the Drive item.
          type: string
        file:
          description: This field is deprecated; please use the `driveFile` field instead.
          deprecated: true
          $ref: '#/components/schemas/File'
        folder:
          description: >-
            This field is deprecated; please use the `driveFolder` field
            instead.
          deprecated: true
          $ref: '#/components/schemas/Folder'
        driveFile:
          description: The Drive item is a file.
          $ref: '#/components/schemas/DriveFile'
        driveFolder:
          description: >-
            The Drive item is a folder. Includes information about the type of
            folder.
          $ref: '#/components/schemas/DriveFolder'
        mimeType:
          description: >-
            The MIME type of the Drive item. See
            https://developers.google.com/drive/v3/web/mime-types.
          type: string
        owner:
          description: Information about the owner of this Drive item.
          $ref: '#/components/schemas/Owner'
    Owner:
      id: Owner
      description: Information about the owner of a Drive item.
      type: object
      properties:
        user:
          description: The user that owns the Drive item.
          $ref: '#/components/schemas/User'
        drive:
          description: The drive that owns the item.
          $ref: '#/components/schemas/DriveReference'
        teamDrive:
          description: This field is deprecated; please use the `drive` field instead.
          deprecated: true
          $ref: '#/components/schemas/TeamDriveReference'
        domain:
          description: The domain of the Drive item owner.
          $ref: '#/components/schemas/Domain'
    Drive:
      id: Drive
      description: Information about a shared drive.
      type: object
      properties:
        name:
          description: >-
            The resource name of the shared drive. The format is
            `COLLECTION_ID/DRIVE_ID`. Clients should not assume a specific
            collection ID for this resource name.
          type: string
        title:
          description: The title of the shared drive.
          type: string
        root:
          description: The root of this shared drive.
          $ref: '#/components/schemas/DriveItem'
    FileComment:
      id: FileComment
      description: A comment on a file.
      type: object
      properties:
        legacyCommentId:
          description: >-
            The comment in the discussion thread. This identifier is an opaque
            string compatible with the Drive API; see
            https://developers.google.com/drive/v3/reference/comments/get
          type: string
        legacyDiscussionId:
          description: >-
            The discussion thread to which the comment was added. This
            identifier is an opaque string compatible with the Drive API and
            references the first comment in a discussion; see
            https://developers.google.com/drive/v3/reference/comments/get
          type: string
        linkToDiscussion:
          description: >-
            The link to the discussion thread containing this comment, for
            example, `https://docs.google.com/DOCUMENT_ID/edit?disco=THREAD_ID`.
          type: string
        parent:
          description: The Drive item containing this comment.
          $ref: '#/components/schemas/DriveItem'
    TeamDrive:
      id: TeamDrive
      deprecated: true
      description: This item is deprecated; please see `Drive` instead.
      type: object
      properties:
        name:
          description: This field is deprecated; please see `Drive.name` instead.
          type: string
        title:
          description: This field is deprecated; please see `Drive.title` instead.
          type: string
        root:
          description: This field is deprecated; please see `Drive.root` instead.
          $ref: '#/components/schemas/DriveItem'
    TimeRange:
      id: TimeRange
      description: Information about time ranges.
      type: object
      properties:
        startTime:
          description: The start of the time range.
          type: string
          format: google-datetime
        endTime:
          description: The end of the time range.
          type: string
          format: google-datetime
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    activity:
      id: googleworkspace.driveactivityv2.activity
      name: activity
      title: Activity
      methods:
        query:
          operation:
            $ref: '#/paths/~1v2~1activity:query/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
paths:
  /v2/activity:query:
    parameters:
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    post:
      description: Query past activity in Google Drive.
      operationId: driveactivity.activity.query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDriveActivityRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.activity
          Oauth2c:
            - https://www.googleapis.com/auth/drive.activity
        - Oauth2:
            - https://www.googleapis.com/auth/drive.activity.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.activity.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDriveActivityResponse'
      parameters: []
