openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Drive API
  description: Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
  version: v3
  x-discovery-doc-revision: '20230101'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/drive/
servers:
  - url: https://www.googleapis.com/drive/v3
components:
  schemas:
    About:
      id: About
      type: object
      description: Information about the user, the user's Drive, and system capabilities.
      properties:
        appInstalled:
          type: boolean
          description: Whether the user has installed the requesting app.
        canCreateDrives:
          type: boolean
          description: Whether the user can create shared drives.
        canCreateTeamDrives:
          type: boolean
          description: Deprecated - use canCreateDrives instead.
        driveThemes:
          type: array
          description: A list of themes that are supported for shared drives.
          items:
            type: object
            properties:
              backgroundImageLink:
                type: string
                description: A link to this theme's background image.
              colorRgb:
                type: string
                description: The color of this theme as an RGB hex string.
              id:
                type: string
                description: The ID of the theme.
        exportFormats:
          type: object
          description: A map of source MIME type to possible targets for all supported exports.
          additionalProperties:
            type: array
            items:
              type: string
        folderColorPalette:
          type: array
          description: The currently supported folder colors as RGB hex strings.
          items:
            type: string
        importFormats:
          type: object
          description: A map of source MIME type to possible targets for all supported imports.
          additionalProperties:
            type: array
            items:
              type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#about".'
          default: drive#about
        maxImportSizes:
          type: object
          description: A map of maximum import sizes by MIME type, in bytes.
          additionalProperties:
            type: string
            format: int64
        maxUploadSize:
          type: string
          description: The maximum upload size in bytes.
          format: int64
        storageQuota:
          type: object
          description: The user's storage quota limits and usage. All fields are measured in bytes.
          properties:
            limit:
              type: string
              description: The usage limit, if applicable. This will not be present if the user has unlimited storage.
              format: int64
            usage:
              type: string
              description: The total usage across all services.
              format: int64
            usageInDrive:
              type: string
              description: The usage by all files in Google Drive.
              format: int64
            usageInDriveTrash:
              type: string
              description: The usage by trashed files in Google Drive.
              format: int64
        teamDriveThemes:
          type: array
          description: Deprecated - use driveThemes instead.
          items:
            type: object
            properties:
              backgroundImageLink:
                type: string
                description: Deprecated - use driveThemes/backgroundImageLink instead.
              colorRgb:
                type: string
                description: Deprecated - use driveThemes/colorRgb instead.
              id:
                type: string
                description: Deprecated - use driveThemes/id instead.
        user:
          $ref: '#/components/schemas/User'
          description: The authenticated user.
    Change:
      id: Change
      type: object
      description: A change to a file or shared drive.
      properties:
        changeType:
          type: string
          description: The type of the change. Possible values are file and drive.
        drive:
          $ref: '#/components/schemas/Drive'
          description: The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted.
        driveId:
          type: string
          description: The ID of the shared drive associated with this change.
        file:
          $ref: '#/components/schemas/File'
          description: The updated state of the file. Present if the type is file and the file has not been removed from this list of changes.
        fileId:
          type: string
          description: The ID of the file which has changed.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#change".'
          default: drive#change
        removed:
          type: boolean
          description: Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access.
        teamDrive:
          $ref: '#/components/schemas/TeamDrive'
          description: Deprecated - use drive instead.
        teamDriveId:
          type: string
          description: Deprecated - use driveId instead.
        time:
          type: string
          description: The time of this change (RFC 3339 date-time).
          format: date-time
        type:
          type: string
          description: Deprecated - use changeType instead.
    ChangeList:
      id: ChangeList
      type: object
      description: A list of changes for a user.
      properties:
        changes:
          type: array
          description: The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/Change'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#changeList".'
          default: drive#changeList
        newStartPageToken:
          type: string
          description: The starting page token for future changes. This will be present only if the end of the current changes list has been reached.
        nextPageToken:
          type: string
          description: The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
    Channel:
      id: Channel
      type: object
      description: An notification channel used to watch for resource changes.
      properties:
        address:
          type: string
          description: The address where notifications are delivered for this channel.
        expiration:
          type: string
          description: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
          format: int64
        id:
          type: string
          description: A UUID or similar unique string that identifies this channel.
        kind:
          type: string
          description: Identifies this as a notification channel used to watch for changes to a resource, which is "api#channel".
          default: api#channel
        params:
          type: object
          description: Additional parameters controlling delivery channel behavior. Optional.
          additionalProperties:
            type: string
            description: Declares a new parameter by name.
        payload:
          type: boolean
          description: A Boolean value to indicate whether payload is wanted. Optional.
        resourceId:
          type: string
          description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
        resourceUri:
          type: string
          description: A version-specific identifier for the watched resource.
        token:
          type: string
          description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
        type:
          type: string
          description: The type of delivery mechanism used for this channel. Valid values are "web_hook" (or "webhook"). Both values refer to a channel where Http requests are used to deliver messages.
    Comment:
      id: Comment
      type: object
      description: A comment on a file.
      properties:
        anchor:
          type: string
          description: A region of the document represented as a JSON string. For details on defining anchor properties, refer to  Add comments and replies.
        author:
          $ref: '#/components/schemas/User'
          description: The author of the comment. The author's email address and permission ID will not be populated.
        content:
          type: string
          description: The plain text content of the comment. This field is used for setting the content, while htmlContent should be displayed.
          annotations:
            required:
              - drive.comments.create
              - drive.comments.update
        createdTime:
          type: string
          description: The time at which the comment was created (RFC 3339 date-time).
          format: date-time
        deleted:
          type: boolean
          description: Whether the comment has been deleted. A deleted comment has no content.
        htmlContent:
          type: string
          description: The content of the comment with HTML formatting.
        id:
          type: string
          description: The ID of the comment.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#comment".'
          default: drive#comment
        modifiedTime:
          type: string
          description: The last time the comment or any of its replies was modified (RFC 3339 date-time).
          format: date-time
        quotedFileContent:
          type: object
          description: The file content to which the comment refers, typically within the anchor region. For a text file, for example, this would be the text at the location of the comment.
          properties:
            mimeType:
              type: string
              description: The MIME type of the quoted content.
            value:
              type: string
              description: The quoted content itself. This is interpreted as plain text if set through the API.
        replies:
          type: array
          description: The full list of replies to the comment in chronological order.
          items:
            $ref: '#/components/schemas/Reply'
        resolved:
          type: boolean
          description: Whether the comment has been resolved by one of its replies.
    CommentList:
      id: CommentList
      type: object
      description: A list of comments on a file.
      properties:
        comments:
          type: array
          description: The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/Comment'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#commentList".'
          default: drive#commentList
        nextPageToken:
          type: string
          description: The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
    ContentRestriction:
      id: ContentRestriction
      type: object
      description: A restriction for accessing the content of the file.
      properties:
        readOnly:
          type: boolean
          description: Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.
        reason:
          type: string
          description: Reason for why the content of the file is restricted. This is only mutable on requests that also set readOnly=true.
        restrictingUser:
          $ref: '#/components/schemas/User'
          description: The user who set the content restriction. Only populated if readOnly is true.
        restrictionTime:
          type: string
          description: The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.
          format: date-time
        type:
          type: string
          description: The type of the content restriction. Currently the only possible value is globalContentRestriction.
    Drive:
      id: Drive
      type: object
      description: Representation of a shared drive.
      properties:
        backgroundImageFile:
          type: object
          description: An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on drive.drives.update requests that don't set themeId. When specified, all fields of the backgroundImageFile must be set.
          properties:
            id:
              type: string
              description: The ID of an image file in Google Drive to use for the background image.
            width:
              type: number
              description: The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.
              format: float
            xCoordinate:
              type: number
              description: The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.
              format: float
            yCoordinate:
              type: number
              description: The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.
              format: float
        backgroundImageLink:
          type: string
          description: A short-lived link to this shared drive's background image.
        capabilities:
          type: object
          description: Capabilities the current user has on this shared drive.
          properties:
            canAddChildren:
              type: boolean
              description: Whether the current user can add children to folders in this shared drive.
            canChangeCopyRequiresWriterPermissionRestriction:
              type: boolean
              description: Whether the current user can change the copyRequiresWriterPermission restriction of this shared drive.
            canChangeDomainUsersOnlyRestriction:
              type: boolean
              description: Whether the current user can change the domainUsersOnly restriction of this shared drive.
            canChangeDriveBackground:
              type: boolean
              description: Whether the current user can change the background of this shared drive.
            canChangeDriveMembersOnlyRestriction:
              type: boolean
              description: Whether the current user can change the driveMembersOnly restriction of this shared drive.
            canComment:
              type: boolean
              description: Whether the current user can comment on files in this shared drive.
            canCopy:
              type: boolean
              description: Whether the current user can copy files in this shared drive.
            canDeleteChildren:
              type: boolean
              description: Whether the current user can delete children from folders in this shared drive.
            canDeleteDrive:
              type: boolean
              description: Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.
            canDownload:
              type: boolean
              description: Whether the current user can download files in this shared drive.
            canEdit:
              type: boolean
              description: Whether the current user can edit files in this shared drive
            canListChildren:
              type: boolean
              description: Whether the current user can list the children of folders in this shared drive.
            canManageMembers:
              type: boolean
              description: Whether the current user can add members to this shared drive or remove them or change their role.
            canReadRevisions:
              type: boolean
              description: Whether the current user can read the revisions resource of files in this shared drive.
            canRename:
              type: boolean
              description: Whether the current user can rename files or folders in this shared drive.
            canRenameDrive:
              type: boolean
              description: Whether the current user can rename this shared drive.
            canResetDriveRestrictions:
              type: boolean
              description: Whether the current user can reset the shared drive restrictions to defaults.
            canShare:
              type: boolean
              description: Whether the current user can share files or folders in this shared drive.
            canTrashChildren:
              type: boolean
              description: Whether the current user can trash children from folders in this shared drive.
        colorRgb:
          type: string
          description: The color of this shared drive as an RGB hex string. It can only be set on a drive.drives.update request that does not set themeId.
        createdTime:
          type: string
          description: The time at which the shared drive was created (RFC 3339 date-time).
          format: date-time
        hidden:
          type: boolean
          description: Whether the shared drive is hidden from default view.
        id:
          type: string
          description: The ID of this shared drive which is also the ID of the top level folder of this shared drive.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#drive".'
          default: drive#drive
        name:
          type: string
          description: The name of this shared drive.
          annotations:
            required:
              - drive.drives.create
        orgUnitId:
          type: string
          description: The organizational unit of this shared drive. This field is only populated on drives.list responses when the useDomainAdminAccess parameter is set to true.
        restrictions:
          type: object
          description: A set of restrictions that apply to this shared drive or items inside this shared drive.
          properties:
            adminManagedRestrictions:
              type: boolean
              description: Whether administrative privileges on this shared drive are required to modify restrictions.
            copyRequiresWriterPermission:
              type: boolean
              description: Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to true, it will override the similarly named field to true for any file inside this shared drive.
            domainUsersOnly:
              type: boolean
              description: Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive.
            driveMembersOnly:
              type: boolean
              description: Whether access to items inside this shared drive is restricted to its members.
        themeId:
          type: string
          description: The ID of the theme from which the background image and color will be set. The set of possible driveThemes can be retrieved from a drive.about.get response. When not specified on a drive.drives.create request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile.
    DriveList:
      id: DriveList
      type: object
      description: A list of shared drives.
      properties:
        drives:
          type: array
          description: The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/Drive'
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#driveList".'
          default: drive#driveList
        nextPageToken:
          type: string
          description: The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
    File:
      id: File
      type: object
      description: The metadata for a file.
      properties:
        appProperties:
          type: object
          description: |-
            A collection of arbitrary key-value pairs which are private to the requesting app.
            Entries with null values are cleared in update and copy requests. These properties can only be retrieved using an authenticated request. An authenticated request uses an access token obtained with a OAuth 2 client ID. You cannot use an API key to retrieve private properties.
          additionalProperties:
            type: string
        capabilities:
          type: object
          description: Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.
          properties:
            canAcceptOwnership:
              type: boolean
              description: Whether the current user is the pending owner of the file. Not populated for shared drive files.
            canAddChildren:
              type: boolean
              description: Whether the current user can add children to this folder. This is always false when the item is not a folder.
            canAddFolderFromAnotherDrive:
              type: boolean
              description: Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.
            canAddMyDriveParent:
              type: boolean
              description: Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.
            canChangeCopyRequiresWriterPermission:
              type: boolean
              description: Whether the current user can change the copyRequiresWriterPermission restriction of this file.
            canChangeSecurityUpdateEnabled:
              type: boolean
              description: Whether the current user can change the securityUpdateEnabled field on link share metadata.
            canChangeViewersCanCopyContent:
              type: boolean
              description: Deprecated
            canComment:
              type: boolean
              description: Whether the current user can comment on this file.
            canCopy:
              type: boolean
              description: Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.
            canDelete:
              type: boolean
              description: Whether the current user can delete this file.
            canDeleteChildren:
              type: boolean
              description: Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.
            canDownload:
              type: boolean
              description: Whether the current user can download this file.
            canEdit:
              type: boolean
              description: Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see canChangeCopyRequiresWriterPermission or canModifyContent.
            canListChildren:
              type: boolean
              description: Whether the current user can list the children of this folder. This is always false when the item is not a folder.
            canModifyContent:
              type: boolean
              description: Whether the current user can modify the content of this file.
            canModifyContentRestriction:
              type: boolean
              description: Whether the current user can modify restrictions on content of this file.
            canModifyLabels:
              type: boolean
              description: Whether the current user can modify the labels on this file.
            canMoveChildrenOutOfDrive:
              type: boolean
              description: Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.
            canMoveChildrenOutOfTeamDrive:
              type: boolean
              description: Deprecated - use canMoveChildrenOutOfDrive instead.
            canMoveChildrenWithinDrive:
              type: boolean
              description: Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.
            canMoveChildrenWithinTeamDrive:
              type: boolean
              description: Deprecated - use canMoveChildrenWithinDrive instead.
            canMoveItemIntoTeamDrive:
              type: boolean
              description: Deprecated - use canMoveItemOutOfDrive instead.
            canMoveItemOutOfDrive:
              type: boolean
              description: Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.
            canMoveItemOutOfTeamDrive:
              type: boolean
              description: Deprecated - use canMoveItemOutOfDrive instead.
            canMoveItemWithinDrive:
              type: boolean
              description: Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.
            canMoveItemWithinTeamDrive:
              type: boolean
              description: Deprecated - use canMoveItemWithinDrive instead.
            canMoveTeamDriveItem:
              type: boolean
              description: Deprecated - use canMoveItemWithinDrive or canMoveItemOutOfDrive instead.
            canReadDrive:
              type: boolean
              description: Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.
            canReadLabels:
              type: boolean
              description: Whether the current user can read the labels on this file.
            canReadRevisions:
              type: boolean
              description: Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it isn't a folder, can be read.
            canReadTeamDrive:
              type: boolean
              description: Deprecated - use canReadDrive instead.
            canRemoveChildren:
              type: boolean
              description: Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use canDeleteChildren or canTrashChildren instead.
            canRemoveMyDriveParent:
              type: boolean
              description: Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.
            canRename:
              type: boolean
              description: Whether the current user can rename this file.
            canShare:
              type: boolean
              description: Whether the current user can modify the sharing settings for this file.
            canTrash:
              type: boolean
              description: Whether the current user can move this file to trash.
            canTrashChildren:
              type: boolean
              description: Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.
            canUntrash:
              type: boolean
              description: Whether the current user can restore this file from trash.
        contentHints:
          type: object
          description: Additional information about the content of the file. These fields are never populated in responses.
          properties:
            indexableText:
              type: string
              description: Text to be indexed for the file to improve fullText queries. This is limited to 128 KB in length and may contain HTML elements. For more information, see Manage file metadata.
            thumbnail:
              type: object
              description: A thumbnail for the file. This will only be used if Google Drive cannot generate a standard thumbnail.
              properties:
                image:
                  type: string
                  description: The thumbnail data encoded with URL-safe Base64 (RFC 4648 section 5).
                  format: byte
                mimeType:
                  type: string
                  description: The MIME type of the thumbnail.
        contentRestrictions:
          type: array
          description: Restrictions for accessing the content of the file. Only populated if such a restriction exists.
          items:
            $ref: '#/components/schemas/ContentRestriction'
        copyRequiresWriterPermission:
          type: boolean
          description: Whether the options to copy, print, or download this file, should be disabled for readers and commenters.
        createdTime:
          type: string
          description: The time at which the file was created (RFC 3339 date-time).
          format: date-time
        description:
          type: string
          description: A short description of the file.
        driveId:
          type: string
          description: ID of the shared drive the file resides in. Only populated for items in shared drives.
        explicitlyTrashed:
          type: boolean
          description: Whether the file has been explicitly trashed, as opposed to recursively trashed from a parent folder.
        exportLinks:
          type: object
          description: Links for exporting Docs Editors files to specific formats.
          readOnly: true
          additionalProperties:
            type: string
            description: A mapping from export format to URL
        fileExtension:
          type: string
          description: The final component of fullFileExtension. This is only available for files with binary content in Google Drive.
        folderColorRgb:
          type: string
          description: |-
            The color for a folder or shortcut to a folder as an RGB hex string. The supported colors are published in the folderColorPalette field of the About resource.
            If an unsupported color is specified, the closest color in the palette will be used instead.
        fullFileExtension:
          type: string
          description: |-
            The full file extension extracted from the name field. May contain multiple concatenated extensions, such as "tar.gz". This is only available for files with binary content in Google Drive.
            This is automatically updated when the name field changes, however it isn't cleared if the new name does not contain a valid extension.
        hasAugmentedPermissions:
          type: boolean
          description: Whether there are permissions directly on this file. This field is only populated for items in shared drives.
        hasThumbnail:
          type: boolean
          description: Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.
        headRevisionId:
          type: string
          description: The ID of the file's head revision. This is currently only available for files with binary content in Google Drive.
        iconLink:
          type: string
          description: A static, unauthenticated link to the file's icon.
        id:
          type: string
          description: The ID of the file.
        imageMediaMetadata:
          type: object
          description: Additional metadata about image media, if available.
          properties:
            aperture:
              type: number
              description: The aperture used to create the photo (f-number).
              format: float
            cameraMake:
              type: string
              description: The make of the camera used to create the photo.
            cameraModel:
              type: string
              description: The model of the camera used to create the photo.
            colorSpace:
              type: string
              description: The color space of the photo.
            exposureBias:
              type: number
              description: The exposure bias of the photo (APEX value).
              format: float
            exposureMode:
              type: string
              description: The exposure mode used to create the photo.
            exposureTime:
              type: number
              description: The length of the exposure, in seconds.
              format: float
            flashUsed:
              type: boolean
              description: Whether a flash was used to create the photo.
            focalLength:
              type: number
              description: The focal length used to create the photo, in millimeters.
              format: float
            height:
              type: integer
              description: The height of the image in pixels.
              format: int32
            isoSpeed:
              type: integer
              description: The ISO speed used to create the photo.
              format: int32
            lens:
              type: string
              description: The lens used to create the photo.
            location:
              type: object
              description: Geographic location information stored in the image.
              properties:
                altitude:
                  type: number
                  description: The altitude stored in the image.
                  format: double
                latitude:
                  type: number
                  description: The latitude stored in the image.
                  format: double
                longitude:
                  type: number
                  description: The longitude stored in the image.
                  format: double
            maxApertureValue:
              type: number
              description: The smallest f-number of the lens at the focal length used to create the photo (APEX value).
              format: float
            meteringMode:
              type: string
              description: The metering mode used to create the photo.
            rotation:
              type: integer
              description: The number of clockwise 90 degree rotations applied from the image's original orientation.
              format: int32
            sensor:
              type: string
              description: The type of sensor used to create the photo.
            subjectDistance:
              type: integer
              description: The distance to the subject of the photo, in meters.
              format: int32
            time:
              type: string
              description: The date and time the photo was taken (EXIF DateTime).
            whiteBalance:
              type: string
              description: The white balance mode used to create the photo.
            width:
              type: integer
              description: The width of the image in pixels.
              format: int32
        isAppAuthorized:
          type: boolean
          description: Whether the file was created or opened by the requesting app.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#file".'
          default: drive#file
        labelInfo:
          type: object
          description: An overview of the labels on the file.
          properties:
            labels:
              type: array
              description: The set of labels on the file as requested by the label IDs in the includeLabels parameter. By default, no labels are returned.
              items:
                $ref: '#/components/schemas/Label'
        lastModifyingUser:
          $ref: '#/components/schemas/User'
          description: The last user to modify the file.
        linkShareMetadata:
          type: object
          description: Contains details about the link URLs that clients are using to refer to this item.
          properties:
            securityUpdateEligible:
              type: boolean
              description: Whether the file is eligible for security update.
            securityUpdateEnabled:
              type: boolean
              description: Whether the security update is enabled for this file.
        md5Checksum:
          type: string
          description: The MD5 checksum for the content of the file. This is only applicable to files with binary content in Google Drive.
        mimeType:
          type: string
          description: |-
            The MIME type of the file.
            Google Drive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed unless a new revision is uploaded.
            If a file is created with a Google Doc MIME type, the uploaded content will be imported if possible. The supported import formats are published in the About resource.
        modifiedByMe:
          type: boolean
          description: Whether the file has been modified by this user.
        modifiedByMeTime:
          type: string
          description: The last time the file was modified by the user (RFC 3339 date-time).
          format: date-time
        modifiedTime:
          type: string
          description: |-
            The last time the file was modified by anyone (RFC 3339 date-time).
            Note that setting modifiedTime will also update modifiedByMeTime for the user.
          format: date-time
        name:
          type: string
          description: The name of the file. This is not necessarily unique within a folder. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the name is constant.
        originalFilename:
          type: string
          description: The original filename of the uploaded content if available, or else the original value of the name field. This is only available for files with binary content in Google Drive.
        ownedByMe:
          type: boolean
          description: Whether the user owns the file. Not populated for items in shared drives.
        owners:
          type: array
          description: The owner of this file. Only certain legacy files may have more than one owner. This field isn't populated for items in shared drives.
          items:
            $ref: '#/components/schemas/User'
        parents:
          type: array
          description: |-
            The IDs of the parent folders which contain the file.
            If not specified as part of a create request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests must use the addParents and removeParents parameters to modify the parents list.
          items:
            type: string
        permissionIds:
          type: array
          description: List of permission IDs for users with access to this file.
          items:
            type: string
        permissions:
          type: array
          description: The full list of permissions for the file. This is only available if the requesting user can share the file. Not populated for items in shared drives.
          items:
            $ref: '#/components/schemas/Permission'
        properties:
          type: object
          description: |-
            A collection of arbitrary key-value pairs which are visible to all apps.
            Entries with null values are cleared in update and copy requests.
          additionalProperties:
            type: string
        quotaBytesUsed:
          type: string
          description: The number of storage quota bytes used by the file. This includes the head revision as well as previous revisions with keepForever enabled.
          format: int64
        resourceKey:
          type: string
          description: A key needed to access the item via a shared link.
        sha1Checksum:
          type: string
          description: The SHA1 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it isn't populated for Docs Editors or shortcut files.
        sha256Checksum:
          type: string
          description: The SHA256 checksum associated with this file, if available. This field is only populated for files with content stored in Google Drive; it isn't populated for Docs Editors or shortcut files.
        shared:
          type: boolean
          description: Whether the file has been shared. Not populated for items in shared drives.
        sharedWithMeTime:
          type: string
          description: The time at which the file was shared with the user, if applicable (RFC 3339 date-time).
          format: date-time
        sharingUser:
          $ref: '#/components/schemas/User'
          description: The user who shared the file with the requesting user, if applicable.
        shortcutDetails:
          type: object
          description: Shortcut file details. Only populated for shortcut files, which have the mimeType field set to application/vnd.google-apps.shortcut.
          properties:
            targetId:
              type: string
              description: The ID of the file that this shortcut points to.
            targetMimeType:
              type: string
              description: The MIME type of the file that this shortcut points to. The value of this field is a snapshot of the target's MIME type, captured when the shortcut is created.
            targetResourceKey:
              type: string
              description: The ResourceKey for the target file.
        size:
          type: string
          description: The size of the file's content in bytes. This is applicable to binary files in Google Drive and Google Docs files.
          format: int64
        spaces:
          type: array
          description: The list of spaces which contain the file. The currently supported values are 'drive', 'appDataFolder' and 'photos'.
          items:
            type: string
        starred:
          type: boolean
          description: Whether the user has starred the file.
        teamDriveId:
          type: string
          description: Deprecated - use driveId instead.
        thumbnailLink:
          type: string
          description: A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content. If the file isn't shared publicly, the URL returned in Files.thumbnailLink must be fetched using a credentialed request.
        thumbnailVersion:
          type: string
          description: The thumbnail version for use in thumbnail cache invalidation.
          format: int64
        trashed:
          type: boolean
          description: Whether the file has been trashed, either explicitly or from a trashed parent folder. Only the owner may trash a file. The trashed item is excluded from all files.list responses returned for any user who does not own the file. However, all users with access to the file can see the trashed item metadata in an API response. All users with access can copy, download, export, and share the file.
        trashedTime:
          type: string
          description: The time that the item was trashed (RFC 3339 date-time). Only populated for items in shared drives.
          format: date-time
        trashingUser:
          $ref: '#/components/schemas/User'
          description: If the file has been explicitly trashed, the user who trashed it. Only populated for items in shared drives.
        version:
          type: string
          description: A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the user.
          format: int64
        videoMediaMetadata:
          type: object
          description: Additional metadata about video media. This may not be available immediately upon upload.
          properties:
            durationMillis:
              type: string
              description: The duration of the video in milliseconds.
              format: int64
            height:
              type: integer
              description: The height of the video in pixels.
              format: int32
            width:
              type: integer
              description: The width of the video in pixels.
              format: int32
        viewedByMe:
          type: boolean
          description: Whether the file has been viewed by this user.
        viewedByMeTime:
          type: string
          description: The last time the file was viewed by the user (RFC 3339 date-time).
          format: date-time
        viewersCanCopyContent:
          type: boolean
          description: Deprecated - use copyRequiresWriterPermission instead.
        webContentLink:
          type: string
          description: A link for downloading the content of the file in a browser. This is only available for files with binary content in Google Drive.
        webViewLink:
          type: string
          description: A link for opening the file in a relevant Google editor or viewer in a browser.
        writersCanShare:
          type: boolean
          description: Whether users with only writer permission can modify the file's permissions. Not populated for items in shared drives.
    FileList:
      id: FileList
      type: object
      description: A list of files.
      properties:
        files:
          type: array
          description: The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/File'
        incompleteSearch:
          type: boolean
          description: Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple drives with the "allDrives" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as "user" or "drive".
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#fileList".'
          default: drive#fileList
        nextPageToken:
          type: string
          description: The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
    GeneratedIds:
      id: GeneratedIds
      type: object
      description: A list of generated file IDs which can be provided in create requests.
      properties:
        ids:
          type: array
          description: The IDs generated for the requesting user in the specified space.
          items:
            type: string
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#generatedIds".'
          default: drive#generatedIds
        space:
          type: string
          description: The type of file that can be created with these IDs.
    Label:
      id: Label
      type: object
      description: Representation of a label and its fields.
      properties:
        fields:
          type: object
          description: A map of the label's fields keyed by the field ID.
          additionalProperties:
            $ref: '#/components/schemas/LabelField'
        id:
          type: string
          description: The ID of the label.
        kind:
          type: string
          description: This is always drive#label
          default: drive#label
        revisionId:
          type: string
          description: The revision ID of the label.
    LabelField:
      id: LabelField
      type: object
      description: Representation of a label field.
      properties:
        dateString:
          type: array
          description: 'Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD.'
          items:
            type: string
            format: date
        id:
          type: string
          description: The identifier of this field.
        integer:
          type: array
          description: Only present if valueType is integer.
          items:
            type: string
            format: int64
        kind:
          type: string
          description: This is always drive#labelField.
          default: drive#labelField
        selection:
          type: array
          description: Only present if valueType is selection.
          items:
            type: string
        text:
          type: array
          description: Only present if valueType is text.
          items:
            type: string
        user:
          type: array
          description: Only present if valueType is user.
          items:
            $ref: '#/components/schemas/User'
        valueType:
          type: string
          description: |-
            The field type. While new values may be supported in the future, the following are currently allowed:  
            - dateString 
            - integer 
            - selection 
            - text 
            - user
    LabelFieldModification:
      id: LabelFieldModification
      type: object
      description: A modification to a label's field.
      properties:
        fieldId:
          type: string
          description: The ID of the Field to be modified.
        kind:
          type: string
          description: This is always drive#labelFieldModification.
          default: drive#labelFieldModification
        setDateValues:
          type: array
          description: 'Replaces a dateString field with these new values. The values must be strings in the RFC 3339 full-date format: YYYY-MM-DD.'
          items:
            type: string
            format: date
        setIntegerValues:
          type: array
          description: Replaces an integer field with these new values.
          items:
            type: string
            format: int64
        setSelectionValues:
          type: array
          description: Replaces a selection field with these new values.
          items:
            type: string
        setTextValues:
          type: array
          description: Replaces a text field with these new values.
          items:
            type: string
        setUserValues:
          type: array
          description: Replaces a user field with these new values. The values must be valid email addresses.
          items:
            type: string
        unsetValues:
          type: boolean
          description: Unsets the values for this field.
    LabelList:
      id: LabelList
      type: object
      description: A list of labels.
      properties:
        kind:
          type: string
          description: This is always drive#labelList
          default: drive#labelList
        labels:
          type: array
          description: The list of labels.
          items:
            $ref: '#/components/schemas/Label'
        nextPageToken:
          type: string
          description: The page token for the next page of labels. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
    LabelModification:
      id: LabelModification
      type: object
      description: A modification to a label on a file. A LabelModification can be used to apply a label to a file, update an existing label on a file, or remove a label from a file.
      properties:
        fieldModifications:
          type: array
          description: The list of modifications to this label's fields.
          items:
            $ref: '#/components/schemas/LabelFieldModification'
        kind:
          type: string
          description: This is always drive#labelModification.
          default: drive#labelModification
        labelId:
          type: string
          description: The ID of the label to modify.
          annotations:
            required:
              - drive.files.modifyLabels
        removeLabel:
          type: boolean
          description: If true, the label will be removed from the file.
    ModifyLabelsRequest:
      id: ModifyLabelsRequest
      type: object
      description: A request to modify the set of labels on a file. This request may contain many modifications that will either all succeed or all fail transactionally.
      properties:
        kind:
          type: string
          description: This is always drive#modifyLabelsRequest
          default: drive#modifyLabelsRequest
        labelModifications:
          type: array
          description: The list of modifications to apply to the labels on the file.
          items:
            $ref: '#/components/schemas/LabelModification'
    ModifyLabelsResponse:
      id: ModifyLabelsResponse
      type: object
      description: Response to a ModifyLabels request. This contains only those labels which were added or updated by the request.
      properties:
        kind:
          type: string
          description: This is always drive#modifyLabelsResponse
          default: drive#modifyLabelsResponse
        modifiedLabels:
          type: array
          description: The list of labels which were added or updated by the request.
          items:
            $ref: '#/components/schemas/Label'
    Permission:
      id: Permission
      type: object
      description: A permission for a file. A permission grants a user, group, domain or the world access to a file or a folder hierarchy.
      properties:
        allowFileDiscovery:
          type: boolean
          description: Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type domain or anyone.
        deleted:
          type: boolean
          description: Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
        displayName:
          type: string
          description: |-
            The "pretty" name of the value of the permission. The following is a list of examples for each type of permission:  
            - user - User's full name, as defined for their Google account, such as "Joe Smith." 
            - group - Name of the Google Group, such as "The Company Administrators." 
            - domain - String domain name, such as "thecompany.com." 
            - anyone - No displayName is present.
        domain:
          type: string
          description: The domain to which this permission refers.
        emailAddress:
          type: string
          description: The email address of the user or group to which this permission refers.
        expirationTime:
          type: string
          description: |-
            The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions:  
            - They cannot be set on shared drive items 
            - They can only be set on user and group permissions 
            - The time must be in the future 
            - The time cannot be more than a year in the future
          format: date-time
        id:
          type: string
          description: The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as permissionId. IDs should be treated as opaque values.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#permission".'
          default: drive#permission
        pendingOwner:
          type: boolean
          description: Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that are not in a shared drive.
        permissionDetails:
          type: array
          description: Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.
          readOnly: true
          items:
            type: object
            properties:
              inherited:
                type: boolean
                description: Whether this permission is inherited. This field is always populated. This is an output-only field.
              inheritedFrom:
                type: string
                description: The ID of the item from which this permission is inherited. This is an output-only field.
              permissionType:
                type: string
                description: |-
                  The permission type for this user. While new values may be added in future, the following are currently possible:  
                  - file 
                  - member
              role:
                type: string
                description: |-
                  The primary role for this user. While new values may be added in the future, the following are currently possible:  
                  - organizer 
                  - fileOrganizer 
                  - writer 
                  - commenter 
                  - reader
        photoLink:
          type: string
          description: A link to the user's profile photo, if available.
        role:
          type: string
          description: |-
            The role granted by this permission. While new values may be supported in the future, the following are currently allowed:  
            - owner 
            - organizer 
            - fileOrganizer 
            - writer 
            - commenter 
            - reader
          annotations:
            required:
              - drive.permissions.create
        teamDrivePermissionDetails:
          type: array
          description: Deprecated - use permissionDetails instead.
          readOnly: true
          items:
            type: object
            properties:
              inherited:
                type: boolean
                description: Deprecated - use permissionDetails/inherited instead.
              inheritedFrom:
                type: string
                description: Deprecated - use permissionDetails/inheritedFrom instead.
              role:
                type: string
                description: Deprecated - use permissionDetails/role instead.
              teamDrivePermissionType:
                type: string
                description: Deprecated - use permissionDetails/permissionType instead.
        type:
          type: string
          description: |-
            The type of the grantee. Valid values are:  
            - user 
            - group 
            - domain 
            - anyone  When creating a permission, if type is user or group, you must provide an emailAddress for the user or group. When type is domain, you must provide a domain. There isn't extra information required for a anyone type.
          annotations:
            required:
              - drive.permissions.create
        view:
          type: string
          description: Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
    PermissionList:
      id: PermissionList
      type: object
      description: A list of permissions for a file.
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#permissionList".'
          default: drive#permissionList
        nextPageToken:
          type: string
          description: The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
        permissions:
          type: array
          description: The list of permissions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/Permission'
    Reply:
      id: Reply
      type: object
      description: A reply to a comment on a file.
      properties:
        action:
          type: string
          description: |-
            The action the reply performed to the parent comment. Valid values are:  
            - resolve 
            - reopen
        author:
          $ref: '#/components/schemas/User'
          description: The author of the reply. The author's email address and permission ID will not be populated.
        content:
          type: string
          description: The plain text content of the reply. This field is used for setting the content, while htmlContent should be displayed. This is required on creates if no action is specified.
          annotations:
            required:
              - drive.replies.update
        createdTime:
          type: string
          description: The time at which the reply was created (RFC 3339 date-time).
          format: date-time
        deleted:
          type: boolean
          description: Whether the reply has been deleted. A deleted reply has no content.
        htmlContent:
          type: string
          description: The content of the reply with HTML formatting.
        id:
          type: string
          description: The ID of the reply.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#reply".'
          default: drive#reply
        modifiedTime:
          type: string
          description: The last time the reply was modified (RFC 3339 date-time).
          format: date-time
    ReplyList:
      id: ReplyList
      type: object
      description: A list of replies to a comment on a file.
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#replyList".'
          default: drive#replyList
        nextPageToken:
          type: string
          description: The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
        replies:
          type: array
          description: The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/Reply'
    Revision:
      id: Revision
      type: object
      description: The metadata for a revision to a file.
      properties:
        exportLinks:
          type: object
          description: Links for exporting Docs Editors files to specific formats.
          additionalProperties:
            type: string
            description: A mapping from export format to URL
        id:
          type: string
          description: The ID of the revision.
        keepForever:
          type: boolean
          description: |-
            Whether to keep this revision forever, even if it is no longer the head revision. If not set, the revision will be automatically purged 30 days after newer content is uploaded. This can be set on a maximum of 200 revisions for a file.
            This field is only applicable to files with binary content in Drive.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#revision".'
          default: drive#revision
        lastModifyingUser:
          $ref: '#/components/schemas/User'
          description: The last user to modify this revision.
        md5Checksum:
          type: string
          description: The MD5 checksum of the revision's content. This is only applicable to files with binary content in Drive.
        mimeType:
          type: string
          description: The MIME type of the revision.
        modifiedTime:
          type: string
          description: The last time the revision was modified (RFC 3339 date-time).
          format: date-time
        originalFilename:
          type: string
          description: The original filename used to create this revision. This is only applicable to files with binary content in Drive.
        publishAuto:
          type: boolean
          description: Whether subsequent revisions will be automatically republished. This is only applicable to Docs Editors files.
        published:
          type: boolean
          description: Whether this revision is published. This is only applicable to Docs Editors files.
        publishedLink:
          type: string
          description: A link to the published revision. This is only populated for Google Sites files.
        publishedOutsideDomain:
          type: boolean
          description: Whether this revision is published outside the domain. This is only applicable to Docs Editors files.
        size:
          type: string
          description: The size of the revision's content in bytes. This is only applicable to files with binary content in Drive.
          format: int64
    RevisionList:
      id: RevisionList
      type: object
      description: A list of revisions of a file.
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#revisionList".'
          default: drive#revisionList
        nextPageToken:
          type: string
          description: The page token for the next page of revisions. This will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
        revisions:
          type: array
          description: The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/Revision'
    StartPageToken:
      id: StartPageToken
      type: object
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#startPageToken".'
          default: drive#startPageToken
        startPageToken:
          type: string
          description: The starting page token for listing changes.
    TeamDrive:
      id: TeamDrive
      type: object
      description: 'Deprecated: use the drive collection instead.'
      properties:
        backgroundImageFile:
          type: object
          description: An image file and cropping parameters from which a background image for this Team Drive is set. This is a write only field; it can only be set on drive.teamdrives.update requests that don't set themeId. When specified, all fields of the backgroundImageFile must be set.
          properties:
            id:
              type: string
              description: The ID of an image file in Drive to use for the background image.
            width:
              type: number
              description: The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.
              format: float
            xCoordinate:
              type: number
              description: The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.
              format: float
            yCoordinate:
              type: number
              description: The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.
              format: float
        backgroundImageLink:
          type: string
          description: A short-lived link to this Team Drive's background image.
        capabilities:
          type: object
          description: Capabilities the current user has on this Team Drive.
          properties:
            canAddChildren:
              type: boolean
              description: Whether the current user can add children to folders in this Team Drive.
            canChangeCopyRequiresWriterPermissionRestriction:
              type: boolean
              description: Whether the current user can change the copyRequiresWriterPermission restriction of this Team Drive.
            canChangeDomainUsersOnlyRestriction:
              type: boolean
              description: Whether the current user can change the domainUsersOnly restriction of this Team Drive.
            canChangeTeamDriveBackground:
              type: boolean
              description: Whether the current user can change the background of this Team Drive.
            canChangeTeamMembersOnlyRestriction:
              type: boolean
              description: Whether the current user can change the teamMembersOnly restriction of this Team Drive.
            canComment:
              type: boolean
              description: Whether the current user can comment on files in this Team Drive.
            canCopy:
              type: boolean
              description: Whether the current user can copy files in this Team Drive.
            canDeleteChildren:
              type: boolean
              description: Whether the current user can delete children from folders in this Team Drive.
            canDeleteTeamDrive:
              type: boolean
              description: Whether the current user can delete this Team Drive. Attempting to delete the Team Drive may still fail if there are untrashed items inside the Team Drive.
            canDownload:
              type: boolean
              description: Whether the current user can download files in this Team Drive.
            canEdit:
              type: boolean
              description: Whether the current user can edit files in this Team Drive
            canListChildren:
              type: boolean
              description: Whether the current user can list the children of folders in this Team Drive.
            canManageMembers:
              type: boolean
              description: Whether the current user can add members to this Team Drive or remove them or change their role.
            canReadRevisions:
              type: boolean
              description: Whether the current user can read the revisions resource of files in this Team Drive.
            canRemoveChildren:
              type: boolean
              description: Deprecated - use canDeleteChildren or canTrashChildren instead.
            canRename:
              type: boolean
              description: Whether the current user can rename files or folders in this Team Drive.
            canRenameTeamDrive:
              type: boolean
              description: Whether the current user can rename this Team Drive.
            canResetTeamDriveRestrictions:
              type: boolean
              description: Whether the current user can reset the Team Drive restrictions to defaults.
            canShare:
              type: boolean
              description: Whether the current user can share files or folders in this Team Drive.
            canTrashChildren:
              type: boolean
              description: Whether the current user can trash children from folders in this Team Drive.
        colorRgb:
          type: string
          description: The color of this Team Drive as an RGB hex string. It can only be set on a drive.teamdrives.update request that does not set themeId.
        createdTime:
          type: string
          description: The time at which the Team Drive was created (RFC 3339 date-time).
          format: date-time
        id:
          type: string
          description: The ID of this Team Drive which is also the ID of the top level folder of this Team Drive.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#teamDrive".'
          default: drive#teamDrive
        name:
          type: string
          description: The name of this Team Drive.
          annotations:
            required:
              - drive.teamdrives.create
        orgUnitId:
          type: string
          description: The organizational unit of this shared drive. This field is only populated on drives.list responses when the useDomainAdminAccess parameter is set to true.
        restrictions:
          type: object
          description: A set of restrictions that apply to this Team Drive or items inside this Team Drive.
          properties:
            adminManagedRestrictions:
              type: boolean
              description: Whether administrative privileges on this Team Drive are required to modify restrictions.
            copyRequiresWriterPermission:
              type: boolean
              description: Whether the options to copy, print, or download files inside this Team Drive, should be disabled for readers and commenters. When this restriction is set to true, it will override the similarly named field to true for any file inside this Team Drive.
            domainUsersOnly:
              type: boolean
              description: Whether access to this Team Drive and items inside this Team Drive is restricted to users of the domain to which this Team Drive belongs. This restriction may be overridden by other sharing policies controlled outside of this Team Drive.
            teamMembersOnly:
              type: boolean
              description: Whether access to items inside this Team Drive is restricted to members of this Team Drive.
        themeId:
          type: string
          description: The ID of the theme from which the background image and color will be set. The set of possible teamDriveThemes can be retrieved from a drive.about.get response. When not specified on a drive.teamdrives.create request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile.
    TeamDriveList:
      id: TeamDriveList
      type: object
      description: A list of Team Drives.
      properties:
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#teamDriveList".'
          default: drive#teamDriveList
        nextPageToken:
          type: string
          description: The page token for the next page of Team Drives. This will be absent if the end of the Team Drives list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
        teamDrives:
          type: array
          description: The list of Team Drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
          items:
            $ref: '#/components/schemas/TeamDrive'
    User:
      id: User
      type: object
      description: Information about a Drive user.
      properties:
        displayName:
          type: string
          description: A plain text displayable name for this user.
        emailAddress:
          type: string
          description: The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.
        kind:
          type: string
          description: 'Identifies what kind of resource this is. Value: the fixed string "drive#user".'
          default: drive#user
        me:
          type: boolean
          description: Whether this user is the requesting user.
        permissionId:
          type: string
          description: The user's ID as visible in Permission resources.
        photoLink:
          type: string
          description: A link to the user's profile photo, if available.
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/drive: See, edit, create, and delete all of your Google Drive files
            https://www.googleapis.com/auth/drive.appdata: See, create, and delete its own configuration data in your Google Drive
            https://www.googleapis.com/auth/drive.file: See, edit, create, and delete only the specific Google Drive files you use with this app
            https://www.googleapis.com/auth/drive.metadata: View and manage metadata of files in your Google Drive
            https://www.googleapis.com/auth/drive.metadata.readonly: See information about your Google Drive files
            https://www.googleapis.com/auth/drive.photos.readonly: View the photos, videos and albums in your Google Photos
            https://www.googleapis.com/auth/drive.readonly: See and download all your Google Drive files
            https://www.googleapis.com/auth/drive.scripts: Modify your Google Apps Script scripts' behavior
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    about:
      id: googleworkspace.drive.about
      name: about
      title: About
      methods:
        get:
          operation:
            $ref: '#/paths/~1about/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/about/methods/get'
        insert: []
        update: []
        delete: []
    changes__start_page_token:
      id: googleworkspace.drive.changes__start_page_token
      name: changes__start_page_token
      title: Changes__start_page_token
      methods:
        changes_getStartPageToken:
          operation:
            $ref: '#/paths/~1changes~1startPageToken/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/changes__start_page_token/methods/changes_getStartPageToken'
        insert: []
        update: []
        delete: []
    changes:
      id: googleworkspace.drive.changes
      name: changes
      title: Changes
      methods:
        list:
          operation:
            $ref: '#/paths/~1changes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        watch:
          operation:
            $ref: '#/paths/~1changes~1watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/changes/methods/list'
        insert: []
        update: []
        delete: []
    channels:
      id: googleworkspace.drive.channels
      name: channels
      title: Channels
      methods:
        stop:
          operation:
            $ref: '#/paths/~1channels~1stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    comments:
      id: googleworkspace.drive.comments
      name: comments
      title: Comments
      methods:
        create:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/comments/methods/get'
          - $ref: '#/components/x-stackQL-resources/comments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/comments/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/comments/methods/delete'
    drives:
      id: googleworkspace.drive.drives
      name: drives
      title: Drives
      methods:
        create:
          operation:
            $ref: '#/paths/~1drives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1drives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1drives~1{driveId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1drives~1{driveId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1drives~1{driveId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        hide:
          operation:
            $ref: '#/paths/~1drives~1{driveId}~1hide/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unhide:
          operation:
            $ref: '#/paths/~1drives~1{driveId}~1unhide/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/drives/methods/get'
          - $ref: '#/components/x-stackQL-resources/drives/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/drives/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/drives/methods/delete'
    files:
      id: googleworkspace.drive.files
      name: files
      title: Files
      methods:
        copy:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1copy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1files/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        emptyTrash:
          operation:
            $ref: '#/paths/~1files~1trash/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1export/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generateIds:
          operation:
            $ref: '#/paths/~1files~1generateIds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        modifyLabels:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1modifyLabels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        watch:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/files/methods/get'
          - $ref: '#/components/x-stackQL-resources/files/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/files/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/files/methods/delete'
    files__labels:
      id: googleworkspace.drive.files__labels
      name: files__labels
      title: Files__labels
      methods:
        files_listLabels:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1listLabels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    permissions:
      id: googleworkspace.drive.permissions
      name: permissions
      title: Permissions
      methods:
        create:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions~1{permissionId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions~1{permissionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions~1{permissionId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/get'
          - $ref: '#/components/x-stackQL-resources/permissions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/delete'
    replies:
      id: googleworkspace.drive.replies
      name: replies
      title: Replies
      methods:
        create:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}~1replies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}~1replies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}~1replies~1{replyId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}~1replies~1{replyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}~1replies~1{replyId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replies/methods/get'
          - $ref: '#/components/x-stackQL-resources/replies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/replies/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/replies/methods/delete'
    revisions:
      id: googleworkspace.drive.revisions
      name: revisions
      title: Revisions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions~1{revisionId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions~1{revisionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions~1{revisionId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/get'
          - $ref: '#/components/x-stackQL-resources/revisions/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/delete'
    teamdrives:
      id: googleworkspace.drive.teamdrives
      name: teamdrives
      title: Teamdrives
      methods:
        create:
          operation:
            $ref: '#/paths/~1teamdrives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1teamdrives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1teamdrives~1{teamDriveId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1teamdrives~1{teamDriveId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1teamdrives~1{teamDriveId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/get'
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/delete'
paths:
  /about:
    parameters: &ref_1
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/userIp'
    get:
      description: Gets information about the user, the user's Drive, and system capabilities.
      operationId: drive.about.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/About'
      x-stackQL-resource: about
      x-stackQL-verb: select
  /changes/startPageToken:
    parameters: *ref_1
    get:
      description: Gets the starting pageToken for listing future changes.
      operationId: drive.changes.getStartPageToken
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPageToken'
      parameters:
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
      x-stackQL-resource: changes__start_page_token
      x-stackQL-verb: select
  /changes:
    parameters: *ref_1
    get:
      description: Lists the changes for a user or shared drive.
      operationId: drive.changes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
      parameters:
        - in: query
          name: pageToken
          required: true
          schema:
            type: string
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: includeCorpusRemovals
          schema:
            type: boolean
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeRemoved
          schema:
            type: boolean
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: restrictToMyDrive
          schema:
            type: boolean
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
      x-stackQL-resource: changes
      x-stackQL-verb: select
  /changes/watch:
    parameters: *ref_1
    post:
      description: Subscribes to changes for a user.
      operationId: drive.changes.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: query
          name: pageToken
          required: true
          schema:
            type: string
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: includeCorpusRemovals
          schema:
            type: boolean
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeRemoved
          schema:
            type: boolean
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: restrictToMyDrive
          schema:
            type: boolean
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
      x-stackQL-resource: changes
      x-stackQL-verb: exec
  /channels/stop:
    parameters: *ref_1
    post:
      description: Stop watching resources through this channel
      operationId: drive.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /files/{fileId}/comments:
    parameters: *ref_1
    post:
      description: Creates a comment on a file.
      operationId: drive.comments.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: insert
    get:
      description: Lists a file's comments.
      operationId: drive.comments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startModifiedTime
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: select
  /files/{fileId}/comments/{commentId}:
    parameters: *ref_1
    delete:
      description: Deletes a comment.
      operationId: drive.comments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: delete
    get:
      description: Gets a comment by ID.
      operationId: drive.comments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
      x-stackQL-resource: comments
      x-stackQL-verb: select
    patch:
      description: Updates a comment with patch semantics.
      operationId: drive.comments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      x-stackQL-resource: comments
      x-stackQL-verb: exec
  /drives:
    parameters: *ref_1
    post:
      description: Creates a shared drive.
      operationId: drive.drives.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: query
          name: requestId
          required: true
          schema:
            type: string
      x-stackQL-resource: drives
      x-stackQL-verb: insert
    get:
      description: Lists the user's shared drives.
      operationId: drive.drives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveList'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: drives
      x-stackQL-verb: select
  /drives/{driveId}:
    parameters: *ref_1
    delete:
      description: Permanently deletes a shared drive for which the user is an organizer. The shared drive cannot contain any untrashed items.
      operationId: drive.drives.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: allowItemDeletion
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: drives
      x-stackQL-verb: delete
    get:
      description: Gets a shared drive's metadata by ID.
      operationId: drive.drives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: drives
      x-stackQL-verb: select
    patch:
      description: Updates the metadate for a shared drive.
      operationId: drive.drives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: drives
      x-stackQL-verb: exec
  /drives/{driveId}/hide:
    parameters: *ref_1
    post:
      description: Hides a shared drive from the default view.
      operationId: drive.drives.hide
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
      x-stackQL-resource: drives
      x-stackQL-verb: exec
  /drives/{driveId}/unhide:
    parameters: *ref_1
    post:
      description: Restores a shared drive to the default view.
      operationId: drive.drives.unhide
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
      x-stackQL-resource: drives
      x-stackQL-verb: exec
  /files/{fileId}/copy:
    parameters: *ref_1
    post:
      description: Creates a copy of a file and applies any requested updates with patch semantics. Folders cannot be copied.
      operationId: drive.files.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: ignoreDefaultVisibility
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: keepRevisionForever
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files:
    parameters: *ref_1
    post:
      description: Creates a file.
      operationId: drive.files.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: ignoreDefaultVisibility
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: keepRevisionForever
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useContentAsIndexableText
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: insert
    get:
      description: Lists or searches files.
      operationId: drive.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
      parameters:
        - in: query
          name: corpora
          schema:
            type: string
        - in: query
          name: corpus
          schema:
            type: string
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: select
  /files/{fileId}:
    parameters: *ref_1
    delete:
      description: Permanently deletes a file owned by the user without moving it to the trash. If the file belongs to a shared drive the user must be an organizer on the parent. If the target is a folder, all descendants owned by the user are also deleted.
      operationId: drive.files.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: delete
    get:
      description: Gets a file's metadata or content by ID.
      operationId: drive.files.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: select
    patch:
      description: Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might change automatically, such as modifiedDate. This method supports patch semantics.
      operationId: drive.files.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.scripts
          Oauth2c:
            - https://www.googleapis.com/auth/drive.scripts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: addParents
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: keepRevisionForever
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: removeParents
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useContentAsIndexableText
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/trash:
    parameters: *ref_1
    delete:
      description: Permanently deletes all of the user's trashed files.
      operationId: drive.files.emptyTrash
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      parameters:
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}/export:
    parameters: *ref_1
    get:
      description: Exports a Google Workspace document to the requested MIME type and returns exported byte content. Note that the exported content is limited to 10MB.
      operationId: drive.files.export
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: mimeType
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/generateIds:
    parameters: *ref_1
    get:
      description: Generates a set of file IDs which can be provided in create or copy requests.
      operationId: drive.files.generateIds
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedIds'
      parameters:
        - in: query
          name: count
          schema:
            type: integer
        - in: query
          name: space
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}/listLabels:
    parameters: *ref_1
    get:
      description: Lists the labels on a file.
      operationId: drive.files.listLabels
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: files__labels
      x-stackQL-verb: select
  /files/{fileId}/modifyLabels:
    parameters: *ref_1
    post:
      description: Modifies the set of labels on a file.
      operationId: drive.files.modifyLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyLabelsResponse'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}/watch:
    parameters: *ref_1
    post:
      description: Subscribes to changes to a file. While you can establish a channel for changes to a file on a shared drive, a change to a shared drive file won't create a notification.
      operationId: drive.files.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
        - in: query
          name: includeLabels
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
      x-stackQL-resource: files
      x-stackQL-verb: exec
  /files/{fileId}/permissions:
    parameters: *ref_1
    post:
      description: Creates a permission for a file or shared drive.
      operationId: drive.permissions.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: emailMessage
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: moveToNewOwnersRoot
          schema:
            type: boolean
        - in: query
          name: sendNotificationEmail
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: transferOwnership
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: insert
    get:
      description: Lists a file's or shared drive's permissions.
      operationId: drive.permissions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: select
  /files/{fileId}/permissions/{permissionId}:
    parameters: *ref_1
    delete:
      description: Deletes a permission.
      operationId: drive.permissions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: delete
    get:
      description: Gets a permission by ID.
      operationId: drive.permissions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: select
    patch:
      description: Updates a permission with patch semantics.
      operationId: drive.permissions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: removeExpiration
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: transferOwnership
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: permissions
      x-stackQL-verb: exec
  /files/{fileId}/comments/{commentId}/replies:
    parameters: *ref_1
    post:
      description: Creates a reply to a comment.
      operationId: drive.replies.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reply'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: insert
    get:
      description: Lists a comment's replies.
      operationId: drive.replies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: select
  /files/{fileId}/comments/{commentId}/replies/{replyId}:
    parameters: *ref_1
    delete:
      description: Deletes a reply.
      operationId: drive.replies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: delete
    get:
      description: Gets a reply by ID.
      operationId: drive.replies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
      x-stackQL-resource: replies
      x-stackQL-verb: select
    patch:
      description: Updates a reply with patch semantics.
      operationId: drive.replies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reply'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
      x-stackQL-resource: replies
      x-stackQL-verb: exec
  /files/{fileId}/revisions/{revisionId}:
    parameters: *ref_1
    delete:
      description: Permanently deletes a file version. You can only delete revisions for files with binary content in Google Drive, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted.
      operationId: drive.revisions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: delete
    get:
      description: Gets a revision's metadata or content by ID.
      operationId: drive.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
      x-stackQL-resource: revisions
      x-stackQL-verb: select
    patch:
      description: Updates a revision with patch semantics.
      operationId: drive.revisions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revision'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: exec
  /files/{fileId}/revisions:
    parameters: *ref_1
    get:
      description: Lists a file's revisions.
      operationId: drive.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: revisions
      x-stackQL-verb: select
  /teamdrives:
    parameters: *ref_1
    post:
      description: Deprecated use drives.create instead.
      operationId: drive.teamdrives.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDrive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: query
          name: requestId
          required: true
          schema:
            type: string
      x-stackQL-resource: teamdrives
      x-stackQL-verb: insert
    get:
      description: Deprecated use drives.list instead.
      operationId: drive.teamdrives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDriveList'
      parameters:
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: teamdrives
      x-stackQL-verb: select
  /teamdrives/{teamDriveId}:
    parameters: *ref_1
    delete:
      description: Deprecated use drives.delete instead.
      operationId: drive.teamdrives.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
      x-stackQL-resource: teamdrives
      x-stackQL-verb: delete
    get:
      description: Deprecated use drives.get instead.
      operationId: drive.teamdrives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: teamdrives
      x-stackQL-verb: select
    patch:
      description: Deprecated use drives.update instead
      operationId: drive.teamdrives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDrive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
      x-stackQL-resource: teamdrives
      x-stackQL-verb: exec
