openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Gmail API
  description: The Gmail API lets you view and manage Gmail mailbox data like threads, messages, and labels.
  version: v1
  x-discovery-doc-revision: '20230102'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/gmail/api/
servers:
  - url: https://gmail.googleapis.com
components:
  schemas:
    Profile:
      type: object
      description: Profile for a Gmail user.
      properties:
        emailAddress:
          description: The user's email address.
          type: string
        messagesTotal:
          format: int32
          type: integer
          description: The total number of messages in the mailbox.
        threadsTotal:
          description: The total number of threads in the mailbox.
          type: integer
          format: int32
        historyId:
          description: The ID of the mailbox's current history record.
          format: uint64
          type: string
      id: Profile
    ModifyMessageRequest:
      properties:
        removeLabelIds:
          type: array
          items:
            type: string
          description: A list IDs of labels to remove from this message. You can remove up to 100 labels with each update.
        addLabelIds:
          type: array
          items:
            type: string
          description: A list of IDs of labels to add to this message. You can add up to 100 labels with each update.
      type: object
      id: ModifyMessageRequest
    Thread:
      id: Thread
      properties:
        messages:
          description: The list of messages in the thread.
          type: array
          items:
            $ref: '#/components/schemas/Message'
        id:
          description: The unique ID of the thread.
          type: string
        snippet:
          description: A short part of the message text.
          type: string
        historyId:
          description: The ID of the last history record that modified this thread.
          type: string
          format: uint64
      type: object
      description: A collection of messages representing a conversation.
    WatchResponse:
      type: object
      properties:
        expiration:
          type: string
          description: When Gmail will stop sending notifications for mailbox updates (epoch millis). Call `watch` again before this time to renew the watch.
          format: int64
        historyId:
          type: string
          description: The ID of the mailbox's current history record.
          format: uint64
      description: Push notification watch response.
      id: WatchResponse
    WatchRequest:
      description: Set up or update a new push notification watch on this user's mailbox.
      type: object
      id: WatchRequest
      properties:
        labelFilterAction:
          enumDescriptions:
            - Only get push notifications for message changes relating to labelIds specified.
            - Get push notifications for all message changes except those relating to labelIds specified.
          enum:
            - include
            - exclude
          description: Filtering behavior of labelIds list specified.
          type: string
        topicName:
          type: string
          description: A fully qualified Google Cloud Pub/Sub API topic name to publish the events to. This topic name **must** already exist in Cloud Pub/Sub and you **must** have already granted gmail "publish" permission on it. For example, "projects/my-project-identifier/topics/my-topic-name" (using the Cloud Pub/Sub "v1" topic naming format). Note that the "my-project-identifier" portion must exactly match your Google developer project id (the one executing this watch request).
        labelIds:
          description: List of label_ids to restrict notifications about. By default, if unspecified, all changes are pushed out. If specified then dictates which labels are required for a push notification to be generated.
          type: array
          items:
            type: string
    AutoForwarding:
      id: AutoForwarding
      description: Auto-forwarding settings for an account.
      properties:
        enabled:
          type: boolean
          description: Whether all incoming mail is automatically forwarded to another address.
        disposition:
          type: string
          enumDescriptions:
            - Unspecified disposition.
            - Leave the message in the `INBOX`.
            - Archive the message.
            - Move the message to the `TRASH`.
            - Leave the message in the `INBOX` and mark it as read.
          description: The state that a message should be left in after it has been forwarded.
          enum:
            - dispositionUnspecified
            - leaveInInbox
            - archive
            - trash
            - markRead
        emailAddress:
          type: string
          description: Email address to which all incoming messages are forwarded. This email address must be a verified member of the forwarding addresses.
      type: object
    ListFiltersResponse:
      properties:
        filter:
          items:
            $ref: '#/components/schemas/Filter'
          description: List of a user's filters.
          type: array
      description: Response for the ListFilters method.
      id: ListFiltersResponse
      type: object
    FilterCriteria:
      type: object
      description: Message matching criteria.
      properties:
        excludeChats:
          type: boolean
          description: Whether the response should exclude chats.
        negatedQuery:
          type: string
          description: 'Only return messages not matching the specified query. Supports the same query format as the Gmail search box. For example, `"from:someuser@example.com rfc822msgid: is:unread"`.'
        query:
          description: 'Only return messages matching the specified query. Supports the same query format as the Gmail search box. For example, `"from:someuser@example.com rfc822msgid: is:unread"`.'
          type: string
        sizeComparison:
          enumDescriptions:
            - ''
            - Find messages smaller than the given size.
            - Find messages larger than the given size.
          description: How the message size in bytes should be in relation to the size field.
          type: string
          enum:
            - unspecified
            - smaller
            - larger
        size:
          type: integer
          format: int32
          description: The size of the entire RFC822 message in bytes, including all headers and attachments.
        to:
          type: string
          description: The recipient's display name or email address. Includes recipients in the "to", "cc", and "bcc" header fields. You can use simply the local part of the email address. For example, "example" and "example@" both match "example@gmail.com". This field is case-insensitive.
        hasAttachment:
          type: boolean
          description: Whether the message has any attachment.
        subject:
          description: Case-insensitive phrase found in the message's subject. Trailing and leading whitespace are be trimmed and adjacent spaces are collapsed.
          type: string
        from:
          type: string
          description: The sender's display name or email address.
      id: FilterCriteria
    SendAs:
      id: SendAs
      description: Settings associated with a send-as alias, which can be either the primary login address associated with the account or a custom "from" address. Send-as aliases correspond to the "Send Mail As" feature in the web interface.
      type: object
      properties:
        isPrimary:
          description: Whether this address is the primary address used to login to the account. Every Gmail account has exactly one primary address, and it cannot be deleted from the collection of send-as aliases. This field is read-only.
          type: boolean
        displayName:
          type: string
          description: A name that appears in the "From:" header for mail sent using this alias. For custom "from" addresses, when this is empty, Gmail will populate the "From:" header with the name that is used for the primary address associated with the account. If the admin has disabled the ability for users to update their name format, requests to update this field for the primary login will silently fail.
        verificationStatus:
          type: string
          enum:
            - verificationStatusUnspecified
            - accepted
            - pending
          enumDescriptions:
            - Unspecified verification status.
            - The address is ready to use as a send-as alias.
            - The address is awaiting verification by the owner.
          description: Indicates whether this address has been verified for use as a send-as alias. Read-only. This setting only applies to custom "from" aliases.
        treatAsAlias:
          type: boolean
          description: Whether Gmail should treat this address as an alias for the user's primary email address. This setting only applies to custom "from" aliases.
        sendAsEmail:
          type: string
          description: The email address that appears in the "From:" header for mail sent using this alias. This is read-only for all operations except create.
        smtpMsa:
          $ref: '#/components/schemas/SmtpMsa'
          description: An optional SMTP service that will be used as an outbound relay for mail sent using this alias. If this is empty, outbound mail will be sent directly from Gmail's servers to the destination SMTP service. This setting only applies to custom "from" aliases.
        isDefault:
          description: Whether this address is selected as the default "From:" address in situations such as composing a new message or sending a vacation auto-reply. Every Gmail account has exactly one default send-as address, so the only legal value that clients may write to this field is `true`. Changing this from `false` to `true` for an address will result in this field becoming `false` for the other previous default address.
          type: boolean
        replyToAddress:
          type: string
          description: An optional email address that is included in a "Reply-To:" header for mail sent using this alias. If this is empty, Gmail will not generate a "Reply-To:" header.
        signature:
          description: An optional HTML signature that is included in messages composed with this alias in the Gmail web UI. This signature is added to new emails only.
          type: string
    EnableCseKeyPairRequest:
      properties: {}
      type: object
      description: Requests to turn on a client-side encryption key pair.
      id: EnableCseKeyPairRequest
    ListDraftsResponse:
      properties:
        drafts:
          description: List of drafts. Note that the `Message` property in each `Draft` resource only contains an `id` and a `threadId`. The messages.get method can fetch additional message details.
          type: array
          items:
            $ref: '#/components/schemas/Draft'
        nextPageToken:
          description: Token to retrieve the next page of results in the list.
          type: string
        resultSizeEstimate:
          type: integer
          description: Estimated total number of results.
          format: uint32
      id: ListDraftsResponse
      type: object
    Message:
      type: object
      id: Message
      properties:
        sizeEstimate:
          format: int32
          type: integer
          description: Estimated size in bytes of the message.
        id:
          description: The immutable ID of the message.
          type: string
        historyId:
          format: uint64
          type: string
          description: The ID of the last history record that modified this message.
        payload:
          $ref: '#/components/schemas/MessagePart'
          description: The parsed email structure in the message parts.
        internalDate:
          type: string
          description: The internal message creation timestamp (epoch ms), which determines ordering in the inbox. For normal SMTP-received email, this represents the time the message was originally accepted by Google, which is more reliable than the `Date` header. However, for API-migrated mail, it can be configured by client to be based on the `Date` header.
          format: int64
        snippet:
          description: A short part of the message text.
          type: string
        threadId:
          description: 'The ID of the thread the message belongs to. To add a message or draft to a thread, the following criteria must be met: 1. The requested `threadId` must be specified on the `Message` or `Draft.Message` you supply with your request. 2. The `References` and `In-Reply-To` headers must be set in compliance with the [RFC 2822](https://tools.ietf.org/html/rfc2822) standard. 3. The `Subject` headers must match. '
          type: string
        labelIds:
          type: array
          description: List of IDs of labels applied to this message.
          items:
            type: string
        raw:
          type: string
          format: byte
          description: The entire email message in an RFC 2822 formatted and base64url encoded string. Returned in `messages.get` and `drafts.get` responses when the `format=RAW` parameter is supplied.
          annotations:
            required:
              - gmail.users.drafts.create
              - gmail.users.drafts.update
              - gmail.users.messages.insert
              - gmail.users.messages.send
      description: An email message.
    HistoryMessageAdded:
      properties:
        message:
          $ref: '#/components/schemas/Message'
      id: HistoryMessageAdded
      type: object
    KaclsKeyMetadata:
      description: Metadata for private keys managed by an external key access control list service. For details about managing key access, see [Google Workspace CSE API Reference](https://developers.google.com/workspace/cse/reference).
      id: KaclsKeyMetadata
      type: object
      properties:
        kaclsData:
          type: string
          description: 'Opaque data generated and used by the key access control list service. Maximum size: 8 KiB.'
        kaclsUri:
          type: string
          description: The URI of the key access control list service that manages the private key.
    HistoryLabelRemoved:
      properties:
        message:
          $ref: '#/components/schemas/Message'
        labelIds:
          items:
            type: string
          type: array
          description: Label IDs removed from the message.
      type: object
      id: HistoryLabelRemoved
    ListDelegatesResponse:
      type: object
      id: ListDelegatesResponse
      properties:
        delegates:
          type: array
          description: List of the user's delegates (with any verification status). If an account doesn't have delegates, this field doesn't appear.
          items:
            $ref: '#/components/schemas/Delegate'
      description: Response for the ListDelegates method.
    CsePrivateKeyMetadata:
      description: Metadata for a private key instance.
      id: CsePrivateKeyMetadata
      properties:
        kaclsKeyMetadata:
          description: Metadata for a private key instance managed by an external key access control list service.
          $ref: '#/components/schemas/KaclsKeyMetadata'
        privateKeyMetadataId:
          type: string
          description: Output only. The immutable ID for the private key metadata instance.
          readOnly: true
      type: object
    ListHistoryResponse:
      type: object
      id: ListHistoryResponse
      properties:
        nextPageToken:
          type: string
          description: Page token to retrieve the next page of results in the list.
        history:
          type: array
          items:
            $ref: '#/components/schemas/History'
          description: List of history records. Any `messages` contained in the response will typically only have `id` and `threadId` fields populated.
        historyId:
          type: string
          format: uint64
          description: The ID of the mailbox's current history record.
    ListSendAsResponse:
      properties:
        sendAs:
          items:
            $ref: '#/components/schemas/SendAs'
          type: array
          description: List of send-as aliases.
      description: Response for the ListSendAs method.
      id: ListSendAsResponse
      type: object
    ListLabelsResponse:
      properties:
        labels:
          description: List of labels. Note that each label resource only contains an `id`, `name`, `messageListVisibility`, `labelListVisibility`, and `type`. The labels.get method can fetch additional label details.
          items:
            $ref: '#/components/schemas/Label'
          type: array
      type: object
      id: ListLabelsResponse
    ListCseKeyPairsResponse:
      type: object
      properties:
        cseKeyPairs:
          description: One page of the list of CSE key pairs installed for the user.
          items:
            $ref: '#/components/schemas/CseKeyPair'
          type: array
        nextPageToken:
          description: Pagination token to be passed to a subsequent ListCseKeyPairs call in order to retrieve the next page of key pairs. If this value is not returned, then no further pages remain.
          type: string
      id: ListCseKeyPairsResponse
    DisableCseKeyPairRequest:
      id: DisableCseKeyPairRequest
      type: object
      properties: {}
      description: Requests to turn off a client-side encryption key pair.
    SmimeInfo:
      description: An S/MIME email config.
      type: object
      id: SmimeInfo
      properties:
        pem:
          description: PEM formatted X509 concatenated certificate string (standard base64 encoding). Format used for returning key, which includes public key as well as certificate chain (not private key).
          type: string
        encryptedKeyPassword:
          description: Encrypted key password, when key is encrypted.
          type: string
        expiration:
          format: int64
          type: string
          description: When the certificate expires (in milliseconds since epoch).
        isDefault:
          type: boolean
          description: Whether this SmimeInfo is the default one for this user's send-as address.
        id:
          description: The immutable ID for the SmimeInfo.
          type: string
        issuerCn:
          description: The S/MIME certificate issuer's common name.
          type: string
        pkcs12:
          description: PKCS#12 format containing a single private/public key pair and certificate chain. This format is only accepted from client for creating a new SmimeInfo and is never returned, because the private key is not intended to be exported. PKCS#12 may be encrypted, in which case encryptedKeyPassword should be set appropriately.
          format: byte
          type: string
    BatchDeleteMessagesRequest:
      properties:
        ids:
          items:
            type: string
          description: The IDs of the messages to delete.
          type: array
      id: BatchDeleteMessagesRequest
      type: object
    FilterAction:
      description: A set of actions to perform on a message.
      id: FilterAction
      properties:
        forward:
          type: string
          description: Email address that the message should be forwarded to.
        removeLabelIds:
          items:
            type: string
          description: List of labels to remove from the message.
          type: array
        addLabelIds:
          items:
            type: string
          type: array
          description: List of labels to add to the message.
      type: object
    PopSettings:
      description: POP settings for an account.
      type: object
      id: PopSettings
      properties:
        accessWindow:
          enumDescriptions:
            - Unspecified range.
            - Indicates that no messages are accessible via POP.
            - Indicates that unfetched messages received after some past point in time are accessible via POP.
            - Indicates that all unfetched messages are accessible via POP.
          type: string
          enum:
            - accessWindowUnspecified
            - disabled
            - fromNowOn
            - allMail
          description: The range of messages which are accessible via POP.
        disposition:
          enumDescriptions:
            - Unspecified disposition.
            - Leave the message in the `INBOX`.
            - Archive the message.
            - Move the message to the `TRASH`.
            - Leave the message in the `INBOX` and mark it as read.
          description: The action that will be executed on a message after it has been fetched via POP.
          enum:
            - dispositionUnspecified
            - leaveInInbox
            - archive
            - trash
            - markRead
          type: string
    ListCseIdentitiesResponse:
      id: ListCseIdentitiesResponse
      type: object
      properties:
        nextPageToken:
          description: Pagination token to be passed to a subsequent ListCseIdentities call in order to retrieve the next page of identities. If this value is not returned or is the empty string, then no further pages remain.
          type: string
        cseIdentities:
          items:
            $ref: '#/components/schemas/CseIdentity'
          type: array
          description: One page of the list of CSE identities configured for the user.
    MessagePartBody:
      type: object
      id: MessagePartBody
      properties:
        attachmentId:
          description: When present, contains the ID of an external attachment that can be retrieved in a separate `messages.attachments.get` request. When not present, the entire content of the message part body is contained in the data field.
          type: string
        data:
          format: byte
          type: string
          description: The body data of a MIME message part as a base64url encoded string. May be empty for MIME container types that have no message body or when the body data is sent as a separate attachment. An attachment ID is present if the body data is contained in a separate attachment.
        size:
          type: integer
          format: int32
          description: Number of bytes for the message part data (encoding notwithstanding).
      description: The body of a single MIME message part.
    LanguageSettings:
      type: object
      properties:
        displayLanguage:
          type: string
          description: The language to display Gmail in, formatted as an RFC 3066 Language Tag (for example `en-GB`, `fr` or `ja` for British English, French, or Japanese respectively). The set of languages supported by Gmail evolves over time, so please refer to the "Language" dropdown in the Gmail settings for all available options, as described in the language settings help article. A table of sample values is also provided in the Managing Language Settings guide Not all Gmail clients can display the same set of languages. In the case that a user's display language is not available for use on a particular client, said client automatically chooses to display in the closest supported variant (or a reasonable default).
      description: Language settings for an account. These settings correspond to the "Language settings" feature in the web interface.
      id: LanguageSettings
    ImapSettings:
      type: object
      properties:
        maxFolderSize:
          type: integer
          format: int32
          description: An optional limit on the number of messages that an IMAP folder may contain. Legal values are 0, 1000, 2000, 5000 or 10000. A value of zero is interpreted to mean that there is no limit.
        autoExpunge:
          description: If this value is true, Gmail will immediately expunge a message when it is marked as deleted in IMAP. Otherwise, Gmail will wait for an update from the client before expunging messages marked as deleted.
          type: boolean
        enabled:
          description: Whether IMAP is enabled for the account.
          type: boolean
        expungeBehavior:
          enum:
            - expungeBehaviorUnspecified
            - archive
            - trash
            - deleteForever
          enumDescriptions:
            - Unspecified behavior.
            - Archive messages marked as deleted.
            - Move messages marked as deleted to the trash.
            - Immediately and permanently delete messages marked as deleted. The expunged messages cannot be recovered.
          description: The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder.
          type: string
      description: IMAP settings for an account.
      id: ImapSettings
    MessagePart:
      type: object
      id: MessagePart
      properties:
        parts:
          items:
            $ref: '#/components/schemas/MessagePart'
          type: array
          description: The child MIME message parts of this part. This only applies to container MIME message parts, for example `multipart/*`. For non- container MIME message part types, such as `text/plain`, this field is empty. For more information, see RFC 1521.
        mimeType:
          type: string
          description: The MIME type of the message part.
        partId:
          description: The immutable ID of the message part.
          type: string
        body:
          $ref: '#/components/schemas/MessagePartBody'
          description: The message part body for this part, which may be empty for container MIME message parts.
        filename:
          type: string
          description: The filename of the attachment. Only present if this message part represents an attachment.
        headers:
          items:
            $ref: '#/components/schemas/MessagePartHeader'
          type: array
          description: List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as `To`, `From`, and `Subject`.
      description: A single MIME message part.
    Draft:
      description: A draft email in the user's mailbox.
      id: Draft
      properties:
        message:
          description: The message content of the draft.
          $ref: '#/components/schemas/Message'
        id:
          type: string
          annotations:
            required:
              - gmail.users.drafts.send
          description: The immutable ID of the draft.
      type: object
    Label:
      description: Labels are used to categorize messages and threads within the user's mailbox. The maximum number of labels supported for a user's mailbox is 10,000.
      id: Label
      type: object
      properties:
        messageListVisibility:
          enum:
            - show
            - hide
          type: string
          annotations:
            required:
              - gmail.users.labels.create
              - gmail.users.labels.update
          enumDescriptions:
            - Show the label in the message list.
            - Do not show the label in the message list.
          description: The visibility of messages with this label in the message list in the Gmail web interface.
        id:
          description: The immutable ID of the label.
          annotations:
            required:
              - gmail.users.labels.update
          type: string
        messagesUnread:
          description: The number of unread messages with the label.
          format: int32
          type: integer
        color:
          description: The color to assign to the label. Color is only available for labels that have their `type` set to `user`.
          $ref: '#/components/schemas/LabelColor'
        labelListVisibility:
          type: string
          enum:
            - labelShow
            - labelShowIfUnread
            - labelHide
          description: The visibility of the label in the label list in the Gmail web interface.
          annotations:
            required:
              - gmail.users.labels.create
              - gmail.users.labels.update
          enumDescriptions:
            - Show the label in the label list.
            - Show the label if there are any unread messages with that label.
            - Do not show the label in the label list.
        name:
          annotations:
            required:
              - gmail.users.labels.create
              - gmail.users.labels.update
          description: The display name of the label.
          type: string
        threadsUnread:
          format: int32
          description: The number of unread threads with the label.
          type: integer
        threadsTotal:
          format: int32
          description: The total number of threads with the label.
          type: integer
        type:
          enumDescriptions:
            - Labels created by Gmail.
            - Custom labels created by the user or application.
          description: The owner type for the label. User labels are created by the user and can be modified and deleted by the user and can be applied to any message or thread. System labels are internally created and cannot be added, modified, or deleted. System labels may be able to be applied to or removed from messages and threads under some circumstances but this is not guaranteed. For example, users can apply and remove the `INBOX` and `UNREAD` labels from messages and threads, but cannot apply or remove the `DRAFTS` or `SENT` labels from messages or threads.
          type: string
          enum:
            - system
            - user
        messagesTotal:
          format: int32
          type: integer
          description: The total number of messages with the label.
    Filter:
      id: Filter
      description: Resource definition for Gmail filters. Filters apply to specific messages instead of an entire email thread.
      type: object
      properties:
        criteria:
          $ref: '#/components/schemas/FilterCriteria'
          description: Matching criteria for the filter.
        id:
          description: The server assigned ID of the filter.
          type: string
        action:
          $ref: '#/components/schemas/FilterAction'
          description: Action that the filter performs.
    ObliterateCseKeyPairRequest:
      properties: {}
      description: Request to obliterate a CSE key pair.
      id: ObliterateCseKeyPairRequest
      type: object
    VacationSettings:
      description: Vacation auto-reply settings for an account. These settings correspond to the "Vacation responder" feature in the web interface.
      properties:
        restrictToDomain:
          type: boolean
          description: Flag that determines whether responses are sent to recipients who are outside of the user's domain. This feature is only available for G Suite users.
        restrictToContacts:
          type: boolean
          description: Flag that determines whether responses are sent to recipients who are not in the user's list of contacts.
        responseBodyHtml:
          type: string
          description: Response body in HTML format. Gmail will sanitize the HTML before storing it. If both `response_body_plain_text` and `response_body_html` are specified, `response_body_html` will be used.
        responseBodyPlainText:
          description: Response body in plain text format. If both `response_body_plain_text` and `response_body_html` are specified, `response_body_html` will be used.
          type: string
        startTime:
          format: int64
          description: An optional start time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives after the start time. If both `startTime` and `endTime` are specified, `startTime` must precede `endTime`.
          type: string
        endTime:
          type: string
          description: An optional end time for sending auto-replies (epoch ms). When this is specified, Gmail will automatically reply only to messages that it receives before the end time. If both `startTime` and `endTime` are specified, `startTime` must precede `endTime`.
          format: int64
        enableAutoReply:
          description: Flag that controls whether Gmail automatically replies to messages.
          type: boolean
        responseSubject:
          type: string
          description: Optional text to prepend to the subject line in vacation responses. In order to enable auto-replies, either the response subject or the response body must be nonempty.
      id: VacationSettings
      type: object
    History:
      description: A record of a change to the user's mailbox. Each history change may affect multiple messages in multiple ways.
      id: History
      properties:
        labelsAdded:
          description: Labels added to messages in this history record.
          items:
            $ref: '#/components/schemas/HistoryLabelAdded'
          type: array
        messagesAdded:
          type: array
          items:
            $ref: '#/components/schemas/HistoryMessageAdded'
          description: Messages added to the mailbox in this history record.
        messagesDeleted:
          description: Messages deleted (not Trashed) from the mailbox in this history record.
          type: array
          items:
            $ref: '#/components/schemas/HistoryMessageDeleted'
        messages:
          type: array
          description: List of messages changed in this history record. The fields for specific change types, such as `messagesAdded` may duplicate messages in this field. We recommend using the specific change-type fields instead of this.
          items:
            $ref: '#/components/schemas/Message'
        id:
          description: The mailbox sequence ID.
          format: uint64
          type: string
        labelsRemoved:
          items:
            $ref: '#/components/schemas/HistoryLabelRemoved'
          description: Labels removed from messages in this history record.
          type: array
      type: object
    HistoryMessageDeleted:
      id: HistoryMessageDeleted
      properties:
        message:
          $ref: '#/components/schemas/Message'
      type: object
    ListSmimeInfoResponse:
      id: ListSmimeInfoResponse
      type: object
      properties:
        smimeInfo:
          type: array
          description: List of SmimeInfo.
          items:
            $ref: '#/components/schemas/SmimeInfo'
    LabelColor:
      type: object
      id: LabelColor
      properties:
        textColor:
          description: 'The text color of the label, represented as hex string. This field is required in order to set the color of a label. Only the following predefined set of color values are allowed: \#000000, #434343, #666666, #999999, #cccccc, #efefef, #f3f3f3, #ffffff, \#fb4c2f, #ffad47, #fad165, #16a766, #43d692, #4a86e8, #a479e2, #f691b3, \#f6c5be, #ffe6c7, #fef1d1, #b9e4d0, #c6f3de, #c9daf8, #e4d7f5, #fcdee8, \#efa093, #ffd6a2, #fce8b3, #89d3b2, #a0eac9, #a4c2f4, #d0bcf1, #fbc8d9, \#e66550, #ffbc6b, #fcda83, #44b984, #68dfa9, #6d9eeb, #b694e8, #f7a7c0, \#cc3a21, #eaa041, #f2c960, #149e60, #3dc789, #3c78d8, #8e63ce, #e07798, \#ac2b16, #cf8933, #d5ae49, #0b804b, #2a9c68, #285bac, #653e9b, #b65775, \#822111, #a46a21, #aa8831, #076239, #1a764d, #1c4587, #41236d, #83334c \#464646, #e7e7e7, #0d3472, #b6cff5, #0d3b44, #98d7e4, #3d188e, #e3d7ff, \#711a36, #fbd3e0, #8a1c0a, #f2b2a8, #7a2e0b, #ffc8af, #7a4706, #ffdeb5, \#594c05, #fbe983, #684e07, #fdedc1, #0b4f30, #b3efd3, #04502e, #a2dcc1, \#c2c2c2, #4986e7, #2da2bb, #b99aff, #994a64, #f691b2, #ff7537, #ffad46, \#662e37, #ebdbde, #cca6ac, #094228, #42d692, #16a765'
          type: string
        backgroundColor:
          type: string
          description: 'The background color represented as hex string #RRGGBB (ex #000000). This field is required in order to set the color of a label. Only the following predefined set of color values are allowed: \#000000, #434343, #666666, #999999, #cccccc, #efefef, #f3f3f3, #ffffff, \#fb4c2f, #ffad47, #fad165, #16a766, #43d692, #4a86e8, #a479e2, #f691b3, \#f6c5be, #ffe6c7, #fef1d1, #b9e4d0, #c6f3de, #c9daf8, #e4d7f5, #fcdee8, \#efa093, #ffd6a2, #fce8b3, #89d3b2, #a0eac9, #a4c2f4, #d0bcf1, #fbc8d9, \#e66550, #ffbc6b, #fcda83, #44b984, #68dfa9, #6d9eeb, #b694e8, #f7a7c0, \#cc3a21, #eaa041, #f2c960, #149e60, #3dc789, #3c78d8, #8e63ce, #e07798, \#ac2b16, #cf8933, #d5ae49, #0b804b, #2a9c68, #285bac, #653e9b, #b65775, \#822111, #a46a21, #aa8831, #076239, #1a764d, #1c4587, #41236d, #83334c \#464646, #e7e7e7, #0d3472, #b6cff5, #0d3b44, #98d7e4, #3d188e, #e3d7ff, \#711a36, #fbd3e0, #8a1c0a, #f2b2a8, #7a2e0b, #ffc8af, #7a4706, #ffdeb5, \#594c05, #fbe983, #684e07, #fdedc1, #0b4f30, #b3efd3, #04502e, #a2dcc1, \#c2c2c2, #4986e7, #2da2bb, #b99aff, #994a64, #f691b2, #ff7537, #ffad46, \#662e37, #ebdbde, #cca6ac, #094228, #42d692, #16a765'
    HistoryLabelAdded:
      properties:
        message:
          $ref: '#/components/schemas/Message'
        labelIds:
          description: Label IDs added to the message.
          type: array
          items:
            type: string
      type: object
      id: HistoryLabelAdded
    ListForwardingAddressesResponse:
      description: Response for the ListForwardingAddresses method.
      properties:
        forwardingAddresses:
          items:
            $ref: '#/components/schemas/ForwardingAddress'
          description: List of addresses that may be used for forwarding.
          type: array
      id: ListForwardingAddressesResponse
      type: object
    ListMessagesResponse:
      type: object
      id: ListMessagesResponse
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: List of messages. Note that each message resource contains only an `id` and a `threadId`. Additional message details can be fetched using the messages.get method.
        resultSizeEstimate:
          type: integer
          description: Estimated total number of results.
          format: uint32
        nextPageToken:
          type: string
          description: Token to retrieve the next page of results in the list.
    ForwardingAddress:
      description: Settings for a forwarding address.
      id: ForwardingAddress
      type: object
      properties:
        forwardingEmail:
          type: string
          description: An email address to which messages can be forwarded.
        verificationStatus:
          type: string
          enum:
            - verificationStatusUnspecified
            - accepted
            - pending
          enumDescriptions:
            - Unspecified verification status.
            - The address is ready to use for forwarding.
            - The address is awaiting verification by the owner.
          description: Indicates whether this address has been verified and is usable for forwarding. Read-only.
    BatchModifyMessagesRequest:
      type: object
      properties:
        removeLabelIds:
          items:
            type: string
          type: array
          description: A list of label IDs to remove from messages.
        ids:
          description: The IDs of the messages to modify. There is a limit of 1000 ids per request.
          items:
            type: string
          type: array
        addLabelIds:
          type: array
          items:
            type: string
          description: A list of label IDs to add to messages.
      id: BatchModifyMessagesRequest
    MessagePartHeader:
      type: object
      properties:
        name:
          type: string
          description: The name of the header before the `:` separator. For example, `To`.
        value:
          description: The value of the header after the `:` separator. For example, `someuser@example.com`.
          type: string
      id: MessagePartHeader
    CseIdentity:
      type: object
      id: CseIdentity
      properties:
        emailAddress:
          type: string
          description: The email address for the sending identity. The email address must be the primary email address of the authenticated user.
        primaryKeyPairId:
          type: string
          description: If a key pair is associated, the identifier of the key pair, CseKeyPair.
      description: '[Beta](https://workspace.google.com/terms/service-terms/index.html). The client-side encryption (CSE) configuration for the email address of an authenticated user. Gmail uses CSE configurations to save drafts of client-side encrypted email messages, and to sign and send encrypted email messages.'
    ListThreadsResponse:
      properties:
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
        resultSizeEstimate:
          format: uint32
          description: Estimated total number of results.
          type: integer
        threads:
          items:
            $ref: '#/components/schemas/Thread'
          type: array
          description: List of threads. Note that each thread resource does not contain a list of `messages`. The list of `messages` for a given thread can be fetched using the threads.get method.
      id: ListThreadsResponse
      type: object
    Delegate:
      type: object
      description: Settings for a delegate. Delegates can read, send, and delete messages, as well as view and add contacts, for the delegator's account. See "Set up mail delegation" for more information about delegates.
      id: Delegate
      properties:
        delegateEmail:
          type: string
          description: The email address of the delegate.
        verificationStatus:
          enum:
            - verificationStatusUnspecified
            - accepted
            - pending
            - rejected
            - expired
          type: string
          enumDescriptions:
            - Unspecified verification status.
            - The address can act a delegate for the account.
            - A verification request was mailed to the address, and the owner has not yet accepted it.
            - A verification request was mailed to the address, and the owner rejected it.
            - A verification request was mailed to the address, and it expired without verification.
          description: Indicates whether this address has been verified and can act as a delegate for the account. Read-only.
    ModifyThreadRequest:
      type: object
      properties:
        addLabelIds:
          items:
            type: string
          type: array
          description: A list of IDs of labels to add to this thread. You can add up to 100 labels with each update.
        removeLabelIds:
          items:
            type: string
          type: array
          description: A list of IDs of labels to remove from this thread. You can remove up to 100 labels with each update.
      id: ModifyThreadRequest
    CseKeyPair:
      properties:
        privateKeyMetadata:
          description: Metadata for instances of this key pair's private key.
          items:
            $ref: '#/components/schemas/CsePrivateKeyMetadata'
          type: array
        disableTime:
          type: string
          description: Output only. If a key pair is set to `DISABLED`, the time that the key pair's state changed from `ENABLED` to `DISABLED`. This field is present only when the key pair is in state `DISABLED`.
          readOnly: true
          format: google-datetime
        enablementState:
          enum:
            - stateUnspecified
            - enabled
            - disabled
          type: string
          readOnly: true
          description: Output only. The current state of the key pair.
          enumDescriptions:
            - The current state of the key pair is not set. The key pair is neither turned on nor turned off.
            - The key pair is turned on. For any email messages that this key pair encrypts, Gmail decrypts the messages and signs any outgoing mail with the private key. To turn on a key pair, use the EnableCseKeyPair method.
            - The key pair is turned off. Authenticated users cannot decrypt email messages nor sign outgoing messages. If a key pair is turned off for more than 30 days, you can permanently delete it. To turn off a key pair, use the DisableCseKeyPair method.
        pem:
          readOnly: true
          type: string
          description: Output only. The public key and its certificate chain, in [PEM](https://en.wikipedia.org/wiki/Privacy-Enhanced_Mail) format.
        keyPairId:
          readOnly: true
          type: string
          description: Output only. The immutable ID for the client-side encryption S/MIME key pair.
        pkcs7:
          type: string
          description: Input only. The public key and its certificate chain. The chain must be in [PKCS#7](https://en.wikipedia.org/wiki/PKCS_7) format and use PEM encoding and ASCII armor.
        subjectEmailAddresses:
          type: array
          description: Output only. The email address identities that are specified on the leaf certificate.
          items:
            type: string
          readOnly: true
      id: CseKeyPair
      description: '[Beta](https://workspace.google.com/terms/service-terms/index.html). A client-side encryption S/MIME key pair, which is comprised of a public key, its certificate chain, and metadata for its paired private key. Gmail uses the key pair to complete the following tasks: - Sign outgoing client-side encrypted messages. - Save and reopen drafts of client-side encrypted messages. - Save and reopen sent messages. - Decrypt incoming or archived S/MIME messages.'
      type: object
    SmtpMsa:
      id: SmtpMsa
      description: Configuration for communication with an SMTP service.
      properties:
        port:
          type: integer
          format: int32
          description: The port of the SMTP service. Required.
        password:
          type: string
          description: The password that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
        username:
          type: string
          description: The username that will be used for authentication with the SMTP service. This is a write-only field that can be specified in requests to create or update SendAs settings; it is never populated in responses.
        securityMode:
          enum:
            - securityModeUnspecified
            - none
            - ssl
            - starttls
          type: string
          description: The protocol that will be used to secure communication with the SMTP service. Required.
          enumDescriptions:
            - Unspecified security mode.
            - Communication with the remote SMTP service is unsecured. Requires port 25.
            - Communication with the remote SMTP service is secured using SSL.
            - Communication with the remote SMTP service is secured using STARTTLS.
        host:
          description: The hostname of the SMTP service. Required.
          type: string
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/gmail.addons.current.message.metadata: View your email message metadata when the add-on is running
            https://www.googleapis.com/auth/gmail.insert: Add emails into your Gmail mailbox
            https://www.googleapis.com/auth/gmail.readonly: View your email messages and settings
            https://www.googleapis.com/auth/gmail.addons.current.message.readonly: View your email messages when the add-on is running
            https://www.googleapis.com/auth/gmail.settings.sharing: Manage your sensitive mail settings, including who can manage your mail
            https://www.googleapis.com/auth/gmail.send: Send email on your behalf
            https://www.googleapis.com/auth/gmail.compose: Manage drafts and send emails
            https://www.googleapis.com/auth/gmail.modify: Read, compose, and send emails from your Gmail account
            https://www.googleapis.com/auth/gmail.addons.current.message.action: View your email messages when you interact with the add-on
            https://mail.google.com/: Read, compose, send, and permanently delete all your email from Gmail
            https://www.googleapis.com/auth/gmail.addons.current.action.compose: Manage drafts and send emails when you interact with the add-on
            https://www.googleapis.com/auth/gmail.metadata: View your email message metadata such as labels and headers, but not the email body
            https://www.googleapis.com/auth/gmail.settings.basic: See, edit, create, or change your email settings and filters in Gmail
            https://www.googleapis.com/auth/gmail.labels: See and edit your email labels
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    settings_imap:
      id: googleworkspace.gmail.settings_imap
      name: settings_imap
      title: Settings_imap
      methods:
        users_settings_getImap:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1imap/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_imap/methods/users_settings_getImap'
        insert: []
        update: []
        delete: []
    settings:
      id: googleworkspace.gmail.settings
      name: settings
      title: Settings
      methods:
        users_settings_updateImap:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1imap/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_updateVacation:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1vacation/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_updateLanguage:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1language/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_updatePop:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1pop/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_updateAutoForwarding:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1autoForwarding/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    settings_vacation:
      id: googleworkspace.gmail.settings_vacation
      name: settings_vacation
      title: Settings_vacation
      methods:
        users_settings_getVacation:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1vacation/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_vacation/methods/users_settings_getVacation'
        insert: []
        update: []
        delete: []
    settings_language:
      id: googleworkspace.gmail.settings_language
      name: settings_language
      title: Settings_language
      methods:
        users_settings_getLanguage:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1language/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_language/methods/users_settings_getLanguage'
        insert: []
        update: []
        delete: []
    settings_pop:
      id: googleworkspace.gmail.settings_pop
      name: settings_pop
      title: Settings_pop
      methods:
        users_settings_getPop:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1pop/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_pop/methods/users_settings_getPop'
        insert: []
        update: []
        delete: []
    settings_auto_forwarding:
      id: googleworkspace.gmail.settings_auto_forwarding
      name: settings_auto_forwarding
      title: Settings_auto_forwarding
      methods:
        users_settings_getAutoForwarding:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1autoForwarding/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings_auto_forwarding/methods/users_settings_getAutoForwarding'
        insert: []
        update: []
        delete: []
    keypairs:
      id: googleworkspace.gmail.keypairs
      name: keypairs
      title: Keypairs
      methods:
        users_settings_cse_keypairs_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1keypairs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_keypairs_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1keypairs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_keypairs_obliterate:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1keypairs~1{keyPairId}:obliterate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_keypairs_disable:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1keypairs~1{keyPairId}:disable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_keypairs_enable:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1keypairs~1{keyPairId}:enable/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_keypairs_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1keypairs~1{keyPairId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/keypairs/methods/users_settings_cse_keypairs_get'
          - $ref: '#/components/x-stackQL-resources/keypairs/methods/users_settings_cse_keypairs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/keypairs/methods/users_settings_cse_keypairs_create'
        update: []
        delete: []
    identities:
      id: googleworkspace.gmail.identities
      name: identities
      title: Identities
      methods:
        users_settings_cse_identities_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1identities/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_identities_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1identities/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_identities_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1identities~1{cseEmailAddress}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_identities_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1identities~1{cseEmailAddress}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_cse_identities_patch:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1cse~1identities~1{emailAddress}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/identities/methods/users_settings_cse_identities_get'
          - $ref: '#/components/x-stackQL-resources/identities/methods/users_settings_cse_identities_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/identities/methods/users_settings_cse_identities_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/identities/methods/users_settings_cse_identities_delete'
    forwarding_addresses:
      id: googleworkspace.gmail.forwarding_addresses
      name: forwarding_addresses
      title: Forwarding_addresses
      methods:
        users_settings_forwardingAddresses_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1forwardingAddresses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_forwardingAddresses_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1forwardingAddresses/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_forwardingAddresses_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1forwardingAddresses~1{forwardingEmail}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_forwardingAddresses_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1forwardingAddresses~1{forwardingEmail}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/forwarding_addresses/methods/users_settings_forwardingAddresses_get'
          - $ref: '#/components/x-stackQL-resources/forwarding_addresses/methods/users_settings_forwardingAddresses_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/forwarding_addresses/methods/users_settings_forwardingAddresses_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/forwarding_addresses/methods/users_settings_forwardingAddresses_delete'
    send_as:
      id: googleworkspace.gmail.send_as
      name: send_as
      title: Send_as
      methods:
        users_settings_sendAs_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_patch:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_update:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_verify:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}~1verify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/send_as/methods/users_settings_sendAs_get'
          - $ref: '#/components/x-stackQL-resources/send_as/methods/users_settings_sendAs_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/send_as/methods/users_settings_sendAs_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/send_as/methods/users_settings_sendAs_delete'
    smime_info:
      id: googleworkspace.gmail.smime_info
      name: smime_info
      title: Smime_info
      methods:
        users_settings_sendAs_smimeInfo_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}~1smimeInfo~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_smimeInfo_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}~1smimeInfo~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_smimeInfo_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}~1smimeInfo/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_smimeInfo_insert:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}~1smimeInfo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_sendAs_smimeInfo_setDefault:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1sendAs~1{sendAsEmail}~1smimeInfo~1{id}~1setDefault/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/smime_info/methods/users_settings_sendAs_smimeInfo_get'
          - $ref: '#/components/x-stackQL-resources/smime_info/methods/users_settings_sendAs_smimeInfo_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/smime_info/methods/users_settings_sendAs_smimeInfo_delete'
    filters:
      id: googleworkspace.gmail.filters
      name: filters
      title: Filters
      methods:
        users_settings_filters_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1filters~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_filters_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1filters~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_filters_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1filters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_filters_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1filters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/filters/methods/users_settings_filters_get'
          - $ref: '#/components/x-stackQL-resources/filters/methods/users_settings_filters_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/filters/methods/users_settings_filters_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/filters/methods/users_settings_filters_delete'
    delegates:
      id: googleworkspace.gmail.delegates
      name: delegates
      title: Delegates
      methods:
        users_settings_delegates_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1delegates~1{delegateEmail}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_delegates_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1delegates~1{delegateEmail}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_delegates_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1delegates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_settings_delegates_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1settings~1delegates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/delegates/methods/users_settings_delegates_get'
          - $ref: '#/components/x-stackQL-resources/delegates/methods/users_settings_delegates_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/delegates/methods/users_settings_delegates_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/delegates/methods/users_settings_delegates_delete'
    attachments:
      id: googleworkspace.gmail.attachments
      name: attachments
      title: Attachments
      methods:
        users_messages_attachments_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1{messageId}~1attachments~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/attachments/methods/users_messages_attachments_get'
        insert: []
        update: []
        delete: []
    messages:
      id: googleworkspace.gmail.messages
      name: messages
      title: Messages
      methods:
        users_messages_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_import:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1import/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_untrash:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1{id}~1untrash/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_modify:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1{id}~1modify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_trash:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1{id}~1trash/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_send:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1send/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_insert:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_batchDelete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_messages_batchModify:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1messages~1batchModify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/messages/methods/users_messages_get'
          - $ref: '#/components/x-stackQL-resources/messages/methods/users_messages_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/messages/methods/users_messages_delete'
    drafts:
      id: googleworkspace.gmail.drafts
      name: drafts
      title: Drafts
      methods:
        users_drafts_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1drafts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_drafts_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1drafts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_drafts_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1drafts~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_drafts_update:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1drafts~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_drafts_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1drafts~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_drafts_send:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1drafts~1send/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/drafts/methods/users_drafts_get'
          - $ref: '#/components/x-stackQL-resources/drafts/methods/users_drafts_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/drafts/methods/users_drafts_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/drafts/methods/users_drafts_delete'
    history:
      id: googleworkspace.gmail.history
      name: history
      title: History
      methods:
        users_history_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1history/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/history/methods/users_history_list'
        insert: []
        update: []
        delete: []
    labels:
      id: googleworkspace.gmail.labels
      name: labels
      title: Labels
      methods:
        users_labels_patch:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1labels~1{id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_labels_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1labels~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_labels_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1labels~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_labels_update:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1labels~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_labels_create:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1labels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_labels_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1labels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/labels/methods/users_labels_get'
          - $ref: '#/components/x-stackQL-resources/labels/methods/users_labels_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/labels/methods/users_labels_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/labels/methods/users_labels_delete'
    threads:
      id: googleworkspace.gmail.threads
      name: threads
      title: Threads
      methods:
        users_threads_delete:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1threads~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_threads_get:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1threads~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_threads_list:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1threads/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_threads_modify:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1threads~1{id}~1modify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_threads_untrash:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1threads~1{id}~1untrash/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        users_threads_trash:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1threads~1{id}~1trash/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/threads/methods/users_threads_get'
          - $ref: '#/components/x-stackQL-resources/threads/methods/users_threads_list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/threads/methods/users_threads_delete'
    users:
      id: googleworkspace.gmail.users
      name: users
      title: Users
      methods:
        watch:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    users_profile:
      id: googleworkspace.gmail.users_profile
      name: users_profile
      title: Users_profile
      methods:
        users_getProfile:
          operation:
            $ref: '#/paths/~1gmail~1v1~1users~1{userId}~1profile/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users_profile/methods/users_getProfile'
        insert: []
        update: []
        delete: []
paths:
  /gmail/v1/users/{userId}/settings/imap:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/oauth_token'
    get:
      description: Gets IMAP settings.
      operationId: gmail.users.settings.getImap
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImapSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings_imap
      x-stackQL-verb: select
    put:
      description: Updates IMAP settings.
      operationId: gmail.users.settings.updateImap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImapSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImapSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/vacation:
    parameters: *ref_1
    get:
      description: Gets vacation responder settings.
      operationId: gmail.users.settings.getVacation
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings_vacation
      x-stackQL-verb: select
    put:
      description: Updates vacation responder settings.
      operationId: gmail.users.settings.updateVacation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacationSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/language:
    parameters: *ref_1
    get:
      description: Gets language settings.
      operationId: gmail.users.settings.getLanguage
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings_language
      x-stackQL-verb: select
    put:
      description: Updates language settings. If successful, the return object contains the `displayLanguage` that was saved for the user, which may differ from the value passed into the request. This is because the requested `displayLanguage` may not be directly supported by Gmail but have a close variant that is, and so the variant may be chosen and saved instead.
      operationId: gmail.users.settings.updateLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/pop:
    parameters: *ref_1
    put:
      description: Updates POP settings.
      operationId: gmail.users.settings.updatePop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PopSettings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-verb: exec
    get:
      description: Gets POP settings.
      operationId: gmail.users.settings.getPop
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopSettings'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings_pop
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/settings/autoForwarding:
    parameters: *ref_1
    get:
      description: Gets the auto-forwarding setting for the specified account.
      operationId: gmail.users.settings.getAutoForwarding
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoForwarding'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings_auto_forwarding
      x-stackQL-verb: select
    put:
      description: Updates the auto-forwarding setting for the specified account. A verified forwarding address must be specified when auto-forwarding is enabled. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.updateAutoForwarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoForwarding'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoForwarding'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: settings
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/cse/keypairs:
    parameters: *ref_1
    get:
      description: Lists client-side encryption key pairs for an authenticated user. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.keypairs.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCseKeyPairsResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: keypairs
      x-stackQL-verb: select
    post:
      description: Creates and uploads a client-side encryption S/MIME public key certificate chain and private key metadata for the authenticated user. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.keypairs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CseKeyPair'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CseKeyPair'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: keypairs
      x-stackQL-verb: insert
  /gmail/v1/users/{userId}/settings/cse/keypairs/{keyPairId}:obliterate:
    parameters: *ref_1
    post:
      description: Deletes a client-side encryption key pair permanently and immediately. You can only permanently delete key pairs that have been turned off for more than 30 days. To turn off a key pair, use the DisableCseKeyPair method. Gmail can't restore or decrypt any messages that were encrypted by an obliterated key. Authenticated users and Google Workspace administrators lose access to reading the encrypted messages. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.keypairs.obliterate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObliterateCseKeyPairRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: keyPairId
          required: true
          schema:
            type: string
      x-stackQL-resource: keypairs
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/cse/keypairs/{keyPairId}:disable:
    parameters: *ref_1
    post:
      description: Turns off a client-side encryption key pair. The authenticated user can no longer use the key pair to decrypt incoming CSE message texts or sign outgoing CSE mail. To regain access, use the EnableCseKeyPair to turn on the key pair. After 30 days, you can permanently delete the key pair by using the ObliterateCseKeyPair method. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.keypairs.disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableCseKeyPairRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CseKeyPair'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: keyPairId
          required: true
          schema:
            type: string
      x-stackQL-resource: keypairs
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/cse/keypairs/{keyPairId}:enable:
    parameters: *ref_1
    post:
      description: Turns on a client-side encryption key pair that was turned off. The key pair becomes active again for any associated client-side encryption identities. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.keypairs.enable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableCseKeyPairRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CseKeyPair'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: keyPairId
          required: true
          schema:
            type: string
      x-stackQL-resource: keypairs
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/cse/keypairs/{keyPairId}:
    parameters: *ref_1
    get:
      description: Retrieves an existing client-side encryption key pair. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.keypairs.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CseKeyPair'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: keyPairId
          required: true
          schema:
            type: string
      x-stackQL-resource: keypairs
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/settings/cse/identities:
    parameters: *ref_1
    get:
      description: Lists the client-side encrypted identities for an authenticated user. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.identities.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCseIdentitiesResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: identities
      x-stackQL-verb: select
    post:
      description: Creates and configures a client-side encryption identity that's authorized to send mail from the user account. Google publishes the S/MIME certificate to a shared domain-wide directory so that people within a Google Workspace organization can encrypt and send mail to the identity. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.identities.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CseIdentity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CseIdentity'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: identities
      x-stackQL-verb: insert
  /gmail/v1/users/{userId}/settings/cse/identities/{cseEmailAddress}:
    parameters: *ref_1
    get:
      description: Retrieves a client-side encryption identity configuration. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.identities.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CseIdentity'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: cseEmailAddress
          required: true
          schema:
            type: string
      x-stackQL-resource: identities
      x-stackQL-verb: select
    delete:
      description: Deletes a client-side encryption identity. The authenticated user can no longer use the identity to send encrypted messages. You cannot restore the identity after you delete it. Instead, use the CreateCseIdentity method to create another identity with the same configuration. [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.identities.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: cseEmailAddress
          required: true
          schema:
            type: string
      x-stackQL-resource: identities
      x-stackQL-verb: delete
  /gmail/v1/users/{userId}/settings/cse/identities/{emailAddress}:
    parameters: *ref_1
    patch:
      description: Associates a different key pair with an existing client-side encryption identity. The updated key pair must validate against Google's [S/MIME certificate profiles](https://support.google.com/a/answer/7300887). [Beta](https://workspace.google.com/terms/service-terms/index.html).
      operationId: gmail.users.settings.cse.identities.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CseIdentity'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CseIdentity'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: emailAddress
          required: true
          schema:
            type: string
      x-stackQL-resource: identities
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/forwardingAddresses:
    parameters: *ref_1
    get:
      description: Lists the forwarding addresses for the specified account.
      operationId: gmail.users.settings.forwardingAddresses.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListForwardingAddressesResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: forwarding_addresses
      x-stackQL-verb: select
    post:
      description: Creates a forwarding address. If ownership verification is required, a message will be sent to the recipient and the resource's verification status will be set to `pending`; otherwise, the resource will be created with verification status set to `accepted`. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.forwardingAddresses.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardingAddress'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardingAddress'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: forwarding_addresses
      x-stackQL-verb: insert
  /gmail/v1/users/{userId}/settings/forwardingAddresses/{forwardingEmail}:
    parameters: *ref_1
    delete:
      description: Deletes the specified forwarding address and revokes any verification that may have been required. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.forwardingAddresses.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: forwardingEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: forwarding_addresses
      x-stackQL-verb: delete
    get:
      description: Gets the specified forwarding address.
      operationId: gmail.users.settings.forwardingAddresses.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardingAddress'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: forwardingEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: forwarding_addresses
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/settings/sendAs:
    parameters: *ref_1
    get:
      description: Lists the send-as aliases for the specified account. The result includes the primary send-as address associated with the account as well as any custom "from" aliases.
      operationId: gmail.users.settings.sendAs.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSendAsResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: send_as
      x-stackQL-verb: select
    post:
      description: Creates a custom "from" send-as alias. If an SMTP MSA is specified, Gmail will attempt to connect to the SMTP service to validate the configuration before creating the alias. If ownership verification is required for the alias, a message will be sent to the email address and the resource's verification status will be set to `pending`; otherwise, the resource will be created with verification status set to `accepted`. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAs'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAs'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: send_as
      x-stackQL-verb: insert
  /gmail/v1/users/{userId}/settings/sendAs/{sendAsEmail}:
    parameters: *ref_1
    get:
      description: Gets the specified send-as alias. Fails with an HTTP 404 error if the specified address is not a member of the collection.
      operationId: gmail.users.settings.sendAs.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAs'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: send_as
      x-stackQL-verb: select
    patch:
      description: Patch the specified send-as alias.
      operationId: gmail.users.settings.sendAs.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAs'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAs'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: send_as
      x-stackQL-verb: exec
    put:
      description: Updates a send-as alias. If a signature is provided, Gmail will sanitize the HTML before saving it with the alias. Addresses other than the primary address for the account can only be updated by service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAs'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendAs'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: send_as
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified send-as alias. Revokes any verification that may have been required for using it. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: send_as
      x-stackQL-verb: delete
  /gmail/v1/users/{userId}/settings/sendAs/{sendAsEmail}/verify:
    parameters: *ref_1
    post:
      description: Sends a verification email to the specified send-as alias address. The verification status must be `pending`. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.sendAs.verify
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: send_as
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/sendAs/{sendAsEmail}/smimeInfo/{id}:
    parameters: *ref_1
    get:
      description: Gets the specified S/MIME config for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmimeInfo'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: smime_info
      x-stackQL-verb: select
    delete:
      description: Deletes the specified S/MIME config for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: smime_info
      x-stackQL-verb: delete
  /gmail/v1/users/{userId}/settings/sendAs/{sendAsEmail}/smimeInfo:
    parameters: *ref_1
    get:
      description: Lists S/MIME configs for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSmimeInfoResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: smime_info
      x-stackQL-verb: select
    post:
      description: Insert (upload) the given S/MIME config for the specified send-as alias. Note that pkcs12 format is required for the key.
      operationId: gmail.users.settings.sendAs.smimeInfo.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmimeInfo'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmimeInfo'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: smime_info
      x-stackQL-verb: insert
  /gmail/v1/users/{userId}/settings/sendAs/{sendAsEmail}/smimeInfo/{id}/setDefault:
    parameters: *ref_1
    post:
      description: Sets the default S/MIME config for the specified send-as alias.
      operationId: gmail.users.settings.sendAs.smimeInfo.setDefault
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: sendAsEmail
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: smime_info
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/settings/filters/{id}:
    parameters: *ref_1
    delete:
      description: Immediately and permanently deletes the specified filter.
      operationId: gmail.users.settings.filters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: delete
    get:
      description: Gets a filter.
      operationId: gmail.users.settings.filters.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/settings/filters:
    parameters: *ref_1
    get:
      description: Lists the message filters of a Gmail user.
      operationId: gmail.users.settings.filters.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFiltersResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: select
    post:
      description: 'Creates a filter. Note: you can only create a maximum of 1,000 filters.'
      operationId: gmail.users.settings.filters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filter'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: filters
      x-stackQL-verb: insert
  /gmail/v1/users/{userId}/settings/delegates/{delegateEmail}:
    parameters: *ref_1
    get:
      description: Gets the specified delegate. Note that a delegate user must be referred to by their primary email address, and not an email alias. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.delegates.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegate'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: delegateEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: delegates
      x-stackQL-verb: select
    delete:
      description: Removes the specified delegate (which can be of any verification status), and revokes any verification that may have been required for using it. Note that a delegate user must be referred to by their primary email address, and not an email alias. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.delegates.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: delegateEmail
          required: true
          schema:
            type: string
      x-stackQL-resource: delegates
      x-stackQL-verb: delete
  /gmail/v1/users/{userId}/settings/delegates:
    parameters: *ref_1
    post:
      description: Adds a delegate with its verification status set directly to `accepted`, without sending any verification email. The delegate user must be a member of the same G Suite organization as the delegator user. Gmail imposes limitations on the number of delegates and delegators each user in a G Suite organization can have. These limits depend on your organization, but in general each user can have up to 25 delegates and up to 10 delegators. Note that a delegate user must be referred to by their primary email address, and not an email alias. Also note that when a new delegate is created, there may be up to a one minute delay before the new delegate is available for use. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.delegates.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delegate'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.sharing
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.sharing
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegate'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: delegates
      x-stackQL-verb: insert
    get:
      description: Lists the delegates for the specified account. This method is only available to service account clients that have been delegated domain-wide authority.
      operationId: gmail.users.settings.delegates.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.settings.basic
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.settings.basic
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDelegatesResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: delegates
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/messages/{messageId}/attachments/{id}:
    parameters: *ref_1
    get:
      description: Gets the specified message attachment.
      operationId: gmail.users.messages.attachments.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.action
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.action
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagePartBody'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: messageId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: attachments
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/messages/{id}:
    parameters: *ref_1
    get:
      description: Gets the specified message.
      operationId: gmail.users.messages.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.action
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.action
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: format
          schema:
            type: string
        - in: query
          name: metadataHeaders
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: select
    delete:
      description: Immediately and permanently deletes the specified message. This operation cannot be undone. Prefer `messages.trash` instead.
      operationId: gmail.users.messages.delete
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: delete
  /gmail/v1/users/{userId}/messages/import:
    parameters: *ref_1
    post:
      description: 'Imports a message into only this user''s mailbox, with standard email delivery scanning and classification similar to receiving via SMTP. This method doesn''t perform SPF checks, so it might not work for some spam messages, such as those attempting to perform domain spoofing. This method does not send a message. Note: This function doesn''t trigger forwarding rules or filters set up by the user.'
      operationId: gmail.users.messages.import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.insert
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.insert
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: deleted
          schema:
            type: boolean
        - in: query
          name: internalDateSource
          schema:
            type: string
        - in: query
          name: processForCalendar
          schema:
            type: boolean
        - in: query
          name: neverMarkSpam
          schema:
            type: boolean
      x-stackQL-resource: messages
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/messages/{id}/untrash:
    parameters: *ref_1
    post:
      description: Removes the specified message from the trash.
      operationId: gmail.users.messages.untrash
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/messages/{id}/modify:
    parameters: *ref_1
    post:
      description: Modifies the labels on the specified message.
      operationId: gmail.users.messages.modify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyMessageRequest'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/messages/{id}/trash:
    parameters: *ref_1
    post:
      description: Moves the specified message to the trash.
      operationId: gmail.users.messages.trash
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/messages/send:
    parameters: *ref_1
    post:
      description: Sends the specified message to the recipients in the `To`, `Cc`, and `Bcc` headers.
      operationId: gmail.users.messages.send
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.send
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.send
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/messages:
    parameters: *ref_1
    get:
      description: Lists the messages in the user's mailbox.
      operationId: gmail.users.messages.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMessagesResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: labelIds
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: includeSpamTrash
          schema:
            type: boolean
      x-stackQL-resource: messages
      x-stackQL-verb: select
    post:
      description: Directly inserts a message into only this user's mailbox similar to `IMAP APPEND`, bypassing most scanning and classification. Does not send a message.
      operationId: gmail.users.messages.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.insert
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.insert
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: internalDateSource
          schema:
            type: string
        - in: query
          name: deleted
          schema:
            type: boolean
      x-stackQL-resource: messages
      x-stackQL-verb: insert
  /gmail/v1/users/{userId}/messages/batchDelete:
    parameters: *ref_1
    post:
      description: Deletes many messages by message ID. Provides no guarantees that messages were not already deleted or even existed at all.
      operationId: gmail.users.messages.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteMessagesRequest'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: delete
  /gmail/v1/users/{userId}/messages/batchModify:
    parameters: *ref_1
    post:
      description: Modifies the labels on the specified messages.
      operationId: gmail.users.messages.batchModify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchModifyMessagesRequest'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: messages
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/drafts:
    parameters: *ref_1
    post:
      description: Creates a new draft with the `DRAFT` label.
      operationId: gmail.users.drafts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Draft'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: drafts
      x-stackQL-verb: insert
    get:
      description: Lists the drafts in the user's mailbox.
      operationId: gmail.users.drafts.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDraftsResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: includeSpamTrash
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: drafts
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/drafts/{id}:
    parameters: *ref_1
    delete:
      description: Immediately and permanently deletes the specified draft. Does not simply trash it.
      operationId: gmail.users.drafts.delete
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: drafts
      x-stackQL-verb: delete
    put:
      description: Replaces a draft's content.
      operationId: gmail.users.drafts.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Draft'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: drafts
      x-stackQL-verb: exec
    get:
      description: Gets the specified draft.
      operationId: gmail.users.drafts.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Draft'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: format
          schema:
            type: string
      x-stackQL-resource: drafts
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/drafts/send:
    parameters: *ref_1
    post:
      description: Sends the specified, existing draft to the recipients in the `To`, `Cc`, and `Bcc` headers.
      operationId: gmail.users.drafts.send
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Draft'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.action.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: drafts
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/history:
    parameters: *ref_1
    get:
      description: Lists the history of all changes to the given mailbox. History results are returned in chronological order (increasing `historyId`).
      operationId: gmail.users.history.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHistoryResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: labelId
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: historyTypes
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: startHistoryId
          schema:
            type: string
      x-stackQL-resource: history
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/labels/{id}:
    parameters: *ref_1
    patch:
      description: Patch the specified label.
      operationId: gmail.users.labels.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.labels
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.labels
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: exec
    delete:
      description: Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to.
      operationId: gmail.users.labels.delete
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.labels
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.labels
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: delete
    get:
      description: Gets the specified label.
      operationId: gmail.users.labels.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.labels
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.labels
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: select
    put:
      description: Updates the specified label.
      operationId: gmail.users.labels.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.labels
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.labels
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/labels:
    parameters: *ref_1
    post:
      description: Creates a new label.
      operationId: gmail.users.labels.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.labels
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.labels
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: insert
    get:
      description: Lists all labels in the user's mailbox.
      operationId: gmail.users.labels.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.labels
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.labels
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLabelsResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: labels
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/threads/{id}:
    parameters: *ref_1
    delete:
      description: Immediately and permanently deletes the specified thread. Any messages that belong to the thread are also deleted. This operation cannot be undone. Prefer `threads.trash` instead.
      operationId: gmail.users.threads.delete
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: threads
      x-stackQL-verb: delete
    get:
      description: Gets the specified thread.
      operationId: gmail.users.threads.get
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.action
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.action
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.addons.current.message.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.addons.current.message.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: metadataHeaders
          schema:
            type: string
        - in: query
          name: format
          schema:
            type: string
      x-stackQL-resource: threads
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/threads:
    parameters: *ref_1
    get:
      description: Lists the threads in the user's mailbox.
      operationId: gmail.users.threads.list
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListThreadsResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: query
          name: includeSpamTrash
          schema:
            type: boolean
        - in: query
          name: labelIds
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: threads
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/threads/{id}/modify:
    parameters: *ref_1
    post:
      description: Modifies the labels applied to the thread. This applies to all messages in the thread.
      operationId: gmail.users.threads.modify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyThreadRequest'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: threads
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/threads/{id}/untrash:
    parameters: *ref_1
    post:
      description: Removes the specified thread from the trash. Any messages that belong to the thread are also removed from the trash.
      operationId: gmail.users.threads.untrash
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: threads
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/threads/{id}/trash:
    parameters: *ref_1
    post:
      description: Moves the specified thread to the trash. Any messages that belong to the thread are also moved to the trash.
      operationId: gmail.users.threads.trash
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      x-stackQL-resource: threads
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/watch:
    parameters: *ref_1
    post:
      description: Set up or update a push notification watch on the given user mailbox.
      operationId: gmail.users.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatchRequest'
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatchResponse'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: exec
  /gmail/v1/users/{userId}/profile:
    parameters: *ref_1
    get:
      description: Gets the current user's Gmail profile.
      operationId: gmail.users.getProfile
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.compose
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.compose
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: users_profile
      x-stackQL-verb: select
  /gmail/v1/users/{userId}/stop:
    parameters: *ref_1
    post:
      description: Stop receiving push notifications for the given user mailbox.
      operationId: gmail.users.stop
      security:
        - Oauth2:
            - https://mail.google.com/
          Oauth2c:
            - https://mail.google.com/
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.modify
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.modify
        - Oauth2:
            - https://www.googleapis.com/auth/gmail.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/gmail.readonly
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      x-stackQL-resource: users
      x-stackQL-verb: exec
