openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Chrome Policy API
  description: The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
  version: v1
  x-discovery-doc-revision: '20230117'
  x-generated-date: '2023-01-19'
externalDocs:
  url: http://developers.google.com/chrome/policy
servers:
  - url: https://chromepolicy.googleapis.com
components:
  schemas:
    Proto2FieldDescriptorProto:
      type: object
      id: Proto2FieldDescriptorProto
      description: Describes a field within a message.
      properties:
        defaultValue:
          description: For numeric types, contains the original text representation of the value. For booleans, "true" or "false". For strings, contains the default text contents (not escaped in any way). For bytes, contains the C escaped value. All bytes >= 128 are escaped.
          type: string
        label:
          enum:
            - LABEL_OPTIONAL
            - LABEL_REQUIRED
            - LABEL_REPEATED
          type: string
          enumDescriptions:
            - 0 is reserved for errors
            - ''
            - ''
        jsonName:
          description: JSON name of this field. The value is set by protocol compiler. If the user has set a "json_name" option on this field, that option's value will be used. Otherwise, it's deduced from the field's name by converting it to camelCase.
          type: string
        proto3Optional:
          description: If true, this is a proto3 "optional". When a proto3 field is optional, it tracks presence regardless of field type. When proto3_optional is true, this field must be belong to a oneof to signal to old proto3 clients that presence is tracked for this field. This oneof is known as a "synthetic" oneof, and this field must be its sole member (each proto3 optional field gets its own synthetic oneof). Synthetic oneofs exist in the descriptor only, and do not generate any API. Synthetic oneofs must be ordered after all "real" oneofs. For message fields, proto3_optional doesn't create any semantic change, since non-repeated message fields always track presence. However it still indicates the semantic detail of whether the user wrote "optional" or not. This can be useful for round-tripping the .proto file. For consistency we give message fields a synthetic oneof also, even though it is not required to track presence. This is especially important because the parser can't tell if a field is a message or an enum, so it must always create a synthetic oneof. Proto2 optional fields do not set this flag, because they already indicate optional with `LABEL_OPTIONAL`.
          type: boolean
        type:
          enumDescriptions:
            - 0 is reserved for errors. Order is weird for historical reasons.
            - ''
            - Not ZigZag encoded. Negative numbers take 10 bytes. Use TYPE_SINT64 if negative values are likely.
            - ''
            - Not ZigZag encoded. Negative numbers take 10 bytes. Use TYPE_SINT32 if negative values are likely.
            - ''
            - ''
            - ''
            - ''
            - Tag-delimited aggregate. Group type is deprecated and not supported in proto3. However, Proto3 implementations should still be able to parse the group wire format and treat group fields as unknown fields.
            - Length-delimited aggregate.
            - New in version 2.
            - ''
            - ''
            - ''
            - ''
            - Uses ZigZag encoding.
            - Uses ZigZag encoding.
          type: string
          enum:
            - TYPE_DOUBLE
            - TYPE_FLOAT
            - TYPE_INT64
            - TYPE_UINT64
            - TYPE_INT32
            - TYPE_FIXED64
            - TYPE_FIXED32
            - TYPE_BOOL
            - TYPE_STRING
            - TYPE_GROUP
            - TYPE_MESSAGE
            - TYPE_BYTES
            - TYPE_UINT32
            - TYPE_ENUM
            - TYPE_SFIXED32
            - TYPE_SFIXED64
            - TYPE_SINT32
            - TYPE_SINT64
          description: If type_name is set, this need not be set. If both this and type_name are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
        typeName:
          description: For message and enum types, this is the name of the type. If the name starts with a '.', it is fully-qualified. Otherwise, C++-like scoping rules are used to find the type (i.e. first the nested types within this message are searched, then within the parent, on up to the root namespace).
          type: string
        number:
          type: integer
          format: int32
        name:
          type: string
        oneofIndex:
          format: int32
          description: If set, gives the index of a oneof in the containing type's oneof_decl list. This field is a member of that oneof.
          type: integer
    Proto2FileDescriptorProto:
      id: Proto2FileDescriptorProto
      type: object
      properties:
        syntax:
          type: string
          description: The syntax of the proto file. The supported values are "proto2", "proto3", and "editions". If `edition` is present, this value must be "editions".
        messageType:
          type: array
          description: All top-level definitions in this file.
          items:
            $ref: '#/components/schemas/Proto2DescriptorProto'
        name:
          description: file name, relative to root of source tree
          type: string
        package:
          description: e.g. "foo", "foo.bar", etc.
          type: string
        enumType:
          items:
            $ref: '#/components/schemas/Proto2EnumDescriptorProto'
          type: array
      description: Describes a complete .proto file.
    GoogleChromePolicyVersionsV1PolicyValue:
      properties:
        value:
          type: object
          additionalProperties:
            description: Properties of the object.
            type: any
          description: The value of the policy that is compatible with the schema that it is associated with.
        policySchema:
          description: The fully qualified name of the policy schema associated with this policy.
          type: string
      id: GoogleChromePolicyVersionsV1PolicyValue
      type: object
      description: A particular value for a policy managed by the service.
    GoogleChromePolicyVersionsV1DefineNetworkResponse:
      id: GoogleChromePolicyVersionsV1DefineNetworkResponse
      description: Response object for creating a network.
      type: object
      properties:
        networkId:
          description: Network ID of the new created network.
          type: string
        settings:
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting'
          type: array
          description: Detailed network settings of the new created network
        targetResource:
          type: string
          description: 'The target resource on which this new network will be defined. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
    GoogleChromePolicyVersionsV1DefineNetworkRequest:
      properties:
        targetResource:
          description: 'Required. The target resource on which this new network will be defined. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
          type: string
        settings:
          description: Required. Detailed network settings.
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting'
        name:
          type: string
          description: Required. Name of the new created network.
      id: GoogleChromePolicyVersionsV1DefineNetworkRequest
      description: Request object for creating a new network.
      type: object
    GoogleChromePolicyVersionsV1ResolveResponse:
      type: object
      id: GoogleChromePolicyVersionsV1ResolveResponse
      properties:
        nextPageToken:
          description: The page token used to get the next set of resolved policies found by the request.
          type: string
        resolvedPolicies:
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ResolvedPolicy'
          description: The list of resolved policies found by the resolve request.
      description: Response message for getting the resolved policy value for a specific target.
    Proto2OneofDescriptorProto:
      properties:
        name:
          type: string
      type: object
      description: Describes a oneof.
      id: Proto2OneofDescriptorProto
    GoogleChromePolicyVersionsV1UploadPolicyFileResponse:
      description: Response message for downloading an uploaded file.
      type: object
      id: GoogleChromePolicyVersionsV1UploadPolicyFileResponse
      properties:
        downloadUri:
          description: The uri for end user to download the file.
          type: string
    GoogleChromePolicyVersionsV1PolicySchema:
      id: GoogleChromePolicyVersionsV1PolicySchema
      properties:
        fieldDescriptions:
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription'
          type: array
          description: Output only. Detailed description of each field that is part of the schema.
          readOnly: true
        validTargetResources:
          type: array
          items:
            type: string
            enumDescriptions:
              - Unspecified target resource.
              - Organizational Unit target resource.
              - Group target resource.
            enum:
              - TARGET_RESOURCE_UNSPECIFIED
              - ORG_UNIT
              - GROUP
          readOnly: true
          description: Output only. Information about applicable target resources for the policy.
        definition:
          $ref: '#/components/schemas/Proto2FileDescriptorProto'
          description: Schema definition using proto descriptor.
        categoryTitle:
          description: Title of the category in which a setting belongs.
          type: string
        name:
          type: string
          description: 'Format: name=customers/{customer}/policySchemas/{schema_namespace}'
        notices:
          description: Output only. Special notice messages related to setting certain values in certain fields in the schema.
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription'
          readOnly: true
          type: array
        supportUri:
          description: Output only. URI to related support article for this schema.
          type: string
          readOnly: true
        accessRestrictions:
          readOnly: true
          description: Output only. Specific access restrictions related to this policy.
          items:
            type: string
          type: array
        policyApiLifecycle:
          $ref: '#/components/schemas/ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle'
          description: Output only. Current lifecycle information.
          readOnly: true
        policyDescription:
          type: string
          description: Output only. Description about the policy schema for user consumption.
          readOnly: true
        additionalTargetKeyNames:
          type: array
          readOnly: true
          description: Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1AdditionalTargetKeyName'
        policyApiLifeycle:
          $ref: '#/components/schemas/ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle'
          description: Deprecated field because of typo.
        schemaName:
          readOnly: true
          description: Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies BatchModifyOrgUnitPolicies BatchModifyGroupPolicies or BatchDeleteGroupPolicies.
          type: string
      type: object
      description: Resource representing a policy schema.
    Proto2DescriptorProto:
      id: Proto2DescriptorProto
      type: object
      description: Describes a message type.
      properties:
        nestedType:
          items:
            $ref: '#/components/schemas/Proto2DescriptorProto'
          type: array
        field:
          type: array
          items:
            $ref: '#/components/schemas/Proto2FieldDescriptorProto'
        oneofDecl:
          type: array
          items:
            $ref: '#/components/schemas/Proto2OneofDescriptorProto'
        enumType:
          items:
            $ref: '#/components/schemas/Proto2EnumDescriptorProto'
          type: array
        name:
          type: string
    GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails:
      properties:
        certificateReferences:
          readOnly: true
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1CertificateReference'
          description: Output only. If the certificate was not removed, a list of references to the certificate that prevented it from being removed. Only unreferenced certificates can be removed.
          type: array
      id: GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails
      type: object
      description: Details of the errors encountered during a remove certificate request. This message will be returned as part of the details of a google.rpc.Status returned to the user when there is an error in their request.
    GoogleChromePolicyVersionsV1FieldConstraints:
      type: object
      properties:
        numericRangeConstraint:
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1NumericRangeConstraint'
          description: The allowed range for numeric fields.
      description: Information about any range constraints.
      id: GoogleChromePolicyVersionsV1FieldConstraints
    GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest:
      description: Request message for specifying that multiple policy values will be deleted.
      type: object
      properties:
        requests:
          type: array
          description: 'List of policies that will be deleted as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to a group resource. 3. All `policyTargetKey` values must have the same `app_id` key name in the `additionalTargetKeys`. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. '
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest'
      id: GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest
    GoogleChromePolicyVersionsV1PolicySchemaFieldDescription:
      description: Provides detailed information for a particular field that is part of a PolicySchema.
      id: GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
      type: object
      properties:
        fieldDescription:
          readOnly: true
          description: Output only. The description of the field.
          type: string
        defaultValue:
          description: Output only. Client default if the policy is unset.
          type: any
          readOnly: true
        fieldConstraints:
          readOnly: true
          description: Output only. Information on any input constraints associated on the values for the field.
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1FieldConstraints'
        requiredItems:
          description: Output only. Provides a list of fields that are required to be set if this field has a certain value.
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaRequiredItems'
          readOnly: true
        description:
          description: Deprecated. Use name and field_description instead. The description for the field.
          type: string
        nestedFieldDescriptions:
          description: Output only. Provides the description of the fields nested in this field, if the field is a message type that defines multiple fields.
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription'
          readOnly: true
        inputConstraint:
          type: string
          description: Output only. Any input constraints associated on the values for the field.
          readOnly: true
        knownValueDescriptions:
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription'
          readOnly: true
          type: array
          description: Output only. If the field has a set of known values, this field will provide a description for these values.
        name:
          description: Output only. The name of the field.
          type: string
          readOnly: true
        field:
          type: string
          description: Output only. The name of the field for associated with this description.
          readOnly: true
        fieldDependencies:
          description: Output only. Provides a list of fields and values. At least one of the fields must have the corresponding value in order for this field to be allowed to be set.
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies'
          type: array
          readOnly: true
    GoogleChromePolicyVersionsV1DefineCertificateResponse:
      type: object
      id: GoogleChromePolicyVersionsV1DefineCertificateResponse
      properties:
        networkId:
          description: The guid of the certificate created by the action.
          type: string
        settings:
          description: the affiliated settings of the certificate (NOT IMPLEMENTED)
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting'
        targetResource:
          type: string
          description: the resource at which the certificate is defined.
      description: Response object for creating a certificate.
    GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription:
      description: Provides detailed information about a known value that is allowed for a particular field in a PolicySchema.
      type: object
      id: GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription
      properties:
        value:
          description: Output only. The string represenstation of the value that can be set for the field.
          type: string
          readOnly: true
        description:
          readOnly: true
          description: Output only. Additional description for this value.
          type: string
    ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle:
      properties:
        endSupport:
          description: End supporting date for current policy.
          $ref: '#/components/schemas/GoogleTypeDate'
        description:
          description: Description about current life cycle.
          type: string
        policyApiLifecycleStage:
          enum:
            - API_UNSPECIFIED
            - API_PREVIEW
            - API_DEVELOPMENT
            - API_CURRENT
            - API_DEPRECATED
          enumDescriptions:
            - unspecified.
            - Policy is not working yet, but giving developers heads up on format. This stage can transfer to API_DEVELOPEMNT or API_CURRENT.
            - Policy can change format in backward incompatible way (breaking change). This stage can transfer to API_CURRENT or API_DEPRECATED. This could be used for policies launched only to TTs or launched to selected customers for emergency usage.
            - 'Policy in official format. Policy can change format in backward compatible way (non-breaking change). Example: this policy can introduce a new field, which is considered non-breaking change, when field masks are properly utilized. This stage can transfer to API_DEPRECATED.'
            - Please stop using this policy. This policy is deprecated and may/will be removed in the future. Most likely a new policy was introduced to replace this one.
          type: string
          description: Indicate current life cycle stage of the policy API.
      id: ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle
      type: object
    GoogleChromePolicyVersionsV1PolicyTargetKey:
      properties:
        targetResource:
          type: string
          description: 'The target resource on which this policy is applied. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}") * Group ("groups/{group_id}")'
        additionalTargetKeys:
          description: Map containing the additional target key name and value pairs used to further identify the target of the policy.
          type: object
          additionalProperties:
            type: string
      id: GoogleChromePolicyVersionsV1PolicyTargetKey
      description: The key used to identify the target on which the policy will be applied.
      type: object
    GoogleTypeDate:
      properties:
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          type: integer
          format: int32
        day:
          type: integer
          format: int32
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
        year:
          format: int32
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          type: integer
      type: object
      description: 'Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp'
      id: GoogleTypeDate
    GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies:
      description: The field and the value it must have for another field to be allowed to be set.
      properties:
        sourceFieldValue:
          description: The value which the source field must have for this field to be allowed to be set.
          type: string
        sourceField:
          type: string
          description: The source field which this field depends on.
      type: object
      id: GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies
    GoogleChromePolicyVersionsV1ListPolicySchemasResponse:
      id: GoogleChromePolicyVersionsV1ListPolicySchemasResponse
      properties:
        policySchemas:
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchema'
          description: The list of policy schemas that match the query.
        nextPageToken:
          description: The page token used to get the next page of policy schemas.
          type: string
      description: Response message for listing policy schemas that match a filter.
      type: object
    GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest:
      description: Request message for modifying multiple policy values for a specific target.
      id: GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest'
          description: 'List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. '
      type: object
    Proto2EnumValueDescriptorProto:
      description: Describes a value within an enum.
      properties:
        name:
          type: string
        number:
          format: int32
          type: integer
      id: Proto2EnumValueDescriptorProto
      type: object
    GoogleChromePolicyVersionsV1ResolvedPolicy:
      id: GoogleChromePolicyVersionsV1ResolvedPolicy
      type: object
      description: The resolved value of a policy for a given target.
      properties:
        targetKey:
          readOnly: true
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
          description: Output only. The target resource for which the resolved policy value applies.
        value:
          readOnly: true
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyValue'
          description: Output only. The resolved value of the policy.
        sourceKey:
          readOnly: true
          description: Output only. The source resource from which this policy value is obtained. May be the same as `targetKey` if the policy is directly modified on the target, otherwise it would be another resource from which the policy gets its value (if applicable). If not present, the source is the default value for the customer.
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
        addedSourceKey:
          readOnly: true
          description: 'Output only. The added source key establishes at which level an entity was explicitly added for management. This is useful for certain type of policies that are only applied if they are explicitly added for management. For example: apps and networks. An entity can only be deleted from management in an Organizational Unit that it was explicitly added to. If this is not present it means that the policy is managed without the need to explicitly add an entity, for example: standard user or device policies.'
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
    GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest:
      id: GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest
      description: Request message for updating the group priority ordering of an app.
      properties:
        groupIds:
          description: Required. The group IDs, in desired priority ordering.
          type: array
          items:
            type: string
        policyNamespace:
          type: string
          description: Required. The namespace of the policy type for the request.
        policyTargetKey:
          description: Required. The key of the target for which we want to update the group priority ordering. The target resource must point to an app.
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
      type: object
    GoogleProtobufEmpty:
      properties: {}
      id: GoogleProtobufEmpty
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      type: object
    GoogleChromePolicyVersionsV1PolicySchemaRequiredItems:
      properties:
        fieldConditions:
          type: array
          description: The value(s) of the field that provoke required field enforcement. An empty field_conditions implies that any value assigned to this field will provoke required field enforcement.
          items:
            type: string
        requiredFields:
          items:
            type: string
          description: The fields that are required as a consequence of the field conditions.
          type: array
      type: object
      id: GoogleChromePolicyVersionsV1PolicySchemaRequiredItems
      description: The fields that will become required based on the value of this field.
    GoogleChromePolicyVersionsV1PolicyModificationFieldError:
      description: Error information for a modification request of a specific field on a specific policy.
      type: object
      id: GoogleChromePolicyVersionsV1PolicyModificationFieldError
      properties:
        error:
          type: string
          readOnly: true
          description: Output only. The error message related to the field.
        field:
          type: string
          description: Output only. The name of the field with the error.
          readOnly: true
    GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription:
      type: object
      properties:
        noticeMessage:
          readOnly: true
          type: string
          description: Output only. The notice message associate with the value of the field.
        field:
          type: string
          description: Output only. The field name associated with the notice.
          readOnly: true
        noticeValue:
          type: string
          description: Output only. The value of the field that has a notice. When setting the field to this value, the user may be required to acknowledge the notice message in order for the value to be set.
          readOnly: true
        acknowledgementRequired:
          readOnly: true
          type: boolean
          description: Output only. Whether the user needs to acknowledge the notice message before the value can be set.
      description: Provides special notice messages related to a particular value in a field that is part of a PolicySchema.
      id: GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription
    GoogleChromePolicyVersionsV1RemoveCertificateRequest:
      id: GoogleChromePolicyVersionsV1RemoveCertificateRequest
      properties:
        targetResource:
          description: 'Required. The target resource on which this certificate will be removed. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
          type: string
        networkId:
          description: Required. The GUID of the certificate to remove.
          type: string
      description: Request object for removing a certificate.
      type: object
    GoogleChromePolicyVersionsV1NumericRangeConstraint:
      type: object
      properties:
        maximum:
          format: int64
          description: Maximum value.
          type: string
        minimum:
          type: string
          format: int64
          description: Minimum value.
      description: A constraint on upper and/or lower bounds, with at least one being set.
      id: GoogleChromePolicyVersionsV1NumericRangeConstraint
    GoogleChromePolicyVersionsV1DefineCertificateRequest:
      id: GoogleChromePolicyVersionsV1DefineCertificateRequest
      properties:
        ceritificateName:
          description: Optional. The optional name of the certificate. If not specified, the certificate issuer will be used as the name.
          type: string
        settings:
          description: Optional. Certificate settings within the chrome.networks.certificates namespace.
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting'
          type: array
        certificate:
          description: Required. The raw contents of the .PEM, .CRT, or .CER file.
          type: string
        targetResource:
          type: string
          description: 'Required. The target resource on which this certificate is applied. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
      description: Request object for creating a certificate.
      type: object
    GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest:
      description: Request message for specifying that multiple policy values inherit their value from their parents.
      id: GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest
      properties:
        requests:
          description: 'List of policies that have to inherit their values as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. '
          type: array
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest'
      type: object
    GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest:
      description: Request message for modifying multiple policy values for a specific group-based target.
      properties:
        requests:
          type: array
          description: 'List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to a group resource. 3. All `policyTargetKey` values must have the same `app_id` key name in the `additionalTargetKeys`. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. '
          items:
            $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest'
      type: object
      id: GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest
    GoogleChromePolicyVersionsV1RemoveNetworkResponse:
      description: Response object for removing a network.
      id: GoogleChromePolicyVersionsV1RemoveNetworkResponse
      type: object
      properties: {}
    GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse:
      description: Response message for listing the group priority ordering of an app.
      properties:
        groupIds:
          readOnly: true
          description: Output only. The group IDs, in priority ordering.
          type: array
          items:
            type: string
        policyNamespace:
          readOnly: true
          type: string
          description: Output only. The namespace of the policy type of the group IDs.
        policyTargetKey:
          description: Output only. The target resource for which the group priority ordering has been retrieved.
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
          readOnly: true
      id: GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse
      type: object
    GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest:
      description: Request parameters for modifying a policy value for a specific group target.
      type: object
      properties:
        policyValue:
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyValue'
          description: The new value for the policy.
        policyTargetKey:
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to a Group.
        updateMask:
          type: string
          description: Required. Policy fields to update. Only fields in this mask will be updated; other fields in `policy_value` will be ignored (even if they have values). If a field is in this list it must have a value in 'policy_value'.
          format: google-fieldmask
      id: GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest
    GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest:
      id: GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest
      description: Request parameters for modifying a policy value for a specific org unit target.
      properties:
        policyValue:
          description: The new value for the policy.
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyValue'
        updateMask:
          description: Required. Policy fields to update. Only fields in this mask will be updated; other fields in `policy_value` will be ignored (even if they have values). If a field is in this list it must have a value in 'policy_value'.
          type: string
          format: google-fieldmask
        policyTargetKey:
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit.
      type: object
    GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest:
      type: object
      description: Request parameters for inheriting policy value of a specific org unit target from the policy value of its parent org unit.
      properties:
        policyTargetKey:
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit.
        policySchema:
          type: string
          description: The fully qualified name of the policy schema that is being inherited.
      id: GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest
    GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest:
      description: Request message for listing the group priority ordering of an app.
      type: object
      properties:
        policyTargetKey:
          description: Required. The key of the target for which we want to retrieve the group priority ordering. The target resource must point to an app.
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
        policyNamespace:
          description: Required. The namespace of the policy type for the request.
          type: string
      id: GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest
    GoogleChromePolicyVersionsV1NetworkSetting:
      id: GoogleChromePolicyVersionsV1NetworkSetting
      type: object
      properties:
        policySchema:
          description: The fully qualified name of the network setting.
          type: string
        value:
          additionalProperties:
            type: any
            description: Properties of the object.
          type: object
          description: The value of the network setting.
      description: A network setting contains network configurations.
    GoogleChromePolicyVersionsV1RemoveCertificateResponse:
      id: GoogleChromePolicyVersionsV1RemoveCertificateResponse
      properties: {}
      type: object
      description: Response object for removing a certificate.
    GoogleChromePolicyVersionsV1UploadPolicyFileRequest:
      properties:
        policyField:
          type: string
          description: Required. The fully qualified policy schema and field name this file is uploaded for. This information will be used to validate the content type of the file.
      description: Request message for uploading a file for a policy.
      id: GoogleChromePolicyVersionsV1UploadPolicyFileRequest
      type: object
    GoogleChromePolicyVersionsV1RemoveNetworkRequest:
      properties:
        targetResource:
          type: string
          description: 'Required. The target resource on which this network will be removed. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
        networkId:
          description: Required. The GUID of the network to remove.
          type: string
      type: object
      id: GoogleChromePolicyVersionsV1RemoveNetworkRequest
      description: Request object for removing a network
    GoogleChromePolicyVersionsV1AdditionalTargetKeyName:
      description: Additional key names that will be used to identify the target of the policy value.
      properties:
        key:
          description: Key name.
          type: string
        keyDescription:
          description: Key description.
          type: string
      type: object
      id: GoogleChromePolicyVersionsV1AdditionalTargetKeyName
    GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest:
      id: GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest
      type: object
      properties:
        policyTargetKey:
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to a Group.
        policySchema:
          type: string
          description: The fully qualified name of the policy schema that is being inherited.
      description: Request parameters for deleting the policy value of a specific group target.
    GoogleChromePolicyVersionsV1CertificateReference:
      description: Error information for removing of a specific certificate on a specific target. A reference to a certificate.
      type: object
      properties:
        network:
          description: Output only. The name of the referencing network.
          type: string
          readOnly: true
        orgUnitId:
          readOnly: true
          description: Output only. The obfuscated id of the org unit the referencing network is in.
          type: string
      id: GoogleChromePolicyVersionsV1CertificateReference
    Proto2EnumDescriptorProto:
      description: Describes an enum type.
      id: Proto2EnumDescriptorProto
      properties:
        value:
          items:
            $ref: '#/components/schemas/Proto2EnumValueDescriptorProto'
          type: array
        name:
          type: string
      type: object
    GoogleChromePolicyVersionsV1ResolveRequest:
      properties:
        policyTargetKey:
          description: Required. The key of the target resource on which the policies should be resolved.
          $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey'
        pageSize:
          description: The maximum number of policies to return, defaults to 100 and has a maximum of 1000.
          type: integer
          format: int32
        policySchemaFilter:
          description: 'The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/policy/guides/policy-schemas for details on schema namespaces. For example: Valid: "chrome.users.*", "chrome.users.apps.*", "chrome.printers.*" Invalid: "*", "*.users", "chrome.*", "chrome.*.apps.*"'
          type: string
        pageToken:
          type: string
          description: The page token used to retrieve a specific page of the request.
      type: object
      id: GoogleChromePolicyVersionsV1ResolveRequest
      description: Request message for getting the resolved policy value for a specific target.
  parameters:
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/chrome.management.policy.readonly: See policies applied to Chrome OS and Chrome Browsers managed within your organization
            https://www.googleapis.com/auth/chrome.management.policy: See, edit, create or delete policies applied to Chrome OS and Chrome Browsers managed within your organization
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    media:
      id: googleworkspace.chromepolicy.media
      name: media
      title: Media
      methods:
        upload:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1files:uploadPolicyFile/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    policy_schemas:
      id: googleworkspace.chromepolicy.policy_schemas
      name: policy_schemas
      title: Policy_schemas
      methods:
        customers_policySchemas_list:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policySchemas/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_policySchemas_get:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policySchemas~1{policySchemasId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policy_schemas/methods/customers_policySchemas_get'
          - $ref: '#/components/x-stackQL-resources/policy_schemas/methods/customers_policySchemas_list'
        insert: []
        update: []
        delete: []
    groups_group_priority_ordering:
      id: googleworkspace.chromepolicy.groups_group_priority_ordering
      name: groups_group_priority_ordering
      title: Groups_group_priority_ordering
      methods:
        customers_policies_groups_listGroupPriorityOrdering:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1groups:listGroupPriorityOrdering/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    groups:
      id: googleworkspace.chromepolicy.groups
      name: groups
      title: Groups
      methods:
        customers_policies_groups_batchDelete:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1groups:batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_policies_groups_updateGroupPriorityOrdering:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1groups:updateGroupPriorityOrdering/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_policies_groups_batchModify:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1groups:batchModify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    networks_certificate:
      id: googleworkspace.chromepolicy.networks_certificate
      name: networks_certificate
      title: Networks_certificate
      methods:
        customers_policies_networks_removeCertificate:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1networks:removeCertificate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    networks:
      id: googleworkspace.chromepolicy.networks
      name: networks
      title: Networks
      methods:
        customers_policies_networks_defineNetwork:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1networks:defineNetwork/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_policies_networks_defineCertificate:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1networks:defineCertificate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    networks_network:
      id: googleworkspace.chromepolicy.networks_network
      name: networks_network
      title: Networks_network
      methods:
        customers_policies_networks_removeNetwork:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1networks:removeNetwork/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    orgunits:
      id: googleworkspace.chromepolicy.orgunits
      name: orgunits
      title: Orgunits
      methods:
        customers_policies_orgunits_batchModify:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1orgunits:batchModify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        customers_policies_orgunits_batchInherit:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies~1orgunits:batchInherit/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    policies:
      id: googleworkspace.chromepolicy.policies
      name: policies
      title: Policies
      methods:
        customers_policies_resolve:
          operation:
            $ref: '#/paths/~1v1~1customers~1{customersId}~1policies:resolve/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/customers/{customersId}/policies/files:uploadPolicyFile:
    parameters: &ref_1
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/key'
    post:
      description: Creates an enterprise file from the content provided by user. Returns a public download url for end user.
      operationId: chromepolicy.media.upload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1UploadPolicyFileRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1UploadPolicyFileResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: media
      x-stackQL-verb: exec
  /v1/customers/{customersId}/policySchemas:
    parameters: *ref_1
    get:
      description: Gets a list of policy schemas that match a specified filter value for a given customer.
      operationId: chromepolicy.customers.policySchemas.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ListPolicySchemasResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: policy_schemas
      x-stackQL-verb: select
  /v1/customers/{customersId}/policySchemas/{policySchemasId}:
    parameters: *ref_1
    get:
      description: Get a specific policy schema for a customer by its resource name.
      operationId: chromepolicy.customers.policySchemas.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1PolicySchema'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
        - in: path
          name: policySchemasId
          required: true
          schema:
            type: string
      x-stackQL-resource: policy_schemas
      x-stackQL-verb: select
  /v1/customers/{customersId}/policies/groups:listGroupPriorityOrdering:
    parameters: *ref_1
    post:
      description: Retrieve a group priority ordering for an app. The target app must be supplied in `additionalTargetKeyNames` in the PolicyTargetKey. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.listGroupPriorityOrdering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups_group_priority_ordering
      x-stackQL-verb: select
  /v1/customers/{customersId}/policies/groups:batchDelete:
    parameters: *ref_1
    post:
      description: Delete multiple policy values that are applied to a specific group. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: delete
  /v1/customers/{customersId}/policies/groups:updateGroupPriorityOrdering:
    parameters: *ref_1
    post:
      description: Update a group priority ordering for an app. The target app must be supplied in `additionalTargetKeyNames` in the PolicyTargetKey. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.updateGroupPriorityOrdering
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1/customers/{customersId}/policies/groups:batchModify:
    parameters: *ref_1
    post:
      description: Modify multiple policy values that are applied to a specific group. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.batchModify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: groups
      x-stackQL-verb: exec
  /v1/customers/{customersId}/policies/networks:removeCertificate:
    parameters: *ref_1
    post:
      description: Remove an existing certificate by guid.
      operationId: chromepolicy.customers.policies.networks.removeCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1RemoveCertificateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1RemoveCertificateResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks_certificate
      x-stackQL-verb: delete
  /v1/customers/{customersId}/policies/networks:defineNetwork:
    parameters: *ref_1
    post:
      description: Define a new network.
      operationId: chromepolicy.customers.policies.networks.defineNetwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1DefineNetworkRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1DefineNetworkResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: exec
  /v1/customers/{customersId}/policies/networks:removeNetwork:
    parameters: *ref_1
    post:
      description: Remove an existing network by guid.
      operationId: chromepolicy.customers.policies.networks.removeNetwork
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1RemoveNetworkRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1RemoveNetworkResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks_network
      x-stackQL-verb: delete
  /v1/customers/{customersId}/policies/networks:defineCertificate:
    parameters: *ref_1
    post:
      description: Creates a certificate at a specified OU for a customer.
      operationId: chromepolicy.customers.policies.networks.defineCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1DefineCertificateRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1DefineCertificateResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: networks
      x-stackQL-verb: exec
  /v1/customers/{customersId}/policies/orgunits:batchModify:
    parameters: *ref_1
    post:
      description: Modify multiple policy values that are applied to a specific org unit. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.orgunits.batchModify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: orgunits
      x-stackQL-verb: exec
  /v1/customers/{customersId}/policies/orgunits:batchInherit:
    parameters: *ref_1
    post:
      description: Modify multiple policy values that are applied to a specific org unit so that they now inherit the value from a parent (if applicable). All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.orgunits.batchInherit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: orgunits
      x-stackQL-verb: exec
  /v1/customers/{customersId}/policies:resolve:
    parameters: *ref_1
    post:
      description: Gets the resolved policy values for a list of policies that match a search query.
      operationId: chromepolicy.customers.policies.resolve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ResolveRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleChromePolicyVersionsV1ResolveResponse'
      parameters:
        - in: path
          name: customersId
          required: true
          schema:
            type: string
      x-stackQL-resource: policies
      x-stackQL-verb: exec
