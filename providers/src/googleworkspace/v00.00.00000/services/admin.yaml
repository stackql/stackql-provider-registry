openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Admin SDK API
  description: Admin SDK lets administrators of enterprise domains to view and manage resources like user, groups etc. It also provides audit and usage reports of domain.
  version: reports_v1
  x-discovery-doc-revision: '20230110'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/admin-sdk/
servers:
  - url: https://admin.googleapis.com
components:
  schemas:
    UsageReports:
      properties:
        kind:
          type: string
          description: The type of API resource. For a usage report, the value is `admin#reports#usageReports`.
          default: admin#reports#usageReports
        nextPageToken:
          description: Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. For your follow-on requests getting all of the report's pages, enter the `nextPageToken` value in the `pageToken` query string.
          type: string
        warnings:
          items:
            type: object
            properties:
              code:
                description: Machine readable code or warning type. The warning code value is `200`.
                type: string
              message:
                description: 'The human readable messages for a warning are: - Data is not available warning - Sorry, data for date yyyy-mm-dd for application "`application name`" is not available. - Partial data is available warning - Data for date yyyy-mm-dd for application "`application name`" is not available right now, please try again after a few hours. '
                type: string
              data:
                description: Key-value pairs to give detailed information on the warning.
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                      description: Value associated with a key-value pair to give detailed information on the warning.
                    key:
                      description: Key associated with a key-value pair to give detailed information on the warning.
                      type: string
          description: Warnings, if any.
          type: array
        usageReports:
          description: Various application parameter records.
          type: array
          items:
            $ref: '#/components/schemas/UsageReport'
        etag:
          description: ETag of the resource.
          type: string
      type: object
      id: UsageReports
    Channel:
      type: object
      description: A notification channel used to watch for resource changes.
      properties:
        address:
          type: string
          description: The address where notifications are delivered for this channel.
        token:
          description: An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
          type: string
        expiration:
          description: Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
          type: string
          format: int64
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        kind:
          description: Identifies this as a notification channel used to watch for changes to a resource, which is "`api#channel`".
          default: api#channel
          type: string
        payload:
          description: A Boolean value to indicate whether payload is wanted. Optional.
          type: boolean
        resourceUri:
          type: string
          description: A version-specific identifier for the watched resource.
        type:
          description: The type of delivery mechanism used for this channel. The value should be set to `"web_hook"`.
          type: string
        resourceId:
          description: An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
          type: string
        params:
          description: Additional parameters controlling delivery channel behavior. Optional.
          additionalProperties:
            type: string
          type: object
      id: Channel
    UsageReport:
      description: JSON template for a usage report.
      id: UsageReport
      type: object
      properties:
        kind:
          default: admin#reports#usageReport
          type: string
          description: The type of API resource. For a usage report, the value is `admin#reports#usageReport`.
        entity:
          readOnly: true
          type: object
          properties:
            customerId:
              type: string
              readOnly: true
              description: Output only. The unique identifier of the customer's account.
            type:
              description: Output only. The type of item. The value is `user`.
              readOnly: true
              type: string
            profileId:
              description: Output only. The user's immutable Google Workspace profile identifier.
              readOnly: true
              type: string
            userEmail:
              description: Output only. The user's email address. Only relevant if entity.type = "USER"
              type: string
              readOnly: true
            entityId:
              type: string
              readOnly: true
              description: 'Output only. Object key. Only relevant if entity.type = "OBJECT" Note: external-facing name of report is "Entities" rather than "Objects".'
          description: Output only. Information about the type of the item.
        parameters:
          description: Output only. Parameter value pairs for various applications. For the Entity Usage Report parameters and values, see [the Entity Usage parameters reference](/admin-sdk/reports/v1/reference/usage-ref-appendix-a/entities).
          items:
            properties:
              msgValue:
                type: array
                items:
                  type: object
                  additionalProperties:
                    description: Properties of the object.
                    type: any
                description: Output only. Nested message value of the parameter.
                readOnly: true
              stringValue:
                type: string
                description: Output only. String value of the parameter.
                readOnly: true
              name:
                type: string
                description: The name of the parameter. For the User Usage Report parameter names, see the User Usage parameters reference.
              boolValue:
                readOnly: true
                description: Output only. Boolean value of the parameter.
                type: boolean
              datetimeValue:
                readOnly: true
                type: string
                format: date-time
                description: The RFC 3339 formatted value of the parameter, for example 2010-10-28T10:26:35.000Z.
              intValue:
                description: Output only. Integer value of the parameter.
                format: int64
                readOnly: true
                type: string
            type: object
          readOnly: true
          type: array
        etag:
          description: ETag of the resource.
          type: string
        date:
          description: Output only. The date of the report request.
          readOnly: true
          type: string
    Activity:
      type: object
      properties:
        etag:
          description: ETag of the entry.
          type: string
        ownerDomain:
          description: This is the domain that is affected by the report's event. For example domain of Admin console or the Drive application's document owner.
          type: string
        ipAddress:
          description: IP address of the user doing the action. This is the Internet Protocol (IP) address of the user when logging into Google Workspace, which may or may not reflect the user's physical location. For example, the IP address can be the user's proxy server's address or a virtual private network (VPN) address. The API supports IPv4 and IPv6.
          type: string
        events:
          description: Activity events in the report.
          items:
            properties:
              name:
                description: 'Name of the event. This is the specific name of the activity reported by the API. And each `eventName` is related to a specific Google Workspace service or feature which the API organizes into types of events. For `eventName` request parameters in general: - If no `eventName` is given, the report returns all possible instances of an `eventName`. - When you request an `eventName`, the API''s response returns all activities which contain that `eventName`. It is possible that the returned activities will have other `eventName` properties in addition to the one requested. For more information about `eventName` properties, see the list of event names for various applications above in `applicationName`.'
                type: string
              parameters:
                items:
                  properties:
                    multiValue:
                      description: String values of the parameter.
                      type: array
                      items:
                        type: string
                    multiIntValue:
                      items:
                        type: string
                        format: int64
                      type: array
                      description: Integer values of the parameter.
                    multiMessageValue:
                      type: array
                      description: List of `messageValue` objects.
                      items:
                        type: object
                        properties:
                          parameter:
                            type: array
                            description: Parameter values
                            items:
                              $ref: '#/components/schemas/NestedParameter'
                    value:
                      type: string
                      description: String value of the parameter.
                    name:
                      description: The name of the parameter.
                      type: string
                    boolValue:
                      type: boolean
                      description: Boolean value of the parameter.
                    messageValue:
                      description: 'Nested parameter value pairs associated with this parameter. Complex value type for a parameter are returned as a list of parameter values. For example, the address parameter may have a value as `[{parameter: [{name: city, value: abc}]}]`'
                      properties:
                        parameter:
                          description: Parameter values
                          items:
                            $ref: '#/components/schemas/NestedParameter'
                          type: array
                      type: object
                    intValue:
                      format: int64
                      description: Integer value of the parameter.
                      type: string
                  type: object
                description: Parameter value pairs for various applications. For more information about `eventName` parameters, see the list of event names for various applications above in `applicationName`.
                type: array
              type:
                type: string
                description: Type of event. The Google Workspace service or feature that an administrator changes is identified in the `type` property which identifies an event using the `eventName` property. For a full list of the API's `type` categories, see the list of event names for various applications above in `applicationName`.
            type: object
          type: array
        id:
          type: object
          description: Unique identifier for each activity record.
          properties:
            customerId:
              type: string
              description: The unique identifier for a Google Workspace account.
            applicationName:
              description: Application name to which the event belongs. For possible values see the list of applications above in `applicationName`.
              type: string
            uniqueQualifier:
              type: string
              format: int64
              description: Unique qualifier if multiple events have the same time.
            time:
              description: Time of occurrence of the activity. This is in UNIX epoch time in seconds.
              format: date-time
              type: string
        kind:
          type: string
          default: admin#reports#activity
          description: The type of API resource. For an activity report, the value is `audit#activity`.
        actor:
          properties:
            email:
              type: string
              description: The primary email address of the actor. May be absent if there is no email address associated with the actor.
            callerType:
              type: string
              description: The type of actor.
            key:
              description: Only present when `callerType` is `KEY`. Can be the `consumer_key` of the requestor for OAuth 2LO API requests or an identifier for robot accounts.
              type: string
            profileId:
              description: The unique Google Workspace profile ID of the actor. This value might be absent if the actor is not a Google Workspace user, or may be the number 105250506097979753968 which acts as a placeholder ID.
              type: string
          description: User doing the action.
          type: object
      id: Activity
      description: JSON template for the activity resource.
    Activities:
      properties:
        kind:
          description: The type of API resource. For an activity report, the value is `reports#activities`.
          default: admin#reports#activities
          type: string
        items:
          description: Each activity record in the response.
          items:
            $ref: '#/components/schemas/Activity'
          type: array
        nextPageToken:
          description: Token for retrieving the follow-on next page of the report. The `nextPageToken` value is used in the request's `pageToken` query string.
          type: string
        etag:
          type: string
          description: ETag of the resource.
      type: object
      id: Activities
      description: JSON template for a collection of activities.
    NestedParameter:
      type: object
      properties:
        multiBoolValue:
          description: Multiple boolean values of the parameter.
          type: array
          items:
            type: boolean
        multiValue:
          items:
            type: string
          description: Multiple string values of the parameter.
          type: array
        value:
          description: String value of the parameter.
          type: string
        intValue:
          type: string
          format: int64
          description: Integer value of the parameter.
        name:
          description: The name of the parameter.
          type: string
        multiIntValue:
          items:
            type: string
            format: int64
          description: Multiple integer values of the parameter.
          type: array
        boolValue:
          description: Boolean value of the parameter.
          type: boolean
      description: JSON template for a parameter used in various reports.
      id: NestedParameter
  parameters:
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/admin.reports.audit.readonly: View audit reports for your G Suite domain
            https://www.googleapis.com/auth/admin.reports.usage.readonly: View usage reports for your G Suite domain
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    customer_usage_reports:
      id: googleworkspace.admin.customer_usage_reports
      name: customer_usage_reports
      title: Customer_usage_reports
      methods:
        reports_customerUsageReports_get:
          operation:
            $ref: '#/paths/~1admin~1reports~1v1~1usage~1dates~1{date}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/customer_usage_reports/methods/reports_customerUsageReports_get'
        insert: []
        update: []
        delete: []
    entity_usage_reports:
      id: googleworkspace.admin.entity_usage_reports
      name: entity_usage_reports
      title: Entity_usage_reports
      methods:
        reports_entityUsageReports_get:
          operation:
            $ref: '#/paths/~1admin~1reports~1v1~1usage~1{entityType}~1{entityKey}~1dates~1{date}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/entity_usage_reports/methods/reports_entityUsageReports_get'
        insert: []
        update: []
        delete: []
    user_usage_report:
      id: googleworkspace.admin.user_usage_report
      name: user_usage_report
      title: User_usage_report
      methods:
        reports_userUsageReport_get:
          operation:
            $ref: '#/paths/~1admin~1reports~1v1~1usage~1users~1{userKey}~1dates~1{date}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_usage_report/methods/reports_userUsageReport_get'
        insert: []
        update: []
        delete: []
    channels:
      id: googleworkspace.admin.channels
      name: channels
      title: Channels
      methods:
        stop:
          operation:
            $ref: '#/paths/~1admin~1reports_v1~1channels~1stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    activities:
      id: googleworkspace.admin.activities
      name: activities
      title: Activities
      methods:
        reports_activities_watch:
          operation:
            $ref: '#/paths/~1admin~1reports~1v1~1activity~1users~1{userKey}~1applications~1{applicationName}~1watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reports_activities_list:
          operation:
            $ref: '#/paths/~1admin~1reports~1v1~1activity~1users~1{userKey}~1applications~1{applicationName}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/activities/methods/reports_activities_list'
        insert: []
        update: []
        delete: []
paths:
  /admin/reports/v1/usage/dates/{date}:
    parameters: &ref_1
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/uploadType'
    get:
      description: 'Retrieves a report which is a collection of properties and statistics for a specific customer''s account. For more information, see the Customers Usage Report guide. For more information about the customer report''s parameters, see the Customers Usage parameters reference guides. '
      operationId: reports.customerUsageReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReports'
      parameters:
        - in: path
          name: date
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: parameters
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: customer_usage_reports
      x-stackQL-verb: select
  /admin/reports/v1/usage/{entityType}/{entityKey}/dates/{date}:
    parameters: *ref_1
    get:
      description: Retrieves a report which is a collection of properties and statistics for entities used by users within the account. For more information, see the Entities Usage Report guide. For more information about the entities report's parameters, see the Entities Usage parameters reference guides.
      operationId: reports.entityUsageReports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReports'
      parameters:
        - in: path
          name: entityType
          required: true
          schema:
            type: string
        - in: path
          name: entityKey
          required: true
          schema:
            type: string
        - in: path
          name: date
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: parameters
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
      x-stackQL-resource: entity_usage_reports
      x-stackQL-verb: select
  /admin/reports/v1/usage/users/{userKey}/dates/{date}:
    parameters: *ref_1
    get:
      description: Retrieves a report which is a collection of properties and statistics for a set of users with the account. For more information, see the User Usage Report guide. For more information about the user report's parameters, see the Users Usage parameters reference guides.
      operationId: reports.userUsageReport.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReports'
      parameters:
        - in: path
          name: userKey
          required: true
          schema:
            type: string
        - in: path
          name: date
          required: true
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orgUnitID
          schema:
            type: string
        - in: query
          name: groupIdFilter
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: parameters
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: user_usage_report
      x-stackQL-verb: select
  /admin/reports_v1/channels/stop:
    parameters: *ref_1
    post:
      description: Stop watching resources through this channel.
      operationId: admin.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      parameters: []
      x-stackQL-resource: channels
      x-stackQL-verb: exec
  /admin/reports/v1/activity/users/{userKey}/applications/{applicationName}/watch:
    parameters: *ref_1
    post:
      description: Start receiving notifications for account activities. For more information, see Receiving Push Notifications.
      operationId: reports.activities.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: userKey
          required: true
          schema:
            type: string
        - in: path
          name: applicationName
          required: true
          schema:
            type: string
        - in: query
          name: groupIdFilter
          schema:
            type: string
        - in: query
          name: eventName
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: orgUnitID
          schema:
            type: string
        - in: query
          name: actorIpAddress
          schema:
            type: string
      x-stackQL-resource: activities
      x-stackQL-verb: exec
  /admin/reports/v1/activity/users/{userKey}/applications/{applicationName}:
    parameters: *ref_1
    get:
      description: 'Retrieves a list of activities for a specific customer''s account and application such as the Admin console application or the Google Drive application. For more information, see the guides for administrator and Google Drive activity reports. For more information about the activity report''s parameters, see the activity parameters reference guides. '
      operationId: reports.activities.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
      parameters:
        - in: path
          name: userKey
          required: true
          schema:
            type: string
        - in: path
          name: applicationName
          required: true
          schema:
            type: string
        - in: query
          name: actorIpAddress
          schema:
            type: string
        - in: query
          name: eventName
          schema:
            type: string
        - in: query
          name: startTime
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: orgUnitID
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: filters
          schema:
            type: string
        - in: query
          name: groupIdFilter
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
        - in: query
          name: endTime
          schema:
            type: string
      x-stackQL-resource: activities
      x-stackQL-verb: select
