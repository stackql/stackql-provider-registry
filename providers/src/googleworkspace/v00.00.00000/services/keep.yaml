openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Keep API
  description: The Google Keep API is used in an enterprise environment to manage Google Keep content and resolve issues identified by cloud security software.
  version: v1
  x-discovery-doc-revision: '20230110'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/keep/api
servers:
  - url: https://keep.googleapis.com
components:
  schemas:
    Permission:
      type: object
      description: A single permission on the note. Associates a `member` with a `role`.
      properties:
        user:
          readOnly: true
          description: Output only. The user to whom this role applies.
          $ref: '#/components/schemas/User'
        name:
          readOnly: true
          type: string
          description: Output only. The resource name.
        deleted:
          description: Output only. Whether this member has been deleted. If the member is recovered, this value is set to false and the recovered member retains the role on the note.
          type: boolean
          readOnly: true
        family:
          $ref: '#/components/schemas/Family'
          description: Output only. The Google Family to which this role applies.
          readOnly: true
        group:
          $ref: '#/components/schemas/Group'
          readOnly: true
          description: Output only. The group to which this role applies.
        role:
          enum:
            - ROLE_UNSPECIFIED
            - OWNER
            - WRITER
          enumDescriptions:
            - An undefined role.
            - A role granting full access. This role cannot be added or removed. Defined by the creator of the note.
            - A role granting the ability to contribute content and modify note permissions.
          description: The role granted by this permission. The role determines the entityâ€™s ability to read, write, and share notes.
          type: string
        email:
          type: string
          description: The email associated with the member. If set on create, the `email` field in the `User` or `Group` message must either be empty or match this field. On read, may be unset if the member does not have an associated email.
      id: Permission
    BatchCreatePermissionsRequest:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/CreatePermissionRequest'
          type: array
          description: The request message specifying the resources to create.
      description: The request to add one or more permissions on the note. Currently, only the `WRITER` role may be specified. If adding a permission fails, then the entire request fails and no changes are made.
      id: BatchCreatePermissionsRequest
      type: object
    ListNotesResponse:
      type: object
      properties:
        nextPageToken:
          description: Next page's `page_token` field.
          type: string
        notes:
          type: array
          description: A page of notes.
          items:
            $ref: '#/components/schemas/Note'
      id: ListNotesResponse
      description: The response when listing a page of notes.
    ListItem:
      type: object
      description: A single list item in a note's list.
      properties:
        checked:
          description: Whether this item has been checked off or not.
          type: boolean
        childListItems:
          items:
            $ref: '#/components/schemas/ListItem'
          type: array
          description: If set, list of list items nested under this list item. Only one level of nesting is allowed.
        text:
          description: The text of this item. Length must be less than 1,000 characters.
          $ref: '#/components/schemas/TextContent'
      id: ListItem
    User:
      id: User
      properties:
        email:
          type: string
          description: The user's email.
      description: Describes a single user.
      type: object
    Attachment:
      description: An attachment to a note.
      type: object
      properties:
        name:
          description: The resource name;
          type: string
        mimeType:
          description: The MIME types (IANA media types) in which the attachment is available.
          type: array
          items:
            type: string
      id: Attachment
    TextContent:
      type: object
      properties:
        text:
          type: string
          description: The text of the note. The limits on this vary with the specific field using this type.
      description: The block of text for a single text section or list item.
      id: TextContent
    Empty:
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      properties: {}
      id: Empty
      type: object
    BatchDeletePermissionsRequest:
      id: BatchDeletePermissionsRequest
      description: The request to remove one or more permissions from a note. A permission with the `OWNER` role can't be removed. If removing a permission fails, then the entire request fails and no changes are made. Returns a 400 bad request error if a specified permission does not exist on the note.
      properties:
        names:
          description: 'Required. The names of the permissions to delete. Format: `notes/{note}/permissions/{permission}`'
          items:
            type: string
          type: array
      type: object
    BatchCreatePermissionsResponse:
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          description: Permissions created.
      description: The response for creating permissions on a note.
      id: BatchCreatePermissionsResponse
      type: object
    ListContent:
      description: The list of items for a single list note.
      type: object
      properties:
        listItems:
          type: array
          description: The items in the list. The number of items must be less than 1,000.
          items:
            $ref: '#/components/schemas/ListItem'
      id: ListContent
    Group:
      id: Group
      description: Describes a single Group.
      properties:
        email:
          description: The group email.
          type: string
      type: object
    Family:
      properties: {}
      description: Describes a single Google Family.
      id: Family
      type: object
    Section:
      type: object
      properties:
        list:
          $ref: '#/components/schemas/ListContent'
          description: Used if this section's content is a list.
        text:
          $ref: '#/components/schemas/TextContent'
          description: Used if this section's content is a block of text. The length of the text content must be less than 20,000 characters.
      id: Section
      description: The content of the note.
    CreatePermissionRequest:
      type: object
      id: CreatePermissionRequest
      properties:
        permission:
          description: Required. The permission to create. One of Permission.email, User.email or Group.email must be supplied.
          $ref: '#/components/schemas/Permission'
        parent:
          description: 'Required. The parent note where this permission will be created. Format: `notes/{note}`'
          type: string
      description: The request to add a single permission on the note.
    Note:
      id: Note
      description: A single note.
      properties:
        title:
          type: string
          description: The title of the note. Length must be less than 1,000 characters.
        body:
          $ref: '#/components/schemas/Section'
          description: The body of the note.
        updateTime:
          readOnly: true
          description: Output only. When this note was last modified.
          type: string
          format: google-datetime
        attachments:
          description: Output only. The attachments attached to this note.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        trashTime:
          description: Output only. When this note was trashed. If `trashed`, the note is eventually deleted. If the note is not trashed, this field is not set (and the trashed field is `false`).
          format: google-datetime
          readOnly: true
          type: string
        name:
          type: string
          readOnly: true
          description: Output only. The resource name of this note. See general note on identifiers in KeepService.
        createTime:
          type: string
          description: Output only. When this note was created.
          readOnly: true
          format: google-datetime
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          readOnly: true
          description: Output only. The list of permissions set on the note. Contains at least one entry for the note owner.
        trashed:
          type: boolean
          readOnly: true
          description: Output only. `true` if this note has been trashed. If trashed, the note is eventually deleted.
      type: object
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/keep: See, edit, create and permanently delete all your Google Keep data
            https://www.googleapis.com/auth/keep.readonly: View all your Google Keep data
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    media:
      id: googleworkspace.keep.media
      name: media
      title: Media
      methods:
        download:
          operation:
            $ref: '#/paths/~1v1~1notes~1{notesId}~1attachments~1{attachmentsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    permissions:
      id: googleworkspace.keep.permissions
      name: permissions
      title: Permissions
      methods:
        notes_permissions_batchDelete:
          operation:
            $ref: '#/paths/~1v1~1notes~1{notesId}~1permissions:batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notes_permissions_batchCreate:
          operation:
            $ref: '#/paths/~1v1~1notes~1{notesId}~1permissions:batchCreate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    notes:
      id: googleworkspace.keep.notes
      name: notes
      title: Notes
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1notes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1notes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1notes~1{notesId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1notes~1{notesId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notes/methods/get'
          - $ref: '#/components/x-stackQL-resources/notes/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/notes/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notes/methods/delete'
paths:
  /v1/notes/{notesId}/attachments/{attachmentsId}:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/key'
    get:
      description: Gets an attachment. To download attachment media via REST requires the alt=media query parameter. Returns a 400 bad request error if attachment media is not available in the requested MIME type.
      operationId: keep.media.download
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
        - Oauth2:
            - https://www.googleapis.com/auth/keep.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/keep.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
        - in: path
          name: attachmentsId
          required: true
          schema:
            type: string
        - in: query
          name: mimeType
          schema:
            type: string
      x-stackQL-resource: media
      x-stackQL-verb: exec
  /v1/notes/{notesId}/permissions:batchDelete:
    parameters: *ref_1
    post:
      description: Deletes one or more permissions on the note. The specified entities will immediately lose access. A permission with the `OWNER` role can't be removed. If removing a permission fails, then the entire request fails and no changes are made. Returns a 400 bad request error if a specified permission does not exist on the note.
      operationId: keep.notes.permissions.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeletePermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: permissions
      x-stackQL-verb: delete
  /v1/notes/{notesId}/permissions:batchCreate:
    parameters: *ref_1
    post:
      description: Creates one or more permissions on the note. Only permissions with the `WRITER` role may be created. If adding any permission fails, then the entire request fails and no changes are made.
      operationId: keep.notes.permissions.batchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreatePermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCreatePermissionsResponse'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: permissions
      x-stackQL-verb: insert
  /v1/notes:
    parameters: *ref_1
    get:
      description: Lists notes. Every list call returns a page of results with `page_size` as the upper bound of returned items. A `page_size` of zero allows the server to choose the upper bound. The ListNotesResponse contains at most `page_size` entries. If there are more things left to list, it provides a `next_page_token` value. (Page tokens are opaque values.) To get the next page of results, copy the result's `next_page_token` into the next request's `page_token`. Repeat until the `next_page_token` returned with a page of results is empty. ListNotes return consistent results in the face of concurrent changes, or signals that it cannot with an ABORTED error.
      operationId: keep.notes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
        - Oauth2:
            - https://www.googleapis.com/auth/keep.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/keep.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotesResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: notes
      x-stackQL-verb: select
    post:
      description: Creates a new note.
      operationId: keep.notes.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
      parameters: []
      x-stackQL-resource: notes
      x-stackQL-verb: insert
  /v1/notes/{notesId}:
    parameters: *ref_1
    delete:
      description: Deletes a note. Caller must have the `OWNER` role on the note to delete. Deleting a note removes the resource immediately and cannot be undone. Any collaborators will lose access to the note.
      operationId: keep.notes.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: notes
      x-stackQL-verb: delete
    get:
      description: Gets a note.
      operationId: keep.notes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/keep
          Oauth2c:
            - https://www.googleapis.com/auth/keep
        - Oauth2:
            - https://www.googleapis.com/auth/keep.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/keep.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
      parameters:
        - in: path
          name: notesId
          required: true
          schema:
            type: string
      x-stackQL-resource: notes
      x-stackQL-verb: select
