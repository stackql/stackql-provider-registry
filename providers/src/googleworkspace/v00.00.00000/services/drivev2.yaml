openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Drive API
  description: The Google Drive API allows clients to access resources from Google Drive.
  version: v2
  x-discovery-doc-revision: '20250821'
  x-generated-date: '2025-08-28'
externalDocs:
  url: https://developers.google.com/workspace/drive/
servers:
  - url: https://www.googleapis.com/drive/v2
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/drive: See, edit, create, and delete all of your Google Drive files
            https://www.googleapis.com/auth/drive.appdata: >-
              See, create, and delete its own configuration data in your Google
              Drive
            https://www.googleapis.com/auth/drive.apps.readonly: View your Google Drive apps
            https://www.googleapis.com/auth/drive.file: >-
              See, edit, create, and delete only the specific Google Drive files
              you use with this app
            https://www.googleapis.com/auth/drive.meet.readonly: >-
              See and download your Google Drive files that were created or
              edited by Google Meet.
            https://www.googleapis.com/auth/drive.metadata: View and manage metadata of files in your Google Drive
            https://www.googleapis.com/auth/drive.metadata.readonly: See information about your Google Drive files
            https://www.googleapis.com/auth/drive.photos.readonly: View the photos, videos and albums in your Google Photos
            https://www.googleapis.com/auth/drive.readonly: See and download all your Google Drive files
            https://www.googleapis.com/auth/drive.scripts: Modify your Google Apps Script scripts' behavior
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  schemas:
    About:
      id: About
      description: An item with user information and settings.
      type: object
      properties:
        name:
          description: The name of the current user.
          type: string
        quotaBytesTotal:
          description: >-
            The total number of quota bytes. This is only relevant when
            quotaType is LIMITED.
          type: string
          format: int64
        quotaBytesUsed:
          description: The number of quota bytes used by Google Drive.
          type: string
          format: int64
        quotaBytesUsedInTrash:
          description: The number of quota bytes used by trashed items.
          type: string
          format: int64
        largestChangeId:
          description: The largest change id.
          type: string
          format: int64
        remainingChangeIds:
          description: The number of remaining change ids, limited to no more than 2500.
          type: string
          format: int64
        rootFolderId:
          description: The id of the root folder.
          type: string
        importFormats:
          description: The allowable import formats.
          type: array
          items:
            type: object
            properties:
              source:
                description: The imported file's content type to convert from.
                type: string
              targets:
                description: The possible content types to convert to.
                type: array
                items:
                  type: string
        exportFormats:
          description: The allowable export formats.
          type: array
          items:
            type: object
            properties:
              source:
                description: The content type to convert from.
                type: string
              targets:
                description: The possible content types to convert to.
                type: array
                items:
                  type: string
        additionalRoleInfo:
          description: >-
            Information about supported additional roles per file type. The most
            specific type takes precedence.
          type: array
          items:
            type: object
            properties:
              type:
                description: The content type that this additional role info applies to.
                type: string
              roleSets:
                description: The supported additional roles per primary role.
                type: array
                items:
                  type: object
                  properties:
                    primaryRole:
                      description: A primary permission role.
                      type: string
                    additionalRoles:
                      description: The supported additional roles with the primary role.
                      type: array
                      items:
                        type: string
        features:
          description: List of additional features enabled on this account.
          type: array
          items:
            type: object
            properties:
              featureName:
                description: The name of the feature.
                type: string
              featureRate:
                description: >-
                  The request limit rate for this feature, in queries per
                  second.
                type: number
                format: double
        maxUploadSizes:
          description: >-
            List of max upload sizes for each file type. The most specific type
            takes precedence.
          type: array
          items:
            type: object
            properties:
              type:
                description: The file type.
                type: string
              size:
                description: The max upload size for this type.
                type: string
                format: int64
        domainSharingPolicy:
          description: >-
            The domain sharing policy for the current user. Possible values are:
            * `allowed` * `allowedWithWarning` * `incomingOnly` * `disallowed`
          type: string
        kind:
          description: This is always `drive#about`.
          default: drive#about
          type: string
        permissionId:
          description: The current user's ID as visible in the permissions collection.
          type: string
        isCurrentAppInstalled:
          description: >-
            A boolean indicating whether the authenticated app is installed by
            the authenticated user.
          type: boolean
        quotaBytesUsedAggregate:
          description: >-
            The number of quota bytes used by all Google apps (Drive, Picasa,
            etc.).
          type: string
          format: int64
        user:
          description: The authenticated user.
          $ref: '#/components/schemas/User'
        etag:
          description: The ETag of the item.
          type: string
        languageCode:
          description: >-
            The user's language or locale code, as defined by BCP 47, with some
            extensions from Unicode's LDML format
            (http://www.unicode.org/reports/tr35/).
          type: string
        selfLink:
          description: A link back to this item.
          type: string
        quotaType:
          description: >-
            The type of the user's storage quota. Possible values are: *
            `LIMITED` * `UNLIMITED`
          type: string
        folderColorPalette:
          description: The palette of allowable folder colors as RGB hex strings.
          type: array
          items:
            type: string
        driveThemes:
          description: A list of themes that are supported for shared drives.
          type: array
          items:
            type: object
            properties:
              id:
                description: The ID of the theme.
                type: string
              backgroundImageLink:
                description: A link to this theme's background image.
                type: string
              colorRgb:
                description: The color of this theme as an RGB hex string.
                type: string
        canCreateDrives:
          description: Whether the user can create shared drives.
          type: boolean
        quotaBytesByService:
          description: The amount of storage quota used by different Google services.
          type: array
          items:
            type: object
            properties:
              serviceName:
                description: The service's name, e.g. DRIVE, GMAIL, or PHOTOS.
                type: string
              bytesUsed:
                description: The storage quota bytes used by the service.
                type: string
                format: int64
        teamDriveThemes:
          description: 'Deprecated: Use `driveThemes` instead.'
          deprecated: true
          type: array
          items:
            type: object
            properties:
              id:
                description: 'Deprecated: Use `driveThemes/id` instead.'
                deprecated: true
                type: string
              backgroundImageLink:
                description: 'Deprecated: Use `driveThemes/backgroundImageLink` instead.'
                deprecated: true
                type: string
              colorRgb:
                description: 'Deprecated: Use `driveThemes/colorRgb` instead.'
                deprecated: true
                type: string
        canCreateTeamDrives:
          description: 'Deprecated: Use `canCreateDrives` instead.'
          deprecated: true
          type: boolean
    User:
      id: User
      description: Information about a Drive user.
      type: object
      properties:
        displayName:
          description: Output only. A plain text displayable name for this user.
          readOnly: true
          type: string
        kind:
          description: >-
            Output only. Identifies what kind of resource this is. Value: the
            fixed string `drive#user`.
          default: drive#user
          readOnly: true
          type: string
        isAuthenticatedUser:
          description: >-
            Output only. Whether this user is the same as the authenticated user
            for whom the request was made.
          readOnly: true
          type: boolean
        permissionId:
          description: Output only. The user's ID as visible in Permission resources.
          readOnly: true
          type: string
        emailAddress:
          description: >-
            Output only. The email address of the user. This may not be present
            in certain contexts if the user has not made their email address
            visible to the requester.
          readOnly: true
          type: string
        picture:
          description: Output only. The user's profile picture.
          readOnly: true
          type: object
          properties:
            url:
              description: >-
                Output only. A URL that points to a profile picture of this
                user.
              readOnly: true
              type: string
    App:
      id: App
      description: >-
        The apps resource provides a list of the apps that a user has installed,
        with information about each app's supported MIME types, file extensions,
        and other details. Some resource methods (such as `apps.get`) require an
        `appId`. Use the `apps.list` method to retrieve the ID for an installed
        application.
      type: object
      properties:
        name:
          description: The name of the app.
          type: string
        objectType:
          description: >-
            The type of object this app creates (e.g. Chart). If empty, the app
            name should be used instead.
          type: string
        supportsCreate:
          description: Whether this app supports creating new objects.
          type: boolean
        productUrl:
          description: A link to the product listing for this app.
          type: string
        primaryMimeTypes:
          description: The list of primary mime types.
          type: array
          items:
            type: string
        secondaryMimeTypes:
          description: The list of secondary mime types.
          type: array
          items:
            type: string
        primaryFileExtensions:
          description: The list of primary file extensions.
          type: array
          items:
            type: string
        secondaryFileExtensions:
          description: The list of secondary file extensions.
          type: array
          items:
            type: string
        id:
          description: The ID of the app.
          type: string
        supportsImport:
          description: Whether this app supports importing from Docs Editors.
          type: boolean
        installed:
          description: Whether the app is installed.
          type: boolean
        authorized:
          description: Whether the app is authorized to access data on the user's Drive.
          type: boolean
        icons:
          description: The various icons for the app.
          type: array
          items:
            type: object
            properties:
              size:
                description: >-
                  Size of the icon. Represented as the maximum of the width and
                  height.
                type: integer
                format: int32
              category:
                description: >-
                  Category of the icon. Allowed values are: * `application` -
                  icon for the application * `document` - icon for a file
                  associated with the app * `documentShared` - icon for a shared
                  file associated with the app
                type: string
              iconUrl:
                description: URL for the icon.
                type: string
        useByDefault:
          description: >-
            Whether the app is selected as the default handler for the types it
            supports.
          type: boolean
        kind:
          description: This is always `drive#app`.
          default: drive#app
          type: string
        shortDescription:
          description: A short description of the app.
          type: string
        longDescription:
          description: A long description of the app.
          type: string
        supportsMultiOpen:
          description: Whether this app supports opening more than one file.
          type: boolean
        productId:
          description: The ID of the product listing for this app.
          type: string
        openUrlTemplate:
          description: >-
            The template url for opening files with this app. The template will
            contain `{ids}` and/or `{exportIds}` to be replaced by the actual
            file ids. See Open Files for the full documentation.
          type: string
        createUrl:
          description: The url to create a new file with this app.
          type: string
        createInFolderTemplate:
          description: >-
            The template url to create a new file with this app in a given
            folder. The template will contain {folderId} to be replaced by the
            folder to create the new file in.
          type: string
        supportsOfflineCreate:
          description: Whether this app supports creating new files when offline.
          type: boolean
        hasDriveWideScope:
          description: >-
            Whether the app has drive-wide scope. An app with drive-wide scope
            can access all files in the user's drive.
          type: boolean
    AppList:
      id: AppList
      description: >-
        A list of third-party applications which the user has installed or given
        access to Google Drive.
      type: object
      properties:
        etag:
          description: The ETag of the list.
          type: string
        defaultAppIds:
          description: >-
            List of app IDs that the user has specified to use by default. The
            list is in reverse-priority order (lowest to highest).
          type: array
          items:
            type: string
        kind:
          description: This is always `drive#appList`.
          default: drive#appList
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        items:
          description: The list of apps.
          type: array
          items:
            $ref: '#/components/schemas/App'
    Change:
      id: Change
      description: Representation of a change to a file or shared drive.
      type: object
      properties:
        id:
          description: The ID of the change.
          type: string
          format: int64
        deleted:
          description: >-
            Whether the file or shared drive has been removed from this list of
            changes, for example by deletion or loss of access.
          type: boolean
        file:
          description: >-
            The updated state of the file. Present if the type is file and the
            file has not been removed from this list of changes.
          $ref: '#/components/schemas/File'
        fileId:
          description: The ID of the file associated with this change.
          type: string
        modificationDate:
          description: The time of this modification.
          type: string
          format: date-time
        kind:
          description: This is always `drive#change`.
          default: drive#change
          type: string
        type:
          description: 'Deprecated: Use `changeType` instead.'
          deprecated: true
          type: string
        teamDriveId:
          description: 'Deprecated: Use `driveId` instead.'
          deprecated: true
          type: string
        teamDrive:
          description: 'Deprecated: Use `drive` instead.'
          deprecated: true
          $ref: '#/components/schemas/TeamDrive'
        changeType:
          description: The type of the change. Possible values are `file` and `drive`.
          type: string
        selfLink:
          description: A link back to this change.
          type: string
        driveId:
          description: The ID of the shared drive associated with this change.
          type: string
        drive:
          description: >-
            The updated state of the shared drive. Present if the changeType is
            drive, the user is still a member of the shared drive, and the
            shared drive has not been deleted.
          $ref: '#/components/schemas/Drive'
    File:
      id: File
      description: >-
        The metadata for a file. Some resource methods (such as `files.update`)
        require a `fileId`. Use the `files.list` method to retrieve the ID for a
        file.
      type: object
      properties:
        kind:
          description: Output only. The type of file. This is always `drive#file`.
          default: drive#file
          type: string
        userPermission:
          description: >-
            Output only. The permissions for the authenticated user on this
            file.
          $ref: '#/components/schemas/Permission'
        fileExtension:
          description: >-
            Output only. The final component of `fullFileExtension` with
            trailing text that does not appear to be part of the extension
            removed. This field is only populated for files with content stored
            in Google Drive; it is not populated for Docs Editors or shortcut
            files.
          type: string
        md5Checksum:
          description: >-
            Output only. An MD5 checksum for the content of this file. This
            field is only populated for files with content stored in Google
            Drive; it is not populated for Docs Editors or shortcut files.
          type: string
        selfLink:
          description: Output only. A link back to this file.
          type: string
        ownerNames:
          description: >-
            Output only. Name(s) of the owner(s) of this file. Not populated for
            items in shared drives.
          type: array
          items:
            type: string
        lastModifyingUserName:
          description: Output only. Name of the last user to modify this file.
          type: string
        editable:
          description: 'Output only. Deprecated: Use `capabilities/canEdit` instead.'
          deprecated: true
          type: boolean
        writersCanShare:
          description: >-
            Whether writers can share the document with other users. Not
            populated for items in shared drives.
          type: boolean
        downloadUrl:
          description: >-
            Output only. Short lived download URL for the file. This field is
            only populated for files with content stored in Google Drive; it is
            not populated for Google Docs or shortcut files.
          type: string
        mimeType:
          description: >-
            The MIME type of the file. This is only mutable on update when
            uploading new content. This field can be left blank, and the
            mimetype will be determined from the uploaded content's MIME type.
          type: string
        exportLinks:
          description: >-
            Output only. Links for exporting Docs Editors files to specific
            formats.
          readOnly: true
          type: object
          additionalProperties:
            type: string
        driveId:
          description: >-
            Output only. ID of the shared drive the file resides in. Only
            populated for items in shared drives.
          type: string
        parents:
          description: >-
            The ID of the parent folder containing the file. A file can only
            have one parent folder; specifying multiple parents isn't supported.
            If not specified as part of an insert request, the file is placed
            directly in the user's My Drive folder. If not specified as part of
            a copy request, the file inherits any discoverable parent of the
            source file. Update requests must use the `addParents` and
            `removeParents` parameters to modify the parents list.
          type: array
          items:
            $ref: '#/components/schemas/ParentReference'
        thumbnailLink:
          description: >-
            Output only. A short-lived link to the file's thumbnail, if
            available. Typically lasts on the order of hours. Not intended for
            direct usage on web applications due to [Cross-Origin Resource
            Sharing
            (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS),
            consider using a proxy server. Only populated when the requesting
            app can access the file's content. If the file isn't shared
            publicly, the URL returned in `Files.thumbnailLink` must be fetched
            using a credentialed request.
          type: string
        appDataContents:
          description: Output only. Whether this file is in the Application Data folder.
          type: boolean
        webViewLink:
          description: >-
            Output only. A link only available on public folders for viewing
            their static web assets (HTML, CSS, JS, etc) via Google Drive's
            Website Hosting.
          type: string
        iconLink:
          description: Output only. A link to the file's icon.
          type: string
        shared:
          description: >-
            Output only. Whether the file has been shared. Not populated for
            items in shared drives.
          type: boolean
        lastModifyingUser:
          description: >-
            Output only. The last user to modify this file. This field is only
            populated when the last modification was performed by a signed-in
            user.
          $ref: '#/components/schemas/User'
        owners:
          description: >-
            Output only. The owner of this file. Only certain legacy files may
            have more than one owner. This field isn't populated for items in
            shared drives.
          type: array
          items:
            $ref: '#/components/schemas/User'
        openWithLinks:
          description: >-
            Output only. A map of the id of each of the user's apps to a link to
            open this file with that app. Only populated when the
            drive.apps.readonly scope is used.
          type: object
          additionalProperties:
            type: string
        defaultOpenWithLink:
          description: >-
            Output only. A link to open this file with the user's default app
            for this file. Only populated when the drive.apps.readonly scope is
            used.
          type: string
        headRevisionId:
          description: >-
            Output only. The ID of the file's head revision. This field is only
            populated for files with content stored in Google Drive; it is not
            populated for Docs Editors or shortcut files.
          type: string
        properties:
          description: The list of properties.
          type: array
          items:
            $ref: '#/components/schemas/Property'
        copyable:
          description: 'Output only. Deprecated: Use `capabilities/canCopy` instead.'
          deprecated: true
          type: boolean
        etag:
          description: Output only. ETag of the file.
          type: string
        sharingUser:
          description: >-
            Output only. User that shared the item with the current user, if
            available.
          $ref: '#/components/schemas/User'
        alternateLink:
          description: >-
            Output only. A link for opening the file in a relevant Google editor
            or viewer.
          type: string
        embedLink:
          description: Output only. A link for embedding the file.
          type: string
        webContentLink:
          description: >-
            Output only. A link for downloading the content of the file in a
            browser using cookie based authentication. In cases where the
            content is shared publicly, the content can be downloaded without
            any credentials.
          type: string
        fileSize:
          description: >-
            Output only. Size in bytes of blobs and first party editor files.
            Won't be populated for files that have no size, like shortcuts and
            folders.
          type: string
          format: int64
        copyRequiresWriterPermission:
          description: >-
            Whether the options to copy, print, or download this file, should be
            disabled for readers and commenters.
          type: boolean
        permissions:
          description: >-
            Output only. The list of permissions for users with access to this
            file. Not populated for items in shared drives.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        hasThumbnail:
          description: >-
            Output only. Whether this file has a thumbnail. This does not
            indicate whether the requesting app has access to the thumbnail. To
            check access, look for the presence of the thumbnailLink field.
          type: boolean
        spaces:
          description: >-
            Output only. The list of spaces which contain the file. Supported
            values are `drive`, `appDataFolder` and `photos`.
          type: array
          items:
            type: string
        folderColorRgb:
          description: >-
            Folder color as an RGB hex string if the file is a folder or a
            shortcut to a folder. The list of supported colors is available in
            the folderColorPalette field of the About resource. If an
            unsupported color is specified, it will be changed to the closest
            color in the palette.
          type: string
        id:
          description: The ID of the file.
          type: string
        title:
          description: >-
            The title of this file. Note that for immutable items such as the
            top level folders of shared drives, My Drive root folder, and
            Application Data folder the title is constant.
          type: string
        description:
          description: A short description of the file.
          type: string
        labels:
          description: A group of labels for the file.
          type: object
          properties:
            viewed:
              description: Whether this file has been viewed by this user.
              type: boolean
            restricted:
              description: >-
                Output only. Deprecated: Use `copyRequiresWriterPermission`
                instead.
              deprecated: true
              type: boolean
            starred:
              description: Whether this file is starred by the user.
              type: boolean
            hidden:
              description: Output only. Deprecated.
              deprecated: true
              type: boolean
            trashed:
              description: >-
                Whether this file has been trashed. This label applies to all
                users accessing the file; however, only owners are allowed to
                see and untrash files.
              type: boolean
            modified:
              description: Output only. Whether the file has been modified by this user.
              type: boolean
        explicitlyTrashed:
          description: >-
            Output only. Whether this file has been explicitly trashed, as
            opposed to recursively trashed.
          type: boolean
        createdDate:
          description: Create time for this file (formatted RFC 3339 timestamp).
          type: string
          format: date-time
        modifiedDate:
          description: >-
            Last time this file was modified by anyone (formatted RFC 3339
            timestamp). This is only mutable on update when the setModifiedDate
            parameter is set.
          type: string
          format: date-time
        modifiedByMeDate:
          description: >-
            Last time this file was modified by the user (formatted RFC 3339
            timestamp). Note that setting modifiedDate will also update the
            modifiedByMe date for the user which set the date.
          type: string
          format: date-time
        lastViewedByMeDate:
          description: >-
            Last time this file was viewed by the user (formatted RFC 3339
            timestamp).
          type: string
          format: date-time
        markedViewedByMeDate:
          description: Deprecated.
          type: string
          format: date-time
        sharedWithMeDate:
          description: >-
            Time at which this file was shared with the user (formatted RFC 3339
            timestamp).
          type: string
          format: date-time
        quotaBytesUsed:
          description: Output only. The number of quota bytes used by this file.
          type: string
          format: int64
        version:
          description: >-
            Output only. A monotonically increasing version number for the file.
            This reflects every change made to the file on the server, even
            those not visible to the requesting user.
          type: string
          format: int64
        indexableText:
          description: Indexable text attributes for the file (can only be written)
          type: object
          properties:
            text:
              description: The text to be indexed for this file.
              type: string
        originalFilename:
          description: >-
            The original filename of the uploaded content if available, or else
            the original value of the `title` field. This is only available for
            files with binary content in Google Drive.
          type: string
        ownedByMe:
          description: >-
            Output only. Whether the file is owned by the current user. Not
            populated for items in shared drives.
          type: boolean
        canComment:
          description: 'Output only. Deprecated: Use `capabilities/canComment` instead.'
          deprecated: true
          type: boolean
        shareable:
          description: 'Output only. Deprecated: Use `capabilities/canShare` instead.'
          deprecated: true
          type: boolean
        fullFileExtension:
          description: >-
            Output only. The full file extension; extracted from the title. May
            contain multiple concatenated extensions, such as "tar.gz". Removing
            an extension from the title does not clear this field; however,
            changing the extension on the title does update this field. This
            field is only populated for files with content stored in Google
            Drive; it is not populated for Docs Editors or shortcut files.
          type: string
        isAppAuthorized:
          description: >-
            Output only. Whether the file was created or opened by the
            requesting app.
          type: boolean
        teamDriveId:
          description: 'Output only. Deprecated: Use `driveId` instead.'
          deprecated: true
          type: string
        capabilities:
          description: >-
            Output only. Capabilities the current user has on this file. Each
            capability corresponds to a fine-grained action that a user may
            take.
          type: object
          properties:
            canChangeRestrictedDownload:
              description: Output only. Deprecated.
              deprecated: true
              type: boolean
            canMoveChildrenOutOfDrive:
              description: >-
                Output only. Whether the current user can move children of this
                folder outside of the shared drive. This is false when the item
                is not a folder. Only populated for items in shared drives.
              type: boolean
            canReadDrive:
              description: >-
                Output only. Whether the current user can read the shared drive
                to which this file belongs. Only populated for items in shared
                drives.
              type: boolean
            canEdit:
              description: >-
                Output only. Whether the current user can edit this file. Other
                factors may limit the type of changes a user can make to a file.
                For example, see `canChangeCopyRequiresWriterPermission` or
                `canModifyContent`.
              type: boolean
            canCopy:
              description: >-
                Output only. Whether the current user can copy this file. For an
                item in a shared drive, whether the current user can copy
                non-folder descendants of this item, or this item itself if it
                is not a folder.
              type: boolean
            canComment:
              description: Output only. Whether the current user can comment on this file.
              type: boolean
            canAddChildren:
              description: >-
                Output only. Whether the current user can add children to this
                folder. This is always false when the item is not a folder.
              type: boolean
            canDelete:
              description: Output only. Whether the current user can delete this file.
              type: boolean
            canDownload:
              description: Output only. Whether the current user can download this file.
              type: boolean
            canListChildren:
              description: >-
                Output only. Whether the current user can list the children of
                this folder. This is always false when the item is not a folder.
              type: boolean
            canRemoveChildren:
              description: >-
                Output only. Whether the current user can remove children from
                this folder. This is always false when the item is not a folder.
                For a folder in a shared drive, use `canDeleteChildren` or
                `canTrashChildren` instead.
              type: boolean
            canRename:
              description: Output only. Whether the current user can rename this file.
              type: boolean
            canTrash:
              description: >-
                Output only. Whether the current user can move this file to
                trash.
              type: boolean
            canReadRevisions:
              description: >-
                Output only. Whether the current user can read the revisions
                resource of this file. For a shared drive item, whether
                revisions of non-folder descendants of this item, or this item
                itself if it is not a folder, can be read.
              type: boolean
            canReadTeamDrive:
              description: 'Output only. Deprecated: Use `canReadDrive` instead.'
              deprecated: true
              type: boolean
            canMoveTeamDriveItem:
              description: >-
                Output only. Deprecated: Use `canMoveItemWithinDrive` or
                `canMoveItemOutOfDrive` instead.
              deprecated: true
              type: boolean
            canChangeCopyRequiresWriterPermission:
              description: >-
                Output only. Whether the current user can change the
                `copyRequiresWriterPermission` restriction of this file.
              type: boolean
            canMoveItemIntoTeamDrive:
              description: 'Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.'
              deprecated: true
              type: boolean
            canUntrash:
              description: >-
                Output only. Whether the current user can restore this file from
                trash.
              type: boolean
            canModifyContent:
              description: >-
                Output only. Whether the current user can modify the content of
                this file.
              type: boolean
            canMoveItemWithinTeamDrive:
              description: 'Output only. Deprecated: Use `canMoveItemWithinDrive` instead.'
              deprecated: true
              type: boolean
            canMoveItemOutOfTeamDrive:
              description: 'Output only. Deprecated: Use `canMoveItemOutOfDrive` instead.'
              deprecated: true
              type: boolean
            canDeleteChildren:
              description: >-
                Output only. Whether the current user can delete children of
                this folder. This is false when the item is not a folder. Only
                populated for items in shared drives.
              type: boolean
            canMoveChildrenOutOfTeamDrive:
              description: >-
                Output only. Deprecated: Use `canMoveChildrenOutOfDrive`
                instead.
              deprecated: true
              type: boolean
            canMoveChildrenWithinTeamDrive:
              description: >-
                Output only. Deprecated: Use `canMoveChildrenWithinDrive`
                instead.
              deprecated: true
              type: boolean
            canTrashChildren:
              description: >-
                Output only. Whether the current user can trash children of this
                folder. This is false when the item is not a folder. Only
                populated for items in shared drives.
              type: boolean
            canMoveItemOutOfDrive:
              description: >-
                Output only. Whether the current user can move this item outside
                of this drive by changing its parent. Note that a request to
                change the parent of the item may still fail depending on the
                new parent that is being added.
              type: boolean
            canAddMyDriveParent:
              description: >-
                Output only. Whether the current user can add a parent for the
                item without removing an existing parent in the same request.
                Not populated for shared drive files.
              type: boolean
            canRemoveMyDriveParent:
              description: >-
                Output only. Whether the current user can remove a parent from
                the item without adding another parent in the same request. Not
                populated for shared drive files.
              type: boolean
            canMoveItemWithinDrive:
              description: >-
                Output only. Whether the current user can move this item within
                this drive. Note that a request to change the parent of the item
                may still fail depending on the new parent that is being added
                and the parent that is being removed.
              type: boolean
            canShare:
              description: >-
                Output only. Whether the current user can modify the sharing
                settings for this file.
              type: boolean
            canMoveChildrenWithinDrive:
              description: >-
                Output only. Whether the current user can move children of this
                folder within this drive. This is false when the item is not a
                folder. Note that a request to move the child may still fail
                depending on the current user's access to the child and to the
                destination folder.
              type: boolean
            canModifyContentRestriction:
              description: >-
                Deprecated: Output only. Use one of
                `canModifyEditorContentRestriction`,
                `canModifyOwnerContentRestriction` or
                `canRemoveContentRestriction`.
              deprecated: true
              type: boolean
            canAddFolderFromAnotherDrive:
              description: >-
                Output only. Whether the current user can add a folder from
                another drive (different shared drive or My Drive) to this
                folder. This is false when the item is not a folder. Only
                populated for items in shared drives.
              type: boolean
            canChangeSecurityUpdateEnabled:
              description: >-
                Output only. Whether the current user can change the
                securityUpdateEnabled field on link share metadata.
              type: boolean
            canAcceptOwnership:
              description: >-
                Output only. Whether the current user is the pending owner of
                the file. Not populated for shared drive files.
              type: boolean
            canReadLabels:
              description: >-
                Output only. Whether the current user can read the labels on the
                file.
              type: boolean
            canModifyLabels:
              description: >-
                Output only. Whether the current user can modify the labels on
                the file.
              type: boolean
            canModifyEditorContentRestriction:
              description: >-
                Output only. Whether the current user can add or modify content
                restrictions on the file which are editor restricted.
              type: boolean
            canModifyOwnerContentRestriction:
              description: >-
                Output only. Whether the current user can add or modify content
                restrictions which are owner restricted.
              type: boolean
            canRemoveContentRestriction:
              description: >-
                Output only. Whether there is a content restriction on the file
                that can be removed by the current user.
              type: boolean
            canDisableInheritedPermissions:
              description: Output only. Whether a user can disable inherited permissions.
              readOnly: true
              type: boolean
            canEnableInheritedPermissions:
              description: Output only. Whether a user can re-enable inherited permissions.
              readOnly: true
              type: boolean
        hasAugmentedPermissions:
          description: >-
            Output only. Whether there are permissions directly on this file.
            This field is only populated for items in shared drives.
          type: boolean
        trashingUser:
          description: >-
            Output only. If the file has been explicitly trashed, the user who
            trashed it. Only populated for items in shared drives.
          $ref: '#/components/schemas/User'
        canReadRevisions:
          description: >-
            Output only. Deprecated: Use `capabilities/canReadRevisions`
            instead.
          deprecated: true
          type: boolean
        thumbnailVersion:
          description: >-
            Output only. The thumbnail version for use in thumbnail cache
            invalidation.
          type: string
          format: int64
        trashedDate:
          description: >-
            The time that the item was trashed (formatted RFC 3339 timestamp).
            Only populated for items in shared drives.
          type: string
          format: date-time
        permissionIds:
          description: >-
            Output only. List of permission IDs for users with access to this
            file.
          type: array
          items:
            type: string
        thumbnail:
          description: >-
            A thumbnail for the file. This will only be used if a standard
            thumbnail cannot be generated.
          type: object
          properties:
            image:
              description: >-
                The URL-safe Base64 encoded bytes of the thumbnail image. It
                should conform to RFC 4648 section 5.
              type: string
              format: byte
            mimeType:
              description: The MIME type of the thumbnail.
              type: string
        imageMediaMetadata:
          description: >-
            Output only. Metadata about image media. This will only be present
            for image types, and its contents will depend on what can be parsed
            from the image content.
          type: object
          properties:
            flashUsed:
              description: Output only. Whether a flash was used to create the photo.
              type: boolean
            meteringMode:
              description: Output only. The metering mode used to create the photo.
              type: string
            sensor:
              description: Output only. The type of sensor used to create the photo.
              type: string
            exposureMode:
              description: Output only. The exposure mode used to create the photo.
              type: string
            colorSpace:
              description: Output only. The color space of the photo.
              type: string
            whiteBalance:
              description: Output only. The white balance mode used to create the photo.
              type: string
            width:
              description: Output only. The width of the image in pixels.
              type: integer
              format: int32
            height:
              description: Output only. The height of the image in pixels.
              type: integer
              format: int32
            location:
              description: >-
                Output only. Geographic location information stored in the
                image.
              type: object
              properties:
                latitude:
                  description: Output only. The latitude stored in the image.
                  type: number
                  format: double
                longitude:
                  description: Output only. The longitude stored in the image.
                  type: number
                  format: double
                altitude:
                  description: Output only. The altitude stored in the image.
                  type: number
                  format: double
            rotation:
              description: >-
                Output only. The number of clockwise 90 degree rotations applied
                from the image's original orientation.
              type: integer
              format: int32
            date:
              description: >-
                Output only. The date and time the photo was taken (EXIF format
                timestamp).
              type: string
            cameraMake:
              description: Output only. The make of the camera used to create the photo.
              type: string
            cameraModel:
              description: Output only. The model of the camera used to create the photo.
              type: string
            exposureTime:
              description: Output only. The length of the exposure, in seconds.
              type: number
              format: float
            aperture:
              description: Output only. The aperture used to create the photo (f-number).
              type: number
              format: float
            focalLength:
              description: >-
                Output only. The focal length used to create the photo, in
                millimeters.
              type: number
              format: float
            isoSpeed:
              description: Output only. The ISO speed used to create the photo.
              type: integer
              format: int32
            exposureBias:
              description: Output only. The exposure bias of the photo (APEX value).
              type: number
              format: float
            maxApertureValue:
              description: >-
                Output only. The smallest f-number of the lens at the focal
                length used to create the photo (APEX value).
              type: number
              format: float
            subjectDistance:
              description: >-
                Output only. The distance to the subject of the photo, in
                meters.
              type: integer
              format: int32
            lens:
              description: Output only. The lens used to create the photo.
              type: string
        videoMediaMetadata:
          description: >-
            Output only. Metadata about video media. This will only be present
            for video types.
          type: object
          properties:
            width:
              description: Output only. The width of the video in pixels.
              type: integer
              format: int32
            height:
              description: Output only. The height of the video in pixels.
              type: integer
              format: int32
            durationMillis:
              description: Output only. The duration of the video in milliseconds.
              type: string
              format: int64
        shortcutDetails:
          description: >-
            Shortcut file details. Only populated for shortcut files, which have
            the mimeType field set to `application/vnd.google-apps.shortcut`.
            Can only be set on `files.insert` requests.
          type: object
          properties:
            targetId:
              description: >-
                The ID of the file that this shortcut points to. Can only be set
                on `files.insert` requests.
              type: string
            targetMimeType:
              description: >-
                Output only. The MIME type of the file that this shortcut points
                to. The value of this field is a snapshot of the target's MIME
                type, captured when the shortcut is created.
              type: string
            targetResourceKey:
              description: Output only. The ResourceKey for the target file.
              type: string
        contentRestrictions:
          description: >-
            Restrictions for accessing the content of the file. Only populated
            if such a restriction exists.
          type: array
          items:
            $ref: '#/components/schemas/ContentRestriction'
        resourceKey:
          description: Output only. A key needed to access the item via a shared link.
          type: string
        linkShareMetadata:
          description: >-
            Contains details about the link URLs that clients are using to refer
            to this item.
          type: object
          properties:
            securityUpdateEligible:
              description: Output only. Whether the file is eligible for security update.
              type: boolean
            securityUpdateEnabled:
              description: >-
                Output only. Whether the security update is enabled for this
                file.
              type: boolean
        labelInfo:
          description: Output only. An overview of the labels on the file.
          type: object
          properties:
            labels:
              description: >-
                Output only. The set of labels on the file as requested by the
                label IDs in the `includeLabels` parameter. By default, no
                labels are returned.
              type: array
              items:
                $ref: '#/components/schemas/Label'
        sha1Checksum:
          description: >-
            Output only. The SHA1 checksum associated with this file, if
            available. This field is only populated for files with content
            stored in Google Drive; it is not populated for Docs Editors or
            shortcut files.
          type: string
        sha256Checksum:
          description: >-
            Output only. The SHA256 checksum associated with this file, if
            available. This field is only populated for files with content
            stored in Google Drive; it is not populated for Docs Editors or
            shortcut files.
          type: string
        inheritedPermissionsDisabled:
          description: >-
            Whether this file has inherited permissions disabled. Inherited
            permissions are enabled by default.
          type: boolean
    Permission:
      id: Permission
      description: >-
        A permission for a file. A permission grants a user, group, domain, or
        the world access to a file or a folder hierarchy. Some resource methods
        (such as `permissions.update`) require a `permissionId`. Use the
        `permissions.list` method to retrieve the ID for a file, folder, or
        shared drive.
      type: object
      properties:
        id:
          description: >-
            The ID of the user this permission refers to, and identical to the
            `permissionId` in the About and Files resources. When making a
            `drive.permissions.insert` request, exactly one of the `id` or
            `value` fields must be specified unless the permission type is
            `anyone`, in which case both `id` and `value` are ignored.
          type: string
        name:
          description: Output only. The name for this permission.
          type: string
        type:
          description: >-
            The account type. Allowed values are: * `user` * `group` * `domain`
            * `anyone`
          annotations:
            required:
              - drive.permissions.insert
          type: string
        role:
          description: >-
            The primary role for this user. While new values may be supported in
            the future, the following are currently allowed: * `owner` *
            `organizer` * `fileOrganizer` * `writer` * `reader`
          annotations:
            required:
              - drive.permissions.insert
          type: string
        additionalRoles:
          description: >-
            Additional roles for this user. Only `commenter` is currently
            allowed, though more may be supported in the future.
          type: array
          items:
            type: string
        authKey:
          description: Output only. Deprecated.
          deprecated: true
          type: string
        value:
          description: >-
            The email address or domain name for the entity. This is used during
            inserts and is not populated in responses. When making a
            `drive.permissions.insert` request, exactly one of the `id` or
            `value` fields must be specified unless the permission type is
            `anyone`, in which case both `id` and `value` are ignored.
          type: string
        kind:
          description: Output only. This is always `drive#permission`.
          default: drive#permission
          type: string
        withLink:
          description: Whether the link is required for this permission.
          type: boolean
        photoLink:
          description: Output only. A link to the profile photo, if available.
          type: string
        selfLink:
          description: Output only. A link back to this permission.
          type: string
        emailAddress:
          description: >-
            Output only. The email address of the user or group this permission
            refers to. This is an output-only field which is present when the
            permission type is `user` or `group`.
          type: string
        domain:
          description: >-
            Output only. The domain name of the entity this permission refers
            to. This is an output-only field which is present when the
            permission type is `user`, `group` or `domain`.
          type: string
        etag:
          description: Output only. The ETag of the permission.
          type: string
        permissionDetails:
          description: >-
            Output only. Details of whether the permissions on this item are
            inherited or directly on this item.
          readOnly: true
          type: array
          items:
            type: object
            properties:
              permissionType:
                description: >-
                  Output only. The permission type for this user. While new
                  values may be added in future, the following are currently
                  possible: * `file` * `member`
                type: string
              role:
                description: >-
                  Output only. The primary role for this user. While new values
                  may be added in the future, the following are currently
                  possible: * `organizer` * `fileOrganizer` * `writer` *
                  `reader`
                type: string
              additionalRoles:
                description: >-
                  Output only. Additional roles for this user. Only `commenter`
                  is currently possible, though more may be supported in the
                  future.
                type: array
                items:
                  type: string
              inheritedFrom:
                description: >-
                  Output only. The ID of the item from which this permission is
                  inherited. This is only populated for items in shared drives.
                type: string
              inherited:
                description: >-
                  Output only. Whether this permission is inherited. This field
                  is always populated.
                type: boolean
        expirationDate:
          description: >-
            The time at which this permission will expire (RFC 3339 date-time).
            Expiration dates have the following restrictions: - They can only be
            set on user and group permissions - The date must be in the future -
            The date cannot be more than a year in the future - The date can
            only be set on drive.permissions.update or drive.permissions.patch
            requests
          type: string
          format: date-time
        teamDrivePermissionDetails:
          description: 'Output only. Deprecated: Use `permissionDetails` instead.'
          readOnly: true
          deprecated: true
          type: array
          items:
            type: object
            properties:
              teamDrivePermissionType:
                description: >-
                  Output only. Deprecated: Use
                  `permissionDetails/permissionType` instead.
                deprecated: true
                type: string
              role:
                description: 'Output only. Deprecated: Use `permissionDetails/role` instead.'
                deprecated: true
                type: string
              additionalRoles:
                description: >-
                  Output only. Deprecated: Use
                  `permissionDetails/additionalRoles` instead.
                deprecated: true
                type: array
                items:
                  type: string
              inheritedFrom:
                description: >-
                  Output only. Deprecated: Use `permissionDetails/inheritedFrom`
                  instead.
                deprecated: true
                type: string
              inherited:
                description: >-
                  Output only. Deprecated: Use `permissionDetails/inherited`
                  instead.
                deprecated: true
                type: boolean
        deleted:
          description: >-
            Output only. Whether the account associated with this permission has
            been deleted. This field only pertains to user and group
            permissions.
          type: boolean
        view:
          description: >-
            Indicates the view for this permission. Only populated for
            permissions that belong to a view. published and metadata are the
            only supported values. - published: The permission's role is
            published_reader. - metadata: The item is only visible to the
            metadata view because the item has limited access and the scope has
            at least read access to the parent. Note: The metadata view is
            currently only supported on folders. 
          type: string
        pendingOwner:
          description: >-
            Whether the account associated with this permission is a pending
            owner. Only populated for `user` type permissions for files that are
            not in a shared drive.
          type: boolean
        inheritedPermissionsDisabled:
          description: >-
            When true, only organizers, owners, and users with permissions added
            directly on the item can access it.
          type: boolean
    ParentReference:
      id: ParentReference
      description: >-
        A reference to a file's parent. A file can only have one parent folder;
        specifying multiple parents isn't supported. Some resource methods (such
        as `parents.get`) require a `parentId`. Use the `parents.list` method to
        retrieve the ID for a parent.
      type: object
      properties:
        selfLink:
          description: Output only. A link back to this reference.
          type: string
        id:
          description: The ID of the parent.
          annotations:
            required:
              - drive.parents.insert
          type: string
        isRoot:
          description: Output only. Whether or not the parent is the root folder.
          type: boolean
        kind:
          description: Output only. This is always `drive#parentReference`.
          default: drive#parentReference
          type: string
        parentLink:
          description: Output only. A link to the parent.
          type: string
    Property:
      id: Property
      description: >-
        A key-value pair attached to a file that is either public or private to
        an application. The following limits apply to file properties: * Maximum
        of 100 properties total per file * Maximum of 30 private properties per
        app * Maximum of 30 public properties * Maximum of 124 bytes size limit
        on (key + value) string in UTF-8 encoding for a single property Some
        resource methods (such as `properties.update`) require a `propertyKey`.
        Use the `properties.list` method to retrieve the key for a property.
      type: object
      properties:
        selfLink:
          description: Output only. The link back to this property.
          type: string
        value:
          description: The value of this property.
          type: string
        visibility:
          description: >-
            The visibility of this property. Allowed values are PRIVATE
            (default) and PUBLIC. Private properties can only be retrieved using
            an authenticated request. An authenticated request uses an access
            token obtained with a OAuth 2 client ID. You cannot use an API key
            to retrieve private properties.
          type: string
        kind:
          description: Output only. This is always `drive#property`.
          default: drive#property
          type: string
        etag:
          description: Output only. ETag of the property.
          type: string
        key:
          description: The key of this property.
          annotations:
            required:
              - drive.properties.insert
          type: string
    ContentRestriction:
      id: ContentRestriction
      description: A restriction for accessing the content of the file.
      type: object
      properties:
        readOnly:
          description: >-
            Whether the content of the file is read-only. If a file is
            read-only, a new revision of the file may not be added, comments may
            not be added or modified, and the title of the file may not be
            modified.
          type: boolean
        reason:
          description: >-
            Reason for why the content of the file is restricted. This is only
            mutable on requests that also set `readOnly=true`.
          type: string
        type:
          description: >-
            Output only. The type of the content restriction. Currently the only
            possible value is `globalContentRestriction`.
          type: string
        restrictingUser:
          description: >-
            Output only. The user who set the content restriction. Only
            populated if `readOnly` is true.
          $ref: '#/components/schemas/User'
        restrictionDate:
          description: >-
            The time at which the content restriction was set (formatted RFC
            3339 timestamp). Only populated if readOnly is true.
          type: string
          format: date-time
        ownerRestricted:
          description: >-
            Whether the content restriction can only be modified or removed by a
            user who owns the file. For files in shared drives, any user with
            `organizer` capabilities can modify or remove this content
            restriction.
          type: boolean
        systemRestricted:
          description: >-
            Output only. Whether the content restriction was applied by the
            system, for example due to an esignature. Users cannot modify or
            remove system restricted content restrictions.
          type: boolean
    Label:
      id: Label
      description: Representation of a label and label fields.
      type: object
      properties:
        id:
          description: The ID of the label.
          type: string
        revisionId:
          description: The revision ID of the label.
          type: string
        kind:
          description: This is always `drive#label`
          default: drive#label
          type: string
        fields:
          description: A map of the fields on the label, keyed by the field's ID.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LabelField'
    LabelField:
      id: LabelField
      description: Representation of field, which is a typed key-value pair.
      type: object
      properties:
        kind:
          description: This is always `drive#labelField`.
          default: drive#labelField
          type: string
        id:
          description: The identifier of this label field.
          type: string
        valueType:
          description: >-
            The field type. While new values may be supported in the future, the
            following are currently allowed: * `dateString` * `integer` *
            `selection` * `text` * `user`
          type: string
        dateString:
          description: >-
            Only present if valueType is dateString. RFC 3339 formatted date:
            YYYY-MM-DD.
          type: array
          items:
            type: string
            format: date
        integer:
          description: Only present if `valueType` is `integer`.
          type: array
          items:
            type: string
            format: int64
        selection:
          description: Only present if `valueType` is `selection`
          type: array
          items:
            type: string
        text:
          description: Only present if `valueType` is `text`.
          type: array
          items:
            type: string
        user:
          description: Only present if `valueType` is `user`.
          type: array
          items:
            $ref: '#/components/schemas/User'
    TeamDrive:
      id: TeamDrive
      description: 'Deprecated: Use the `drive` collection instead.'
      type: object
      properties:
        id:
          description: >-
            The ID of this Team Drive which is also the ID of the top level
            folder of this Team Drive.
          type: string
        name:
          description: The name of this Team Drive.
          annotations:
            required:
              - drive.teamdrives.insert
          type: string
        colorRgb:
          description: >-
            The color of this Team Drive as an RGB hex string. It can only be
            set on a `drive.teamdrives.update` request that does not set
            `themeId`.
          type: string
        kind:
          description: This is always `drive#teamDrive`
          default: drive#teamDrive
          type: string
        backgroundImageLink:
          description: A short-lived link to this Team Drive's background image.
          type: string
        capabilities:
          description: Capabilities the current user has on this Team Drive.
          type: object
          properties:
            canAddChildren:
              description: >-
                Whether the current user can add children to folders in this
                Team Drive.
              type: boolean
            canComment:
              description: >-
                Whether the current user can comment on files in this Team
                Drive.
              type: boolean
            canCopy:
              description: Whether the current user can copy files in this Team Drive.
              type: boolean
            canDeleteTeamDrive:
              description: >-
                Whether the current user can delete this Team Drive. Attempting
                to delete the Team Drive may still fail if there are untrashed
                items inside the Team Drive.
              type: boolean
            canDownload:
              description: Whether the current user can download files in this Team Drive.
              type: boolean
            canEdit:
              description: Whether the current user can edit files in this Team Drive
              type: boolean
            canListChildren:
              description: >-
                Whether the current user can list the children of folders in
                this Team Drive.
              type: boolean
            canManageMembers:
              description: >-
                Whether the current user can add members to this Team Drive or
                remove them or change their role.
              type: boolean
            canReadRevisions:
              description: >-
                Whether the current user can read the revisions resource of
                files in this Team Drive.
              type: boolean
            canRemoveChildren:
              description: >-
                Deprecated: Use `canDeleteChildren` or `canTrashChildren`
                instead.
              deprecated: true
              type: boolean
            canRename:
              description: >-
                Whether the current user can rename files or folders in this
                Team Drive.
              type: boolean
            canRenameTeamDrive:
              description: Whether the current user can rename this Team Drive.
              type: boolean
            canChangeTeamDriveBackground:
              description: >-
                Whether the current user can change the background of this Team
                Drive.
              type: boolean
            canShare:
              description: >-
                Whether the current user can share files or folders in this Team
                Drive.
              type: boolean
            canChangeCopyRequiresWriterPermissionRestriction:
              description: >-
                Whether the current user can change the
                `copyRequiresWriterPermission` restriction of this Team Drive.
              type: boolean
            canChangeDomainUsersOnlyRestriction:
              description: >-
                Whether the current user can change the `domainUsersOnly`
                restriction of this Team Drive.
              type: boolean
            canChangeSharingFoldersRequiresOrganizerPermissionRestriction:
              description: >-
                Whether the current user can change the
                `sharingFoldersRequiresOrganizerPermission` restriction of this
                Team Drive.
              type: boolean
            canChangeTeamMembersOnlyRestriction:
              description: >-
                Whether the current user can change the `teamMembersOnly`
                restriction of this Team Drive.
              type: boolean
            canDeleteChildren:
              description: >-
                Whether the current user can delete children from folders in
                this Team Drive.
              type: boolean
            canTrashChildren:
              description: >-
                Whether the current user can trash children from folders in this
                Team Drive.
              type: boolean
            canResetTeamDriveRestrictions:
              description: >-
                Whether the current user can reset the Team Drive restrictions
                to defaults.
              type: boolean
        themeId:
          description: >-
            The ID of the theme from which the background image and color will
            be set. The set of possible `teamDriveThemes` can be retrieved from
            a `drive.about.get` response. When not specified on a
            `drive.teamdrives.insert` request, a random theme is chosen from
            which the background image and color are set. This is a write-only
            field; it can only be set on requests that don't set `colorRgb` or
            `backgroundImageFile`.
          type: string
        backgroundImageFile:
          description: >-
            An image file and cropping parameters from which a background image
            for this Team Drive is set. This is a write only field; it can only
            be set on `drive.teamdrives.update` requests that don't set
            `themeId`. When specified, all fields of the `backgroundImageFile`
            must be set.
          type: object
          properties:
            id:
              description: >-
                The ID of an image file in Drive to use for the background
                image.
              type: string
            xCoordinate:
              description: >-
                The X coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the horizontal distance from the
                left side of the entire image to the left side of the cropping
                area divided by the width of the entire image.
              type: number
              format: float
            yCoordinate:
              description: >-
                The Y coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the vertical distance from the top
                side of the entire image to the top side of the cropping area
                divided by the height of the entire image.
              type: number
              format: float
            width:
              description: >-
                The width of the cropped image in the closed range of 0 to 1.
                This value represents the width of the cropped image divided by
                the width of the entire image. The height is computed by
                applying a width to height aspect ratio of 80 to 9. The
                resulting image must be at least 1280 pixels wide and 144 pixels
                high.
              type: number
              format: float
        createdDate:
          description: The time at which the Team Drive was created (RFC 3339 date-time).
          type: string
          format: date-time
        restrictions:
          description: >-
            A set of restrictions that apply to this Team Drive or items inside
            this Team Drive.
          type: object
          properties:
            copyRequiresWriterPermission:
              description: >-
                Whether the options to copy, print, or download files inside
                this Team Drive, should be disabled for readers and commenters.
                When this restriction is set to `true`, it will override the
                similarly named field to `true` for any file inside this Team
                Drive.
              type: boolean
            domainUsersOnly:
              description: >-
                Whether access to this Team Drive and items inside this Team
                Drive is restricted to users of the domain to which this Team
                Drive belongs. This restriction may be overridden by other
                sharing policies controlled outside of this Team Drive.
              type: boolean
            teamMembersOnly:
              description: >-
                Whether access to items inside this Team Drive is restricted to
                members of this Team Drive.
              type: boolean
            adminManagedRestrictions:
              description: >-
                Whether administrative privileges on this Team Drive are
                required to modify restrictions.
              type: boolean
            sharingFoldersRequiresOrganizerPermission:
              description: >-
                If true, only users with the organizer role can share folders.
                If false, users with either the organizer role or the file
                organizer role can share folders.
              type: boolean
        orgUnitId:
          description: >-
            The organizational unit of this shared drive. This field is only
            populated on `drives.list` responses when the `useDomainAdminAccess`
            parameter is set to `true`.
          type: string
    Drive:
      id: Drive
      description: >-
        Representation of a shared drive. Some resource methods (such as
        `drives.update`) require a `driveId`. Use the `drives.list` method to
        retrieve the ID for a shared drive.
      type: object
      properties:
        id:
          description: >-
            Output only. The ID of this shared drive which is also the ID of the
            top level folder of this shared drive.
          type: string
        name:
          description: The name of this shared drive.
          annotations:
            required:
              - drive.drives.insert
          type: string
        colorRgb:
          description: >-
            The color of this shared drive as an RGB hex string. It can only be
            set on a `drive.drives.update` request that does not set `themeId`.
          type: string
        kind:
          description: Output only. This is always `drive#drive`
          default: drive#drive
          type: string
        backgroundImageLink:
          description: >-
            Output only. A short-lived link to this shared drive's background
            image.
          type: string
        capabilities:
          description: Output only. Capabilities the current user has on this shared drive.
          type: object
          properties:
            canAddChildren:
              description: >-
                Output only. Whether the current user can add children to
                folders in this shared drive.
              type: boolean
            canComment:
              description: >-
                Output only. Whether the current user can comment on files in
                this shared drive.
              type: boolean
            canCopy:
              description: >-
                Output only. Whether the current user can copy files in this
                shared drive.
              type: boolean
            canDeleteDrive:
              description: >-
                Output only. Whether the current user can delete this shared
                drive. Attempting to delete the shared drive may still fail if
                there are untrashed items inside the shared drive.
              type: boolean
            canDownload:
              description: >-
                Output only. Whether the current user can download files in this
                shared drive.
              type: boolean
            canEdit:
              description: >-
                Output only. Whether the current user can edit files in this
                shared drive
              type: boolean
            canListChildren:
              description: >-
                Output only. Whether the current user can list the children of
                folders in this shared drive.
              type: boolean
            canManageMembers:
              description: >-
                Output only. Whether the current user can add members to this
                shared drive or remove them or change their role.
              type: boolean
            canReadRevisions:
              description: >-
                Output only. Whether the current user can read the revisions
                resource of files in this shared drive.
              type: boolean
            canRename:
              description: >-
                Output only. Whether the current user can rename files or
                folders in this shared drive.
              type: boolean
            canRenameDrive:
              description: >-
                Output only. Whether the current user can rename this shared
                drive.
              type: boolean
            canChangeDriveBackground:
              description: >-
                Output only. Whether the current user can change the background
                of this shared drive.
              type: boolean
            canShare:
              description: >-
                Output only. Whether the current user can share files or folders
                in this shared drive.
              type: boolean
            canChangeCopyRequiresWriterPermissionRestriction:
              description: >-
                Output only. Whether the current user can change the
                `copyRequiresWriterPermission` restriction of this shared drive.
              type: boolean
            canChangeDomainUsersOnlyRestriction:
              description: >-
                Output only. Whether the current user can change the
                `domainUsersOnly` restriction of this shared drive.
              type: boolean
            canChangeDriveMembersOnlyRestriction:
              description: >-
                Output only. Whether the current user can change the
                `driveMembersOnly` restriction of this shared drive.
              type: boolean
            canChangeSharingFoldersRequiresOrganizerPermissionRestriction:
              description: >-
                Output only. Whether the current user can change the
                `sharingFoldersRequiresOrganizerPermission` restriction of this
                shared drive.
              type: boolean
            canResetDriveRestrictions:
              description: >-
                Output only. Whether the current user can reset the shared drive
                restrictions to defaults.
              type: boolean
            canDeleteChildren:
              description: >-
                Output only. Whether the current user can delete children from
                folders in this shared drive.
              type: boolean
            canTrashChildren:
              description: >-
                Output only. Whether the current user can trash children from
                folders in this shared drive.
              type: boolean
        themeId:
          description: >-
            The ID of the theme from which the background image and color will
            be set. The set of possible `driveThemes` can be retrieved from a
            `drive.about.get` response. When not specified on a
            `drive.drives.insert` request, a random theme is chosen from which
            the background image and color are set. This is a write-only field;
            it can only be set on requests that don't set `colorRgb` or
            `backgroundImageFile`.
          type: string
        backgroundImageFile:
          description: >-
            An image file and cropping parameters from which a background image
            for this shared drive is set. This is a write only field; it can
            only be set on `drive.drives.update` requests that don't set
            `themeId`. When specified, all fields of the `backgroundImageFile`
            must be set.
          type: object
          properties:
            id:
              description: >-
                The ID of an image file in Google Drive to use for the
                background image.
              type: string
            xCoordinate:
              description: >-
                The X coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the horizontal distance from the
                left side of the entire image to the left side of the cropping
                area divided by the width of the entire image.
              type: number
              format: float
            yCoordinate:
              description: >-
                The Y coordinate of the upper left corner of the cropping area
                in the background image. This is a value in the closed range of
                0 to 1. This value represents the vertical distance from the top
                side of the entire image to the top side of the cropping area
                divided by the height of the entire image.
              type: number
              format: float
            width:
              description: >-
                The width of the cropped image in the closed range of 0 to 1.
                This value represents the width of the cropped image divided by
                the width of the entire image. The height is computed by
                applying a width to height aspect ratio of 80 to 9. The
                resulting image must be at least 1280 pixels wide and 144 pixels
                high.
              type: number
              format: float
        createdDate:
          description: The time at which the shared drive was created (RFC 3339 date-time).
          type: string
          format: date-time
        hidden:
          description: Whether the shared drive is hidden from default view.
          type: boolean
        restrictions:
          description: >-
            A set of restrictions that apply to this shared drive or items
            inside this shared drive.
          type: object
          properties:
            copyRequiresWriterPermission:
              description: >-
                Whether the options to copy, print, or download files inside
                this shared drive, should be disabled for readers and
                commenters. When this restriction is set to `true`, it will
                override the similarly named field to `true` for any file inside
                this shared drive.
              type: boolean
            domainUsersOnly:
              description: >-
                Whether access to this shared drive and items inside this shared
                drive is restricted to users of the domain to which this shared
                drive belongs. This restriction may be overridden by other
                sharing policies controlled outside of this shared drive.
              type: boolean
            driveMembersOnly:
              description: >-
                Whether access to items inside this shared drive is restricted
                to its members.
              type: boolean
            adminManagedRestrictions:
              description: >-
                Whether administrative privileges on this shared drive are
                required to modify restrictions.
              type: boolean
            sharingFoldersRequiresOrganizerPermission:
              description: >-
                If true, only users with the organizer role can share folders.
                If false, users with either the organizer role or the file
                organizer role can share folders.
              type: boolean
        orgUnitId:
          description: >-
            Output only. The organizational unit of this shared drive. This
            field is only populated on `drives.list` responses when the
            `useDomainAdminAccess` parameter is set to `true`.
          type: string
    StartPageToken:
      id: StartPageToken
      type: object
      properties:
        startPageToken:
          description: The starting page token for listing changes.
          type: string
        kind:
          description: >-
            Identifies what kind of resource this is. Value: the fixed string
            `"drive#startPageToken"`.
          default: drive#startPageToken
          type: string
    ChangeList:
      id: ChangeList
      description: A list of changes for a user.
      type: object
      properties:
        largestChangeId:
          description: The current largest change ID.
          type: string
          format: int64
        nextPageToken:
          description: >-
            The page token for the next page of changes. This will be absent if
            the end of the changes list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results.
          type: string
        kind:
          description: This is always `drive#changeList`.
          default: drive#changeList
          type: string
        etag:
          description: The ETag of the list.
          type: string
        newStartPageToken:
          description: >-
            The starting page token for future changes. This will be present
            only if the end of the current changes list has been reached.
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        nextLink:
          description: A link to the next page of changes.
          type: string
        items:
          description: >-
            The list of changes. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/Change'
    Channel:
      id: Channel
      description: A notification channel used to watch for resource changes.
      type: object
      properties:
        payload:
          description: A Boolean value to indicate whether payload is wanted. Optional.
          type: boolean
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        resourceId:
          description: >-
            An opaque ID that identifies the resource being watched on this
            channel. Stable across different API versions.
          type: string
        resourceUri:
          description: A version-specific identifier for the watched resource.
          type: string
        token:
          description: >-
            An arbitrary string delivered to the target address with each
            notification delivered over this channel. Optional.
          type: string
        expiration:
          description: >-
            Date and time of notification channel expiration, expressed as a
            Unix timestamp, in milliseconds. Optional.
          type: string
          format: int64
        type:
          description: >-
            The type of delivery mechanism used for this channel. Valid values
            are "web_hook" or "webhook".
          type: string
        address:
          description: The address where notifications are delivered for this channel.
          type: string
        params:
          description: >-
            Additional parameters controlling delivery channel behavior.
            Optional.
          type: object
          additionalProperties:
            type: string
        kind:
          description: >-
            Identifies this as a notification channel used to watch for changes
            to a resource, which is `api#channel`.
          default: api#channel
          type: string
    ChildReference:
      id: ChildReference
      description: >-
        A reference to a folder's child. Some resource methods (such as
        `children.get`) require a `childId`. Use the `children.list` method to
        retrieve the ID of the child.
      type: object
      properties:
        id:
          description: The ID of the child.
          annotations:
            required:
              - drive.children.insert
          type: string
        selfLink:
          description: Output only. A link back to this reference.
          type: string
        kind:
          description: Output only. This is always `drive#childReference`.
          default: drive#childReference
          type: string
        childLink:
          description: Output only. A link to the child.
          type: string
    ChildList:
      id: ChildList
      description: A list of children of a file.
      type: object
      properties:
        nextPageToken:
          description: >-
            The page token for the next page of children. This will be absent if
            the end of the children list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results.
          type: string
        kind:
          description: This is always `drive#childList`.
          default: drive#childList
          type: string
        etag:
          description: The ETag of the list.
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        nextLink:
          description: A link to the next page of children.
          type: string
        items:
          description: >-
            The list of children. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/ChildReference'
    Comment:
      id: Comment
      description: A comment on a file in Google Drive.
      type: object
      properties:
        commentId:
          description: The ID of the comment.
          type: string
        kind:
          description: This is always drive#comment.
          default: drive#comment
          type: string
        createdDate:
          description: The date when this comment was first created.
          type: string
          format: date-time
        modifiedDate:
          description: The date when this comment or any of its replies were last modified.
          type: string
          format: date-time
        fileId:
          description: The file which this comment is addressing.
          type: string
        fileTitle:
          description: The title of the file which this comment is addressing.
          type: string
        status:
          description: >-
            The status of this comment. Status can be changed by posting a reply
            to a comment with the desired status. Possible values are: * `open`
            - The comment is still open. * `resolved` - The comment has been
            resolved by one of its replies.
          type: string
        anchor:
          description: >-
            A region of the document represented as a JSON string. For details
            on defining anchor properties, refer to [Manage comments and
            replies](https://developers.google.com/workspace/drive/api/v3/manage-comments).
          type: string
        replies:
          description: Replies to this post.
          type: array
          items:
            $ref: '#/components/schemas/CommentReply'
        author:
          description: The user who wrote this comment.
          $ref: '#/components/schemas/User'
        deleted:
          description: >-
            Whether this comment has been deleted. If a comment has been deleted
            the content will be cleared and this will only represent a comment
            that once existed.
          type: boolean
        selfLink:
          description: A link back to this comment.
          type: string
        htmlContent:
          description: HTML formatted content for this comment.
          type: string
        content:
          description: >-
            The plain text content used to create this comment. This is not HTML
            safe and should only be used as a starting point to make edits to a
            comment's content.
          annotations:
            required:
              - drive.comments.insert
              - drive.comments.patch
              - drive.comments.update
          type: string
        context:
          description: Context of a file which is being commented on.
          type: object
          properties:
            type:
              description: The MIME type of the context snippet.
              type: string
            value:
              description: >-
                Data representation of the segment of the file being commented
                on. In the case of a text file for example, this would be the
                actual text that the comment is about.
              type: string
        resolved:
          description: >-
            Output only. Whether the comment has been resolved by one of its
            replies.
          type: boolean
        genoaAuthor:
          description: The user who wrote this comment as a GenoaUser.
          $ref: '#/components/schemas/GenoaUser'
    CommentReply:
      id: CommentReply
      description: A reply to a comment on a file in Google Drive.
      type: object
      properties:
        replyId:
          description: The ID of the reply.
          type: string
        kind:
          description: This is always drive#commentReply.
          default: drive#commentReply
          type: string
        createdDate:
          description: The date when this reply was first created.
          type: string
          format: date-time
        modifiedDate:
          description: The date when this reply was last modified.
          type: string
          format: date-time
        verb:
          description: >-
            The action this reply performed to the parent comment. When creating
            a new reply this is the action to be perform tSo the parent comment.
            Possible values are: * `resolve` - To resolve a comment. * `reopen`
            - To reopen (un-resolve) a comment.
          type: string
        author:
          description: The user who wrote this reply.
          $ref: '#/components/schemas/User'
        deleted:
          description: >-
            Whether this reply has been deleted. If a reply has been deleted the
            content will be cleared and this will only represent a reply that
            once existed.
          type: boolean
        htmlContent:
          description: HTML formatted content for this reply.
          type: string
        content:
          description: >-
            The plain text content used to create this reply. This is not HTML
            safe and should only be used as a starting point to make edits to a
            reply's content. This field is required on inserts if no verb is
            specified (resolve/reopen).
          annotations:
            required:
              - drive.replies.patch
              - drive.replies.update
          type: string
        genoaAuthor:
          description: The user who wrote this reply as a GenoaUser.
          $ref: '#/components/schemas/GenoaUser'
    GenoaUser:
      id: GenoaUser
      description: 'Next ID: 13'
      type: object
      properties:
        name:
          description: A displayable name for the user.
          type: string
        url:
          description: A URL to get more information about the user.
          type: string
        photo:
          description: A photo of the user.
          $ref: '#/components/schemas/Photo'
        isRequestingUser:
          description: Whether this user is the same as the user making the request.
          type: boolean
        permissionId:
          description: The user's ID as visible in the permissions collection
          type: string
        id:
          description: The user's obfuscated Gaia ID as visible throughout Google APIs
          type: string
        domain:
          description: >-
            The domain name of this user or group. As per FlexOrgs M2
            compliance, usage of domain is not allowed. This field will continue
            to exist/be populated with the organization's display name (which is
            not necessarily the domain) to support mobile clients that use this
            field for display purposes. For more information please see:
            b/133505341
          deprecated: true
          type: string
        domainSharingSettings:
          description: >-
            The sharing settings for the domain of this user or group.
            Deprecated, see go/trust-rules-api-surface
          $ref: '#/components/schemas/DomainSharingSettings'
        emailAddress:
          description: The email address of the user
          type: string
        emailAddressFromGaia:
          description: The primary email address of the user from GAIA.
          type: string
        customerId:
          description: The customer id which the user belongs to.
          type: string
        organizationDisplayName:
          description: The name of the organization that the user belongs to.
          type: string
    Photo:
      id: Photo
      description: 'Next ID: 4'
      type: object
      properties:
        url:
          description: The URL to get the picture from.
          type: string
        width:
          description: The width of the picture in pixels.
          type: integer
          format: uint32
        height:
          description: The height of the picture in pixels.
          type: integer
          format: uint32
    DomainSharingSettings:
      id: DomainSharingSettings
      description: 'Next ID: 5'
      type: object
      properties:
        maxAllUsersRole:
          description: Maximum allowed role when sharing with all users
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - OWNER
            - WRITER
            - COMMENTER
            - READER
            - NONE
        maxDomainRole:
          description: Maximum allowed role when sharing with all users inside the domain
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
            - ''
            - ''
          enum:
            - OWNER
            - WRITER
            - COMMENTER
            - READER
            - NONE
        shareOutPolicy:
          description: Policy for sharing with a user outside the domain
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - ALLOWED
            - ALLOWED_WITH_WARNING
            - DISALLOWED
        shareInPolicy:
          description: Deprecated - See b/13414050
          deprecated: true
          type: string
          enumDescriptions:
            - ''
            - ''
            - ''
          enum:
            - ALLOWED
            - ALLOWED_WITH_WARNING
            - DISALLOWED
    CommentList:
      id: CommentList
      description: A list of comments on a file in Google Drive.
      type: object
      properties:
        items:
          description: >-
            The list of comments. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        kind:
          description: This is always drive#commentList.
          default: drive#commentList
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        nextLink:
          description: A link to the next page of comments.
          type: string
        nextPageToken:
          description: >-
            The page token for the next page of comments. This will be absent if
            the end of the comments list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results.
          type: string
    DriveList:
      id: DriveList
      description: A list of shared drives.
      type: object
      properties:
        nextPageToken:
          description: >-
            The page token for the next page of shared drives. This will be
            absent if the end of the list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results.
          type: string
        kind:
          description: This is always `drive#driveList`
          default: drive#driveList
          type: string
        items:
          description: >-
            The list of shared drives. If nextPageToken is populated, then this
            list may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/Drive'
    GeneratedIds:
      id: GeneratedIds
      description: A list of generated IDs which can be provided in insert requests
      type: object
      properties:
        ids:
          description: The IDs generated for the requesting user in the specified space.
          type: array
          items:
            type: string
        space:
          description: The type of file that can be created with these IDs.
          type: string
        kind:
          description: This is always `drive#generatedIds`
          default: drive#generatedIds
          type: string
    FileList:
      id: FileList
      description: A list of files.
      type: object
      properties:
        nextPageToken:
          description: >-
            The page token for the next page of files. This will be absent if
            the end of the files list has been reached. If the token is rejected
            for any reason, it should be discarded, and pagination should be
            restarted from the first page of results.
          type: string
        kind:
          description: This is always `drive#fileList`.
          default: drive#fileList
          type: string
        etag:
          description: The ETag of the list.
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        incompleteSearch:
          description: >-
            Whether the search process was incomplete. If true, then some search
            results may be missing, since all documents were not searched. This
            may occur when searching multiple drives with the "allDrives"
            corpora, but all corpora could not be searched. When this happens,
            it is suggested that clients narrow their query by choosing a
            different corpus such as "default" or "drive".
          type: boolean
        nextLink:
          description: A link to the next page of files.
          type: string
        items:
          description: >-
            The list of files. If nextPageToken is populated, then this list may
            be incomplete and an additional page of results should be fetched.
          type: array
          items:
            $ref: '#/components/schemas/File'
    LabelList:
      id: LabelList
      description: A list of labels applied to a file.
      type: object
      properties:
        items:
          description: The list of labels.
          type: array
          items:
            $ref: '#/components/schemas/Label'
        nextPageToken:
          description: >-
            The page token for the next page of labels. This field will be
            absent if the end of the list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results.
          type: string
        kind:
          description: This is always `drive#labelList`
          default: drive#labelList
          type: string
    ModifyLabelsRequest:
      id: ModifyLabelsRequest
      description: >-
        A request to modify the set of labels on a file. This request may
        contain many modifications that will either all succeed or all fail
        atomically.
      type: object
      properties:
        labelModifications:
          description: The list of modifications to apply to the labels on the file.
          type: array
          items:
            $ref: '#/components/schemas/LabelModification'
        kind:
          description: This is always `drive#modifyLabelsRequest`.
          default: drive#modifyLabelsRequest
          type: string
    LabelModification:
      id: LabelModification
      description: >-
        A modification to a label on a file. A LabelModification can be used to
        apply a label to a file, update an existing label on a file, or remove a
        label from a file.
      type: object
      properties:
        labelId:
          description: The ID of the label to modify.
          annotations:
            required:
              - drive.files.modifyLabels
          type: string
        fieldModifications:
          description: The list of modifications to this label's fields.
          type: array
          items:
            $ref: '#/components/schemas/LabelFieldModification'
        removeLabel:
          description: If true, the label will be removed from the file.
          type: boolean
        kind:
          description: This is always `drive#labelModification`.
          default: drive#labelModification
          type: string
    LabelFieldModification:
      id: LabelFieldModification
      description: A modification to a label's field.
      type: object
      properties:
        fieldId:
          description: The ID of the field to be modified.
          type: string
        kind:
          description: This is always `drive#labelFieldModification`.
          default: drive#labelFieldModification
          type: string
        setDateValues:
          description: >-
            Replaces the value of a dateString Field with these new values. The
            string must be in the RFC 3339 full-date format: YYYY-MM-DD.
          type: array
          items:
            type: string
            format: date
        setTextValues:
          description: Sets the value of a `text` field.
          type: array
          items:
            type: string
        setSelectionValues:
          description: Replaces a `selection` field with these new values.
          type: array
          items:
            type: string
        setIntegerValues:
          description: Replaces the value of an `integer` field with these new values.
          type: array
          items:
            type: string
            format: int64
        setUserValues:
          description: >-
            Replaces a `user` field with these new values. The values must be
            valid email addresses.
          type: array
          items:
            type: string
        unsetValues:
          description: Unsets the values for this field.
          type: boolean
    ModifyLabelsResponse:
      id: ModifyLabelsResponse
      description: >-
        Response to a ModifyLabels request. This contains only those labels
        which were added or updated by the request.
      type: object
      properties:
        modifiedLabels:
          description: The list of labels which were added or updated by the request.
          type: array
          items:
            $ref: '#/components/schemas/Label'
        kind:
          description: This is always `drive#modifyLabelsResponse`
          default: drive#modifyLabelsResponse
          type: string
    ParentList:
      id: ParentList
      description: A list of a file's parents.
      type: object
      properties:
        kind:
          description: This is always `drive#parentList`.
          default: drive#parentList
          type: string
        etag:
          description: The ETag of the list.
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        items:
          description: The list of parents.
          type: array
          items:
            $ref: '#/components/schemas/ParentReference'
    PermissionId:
      id: PermissionId
      description: An ID for a user or group as seen in Permission items.
      type: object
      properties:
        kind:
          description: This is always `drive#permissionId`.
          default: drive#permissionId
          type: string
        id:
          description: The permission ID.
          type: string
    PermissionList:
      id: PermissionList
      description: A list of permissions associated with a file.
      type: object
      properties:
        nextPageToken:
          description: >-
            The page token for the next page of permissions. This field will be
            absent if the end of the permissions list has been reached. If the
            token is rejected for any reason, it should be discarded, and
            pagination should be restarted from the first page of results.
          type: string
        kind:
          description: This is always `drive#permissionList`.
          default: drive#permissionList
          type: string
        etag:
          description: The ETag of the list.
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        items:
          description: The list of permissions.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    PropertyList:
      id: PropertyList
      description: >-
        A collection of properties, key-value pairs that are either public or
        private to an application.
      type: object
      properties:
        kind:
          description: This is always `drive#propertyList`.
          default: drive#propertyList
          type: string
        etag:
          description: The ETag of the list.
          type: string
        selfLink:
          description: The link back to this list.
          type: string
        items:
          description: The list of properties.
          type: array
          items:
            $ref: '#/components/schemas/Property'
    CommentReplyList:
      id: CommentReplyList
      description: A list of replies to a comment on a file in Google Drive.
      type: object
      properties:
        kind:
          description: This is always `drive#commentReplyList`.
          default: drive#commentReplyList
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        nextLink:
          description: A link to the next page of replies.
          type: string
        items:
          description: >-
            The list of replies. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/CommentReply'
        nextPageToken:
          description: >-
            The page token for the next page of replies. This will be absent if
            the end of the replies list has been reached. If the token is
            rejected for any reason, it should be discarded, and pagination
            should be restarted from the first page of results.
          type: string
    Revision:
      id: Revision
      description: >-
        A revision of a file. Some resource methods (such as `revisions.update`)
        require a `revisionId`. Use the `revisions.list` method to retrieve the
        ID for a revision.
      type: object
      properties:
        id:
          description: Output only. The ID of the revision.
          type: string
        mimeType:
          description: Output only. The MIME type of the revision.
          type: string
        kind:
          description: Output only. This is always `drive#revision`.
          default: drive#revision
          type: string
        published:
          description: >-
            Whether this revision is published. This is only populated and can
            only be modified for Docs Editors files.
          type: boolean
        etag:
          description: Output only. The ETag of the revision.
          type: string
        exportLinks:
          description: >-
            Output only. Links for exporting Docs Editors files to specific
            formats.
          type: object
          additionalProperties:
            type: string
        pinned:
          description: >-
            Whether this revision is pinned to prevent automatic purging. If not
            set, the revision is automatically purged 30 days after newer
            content is uploaded. This field can only be modified on files with
            content stored in Drive, excluding Docs Editors files. Revisions can
            also be pinned when they are created through the
            drive.files.insert/update/copy by using the pinned query parameter.
            Pinned revisions are stored indefinitely using additional storage
            quota, up to a maximum of 200 revisions.
          type: boolean
        md5Checksum:
          description: >-
            Output only. An MD5 checksum for the content of this revision. This
            will only be populated on files with content stored in Drive.
          type: string
        modifiedDate:
          description: Last time this revision was modified (formatted RFC 3339 timestamp).
          type: string
          format: date-time
        lastModifyingUserName:
          description: Output only. Name of the last user to modify this revision.
          type: string
        downloadUrl:
          description: >-
            Output only. Short term download URL for the file. This will only be
            populated on files with content stored in Drive.
          type: string
        publishAuto:
          description: >-
            Whether subsequent revisions will be automatically republished. This
            is only populated and can only be modified for Docs Editors files.
          type: boolean
        publishedOutsideDomain:
          description: >-
            Whether this revision is published outside the domain. This is only
            populated and can only be modified for Docs Editors files.
          type: boolean
        publishedLink:
          description: >-
            Output only. A link to the published revision. This is only
            populated for Docs Editors files.
          type: string
        fileSize:
          description: >-
            Output only. The size of the revision in bytes. This will only be
            populated on files with content stored in Drive.
          type: string
          format: int64
        originalFilename:
          description: >-
            Output only. The original filename when this revision was created.
            This will only be populated on files with content stored in Drive.
          type: string
        lastModifyingUser:
          description: >-
            Output only. The last user to modify this revision. This field is
            only populated when the last modification was performed by a
            signed-in user.
          $ref: '#/components/schemas/User'
        selfLink:
          description: Output only. A link back to this revision.
          type: string
    RevisionList:
      id: RevisionList
      description: A list of revisions of a file.
      type: object
      properties:
        nextPageToken:
          description: >-
            The page token for the next page of revisions. This field will be
            absent if the end of the revisions list has been reached. If the
            token is rejected for any reason, it should be discarded and
            pagination should be restarted from the first page of results.
          type: string
        kind:
          description: This is always `drive#revisionList`.
          default: drive#revisionList
          type: string
        etag:
          description: The ETag of the list.
          type: string
        selfLink:
          description: A link back to this list.
          type: string
        items:
          description: >-
            The list of revisions. If nextPageToken is populated, then this list
            may be incomplete and an additional page of results should be
            fetched.
          type: array
          items:
            $ref: '#/components/schemas/Revision'
    TeamDriveList:
      id: TeamDriveList
      description: A list of Team Drives.
      type: object
      properties:
        nextPageToken:
          description: The page token for the next page of Team Drives.
          type: string
        kind:
          description: This is always `drive#teamDriveList`
          default: drive#teamDriveList
          type: string
        items:
          description: The list of Team Drives.
          type: array
          items:
            $ref: '#/components/schemas/TeamDrive'
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: >-
        API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: >-
        Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
  x-stackQL-resources:
    about:
      id: googleworkspace.drivev2.about
      name: about
      title: About
      methods:
        get:
          operation:
            $ref: '#/paths/~1about/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/about/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    apps:
      id: googleworkspace.drivev2.apps
      name: apps
      title: Apps
      methods:
        get:
          operation:
            $ref: '#/paths/~1apps~1{appId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/apps/methods/get'
          - $ref: '#/components/x-stackQL-resources/apps/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    changes:
      id: googleworkspace.drivev2.changes
      name: changes
      title: Changes
      methods:
        get:
          operation:
            $ref: '#/paths/~1changes~1{changeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1changes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        watch:
          operation:
            $ref: '#/paths/~1changes~1watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/changes/methods/get'
          - $ref: '#/components/x-stackQL-resources/changes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    changes_start_page_token:
      id: googleworkspace.drivev2.changes_start_page_token
      name: changes_start_page_token
      title: Changes_start_page_token
      methods:
        get_start_page_token:
          operation:
            $ref: '#/paths/~1changes~1startPageToken/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/changes_start_page_token/methods/get_start_page_token
        insert: []
        update: []
        replace: []
        delete: []
    channels:
      id: googleworkspace.drivev2.channels
      name: channels
      title: Channels
      methods:
        stop:
          operation:
            $ref: '#/paths/~1channels~1stop/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    children:
      id: googleworkspace.drivev2.children
      name: children
      title: Children
      methods:
        delete:
          operation:
            $ref: '#/paths/~1files~1{folderId}~1children~1{childId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{folderId}~1children~1{childId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1files~1{folderId}~1children/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{folderId}~1children/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/children/methods/get'
          - $ref: '#/components/x-stackQL-resources/children/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/children/methods/insert'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/children/methods/delete'
    comments:
      id: googleworkspace.drivev2.comments
      name: comments
      title: Comments
      methods:
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/comments/methods/get'
          - $ref: '#/components/x-stackQL-resources/comments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/comments/methods/insert'
        update:
          - $ref: '#/components/x-stackQL-resources/comments/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/comments/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/comments/methods/delete'
    drives:
      id: googleworkspace.drivev2.drives
      name: drives
      title: Drives
      methods:
        delete:
          operation:
            $ref: '#/paths/~1drives~1{driveId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1drives~1{driveId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1drives~1{driveId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        hide:
          operation:
            $ref: '#/paths/~1drives~1{driveId}~1hide/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1drives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1drives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        unhide:
          operation:
            $ref: '#/paths/~1drives~1{driveId}~1unhide/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/drives/methods/get'
          - $ref: '#/components/x-stackQL-resources/drives/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/drives/methods/insert'
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/drives/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/drives/methods/delete'
    files:
      id: googleworkspace.drivev2.files
      name: files
      title: Files
      methods:
        copy:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1copy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1files~1{fileId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        empty_trash:
          operation:
            $ref: '#/paths/~1files~1trash/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1export/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_ids:
          operation:
            $ref: '#/paths/~1files~1generateIds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1files/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
        modify_labels:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1modifyLabels/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        touch:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1touch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        trash:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1trash/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        untrash:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1untrash/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        watch:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1watch/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/files/methods/get'
          - $ref: '#/components/x-stackQL-resources/files/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/files/methods/insert'
        update:
          - $ref: '#/components/x-stackQL-resources/files/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/files/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/files/methods/delete'
    files_labels:
      id: googleworkspace.drivev2.files_labels
      name: files_labels
      title: Files_labels
      methods:
        list_labels:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1listLabels/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/files_labels/methods/list_labels'
        insert: []
        update: []
        replace: []
        delete: []
    parents:
      id: googleworkspace.drivev2.parents
      name: parents
      title: Parents
      methods:
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1parents~1{parentId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1parents~1{parentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1parents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1parents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/parents/methods/get'
          - $ref: '#/components/x-stackQL-resources/parents/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/parents/methods/insert'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/parents/methods/delete'
    permissions:
      id: googleworkspace.drivev2.permissions
      name: permissions
      title: Permissions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions~1{permissionId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions~1{permissionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions~1{permissionId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions~1{permissionId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/get'
          - $ref: '#/components/x-stackQL-resources/permissions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/insert'
        update:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/delete'
    permissions_id_for_email:
      id: googleworkspace.drivev2.permissions_id_for_email
      name: permissions_id_for_email
      title: Permissions_id_for_email
      methods:
        get_id_for_email:
          operation:
            $ref: '#/paths/~1permissionIds~1{email}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/permissions_id_for_email/methods/get_id_for_email
        insert: []
        update: []
        replace: []
        delete: []
    properties:
      id: googleworkspace.drivev2.properties
      name: properties
      title: Properties
      methods:
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1properties~1{propertyKey}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1properties~1{propertyKey}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1properties~1{propertyKey}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1properties~1{propertyKey}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1properties/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1properties/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/properties/methods/get'
          - $ref: '#/components/x-stackQL-resources/properties/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/properties/methods/insert'
        update:
          - $ref: '#/components/x-stackQL-resources/properties/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/properties/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/properties/methods/delete'
    replies:
      id: googleworkspace.drivev2.replies
      name: replies
      title: Replies
      methods:
        delete:
          operation:
            $ref: >-
              #/paths/~1files~1{fileId}~1comments~1{commentId}~1replies~1{replyId}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: >-
              #/paths/~1files~1{fileId}~1comments~1{commentId}~1replies~1{replyId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: >-
              #/paths/~1files~1{fileId}~1comments~1{commentId}~1replies~1{replyId}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: >-
              #/paths/~1files~1{fileId}~1comments~1{commentId}~1replies~1{replyId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}~1replies/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1comments~1{commentId}~1replies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replies/methods/get'
          - $ref: '#/components/x-stackQL-resources/replies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/replies/methods/insert'
        update:
          - $ref: '#/components/x-stackQL-resources/replies/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/replies/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/replies/methods/delete'
    revisions:
      id: googleworkspace.drivev2.revisions
      name: revisions
      title: Revisions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions~1{revisionId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions~1{revisionId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions~1{revisionId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions~1{revisionId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1files~1{fileId}~1revisions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/get'
          - $ref: '#/components/x-stackQL-resources/revisions/methods/list'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/patch'
        replace:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/delete'
    teamdrives:
      id: googleworkspace.drivev2.teamdrives
      name: teamdrives
      title: Teamdrives
      methods:
        delete:
          operation:
            $ref: '#/paths/~1teamdrives~1{teamDriveId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1teamdrives~1{teamDriveId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1teamdrives~1{teamDriveId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1teamdrives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1teamdrives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.items
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/get'
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/insert'
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/update'
        delete:
          - $ref: '#/components/x-stackQL-resources/teamdrives/methods/delete'
paths:
  /about:
    parameters: &ref_1
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
    get:
      description: >-
        Gets the information about the current user along with Drive API
        settings
      operationId: drive.about.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/About'
      parameters:
        - in: query
          name: includeSubscribed
          schema:
            type: boolean
        - in: query
          name: maxChangeIdCount
          schema:
            type: string
            format: int64
        - in: query
          name: startChangeId
          schema:
            type: string
            format: int64
  /apps/{appId}:
    parameters: *ref_1
    get:
      description: Gets a specific app.
      operationId: drive.apps.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
  /apps:
    parameters: *ref_1
    get:
      description: Lists a user's installed apps.
      operationId: drive.apps.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppList'
      parameters:
        - in: query
          name: appFilterExtensions
          schema:
            type: string
        - in: query
          name: appFilterMimeTypes
          schema:
            type: string
        - in: query
          name: languageCode
          schema:
            type: string
  /changes/{changeId}:
    parameters: *ref_1
    get:
      description: >-
        Deprecated: Use `changes.getStartPageToken` and `changes.list` to
        retrieve recent changes.
      operationId: drive.changes.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Change'
      parameters:
        - in: path
          name: changeId
          required: true
          schema:
            type: string
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
  /changes/startPageToken:
    parameters: *ref_1
    get:
      description: Gets the starting pageToken for listing future changes.
      operationId: drive.changes.getStartPageToken
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartPageToken'
      parameters:
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
  /changes:
    parameters: *ref_1
    get:
      description: Lists the changes for a user or shared drive.
      operationId: drive.changes.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeList'
      parameters:
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: includeCorpusRemovals
          schema:
            type: boolean
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: includeSubscribed
          schema:
            type: boolean
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: startChangeId
          schema:
            type: string
            format: int64
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /changes/watch:
    parameters: *ref_1
    post:
      description: Subscribe to changes for a user.
      operationId: drive.changes.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: includeCorpusRemovals
          schema:
            type: boolean
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: includeSubscribed
          schema:
            type: boolean
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: startChangeId
          schema:
            type: string
            format: int64
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /channels/stop:
    parameters: *ref_1
    post:
      description: Stops watching resources through this channel.
      operationId: drive.channels.stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '204':
          description: No Content
      parameters: []
  /files/{folderId}/children/{childId}:
    parameters: *ref_1
    delete:
      description: Removes a child from a folder.
      operationId: drive.children.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: folderId
          required: true
          schema:
            type: string
        - in: path
          name: childId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
    get:
      description: Gets a specific child reference.
      operationId: drive.children.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildReference'
      parameters:
        - in: path
          name: folderId
          required: true
          schema:
            type: string
        - in: path
          name: childId
          required: true
          schema:
            type: string
  /files/{folderId}/children:
    parameters: *ref_1
    post:
      description: Inserts a file into a folder.
      operationId: drive.children.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildReference'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildReference'
      parameters:
        - in: path
          name: folderId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
    get:
      description: Lists a folder's children.
      operationId: drive.children.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildList'
      parameters:
        - in: path
          name: folderId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
  /files/{fileId}/comments/{commentId}:
    parameters: *ref_1
    delete:
      description: Deletes a comment.
      operationId: drive.comments.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
    get:
      description: Gets a comment by ID.
      operationId: drive.comments.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
    patch:
      description: Updates an existing comment.
      operationId: drive.comments.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
    put:
      description: Updates an existing comment.
      operationId: drive.comments.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
  /files/{fileId}/comments:
    parameters: *ref_1
    post:
      description: Creates a new comment on the given file.
      operationId: drive.comments.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
    get:
      description: Lists a file's comments.
      operationId: drive.comments.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
  /drives/{driveId}:
    parameters: *ref_1
    delete:
      description: >-
        Permanently deletes a shared drive for which the user is an `organizer`.
        The shared drive cannot contain any untrashed items.
      operationId: drive.drives.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: allowItemDeletion
          schema:
            type: boolean
    get:
      description: Gets a shared drive's metadata by ID.
      operationId: drive.drives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
    put:
      description: Updates the metadata for a shared drive.
      operationId: drive.drives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
  /drives/{driveId}/hide:
    parameters: *ref_1
    post:
      description: Hides a shared drive from the default view.
      operationId: drive.drives.hide
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
  /drives:
    parameters: *ref_1
    post:
      description: Creates a new shared drive.
      operationId: drive.drives.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: query
          name: requestId
          required: true
          schema:
            type: string
    get:
      description: ' Lists the user''s shared drives. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for shared drives](/workspace/drive/api/guides/search-shareddrives) guide.'
      operationId: drive.drives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveList'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
  /drives/{driveId}/unhide:
    parameters: *ref_1
    post:
      description: Restores a shared drive to the default view.
      operationId: drive.drives.unhide
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
      parameters:
        - in: path
          name: driveId
          required: true
          schema:
            type: string
  /files/{fileId}/copy:
    parameters: *ref_1
    post:
      description: Creates a copy of the specified file.
      operationId: drive.files.copy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: convert
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: ocr
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: pinned
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: timedTextLanguage
          schema:
            type: string
        - in: query
          name: timedTextTrackName
          schema:
            type: string
        - in: query
          name: visibility
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /files/{fileId}:
    parameters: *ref_1
    delete:
      description: >-
        Permanently deletes a file owned by the user without moving it to the
        trash. If the file belongs to a shared drive, the user must be an
        `organizer` on the parent folder. If the target is a folder, all
        descendants owned by the user are also deleted.
      operationId: drive.files.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
    get:
      description: ' Gets a file''s metadata or content by ID. If you provide the URL parameter `alt=media`, then the response includes the file contents in the response body. Downloading content with `alt=media` only works if the file is stored in Drive. To download Google Docs, Sheets, and Slides use [`files.export`](/workspace/drive/api/reference/rest/v2/files/export) instead. For more information, see [Download & export files](/workspace/drive/api/guides/manage-downloads).'
      operationId: drive.files.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: revisionId
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: updateViewedDate
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
    patch:
      description: >-
        Updates a file's metadata and/or content. When calling this method, only
        populate fields in the request that you want to modify. When updating
        fields, some fields might change automatically, such as modifiedDate.
        This method supports patch semantics.
      operationId: drive.files.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.scripts
          Oauth2c:
            - https://www.googleapis.com/auth/drive.scripts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: addParents
          schema:
            type: string
        - in: query
          name: convert
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: modifiedDateBehavior
          schema:
            type: string
        - in: query
          name: newRevision
          schema:
            type: boolean
        - in: query
          name: ocr
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: pinned
          schema:
            type: boolean
        - in: query
          name: removeParents
          schema:
            type: string
        - in: query
          name: setModifiedDate
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: timedTextLanguage
          schema:
            type: string
        - in: query
          name: timedTextTrackName
          schema:
            type: string
        - in: query
          name: updateViewedDate
          schema:
            type: boolean
        - in: query
          name: useContentAsIndexableText
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
    put:
      description: ' Updates a file''s metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might be changed automatically, such as `modifiedDate`. This method supports patch semantics. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/workspace/drive/api/guides/manage-uploads).'
      operationId: drive.files.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.scripts
          Oauth2c:
            - https://www.googleapis.com/auth/drive.scripts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: addParents
          schema:
            type: string
        - in: query
          name: convert
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: modifiedDateBehavior
          schema:
            type: string
        - in: query
          name: newRevision
          schema:
            type: boolean
        - in: query
          name: ocr
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: pinned
          schema:
            type: boolean
        - in: query
          name: removeParents
          schema:
            type: string
        - in: query
          name: setModifiedDate
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: timedTextLanguage
          schema:
            type: string
        - in: query
          name: timedTextTrackName
          schema:
            type: string
        - in: query
          name: updateViewedDate
          schema:
            type: boolean
        - in: query
          name: useContentAsIndexableText
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /files/trash:
    parameters: *ref_1
    delete:
      description: Permanently deletes all of the user's trashed files.
      operationId: drive.files.emptyTrash
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '204':
          description: No Content
      parameters:
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: driveId
          schema:
            type: string
  /files/{fileId}/export:
    parameters: *ref_1
    get:
      description: >-
        Exports a Google Workspace document to the requested MIME type and
        returns exported byte content. Note that the exported content is limited
        to 10MB.
      operationId: drive.files.export
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: mimeType
          required: true
          schema:
            type: string
  /files/generateIds:
    parameters: *ref_1
    get:
      description: >-
        Generates a set of file IDs which can be provided in insert or copy
        requests.
      operationId: drive.files.generateIds
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedIds'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: space
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
  /files:
    parameters: *ref_1
    post:
      description: ' Inserts a new file. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/workspace/drive/api/guides/manage-uploads). Apps creating shortcuts with `files.insert` must specify the MIME type `application/vnd.google-apps.shortcut`. Apps should specify a file extension in the `title` property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `"title": "cat.jpg"` in the metadata. Subsequent `GET` requests include the read-only `fileExtension` property populated with the extension originally specified in the `title` property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Drive attempts to determine the extension based on the file''s MIME type.'
      operationId: drive.files.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: query
          name: convert
          schema:
            type: boolean
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: ocr
          schema:
            type: boolean
        - in: query
          name: ocrLanguage
          schema:
            type: string
        - in: query
          name: pinned
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: timedTextLanguage
          schema:
            type: string
        - in: query
          name: timedTextTrackName
          schema:
            type: string
        - in: query
          name: useContentAsIndexableText
          schema:
            type: boolean
        - in: query
          name: visibility
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
    get:
      description: ' Lists the user''s files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/workspace/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don''t want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results.'
      operationId: drive.files.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
      parameters:
        - in: query
          name: corpora
          schema:
            type: string
        - in: query
          name: corpus
          schema:
            type: string
        - in: query
          name: driveId
          schema:
            type: string
        - in: query
          name: includeItemsFromAllDrives
          schema:
            type: boolean
        - in: query
          name: includeTeamDriveItems
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: spaces
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: teamDriveId
          schema:
            type: string
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /files/{fileId}/listLabels:
    parameters: *ref_1
    get:
      description: Lists the labels on a file.
      operationId: drive.files.listLabels
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /files/{fileId}/modifyLabels:
    parameters: *ref_1
    post:
      description: >-
        Modifies the set of labels applied to a file. Returns a list of the
        labels that were added or modified.
      operationId: drive.files.modifyLabels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyLabelsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModifyLabelsResponse'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
  /files/{fileId}/touch:
    parameters: *ref_1
    post:
      description: Set the file's updated time to the current server time.
      operationId: drive.files.touch
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /files/{fileId}/trash:
    parameters: *ref_1
    post:
      description: >-
        Moves a file to the trash. The currently authenticated user must own the
        file or be at least a `fileOrganizer` on the parent for shared drive
        files.
      operationId: drive.files.trash
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /files/{fileId}/untrash:
    parameters: *ref_1
    post:
      description: >-
        Restores a file from the trash. The currently authenticated user must
        own the file or be at least a `fileOrganizer` on the parent for shared
        drive files.
      operationId: drive.files.untrash
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /files/{fileId}/watch:
    parameters: *ref_1
    post:
      description: Subscribes to changes to a file.
      operationId: drive.files.watch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: acknowledgeAbuse
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
        - in: query
          name: revisionId
          schema:
            type: string
        - in: query
          name: updateViewedDate
          schema:
            type: boolean
        - in: query
          name: projection
          schema:
            type: string
        - in: query
          name: includeLabels
          schema:
            type: string
  /files/{fileId}/parents/{parentId}:
    parameters: *ref_1
    delete:
      description: Removes a parent from a file.
      operationId: drive.parents.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: parentId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
    get:
      description: Gets a specific parent reference.
      operationId: drive.parents.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentReference'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: parentId
          required: true
          schema:
            type: string
  /files/{fileId}/parents:
    parameters: *ref_1
    post:
      description: Adds a parent folder for a file.
      operationId: drive.parents.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentReference'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentReference'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
    get:
      description: Lists a file's parents.
      operationId: drive.parents.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParentList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
  /files/{fileId}/permissions/{permissionId}:
    parameters: *ref_1
    delete:
      description: >-
        Deletes a permission from a file or shared drive. **Warning:**
        Concurrent permissions operations on the same file are not supported;
        only the last update is applied.
      operationId: drive.permissions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: enforceExpansiveAccess
          schema:
            type: boolean
    get:
      description: Gets a permission by ID.
      operationId: drive.permissions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
    patch:
      description: >-
        Updates a permission using patch semantics. **Warning:** Concurrent
        permissions operations on the same file are not supported; only the last
        update is applied.
      operationId: drive.permissions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: removeExpiration
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: transferOwnership
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: enforceExpansiveAccess
          schema:
            type: boolean
    put:
      description: >-
        Updates a permission. **Warning:** Concurrent permissions operations on
        the same file are not supported; only the last update is applied.
      operationId: drive.permissions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: permissionId
          required: true
          schema:
            type: string
        - in: query
          name: removeExpiration
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: transferOwnership
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: enforceExpansiveAccess
          schema:
            type: boolean
  /permissionIds/{email}:
    parameters: *ref_1
    get:
      description: Returns the permission ID for an email address.
      operationId: drive.permissions.getIdForEmail
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.apps.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.apps.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionId'
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
  /files/{fileId}/permissions:
    parameters: *ref_1
    post:
      description: >-
        Inserts a permission for a file or shared drive. **Warning:** Concurrent
        permissions operations on the same file are not supported; only the last
        update is applied.
      operationId: drive.permissions.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: emailMessage
          schema:
            type: string
        - in: query
          name: enforceSingleParent
          schema:
            type: boolean
        - in: query
          name: moveToNewOwnersRoot
          schema:
            type: boolean
        - in: query
          name: sendNotificationEmails
          schema:
            type: boolean
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: enforceExpansiveAccess
          schema:
            type: boolean
    get:
      description: Lists a file's or shared drive's permissions.
      operationId: drive.permissions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: supportsAllDrives
          schema:
            type: boolean
        - in: query
          name: supportsTeamDrives
          schema:
            type: boolean
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
        - in: query
          name: includePermissionsForView
          schema:
            type: string
  /files/{fileId}/properties/{propertyKey}:
    parameters: *ref_1
    delete:
      description: Deletes a property.
      operationId: drive.properties.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - in: query
          name: visibility
          schema:
            type: string
    get:
      description: Gets a property by its key.
      operationId: drive.properties.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - in: query
          name: visibility
          schema:
            type: string
    patch:
      description: Updates a property.
      operationId: drive.properties.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - in: query
          name: visibility
          schema:
            type: string
    put:
      description: Updates a property.
      operationId: drive.properties.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: propertyKey
          required: true
          schema:
            type: string
        - in: query
          name: visibility
          schema:
            type: string
  /files/{fileId}/properties:
    parameters: *ref_1
    post:
      description: Adds a property to a file, or updates it if it already exists.
      operationId: drive.properties.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Property'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
    get:
      description: Lists a file's properties.
      operationId: drive.properties.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
  /files/{fileId}/comments/{commentId}/replies/{replyId}:
    parameters: *ref_1
    delete:
      description: Deletes a reply.
      operationId: drive.replies.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
    get:
      description: Gets a reply.
      operationId: drive.replies.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
    patch:
      description: Updates an existing reply.
      operationId: drive.replies.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentReply'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
    put:
      description: Updates an existing reply.
      operationId: drive.replies.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentReply'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: path
          name: replyId
          required: true
          schema:
            type: string
  /files/{fileId}/comments/{commentId}/replies:
    parameters: *ref_1
    post:
      description: Creates a new reply to the given comment.
      operationId: drive.replies.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentReply'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReply'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
    get:
      description: Lists all of the replies to a comment.
      operationId: drive.replies.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentReplyList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: commentId
          required: true
          schema:
            type: string
        - in: query
          name: includeDeleted
          schema:
            type: boolean
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /files/{fileId}/revisions/{revisionId}:
    parameters: *ref_1
    delete:
      description: >-
        Permanently deletes a file version. You can only delete revisions for
        files with binary content, like images or videos. Revisions for other
        files, like Google Docs or Sheets, and the last remaining file version
        can't be deleted.
      operationId: drive.revisions.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
    get:
      description: Gets a specific revision.
      operationId: drive.revisions.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
    patch:
      description: Updates a revision.
      operationId: drive.revisions.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revision'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
    put:
      description: Updates a revision.
      operationId: drive.revisions.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Revision'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: path
          name: revisionId
          required: true
          schema:
            type: string
  /files/{fileId}/revisions:
    parameters: *ref_1
    get:
      description: Lists a file's revisions.
      operationId: drive.revisions.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.appdata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.appdata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.file
          Oauth2c:
            - https://www.googleapis.com/auth/drive.file
        - Oauth2:
            - https://www.googleapis.com/auth/drive.meet.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.meet.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata
        - Oauth2:
            - https://www.googleapis.com/auth/drive.metadata.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.metadata.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.photos.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.photos.readonly
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionList'
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
  /teamdrives/{teamDriveId}:
    parameters: *ref_1
    delete:
      description: 'Deprecated: Use `drives.delete` instead.'
      operationId: drive.teamdrives.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '204':
          description: No Content
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
    get:
      description: 'Deprecated: Use `drives.get` instead.'
      operationId: drive.teamdrives.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
    put:
      description: 'Deprecated: Use `drives.update` instead.'
      operationId: drive.teamdrives.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDrive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: path
          name: teamDriveId
          required: true
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
  /teamdrives:
    parameters: *ref_1
    post:
      description: 'Deprecated: Use `drives.insert` instead.'
      operationId: drive.teamdrives.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDrive'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDrive'
      parameters:
        - in: query
          name: requestId
          required: true
          schema:
            type: string
    get:
      description: 'Deprecated: Use `drives.list` instead.'
      operationId: drive.teamdrives.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/drive
          Oauth2c:
            - https://www.googleapis.com/auth/drive
        - Oauth2:
            - https://www.googleapis.com/auth/drive.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/drive.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDriveList'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
            format: int32
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: useDomainAdminAccess
          schema:
            type: boolean
