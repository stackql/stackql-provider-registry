openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Tasks API
  description: The Google Tasks API lets you manage your tasks and task lists.
  version: v1
  x-discovery-doc-revision: '20230117'
  x-generated-date: '2023-01-19'
externalDocs:
  url: https://developers.google.com/tasks/
servers:
  - url: https://tasks.googleapis.com
components:
  schemas:
    Task:
      id: Task
      type: object
      properties:
        hidden:
          type: boolean
          description: Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.
        completed:
          type: string
          description: Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.
        kind:
          type: string
          description: Type of the resource. This is always "tasks#task".
        status:
          description: Status of the task. This is either "needsAction" or "completed".
          type: string
        due:
          type: string
          description: Due date of the task (as a RFC 3339 timestamp). Optional. The due date only records date information; the time portion of the timestamp is discarded when setting the due date. It isn't possible to read or write the time that a task is due via the API.
        parent:
          type: string
          description: Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the "move" method to move the task under a different parent or to the top level.
        title:
          description: Title of the task.
          type: string
        id:
          description: Task identifier.
          type: string
        etag:
          type: string
          description: ETag of the resource.
        selfLink:
          description: URL pointing to this task. Used to retrieve, update, or delete this task.
          type: string
        notes:
          type: string
          description: Notes describing the task. Optional.
        deleted:
          description: Flag indicating whether the task has been deleted. The default is False.
          type: boolean
        position:
          description: String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task's corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the "move" method to move the task to another position.
          type: string
        updated:
          type: string
          description: Last modification time of the task (as a RFC 3339 timestamp).
        links:
          items:
            properties:
              type:
                description: Type of the link, e.g. "email".
                type: string
              description:
                description: 'The description. In HTML speak: Everything between <a> and </a>.'
                type: string
              link:
                description: The URL.
                type: string
            type: object
          description: Collection of links. This collection is read-only.
          type: array
    Tasks:
      type: object
      id: Tasks
      properties:
        items:
          type: array
          description: Collection of tasks.
          items:
            $ref: '#/components/schemas/Task'
        kind:
          type: string
          description: Type of the resource. This is always "tasks#tasks".
        nextPageToken:
          description: Token used to access the next page of this result.
          type: string
        etag:
          type: string
          description: ETag of the resource.
    TaskList:
      id: TaskList
      properties:
        updated:
          description: Last modification time of the task list (as a RFC 3339 timestamp).
          type: string
        kind:
          type: string
          description: Type of the resource. This is always "tasks#taskList".
        title:
          type: string
          description: Title of the task list.
        id:
          type: string
          description: Task list identifier.
        selfLink:
          description: URL pointing to this task list. Used to retrieve, update, or delete this task list.
          type: string
        etag:
          type: string
          description: ETag of the resource.
      type: object
    TaskLists:
      type: object
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          type: string
          description: Type of the resource. This is always "tasks#taskLists".
        items:
          description: Collection of task lists.
          items:
            $ref: '#/components/schemas/TaskList'
          type: array
        nextPageToken:
          description: Token that can be used to request the next page of this result.
          type: string
      id: TaskLists
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/tasks: Create, edit, organize, and delete all your tasks
            https://www.googleapis.com/auth/tasks.readonly: View your tasks
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    tasks:
      id: googleworkspace.tasks.tasks
      name: tasks
      title: Tasks
      methods:
        get:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1tasks~1{task}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1tasks~1{task}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1tasks~1{task}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1tasks~1{task}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1tasks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1tasks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        clear:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1clear/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        move:
          operation:
            $ref: '#/paths/~1tasks~1v1~1lists~1{tasklist}~1tasks~1{task}~1move/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/get'
          - $ref: '#/components/x-stackQL-resources/tasks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tasks/methods/delete'
    tasklists:
      id: googleworkspace.tasks.tasklists
      name: tasklists
      title: Tasklists
      methods:
        update:
          operation:
            $ref: '#/paths/~1tasks~1v1~1users~1@me~1lists~1{tasklist}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1tasks~1v1~1users~1@me~1lists~1{tasklist}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1tasks~1v1~1users~1@me~1lists~1{tasklist}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1tasks~1v1~1users~1@me~1lists~1{tasklist}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1tasks~1v1~1users~1@me~1lists/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1tasks~1v1~1users~1@me~1lists/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tasklists/methods/get'
          - $ref: '#/components/x-stackQL-resources/tasklists/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tasklists/methods/insert'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tasklists/methods/delete'
paths:
  /tasks/v1/lists/{tasklist}/tasks/{task}:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/access_token'
    get:
      description: Returns the specified task.
      operationId: tasks.tasks.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
        - in: path
          name: task
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: select
    patch:
      description: Updates the specified task. This method supports patch semantics.
      operationId: tasks.tasks.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
        - in: path
          name: task
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
    put:
      description: Updates the specified task.
      operationId: tasks.tasks.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
        - in: path
          name: task
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified task from the task list.
      operationId: tasks.tasks.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
        - in: path
          name: task
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: delete
  /tasks/v1/lists/{tasklist}/tasks:
    parameters: *ref_1
    get:
      description: Returns all tasks in the specified task list.
      operationId: tasks.tasks.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
        - in: query
          name: updatedMin
          schema:
            type: string
        - in: query
          name: dueMin
          schema:
            type: string
        - in: query
          name: showHidden
          schema:
            type: boolean
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: completedMax
          schema:
            type: string
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: showDeleted
          schema:
            type: boolean
        - in: query
          name: showCompleted
          schema:
            type: boolean
        - in: query
          name: dueMax
          schema:
            type: string
        - in: query
          name: completedMin
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: select
    post:
      description: Creates a new task on the specified task list.
      operationId: tasks.tasks.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
        - in: query
          name: previous
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: insert
  /tasks/v1/lists/{tasklist}/clear:
    parameters: *ref_1
    post:
      description: Clears all completed tasks from the specified task list. The affected tasks will be marked as 'hidden' and no longer be returned by default when retrieving all tasks for a task list.
      operationId: tasks.tasks.clear
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
  /tasks/v1/lists/{tasklist}/tasks/{task}/move:
    parameters: *ref_1
    post:
      description: Moves the specified task to another position in the task list. This can include putting it as a child task under a new parent and/or move it to a different position among its sibling tasks.
      operationId: tasks.tasks.move
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
        - in: path
          name: task
          required: true
          schema:
            type: string
        - in: query
          name: previous
          schema:
            type: string
        - in: query
          name: parent
          schema:
            type: string
      x-stackQL-resource: tasks
      x-stackQL-verb: exec
  /tasks/v1/users/@me/lists/{tasklist}:
    parameters: *ref_1
    put:
      description: Updates the authenticated user's specified task list.
      operationId: tasks.tasklists.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
      x-stackQL-resource: tasklists
      x-stackQL-verb: exec
    patch:
      description: Updates the authenticated user's specified task list. This method supports patch semantics.
      operationId: tasks.tasklists.patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
      x-stackQL-resource: tasklists
      x-stackQL-verb: exec
    delete:
      description: Deletes the authenticated user's specified task list.
      operationId: tasks.tasklists.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
      x-stackQL-resource: tasklists
      x-stackQL-verb: delete
    get:
      description: Returns the authenticated user's specified task list.
      operationId: tasks.tasklists.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
      parameters:
        - in: path
          name: tasklist
          required: true
          schema:
            type: string
      x-stackQL-resource: tasklists
      x-stackQL-verb: select
  /tasks/v1/users/@me/lists:
    parameters: *ref_1
    post:
      description: Creates a new task list and adds it to the authenticated user's task lists.
      operationId: tasks.tasklists.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskList'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
      parameters: []
      x-stackQL-resource: tasklists
      x-stackQL-verb: insert
    get:
      description: Returns all the authenticated user's task lists.
      operationId: tasks.tasklists.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskLists'
      parameters:
        - in: query
          name: maxResults
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: tasklists
      x-stackQL-verb: select
