openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Workspace Alert Center API
  description: 'Manages alerts on issues affecting your domain. Note: The current version of this API (v1beta1) is available to all Google Workspace customers. '
  version: v1beta1
  x-discovery-doc-revision: '20221219'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/admin-sdk/alertcenter/
servers:
  - url: https://alertcenter.googleapis.com
components:
  schemas:
    TransferError:
      type: object
      description: Details for an invalid transfer or forward.
      properties:
        entityType:
          description: Type of entity being transferred to. For ring group members, this should always be USER.
          enumDescriptions:
            - Entity type wasn't set.
            - Transfer to auto attendant.
            - Transfer to ring group.
            - Transfer to user.
          enum:
            - TRANSFER_ENTITY_TYPE_UNSPECIFIED
            - TRANSFER_AUTO_ATTENDANT
            - TRANSFER_RING_GROUP
            - TRANSFER_USER
          type: string
        email:
          type: string
          description: User's email address. This may be unavailable if the entity was deleted.
        name:
          description: User's full name, or the ring group / auto attendant name. This may be unavailable if the entity was deleted.
          type: string
        invalidReason:
          enumDescriptions:
            - Reason wasn't specified.
            - The transfer target can't be found—most likely it was deleted.
            - The user's Google Voice license was removed.
            - The user's Google Workspace account was suspended.
            - The transfer target no longer has a phone number. This reason should become deprecated once we support numberless transfer.
          type: string
          enum:
            - TRANSFER_INVALID_REASON_UNSPECIFIED
            - TRANSFER_TARGET_DELETED
            - UNLICENSED
            - SUSPENDED
            - NO_PHONE_NUMBER
          description: Reason for the error.
        id:
          description: Ring group or auto attendant ID. Not set for users.
          type: string
      id: TransferError
    PhishingSpike:
      description: 'Alert for a spike in user reported phishing. *Warning*: This type has been deprecated. Use [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing) instead.'
      type: object
      properties:
        domainId:
          $ref: '#/components/schemas/DomainId'
          description: The domain ID.
        messages:
          type: array
          description: The list of messages contained by this alert.
          items:
            $ref: '#/components/schemas/GmailMessageInfo'
        maliciousEntity:
          description: The entity whose actions triggered a Gmail phishing alert.
          $ref: '#/components/schemas/MaliciousEntity'
        isInternal:
          description: If `true`, the email originated from within the organization.
          type: boolean
      id: PhishingSpike
    MailPhishing:
      properties:
        systemActionType:
          enumDescriptions:
            - System action is unspecified.
            - No operation.
            - Messages were removed from the inbox.
          enum:
            - SYSTEM_ACTION_TYPE_UNSPECIFIED
            - NO_OPERATION
            - REMOVED_FROM_INBOX
          description: System actions on the messages.
          type: string
        messages:
          items:
            $ref: '#/components/schemas/GmailMessageInfo'
          description: The list of messages contained by this alert.
          type: array
        maliciousEntity:
          $ref: '#/components/schemas/MaliciousEntity'
          description: The entity whose actions triggered a Gmail phishing alert.
        domainId:
          description: The domain ID.
          $ref: '#/components/schemas/DomainId'
        isInternal:
          type: boolean
          description: If `true`, the email originated from within the organization.
      description: 'Proto for all phishing alerts with common payload. Supported types are any of the following: * User reported phishing * User reported spam spike * Suspicious message reported * Phishing reclassification * Malware reclassification * Gmail potential employee spoofing'
      id: MailPhishing
      type: object
    ListAlertsResponse:
      description: Response message for an alert listing request.
      id: ListAlertsResponse
      properties:
        nextPageToken:
          type: string
          description: The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call.
        alerts:
          description: The list of alerts.
          type: array
          items:
            $ref: '#/components/schemas/Alert'
      type: object
    SensitiveAdminAction:
      type: object
      id: SensitiveAdminAction
      description: Alert that is triggered when Sensitive Admin Action occur in customer account.
      properties:
        ssoProfileDeletedEvent:
          description: Event occurred when SSO Profile deleted in customer's account
          $ref: '#/components/schemas/SSOProfileDeletedEvent'
        actorEmail:
          type: string
          description: Email of person who performed the action
        ssoProfileUpdatedEvent:
          description: Event occurred when SSO Profile updated in customer's account
          $ref: '#/components/schemas/SSOProfileUpdatedEvent'
        ssoProfileCreatedEvent:
          description: Event occurred when SSO Profile created in customer's account
          $ref: '#/components/schemas/SSOProfileCreatedEvent'
        primaryAdminChangedEvent:
          description: Event occurred when primary admin changed in customer's account
          $ref: '#/components/schemas/PrimaryAdminChangedEvent'
        eventTime:
          format: google-datetime
          type: string
          description: The time at which event occurred
        superAdminPasswordResetEvent:
          description: Event occurred when password was reset for super admin in customer's account
          $ref: '#/components/schemas/SuperAdminPasswordResetEvent'
    PrimaryAdminChangedEvent:
      id: PrimaryAdminChangedEvent
      description: Event occurred when primary admin changed in customer's account. The event are being received from insight forwarder
      type: object
      properties:
        updatedAdminEmail:
          description: Email of person who is the primary admin after the action
          type: string
        previousAdminEmail:
          type: string
          description: Email of person who was the primary admin before the action
        domain:
          type: string
          description: domain in which actioned occurred
    GmailMessageInfo:
      id: GmailMessageInfo
      type: object
      description: Details of a message in phishing spike alert.
      properties:
        subjectText:
          type: string
          description: The email subject text (only available for reported emails).
        md5HashMessageBody:
          type: string
          description: The hash of the message body text.
        recipient:
          type: string
          description: The recipient of this email.
        messageBodySnippet:
          type: string
          description: The snippet of the message body text (only available for reported emails).
        md5HashSubject:
          type: string
          description: The MD5 Hash of email's subject (only available for reported emails).
        messageId:
          description: The message ID.
          type: string
        date:
          type: string
          format: google-datetime
          description: The date of the event related to this email.
        attachmentsSha256Hash:
          description: The `SHA256` hash of email's attachment and all MIME parts.
          items:
            type: string
          type: array
    DomainId:
      id: DomainId
      type: object
      description: Domain ID of Gmail phishing alerts.
      properties:
        customerPrimaryDomain:
          type: string
          description: The primary domain for the customer.
    AppSettingsChanged:
      id: AppSettingsChanged
      type: object
      properties:
        name:
          description: Rule name
          type: string
        alertDetails:
          description: Any other associated alert details, for example, AlertConfiguration.
          type: string
          format: byte
      description: Alerts from AppSettingsChanged bucket Rules configured by Admin which contain the below rules. Calendar settings changed Drive settings changed Email settings changed Mobile settings changed
    MandatoryServiceAnnouncement:
      properties:
        description:
          type: string
          description: Detailed, freeform text describing the announcement
        title:
          type: string
          description: One line summary of the announcement
      description: Alert Created by the MSA team for communications necessary for continued use of Google Workspace Products.
      type: object
      id: MandatoryServiceAnnouncement
    VoicemailMisconfiguration:
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/VoicemailRecipientError'
          description: Issue(s) with voicemail recipients.
      description: Issue(s) with sending to voicemail.
      type: object
      id: VoicemailMisconfiguration
    VoiceMisconfiguration:
      properties:
        voicemailMisconfiguration:
          description: Issue(s) with sending to voicemail.
          $ref: '#/components/schemas/VoicemailMisconfiguration'
        membersMisconfiguration:
          description: Issue(s) with members of a ring group.
          $ref: '#/components/schemas/TransferMisconfiguration'
        fixUri:
          description: Link that the admin can follow to fix the issue.
          type: string
        entityName:
          description: Name of the entity whose configuration is now invalid.
          type: string
        entityType:
          enumDescriptions:
            - Entity type wasn't set.
            - Invalid auto attendant.
            - Invalid ring group.
          description: Type of the entity whose configuration is now invalid.
          enum:
            - ENTITY_TYPE_UNSPECIFIED
            - AUTO_ATTENDANT
            - RING_GROUP
          type: string
        transferMisconfiguration:
          description: Issue(s) with transferring or forwarding to an external entity.
          $ref: '#/components/schemas/TransferMisconfiguration'
      type: object
      id: VoiceMisconfiguration
      description: An alert triggered when Google Voice configuration becomes invalid, generally due to an external entity being modified or deleted.
    BatchDeleteAlertsResponse:
      description: Response to batch delete operation on alerts.
      type: object
      properties:
        successAlertIds:
          type: array
          items:
            type: string
          description: The successful list of alert IDs.
        failedAlertStatus:
          additionalProperties:
            $ref: '#/components/schemas/Status'
          type: object
          description: The status details for each failed alert_id.
      id: BatchDeleteAlertsResponse
    ReportingRule:
      type: object
      properties:
        query:
          type: string
          description: 'Alert Rule query Sample Query query { condition { filter { expected_application_id: 777491262838 expected_event_name: "indexable_content_change" filter_op: IN } } conjunction_operator: OR }'
          format: byte
        name:
          type: string
          description: Rule name
        alertDetails:
          type: string
          description: Any other associated alert details, for example, AlertConfiguration.
          format: byte
      description: Alerts from Reporting Rules configured by Admin.
      id: ReportingRule
    MatchInfo:
      properties:
        userDefinedDetector:
          description: For matched detector defined by administrators.
          $ref: '#/components/schemas/UserDefinedDetectorInfo'
        predefinedDetector:
          $ref: '#/components/schemas/PredefinedDetectorInfo'
          description: For matched detector predefined by Google.
      description: Proto that contains match information from the condition part of the rule.
      id: MatchInfo
      type: object
    User:
      properties:
        displayName:
          type: string
          description: Display name of the user.
        emailAddress:
          type: string
          description: Email address of the user.
      type: object
      description: A user.
      id: User
    UserDefinedDetectorInfo:
      description: Detector defined by administrators.
      type: object
      properties:
        resourceName:
          description: Resource name that uniquely identifies the detector.
          type: string
        displayName:
          type: string
          description: Display name of the detector.
      id: UserDefinedDetectorInfo
    ResourceInfo:
      id: ResourceInfo
      description: Proto that contains resource information.
      properties:
        resourceTitle:
          type: string
          description: Title of the resource, for example email subject, or document title.
        documentId:
          description: Drive file ID.
          type: string
      type: object
    MaliciousEntity:
      description: Entity whose actions triggered a Gmail phishing alert.
      id: MaliciousEntity
      properties:
        entity:
          description: The actor who triggered a gmail phishing alert.
          $ref: '#/components/schemas/User'
        fromHeader:
          description: The sender email address.
          type: string
        displayName:
          description: The header from display name.
          type: string
      type: object
    StateSponsoredAttack:
      properties:
        email:
          description: The email of the user this incident was created for.
          type: string
      type: object
      description: A state-sponsored attack alert. Derived from audit logs.
      id: StateSponsoredAttack
    ListAlertFeedbackResponse:
      id: ListAlertFeedbackResponse
      description: Response message for an alert feedback listing request.
      properties:
        feedback:
          items:
            $ref: '#/components/schemas/AlertFeedback'
          description: The list of alert feedback. Feedback entries for each alert are ordered by creation time descending.
          type: array
      type: object
    MergeInfo:
      description: New alert tracking numbers.
      type: object
      id: MergeInfo
      properties:
        newIncidentTrackingId:
          type: string
          description: The new tracking ID from the parent incident.
        newAlertId:
          type: string
          description: Optional. New alert ID. Reference the [google.apps.alertcenter.Alert] with this ID for the current state.
    AppMakerSqlSetupNotification:
      type: object
      properties:
        requestInfo:
          type: array
          items:
            $ref: '#/components/schemas/RequestInfo'
          description: List of applications with requests for default SQL set up.
      description: Alerts from App Maker to notify admins to set up default SQL instance.
      id: AppMakerSqlSetupNotification
    RuleInfo:
      description: Proto that contains rule information.
      type: object
      id: RuleInfo
      properties:
        resourceName:
          type: string
          description: Resource name that uniquely identifies the rule.
        displayName:
          type: string
          description: User provided name of the rule.
    ActivityRule:
      properties:
        updateTime:
          type: string
          format: google-datetime
          description: The timestamp of the last update to the rule.
        query:
          type: string
          description: Query that is used to get the data from the associated source.
        threshold:
          type: string
          description: Alert threshold is for example “COUNT > 5”.
        name:
          description: Rule name.
          type: string
        triggerSource:
          description: The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS * USER_EVENTS
          type: string
        displayName:
          type: string
          description: Alert display name.
        supersededAlerts:
          type: array
          items:
            type: string
          description: List of alert IDs superseded by this alert. It is used to indicate that this alert is essentially extension of superseded alerts and we found the relationship after creating these alerts.
        description:
          description: Description of the rule.
          type: string
        windowSize:
          type: string
          description: Rule window size. Possible values are 1 hour or 24 hours.
          format: google-duration
        supersedingAlert:
          description: Alert ID superseding this alert. It is used to indicate that superseding alert is essentially extension of this alert and we found the relationship after creating both alerts.
          type: string
        actionNames:
          items:
            type: string
          description: List of action names associated with the rule threshold.
          type: array
        createTime:
          type: string
          format: google-datetime
          description: Rule create timestamp.
      type: object
      id: ActivityRule
      description: Alerts from Google Workspace Security Center rules service configured by an admin.
    DeviceCompromised:
      description: A mobile device compromised alert. Derived from audit logs.
      id: DeviceCompromised
      properties:
        email:
          description: The email of the user this alert was created for.
          type: string
        events:
          items:
            $ref: '#/components/schemas/DeviceCompromisedSecurityDetail'
          description: Required. The list of security events.
          type: array
      type: object
    SuspiciousActivitySecurityDetail:
      type: object
      id: SuspiciousActivitySecurityDetail
      description: Detailed information of a single MDM suspicious activity event.
      properties:
        deviceProperty:
          type: string
          description: The device property which was changed.
        deviceModel:
          description: The model of the device.
          type: string
        iosVendorId:
          description: Required for iOS, empty for others.
          type: string
        serialNumber:
          type: string
          description: The serial number of the device.
        newValue:
          type: string
          description: The new value of the device property after the change.
        oldValue:
          type: string
          description: The old value of the device property before the change.
        deviceId:
          description: Required. The device ID.
          type: string
        resourceId:
          description: The device resource ID.
          type: string
        deviceType:
          type: string
          description: The type of the device.
    EntityList:
      description: EntityList stores entities in a format that can be translated to a table in the Alert Center UI.
      id: EntityList
      properties:
        headers:
          description: Headers of the values in entities. If no value is defined in Entity, this field should be empty.
          items:
            type: string
          type: array
        name:
          description: Name of the key detail used to display this entity list.
          type: string
        entities:
          items:
            $ref: '#/components/schemas/Entity'
          type: array
          description: List of entities affected by the alert.
      type: object
    SSOProfileDeletedEvent:
      description: Event occurred when SSO Profile deleted in customer's account. The event are being received from insight forwarder
      id: SSOProfileDeletedEvent
      type: object
      properties:
        inboundSsoProfileName:
          description: sso profile name which got deleted
          type: string
    ApnsCertificateExpirationInfo:
      id: ApnsCertificateExpirationInfo
      description: The explanation message associated with ApnsCertificationExpiring and ApnsCertificationExpired alerts.
      type: object
      properties:
        uid:
          description: The UID for the certificate.
          type: string
        expirationTime:
          description: The expiration date of the APNS Certificate.
          format: google-datetime
          type: string
        appleId:
          description: The Apple ID used for the certificate may be blank if admins didn't enter it.
          type: string
    CloudPubsubTopic:
      description: A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.
      properties:
        payloadFormat:
          enum:
            - PAYLOAD_FORMAT_UNSPECIFIED
            - JSON
          type: string
          description: Optional. The format of the payload that would be sent. If not specified the format will be JSON.
          enumDescriptions:
            - Payload format is not specified (will use JSON as default).
            - Use JSON.
        topicName:
          description: The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
          type: string
      type: object
      id: CloudPubsubTopic
    AbuseDetected:
      id: AbuseDetected
      description: A generic alert for abusive user activity occurring with a customer.
      properties:
        summary:
          type: string
          description: Customizable text to display in the summary section of the alert. Will be parsed as HTML to allow new paragraphs and hyperlinks.
        product:
          type: string
          description: Product that the abuse is originating from.
        subAlertId:
          type: string
          description: Unique identifier of each alert that is onboarded.
        nextSteps:
          description: Customizable text to display in the next steps section of the alert. Will be parsed as HTML to allow new paragraphs and hyperlinks.
          type: string
        alertDescriptor:
          type: string
          description: Displayed after Customer abuse detected - {alert_descriptor}. If missing, alert name will be displayed as Customer abuse detected.
        additionalDetails:
          $ref: '#/components/schemas/EntityList'
          description: List of abusive users/entities to be displayed in a table in the alert.
      type: object
    ActionInfo:
      description: Metadata related to the action.
      properties: {}
      type: object
      id: ActionInfo
    LoginDetails:
      id: LoginDetails
      description: The details of the login action.
      properties:
        ipAddress:
          type: string
          description: Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event.
        loginTime:
          type: string
          description: Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts.
          format: google-datetime
      type: object
    Empty:
      id: Empty
      properties: {}
      type: object
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
    UndeleteAlertRequest:
      id: UndeleteAlertRequest
      description: A request to undelete a specific alert that was marked for deletion.
      properties:
        customerId:
          type: string
          description: Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.
      type: object
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          type: integer
          format: int32
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
        details:
          items:
            type: object
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
              type: any
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
      id: Status
    AppsOutage:
      properties:
        products:
          description: List of products impacted by the outage.
          items:
            type: string
          type: array
        mergeInfo:
          $ref: '#/components/schemas/MergeInfo'
          description: Indicates new alert details under which the outage is communicated. Only populated when Status is MERGED.
        incidentTrackingId:
          description: Incident tracking ID.
          type: string
        dashboardUri:
          description: Link to the outage event in Google Workspace Status Dashboard
          type: string
        status:
          type: string
          enum:
            - STATUS_UNSPECIFIED
            - NEW
            - ONGOING
            - RESOLVED
            - FALSE_POSITIVE
            - PARTIALLY_RESOLVED
            - MERGED
            - DOWNGRADED
          enumDescriptions:
            - Status is unspecified.
            - The incident has just been reported.
            - The incident is ongoing.
            - The incident has been resolved.
            - Further assessment indicated no customer impact.
            - The incident has been partially resolved.
            - The incident was merged into a parent.
            - The incident has lower impact than initially anticipated.
          description: Current outage status.
        resolutionTime:
          description: Timestamp when the outage is expected to be resolved, or has confirmed resolution. Provided only when known.
          type: string
          format: google-datetime
        nextUpdateTime:
          type: string
          description: Timestamp by which the next update is expected to arrive.
          format: google-datetime
      id: AppsOutage
      type: object
      description: An outage incident reported for a Google Workspace service.
    AccountWarning:
      type: object
      id: AccountWarning
      properties:
        loginDetails:
          description: 'Optional. Details of the login action associated with the warning event. This is only available for: * Suspicious login * Suspicious login (less secure app) * Suspicious programmatic login * User suspended (suspicious activity)'
          $ref: '#/components/schemas/LoginDetails'
        email:
          type: string
          description: Required. The email of the user that this event belongs to.
      description: Alerts for user account warning events.
    Settings:
      type: object
      properties:
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
          description: The list of notifications.
      description: Customer-level settings.
      id: Settings
    BatchUndeleteAlertsResponse:
      properties:
        successAlertIds:
          description: The successful list of alert IDs.
          items:
            type: string
          type: array
        failedAlertStatus:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Status'
          description: The status details for each failed alert_id.
      description: Response to batch undelete operation on alerts.
      id: BatchUndeleteAlertsResponse
      type: object
    PredefinedDetectorInfo:
      properties:
        detectorName:
          type: string
          description: Name that uniquely identifies the detector.
      description: Detector provided by Google.
      id: PredefinedDetectorInfo
      type: object
    SuspiciousActivity:
      type: object
      id: SuspiciousActivity
      description: A mobile suspicious activity alert. Derived from audit logs.
      properties:
        email:
          type: string
          description: The email of the user this alert was created for.
        events:
          description: Required. The list of security events.
          items:
            $ref: '#/components/schemas/SuspiciousActivitySecurityDetail'
          type: array
    Alert:
      description: An alert affecting a customer.
      id: Alert
      type: object
      properties:
        type:
          description: Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types).
          type: string
        deleted:
          type: boolean
          description: Output only. `True` if this alert is marked for deletion.
        source:
          type: string
          description: 'Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Data Loss Prevention * Domain wide takeout * State sponsored attack * Google identity * Apps outage'
        endTime:
          format: google-datetime
          description: Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.
          type: string
        etag:
          type: string
          description: 'Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly.'
        updateTime:
          description: Output only. The time this alert was last updated.
          format: google-datetime
          type: string
        createTime:
          format: google-datetime
          description: Output only. The time this alert was created.
          type: string
        startTime:
          description: Required. The time the event that caused this alert was started or detected.
          format: google-datetime
          type: string
        customerId:
          description: Output only. The unique identifier of the Google account of the customer.
          type: string
        metadata:
          $ref: '#/components/schemas/AlertMetadata'
          description: Output only. The metadata associated with this alert.
        alertId:
          type: string
          description: Output only. The unique identifier for the alert.
        securityInvestigationToolLink:
          type: string
          description: Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert.
        data:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
          type: object
          description: Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.
    AccountSuspensionDetails:
      id: AccountSuspensionDetails
      type: object
      description: Details about why an account is receiving an account suspension warning.
      properties:
        abuseReason:
          enum:
            - ACCOUNT_SUSPENSION_ABUSE_REASON_UNSPECIFIED
            - TOS_VIOLATION
            - SPAM
            - PHISHING
            - TRAFFIC_PUMPING
            - FRAUD
            - NUMBER_HARVESTING
            - PAYMENTS_FRAUD
            - UNWANTED_CONTENT
          type: string
          description: The reason why this account is receiving an account suspension warning.
          enumDescriptions:
            - Abuse reason is unspecified.
            - This account is being suspended for a Terms of Service violation.
            - This account is being suspended for spam.
            - This account is being suspended for phishing.
            - This account is being suspended for artificially boosting traffic to a website.
            - This account is being suspended for fraud.
            - This account is being suspended for number harvesting.
            - This account is being suspended for payments fraud.
            - This account is being suspended for unwanted content.
        productName:
          type: string
          description: 'The name of the product being abused. This is restricted to only the following values: "Gmail" "Google Workspace" "Payments" "Voice" "YouTube" "Other"'
    UserChanges:
      type: object
      id: UserChanges
      description: Alerts from UserChanges bucket Rules for predefined rules which contain the below rules. Suspended user made active New user Added User suspended (by admin) User granted admin privileges User admin privileges revoked User deleted Users password changed
      properties:
        name:
          type: string
          description: Rule name
    DomainWideTakeoutInitiated:
      description: A takeout operation for the entire domain was initiated by an admin. Derived from audit logs.
      properties:
        email:
          type: string
          description: The email of the admin who initiated the takeout.
        takeoutRequestId:
          description: The takeout request ID.
          type: string
      type: object
      id: DomainWideTakeoutInitiated
    DeviceCompromisedSecurityDetail:
      type: object
      id: DeviceCompromisedSecurityDetail
      description: Detailed information of a single MDM device compromised event.
      properties:
        resourceId:
          description: The device resource ID.
          type: string
        deviceModel:
          type: string
          description: The model of the device.
        serialNumber:
          type: string
          description: The serial number of the device.
        deviceType:
          description: The type of the device.
          type: string
        iosVendorId:
          description: Required for iOS, empty for others.
          type: string
        deviceCompromisedState:
          description: The device compromised state. Possible values are "`Compromised`" or "`Not Compromised`".
          type: string
        deviceId:
          type: string
          description: Required. The device ID.
    CsvRow:
      id: CsvRow
      type: object
      properties:
        entries:
          description: The data entries in a CSV file row, as a string array rather than a single comma-separated string.
          items:
            type: string
          type: array
      description: A representation of a single data row in a CSV file.
    AccountSuspensionWarning:
      description: A warning that the customer's account is about to be suspended.
      id: AccountSuspensionWarning
      type: object
      properties:
        suspensionDetails:
          type: array
          items:
            $ref: '#/components/schemas/AccountSuspensionDetails'
          description: Details about why an account is being suspended.
        state:
          enum:
            - ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED
            - WARNING
            - SUSPENDED
            - APPEAL_APPROVED
            - APPEAL_SUBMITTED
          enumDescriptions:
            - State is unspecified.
            - Customer is receiving a warning about imminent suspension.
            - Customer is being notified that their account has been suspended.
            - Customer is being notified that their suspension appeal was approved.
            - Customer has submitted their appeal, which is pending review.
          description: Account suspension warning state.
          type: string
        appealWindow:
          format: google-duration
          type: string
          description: The amount of time remaining to appeal an imminent suspension. After this window has elapsed, the account will be suspended. Only populated if the account suspension is in WARNING state.
    TransferMisconfiguration:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/TransferError'
          description: Details for each invalid transfer or forward.
          type: array
      description: Error related to transferring or forwarding a phone call.
      id: TransferMisconfiguration
      type: object
    SSOProfileUpdatedEvent:
      id: SSOProfileUpdatedEvent
      description: Event occurred when SSO Profile updated in customer's account. The event are being received from insight forwarder
      type: object
      properties:
        inboundSsoProfileName:
          description: sso profile name which got updated
          type: string
        inboundSsoProfileChanges:
          type: string
          description: changes made to sso profile
    Notification:
      type: object
      description: Settings for callback notifications. For more details see [Google Workspace Alert Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications).
      properties:
        cloudPubsubTopic:
          $ref: '#/components/schemas/CloudPubsubTopic'
          description: A Google Cloud Pub/sub topic destination.
      id: Notification
    SuperAdminPasswordResetEvent:
      type: object
      id: SuperAdminPasswordResetEvent
      description: Event occurred when password was reset for super admin in customer's account. The event are being received from insight forwarder
      properties:
        userEmail:
          type: string
          description: email of person whose password was reset
    BadWhitelist:
      id: BadWhitelist
      properties:
        messages:
          description: The list of messages contained by this alert.
          type: array
          items:
            $ref: '#/components/schemas/GmailMessageInfo'
        domainId:
          description: The domain ID.
          $ref: '#/components/schemas/DomainId'
        sourceIp:
          description: The source IP address of the malicious email, for example, `127.0.0.1`.
          type: string
        maliciousEntity:
          description: The entity whose actions triggered a Gmail phishing alert.
          $ref: '#/components/schemas/MaliciousEntity'
      type: object
      description: Alert for setting the domain or IP that malicious email comes from as whitelisted domain or IP in Gmail advanced settings.
    RequestInfo:
      description: Requests for one application that needs default SQL setup.
      type: object
      properties:
        numberOfRequests:
          format: int64
          type: string
          description: Required. Number of requests sent for this application to set up default SQL instance.
        appKey:
          type: string
          description: Required. The application that requires the SQL setup.
        appDeveloperEmail:
          description: List of app developers who triggered notifications for above application.
          items:
            type: string
          type: array
      id: RequestInfo
    RuleViolationInfo:
      id: RuleViolationInfo
      description: Common alert information about violated rules that are configured by Google Workspace administrators.
      properties:
        resourceInfo:
          description: Details of the resource which violated the rule.
          $ref: '#/components/schemas/ResourceInfo'
        recipients:
          description: Resource recipients. For Drive, they are grantees that the Drive file was shared with at the time of rule triggering. Valid values include user emails, group emails, domains, or 'anyone' if the file was publicly accessible. If the file was private the recipients list will be empty. For Gmail, they are emails of the users or groups that the Gmail message was sent to.
          items:
            type: string
          type: array
        triggeredActionInfo:
          items:
            $ref: '#/components/schemas/ActionInfo'
          type: array
          description: Metadata related to the triggered actions.
        dataSource:
          enum:
            - DATA_SOURCE_UNSPECIFIED
            - DRIVE
          description: Source of the data.
          type: string
          enumDescriptions:
            - Data source is unspecified.
            - Drive data source.
        triggeredActionTypes:
          type: array
          items:
            enumDescriptions:
              - Action type is unspecified.
              - Block sharing a file externally.
              - Show a warning message when sharing a file externally.
              - Send alert.
              - Activate Rule Action
              - Deactivate Rule Action
              - Chrome actions Delete web protect evidence file
            enum:
              - ACTION_TYPE_UNSPECIFIED
              - DRIVE_BLOCK_EXTERNAL_SHARING
              - DRIVE_WARN_ON_EXTERNAL_SHARING
              - ALERT
              - RULE_ACTIVATE
              - RULE_DEACTIVATE
              - DELETE_WEBPROTECT_EVIDENCE
            type: string
          description: Actions applied as a consequence of the rule being triggered.
        suppressedActionTypes:
          description: Actions suppressed due to other actions with higher priority.
          type: array
          items:
            enum:
              - ACTION_TYPE_UNSPECIFIED
              - DRIVE_BLOCK_EXTERNAL_SHARING
              - DRIVE_WARN_ON_EXTERNAL_SHARING
              - ALERT
              - RULE_ACTIVATE
              - RULE_DEACTIVATE
              - DELETE_WEBPROTECT_EVIDENCE
            type: string
            enumDescriptions:
              - Action type is unspecified.
              - Block sharing a file externally.
              - Show a warning message when sharing a file externally.
              - Send alert.
              - Activate Rule Action
              - Deactivate Rule Action
              - Chrome actions Delete web protect evidence file
        ruleInfo:
          description: Details of the violated rule.
          $ref: '#/components/schemas/RuleInfo'
        triggeringUserEmail:
          description: Email of the user who caused the violation. Value could be empty if not applicable, for example, a violation found by drive continuous scan.
          type: string
        matchInfo:
          description: List of matches that were found in the resource content.
          type: array
          items:
            $ref: '#/components/schemas/MatchInfo'
        trigger:
          enumDescriptions:
            - Trigger is unspecified.
            - A Drive file is shared.
          enum:
            - TRIGGER_UNSPECIFIED
            - DRIVE_SHARE
          type: string
          description: Trigger of the rule.
      type: object
    DlpRuleViolation:
      description: Alerts that get triggered on violations of Data Loss Prevention (DLP) rules.
      properties:
        ruleViolationInfo:
          $ref: '#/components/schemas/RuleViolationInfo'
          description: Details about the violated DLP rule. Admins can use the predefined detectors provided by Google Cloud DLP https://cloud.google.com/dlp/ when setting up a DLP rule. Matched Cloud DLP detectors in this violation if any will be captured in the MatchInfo.predefined_detector.
      type: object
      id: DlpRuleViolation
    GoogleOperations:
      properties:
        domain:
          description: Customer domain for email template personalization.
          type: string
        title:
          type: string
          description: A one-line incident description.
        description:
          description: A detailed, freeform incident description.
          type: string
        affectedUserEmails:
          type: array
          description: The list of emails which correspond to the users directly affected by the incident.
          items:
            type: string
        header:
          description: A header to display above the incident message. Typically used to attach a localized notice on the timeline for followup comms translations.
          type: string
        attachmentData:
          description: Optional. Application-specific data for an incident, provided when the Google Workspace application which reported the incident cannot be completely restored to a valid state.
          $ref: '#/components/schemas/Attachment'
      type: object
      description: An incident reported by Google Operations for a Google Workspace application.
      id: GoogleOperations
    AlertMetadata:
      id: AlertMetadata
      description: An alert metadata.
      properties:
        updateTime:
          description: Output only. The time this metadata was last updated.
          type: string
          format: google-datetime
        assignee:
          description: The email address of the user assigned to the alert.
          type: string
        severity:
          description: 'The severity value of the alert. Alert Center will set this field at alert creation time, default''s to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW'
          type: string
        customerId:
          type: string
          description: Output only. The unique identifier of the Google account of the customer.
        etag:
          type: string
          description: 'Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metadata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly.'
        alertId:
          type: string
          description: Output only. The alert identifier.
        status:
          description: 'The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED'
          type: string
      type: object
    Entity:
      description: Individual entity affected by, or related to, an alert.
      properties:
        values:
          type: array
          items:
            type: string
          description: Extra values beyond name. The order of values should align with headers in EntityList.
        name:
          description: Human-readable name of this entity, such as an email address, file ID, or device name.
          type: string
        link:
          type: string
          description: Link to a Security Investigation Tool search based on this entity, if available.
      type: object
      id: Entity
    Csv:
      description: A representation of a CSV file attachment, as a list of column headers and a list of data rows.
      type: object
      id: Csv
      properties:
        dataRows:
          items:
            $ref: '#/components/schemas/CsvRow'
          description: The list of data rows in a CSV file, as string arrays rather than as a single comma-separated string.
          type: array
        headers:
          items:
            type: string
          description: The list of headers for data columns in a CSV file.
          type: array
    AlertFeedback:
      properties:
        type:
          enum:
            - ALERT_FEEDBACK_TYPE_UNSPECIFIED
            - NOT_USEFUL
            - SOMEWHAT_USEFUL
            - VERY_USEFUL
          description: Required. The type of the feedback.
          enumDescriptions:
            - The feedback type is not specified.
            - The alert report is not useful.
            - The alert report is somewhat useful.
            - The alert report is very useful.
          type: string
        feedbackId:
          description: Output only. The unique identifier for the feedback.
          type: string
        customerId:
          type: string
          description: Output only. The unique identifier of the Google account of the customer.
        createTime:
          type: string
          description: Output only. The time this feedback was created.
          format: google-datetime
        email:
          description: Output only. The email of the user that provided the feedback.
          type: string
        alertId:
          type: string
          description: Output only. The alert identifier.
      id: AlertFeedback
      description: A customer feedback about an alert.
      type: object
    BatchUndeleteAlertsRequest:
      type: object
      properties:
        alertId:
          type: array
          items:
            type: string
          description: Required. list of alert IDs.
        customerId:
          type: string
          description: Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with.
      description: A request to perform batch undelete on alerts.
      id: BatchUndeleteAlertsRequest
    SSOProfileCreatedEvent:
      id: SSOProfileCreatedEvent
      properties:
        inboundSsoProfileName:
          description: sso profile name which got created
          type: string
      description: Event occurred when SSO Profile created in customer's account. The event are being received from insight forwarder
      type: object
    VoicemailRecipientError:
      type: object
      id: VoicemailRecipientError
      properties:
        email:
          description: Email address of the invalid recipient. This may be unavailable if the recipient was deleted.
          type: string
        invalidReason:
          enumDescriptions:
            - Reason wasn't specified.
            - User can't receive emails due to insufficient quota.
            - All recipients were deleted.
          enum:
            - EMAIL_INVALID_REASON_UNSPECIFIED
            - OUT_OF_QUOTA
            - RECIPIENT_DELETED
          type: string
          description: Reason for the error.
      description: Issue(s) with a voicemail recipient.
    BatchDeleteAlertsRequest:
      description: A request to perform batch delete on alerts.
      type: object
      id: BatchDeleteAlertsRequest
      properties:
        alertId:
          type: array
          items:
            type: string
          description: Required. list of alert IDs.
        customerId:
          type: string
          description: Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with.
    Attachment:
      id: Attachment
      properties:
        csv:
          description: A CSV file attachment.
          $ref: '#/components/schemas/Csv'
      type: object
      description: Attachment with application-specific information about an alert.
  parameters:
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/apps.alerts: See and delete your domain's G Suite alerts, and send alert feedback
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    alertcenter:
      id: googleworkspace.alertcenter.alertcenter
      name: alertcenter
      title: Alertcenter
      methods:
        updateSettings:
          operation:
            $ref: '#/paths/~1v1beta1~1settings/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    settings:
      id: googleworkspace.alertcenter.settings
      name: settings
      title: Settings
      methods:
        getSettings:
          operation:
            $ref: '#/paths/~1v1beta1~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/settings/methods/getSettings'
        insert: []
        update: []
        delete: []
    feedback:
      id: googleworkspace.alertcenter.feedback
      name: feedback
      title: Feedback
      methods:
        alerts_feedback_list:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts~1{alertId}~1feedback/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        alerts_feedback_create:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts~1{alertId}~1feedback/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/feedback/methods/alerts_feedback_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/feedback/methods/alerts_feedback_create'
        update: []
        delete: []
    alerts:
      id: googleworkspace.alertcenter.alerts
      name: alerts
      title: Alerts
      methods:
        delete:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts~1{alertId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts~1{alertId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batchDelete:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts:batchDelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts~1{alertId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        batchUndelete:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts:batchUndelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/get'
          - $ref: '#/components/x-stackQL-resources/alerts/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/delete'
    alerts__metadata:
      id: googleworkspace.alertcenter.alerts__metadata
      name: alerts__metadata
      title: Alerts__metadata
      methods:
        alerts_getMetadata:
          operation:
            $ref: '#/paths/~1v1beta1~1alerts~1{alertId}~1metadata/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts__metadata/methods/alerts_getMetadata'
        insert: []
        update: []
        delete: []
paths:
  /v1beta1/settings:
    parameters: &ref_1
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/access_token'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/fields'
    patch:
      description: Updates the customer-level settings.
      operationId: alertcenter.updateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alertcenter
      x-stackQL-verb: exec
    get:
      description: Returns customer-level settings.
      operationId: alertcenter.getSettings
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      parameters:
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: _settings
      x-stackQL-verb: select
  /v1beta1/alerts/{alertId}/feedback:
    parameters: *ref_1
    get:
      description: Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.
      operationId: alertcenter.alerts.feedback.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertFeedbackResponse'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: feedback
      x-stackQL-verb: select
    post:
      description: Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.
      operationId: alertcenter.alerts.feedback.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertFeedback'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertFeedback'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: feedback
      x-stackQL-verb: insert
  /v1beta1/alerts/{alertId}:
    parameters: *ref_1
    delete:
      description: Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error.
      operationId: alertcenter.alerts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: delete
    get:
      description: Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.
      operationId: alertcenter.alerts.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: select
  /v1beta1/alerts/{alertId}/metadata:
    parameters: *ref_1
    get:
      description: Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error.
      operationId: alertcenter.alerts.getMetadata
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertMetadata'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts__metadata
      x-stackQL-verb: select
  /v1beta1/alerts:batchDelete:
    parameters: *ref_1
    post:
      description: Performs batch delete operation on alerts.
      operationId: alertcenter.alerts.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteAlertsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDeleteAlertsResponse'
      parameters: []
      x-stackQL-resource: alerts
      x-stackQL-verb: delete
  /v1beta1/alerts/{alertId}:undelete:
    parameters: *ref_1
    post:
      description: Restores, or "undeletes", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.
      operationId: alertcenter.alerts.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteAlertRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
      parameters:
        - in: path
          name: alertId
          required: true
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
  /v1beta1/alerts:
    parameters: *ref_1
    get:
      description: Lists the alerts.
      operationId: alertcenter.alerts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAlertsResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: orderBy
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: customerId
          schema:
            type: string
      x-stackQL-resource: alerts
      x-stackQL-verb: select
  /v1beta1/alerts:batchUndelete:
    parameters: *ref_1
    post:
      description: Performs batch undelete operation on alerts.
      operationId: alertcenter.alerts.batchUndelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUndeleteAlertsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/apps.alerts
          Oauth2c:
            - https://www.googleapis.com/auth/apps.alerts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchUndeleteAlertsResponse'
      parameters: []
      x-stackQL-resource: alerts
      x-stackQL-verb: exec
