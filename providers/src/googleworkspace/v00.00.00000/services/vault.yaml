openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://github.com/stackql/google-discovery-to-openapi
    email: info@stackql.io
  title: Google Vault API
  description: 'Retention and eDiscovery for Google Workspace. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege. For example, to download an export, an account needs the **Manage Exports** privilege and the matter shared with them. '
  version: v1
  x-discovery-doc-revision: '20221214'
  x-generated-date: '2023-01-06'
externalDocs:
  url: https://developers.google.com/vault
servers:
  - url: https://vault.googleapis.com
components:
  schemas:
    HangoutsChatExportOptions:
      type: object
      properties:
        exportFormat:
          enumDescriptions:
            - No export format specified.
            - Export as MBOX. Only available for Gmail, Groups, Hangouts and Voice.
            - Export as PST. Only available for Gmail, Groups, Hangouts, Voice and Calendar.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
          type: string
          description: The file format for exported messages.
      id: HangoutsChatExportOptions
      description: Options for Chat exports.
    CountArtifactsRequest:
      description: Count artifacts request.
      type: object
      properties:
        query:
          $ref: '#/components/schemas/Query'
          description: The search query.
        view:
          enum:
            - COUNT_RESULT_VIEW_UNSPECIFIED
            - TOTAL_COUNT
            - ALL
          description: Sets the granularity of the count results.
          enumDescriptions:
            - Default. Same as **TOTAL_COUNT**.
            - Response includes counts of the total accounts, queried accounts, matching accounts, non-queryable accounts, and queried account errors.
            - Response includes the same details as **TOTAL_COUNT**, plus additional account breakdown.
          type: string
      id: CountArtifactsRequest
    MailOptions:
      description: Additional options for Gmail search
      id: MailOptions
      properties:
        excludeDrafts:
          type: boolean
          description: Set to **true** to exclude drafts.
      type: object
    Empty:
      properties: {}
      description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }'
      id: Empty
      type: object
    GroupsCountResult:
      description: Groups specific count metrics.
      id: GroupsCountResult
      type: object
      properties:
        nonQueryableAccounts:
          description: When **DataScope** is **HELD_DATA**, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.
          type: array
          items:
            type: string
        matchingAccountsCount:
          format: int64
          type: string
          description: Total number of accounts that can be queried and have more than zero messages.
        queriedAccountsCount:
          format: int64
          type: string
          description: Total number of accounts involved in this count operation.
        accountCounts:
          items:
            $ref: '#/components/schemas/AccountCount'
          type: array
          description: Subtotal count per matching account that have more than zero messages.
        accountCountErrors:
          type: array
          items:
            $ref: '#/components/schemas/AccountCountError'
          description: Error occurred when querying these accounts.
    SavedQuery:
      description: The definition of a saved query. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      properties:
        matterId:
          type: string
          description: Output only. The matter ID of the matter the saved query is saved in. The server does not use this field during create and always uses matter ID in the URL.
        displayName:
          type: string
          description: The name of the saved query.
        savedQueryId:
          description: A unique identifier for the saved query.
          type: string
        query:
          description: The search parameters of the saved query.
          $ref: '#/components/schemas/Query'
        createTime:
          format: google-datetime
          type: string
          description: Output only. The server-generated timestamp when the saved query was created.
      type: object
      id: SavedQuery
    DriveOptions:
      id: DriveOptions
      description: Additional options for Drive search
      type: object
      properties:
        includeTeamDrives:
          type: boolean
          description: Set to true to include Team Drive.
        versionDate:
          type: string
          description: Search the current version of the Drive file, but export the contents of the last version saved before 12:00 AM UTC on the specified date. Enter the date in UTC.
          format: google-datetime
        includeSharedDrives:
          type: boolean
          description: Set to **true** to include shared drives.
        clientSideEncryptedOption:
          description: Set whether the results include only content encrypted with [Google Workspace Client-side encryption](https://support.google.com/a?p=cse_ov) content, only unencrypted content, or both. Defaults to both. Currently supported for Drive.
          enum:
            - CLIENT_SIDE_ENCRYPTED_OPTION_UNSPECIFIED
            - CLIENT_SIDE_ENCRYPTED_OPTION_ANY
            - CLIENT_SIDE_ENCRYPTED_OPTION_ENCRYPTED
            - CLIENT_SIDE_ENCRYPTED_OPTION_UNENCRYPTED
          enumDescriptions:
            - Encryption status unspecified. Results include both client-side encrypted and non-encrypted content.
            - Include both client-side encrypted and unencrypted content in results.
            - Include client-side encrypted content only.
            - Include unencrypted content only.
          type: string
    ListHoldsResponse:
      description: The holds for a matter.
      properties:
        holds:
          items:
            $ref: '#/components/schemas/Hold'
          type: array
          description: The list of holds.
        nextPageToken:
          description: Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.
          type: string
      id: ListHoldsResponse
      type: object
    Matter:
      properties:
        description:
          description: An optional description for the matter.
          type: string
        state:
          enum:
            - STATE_UNSPECIFIED
            - OPEN
            - CLOSED
            - DELETED
          enumDescriptions:
            - The matter has no specified state.
            - The matter is open.
            - The matter is closed.
            - The matter is deleted.
          type: string
          description: The state of the matter.
        matterPermissions:
          description: Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.
          type: array
          items:
            $ref: '#/components/schemas/MatterPermission'
        matterId:
          type: string
          description: The matter ID, which is generated by the server. Leave blank when creating a matter.
        name:
          description: The name of the matter.
          type: string
      id: Matter
      type: object
      description: Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
    UserInfo:
      description: User's information.
      type: object
      properties:
        displayName:
          description: The displayed name of the user.
          type: string
        email:
          description: The email address of the user.
          type: string
      id: UserInfo
    ListSavedQueriesResponse:
      properties:
        nextPageToken:
          type: string
          description: Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list.
        savedQueries:
          type: array
          items:
            $ref: '#/components/schemas/SavedQuery'
          description: List of saved queries.
      type: object
      description: Definition of the response for method ListSaveQuery.
      id: ListSavedQueriesResponse
    HangoutsChatInfo:
      properties:
        roomId:
          type: array
          description: A list of Chat spaces IDs, as provided by the [Chat API](https://developers.google.com/hangouts/chat).
          items:
            type: string
      type: object
      id: HangoutsChatInfo
      description: The Chat spaces to search
    ListHeldAccountsResponse:
      properties:
        accounts:
          description: The held accounts on a hold.
          type: array
          items:
            $ref: '#/components/schemas/HeldAccount'
      description: Returns a list of the accounts covered by a hold.
      type: object
      id: ListHeldAccountsResponse
    ReopenMatterResponse:
      properties:
        matter:
          $ref: '#/components/schemas/Matter'
          description: The updated matter, with state **OPEN**.
      id: ReopenMatterResponse
      type: object
      description: Response to a ReopenMatterRequest.
    Status:
      type: object
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
      properties:
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
        details:
          items:
            type: object
            additionalProperties:
              type: any
              description: Properties of the object. Contains field @type with type URL.
          type: array
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
        code:
          type: integer
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
      id: Status
    GroupsExportOptions:
      type: object
      description: Options for Groups exports.
      properties:
        exportFormat:
          type: string
          enumDescriptions:
            - No export format specified.
            - Export as MBOX. Only available for Gmail, Groups, Hangouts and Voice.
            - Export as PST. Only available for Gmail, Groups, Hangouts, Voice and Calendar.
          description: The file format for exported messages.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
      id: GroupsExportOptions
    HeldAccount:
      id: HeldAccount
      description: An account covered by a hold. This structure is immutable. It can be an individual account or a Google Group, depending on the service. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      type: object
      properties:
        accountId:
          description: The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).
          type: string
        lastName:
          type: string
          description: Output only. The last name of the account holder.
        holdTime:
          description: Output only. When the account was put on hold.
          type: string
          format: google-datetime
        email:
          description: The primary email address of the account. If used as an input, this takes precedence over **accountId**.
          type: string
        firstName:
          description: Output only. The first name of the account holder.
          type: string
    CorpusQuery:
      type: object
      description: Service-specific options for holds.
      properties:
        voiceQuery:
          $ref: '#/components/schemas/HeldVoiceQuery'
          description: Service-specific options for Voice holds. If set, **CorpusType** must be **VOICE**.
        mailQuery:
          $ref: '#/components/schemas/HeldMailQuery'
          description: Service-specific options for Gmail holds. If set, **CorpusType** must be **MAIL**.
        hangoutsChatQuery:
          $ref: '#/components/schemas/HeldHangoutsChatQuery'
          description: Service-specific options for Chat holds. If set, **CorpusType** must be **HANGOUTS_CHAT**.
        groupsQuery:
          $ref: '#/components/schemas/HeldGroupsQuery'
          description: Service-specific options for Groups holds. If set, **CorpusType** must be **GROUPS**.
        driveQuery:
          $ref: '#/components/schemas/HeldDriveQuery'
          description: Service-specific options for Drive holds. If set, **CorpusType** must be **DRIVE**.
      id: CorpusQuery
    HeldGroupsQuery:
      properties:
        startTime:
          format: google-datetime
          type: string
          description: The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
        endTime:
          description: The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          type: string
          format: google-datetime
        terms:
          description: The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.
          type: string
      type: object
      id: HeldGroupsQuery
      description: Query options for group holds.
    SharedDriveInfo:
      properties:
        sharedDriveIds:
          items:
            type: string
          description: A list of shared drive IDs, as provided by the [Drive API](https://developers.google.com/drive).
          type: array
      description: The shared drives to search
      id: SharedDriveInfo
      type: object
    ReopenMatterRequest:
      id: ReopenMatterRequest
      type: object
      description: Reopen a matter by ID.
      properties: {}
    CloudStorageFile:
      properties:
        objectName:
          description: The name of the Cloud Storage object for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis).
          type: string
        bucketName:
          type: string
          description: The name of the Cloud Storage bucket for the export file. You can use this value in the [Cloud Storage JSON or XML APIs](https://cloud.google.com/storage/docs/apis), but not to list the bucket contents. Instead, you can [get individual export files](https://cloud.google.com/storage/docs/json_api/v1/objects/get) by object name.
        size:
          type: string
          format: int64
          description: The export file size.
        md5Hash:
          type: string
          description: The md5 hash of the file.
      id: CloudStorageFile
      type: object
      description: The export file in Cloud Storage
    AccountCount:
      description: The results count for each account.
      id: AccountCount
      type: object
      properties:
        count:
          format: int64
          description: The number of results (messages or files) found for this account.
          type: string
        account:
          description: Account owner.
          $ref: '#/components/schemas/UserInfo'
    DriveExportOptions:
      properties:
        includeAccessInfo:
          description: To include access level information for users with [indirect access](https://support.google.com/vault/answer/6099459#metadata) to files, set to **true**.
          type: boolean
      description: Options for Drive exports.
      id: DriveExportOptions
      type: object
    AddHeldAccountsRequest:
      type: object
      properties:
        accountIds:
          description: A comma-separated list of the account IDs of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.
          type: array
          items:
            type: string
        emails:
          description: A comma-separated list of the emails of the accounts to add to the hold. Specify either **emails** or **account_ids**, but not both.
          items:
            type: string
          type: array
      id: AddHeldAccountsRequest
      description: Add a list of accounts to a hold.
    UndeleteMatterRequest:
      properties: {}
      id: UndeleteMatterRequest
      description: Undelete a matter by ID.
      type: object
    AccountInfo:
      description: The accounts to search
      type: object
      id: AccountInfo
      properties:
        emails:
          type: array
          description: A set of accounts to search.
          items:
            type: string
    Operation:
      type: object
      properties:
        error:
          description: The error result of the operation in case of failure or cancellation.
          $ref: '#/components/schemas/Status'
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        metadata:
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
            type: any
        response:
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
          additionalProperties:
            type: any
            description: Properties of the object. Contains field @type with type URL.
      id: Operation
      description: This resource represents a long-running operation that is the result of a network API call.
    CountArtifactsMetadata:
      properties:
        startTime:
          type: string
          description: Creation time of count operation.
          format: google-datetime
        query:
          $ref: '#/components/schemas/Query'
          description: The search query from the request.
        endTime:
          format: google-datetime
          type: string
          description: End time of count operation. Available when operation is done.
        matterId:
          description: The matter ID of the associated matter.
          type: string
      description: Long running operation metadata for CountArtifacts.
      id: CountArtifactsMetadata
      type: object
    AddMatterPermissionsRequest:
      description: Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, the existing role is overwritten.
      id: AddMatterPermissionsRequest
      type: object
      properties:
        matterPermission:
          $ref: '#/components/schemas/MatterPermission'
          description: The account and its role to add.
        sendEmails:
          description: To send a notification email to the added account, set to **true**. To not send a notification email, set to **false**.
          type: boolean
        ccMe:
          type: boolean
          description: Only relevant if **sendEmails** is **true**. To CC the requestor in the email message, set to **true**. To not CC requestor, set to **false**.
    AddHeldAccountResult:
      description: The status of each account creation, and the **HeldAccount**, if successful.
      id: AddHeldAccountResult
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
          description: Reports the request status. If it failed, returns an error message.
        account:
          description: Returned when the account was successfully created.
          $ref: '#/components/schemas/HeldAccount'
    TeamDriveInfo:
      description: Team Drives to search
      type: object
      id: TeamDriveInfo
      properties:
        teamDriveIds:
          type: array
          items:
            type: string
          description: List of Team Drive IDs, as provided by the [Drive API](https://developers.google.com/drive).
    RemoveHeldAccountsRequest:
      type: object
      description: Remove a list of accounts from a hold.
      id: RemoveHeldAccountsRequest
      properties:
        accountIds:
          description: The account IDs of the accounts to remove from the hold.
          items:
            type: string
          type: array
    OrgUnitInfo:
      properties:
        orgUnitId:
          type: string
          description: The name of the organizational unit to search, as provided by the [Admin SDK Directory API](https://developers.google.com/admin-sdk/directory/).
      type: object
      id: OrgUnitInfo
      description: The organizational unit to search
    AddHeldAccountsResponse:
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/AddHeldAccountResult'
          description: The list of responses, in the same order as the batch request.
      description: Response for batch create held accounts.
      id: AddHeldAccountsResponse
      type: object
    HeldDriveQuery:
      properties:
        includeTeamDriveFiles:
          description: To include files in Team Drives in the hold, set to **true**.
          type: boolean
        includeSharedDriveFiles:
          type: boolean
          description: To include files in shared drives in the hold, set to **true**.
      type: object
      id: HeldDriveQuery
      description: Options for Drive holds.
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      type: object
      id: CancelOperationRequest
      properties: {}
    HeldHangoutsChatQuery:
      description: Options for Chat holds.
      type: object
      properties:
        includeRooms:
          description: To include messages in Chat spaces the user was a member of, set to **true**.
          type: boolean
      id: HeldHangoutsChatQuery
    CloseMatterRequest:
      properties: {}
      id: CloseMatterRequest
      description: Close a matter by ID.
      type: object
    AccountCountError:
      properties:
        account:
          $ref: '#/components/schemas/UserInfo'
          description: Account owner.
        errorType:
          description: Account query error.
          enum:
            - ERROR_TYPE_UNSPECIFIED
            - WILDCARD_TOO_BROAD
            - TOO_MANY_TERMS
            - LOCATION_UNAVAILABLE
            - UNKNOWN
            - DEADLINE_EXCEEDED
          enumDescriptions:
            - Default.
            - Permanent - prefix terms expanded to too many query terms.
            - Permanent - query contains too many terms.
            - Transient - data in transit between storage replicas, temporarily unavailable.
            - Unrecognized error.
            - Deadline exceeded when querying the account.
          type: string
      id: AccountCountError
      type: object
      description: An error that occurred when querying a specific account
    CountArtifactsResponse:
      properties:
        totalCount:
          description: Total count of messages.
          type: string
          format: int64
        groupsCountResult:
          description: Count metrics for Groups.
          $ref: '#/components/schemas/GroupsCountResult'
        mailCountResult:
          description: Count metrics for Gmail and classic Hangouts.
          $ref: '#/components/schemas/MailCountResult'
      id: CountArtifactsResponse
      type: object
      description: Definition of the response for method CountArtifacts.
    MailExportOptions:
      description: Options for Gmail exports.
      id: MailExportOptions
      properties:
        useNewExport:
          type: boolean
          description: To use the new export system, set to **true**.
        exportFormat:
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
          type: string
          enumDescriptions:
            - No export format specified.
            - Export as MBOX. Only available for Gmail, Groups, Hangouts and Voice.
            - Export as PST. Only available for Gmail, Groups, Hangouts, Voice and Calendar.
          description: The file format for exported messages.
        showConfidentialModeContent:
          description: To export confidential mode content, set to **true**.
          type: boolean
      type: object
    MatterPermission:
      id: MatterPermission
      description: Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.
      properties:
        role:
          enum:
            - ROLE_UNSPECIFIED
            - COLLABORATOR
            - OWNER
          enumDescriptions:
            - No role assigned.
            - A collaborator on the matter.
            - The owner of the matter.
          description: The user's role for the matter.
          type: string
        accountId:
          type: string
          description: The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).
      type: object
    RemoveHeldAccountsResponse:
      description: Response for batch delete held accounts.
      type: object
      properties:
        statuses:
          items:
            $ref: '#/components/schemas/Status'
          type: array
          description: A list of statuses for the deleted accounts. Results have the same order as the request.
      id: RemoveHeldAccountsResponse
    Export:
      id: Export
      description: An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      type: object
      properties:
        matterId:
          type: string
          description: Output only. The matter ID.
        cloudStorageSink:
          description: Output only. The sink for export files in Cloud Storage.
          $ref: '#/components/schemas/CloudStorageSink'
        status:
          type: string
          enumDescriptions:
            - The status is unspecified.
            - The export completed.
            - The export failed.
            - The export is in progress.
          enum:
            - EXPORT_STATUS_UNSPECIFIED
            - COMPLETED
            - FAILED
            - IN_PROGRESS
          description: Output only. The status of the export.
        name:
          type: string
          description: The export name. Don't use special characters (~!$'(),;@:/?) in the name, they can prevent you from downloading exports.
        requester:
          $ref: '#/components/schemas/UserInfo'
          description: Output only. The requester of the export.
        id:
          type: string
          description: Output only. The generated export ID.
        exportOptions:
          description: Additional export options.
          $ref: '#/components/schemas/ExportOptions'
        query:
          $ref: '#/components/schemas/Query'
          description: The query parameters used to create the export.
        createTime:
          description: Output only. The time when the export was created.
          format: google-datetime
          type: string
        stats:
          description: Output only. Details about the export progress and size.
          $ref: '#/components/schemas/ExportStats'
    HeldMailQuery:
      properties:
        terms:
          description: The [search operators](https://support.google.com/vault/answer/2474474) used to refine the messages covered by the hold.
          type: string
        endTime:
          type: string
          description: The end time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
        startTime:
          description: The start time for the query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          format: google-datetime
          type: string
      id: HeldMailQuery
      type: object
      description: Query options for Gmail holds.
    SitesUrlInfo:
      properties:
        urls:
          type: array
          description: A list of published site URLs.
          items:
            type: string
      type: object
      id: SitesUrlInfo
      description: The published site URLs of new Google Sites to search
    ExportOptions:
      id: ExportOptions
      type: object
      description: Additional options for exports
      properties:
        mailOptions:
          $ref: '#/components/schemas/MailExportOptions'
          description: Options for Gmail exports.
        groupsOptions:
          $ref: '#/components/schemas/GroupsExportOptions'
          description: Options for Groups exports.
        region:
          enum:
            - EXPORT_REGION_UNSPECIFIED
            - ANY
            - US
            - EUROPE
          type: string
          description: The requested data region for the export.
          enumDescriptions:
            - The region is unspecified. Defaults to ANY.
            - Any region.
            - United States region.
            - Europe region.
        voiceOptions:
          $ref: '#/components/schemas/VoiceExportOptions'
          description: Options for Voice exports.
        hangoutsChatOptions:
          $ref: '#/components/schemas/HangoutsChatExportOptions'
          description: Options for Chat exports.
        driveOptions:
          description: Options for Drive exports.
          $ref: '#/components/schemas/DriveExportOptions'
    CloseMatterResponse:
      properties:
        matter:
          $ref: '#/components/schemas/Matter'
          description: The updated matter, with state **CLOSED**.
      description: Response to a CloseMatterRequest.
      type: object
      id: CloseMatterResponse
    VoiceOptions:
      description: Additional options for Voice search
      properties:
        coveredData:
          description: Datatypes to search
          items:
            enumDescriptions:
              - Covered data unspecified.
              - Voice text messages.
              - Voicemails and their transcripts.
              - Call logs.
            enum:
              - COVERED_DATA_UNSPECIFIED
              - TEXT_MESSAGES
              - VOICEMAILS
              - CALL_LOGS
            type: string
          type: array
      type: object
      id: VoiceOptions
    HeldVoiceQuery:
      properties:
        coveredData:
          type: array
          description: A list of data types covered by the hold. Should be non-empty. Order does not matter and duplicates are ignored.
          items:
            type: string
            enumDescriptions:
              - Covered data unspecified.
              - Voice text messages.
              - Voicemails and their transcripts.
              - Call logs.
            enum:
              - COVERED_DATA_UNSPECIFIED
              - TEXT_MESSAGES
              - VOICEMAILS
              - CALL_LOGS
      type: object
      id: HeldVoiceQuery
      description: Options for Voice holds.
    ExportStats:
      description: Progress information for an export.
      id: ExportStats
      type: object
      properties:
        sizeInBytes:
          type: string
          description: The size of export in bytes.
          format: int64
        exportedArtifactCount:
          format: int64
          type: string
          description: The number of messages or files already processed for export.
        totalArtifactCount:
          format: int64
          description: The number of messages or files to be exported.
          type: string
    HeldOrgUnit:
      properties:
        orgUnitId:
          description: The organizational unit's immutable ID as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).
          type: string
        holdTime:
          format: google-datetime
          type: string
          description: When the organizational unit was put on hold. This property is immutable.
      type: object
      description: The organizational unit covered by a hold. This structure is immutable.
      id: HeldOrgUnit
    HangoutsChatOptions:
      properties:
        includeRooms:
          type: boolean
          description: For searches by account or organizational unit, set to **true** to include rooms.
      type: object
      id: HangoutsChatOptions
      description: Additional options for Google Chat search
    Hold:
      description: A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
      type: object
      id: Hold
      properties:
        updateTime:
          description: The last time this hold was modified.
          format: google-datetime
          type: string
        query:
          description: Service-specific options. If set, **CorpusQuery** must match **CorpusType**.
          $ref: '#/components/schemas/CorpusQuery'
        orgUnit:
          $ref: '#/components/schemas/HeldOrgUnit'
          description: If set, the hold applies to all members of the organizational unit and **accounts** must be empty. This property is mutable. For Groups holds, set **accounts**.
        name:
          description: The name of the hold.
          type: string
        holdId:
          type: string
          description: The unique immutable ID of the hold. Assigned during creation.
        accounts:
          description: If set, the hold applies to the specified accounts and **orgUnit** must be empty.
          items:
            $ref: '#/components/schemas/HeldAccount'
          type: array
        corpus:
          type: string
          description: The service to be searched.
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DRIVE
            - MAIL
            - GROUPS
            - HANGOUTS_CHAT
            - VOICE
          enumDescriptions:
            - No service specified.
            - Drive, including Meet and Sites.
            - For search, Gmail and classic Hangouts. For holds, Gmail only.
            - Groups.
            - For export, Google Chat only. For holds, Google Chat and classic Hangouts.
            - Google Voice.
    Query:
      type: object
      id: Query
      properties:
        sharedDriveInfo:
          description: Required when **SearchMethod** is **SHARED_DRIVE**.
          $ref: '#/components/schemas/SharedDriveInfo'
        timeZone:
          type: string
          description: The time zone name. It should be an IANA TZ name, such as "America/Los_Angeles". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).
        hangoutsChatInfo:
          description: Required when **SearchMethod** is **ROOM**. (read-only)
          $ref: '#/components/schemas/HangoutsChatInfo'
        endTime:
          description: The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.
          type: string
          format: google-datetime
        accountInfo:
          $ref: '#/components/schemas/AccountInfo'
          description: Required when **SearchMethod** is **ACCOUNT**.
        voiceOptions:
          description: Set Voice search-specific options.
          $ref: '#/components/schemas/VoiceOptions'
        searchMethod:
          enum:
            - SEARCH_METHOD_UNSPECIFIED
            - ACCOUNT
            - ORG_UNIT
            - TEAM_DRIVE
            - ENTIRE_ORG
            - ROOM
            - SITES_URL
            - SHARED_DRIVE
          type: string
          description: The search method to use.
          enumDescriptions:
            - A search method must be specified or else it is rejected.
            - Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).
            - Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).
            - Search the data in the Team Drive specified in **team_drive_info**.
            - Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.
            - Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).
            - Search for sites by the published site URLs specified in [SitesUrlInfo](https://developers.google.com/vault/reference/rest/v1/Query#sitesurlinfo).
            - Search the files in the shared drives specified in [SharedDriveInfo](https://developers.google.com/vault/reference/rest/v1/Query#shareddriveinfo).
        teamDriveInfo:
          description: Required when **SearchMethod** is **TEAM_DRIVE**.
          $ref: '#/components/schemas/TeamDriveInfo'
        hangoutsChatOptions:
          description: Set Chat search-specific options. (read-only)
          $ref: '#/components/schemas/HangoutsChatOptions'
        sitesUrlInfo:
          $ref: '#/components/schemas/SitesUrlInfo'
          description: Required when **SearchMethod** is **SITES_URL**.
        terms:
          description: Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.
          type: string
        mailOptions:
          description: Set Gmail search-specific options.
          $ref: '#/components/schemas/MailOptions'
        orgUnitInfo:
          description: Required when **SearchMethod** is **ORG_UNIT**.
          $ref: '#/components/schemas/OrgUnitInfo'
        startTime:
          type: string
          format: google-datetime
          description: The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.
        dataScope:
          description: The data source to search.
          type: string
          enumDescriptions:
            - No data source specified.
            - All available data.
            - Only data on hold.
            - Only data not yet processed by Vault. (Gmail and Groups only)
          enum:
            - DATA_SCOPE_UNSPECIFIED
            - ALL_DATA
            - HELD_DATA
            - UNPROCESSED_DATA
        corpus:
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DRIVE
            - MAIL
            - GROUPS
            - HANGOUTS_CHAT
            - VOICE
          enumDescriptions:
            - No service specified.
            - Drive, including Meet and Sites.
            - For search, Gmail and classic Hangouts. For holds, Gmail only.
            - Groups.
            - For export, Google Chat only. For holds, Google Chat and classic Hangouts.
            - Google Voice.
          description: The Google Workspace service to search.
          type: string
        driveOptions:
          description: Set Drive search-specific options.
          $ref: '#/components/schemas/DriveOptions'
        method:
          type: string
          description: The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.
          enumDescriptions:
            - A search method must be specified or else it is rejected.
            - Search the data of the accounts specified in [AccountInfo](https://developers.google.com/vault/reference/rest/v1/Query#accountinfo).
            - Search the data of all accounts in the organizational unit specified in [OrgUnitInfo](https://developers.google.com/vault/reference/rest/v1/Query#orgunitinfo).
            - Search the data in the Team Drive specified in **team_drive_info**.
            - Search the data of all accounts in the organization. Supported only for Gmail. When specified, you don't need to specify **AccountInfo** or **OrgUnitInfo**.
            - Search messages in the Chat spaces specified in [HangoutsChatInfo](https://developers.google.com/vault/reference/rest/v1/Query#hangoutschatinfo).
            - Search for sites by the published site URLs specified in [SitesUrlInfo](https://developers.google.com/vault/reference/rest/v1/Query#sitesurlinfo).
            - Search the files in the shared drives specified in [SharedDriveInfo](https://developers.google.com/vault/reference/rest/v1/Query#shareddriveinfo).
          enum:
            - SEARCH_METHOD_UNSPECIFIED
            - ACCOUNT
            - ORG_UNIT
            - TEAM_DRIVE
            - ENTIRE_ORG
            - ROOM
            - SITES_URL
            - SHARED_DRIVE
      description: The query definition used for search and export.
    CloudStorageSink:
      properties:
        files:
          items:
            $ref: '#/components/schemas/CloudStorageFile'
          description: Output only. The exported files in Cloud Storage.
          type: array
      type: object
      id: CloudStorageSink
      description: Export sink for Cloud Storage files.
    ListMattersResponse:
      type: object
      id: ListMattersResponse
      description: Provides the list of matters.
      properties:
        matters:
          description: List of matters.
          type: array
          items:
            $ref: '#/components/schemas/Matter'
        nextPageToken:
          type: string
          description: Page token to retrieve the next page of results in the list.
    MailCountResult:
      description: Gmail and classic Hangouts-specific count metrics.
      properties:
        accountCounts:
          items:
            $ref: '#/components/schemas/AccountCount'
          description: Subtotal count per matching account that have more than zero messages.
          type: array
        nonQueryableAccounts:
          items:
            type: string
          type: array
          description: When **DataScope** is **HELD_DATA** and when account emails are passed in explicitly, the list of accounts in the request that are not queried because they are not on hold in the matter. For other data scopes, this field is not set.
        accountCountErrors:
          items:
            $ref: '#/components/schemas/AccountCountError'
          description: Errors occurred when querying these accounts.
          type: array
        queriedAccountsCount:
          type: string
          description: Total number of accounts involved in this count operation.
          format: int64
        matchingAccountsCount:
          type: string
          description: Total number of accounts that can be queried and have more than zero messages.
          format: int64
      type: object
      id: MailCountResult
    VoiceExportOptions:
      properties:
        exportFormat:
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
          enumDescriptions:
            - No export format specified.
            - Export as MBOX. Only available for Gmail, Groups, Hangouts and Voice.
            - Export as PST. Only available for Gmail, Groups, Hangouts, Voice and Calendar.
          type: string
          description: The file format for exported text messages.
      type: object
      description: The options for Voice exports.
      id: VoiceExportOptions
    ListExportsResponse:
      description: The exports for a matter.
      properties:
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
        exports:
          items:
            $ref: '#/components/schemas/Export'
          description: The list of exports.
          type: array
      type: object
      id: ListExportsResponse
    RemoveMatterPermissionsRequest:
      properties:
        accountId:
          description: The account ID.
          type: string
      type: object
      id: RemoveMatterPermissionsRequest
      description: Remove an account as a matter collaborator.
    ListOperationsResponse:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          description: A list of operations that matches the specified filter in the request.
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      description: The response message for Operations.ListOperations.
      id: ListOperationsResponse
      type: object
  parameters:
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: _.xgafv
      schema:
        type: string
        enum:
          - '1'
          - '2'
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
  securitySchemes:
    Oauth2:
      type: oauth2
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes: &ref_0
            https://www.googleapis.com/auth/ediscovery: Manage your eDiscovery data
            https://www.googleapis.com/auth/ediscovery.readonly: View your eDiscovery data
    Oauth2c:
      type: oauth2
      description: Oauth 2.0 authorization code authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes: *ref_0
  x-stackQL-resources:
    operations:
      id: googleworkspace.vault.operations
      name: operations
      title: Operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}:cancel/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1operations~1{operationsId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/operations/methods/delete'
    exports:
      id: googleworkspace.vault.exports
      name: exports
      title: Exports
      methods:
        matters_exports_get:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1exports~1{exportId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_exports_delete:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1exports~1{exportId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_exports_create:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1exports/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_exports_list:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1exports/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/exports/methods/matters_exports_get'
          - $ref: '#/components/x-stackQL-resources/exports/methods/matters_exports_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/exports/methods/matters_exports_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/exports/methods/matters_exports_delete'
    saved_queries:
      id: googleworkspace.vault.saved_queries
      name: saved_queries
      title: Saved_queries
      methods:
        matters_savedQueries_get:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1savedQueries~1{savedQueryId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_savedQueries_delete:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1savedQueries~1{savedQueryId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_savedQueries_list:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1savedQueries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_savedQueries_create:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1savedQueries/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/matters_savedQueries_get'
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/matters_savedQueries_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/matters_savedQueries_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/saved_queries/methods/matters_savedQueries_delete'
    accounts:
      id: googleworkspace.vault.accounts
      name: accounts
      title: Accounts
      methods:
        matters_holds_accounts_delete:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}~1accounts~1{accountId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_holds_accounts_create:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}~1accounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_holds_accounts_list:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}~1accounts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/matters_holds_accounts_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/matters_holds_accounts_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/matters_holds_accounts_delete'
    holds__held_accounts:
      id: googleworkspace.vault.holds__held_accounts
      name: holds__held_accounts
      title: Holds__held_accounts
      methods:
        matters_holds_removeHeldAccounts:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}:removeHeldAccounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_holds_addHeldAccounts:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}:addHeldAccounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    holds:
      id: googleworkspace.vault.holds
      name: holds
      title: Holds
      methods:
        matters_holds_create:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_holds_list:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_holds_delete:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_holds_get:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_holds_update:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}~1holds~1{holdId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/holds/methods/matters_holds_get'
          - $ref: '#/components/x-stackQL-resources/holds/methods/matters_holds_list'
        insert:
          - $ref: '#/components/x-stackQL-resources/holds/methods/matters_holds_create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/holds/methods/matters_holds_delete'
    matters:
      id: googleworkspace.vault.matters
      name: matters
      title: Matters
      methods:
        list:
          operation:
            $ref: '#/paths/~1v1~1matters/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1v1~1matters/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        count:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}:count/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        undelete:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}:undelete/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        close:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}:close/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reopen:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}:reopen/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/matters/methods/get'
          - $ref: '#/components/x-stackQL-resources/matters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/matters/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/matters/methods/delete'
    matters__permissions:
      id: googleworkspace.vault.matters__permissions
      name: matters__permissions
      title: Matters__permissions
      methods:
        matters_addPermissions:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}:addPermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        matters_removePermissions:
          operation:
            $ref: '#/paths/~1v1~1matters~1{matterId}:removePermissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /v1/operations:
    parameters: &ref_1
      - $ref: '#/components/parameters/fields'
      - $ref: '#/components/parameters/upload_protocol'
      - $ref: '#/components/parameters/prettyPrint'
      - $ref: '#/components/parameters/callback'
      - $ref: '#/components/parameters/oauth_token'
      - $ref: '#/components/parameters/uploadType'
      - $ref: '#/components/parameters/quotaUser'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/_.xgafv'
      - $ref: '#/components/parameters/alt'
      - $ref: '#/components/parameters/access_token'
    get:
      description: 'Lists operations that match the specified filter in the request. If the server doesn''t support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `"/v1/{name=users/*}/operations"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.'
      operationId: vault.operations.list
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
      parameters:
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: operations
      x-stackQL-verb: select
  /v1/operations/{operationsId}:cancel:
    parameters: *ref_1
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: vault.operations.cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: exec
  /v1/operations/{operationsId}:
    parameters: *ref_1
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: vault.operations.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: select
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: vault.operations.delete
      security: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: operationsId
          required: true
          schema:
            type: string
      x-stackQL-resource: operations
      x-stackQL-verb: delete
  /v1/matters/{matterId}/exports/{exportId}:
    parameters: *ref_1
    get:
      description: Gets an export.
      operationId: vault.matters.exports.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Export'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: exportId
          required: true
          schema:
            type: string
      x-stackQL-resource: exports
      x-stackQL-verb: select
    delete:
      description: Deletes an export.
      operationId: vault.matters.exports.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: exportId
          required: true
          schema:
            type: string
      x-stackQL-resource: exports
      x-stackQL-verb: delete
  /v1/matters/{matterId}/exports:
    parameters: *ref_1
    post:
      description: Creates an export.
      operationId: vault.matters.exports.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Export'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Export'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: exports
      x-stackQL-verb: insert
    get:
      description: Lists details about the exports in the specified matter.
      operationId: vault.matters.exports.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExportsResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: exports
      x-stackQL-verb: select
  /v1/matters/{matterId}/savedQueries/{savedQueryId}:
    parameters: *ref_1
    get:
      description: Retrieves the specified saved query.
      operationId: vault.matters.savedQueries.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQuery'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueryId
          required: true
          schema:
            type: string
      x-stackQL-resource: saved_queries
      x-stackQL-verb: select
    delete:
      description: Deletes the specified saved query.
      operationId: vault.matters.savedQueries.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: savedQueryId
          required: true
          schema:
            type: string
      x-stackQL-resource: saved_queries
      x-stackQL-verb: delete
  /v1/matters/{matterId}/savedQueries:
    parameters: *ref_1
    get:
      description: Lists the saved queries in a matter.
      operationId: vault.matters.savedQueries.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSavedQueriesResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
      x-stackQL-resource: saved_queries
      x-stackQL-verb: select
    post:
      description: Creates a saved query.
      operationId: vault.matters.savedQueries.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedQuery'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedQuery'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: saved_queries
      x-stackQL-verb: insert
  /v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}:
    parameters: *ref_1
    delete:
      description: Removes an account from a hold.
      operationId: vault.matters.holds.accounts.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
        - in: path
          name: accountId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: delete
  /v1/matters/{matterId}/holds/{holdId}/accounts:
    parameters: *ref_1
    post:
      description: Adds an account to a hold. Accounts can be added only to a hold that does not have an organizational unit set. If you try to add an account to an organizational unit-based hold, an error is returned.
      operationId: vault.matters.holds.accounts.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeldAccount'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeldAccount'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: insert
    get:
      description: Lists the accounts covered by a hold. This can list only individually-specified accounts covered by the hold. If the hold covers an organizational unit, use the [Admin SDK](https://developers.google.com/admin-sdk/). to list the members of the organizational unit on hold.
      operationId: vault.matters.holds.accounts.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHeldAccountsResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
      x-stackQL-resource: accounts
      x-stackQL-verb: select
  /v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts:
    parameters: *ref_1
    post:
      description: Removes the specified accounts from a hold. Returns a list of statuses in the same order as the request.
      operationId: vault.matters.holds.removeHeldAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveHeldAccountsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveHeldAccountsResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
      x-stackQL-resource: holds__held_accounts
      x-stackQL-verb: delete
  /v1/matters/{matterId}/holds:
    parameters: *ref_1
    post:
      description: Creates a hold in the specified matter.
      operationId: vault.matters.holds.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hold'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hold'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: holds
      x-stackQL-verb: insert
    get:
      description: Lists the holds in a matter.
      operationId: vault.matters.holds.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHoldsResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: holds
      x-stackQL-verb: select
  /v1/matters/{matterId}/holds/{holdId}:
    parameters: *ref_1
    delete:
      description: Removes the specified hold and releases the accounts or organizational unit covered by the hold. If the data is not preserved by another hold or retention rule, it might be purged.
      operationId: vault.matters.holds.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
      x-stackQL-resource: holds
      x-stackQL-verb: delete
    get:
      description: Gets the specified hold.
      operationId: vault.matters.holds.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hold'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: holds
      x-stackQL-verb: select
    put:
      description: Updates the scope (organizational unit or accounts) and query parameters of a hold. You cannot add accounts to a hold that covers an organizational unit, nor can you add organizational units to a hold that covers individual accounts. If you try, the unsupported values are ignored.
      operationId: vault.matters.holds.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hold'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hold'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
      x-stackQL-resource: holds
      x-stackQL-verb: exec
  /v1/matters/{matterId}/holds/{holdId}:addHeldAccounts:
    parameters: *ref_1
    post:
      description: Adds accounts to a hold. Returns a list of accounts that have been successfully added. Accounts can be added only to an existing account-based hold.
      operationId: vault.matters.holds.addHeldAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHeldAccountsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddHeldAccountsResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: path
          name: holdId
          required: true
          schema:
            type: string
      x-stackQL-resource: holds__held_accounts
      x-stackQL-verb: insert
  /v1/matters:
    parameters: *ref_1
    get:
      description: Lists matters the requestor has access to.
      operationId: vault.matters.list
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMattersResponse'
      parameters:
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: state
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
        - in: query
          name: pageSize
          schema:
            type: integer
      x-stackQL-resource: matters
      x-stackQL-verb: select
    post:
      description: Creates a matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.
      operationId: vault.matters.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Matter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
      parameters: []
      x-stackQL-resource: matters
      x-stackQL-verb: insert
  /v1/matters/{matterId}:count:
    parameters: *ref_1
    post:
      description: Counts the accounts processed by the specified query.
      operationId: vault.matters.count
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountArtifactsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters
      x-stackQL-verb: exec
  /v1/matters/{matterId}:undelete:
    parameters: *ref_1
    post:
      description: Undeletes the specified matter. Returns the matter with updated state.
      operationId: vault.matters.undelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UndeleteMatterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters
      x-stackQL-verb: exec
  /v1/matters/{matterId}:
    parameters: *ref_1
    get:
      description: Gets the specified matter.
      operationId: vault.matters.get
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
        - in: query
          name: view
          schema:
            type: string
      x-stackQL-resource: matters
      x-stackQL-verb: select
    put:
      description: Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.
      operationId: vault.matters.update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Matter'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters
      x-stackQL-verb: exec
    delete:
      description: Deletes the specified matter. Returns the matter with updated state.
      operationId: vault.matters.delete
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matter'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters
      x-stackQL-verb: delete
  /v1/matters/{matterId}:close:
    parameters: *ref_1
    post:
      description: Closes the specified matter. Returns the matter with updated state.
      operationId: vault.matters.close
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseMatterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloseMatterResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters
      x-stackQL-verb: exec
  /v1/matters/{matterId}:addPermissions:
    parameters: *ref_1
    post:
      description: Adds an account as a matter collaborator.
      operationId: vault.matters.addPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMatterPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatterPermission'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters__permissions
      x-stackQL-verb: insert
  /v1/matters/{matterId}:removePermissions:
    parameters: *ref_1
    post:
      description: Removes an account as a matter collaborator.
      operationId: vault.matters.removePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveMatterPermissionsRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters__permissions
      x-stackQL-verb: delete
  /v1/matters/{matterId}:reopen:
    parameters: *ref_1
    post:
      description: Reopens the specified matter. Returns the matter with updated state.
      operationId: vault.matters.reopen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReopenMatterRequest'
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReopenMatterResponse'
      parameters:
        - in: path
          name: matterId
          required: true
          schema:
            type: string
      x-stackQL-resource: matters
      x-stackQL-verb: exec
