openapi: 3.0.2
servers:
  - url: 'https://api.pagerduty.com'
    description: PagerDuty V2 API.
info:
  contact:
    name: PagerDuty Support
    url: 'http://www.pagerduty.com/support'
    email: support@pagerduty.com
  version: 2.0.0
  title: PagerDuty API - incidents
  description: |
    An incident represents a problem or an issue that needs to be addressed and resolved. Incidents trigger on a service, which prompts notifications to go out to on-call responders per the service's escalation policy.
security:
  - api_key: []
tags:
  - name: Abilities
    description: |
      This describes your account's abilities by feature name. For example `"teams"`.
      An ability may be available to your account based on things like your pricing plan or account state.
  - name: Add-ons
    description: |
      Developers can write their own functionality to insert into PagerDuty's UI.
  - name: Analytics
    description: |
      Provides enriched incident data.
  - name: Apps
    description: ''
  - name: Audit
    description: |
      Provides audit record data.
  - name: Automation Actions
    description: |
      Automation Actions invoke jobs that are staged in Runbook Automation or Process Automation.
  - name: Paused Incident Reports
    description: |
      Provides paused Incident reporting data on services and accounts that have paused Alerts.
  - name: Business Services
    description: |
      Business services model capabilities that span multiple technical services and that may be owned by several different teams.
  - name: Custom Fields
    description: |
      Custom fields allow you to enrich PagerDuty incidents with critical and helpful metadata throughout the incident lifecycle.
  - name: Change Events
    description: |
      Change Events enable you to send informational events about recent changes such as code deploys and system config changes from any system that can make an outbound HTTP connection. These events do not create incidents and do not send notifications; they are shown in context with incidents on the same PagerDuty service.
  - name: Escalation Policies
    description: |
      Escalation policies define which user should be alerted at which time.
  - name: Event Orchestrations
    description: |
      Event Orchestrations allow you to route events to an endpoint and create collections of Event Orchestrations, which define sets of actions to take based on event content.
  - name: Extension Schemas
    description: |
      A PagerDuty extension vendor represents a specific type of outbound extension such as Generic Webhook, Slack, ServiceNow.
  - name: Extensions
    description: |
      Extensions are representations of Extension Schema objects that are attached to Services.
  - name: Incidents
    description: |
      An incident represents a problem or an issue that needs to be addressed and resolved. Incidents trigger on a service, which prompts notifications to go out to on-call responders per the service's escalation policy.
  - name: Incident Workflows
    description: |
      An Incident Workflow is a sequence of configurable Steps and associated Triggers that can execute automated Actions for a given Incident.
  - name: Licenses
    description: |
      Licenses are allocated to Users to allow for per-User access to PagerDuty functionality within an Account.
  - name: Log Entries
    description: |
      A log of all the events that happen to an Incident, and these are exposed as Log Entries.
  - name: Maintenance Windows
    description: |
      A Maintenance Window is used to temporarily disable one or more Services for a set period of time.
  - name: Notifications
    description: |
      A Notification is created when an Incident is triggered or escalated.
  - name: On-Calls
    description: |
      An on-call represents a contiguous unit of time for which a User will be on call for a given Escalation Policy and Escalation Rules
  - name: Priorities
    description: |
      A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.
  - name: Response Plays
    description: |
      Response Plays are a package of Incident Actions that can be applied during an Incident's life cycle.
  - name: Rulesets
    description: |
      Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.
  - name: Schedules
    description: |
      A Schedule determines the time periods that users are On-Call.
  - name: Service Dependencies
    description: |
      Services are categorized into technical and business services. Dependencies can be created via any combination of these services.
  - name: Services
    description: |
      A Service may represent an application, component, or team you wish to open incidents against.
  - name: Webhooks
    description: |
      A webhook is a way to receive events that occur on the PagerDuty platform via an HTTP POST request.
      V3 webhooks are set up by creating a webhook subscription.
  - name: Status Dashboards
    description: |
      Status Dashboards represent user-defined views for the Status Dashboard product that are limited to specific Business Services rather than the whole set of top-level Business Services (those with no dependent Services).
  - name: Tags
    description: |
      A Tag is applied to Escalation Policies, Teams or Users and can be used to filter them.
  - name: Teams
    description: |
      A team is a collection of Users and Escalation Policies that represent a group of people within an organization.
  - name: Templates
    description: |
      Templates is a new feature which will allow customers to create message templates to be leveraged by (but not limited to) status updates. The API will be secured to customers with the status updates entitlements.
  - name: Users
    description: |
      Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
  - name: Vendors
    description: |
      A PagerDuty Vendor represents a specific type of integration. AWS Cloudwatch, Splunk, Datadog are all examples of vendors
components:
  schemas:
    Pagination:
      type: object
      properties:
        offset:
          type: integer
          description: Echoes offset pagination property.
          readOnly: true
        limit:
          type: integer
          description: Echoes limit pagination property.
          readOnly: true
        more:
          type: boolean
          description: Indicates if there are additional records to return
          readOnly: true
        total:
          type: integer
          description: The total number of records matching the given query.
          nullable: true
          readOnly: true
    Incident:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          properties:
            incident_number:
              type: integer
              readOnly: true
              description: The number of the incident. This is unique across your account.
            created_at:
              type: string
              format: date-time
              readOnly: true
              description: The date/time the incident was first triggered.
            status:
              type: string
              description: The current status of the incident.
              enum:
                - triggered
                - acknowledged
                - resolved
            title:
              type: string
              readOnly: false
              description: 'A succinct description of the nature, symptoms, cause, or effect of the incident.'
            pending_actions:
              type: array
              readOnly: true
              description: 'The list of pending_actions on the incident. A pending_action object contains a type of action which can be escalate, unacknowledge, resolve or urgency_change. A pending_action object contains at, the time at which the action will take place. An urgency_change pending_action will contain to, the urgency that the incident will change to.'
              items:
                $ref: '#/components/schemas/IncidentAction'
            incident_key:
              type: string
              readOnly: true
              description: The incident's de-duplication key.
            service:
              $ref: '#/components/schemas/ServiceReference'
            assignments:
              type: array
              description: List of all assignments for this incident. This list will be empty if the `Incident.status` is `resolved`.
              items:
                $ref: '#/components/schemas/Assignment'
            assigned_via:
              type: string
              description: How the current incident assignments were decided.  Note that `direct_assignment` incidents will not escalate up the attached `escalation_policy`
              enum:
                - escalation_policy
                - direct_assignment
              readOnly: true
            acknowledgements:
              type: array
              description: List of all acknowledgements for this incident. This list will be empty if the `Incident.status` is `resolved` or `triggered`.
              items:
                $ref: '#/components/schemas/Acknowledgement'
            last_status_change_at:
              type: string
              format: date-time
              readOnly: true
              description: The time at which the status of the incident last changed.
            last_status_change_by:
              $ref: '#/components/schemas/AgentReference'
            first_trigger_log_entry:
              $ref: '#/components/schemas/LogEntryReference'
            escalation_policy:
              $ref: '#/components/schemas/EscalationPolicyReference'
            teams:
              type: array
              description: The teams involved in the incident’s lifecycle.
              items:
                $ref: '#/components/schemas/TeamReference'
            priority:
              $ref: '#/components/schemas/PriorityReference'
            urgency:
              type: string
              enum:
                - high
                - low
              description: The current urgency of the incident.
            resolve_reason:
              $ref: '#/components/schemas/ResolveReason'
            alert_counts:
              $ref: '#/components/schemas/AlertCount'
            conference_bridge:
              $ref: '#/components/schemas/ConferenceBridge'
            body:
              $ref: '#/components/schemas/IncidentBody'
            incidents_responders:
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/IncidentsRespondersReference'
            responder_requests:
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/ResponderRequest'
    Tag:
      allOf:
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            summary:
              type: string
              nullable: true
              readOnly: true
              description: 'A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to `name`, though it is not intended to be an identifier.'
            type:
              type: string
              readOnly: true
              description: 'A string that determines the schema of the object. This must be the standard name for the entity, suffixed by `_reference` if the object is a reference.'
            self:
              type: string
              nullable: true
              readOnly: true
              format: url
              description: the API show URL at which the object is accessible
            html_url:
              type: string
              nullable: true
              readOnly: true
              format: url
              description: a URL at which the entity is uniquely displayed in the Web app
        - type: object
          properties:
            type:
              type: string
              description: The type of object being created.
              default: tag
              enum:
                - tag
            label:
              type: string
              description: The label of the tag.
              maxLength: 191
          required:
            - label
            - type
          example:
            type: tag
            label: Batman
    IncidentAction:
      description: An incident action is a pending change to an incident that will automatically happen at some future time.
      type: object
      properties:
        type:
          type: string
          enum:
            - unacknowledge
            - escalate
            - resolve
            - urgency_change
        at:
          type: string
          format: date-time
      discriminator:
        propertyName: type
      required:
        - type
        - at
    ServiceReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - service_reference
    Assignment:
      type: object
      properties:
        at:
          type: string
          format: date-time
          description: Time at which the assignment was created.
        assignee:
          $ref: '#/components/schemas/UserReference'
      required:
        - at
        - assignee
    Acknowledgement:
      type: object
      properties:
        at:
          type: string
          format: date-time
          description: Time at which the acknowledgement was created.
        acknowledger:
          $ref: '#/components/schemas/AcknowledgerReference'
      required:
        - at
        - acknowledger
    AgentReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          description: 'The agent (user, service or integration) that created or modified the Incident Log Entry.'
          properties:
            type:
              enum:
                - user_reference
                - service_reference
                - integration_reference
              type: string
          readOnly: true
    LogEntryReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - acknowledge_log_entry_reference
                - annotate_log_entry_reference
                - assign_log_entry_reference
                - escalate_log_entry_reference
                - exhaust_escalation_path_log_entry_reference
                - notify_log_entry_reference
                - reach_trigger_limit_log_entry_reference
                - repeat_escalation_path_log_entry_reference
                - resolve_log_entry_reference
                - snooze_log_entry_reference
                - trigger_log_entry_reference
                - unacknowledge_log_entry_reference
    EscalationPolicyReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - escalation_policy_reference
    TeamReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - team_reference
    PriorityReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - priority_reference
    ResolveReason:
      type: object
      properties:
        type:
          type: string
          description: The reason the incident was resolved. The only reason currently supported is merge.
          default: merge_resolve_reason
          enum:
            - merge_resolve_reason
        incident:
          $ref: '#/components/schemas/IncidentReference'
    AlertCount:
      type: object
      properties:
        triggered:
          type: integer
          description: The count of triggered alerts
        resolved:
          type: integer
          description: The count of resolved alerts
        all:
          type: integer
          description: The total count of alerts
    ConferenceBridge:
      type: object
      properties:
        conference_number:
          type: string
          description: 'The phone number of the conference call for the conference bridge. Phone numbers should be formatted like +1 415-555-1212,,,,1234#, where a comma (,) represents a one-second wait and pound (#) completes access code input.'
        conference_url:
          type: string
          format: url
          description: An URL for the conference bridge. This could be a link to a web conference or Slack channel.
    IncidentBody:
      type: object
      properties:
        type:
          type: string
          enum:
            - incident_body
        details:
          type: string
          description: Additional incident details.
      required:
        - type
    IncidentsRespondersReference:
      type: object
      properties:
        state:
          type: string
          description: The status of the responder being added to the incident
          example: pending
        user:
          $ref: '#/components/schemas/UserReference'
        incident:
          $ref: '#/components/schemas/IncidentReference'
        updated_at:
          type: string
        message:
          type: string
          description: The message sent with the responder request
        requester:
          $ref: '#/components/schemas/UserReference'
        requested_at:
          type: string
    ResponderRequest:
      type: object
      properties:
        incident:
          $ref: '#/components/schemas/IncidentReference'
        requester:
          $ref: '#/components/schemas/UserReference'
        requested_at:
          type: string
          description: The time the request was made
        message:
          type: string
          description: The message sent with the responder request
        responder_request_targets:
          type: array
          description: The array of targets the responder request is being sent to
          items:
            $ref: '#/components/schemas/ResponderRequestTargetReference'
    AutomationActionsActionClassificationEnum:
      type: string
      enum:
        - diagnostic
        - remediation
      nullable: true
    Reference:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          required:
            - type
            - id
    UserReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - user_reference
    AcknowledgerReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - description: The acknowledger represents the entity that made the acknowledgement for an incident.
          type: object
          properties:
            type:
              enum:
                - user_reference
                - service_reference
              type: string
    IncidentReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - incident_reference
    ResponderRequestTargetReference:
      type: object
      properties:
        type:
          type: string
          description: The type of target (either a user or an escalation policy)
        id:
          type: string
          description: The id of the user or escalation policy
        summary:
          type: string
        incident_responders:
          type: array
          description: An array of responders associated with the specified incident
          items:
            $ref: '#/components/schemas/IncidentsRespondersReference'
    Alert:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
              readOnly: true
              description: The date/time the alert was first triggered.
            type:
              type: string
              default: alert
              description: The type of object being created.
              enum:
                - alert
            status:
              type: string
              description: The current status of the alert.
              enum:
                - triggered
                - resolved
            alert_key:
              type: string
              readOnly: true
              description: The alert's de-duplication key.
            service:
              $ref: '#/components/schemas/ServiceReference'
            first_trigger_log_entry:
              $ref: '#/components/schemas/LogEntryReference'
            incident:
              $ref: '#/components/schemas/IncidentReference'
            suppressed:
              type: boolean
              readOnly: true
              description: Whether or not an alert is suppressed. Suppressed alerts are not created with a parent incident.
              default: false
            severity:
              type: string
              readOnly: true
              description: The magnitude of the problem as reported by the monitoring tool.
              enum:
                - info
                - warning
                - error
                - critical
            integration:
              $ref: '#/components/schemas/IntegrationReference'
            body:
              type: object
              readOnly: true
              description: A JSON object containing data describing the alert.
              title: Body
              properties:
                type:
                  type: string
                  description: The type of the body.
                  enum:
                    - alert_body
                contexts:
                  type: array
                  readOnly: true
                  description: Contexts to be included with the body such as links to graphs or images.
                  items:
                    $ref: '#/components/schemas/Context'
                details:
                  type: object
                  readOnly: true
                  description: An arbitrary JSON object or string containing any data explaining the nature of the alert.
          required:
            - type
          example:
            type: alert
            status: resolved
            incident:
              id: PEYSGVF
              type: incident_reference
            body:
              type: alert_body
              contexts:
                - type: link
              details:
                customKey: Server is on fire!
                customKey2: Other stuff!
    IntegrationReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - aws_cloudwatch_inbound_integration_reference
                - cloudkick_inbound_integration_reference
                - event_transformer_api_inbound_integration_reference
                - generic_email_inbound_integration_reference
                - generic_events_api_inbound_integration_reference
                - keynote_inbound_integration_reference
                - nagios_inbound_integration_reference
                - pingdom_inbound_integration_reference
                - sql_monitor_inbound_integration_reference
                - events_api_v2_inbound_integration_reference
                - inbound_integration_reference
    Context:
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: The type of context being attached to the incident.
          enum:
            - link
            - image
        href:
          type: string
          description: The link's target url
        src:
          type: string
          description: The image's source url
        text:
          type: string
          description: The alternate display for an image
      required:
        - type
    CursorPagination:
      type: object
      properties:
        limit:
          type: integer
          description: The minimum of the `limit` parameter used in the request or the maximum request size of the API.
          readOnly: true
        next_cursor:
          type: string
          description: |
            An opaque string than will deliver the next set of results when provided as the `cursor` parameter in a subsequent request.  A `null` value for this field indicates that there are no additional results.
          example: dXNlcjaVMzc5V0ZYTlo=
          nullable: true
          readOnly: true
      required:
        - limit
        - next_cursor
    Impact:
      title: Impact
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        type:
          type: string
          description: The kind of object that has been impacted
          enum:
            - business_service
        status:
          type: string
          description: The current impact status of the object
          enum:
            - impacted
            - not_impacted
        additional_fields:
          type: object
          properties:
            highest_impacting_priority:
              type: object
              nullable: true
              description: Priority information for the highest priority level that is affecting the impacted object.
              properties:
                id:
                  type: string
                  readOnly: true
                order:
                  type: integer
                  readOnly: true
    CustomFieldsFieldValue:
      type: object
      properties:
        id:
          type: string
          description: Id of the field.
        name:
          type: string
          description: 'The name of the field. May include ASCII characters, specifically lowercase letters, digits, and underescores. The `name` for a Field must be unique.'
          maxLength: 50
        type:
          type: string
          description: Determines the type of the reference.
          enum:
            - field_value
        display_name:
          type: string
          description: The human-readable name of the field. This must be unique across an account.
          maxLength: 50
        multi_value:
          type: boolean
          description: 'If `true`, allows the custom field to store a set of multiple values. Must be `false` if `datatype` is not "string" or "url"'
        datatype:
          type: string
          description: The kind of data the custom field is allowed to contain.
          enum:
            - boolean
            - integer
            - float
            - string
            - datetime
            - url
        description:
          type: string
          nullable: true
          description: A description of the data this field contains.
          maxLength: 1000
        fixed_options:
          type: boolean
          description: 'If `true`, restricts the values allowed to be stored in the custom field to a limited set of options (configured via the Field Option sub-resource). Must be `false` if `datatype` is "boolean", "url", or "datetime"'
        value:
          oneOf:
            - type: object
              properties:
                value:
                  type: boolean
                  nullable: true
            - type: object
              properties:
                value:
                  type: number
                  nullable: true
            - type: object
              properties:
                value:
                  type: integer
                  nullable: true
            - type: object
              properties:
                value:
                  oneOf:
                    - type: string
                      maxLength: 200
                      nullable: true
                    - type: array
                      items:
                        type: string
                        maxLength: 200
                      maxItems: 10
                      uniqueItems: true
                      nullable: true
            - type: object
              properties:
                value:
                  type: string
                  nullable: true
                  format: date-time
            - type: object
              properties:
                value:
                  oneOf:
                    - type: string
                      format: uri
                      maxLength: 200
                      nullable: true
                    - type: array
                      items:
                        type: string
                        format: uri
                        maxLength: 200
                      maxItems: 10
                      uniqueItems: true
                      nullable: true
      required:
        - id
        - type
        - name
        - value
        - display_name
        - datatype
        - multi_value
        - description
        - fixed_options
    CustomFieldsEditableFieldValue:
      oneOf:
        - type: object
          properties:
            name:
              $ref: '#/components/schemas/CustomFieldsFieldValue/properties/name'
            value:
              oneOf:
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/0'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/1'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/2'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/3'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/4'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/5'
        - type: object
          properties:
            id:
              type: string
              description: The ID of the Field.
            value:
              oneOf:
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/0'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/1'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/2'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/3'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/4'
                - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/5'
    CustomFieldsIncidentSchema:
      allOf:
        - type: object
          properties:
            id:
              type: string
              readOnly: true
              description: The ID of the resource.
            summary:
              type: string
              nullable: true
              readOnly: true
              description: 'A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to `name`, though it is not intended to be an identifier.'
            self:
              type: string
              nullable: true
              readOnly: true
              format: url
              description: The API show URL at which the object is accessible
            type:
              type: string
              readOnly: true
              enum:
                - schema
            title:
              description: The name of the schema.
              type: string
              maxLength: 100
            description:
              description: A description of this schema.
              type: string
              nullable: true
              maxLength: 1000
          required:
            - id
            - type
            - summary
            - self
        - type: object
          properties:
            field_configurations:
              type: array
              readOnly: true
              items:
                allOf:
                  - $ref: '#/components/schemas/CustomFieldsFieldConfigurationWithFieldReference/allOf/0'
                  - type: object
                    properties:
                      field:
                        $ref: '#/components/schemas/CustomFieldsFieldWithOptions'
              maxItems: 20
              uniqueItems: true
          required:
            - title
            - description
    CustomFieldsFieldConfigurationWithFieldReference:
      allOf:
        - allOf:
            - $ref: '#/components/schemas/CustomFieldsEditableFieldConfiguration'
            - type: object
              properties:
                type:
                  type: string
                  enum:
                    - field_configuration
              required:
                - id
                - type
                - created_at
                - updated_at
                - field
                - required
        - type: object
          properties:
            field:
              description: The Field to be included in this schema. Each Field may only be used in one Field Configuration per schema.
              allOf:
                - type: object
                  properties:
                    type:
                      type: string
                      description: 'A string that determines the type of the reference. This must be the standard name for the entity, suffixed by `_reference`.'
                      enum:
                        - field_reference
                    id:
                      type: string
                      description: The ID of the resource.
                  required:
                    - type
                    - id
    CustomFieldsFieldWithOptions:
      allOf:
        - $ref: '#/components/schemas/CustomFieldsField'
        - type: object
          properties:
            field_options:
              type: array
              description: The fixed list of value options that may be stored in this field.
              items:
                $ref: '#/components/schemas/CustomFieldsFieldOption'
              nullable: true
    CustomFieldsEditableFieldConfiguration:
      type: object
      properties:
        default_value:
          type: object
          description: The value to use for this field if none is provided. It must be specified if `required` is `true`.
          allOf:
            - oneOf:
                - allOf:
                    - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/0'
                    - type: object
                      properties:
                        datatype:
                          type: string
                          enum:
                            - boolean
                  required:
                    - datatype
                    - value
                - allOf:
                    - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/2'
                    - type: object
                      properties:
                        datatype:
                          type: string
                          enum:
                            - integer
                  required:
                    - datatype
                    - value
                - allOf:
                    - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/1'
                    - type: object
                      properties:
                        datatype:
                          type: string
                          enum:
                            - float
                  required:
                    - datatype
                    - value
                - allOf:
                    - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/3'
                    - type: object
                      properties:
                        datatype:
                          type: string
                          enum:
                            - string
                  required:
                    - datatype
                    - value
                - allOf:
                    - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/4'
                    - type: object
                      properties:
                        datatype:
                          type: string
                          enum:
                            - datetime
                  required:
                    - datatype
                    - value
                - allOf:
                    - $ref: '#/components/schemas/CustomFieldsFieldValue/properties/value/oneOf/5'
                    - type: object
                      properties:
                        datatype:
                          type: string
                          enum:
                            - url
                  required:
                    - datatype
                    - value
                - type: object
                  properties:
                    datatype:
                      type: string
                      enum:
                        - field_option
                    value:
                      oneOf:
                        - type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - field_option_reference
                            id:
                              type: string
                              description: 'The ID of the field option. If value is not provided, an ID must be provided.'
                            value:
                              type: string
                              description: 'The value of the field option. If ID is not provided, an value must be provided.'
                          required:
                            - type
                            - id
                            - value
                        - type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - field_option_reference
                              id:
                                type: string
                                description: 'The ID of the field option. If value is not provided, an ID must be provided.'
                              value:
                                type: string
                                description: 'The value of the field option. If ID is not provided, an value must be provided.'
                            required:
                              - type
                              - id
                              - value
                          maxItems: 10
                          uniqueItems: true
                          nullable: true
                  required:
                    - datatype
                    - value
              discriminator:
                propertyName: datatype
                mapping:
                  boolean: ./BooleanFieldValue.yaml
                  integer: ./IntegerFieldValue.yaml
                  float: ./FloatFieldValue.yaml
                  string: ./StringFieldValue.yaml
                  datetime: ./DatetimeFieldValue.yaml
                  url: ./UrlFieldValue.yaml
                  field_option: ./FieldOptionFieldValue.yaml
            - type: object
              properties:
                multi_value:
                  type: boolean
                  description: 'If `true`, allows the custom field to store a set of values. Must match the Field''s `multi_value` setting.'
          required:
            - multi_value
        id:
          type: string
          readOnly: true
          description: The ID of the resource.
        type:
          type: string
          readOnly: true
          description: 'A string that determines the schema of the object. This must be the standard name for the entity, suffixed by `_reference` if the object is a reference.'
        created_at:
          type: string
          format: date-time
          description: The date/time the object was created at.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The date/time the object was last updated.
          readOnly: true
        required:
          description: 'If `true`, this Field must always have a value set for objects using this schema.'
          type: boolean
    CustomFieldsField:
      allOf:
        - $ref: '#/components/schemas/CustomFieldsEditableField'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
              description: The ID of the resource.
            summary:
              type: string
              nullable: true
              readOnly: true
              description: 'A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to `name`, though it is not intended to be an identifier.'
            self:
              type: string
              nullable: true
              readOnly: true
              format: url
              description: The API show URL at which the object is accessible
            type:
              type: string
              enum:
                - field
            created_at:
              type: string
              format: date-time
              description: The date/time the object was created at.
              readOnly: true
            updated_at:
              type: string
              format: date-time
              description: The date/time the object was last updated.
              readOnly: true
            datatype:
              $ref: '#/components/schemas/CustomFieldsFieldValue/properties/datatype'
            multi_value:
              $ref: '#/components/schemas/CustomFieldsFieldValue/properties/multi_value'
            fixed_options:
              $ref: '#/components/schemas/CustomFieldsFieldValue/properties/fixed_options'
      required:
        - id
        - summary
        - self
        - type
        - created_at
        - updated_at
        - datatype
        - namespace
        - name
        - display_name
        - multi_value
        - fixed_options
    CustomFieldsFieldOption:
      allOf:
        - $ref: '#/components/schemas/CustomFieldsEditableFieldOption'
        - type: object
          required:
            - id
            - type
            - data
            - created_at
            - updated_at
    CustomFieldsEditableField:
      type: object
      properties:
        display_name:
          $ref: '#/components/schemas/CustomFieldsFieldValue/properties/display_name'
        description:
          $ref: '#/components/schemas/CustomFieldsFieldValue/properties/description'
    CustomFieldsEditableFieldOption:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: The ID of the resource.
        type:
          type: string
          enum:
            - field_option
        created_at:
          type: string
          format: date-time
          description: The date/time the object was created at.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: The date/time the object was last updated.
          readOnly: true
        data:
          oneOf:
            - type: object
              properties:
                datatype:
                  type: string
                  description: The kind of data represented by this option. Must match the Field's `datatype`.
                  enum:
                    - integer
                value:
                  type: integer
              required:
                - datatype
                - value
            - type: object
              properties:
                datatype:
                  type: string
                  description: The kind of data represented by this option. Must match the Field's `datatype`.
                  enum:
                    - float
                value:
                  type: number
              required:
                - datatype
                - value
            - type: object
              properties:
                datatype:
                  type: string
                  description: The kind of data represented by this option. Must match the Field's `datatype`.
                  enum:
                    - string
                value:
                  type: string
                  maxLength: 200
              required:
                - datatype
                - value
          discriminator:
            propertyName: datatype
            mapping:
              integer: ./IntegerFixedOptionValue.yaml
              float: ./FloatFixedOptionValue.yaml
              string: ./StringFixedOptionValue.yaml
      required:
        - id
        - type
        - created_at
        - updated_at
      description: ''
    AcknowledgeLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            acknowledgement_timeout:
              type: integer
              description: 'Duration for which the acknowledgement lasts, in seconds. Services can contain an `acknowledgement_timeout` property, which specifies the length of time acknowledgements should last for. Each time an incident is acknowledged, this timeout is copied into the acknowledgement log entry. This property is optional, as older log entries may not contain it. It may also be `null`, as acknowledgements can be performed on incidents whose services have no `acknowledgement_timeout` set.'
            type:
              type: string
              enum:
                - acknowledgement_log_entry
    AnnotateLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - annotate_log_entry
    AssignLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            assignees:
              type: array
              readOnly: true
              description: An array of assigned Users for this log entry
              items:
                $ref: '#/components/schemas/UserReference'
            type:
              type: string
              enum:
                - assign_log_entry
    DelegateLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            assignees:
              type: array
              readOnly: true
              description: An array of assigned Users for this log entry
              items:
                $ref: '#/components/schemas/UserReference'
            type:
              type: string
              enum:
                - delegate_log_entry
    EscalateLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            assignees:
              type: array
              readOnly: true
              description: An array of assigned Users for this log entry
              items:
                $ref: '#/components/schemas/UserReference'
            type:
              type: string
              enum:
                - escalate_log_entry
    ExhaustEscalationPathLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - exhaust_escalation_path_log_entry
    NotifyLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
              readOnly: true
              description: Time at which the log entry was created
            user:
              $ref: '#/components/schemas/UserReference'
            type:
              type: string
              enum:
                - notify_log_entry
    ReachAckLimitLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - reach_ack_limit_log_entry
    ReachTriggerLimitLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - reach_trigger_limit_log_entry
    RepeatEscalationPathLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - repeat_escalation_path_log_entry
    ResolveLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - resolve_log_entry
    SnoozeLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            changed_actions:
              type: array
              items:
                $ref: '#/components/schemas/IncidentAction'
            type:
              type: string
              enum:
                - snooze_log_entry
    TriggerLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - trigger_log_entry
    UnacknowledgeLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - unacknowledge_log_entry
    UrgencyChangeLogEntry:
      allOf:
        - $ref: '#/components/schemas/LogEntry'
        - type: object
          properties:
            type:
              type: string
              enum:
                - urgency_change_log_entry
    LogEntry:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          properties:
            type:
              type: string
              enum:
                - acknowledge_log_entry
                - annotate_log_entry
                - assign_log_entry
                - delegate_log_entry
                - escalate_log_entry
                - exhaust_escalation_path_log_entry
                - notify_log_entry
                - reach_ack_limit_log_entry
                - reach_trigger_limit_log_entry
                - repeat_escalation_path_log_entry
                - resolve_log_entry
                - snooze_log_entry
                - trigger_log_entry
                - unacknowledge_log_entry
                - urgency_change_log_entry
            created_at:
              type: string
              format: date-time
              readOnly: true
              description: Time at which the log entry was created.
            channel:
              $ref: '#/components/schemas/Channel'
            agent:
              $ref: '#/components/schemas/AgentReference'
            note:
              type: string
              readOnly: true
              description: 'Optional field containing a note, if one was included with the log entry.'
            contexts:
              type: array
              readOnly: true
              description: Contexts to be included with the trigger such as links to graphs or images.
              items:
                $ref: '#/components/schemas/Context'
            service:
              $ref: '#/components/schemas/ServiceReference'
            incident:
              $ref: '#/components/schemas/IncidentReference'
            teams:
              type: array
              readOnly: true
              description: Will consist of references unless included
              items:
                $ref: '#/components/schemas/TeamReference'
            event_details:
              type: object
              readOnly: true
              properties:
                description:
                  type: string
                  description: Additional details about the event.
    Channel:
      type: object
      description: 'Polymorphic object representation of the means by which the action was channeled. Has different formats depending on type, indicated by channel[type]. Will be one of `auto`, `email`, `api`, `nagios`, or `timeout` if `agent[type]` is `service`. Will be one of `email`, `sms`, `website`, `web_trigger`, or `note` if `agent[type]` is `user`. See [below](https://developer.pagerduty.com/documentation/rest/log_entries/show#channel_types) for detailed information about channel formats.'
      properties:
        type:
          type: string
          description: type
        user:
          type: object
        team:
          type: object
        notification:
          $ref: '#/components/schemas/Notification'
        channel:
          type: object
          description: channel
      required:
        - type
    Notification:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          description: The type of notification.
          enum:
            - sms_notification
            - email_notification
            - phone_notification
            - push_notification
          readOnly: true
        started_at:
          type: string
          format: date-time
          description: The time at which the notification was sent
          readOnly: true
        address:
          type: string
          description: The address where the notification was sent. This will be null for notification type `push_notification`.
          readOnly: true
        user:
          $ref: '#/components/schemas/UserReference'
        conferenceAddress:
          type: string
          description: The address of the conference bridge
        status:
          type: string
        '':
          type: string
    IncidentNote:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          allOf:
            - $ref: '#/components/schemas/Reference'
            - type: object
              description: The user who created a Note. If a service created this Note the `user.type` will be "bot_user_reference" and `user.summary` will list the name of the service rather than the user.
              properties:
                type:
                  type: string
                  enum:
                    - user_reference
                    - bot_user_reference
        channel:
          type: object
          readOnly: true
          description: The means by which this Note was created. Has different formats depending on type.
          properties:
            summary:
              type: string
              description: A string describing the source of the Note.
              readOnly: true
            id:
              type: string
              readOnly: true
            type:
              type: string
              description: A string that determines the schema of the object
              readOnly: true
            self:
              type: string
              format: url
              description: The API show URL at which the object is accessible
              readOnly: true
            html_url:
              type: string
              format: url
              description: a URL at which the entity is uniquely displayed in the Web app
              readOnly: true
          required:
            - summary
        content:
          type: string
          description: The note content
        created_at:
          type: string
          format: date-time
          description: The time at which the note was submitted
          readOnly: true
      required:
        - content
      example:
        content: Firefighters are on the scene.
    RelatedIncidentMachineLearningRelationship:
      type: object
      description: |
        The data for a type of relationship where the Incident is related due to our machine learning algorithm.
      properties:
        grouping_classification:
          type: string
          description: |
            The classification for why this Related Incident was grouped into this group.
            Values can be one of: [similar_contents, prior_feedback], where:
            similar_contents - The Related Incident was due to similar contents of the Incidents.
            prior_feedback - The Related Incident was determined to be related, based on User feedback or Incident merge/unmerge actions.
          enum:
            - similar_contents
            - prior_feedback
        user_feedback:
          type: object
          description: The feedback provided from Users to influence the machine learning algorithm for future Related Incidents.
          properties:
            positive_feedback_count:
              type: integer
              description: The total number of times Users agreed that the Incidents are related.
            negative_feedback_count:
              type: integer
              description: The total number of times Users disagreed that the Incidents are related.
    RelatedIncidentServiceDependencyRelationship:
      type: object
      description: |
        The data for a type of relationship where the Incident is related due to Business or Technical Service dependencies.

        Both `dependent_services` and `supporting_services` are returned to signify the dependencies between the Services
        that the Incident and Related Incident belong to.

        Each Service reference returned in the list of supporting and dependent Services has a type of:
        [business_service_reference, technical_service_reference].
      properties:
        dependent_services:
          type: array
          items:
            $ref: '#/components/schemas/RelatedIncidentServiceDependencyBase'
        supporting_services:
          type: array
          items:
            $ref: '#/components/schemas/RelatedIncidentServiceDependencyBase'
    RelatedIncidentServiceDependencyBase:
      type: object
      properties:
        id:
          type: string
          description: The ID of the Service referenced.
          readOnly: true
        type:
          type: string
          description: The type of the related Service.
          enum:
            - business_service_reference
            - technical_service_reference
        self:
          type: string
          nullable: true
          readOnly: true
          format: url
          description: The API show URL at which the object is accessible.
    StatusUpdate:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
          description: The message of the status update.
        created_at:
          type: string
          description: The date/time when this status update was created.
        sender:
          $ref: '#/components/schemas/UserReference'
        subject:
          type: string
          description: The subject of the custom html email status update. Present if included in request body.
        html_message:
          type: string
          description: The html content of the custom html email status update. Present if included in request body.
    NotificationSubscriberWithContext:
      title: NotificationSubscriberWithContext
      description: A reference of a subscriber entity with additional subscription context.
      type: object
      example:
        subscriber_id: PD1234
        subscriber_type: user
      properties:
        subscriber_id:
          type: string
          description: The ID of the entity being subscribed
        subscriber_type:
          type: string
          description: The type of the entity being subscribed
          enum:
            - user
            - team
        has_indirect_subscription:
          type: boolean
          description: If this subcriber has an indirect subscription to this incident via another object
        subscribed_via:
          nullable: true
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The id of the object this subscriber is subscribed via
              name:
                type: string
                description: The type of the object this subscriber is subscribed via
    NotificationSubscriptionWithContext:
      title: NotificationSubscriptionWithContext
      type: object
      description: An object describing the relationship of a NotificationSubscriber and a NotificationSubscribable with additional context on status of subscription attempt.
      x-examples:
        example-1:
          subscriber_id: string
          subscriber_type: user
          subscribable_id: string
          subscribable_type: incident
          account_id: string
          result: success
      properties:
        subscriber_id:
          type: string
          description: The ID of the entity being subscribed
        subscriber_type:
          type: string
          enum:
            - user
            - team
          description: The type of the entity being subscribed
        subscribable_id:
          type: string
          description: The ID of the entity being subscribed to
        subscribable_type:
          type: string
          enum:
            - incident
            - business_service
          description: The type of the entity being subscribed to
        account_id:
          type: string
          description: The type of the entity being subscribed to
        result:
          type: string
          enum:
            - success
            - duplicate
            - unauthorized
          description: The resulting status of the subscription
    NotificationSubscriber:
      title: NotificationSubscriber
      description: A reference of a subscriber entity.
      type: object
      properties:
        subscriber_id:
          type: string
          description: The ID of the entity being subscribed
        subscriber_type:
          type: string
          description: The type of the entity being subscribed
          enum:
            - user
            - team
      example:
        subscriber_id: PD1234
        subscriber_type: user
  parameters:
    header_Accept:
      name: Accept
      description: The `Accept` header is used as a versioning header.
      in: header
      required: true
      schema:
        type: string
        default: application/vnd.pagerduty+json;version=2
    header_Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        default: application/json
        enum:
          - application/json
    audit_since:
      name: since
      in: query
      description: 'The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)'
      schema:
        type: string
        format: date-time
    audit_until:
      name: until
      in: query
      description: 'The end of the date range over which you want to search. If not specified, defaults to `now()`. May not be more than 31 days after `since`.'
      schema:
        type: string
        format: date-time
    audit_root_resource_types:
      name: 'root_resource_types[]'
      in: query
      description: Resource type filter for the root_resource.
      schema:
        type: string
        enum:
          - users
          - teams
          - schedules
          - escalation_policies
          - services
        example: users
    audit_actor_type:
      name: actor_type
      in: query
      description: Actor type filter.
      schema:
        type: string
        example: user_reference
    audit_actor_id:
      name: actor_id
      in: query
      description: Actor Id filter. Must be qualified by providing the `actor_type` param.
      schema:
        type: string
        example: P123456
    audit_method_type:
      name: method_type
      in: query
      description: Method type filter.
      schema:
        type: string
        description: |
          Describes the method used to perform the action:

          `browser` -- authenticated user session. Session value is not returned in the `truncated_token` field.

          `oauth` -- access token obtained via the OAuth flow. Truncated token value is returned in the `truncated_token` field.

          `api_token` -- Pagerduty API token. Truncated token value is returned in the `truncated_token` field.

          `identity_provider` -- action performed by an Identity provider on behalf of a user. No value is returned in the `truncated_token` field.

          `other` -- Method that does not fall in the predefined categories. Truncated token value MAY be returned in the `truncated_token` field.
        enum:
          - browser
          - oauth
          - api_token
          - identity_provider
          - other
    audit_method_truncated_token:
      name: method_truncated_token
      in: query
      description: Method truncated_token filter. Must be qualified by providing the `method_type` param.
      schema:
        type: string
        example: 3xyz
    audit_actions:
      name: 'actions[]'
      in: query
      description: Action filter
      schema:
        type: string
        description: |
          The action executed on the aggregate
        enum:
          - create
          - update
          - delete
    offset_limit:
      name: limit
      in: query
      required: false
      description: The number of results per page.
      schema:
        type: integer
    offset_offset:
      name: offset
      in: query
      required: false
      description: Offset to start pagination search results.
      schema:
        type: integer
    offset_total:
      name: total
      in: query
      required: false
      description: |
        By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.

        See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.
      schema:
        default: false
        type: boolean
    automation_actions_name:
      name: name
      description: Filters results to include the ones matching the name (case insensitive substring matching)
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_runners_include:
      name: 'include[]'
      in: query
      required: false
      description: Includes additional data elements into the response
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - associated_actions
          example: associated_actions
        uniqueItems: true
    automation_actions_runner_id:
      name: runner_id
      description: |
        Filters results to include the ones linked to the specified runner.
        Specifying the value `any` filters results to include the ones linked to runners only,
        thus omitting the results not linked to runners.
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_classification:
      name: classification
      description: Filters results to include the ones matching the specified classification (aka category)
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AutomationActionsActionClassificationEnum'
    automation_actions_action_type:
      name: action_type
      description: Filters results to include the ones matching the specified action type
      in: query
      required: false
      schema:
        type: string
        enum:
          - script
          - process_automation
        example: process_automation
    automation_actions_team_id:
      name: team_id
      description: Filters results to include the ones associated with the specified team.
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_service_id:
      name: service_id
      description: Filters results to include the ones associated with the specified service
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_invocation_state:
      name: invocation_state
      description: Invocation state
      in: query
      schema:
        type: string
        description: 'prepared -- the invocation exists and can be referenced, but is NOT available to a Runner <br> created -- the invocation exists and is waiting for a Runner <br> sent -- invocation sent to a Runner <br> queued -- invocation queued by a Runner <br> running -- invocation is being ran by a Runner <br> aborted -- invocation was aborted on a Runner <br> completed -- invocation completed on a Runner <br> error -- invocation encountered an error on a Runner'
        enum:
          - prepared
          - created
          - sent
          - queued
          - running
          - aborted
          - completed
          - error
        example: sent
    automation_actions_incident_id:
      name: incident_id
      description: Incident ID
      in: query
      required: true
      schema:
        type: string
        example: Q2LAR4ADCXC8IB
    past_incidents_limit:
      name: limit
      in: query
      required: false
      description: The number of results to be returned in the response.
      schema:
        type: integer
        default: 5
        minimum: 1
        maximum: 999
    past_incidents_total:
      name: total
      in: query
      required: false
      description: |
        By default the `total` field in the response body is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated with the total number of Past Incidents.
      schema:
        type: boolean
        default: false
    cursor_limit:
      name: limit
      in: query
      required: false
      description: The minimum of the `limit` parameter used in the request or the maximum request size of the API.
      schema:
        type: integer
    cursor_cursor:
      name: cursor
      in: query
      required: false
      description: |
        Optional parameter used to request the "next" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.
      schema:
        type: string
    early_access_analytics:
      schema:
        type: string
        default: analytics-v2
        enum:
          - analytics-v2
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!
      name: X-EARLY-ACCESS
      required: true
    early_access_status-update-notification-rules:
      name: X-EARLY-ACCESS
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!
      required: true
      schema:
        type: string
        default: status-update-notification-rules
        enum:
          - status-update-notification-rules
    early_access_bis:
      schema:
        type: string
        default: business-impact-early-access
      in: header
      name: X-EARLY-ACCESS
      description: 'This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!'
      required: true
    early_access_status_dashboards:
      schema:
        type: string
        default: status-dashboards
      in: header
      name: X-EARLY-ACCESS
      description: 'This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!'
      required: true
    webhooks_filter_type:
      name: filter_type
      in: query
      required: false
      description: The type of resource to filter upon.
      schema:
        enum:
          - service
          - team
        type: string
    webhooks_filter_id:
      name: filter_id
      in: query
      required: false
      description: The id of the resource to filter upon.
      schema:
        type: string
    id:
      name: id
      description: The ID of the resource.
      in: path
      required: true
      schema:
        type: string
    ids:
      name: 'ids[]'
      description: The IDs of the resources.
      in: query
      explode: true
      schema:
        type: string
    entity_type:
      name: entity_type
      in: path
      description: Type of entity related with the tag
      required: true
      schema:
        type: string
        enum:
          - users
          - teams
          - escalation_policies
    business_service_id:
      name: business_service_id
      in: path
      description: The business service ID.
      required: true
      schema:
        type: string
    team_id:
      name: team_id
      in: path
      description: The team ID
      required: true
      schema:
        type: string
    team_user_id:
      name: user_id
      in: path
      description: The user ID on the team.
      required: true
      schema:
        type: string
    team_escalation_policy_id:
      name: escalation_policy_id
      in: path
      description: The escalation policy ID on the team.
      required: true
      schema:
        type: string
    escalation_policy_escalation_rule_id:
      name: escalation_rule_id
      in: path
      description: The escalation rule ID on the escalation policy.
      required: true
      schema:
        type: string
    impacts_additional_fields:
      name: 'additional_fields[]'
      in: query
      description: Provides access to additional fields such as highest priority per business service and total impacted count
      explode: true
      schema:
        type: string
        enum:
          - services.highest_impacting_priority
          - total_impacted_count
    include_addon:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - services
        uniqueItems: true
    include_escalation_policy:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - services
          - teams
          - targets
        uniqueItems: true
    include_log_entry:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - incidents
          - services
          - channels
          - teams
        uniqueItems: true
    include_user:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - contact_methods
          - notification_rules
          - teams
          - subdomains
        uniqueItems: true
    include_maintenance_window:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - teams
          - services
          - users
        uniqueItems: true
    include_teams:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - privileges
        uniqueItems: true
    include_teams_members:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - users
        uniqueItems: true
    include_triggers:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - triggers
        uniqueItems: true
    sort_by_escalation_policy:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
        default: name
    sort_by_service:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
        default: name
    schedule_overflow:
      name: overflow
      in: query
      description: |
        Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow=true` is passed. This parameter defaults to false.
        For instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:


        - If you don't pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.
        - If you do pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.
      schema:
        type: boolean
        default: false
    schedule_override_id:
      name: override_id
      in: path
      description: The override ID on the schedule.
      required: true
      schema:
        type: string
    team_ids:
      name: 'team_ids[]'
      in: query
      description: An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    time_zone:
      name: time_zone
      in: query
      description: Time zone in which dates in the result will be rendered.
      schema:
        type: string
        format: tzinfo
        default: UTC
    service_id:
      name: service_id
      in: path
      description: The service ID
      required: true
      schema:
        type: string
    services:
      name: 'service_ids[]'
      in: query
      description: An array of service IDs. Only results related to these services will be returned.
      explode: true
      schema:
        type: array
        items:
          type: string
    integration_id:
      name: integration_id
      in: path
      description: The integration ID on the service.
      required: true
      schema:
        type: string
    integration_ids:
      name: 'integration_ids[]'
      in: query
      description: An array of integration IDs. Only results related to these integrations will be returned.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    log_entry_is_overview:
      name: is_overview
      in: query
      description: 'If `true`, will return a subset of log entries that show only the most important changes to the incident.'
      required: false
      schema:
        type: boolean
        default: false
    since:
      name: since
      in: query
      description: The start of the date range over which you want to search.
      schema:
        type: string
        format: date-time
    until:
      name: until
      in: query
      description: The end of the date range over which you want to search.
      schema:
        type: string
        format: date-time
    url_slug:
      name: url_slug
      in: path
      description: The `url_slug` for a status dashboard
      required: true
      schema:
        type: string
    date_range:
      name: date_range
      in: query
      description: 'When set to all, the since and until parameters and defaults are ignored.'
      schema:
        type: string
        enum:
          - all
    incident_key:
      name: incident_key
      in: query
      description: Incident de-duplication key. Incidents with child alerts do not have an incident key; querying by incident key will return incidents whose alerts have alert_key matching the given incident key.
      schema:
        type: string
    incident_services:
      name: 'service_ids[]'
      in: query
      description: Returns only the incidents associated with the passed service(s). This expects one or more service IDs.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    incident_assigned_to_user:
      name: 'user_ids[]'
      in: query
      description: 'Returns only the incidents currently assigned to the passed user(s). This expects one or more user IDs. Note: When using the assigned_to_user filter, you will only receive incidents with statuses of triggered or acknowledged. This is because resolved incidents are not assigned to any user.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    incident_urgencies:
      name: 'urgencies[]'
      in: query
      description: Array of the urgencies of the incidents to be returned. Defaults to all urgencies. Account must have the `urgencies` ability to do this.
      explode: true
      schema:
        type: string
        enum:
          - high
          - low
        uniqueItems: true
    from_header:
      name: From
      in: header
      description: The email address of a valid user associated with the account making the request.
      required: true
      schema:
        type: string
        format: email
    optional_from_header:
      name: From
      in: header
      description: 'The email address of a valid user associated with the account making the request. This is optional, and is only used for change tracking.'
      required: false
      schema:
        type: string
        format: email
    user_contact_method_id:
      name: contact_method_id
      in: path
      description: The contact method ID on the user.
      required: true
      schema:
        type: string
    user_notification_rule_id:
      name: notification_rule_id
      in: path
      description: The notification rule ID on the user.
      required: true
      schema:
        type: string
    user_status_update_notification_rule_id:
      name: status_update_notification_rule_id
      in: path
      description: The status update notification rule ID on the user.
      required: true
      schema:
        type: string
    oncall_handoff_notification_rule_id:
      name: oncall_handoff_notification_rule_id
      in: path
      description: The oncall handoff notification rule ID on the user.
      required: true
      schema:
        type: string
    session_id:
      name: session_id
      in: path
      description: The session ID for the user.
      required: true
      schema:
        type: string
    type:
      name: type
      in: path
      description: The session type for the user session ID.
      required: true
      schema:
        type: string
    alert_key:
      name: alert_key
      in: query
      description: Alert de-duplication key.
      schema:
        type: string
    response_play_id:
      name: response_play_id
      in: path
      description: The response play ID of the response play associated with the request.
      required: true
      schema:
        type: string
    query:
      name: query
      in: query
      description: 'Filters the result, showing only the records whose name matches the query.'
      required: false
      schema:
        type: string
    tag_query:
      name: query
      in: query
      description: 'Filters the result, showing only the tags whose label matches the query.'
      required: false
      schema:
        type: string
    addon_services:
      name: 'service_ids[]'
      in: query
      description: 'Filters the results, showing only Add-ons for the given services'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    addon_filter:
      name: filter
      in: query
      description: 'Filters the results, showing only Add-ons of the given type'
      schema:
        type: string
        enum:
          - full_page_addon
          - incident_show_addon
    change_since:
      name: since
      in: query
      description: 'The start of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.'
      schema:
        type: string
        format: date-time
        pattern: 'YYYY-MM-DDThh:mm:ssZ'
    change_until:
      name: until
      in: query
      description: 'The end of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.'
      schema:
        type: string
        format: date-time
        pattern: 'YYYY-MM-DDThh:mm:ssZ'
    user_ids_escalation_policies:
      name: 'user_ids[]'
      in: query
      description: 'Filters the results, showing only escalation policies on which any of the users is a target.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    extension_object_id:
      name: extension_object_id
      description: The id of the extension object you want to filter by.
      in: query
      schema:
        type: string
    extension_schema_id:
      name: extension_schema_id
      in: query
      description: Filter the extensions by extension vendor id.
      schema:
        type: string
    include_extensions:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - extension_objects
          - extension_schemas
        uniqueItems: true
    include_extensions_id:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - extension_schemas
          - extension_objects
          - temporarily_disabled
        uniqueItems: true
    include_incident_workflow_children:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - steps
          - team
        uniqueItems: true
    statuses_incidents:
      name: 'statuses[]'
      in: query
      description: 'Return only incidents with the given statuses. To query multiple statuses, pass `statuses[]` more than once, for example: `https://api.pagerduty.com/incidents?statuses[]=triggered&statuses[]=acknowledged`. (More status codes may be introduced in the future.)'
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - acknowledged
          - resolved
        uniqueItems: true
    sort_by_incidents:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (incident_number/created_at/resolved_at/urgency), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending. The account must have the `urgencies` ability to sort by the urgency.'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        maxItems: 2
        uniqueItems: true
    include_incidents:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - users
          - services
          - first_trigger_log_entries
          - escalation_policies
          - teams
          - assignees
          - acknowledgers
          - priorities
          - conference_bridge
        uniqueItems: true
    include_incident:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - field_values
        uniqueItems: true
    since_incidents:
      schema:
        type: string
      in: query
      name: since
      description: The start of the date range over which you want to search. Maximum range is 6 months and default is 1 month.
    until_incidents:
      schema:
        type: string
      in: query
      name: until
      description: The end of the date range over which you want to search. Maximum range is 6 months and default is 1 month.
    statuses_incident_alerts:
      name: 'statuses[]'
      in: query
      description: Return only alerts with the given statuses. (More status codes may be introduced in the future.)
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - resolved
        uniqueItems: true
    sort_by_incident_alerts:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (created_at/resolved_at), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending.'
      style: form
      explode: false
      schema:
        type: string
        enum:
          - created_at
          - resolved_at
          - 'created_at:asc'
          - 'created_at:desc'
          - 'resolved_at:asc'
          - 'resolved_at:desc'
        maxItems: 2
        uniqueItems: true
    include_incident_alerts:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - services
          - first_trigger_log_entries
          - incidents
        uniqueItems: true
    alert_id:
      name: alert_id
      in: path
      description: The id of the alert to retrieve.
      required: true
      schema:
        type: string
    statuses_incident_count:
      name: 'statuses[]'
      in: query
      description: 'Count only incidents with the requested statuses. `all` returns all statuses. If `any` is specified, there will be an additional `any` boolean field in the response that is true if there are any incidents matching the criteria in the request. If no statuses are provided, then only the total count of incidents is returned regardless of status. More status codes may be introduced in the future.'
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - acknowledged
          - resolved
          - any
          - all
        uniqueItems: true
    filter_maintenance_windows:
      name: filter
      in: query
      description: Only return maintenance windows in a given state.
      schema:
        type: string
        enum:
          - past
          - future
          - ongoing
          - open
          - all
    since_notifications:
      name: since
      in: query
      description: The start of the date range over which you want to search. The time element is optional.
      required: true
      schema:
        type: string
        format: date-time
    until_notifications:
      name: until
      in: query
      description: The end of the date range over which you want to search. This should be in the same format as since. The size of the date range must be less than 3 months.
      required: true
      schema:
        type: string
        format: date-time
    filter_notifications:
      name: filter
      in: query
      description: Return notification of this type only.
      schema:
        type: string
        enum:
          - sms_notification
          - email_notification
          - phone_notification
          - push_notification
    include_notifications:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - users
        uniqueItems: true
    include_oncalls:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - users
          - schedules
        uniqueItems: true
    user_ids_oncalls:
      name: 'user_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified user IDs.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    escalation_policy_ids_oncalls:
      name: 'escalation_policy_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified escalation policy IDs.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    schedule_ids_oncalls:
      name: 'schedule_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified schedule IDs. If `null` is provided in the array, it includes permanent on-calls due to direct user escalation targets.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    since_oncalls:
      name: since
      in: query
      description: 'The start of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. On-call shifts are limited to 90 days in the future.'
      schema:
        type: string
        format: date-time
    until_oncalls:
      name: until
      in: query
      description: 'The end of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. On-call shifts are limited to 90 days in the future, and the `until` time cannot be before the `since` time.'
      schema:
        type: string
        format: date-time
    earliest_oncalls:
      name: earliest
      in: query
      description: 'This will filter on-calls such that only the earliest on-call for each combination of escalation policy, escalation level, and user is returned. This is useful for determining when the "next" on-calls are for a given set of filters.'
      schema:
        type: boolean
    filter_for_manual_run:
      name: filter_for_manual_run
      in: query
      description: 'When this parameter is present, only those Response Plays that can be run manually will be returned.'
      schema:
        type: boolean
    rule_id:
      name: rule_id
      in: path
      description: The id of the Event Rule to retrieve.
      required: true
      schema:
        type: string
    since_schedules:
      name: since
      in: query
      description: The start of the date range over which you want to search.
      required: true
      schema:
        type: string
        format: date-time
    until_schedules:
      name: until
      in: query
      description: The end of the date range over which you want to search.
      required: true
      schema:
        type: string
        format: date-time
    editable_schedules:
      name: editable
      in: query
      description: 'When this parameter is present, only editable overrides will be returned. The result will only include the id of the override if this parameter is present. Only future overrides are editable.'
      schema:
        type: boolean
    overflow_schedules:
      name: overflow
      in: query
      description: 'Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter overflow=true is passed. This parameter defaults to false.'
      schema:
        type: boolean
    include_services:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - teams
          - integrations
          - auto_pause_notifications_parameters
        uniqueItems: true
    include_services_id:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - teams
          - auto_pause_notifications_parameters
          - integrations
        uniqueItems: true
    include_services_integrations:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - services
          - vendors
        uniqueItems: true
    reassignment_team:
      name: reassignment_team
      in: query
      description: |
        Team to reassign unresolved incident to.
        If an unresolved incident exists on both the reassignment team and
        the team being deleted, a duplicate will not be made. If not supplied,
        unresolved incidents will be made account-level.
      required: false
      schema:
        type: string
    include_notification_rules:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - contact_methods
        uniqueItems: true
    additional_details:
      name: 'additional_details[]'
      in: query
      description: Array of additional attributes to any of the returned incidents for related incidents.
      explode: true
      schema:
        type: string
        enum:
          - incident
        uniqueItems: true
    include_schedules:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - schedule_layers
        uniqueItems: true
    sort_by_event_orchestration:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - 'name:asc'
          - 'name:desc'
          - 'routes:asc'
          - 'routes:desc'
          - 'created_at:asc'
          - 'created_at:desc'
        default: 'name:asc'
    event_orchestration_id:
      name: id
      description: The ID of an Event Orchestration.
      in: path
      required: true
      schema:
        type: string
    event_orchestration_integration_id:
      name: integration_id
      description: The ID of an Integration.
      in: path
      required: true
      schema:
        type: string
    urgency:
      name: urgency
      in: query
      description: 'The incident urgency for which the notification rules are applied. If not specified, defaults to `high`.'
      explode: true
      schema:
        type: string
        enum:
          - high
          - low
          - all
        uniqueItems: true
    template_query:
      name: query
      description: Template name or description to search
      in: query
      schema:
        type: string
    template_type:
      name: template_type
      description: Filters templates by type.
      in: query
      schema:
        type: string
        default: status_update
    sort_by_template:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (name/created_at), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. Sort direction defaults to ascending.'
      style: form
      explode: false
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
          - created_at
          - 'created_at:asc'
          - 'created_at:desc'
        default: 'created_at:asc'
    schedule_since:
      name: since
      in: query
      description: The start of the date range over which you want to show schedule entries. Defaults to 2 weeks before until if an until is given.
      schema:
        type: string
        format: date-time
    schedule_until:
      name: until
      in: query
      description: The end of the date range over which you want to show schedule entries. Defaults to 2 weeks after since if a since is given.
      schema:
        type: string
        format: date-time
    paused_incident_reports_service_id:
      name: service_id
      in: query
      description: Specifies a filter to limit the scope of reporting to a particular service
      schema:
        type: string
        example: P123456
    paused_incident_reports_suspended_by:
      name: suspended_by
      in: query
      description: Specifies a filter to scope the response to either alerts suspended by Auto Pause or Event Rules.
      schema:
        enum:
          - auto_pause
          - rules
    triggers_filter_workflow_id:
      name: workflow_id
      description: 'If provided, only show triggers configured to start the given workflow. Useful for listing all services associated with the given workflow'
      in: query
      schema:
        type: string
        example: P4RG7YW
    triggers_filter_incident_id:
      name: incident_id
      description: 'If provided, only show triggers configured on the service of the given incident. Useful for finding manual triggers that are configured on the service for a specific incident. Cannot be specified if `service_id` is provided.'
      in: query
      schema:
        type: string
        example: Q2LAR4ADCXC8IB
    triggers_filter_service_id:
      name: service_id
      description: 'If provided, only show triggers configured for incidents in the given service. Useful for listing all workflows associated with the given service. Cannot be specified if `incident_id` is provided.'
      in: query
      schema:
        type: string
        example: P4RG7YW
    triggers_filter_trigger_type:
      name: trigger_type
      description: 'If provided, only show triggers of the given type. For example “manual” to search for manual triggers'
      in: query
      schema:
        type: string
        enum:
          - manual
          - conditional
    triggers_path_trigger_id:
      name: trigger_id
      description: Identifier for the Trigger
      required: true
      in: path
      schema:
        type: string
    triggers_path_service_id:
      name: service_id
      description: Identifier for the Service
      required: true
      in: path
      schema:
        type: string
    triggers_sort_by:
      name: sort_by
      description: 'If provided, returns triggers sorted by the specified property.'
      in: query
      schema:
        type: string
        enum:
          - workflow_id
          - workflow_id asc
          - workflow_id desc
          - workflow_name
          - workflow_name asc
          - workflow_name desc
    actions_filter_keyword:
      name: keyword
      description: 'If provided, only show actions tagged with the specified keyword'
      in: query
      schema:
        type: string
        example: slack
    include_customfields_field:
      name: 'include[]'
      description: Array of additional details to include.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_options
        uniqueItems: true
    include_customfields_schema:
      name: 'include[]'
      description: Array of additional details to include. Including `field_configurations` will also include full field details.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_configurations
        uniqueItems: true
    include_customfields_field_configuration:
      name: 'include[]'
      description: Array of additional details to include.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - fields
        uniqueItems: true
    include_customfields_incident_schema:
      name: 'include[]'
      description: Array of additional details to include. Including `field_options` will also include field options.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_options
        uniqueItems: true
    field_id:
      name: field_id
      description: The ID of the field.
      in: path
      required: true
      schema:
        type: string
    field_option_id:
      name: field_option_id
      description: The ID of the field option.
      in: path
      required: true
      schema:
        type: string
    schema_id:
      name: schema_id
      description: The ID of the schema.
      in: path
      required: true
      schema:
        type: string
    field_configuration_id:
      name: field_configuration_id
      description: The ID of the field configuration.
      in: path
      required: true
      schema:
        type: string
    customfields_query_schema_assignments_filter:
      name: filter
      description: One of service_id or schema_id is required.
      in: query
      required: true
      explode: true
      schema:
        type: object
        properties:
          service_id:
            type: string
          schema_id:
            type: string
        minProperties: 1
        maxProperties: 1
    early_access_customfields:
      name: X-EARLY-ACCESS
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!
      required: true
      schema:
        type: string
        default: flex-service-early-access
        enum:
          - flex-service-early-access
  responses:
    ArgumentError:
      description: Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    Unauthorized:
      description: |
        Caller did not supply credentials or did not provide the correct credentials.
        If you are using an API key, it may be invalid or your Authorization header may be malformed.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    PaymentRequired:
      description: |
        Account does not have the abilities to perform the action. Please review the response for the required abilities.
        You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    Forbidden:
      description: |
        Caller is not authorized to view the requested resource.
        While your authentication is valid, the authenticated user or token does not have permission to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    TooManyRequests:
      description: 'Too many requests have been made, the rate limit has been reached.'
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    Conflict:
      description: The request conflicts with the current state of the server.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                    readOnly: true
                  message:
                    type: string
                    readOnly: true
                    description: Error message string
                  errors:
                    type: array
                    readOnly: true
                    items:
                      type: string
                      readOnly: true
                      description: Human-readable error details
                example:
                  message: Not Found
                  code: 2100
    RequestEntityTooLarge:
      description: Caller provided a request that is too large to process.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    NotFound:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    UnprocessableEntity:
      description: Unprocessable Entity. Some arguments failed validation checks.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    InternalServerError:
      description: Internal Server Error the PagerDuty server experienced an error.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
      description: The API Key with format `Token token=<API_KEY>`
  examples:
    AuditRecordResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORDID1_TEAM_CREATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 3usr
            root_resource:
              id: PXASDFE
              type: team_reference
              summary: my DevOps team
            action: create
            details:
              resource:
                id: PXASDFE
                type: team_reference
                summary: my DevOps team
              fields:
                - name: teamName
                  value: DevOps team
          - id: PDRECORDID2_USER_REMOVED_FROM_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PRY9M8B
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PRY9M8B
                type: team_reference
                summary: DevOps
              references:
                - name: members
                  removed:
                    - id: PRY9M8B
                      type: user_reference
                      summary: John Doe
          - id: PDRECORDID5_USERS_TEAM_ROLE_UPDATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PRY9M8B
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PDUSER
                type: user_reference
                summary: John Snow
              fields:
                - name: team_role
                  before_value: observer
                  value: manager
          - id: PDRECORDID3_USERS_NAME_AND_EMAIL_UPDATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: identity_provider
            root_resource:
              id: PDUSER
              type: user_reference
              summary: John Snow
            action: update
            details:
              resource:
                id: PDUSER
                type: user_reference
                summary: John Snow
              fields:
                - name: name
                  before_value: Bob Doe
                  value: Jon Snow
                - name: email
                  before_value: bob.doe@domain.com
                  value: john.snow@domain.com
          - id: PDRECORDID4_UPDATED_USERS_NOTIFICATION_RULE
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PDUSER
              type: user_reference
              summary: John Snow
            action: update
            details:
              resource:
                id: PXOGWUS
                type: assignment_notification_rule_reference
                summary: '0 minutes: channel P1IAAPZ'
              fields:
                - name: start_delay_in_minutes
                  before_value: '0'
                  value: '2'
              references:
                - name: contact_method
                  removed:
                    - id: POE6L88
                      type: push_notification_contact_method_reference
                      summary: Pixel 3
                  added:
                    - id: P4GTUMK
                      type: sms_contact_method_reference
                      summary: Mobile
        next_cursor: null
        limit: 10
    AuditRecordEscalationPolicyResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ASSIGN_TEAM_TO_ESCALATION_POLICY
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_TEAM123
                      summary: Devops
                      type: team_reference
                      self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                      html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
                  name: teams
              resource:
                id: PD_ESCALATION_ID
                summary: DevOps Escalation
                type: escalation_policy_reference
                self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
                html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
            execution_context:
              request_id: 0cc413fb-8e7d-4414-b4bc-b7578bf3ba77
            execution_time: '2021-01-05T16:33:52.026Z'
            method:
              type: browser
            root_resource:
              id: PD_ESCALATION_ID
              summary: DevOps Escalation
              type: escalation_policy_reference
              self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
              html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
          - id: PD_CREATE_ESCALATION_POLICY
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: DevOps Escalation
                - name: description
                  value: Escalation Policy for devops
                - name: num_loops
                  value: '1'
              resource:
                id: PD_ESCALATION_ID
                summary: DevOps Escalation
                type: escalation_policy_reference
                self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
                html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
            execution_context:
              request_id: 0cc413fb-8e7d-4414-b4bc-b7578bf3ba77
            execution_time: '2021-01-05T16:33:51.951Z'
            method:
              type: browser
            root_resource:
              id: PD_ESCALATION_ID
              summary: DevOps Escalation
              type: escalation_policy_reference
              self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
              html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
        limit: 10
        next_cursor: null
    AuditRecordScheduleResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ASSIGN_TEAM_TO_SCHEDULE
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_TEAM123
                      summary: Devops
                      type: team_reference
                      self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                      html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
                  name: teams
              resource:
                id: PD_SCHEDULE_ID
                summary: DevOps Schedule
                type: schedule_reference
                self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
                html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
            execution_context:
              request_id: 13a1c0c3-545c-4ebb-4115-662fff9d8ad
            execution_time: '2021-01-05T16:25:41.324Z'
            method:
              type: browser
            root_resource:
              id: PD_SCHEDULE_ID
              summary: DevOps Schedule
              type: schedule_reference
              self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
              html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
          - id: PD_CREATE_SCHEDULE
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: DevOps Schedule
                - name: description
                  value: Our DevOps Team Schedule
                - name: time_zone
                  value: America/New_York
              resource:
                id: PD_SCHEDULE_ID
                summary: DevOps Schedule
                type: schedule_reference
                self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
                html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
            execution_context:
              request_id: 13a1c0c3-545c-4ebb-4115-662fff9d8ad
            execution_time: '2021-01-05T16:25:41.315Z'
            method:
              type: browser
            root_resource:
              id: PD_SCHEDULE_ID
              summary: DevOps Schedule
              type: schedule_reference
              self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
              html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
        limit: 10
        next_cursor: null
    AuditRecordServiceResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORDID1_SERVICE_CREATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 3usr
            root_resource:
              id: PN2YA40
              type: service_reference
              summary: Documentation Hub
            action: create
            details:
              resource:
                id: PD_SERVICE_ID
                type: service_reference
                summary: Documentation Hub
              fields:
                - name: name
                  value: Documentation Hub
                - name: description
                  value: Centralized documentation
                - name: incident_severity
                  value: always_high
                - name: alert_creation
                  value: create_alerts_and_incidents
                - name: auto_resolve_timeout
                  value: ''
                - name: acknowledgement_timeout
                  value: ''
                - name: alert_grouping
                  value: null
                - name: alert_grouping_timeout
                  value: ''
              references:
                - name: escalation_policy
                  added:
                    - id: PD_SERVICE_ID
                      summary: Default
                      type: escalation_policy_reference
        next_cursor: null
        limit: 10
    AuditRecordTeamResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORD_USER_ROLE_ON_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: my DevOps team
              self: 'https://api.pagerduty.com/teams/PD_TEAM123'
              html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
            action: update
            details:
              resource:
                id: PD_ADMIN_USER123
                type: user_reference
                summary: AA Admin User
                self: 'https://api.pagerduty.com/users/PD_ADMIN_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_ADMIN_USER123'
              fields:
                - name: members.role
                  value: manager
          - id: PDRECORD_USER_ADDED_TO_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PD_TEAM123
                type: team_reference
                summary: DevOps
              references:
                - name: members
                  added:
                    - id: PD_ADMIN_USER123
                      type: user_reference
                      summary: AA Admin User
                      self: 'https://api.pagerduty.com/users/PD_ADMIN_USER123'
                      html_url: 'https://mydomain.pagerduty.com/users/PD_ADMIN_USER123'
          - id: PDRECORD_TEAM_CREATED
            execution_time: '2020-06-04T15:25:04.113Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: DevOps
              self: 'https://api.pagerduty.com/teams/PD_TEAM123'
              html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
            action: create
            details:
              resource:
                id: PD_TEAM123
                type: team_reference
                summary: DevOps
                self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
              fields:
                - name: name
                  value: DevOps
                - name: description
                  value: MyDevOps Team
                - name: default_role
                  value: manager
        next_cursor: null
        limit: 10
    AuditRecordUserResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ADD_HIGH_URGENCY_NOTIFICATION
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_NOTIFICATION_RULE_HIGH
                      summary: 'High Urgency (Email: Default)'
                      type: assignment_notification_rule_reference
                  name: notification_rules
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.343Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_HIGH_URGENCY_EMAIL_CONTACT
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: start_delay_in_minutes
                  value: '0'
                - name: urgency
                  value: high
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_method
              resource:
                id: PD_NOTIFICATION_RULE_HIGH
                summary: 'High Urgency (Email: Default)'
                type: assignment_notification_rule_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.343Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_LOW_URGENCY_EMAIL_RULE
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: start_delay_in_minutes
                  value: '0'
                - name: urgency
                  value: low
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_method
              resource:
                id: PD_NOTIFICATION_RULE_LOW
                summary: 'Low Urgency (Email: Default)'
                type: assignment_notification_rule_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.335Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_LOW_URGENCY_EMAIL_CONTACT
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_NOTIFICATION_RULE_LOW
                      summary: 'Low Urgency (Email: Default)'
                      type: assignment_notification_rule_reference
                  name: notification_rules
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.335Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_EMAIL_CONTACT_FOR_USER
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: label
                  value: Default
                - name: type
                  value: email_contact_method
                - name: address
                  value: testuser@testabc123.com
              resource:
                id: PD_CONTACT_METHOD
                summary: Default
                type: email_contact_method_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.327Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_EMAIL_CONTACT_TO_USER
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_methods
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.327Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_CREATE_USER
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: Test User
                - name: role
                  value: user
                - name: email
                  value: testuser@testabc123.com
                - name: time_zone
                  value: America/New_York
                - name: description
                  value: null
                - name: job_title
                  value: null
                - name: color
                  value: brown
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:31.708Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
        limit: 10
        next_cursor: null
    OrchestrationPathGlobalTypeResponse:
      summary: Example Response
      value:
        orchestration_path:
          type: global
          parent:
            id: b02e973d-9620-4e0a-9edc-00fedf7d4694
            self: 'https://api.pagerduty.com/event_orchestrations/b02e973d-9620-4e0a-9edc-00fedf7d4694'
            type: event_orchestration_reference
          self: 'https://api.pagerduty.com/event_orchestrations/b02e973d-9620-4e0a-9edc-00fedf7d4694/global'
          sets:
            - id: start
              rules:
                - label: Always apply some consistent event transformations to all events
                  id: c91f72f3
                  conditions: []
                  actions:
                    variables:
                      - name: hostname
                        path: event.component
                        value: 'hostname: (.*)'
                        type: regex
                    extractions:
                      - template: '{{variables.hostname}}'
                        target: event.custom_details.hostname
                      - source: event.source
                        regex: www (.*) service
                        target: event.source
                    route_to: step-two
            - id: step-two
              rules:
                - label: All critical alerts should be treated as P1 incidents
                  id: 7c54529d
                  conditions:
                    - expression: event.severity matches 'critical'
                  actions:
                    priority: P0IN2KQ
                    suppress: false
                - label: Drop all events from the very-noisy monitoring tool
                  id: 1f6d9a33
                  conditions:
                    - expression: event.source matches part 'very-noisy'
                  actions:
                    drop_event: true
                - label: Never bother the on-call for info-level events outside of work hours
                  id: cd770384
                  conditions:
                    - expression: 'event.severity matches ''info'' and not (now in Mon,Tue,Wed,Thu,Fri 09:00:00 to 17:00:00 America/Los_Angeles)'
                  actions:
                    suppress: true
          catch_all:
            actions:
              suppress: true
          created_at: '2021-11-18T16:42:01Z'
          created_by:
            id: P8B9WR8
            self: 'https://api.pagerduty.com/users/P8B9WR8'
            type: user_reference
          updated_at: '2021-11-18T16:42:01Z'
          updated_by:
            id: P8B9WR8
            self: 'https://api.pagerduty.com/users/P8B9WR8'
            type: user_reference
          version: rn1Mja13T1HBdmPChqFilSQXUW2fWXM_
    CreateSubscriptionExample:
      summary: Example
      value:
        webhook_subscription:
          delivery_method:
            type: http_delivery_method
            url: 'https://example.com/receive_a_pagerduty_webhook'
            custom_headers:
              - name: header-name
                value: header-value
          description: Sends PagerDuty v3 webhook events somewhere interesting.
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
          filter:
            id: P393ZNQ
            type: service_reference
          type: webhook_subscription
    GetSubscriptionExample:
      summary: Example
      value:
        webhook_subscription:
          delivery_method:
            id: PF9KMXH
            secret: null
            temporarily_disabled: false
            type: http_delivery_method
            url: 'https://example.com/receive_a_pagerduty_webhook'
            custom_headers:
              - name: your-header-name
                value: '-- redacted --'
          description: Sends PagerDuty v3 webhook events somewhere interesting.
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
          filter:
            id: P393ZNQ
            type: service_reference
          id: PY1OL64
          type: webhook_subscription
          active: true
    ListSubscriptionExample:
      summary: Example
      value:
        webhook_subscriptions:
          - delivery_method:
              id: PF9KMXH
              secret: null
              type: http_delivery_method
              url: 'https://example.com/receive_a_pagerduty_webhook'
              custom_headers:
                - name: your-header-name
                  value: '-- redacted --'
            description: Sends PagerDuty v3 webhook events somewhere interesting.
            events:
              - incident.acknowledged
              - incident.annotated
              - incident.delegated
              - incident.escalated
              - incident.priority_updated
              - incident.reassigned
              - incident.resolved
              - incident.responder.added
              - incident.responder.replied
              - incident.triggered
              - incident.unacknowledged
            filter:
              id: P393ZNQ
              type: service_reference
            id: PY1OL64
            type: webhook_subscription
            active: true
        limit: 25
        offset: 0
        total: null
        more: false
    PutSubscriptionExample:
      summary: Update Subscribed Events
      value:
        webhook_subscription:
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
  x-stackQL-resources:
    incidents:
      id: pagerduty.incidents.incidents
      name: incidents
      title: Incidents
      methods:
        list_incidents:
          operation:
            $ref: '#/paths/~1incidents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incidents:
          operation:
            $ref: '#/paths/~1incidents/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident:
          operation:
            $ref: '#/paths/~1incidents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_incident:
          operation:
            $ref: '#/paths/~1incidents~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident:
          operation:
            $ref: '#/paths/~1incidents~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/incidents/methods/get_incident'
          - $ref: '#/components/x-stackQL-resources/incidents/methods/list_incidents'
        insert:
          - $ref: '#/components/x-stackQL-resources/incidents/methods/create_incident'
        update: []
        delete: []
    alerts:
      id: pagerduty.incidents.alerts
      name: alerts
      title: Alerts
      methods:
        list_incident_alerts:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1alerts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident_alerts:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1alerts/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_incident_alert:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1alerts~1{alert_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident_alert:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1alerts~1{alert_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/get_incident_alert'
          - $ref: '#/components/x-stackQL-resources/alerts/methods/list_incident_alerts'
        insert: []
        update: []
        delete: []
    business_services_impacts:
      id: pagerduty.incidents.business_services_impacts
      name: business_services_impacts
      title: Business Services Impacts
      methods:
        put_incident_manual_business_service_association:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1business_services~1{business_service_id}~1impacts/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_incident_impacted_business_services:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1business_services~1impacts/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/business_services_impacts/methods/get_incident_impacted_business_services'
        insert: []
        update: []
        delete: []
    field_values:
      id: pagerduty.incidents.field_values
      name: field_values
      title: Field Values
      methods:
        get_incident_field_values:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1field_values/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_incident_field_values:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1field_values/put'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/field_values/methods/get_incident_field_values'
        insert: []
        update: []
        delete: []
    field_values_schema:
      id: pagerduty.incidents.field_values_schema
      name: field_values_schema
      title: Field Values Schema
      methods:
        get_schema_for_incident:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1field_values~1schema/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/field_values_schema/methods/get_schema_for_incident'
        insert: []
        update: []
        delete: []
    log_entries:
      id: pagerduty.incidents.log_entries
      name: log_entries
      title: Log Entries
      methods:
        list_incident_log_entries:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1log_entries/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/log_entries/methods/list_incident_log_entries'
        insert: []
        update: []
        delete: []
    merge:
      id: pagerduty.incidents.merge
      name: merge
      title: Merge
      methods:
        merge_incidents:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1merge/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    notes:
      id: pagerduty.incidents.notes
      name: notes
      title: Notes
      methods:
        list_incident_notes:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1notes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident_note:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1notes/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notes/methods/list_incident_notes'
        insert:
          - $ref: '#/components/x-stackQL-resources/notes/methods/create_incident_note'
        update: []
        delete: []
    outlier_incident:
      id: pagerduty.incidents.outlier_incident
      name: outlier_incident
      title: Outlier Incident
      methods:
        get_outlier_incident:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1outlier_incident/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/outlier_incident/methods/get_outlier_incident'
        insert: []
        update: []
        delete: []
    past_incidents:
      id: pagerduty.incidents.past_incidents
      name: past_incidents
      title: Past Incidents
      methods:
        get_past_incidents:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1past_incidents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/past_incidents/methods/get_past_incidents'
        insert: []
        update: []
        delete: []
    related_incidents:
      id: pagerduty.incidents.related_incidents
      name: related_incidents
      title: Related Incidents
      methods:
        get_related_incidents:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1related_incidents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/related_incidents/methods/get_related_incidents'
        insert: []
        update: []
        delete: []
    responder_requests:
      id: pagerduty.incidents.responder_requests
      name: responder_requests
      title: Responder Requests
      methods:
        create_incident_responder_request:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1responder_requests/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/responder_requests/methods/create_incident_responder_request'
        update: []
        delete: []
    snooze:
      id: pagerduty.incidents.snooze
      name: snooze
      title: Snooze
      methods:
        create_incident_snooze:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1snooze/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/snooze/methods/create_incident_snooze'
        update: []
        delete: []
    status_updates:
      id: pagerduty.incidents.status_updates
      name: status_updates
      title: Status Updates
      methods:
        create_incident_status_update:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1status_updates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/status_updates/methods/create_incident_status_update'
        update: []
        delete: []
    status_updates_subscribers:
      id: pagerduty.incidents.status_updates_subscribers
      name: status_updates_subscribers
      title: Status Updates Subscribers
      methods:
        get_incident_notification_subscribers:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1status_updates~1subscribers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident_notification_subscribers:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1status_updates~1subscribers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/status_updates_subscribers/methods/get_incident_notification_subscribers'
        insert:
          - $ref: '#/components/x-stackQL-resources/status_updates_subscribers/methods/create_incident_notification_subscribers'
        update: []
        delete: []
    status_updates_unsubscribe:
      id: pagerduty.incidents.status_updates_unsubscribe
      name: status_updates_unsubscribe
      title: Status Updates Unsubscribe
      methods:
        remove_incident_notification_subscribers:
          operation:
            $ref: '#/paths/~1incidents~1{id}~1status_updates~1unsubscribe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
paths:
  /incidents:
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: listIncidents
      description: |
        List existing incidents.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.read`
      summary: List incidents
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/offset_limit'
        - $ref: '#/components/parameters/offset_offset'
        - $ref: '#/components/parameters/offset_total'
        - $ref: '#/components/parameters/date_range'
        - $ref: '#/components/parameters/incident_key'
        - $ref: '#/components/parameters/incident_services'
        - $ref: '#/components/parameters/team_ids'
        - $ref: '#/components/parameters/incident_assigned_to_user'
        - $ref: '#/components/parameters/incident_urgencies'
        - $ref: '#/components/parameters/time_zone'
        - $ref: '#/components/parameters/statuses_incidents'
        - $ref: '#/components/parameters/sort_by_incidents'
        - $ref: '#/components/parameters/include_incidents'
        - $ref: '#/components/parameters/since_incidents'
        - $ref: '#/components/parameters/until_incidents'
      responses:
        '200':
          description: A paginated array of incidents.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      incidents:
                        type: array
                        items:
                          $ref: '#/components/schemas/Incident'
                    required:
                      - incidents
              examples:
                response:
                  summary: Response Example
                  value:
                    incidents:
                      - id: PT4KHLK
                        type: incident
                        summary: '[#1234] The server is on fire.'
                        self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
                        incident_number: 1234
                        created_at: '2015-10-06T21:30:42Z'
                        status: resolved
                        title: The server is on fire.
                        incident_key: baf7cf21b1da41b4b0221008339ff357
                        service:
                          id: PIJ90N7
                          type: service_reference
                          summary: My Mail Service
                          self: 'https://api.pagerduty.com/services/PIJ90N7'
                          html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                        priority:
                          id: P53ZZH5
                          type: priority_reference
                          summary: P2
                          self: 'https://api.pagerduty.com/priorities/P53ZZH5'
                        assigned_via: escalation_policy
                        assignments: []
                        acknowledgements: []
                        last_status_change_at: '2015-10-06T21:38:23Z'
                        last_status_change_by:
                          id: PXPGF42
                          type: user_reference
                          summary: Earline Greenholt
                          self: 'https://api.pagerduty.com/users/PXPGF42'
                          html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                        first_trigger_log_entry:
                          id: Q02JTSNZWHSEKV
                          type: trigger_log_entry_reference
                          summary: Triggered through the API
                          self: 'https://api.pagerduty.com/log_entries/Q02JTSNZWHSEKV?incident_id=PT4KHLK'
                          html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK/log_entries/Q02JTSNZWHSEKV'
                        escalation_policy:
                          id: PT20YPA
                          type: escalation_policy_reference
                          summary: Another Escalation Policy
                          self: 'https://api.pagerduty.com/escalation_policies/PT20YPA'
                          html_url: 'https://subdomain.pagerduty.com/escalation_policies/PT20YPA'
                        teams:
                          - id: PQ9K7I8
                            type: team_reference
                            summary: Engineering
                            self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                            html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                        urgency: high
                        conference_bridge:
                          conference_number: '+1-415-555-1212,,,,1234#'
                          conference_url: 'https://example.com/acb-123'
                    limit: 1
                    offset: 0
                    more: true
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: incidents.write
      tags:
        - Incidents
      operationId: updateIncidents
      description: |
        Acknowledge, resolve, escalate or reassign one or more incidents.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        A maximum of 250 incidents may be updated at a time. If more than this number of incidents are given, the API will respond with status 413 (Request Entity Too Large).

        Note: the manage incidents API endpoint is rate limited to 500 requests per minute.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Manage incidents
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/offset_limit'
        - $ref: '#/components/parameters/offset_offset'
        - $ref: '#/components/parameters/offset_total'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                incidents:
                  type: array
                  description: 'An array of incidents, including the parameters to update.'
                  items:
                    properties:
                      id:
                        type: string
                        description: The id of the incident to update.
                      type:
                        type: string
                        description: The incident type.
                        enum:
                          - incident
                          - incident_reference
                      status:
                        type: string
                        description: The new status of the incident.
                        enum:
                          - resolved
                          - acknowledged
                      resolution:
                        type: string
                        description: The resolution for this incident if status is set to resolved.
                      title:
                        type: string
                        description: 'A succinct description of the nature, symptoms, cause, or effect of the incident.'
                      priority:
                        $ref: '#/components/schemas/PriorityReference'
                      escalation_level:
                        type: integer
                        description: Escalate the incident to this level in the escalation policy.
                      assignments:
                        type: array
                        description: Assign the incident to these assignees.
                        items:
                          properties:
                            assignee:
                              $ref: '#/components/schemas/UserReference'
                      escalation_policy:
                        $ref: '#/components/schemas/EscalationPolicyReference'
                      conference_bridge:
                        $ref: '#/components/schemas/ConferenceBridge'
                    required:
                      - id
                      - type
              required:
                - incidents
            examples:
              incidents:
                summary: Request Example
                value:
                  incidents:
                    - id: PT4KHLK
                      type: incident_reference
                      status: acknowledged
                    - id: PQMF62U
                      type: incident_reference
                      priority:
                        id: P53ZZH5
                        type: priority_reference
                    - id: PPVZH9X
                      type: incident_reference
                      status: resolved
                    - id: P8JOGX7
                      type: incident_reference
                      assignments:
                        - assignee:
                            id: PXPGF42
                            type: user_reference
      responses:
        '200':
          description: All of the updates succeeded.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      incidents:
                        type: array
                        items:
                          $ref: '#/components/schemas/Incident'
                    required:
                      - incidents
              examples:
                response:
                  summary: Response Example
                  value:
                    incidents:
                      - id: PT4KHLK
                        type: incident
                        summary: '[#1234] The server is on fire.'
                        self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
                        incident_number: 1234
                        created_at: '2015-10-06T21:30:42Z'
                        status: resolved
                        title: The server is on fire.
                        alert_counts:
                          all: 2
                          triggered: 0
                          resolved: 2
                        pending_actions:
                          - type: unacknowledge
                            at: '2015-11-10T01:02:52Z'
                          - type: resolve
                            at: '2015-11-10T04:31:52Z'
                        incident_key: baf7cf21b1da41b4b0221008339ff357
                        service:
                          id: PIJ90N7
                          type: service_reference
                          summary: My Mail Service
                          self: 'https://api.pagerduty.com/services/PIJ90N7'
                          html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                        assigned_via: escalation_policy
                        assignments:
                          - at: '2015-11-10T00:31:52Z'
                            assignee:
                              id: PXPGF42
                              type: user_reference
                              summary: Earline Greenholt
                              self: 'https://api.pagerduty.com/users/PXPGF42'
                              html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                        acknowledgements:
                          - at: '2015-11-10T00:32:52Z'
                            acknowledger:
                              id: PXPGF42
                              type: user_reference
                              summary: Earline Greenholt
                              self: 'https://api.pagerduty.com/users/PXPGF42'
                              html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                        last_status_change_at: '2015-10-06T21:38:23Z'
                        last_status_change_by:
                          id: PXPGF42
                          type: user_reference
                          summary: Earline Greenholt
                          self: 'https://api.pagerduty.com/users/PXPGF42'
                          html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                        first_trigger_log_entry:
                          id: Q02JTSNZWHSEKV
                          type: trigger_log_entry_reference
                          summary: Triggered through the API
                          self: 'https://api.pagerduty.com/log_entries/Q02JTSNZWHSEKV?incident_id=PT4KHLK'
                          html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK/log_entries/Q02JTSNZWHSEKV'
                        escalation_policy:
                          id: PT20YPA
                          type: escalation_policy_reference
                          summary: Another Escalation Policy
                          self: 'https://api.pagerduty.com/escalation_policies/PT20YPA'
                          html_url: 'https://subdomain.pagerduty.com/escalation_policies/PT20YPA'
                        teams:
                          - id: PQ9K7I8
                            type: team_reference
                            summary: Engineering
                            self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                            html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                        urgency: high
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      x-pd-requires-scope: incidents.write
      tags:
        - Incidents
      operationId: createIncident
      description: |
        Create an incident synchronously without a corresponding event from a monitoring service.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Create an Incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                incident:
                  type: object
                  description: Details of the incident to be created.
                  properties:
                    type:
                      type: string
                      enum:
                        - incident
                    title:
                      type: string
                      description: 'A succinct description of the nature, symptoms, cause, or effect of the incident.'
                    service:
                      $ref: '#/components/schemas/ServiceReference'
                    priority:
                      $ref: '#/components/schemas/PriorityReference'
                    urgency:
                      type: string
                      description: The urgency of the incident
                      enum:
                        - high
                        - low
                    body:
                      $ref: '#/components/schemas/IncidentBody'
                    incident_key:
                      type: string
                      description: A string which identifies the incident. Sending subsequent requests referencing the same service and with the same incident_key will result in those requests being rejected if an open incident matches that incident_key.
                    assignments:
                      type: array
                      description: Assign the incident to these assignees. Cannot be specified if an escalation policy is given.
                      items:
                        properties:
                          assignee:
                            $ref: '#/components/schemas/UserReference'
                    escalation_policy:
                      $ref: '#/components/schemas/EscalationPolicyReference'
                    conference_bridge:
                      $ref: '#/components/schemas/ConferenceBridge'
                  required:
                    - type
                    - title
                    - service
              required:
                - incident
            examples:
              request:
                summary: Request Example
                value:
                  incident:
                    type: incident
                    title: The server is on fire.
                    service:
                      id: PWIXJZS
                      type: service_reference
                    priority:
                      id: P53ZZH5
                      type: priority_reference
                    urgency: high
                    incident_key: baf7cf21b1da41b4b0221008339ff357
                    body:
                      type: incident_body
                      details: 'A disk is getting full on this machine. You should investigate what is causing the disk to fill, and ensure that there is an automated process in place for ensuring data is rotated (eg. logs should have logrotate around them). If data is expected to stay on this disk forever, you should start planning to scale up to a larger disk.'
                    escalation_policy:
                      id: PT20YPA
                      type: escalation_policy_reference
      responses:
        '201':
          description: The incident object created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/Incident'
                required:
                  - incident
              examples:
                response:
                  summary: Response Example
                  value:
                    incident:
                      id: PT4KHLK
                      type: incident
                      title: The server is on fire.
                      summary: '[#1234] The server is on fire.'
                      self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                      html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
                      incident_number: 1234
                      created_at: '2015-10-06T21:30:42Z'
                      status: triggered
                      incident_key: baf7cf21b1da41b4b0221008339ff357
                      service:
                        id: PWIXJZS
                        type: service_reference
                        summary: My Mail Service
                        self: 'https://api.pagerduty.com/services/PWIXJZS'
                        html_url: 'https://subdomain.pagerduty.com/services/PWIXJZS'
                      priority:
                        id: P53ZZH5
                        type: priority_reference
                        summary: P2
                        self: 'https://api.pagerduty.com/priorities/P53ZZH5'
                      assigned_via: escalation_policy
                      assignments:
                        - at: '2015-11-10T00:31:52Z'
                          assignee:
                            id: PXPGF42
                            type: user_reference
                            summary: Earline Greenholt
                            self: 'https://api.pagerduty.com/users/PXPGF42'
                            html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      last_status_change_at: '2015-10-06T21:38:23Z'
                      last_status_change_by:
                        id: PXPGF42
                        type: user_reference
                        summary: Earline Greenholt
                        self: 'https://api.pagerduty.com/users/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      first_trigger_log_entry:
                        id: Q02JTSNZWHSEKV
                        type: trigger_log_entry_reference
                        summary: Triggered through the API
                        self: 'https://api.pagerduty.com/log_entries/Q02JTSNZWHSEKV?incident_id=PT4KHLK'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK/log_entries/Q02JTSNZWHSEKV'
                      escalation_policy:
                        id: PT20YPA
                        type: escalation_policy_reference
                        summary: Another Escalation Policy
                        self: 'https://api.pagerduty.com/escalation_policies/PT20YPA'
                        html_url: 'https://subdomain.pagerduty.com/escalation_policies/PT20YPA'
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                      urgency: high
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}':
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: getIncident
      description: |
        Show detailed information about an incident. Accepts either an incident id, or an incident number.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        <!-- theme: warning -->
        > ### Early Access
        > The `include[]=field_values` part of this endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.

        Scoped OAuth requires: `incidents.read`
      summary: Get an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/include_incident'
        - $ref: '#/components/parameters/early_access_customfields'
      responses:
        '200':
          description: The incident requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/Incident'
                required:
                  - incident
              examples:
                response:
                  summary: Response Example
                  value:
                    incident:
                      id: PT4KHLK
                      type: incident
                      summary: '[#1234] The server is on fire.'
                      self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                      html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
                      incident_number: 1234
                      created_at: '2015-10-06T21:30:42Z'
                      status: acknowledged
                      title: The server is on fire.
                      alert_counts:
                        all: 2
                        triggered: 1
                        resolved: 1
                      pending_actions:
                        - type: unacknowledge
                          at: '2015-11-10T01:02:52Z'
                        - type: resolve
                          at: '2015-11-10T04:31:52Z'
                      incident_key: baf7cf21b1da41b4b0221008339ff357
                      service:
                        id: PIJ90N7
                        type: service_reference
                        summary: My Mail Service
                        self: 'https://api.pagerduty.com/services/PIJ90N7'
                        html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                      priority:
                        id: P53ZZH5
                        type: priority_reference
                        summary: P2
                        self: 'https://api.pagerduty.com/priorities/P53ZZH5'
                      assigned_via: escalation_policy
                      assignments:
                        - at: '2015-11-10T00:31:52Z'
                          assignee:
                            id: PXPGF42
                            type: user_reference
                            summary: Earline Greenholt
                            self: 'https://api.pagerduty.com/users/PXPGF42'
                            html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      acknowledgements:
                        - at: '2015-11-10T00:32:52Z'
                          acknowledger:
                            id: PXPGF42
                            type: user_reference
                            summary: Earline Greenholt
                            self: 'https://api.pagerduty.com/users/PXPGF42'
                            html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      last_status_change_at: '2015-10-06T21:38:23Z'
                      last_status_change_by:
                        id: PXPGF42
                        type: user_reference
                        summary: Earline Greenholt
                        self: 'https://api.pagerduty.com/users/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      first_trigger_log_entry:
                        id: Q02JTSNZWHSEKV
                        type: trigger_log_entry_reference
                        summary: Triggered through the API
                        self: 'https://api.pagerduty.com/log_entries/Q02JTSNZWHSEKV?incident_id=PT4KHLK'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK/log_entries/Q02JTSNZWHSEKV'
                      escalation_policy:
                        id: PT20YPA
                        type: escalation_policy_reference
                        summary: Another Escalation Policy
                        self: 'https://api.pagerduty.com/escalation_policies/PT20YPA'
                        html_url: 'https://subdomain.pagerduty.com/escalation_policies/PT20YPA'
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                      urgency: high
                      responder_requests:
                        - incident:
                            id: PXP12GZ
                            type: incident_reference
                            summary: Ongoing Incident in Mailroom
                            self: 'https://api.pagerduty.com/incidents/PXP12GZ'
                            html_url: 'https://subdomain.pagerduty.com/incidents/PXP12GZ'
                          requester:
                            id: P09TT3C
                            type: user_reference
                            summary: Jane Doe
                            self: 'https://api.pagerduty.com/users/P09TT3C'
                            html_url: 'https://subdomain.pagerduty.com/users/P09TT3C'
                          requested_at: '2018-08-16T14:55:17-07:00'
                          message: Please help with issue - join bridge at +1(234)-567-8910
                          responder_request_targets:
                            - responder_request_target:
                                type: user
                                id: PL7A2O4
                                incidents_responders:
                                  - state: pending
                                    user:
                                      id: PL7A2O4
                                      type: user_reference
                                      summary: Lee Turner
                                      self: 'https://api.pagerduty.com/users/PL7A2O4'
                                      html_url: 'https://subdomain.pagerduty.com/users/PL7A2O4'
                                      avatar_url: 'https://secure.gravatar.com/avatar/51c673f51f6b483b24c889bbafbd2a67.png?d=mm&r=PG'
                                    incident:
                                      id: PXP12GZ
                                      type: incident_reference
                                      summary: Ongoing Incident in Mailroom
                                      self: 'https://api.pagerduty.com/incidents/PXP12GZ'
                                      html_url: 'https://subdomain.pagerduty.com/incidents/PXP12GZ'
                                    updated_at: '2018-08-09T14:40:48-07:00'
                                    message: Please help with issue - join bridge at +1(234)-567-8910
                                    requester:
                                      id: P09TT3C
                                      type: user_reference
                                      summary: Jane Doe
                                      self: 'https://api.pagerduty.com/users/P09TT3C'
                                      html_url: 'https://subdomain.pagerduty.com/users/P09TT3C'
                                      avatar_url: 'https://secure.gravatar.com/avatar/1c747247b75acc1f724e2784c838b3f8.png?d=mm&r=PG'
                                    requested_at: '2018-08-09T21:40:49Z'
                      incidents_responders:
                        - state: pending
                          user:
                            id: PL7A2O4
                            type: user_reference
                            summary: Lee Turner
                            self: 'https://api.pagerduty.com/users/PL7A2O4'
                            html_url: 'https://subdomain.pagerduty.com/users/PL7A2O4'
                            avatar_url: 'https://secure.gravatar.com/avatar/51c673f51f6b483b24c889bbafbd2a67.png?d=mm&r=PG'
                          incident:
                            id: PXP12GZ
                            type: incident_reference
                            summary: Ongoing Incident in Mailroom
                            self: 'https://api.pagerduty.com/incidents/PXP12GZ'
                            html_url: 'https://subdomain.pagerduty.com/incidents/PXP12GZ'
                          updated_at: '2018-08-09T14:40:48-07:00'
                          message: Please help with issue - join bridge at +1(234)-567-8910
                          requester:
                            id: P09TT3C
                            type: user_reference
                            summary: Jane Doe
                            self: 'https://api.pagerduty.com/users/P09TT3C'
                            html_url: 'https://subdomain.pagerduty.com/users/P09TT3C'
                            avatar_url: 'https://secure.gravatar.com/avatar/1c747247b75acc1f724e2784c838b3f8.png?d=mm&r=PG'
                          requested_at: '2018-08-09T21:40:49Z'
                      field_values:
                        - id: PT4KHEE
                          type: field_value
                          name: environment
                          display_name: Runtime Environment
                          description: environment where incident occurred
                          fixed_options: true
                          datatype: string
                          multi_value: false
                          value: production
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: incidents.write
      tags:
        - Incidents
      operationId: updateIncident
      description: |
        Acknowledge, resolve, escalate or reassign an incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Update an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                incident:
                  type: object
                  description: The parameters of the incident to update.
                  properties:
                    type:
                      type: string
                      description: The incident type.
                      enum:
                        - incident
                        - incident_reference
                    status:
                      type: string
                      description: The new status of the incident.
                      enum:
                        - resolved
                        - acknowledged
                    priority:
                      $ref: '#/components/schemas/PriorityReference'
                    resolution:
                      type: string
                      description: The resolution for this incident if status is set to resolved.
                    title:
                      type: string
                      description: The new title of the incident.
                    escalation_level:
                      type: integer
                      description: Escalate the incident to this level in the escalation policy.
                    assignments:
                      type: array
                      description: Assign the incident to these assignees.
                      items:
                        properties:
                          assignee:
                            $ref: '#/components/schemas/UserReference'
                    escalation_policy:
                      $ref: '#/components/schemas/EscalationPolicyReference'
                    urgency:
                      type: string
                      description: The urgency of the incident.
                      enum:
                        - high
                        - low
                    conference_bridge:
                      $ref: '#/components/schemas/ConferenceBridge'
                  required:
                    - type
              required:
                - incident
            examples:
              request:
                summary: Request Example
                value:
                  incident:
                    type: incident_reference
                    status: acknowledged
      responses:
        '200':
          description: The incident was updated.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      incident:
                        $ref: '#/components/schemas/Incident'
                    required:
                      - incident
              examples:
                response:
                  summary: Response Example
                  value:
                    incident:
                      id: PT4KHLK
                      type: incident
                      summary: '[#1234] The server is on fire.'
                      self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                      html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
                      incident_number: 1234
                      created_at: '2015-10-06T21:30:42Z'
                      status: resolved
                      title: The server is on fire.
                      pending_actions:
                        - type: unacknowledge
                          at: '2015-11-10T01:02:52Z'
                        - type: resolve
                          at: '2015-11-10T04:31:52Z'
                      incident_key: baf7cf21b1da41b4b0221008339ff357
                      service:
                        id: PIJ90N7
                        type: service_reference
                        summary: My Mail Service
                        self: 'https://api.pagerduty.com/services/PIJ90N7'
                        html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                      priority:
                        id: P53ZZH5
                        type: priority_reference
                        summary: P2
                        self: 'https://api.pagerduty.com/priorities/P53ZZH5'
                      assigned_via: escalation_policy
                      assignments:
                        - at: '2015-11-10T00:31:52Z'
                          assignee:
                            id: PXPGF42
                            type: user_reference
                            summary: Earline Greenholt
                            self: 'https://api.pagerduty.com/users/PXPGF42'
                            html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      acknowledgements:
                        - at: '2015-11-10T00:32:52Z'
                          acknowledger:
                            id: PXPGF42
                            type: user_reference
                            summary: Earline Greenholt
                            self: 'https://api.pagerduty.com/users/PXPGF42'
                            html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      last_status_change_at: '2015-10-06T21:38:23Z'
                      last_status_change_by:
                        id: PXPGF42
                        type: user_reference
                        summary: Earline Greenholt
                        self: 'https://api.pagerduty.com/users/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      first_trigger_log_entry:
                        id: Q02JTSNZWHSEKV
                        type: trigger_log_entry_reference
                        summary: Triggered through the API
                        self: 'https://api.pagerduty.com/log_entries/Q02JTSNZWHSEKV?incident_id=PT4KHLK'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK/log_entries/Q02JTSNZWHSEKV'
                      escalation_policy:
                        id: PT20YPA
                        type: escalation_policy_reference
                        summary: Another Escalation Policy
                        self: 'https://api.pagerduty.com/escalation_policies/PT20YPA'
                        html_url: 'https://subdomain.pagerduty.com/escalation_policies/PT20YPA'
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                      urgency: high
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/alerts':
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: listIncidentAlerts
      description: |
        List alerts for the specified incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.read`
      summary: List alerts for an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/offset_limit'
        - $ref: '#/components/parameters/offset_offset'
        - $ref: '#/components/parameters/offset_total'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/alert_key'
        - $ref: '#/components/parameters/statuses_incident_alerts'
        - $ref: '#/components/parameters/sort_by_incident_alerts'
        - $ref: '#/components/parameters/include_incident_alerts'
      responses:
        '200':
          description: A paginated array of the incident's alerts.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      alerts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Alert'
                    required:
                      - alerts
              examples:
                response:
                  summary: Response Example
                  value:
                    alerts:
                      - id: PT4KHLK
                        type: alert
                        summary: The server is on fire.
                        self: 'https://api.pagerduty.com/incidents/PT4KHLK/alerts/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/alerts/PXPGF42'
                        created_at: '2015-10-06T21:30:42Z'
                        status: resolved
                        alert_key: baf7cf21b1da41b4b0221008339ff357
                        service:
                          id: PIJ90N7
                          type: service_reference
                          summary: My Mail Service
                          self: 'https://api.pagerduty.com/services/PIJ90N7'
                          html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                        body:
                          type: alert_body
                          contexts:
                            - type: link
                          details:
                            customKey: Server is on fire!
                            customKey2: Other stuff!
                        incident:
                          id: PT4KHLK
                          type: incident_reference
                        suppressed: false
                        severity: critical
                        integration:
                          id: PQ12345
                          type: generic_email_inbound_integration_reference
                          summary: Email Integration
                          self: 'https://api.pagerduty.com/services/PIJ90N7/integrations/PQ12345'
                          html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7/integrations/PQ12345'
                    limit: 1
                    offset: 0
                    more: true
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: incidents.write
      tags:
        - Incidents
      operationId: updateIncidentAlerts
      description: |
        Resolve multiple alerts or associate them with different incidents.

        An incident represents a problem or an issue that needs to be addressed and resolved. An alert represents a digital signal that was emitted to PagerDuty by the monitoring systems that detected or identified the issue.

        A maximum of 500 alerts may be updated at a time. If more than this number of alerts are given, the API will respond with status 413 (Request Entity Too Large).

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Manage alerts
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/offset_limit'
        - $ref: '#/components/parameters/offset_offset'
        - $ref: '#/components/parameters/offset_total'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                alerts:
                  type: array
                  description: 'An array of alerts, including the parameters to update for each alert.'
                  items:
                    $ref: '#/components/schemas/Alert'
              required:
                - alerts
            examples:
              request:
                summary: Request Example
                value:
                  alerts:
                    - id: PPVZH9X
                      type: alert
                      status: resolved
                    - id: P8JOGX7
                      type: alert
                      incident:
                        id: PPVZH9X
                        type: incident_reference
      responses:
        '200':
          description: All of the updates succeeded.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      alerts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Alert'
                    required:
                      - alerts
              examples:
                response:
                  summary: Response Example
                  value:
                    alerts:
                      - id: PT4KHLK
                        type: alert
                        summary: The server is on fire.
                        self: 'https://api.pagerduty.com/incidents/PT4KHLK/alerts/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/alerts/PXPGF42'
                        created_at: '2015-10-06T21:30:42Z'
                        status: resolved
                        alert_key: baf7cf21b1da41b4b0221008339ff357
                        service:
                          id: PIJ90N7
                          type: service_reference
                          summary: My Mail Service
                          self: 'https://api.pagerduty.com/services/PIJ90N7'
                          html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                        body:
                          type: alert_body
                          contexts:
                            - type: link
                          details:
                            customKey: Server is on fire!
                            customKey2: Other stuff!
                        incident:
                          id: PPVZH9X
                          type: incident_reference
                        suppressed: false
                        severity: critical
                    limit: 1
                    offset: 0
                    more: true
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/alerts/{alert_id}':
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: getIncidentAlert
      description: |
        Show detailed information about an alert. Accepts an alert id.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        When a service sends an event to PagerDuty, an alert and corresponding incident is triggered in PagerDuty.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.read`
      summary: Get an alert
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/alert_id'
      responses:
        '200':
          description: The alert requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alert:
                    $ref: '#/components/schemas/Alert'
                required:
                  - alert
              examples:
                response:
                  summary: Response Example
                  value:
                    alert:
                      id: PT4KHLK
                      type: alert
                      summary: The server is on fire.
                      self: 'https://api.pagerduty.com/incident/PT4KHLX/alerts/PT4KHLK'
                      html_url: 'https://subdomain.pagerduty.com/alerts/PT4KHLK'
                      created_at: '2015-10-06T21:30:42Z'
                      status: resolved
                      alert_key: baf7cf21b1da41b4b0221008339ff357
                      service:
                        id: PIJ90N7
                        type: service_reference
                        summary: My Mail Service
                        self: 'https://api.pagerduty.com/services/PIJ90N7'
                        html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                      incident:
                        id: PT4KHLX
                        type: incident_reference
                        summary: '[#1234] The server is on fire.'
                        self: 'https://api.pagerduty.com/incidents/PT4KHLX'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLX'
                      suppressed: false
                      severity: critical
                      integration:
                        id: PQ12345
                        type: generic_email_inbound_integration_reference
                        summary: Email Integration
                        self: 'https://api.pagerduty.com/services/PIJ90N7/integrations/PQ12345'
                        html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7/integrations/PQ12345'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: incidents.write
      tags:
        - Incidents
      operationId: updateIncidentAlert
      description: |
        Resolve an alert or associate an alert with a new parent incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        When a service sends an event to PagerDuty, an alert and corresponding incident is triggered in PagerDuty.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Update an alert
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/alert_id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                alert:
                  $ref: '#/components/schemas/Alert'
              required:
                - alert
            examples:
              request:
                summary: Request Example
                value:
                  alert:
                    type: alert
                    status: resolved
                    incident:
                      id: PEYSGVF
                      type: incident_reference
                    body:
                      type: alert_body
                      contexts:
                        - type: link
                      details:
                        customKey: Server is on fire!
                        customKey2: Other stuff!
        description: The parameters of the alert to update.
      responses:
        '200':
          description: The alert that was updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alert:
                    $ref: '#/components/schemas/Alert'
                required:
                  - alert
              examples:
                request:
                  summary: Request Example
                  value:
                    alert:
                      type: alert
                      status: resolved
                      incident:
                        id: PEYSGVF
                        type: incident_reference
                      body:
                        type: alert_body
                        contexts:
                          - type: link
                        details:
                          customKey: Server is on fire!
                          customKey2: Other stuff!
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/business_services/{business_service_id}/impacts':
    put:
      summary: Manually change an Incident's Impact on a Business Service.
      tags:
        - Incidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  relation:
                    type: string
                    enum:
                      - impacted
                      - not_impacted
              examples:
                response:
                  summary: Response Example
                  value:
                    relation: impacted
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      operationId: putIncidentManualBusinessServiceAssociation
      description: |-
        Change Impact of an Incident on a Business Service.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/business_service_id'
        - $ref: '#/components/parameters/early_access_bis'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                relation:
                  type: string
                  enum:
                    - impacted
                    - not_impacted
              required:
                - relation
        description: |-
          The `impacted` relation will cause the Business Service and any Services that it supports to become impacted by this incident.

          The `not_impacted` relation will remove the Incident's Impact from the specified Business Service.

          The effect of adding or removing Impact to a Business Service in this way will also change the propagation of Impact to other Services supported by that Business Service.
  '/incidents/{id}/business_services/impacts':
    get:
      summary: List Business Services impacted by the given Incident
      tags:
        - Incidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/CursorPagination'
                  - type: object
                    properties:
                      services:
                        type: array
                        items:
                          $ref: '#/components/schemas/Impact'
              examples:
                response:
                  summary: Response Example
                  value:
                    limit: 100
                    next_cursor: null
                    services:
                      - id: PD1234
                        name: Web API
                        type: business_service
                        status: impacted
                      - id: PF9KMXH
                        name: Analytics Backend
                        type: business_service
                        status: impacted
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      operationId: getIncidentImpactedBusinessServices
      description: |-
        Retrieve a list of Business Services that are being impacted by the given Incident.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/early_access_bis'
  '/incidents/{id}/field_values':
    get:
      tags:
        - Incidents
      operationId: getIncidentFieldValues
      description: |
        Get field values for an incident

        <!-- theme: warning -->

        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
      summary: Get Incident Field Values
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/early_access_customfields'
      responses:
        '200':
          description: The list of field values
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_values:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomFieldsFieldValue'
                required:
                  - field_values
              examples:
                response:
                  summary: Response Example
                  value:
                    field_values:
                      - id: PT4KHEE
                        type: field_value
                        name: environment
                        display_name: Runtime Environment
                        description: environment where incident occurred
                        fixed_options: true
                        datatype: string
                        multi_value: false
                        value: production
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Incidents
      operationId: setIncidentFieldValues
      description: |
        Set field values for an incident

        <!-- theme: warning -->

        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
      summary: Set Incident Field Values
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                field_values:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomFieldsEditableFieldValue'
              required:
                - field_values
            examples:
              request:
                summary: Request Example
                value:
                  field_values:
                    - name: environment
                      value: production
      responses:
        '201':
          description: Field values were updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_values:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomFieldsFieldValue'
                required:
                  - field_values
              examples:
                response:
                  summary: Response Example
                  value:
                    field_values:
                      - id: PT4KHEE
                        type: field_value
                        name: environment
                        display_name: Runtime Environment
                        description: environment where incident occurred
                        fixed_options: true
                        datatype: string
                        multi_value: false
                        value: production
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/incidents/{id}/field_values/schema':
    get:
      tags:
        - Incidents
      operationId: getSchemaForIncident
      description: |
        Get detailed information about a Schema for an incident.

        <!-- theme: warning -->

        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
      summary: Get Incident's Schema
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/include_customfields_incident_schema'
        - $ref: '#/components/parameters/early_access_customfields'
      responses:
        '200':
          description: The schema requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  schema:
                    $ref: '#/components/schemas/CustomFieldsIncidentSchema'
                required:
                  - schema
              examples:
                response1:
                  summary: 'Example: No query parameters'
                  value:
                    schema:
                      id: PT20YPA
                      type: schema
                      self: 'https://api.pagerduty.com/customfields/schemas/PT20YPA'
                      summary: Security Incident
                      title: Security Incident
                      description: Default schema to use for security incidents
                      field_configurations:
                        - id: PT4KHEE
                          type: field_configuration
                          field:
                            id: PT4KZZZ
                            type: field
                            self: 'https://api.pagerduty.com/customfields/fields/PT4KZZZ'
                            summary: environment
                            name: environment
                            display_name: Environment
                            description: null
                            datatype: string
                            multi_value: true
                            fixed_options: true
                            created_at: '2021-06-01T21:30:42Z'
                            updated_at: '2021-07-01T21:30:42Z'
                          required: true
                          default_value:
                            datatype: string
                            multi_value: true
                            value:
                              - prod
                              - stg
                          created_at: '2021-06-01T21:30:42Z'
                          updated_at: '2021-06-01T21:30:42Z'
                response2:
                  summary: 'Example: Using include[]=field_options'
                  value:
                    schema:
                      id: PT20YPA
                      type: schema
                      self: 'https://api.pagerduty.com/customfields/schemas/PT20YPA'
                      summary: Security Incident
                      title: Security Incident
                      description: Default schema to use for security incidents'
                      field_configurations:
                        - id: PT4KHEE
                          type: field_configuration
                          field:
                            id: PT4KZZZ
                            type: field
                            self: 'https://api.pagerduty.com/customfields/fields/PT4KZZZ'
                            summary: environment
                            name: environment
                            display_name: Environment
                            description: null
                            datatype: string
                            multi_value: true
                            fixed_options: true
                            created_at: '2021-06-01T21:30:42Z'
                            updated_at: '2021-07-01T21:30:42Z'
                            field_options:
                              - id: PT4KHEE
                                type: field_option
                                data:
                                  datatype: string
                                  value:
                                    - prod
                                    - stg
                                created_at: '2021-06-01T21:30:42Z'
                                updated_at: '2021-06-01T21:30:42Z'
                          required: true
                          default_value:
                            datatype: string
                            multi_value: true
                            value:
                              - prod
                              - stg
                          created_at: '2021-06-01T21:30:42Z'
                          updated_at: '2021-06-01T21:30:42Z'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/incidents/{id}/log_entries':
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: listIncidentLogEntries
      description: |
        List log entries for the specified incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        A Log Entry are a record of all events on your account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.read`
      summary: List log entries for an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/offset_limit'
        - $ref: '#/components/parameters/offset_offset'
        - $ref: '#/components/parameters/offset_total'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/time_zone'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/until'
        - $ref: '#/components/parameters/log_entry_is_overview'
        - $ref: '#/components/parameters/include_log_entry'
      responses:
        '200':
          description: A paginated array of the incident's log entries.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      log_entries:
                        type: array
                        items:
                          oneOf:
                            - $ref: '#/components/schemas/AcknowledgeLogEntry'
                            - $ref: '#/components/schemas/AnnotateLogEntry'
                            - $ref: '#/components/schemas/AssignLogEntry'
                            - $ref: '#/components/schemas/DelegateLogEntry'
                            - $ref: '#/components/schemas/EscalateLogEntry'
                            - $ref: '#/components/schemas/ExhaustEscalationPathLogEntry'
                            - $ref: '#/components/schemas/NotifyLogEntry'
                            - $ref: '#/components/schemas/ReachAckLimitLogEntry'
                            - $ref: '#/components/schemas/ReachTriggerLimitLogEntry'
                            - $ref: '#/components/schemas/RepeatEscalationPathLogEntry'
                            - $ref: '#/components/schemas/ResolveLogEntry'
                            - $ref: '#/components/schemas/SnoozeLogEntry'
                            - $ref: '#/components/schemas/TriggerLogEntry'
                            - $ref: '#/components/schemas/UnacknowledgeLogEntry'
                            - $ref: '#/components/schemas/UrgencyChangeLogEntry'
                    required:
                      - log_entries
              examples:
                response:
                  summary: Response Example
                  value:
                    log_entries:
                      - id: Q02JTSNZWHSEKV
                        type: trigger_log_entry
                        summary: Triggered through the API
                        self: 'https://api.pagerduty.com/log_entries/Q02JTSNZWHSEKV?incident_id=PT4KHLK'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK/log_entries/Q02JTSNZWHSEKV'
                        created_at: '2015-11-07T00:14:20Z'
                        agent:
                          id: PIJ90N7
                          type: service_reference
                          summary: My Mail Service
                          self: 'https://api.pagerduty.com/services/PIJ90N7'
                          html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                        channel:
                          type: api
                        incident:
                          id: PT4KHLK
                          type: incident_reference
                          summary: '[#1234] The server is on fire.'
                          self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                          html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
                        teams:
                          - id: PQ9K7I8
                            type: team_reference
                            summary: Engineering
                            self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                            html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                        contexts: []
                        event_details:
                          description: 'Tasks::SFDCValidator - PD_Data__c - duplicates'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/merge':
    put:
      tags:
        - Incidents
      x-pd-requires-scope: incidents.write
      operationId: mergeIncidents
      description: |
        Merge a list of source incidents into this incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Merge incidents
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source_incidents:
                  type: array
                  description: The source incidents that will be merged into the target incident and resolved.
                  items:
                    $ref: '#/components/schemas/IncidentReference'
              required:
                - source_incidents
            examples:
              request:
                summary: Request Example
                value:
                  source_incidents:
                    - id: P8JOGX7
                      type: incident_reference
                    - id: PPVZH9X
                      type: incident_reference
      responses:
        '200':
          description: 'The target incident, which now contains all the alerts from the source incident.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/IncidentReference'
                required:
                  - incident
              examples:
                response:
                  summary: Response Example
                  value:
                    incident:
                      id: PT4KHLK
                      type: incident_reference
                      summary: '[#1234] The server is on fire.'
                      self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                      html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/notes':
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: listIncidentNotes
      description: |
        List existing notes for the specified incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.read`
      summary: List notes for an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: An array of notes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/IncidentNote'
                required:
                  - notes
              examples:
                response:
                  summary: Response Example
                  value:
                    notes:
                      - id: PWL7QXS
                        user:
                          id: PXPGF42
                          type: user_reference
                          summary: Earline Greenholt
                          self: 'https://api.pagerduty.com/users/PXPGF42'
                          html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                        channel:
                          summary: The PagerDuty website or APIs
                        content: Firefighters are on the scene.
                        created_at: '2013-03-06T15:28:51-05:00'
                      - id: PCQC25
                        user:
                          id: PXPGF42
                          type: bot_user_reference
                          summary: A Global Event Rule
                          self: 'https://api.pagerduty.com/users/PXPGF42'
                          html_url: 'https://subdomain.pagerduty.com/event-rules/global/0e84de00-9511-4380-9f4f-a7b568bb49a0/rules/14e56445-ebab-4dd0-ba9d-fc28a41b7e7b'
                        channel:
                          id: 14e56445-ebab-4dd0-ba9d-fc28a41b7e7b
                          type: event_rule_reference
                          summary: A Global Event Rule
                          self: 'https://api.pagerduty.com/rulesets/0e84de00-9511-4380-9f4f-a7b568bb49a0/rules/14e56445-ebab-4dd0-ba9d-fc28a41b7e7b'
                          html_url: 'https://subdomain.pagerduty.com/event-rules/global/0e84de00-9511-4380-9f4f-a7b568bb49a0/rules/14e56445-ebab-4dd0-ba9d-fc28a41b7e7b'
                        content: Initial alert information indicates a 1-alarm fire
                        created_at: '2013-03-06T15:28:42-05:00'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      tags:
        - Incidents
      x-pd-requires-scope: incidents.write
      operationId: createIncidentNote
      description: |
        Create a new note for the specified incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        A maximum of 2000 notes can be added to an incident.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Create a note on an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                note:
                  type: object
                  properties:
                    content:
                      type: string
                      description: The note content
                  required:
                    - content
              required:
                - note
            examples:
              request:
                summary: Request Example
                value:
                  note:
                    content: Firefighters are on the scene.
      responses:
        '200':
          description: The new note.
          content:
            application/json:
              schema:
                type: object
                properties:
                  note:
                    $ref: '#/components/schemas/IncidentNote'
                required:
                  - note
              examples:
                response:
                  summary: Response Example
                  value:
                    note:
                      id: PWL7QXS
                      user:
                        id: PXPGF42
                        type: user_reference
                        summary: Earline Greenholt
                        self: 'https://api.pagerduty.com/users/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      channel:
                        summary: The PagerDuty website or APIs
                      content: Firefighters are on the scene.
                      created_at: '2013-03-06T15:28:51-05:00'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/outlier_incident':
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: getOutlierIncident
      description: |
        Gets Outlier Incident information for a given Incident on its Service.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#outlier-incident)

        Scoped OAuth requires: `incidents.read`
      summary: Get Outlier Incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/since'
        - $ref: '#/components/parameters/additional_details'
      responses:
        '200':
          description: Outlier Incident information calculated over the same Service as the given Incident.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  outlier_incident:
                    type: object
                    description: Outlier Incident information calculated over the same Service as the given Incident.
                    properties:
                      incident:
                        $ref: '#/components/schemas/Incident'
                      incident_template:
                        type: object
                        properties:
                          id:
                            type: string
                            readOnly: true
                          cluster_id:
                            type: string
                            readOnly: true
                            description: The cluster the Incident Template pattern belongs to
                          mined_text:
                            type: string
                            readOnly: true
                            description: The Incident Template mined pattern text
              examples:
                response:
                  summary: Response Example
                  value:
                    outlier_incident:
                      incident:
                        id: PR2P3RW
                        created_at: '2020-11-18T13:08:14Z'
                        self: 'https://api.pagerduty.com/incidents/PR2P3RW'
                        title: '[LINUX]Used disk space is more than 5 GB on volume /var/log : PROBLEM for ce51323'
                        occurrence:
                          count: 10
                          frequency: 0.04
                          category: rare
                          since: '2020-09-23T13:08:14Z'
                          until: '2021-01-18T13:08:14Z'
                      incident_template:
                        id: PX3P1PX
                        cluster_id: P2B3X5
                        mined_text: '[LINUX]Used disk space is more than <MEASUREMENT> on volume <*> : PROBLEM for <*>'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/incidents/{id}/past_incidents':
    get:
      x-pd-requires-scope: incidents.read
      summary: Get Past Incidents
      tags:
        - Incidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  past_incidents:
                    type: array
                    description: Aggregate of past incidents
                    items:
                      type: object
                      properties:
                        incident:
                          type: object
                          description: Incident model reference
                          properties:
                            id:
                              type: string
                              description: The globally unique identifier of the incident
                            created_at:
                              type: string
                              description: The date/time the incident was first triggered
                            self:
                              type: string
                              description: The URL at which the object is accessible
                            title:
                              type: string
                              description: 'The description of the nature, symptoms, cause, or effect of the incident'
                        score:
                          type: number
                          description: 'The computed similarity score associated with the incident and parent incident '
                  total:
                    type: number
                    description: The total number of Past Incidents if the total parameter was set in the request
                  limit:
                    type: number
                    description: The maximum number of Incidents requested
              examples:
                response:
                  summary: Response Example
                  value:
                    past_incidents:
                      - incident:
                          id: PFBE9I2
                          created_at: '2020-11-04T16:08:15Z'
                          self: 'https://api.pagerduty.com/incidents/PFBE9I2'
                          title: Things are so broken!
                        score: 46.8249
                      - incident:
                          id: P1J6V6M
                          created_at: '2020-10-22T17:18:14Z'
                          self: 'https://api.pagerduty.com/incidents/P1J6V6M'
                          title: Things are so broken!
                        score: 46.8249
                      - incident:
                          id: P6HPX5N
                          created_at: '2020-10-06T22:01:13Z'
                          self: 'https://api.pagerduty.com/incidents/P6HPX5N'
                          title: You forgot to feed the cat!
                        score: 0
                    total: 3
                    limit: 5
        '400':
          $ref: '#/components/responses/ArgumentError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: getPastIncidents
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      description: |
        Past Incidents returns Incidents within the past 6 months that have similar metadata and were generated on the same Service as the parent Incident. By default, 5 Past Incidents are returned. Note: This feature is currently available as part of the Event Intelligence package or Digital Operations plan only.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#past_incidents)

        Scoped OAuth requires: `incidents.read`
  '/incidents/{id}/related_incidents':
    get:
      x-pd-requires-scope: incidents.read
      tags:
        - Incidents
      operationId: getRelatedIncidents
      description: |
        Returns the 20 most recent Related Incidents that are impacting other Responders and Services. Note: This feature is currently available as part of the Event Intelligence package or Digital Operations plan only.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#related_incidents)

        Scoped OAuth requires: `incidents.read`
      summary: Get Related Incidents
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/additional_details'
      responses:
        '200':
          description: A list of Related Incidents and their relationships.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  related_incidents:
                    type: array
                    description: A list of Related Incidents and their relationships.
                    items:
                      properties:
                        incident:
                          $ref: '#/components/schemas/Incident'
                        relationships:
                          type: array
                          description: A list of reasons for why the Incident is considered related.
                          items:
                            properties:
                              type:
                                type: string
                                description: The type of relationship. A relationship outlines the reason why two Incidents are considered related.
                                enum:
                                  - machine_learning_inferred
                                  - service_dependency
                              metadata:
                                anyOf:
                                  - $ref: '#/components/schemas/RelatedIncidentMachineLearningRelationship'
                                  - $ref: '#/components/schemas/RelatedIncidentServiceDependencyRelationship'
              examples:
                response:
                  summary: Response Example
                  value:
                    related_incidents:
                      - incident:
                          id: PR2P3RW
                          created_at: '2020-11-18T13:08:14Z'
                          self: 'https://api.pagerduty.com/incidents/PR2P3RW'
                          title: The server is on fire.
                        relationships:
                          - type: machine_learning_inferred
                            metadata:
                              grouping_classification: similar_contents
                              user_feedback:
                                positive_feedback_count: 12
                                negative_feedback_count: 3
                          - type: service_dependency
                            metadata:
                              dependent_services:
                                id: P1L1YEE
                                type: business_service_reference
                                self: 'https://api.pagerduty.com/business_services/P1L1YEE'
                              supporting_services:
                                id: PNGCNV2
                                type: technical_service_reference
                                self: 'https://api.pagerduty.com/services/PNGCNV2'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/incidents/{id}/responder_requests':
    post:
      x-pd-requires-scope: incidents.write
      tags:
        - Incidents
      operationId: createIncidentResponderRequest
      description: |
        Send a new responder request for the specified incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Create a responder request for an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                requester_id:
                  type: string
                  description: The user id of the requester.
                message:
                  type: string
                  description: The message sent with the responder request.
                responder_request_targets:
                  description: The array of targets the responder request is sent to.
                  items:
                    $ref: '#/components/schemas/ResponderRequestTargetReference'
              required:
                - requester_id
                - message
                - responder_request_targets
            examples:
              request:
                summary: Request Example
                value:
                  requester_id: PL1JMK5
                  message: Please help with issue - join bridge at +1(234)-567-8910
                  responder_request_targets:
                    - responder_request_target:
                        id: PJ25ZYX
                        type: user_reference
      responses:
        '200':
          description: The new responder request for the given incident.
          content:
            application/json:
              schema:
                type: object
                properties:
                  responder_request:
                    $ref: '#/components/schemas/ResponderRequest'
                required:
                  - responder_request
              examples:
                response:
                  summary: Response Example
                  value:
                    responder_request:
                      incident:
                        id: PXP12GZ
                        type: incident_reference
                        summary: Ongoing Incident in Mailroom
                        self: 'https://api.pagerduty.com/incidents/PXP12GZ'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PXP12GZ'
                      requester:
                        id: P09TT3C
                        type: user_reference
                        summary: Jane Doe
                        self: 'https://api.pagerduty.com/users/P09TT3C'
                        html_url: 'https://subdomain.pagerduty.com/users/P09TT3C'
                      requested_at: '2018-08-16T14:55:17-07:00'
                      message: Please help with issue - join bridge at +1(234)-567-8910
                      responder_request_targets:
                        - responder_request_target:
                            type: user
                            id: PL7A2O4
                            incidents_responders:
                              - state: pending
                                user:
                                  id: PL7A2O4
                                  type: user_reference
                                  summary: Lee Turner
                                  self: 'https://api.pagerduty.com/users/PL7A2O4'
                                  html_url: 'https://subdomain.pagerduty.com/users/PL7A2O4'
                                  avatar_url: 'https://secure.gravatar.com/avatar/51c673f51f6b483b24c889bbafbd2a67.png?d=mm&r=PG'
                                incident:
                                  id: PXP12GZ
                                  type: incident_reference
                                  summary: Ongoing Incident in Mailroom
                                  self: 'https://api.pagerduty.com/incidents/PXP12GZ'
                                  html_url: 'https://subdomain.pagerduty.com/incidents/PXP12GZ'
                                updated_at: '2018-08-09T14:40:48-07:00'
                                message: Please help with issue - join bridge at +1(234)-567-8910
                                requester:
                                  id: P09TT3C
                                  type: user_reference
                                  summary: Jane Doe
                                  self: 'https://api.pagerduty.com/users/P09TT3C'
                                  html_url: 'https://subdomain.pagerduty.com/users/P09TT3C'
                                  avatar_url: 'https://secure.gravatar.com/avatar/1c747247b75acc1f724e2784c838b3f8.png?d=mm&r=PG'
                                requested_at: '2018-08-09T21:40:49Z'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/snooze':
    post:
      tags:
        - Incidents
      x-pd-requires-scope: incidents.write
      operationId: createIncidentSnooze
      description: |
        Snooze an incident.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Snooze an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                duration:
                  type: integer
                  description: 'The number of seconds to snooze the incident for. After this number of seconds has elapsed, the incident will return to the "triggered" state.'
              required:
                - duration
            examples:
              request:
                summary: Request Example
                value:
                  duration: 3600
      responses:
        '201':
          description: The incident that was successfully snoozed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident:
                    $ref: '#/components/schemas/Incident'
                required:
                  - incident
              examples:
                response:
                  summary: Response Example
                  value:
                    incident:
                      id: PT4KHLK
                      type: incident
                      summary: '[#1234] The server is on fire.'
                      self: 'https://api.pagerduty.com/incidents/PT4KHLK'
                      html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK'
                      incident_number: 1234
                      created_at: '2015-10-06T21:30:42Z'
                      status: resolved
                      pending_actions:
                        - type: unacknowledge
                          at: '2015-11-10T01:02:52Z'
                        - type: resolve
                          at: '2015-11-10T04:31:52Z'
                      incident_key: baf7cf21b1da41b4b0221008339ff357
                      service:
                        id: PIJ90N7
                        type: service_reference
                        summary: My Mail Service
                        self: 'https://api.pagerduty.com/services/PIJ90N7'
                        html_url: 'https://subdomain.pagerduty.com/services/PIJ90N7'
                      assigned_via: escalation_policy
                      assignments:
                        - at: '2015-11-10T00:31:52Z'
                          assignee:
                            id: PXPGF42
                            type: user_reference
                            summary: Earline Greenholt
                            self: 'https://api.pagerduty.com/users/PXPGF42'
                            html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      acknowledgements:
                        - at: '2015-11-10T00:32:52Z'
                          acknowledger:
                            id: PXPGF42
                            type: user_reference
                            summary: Earline Greenholt
                            self: 'https://api.pagerduty.com/users/PXPGF42'
                            html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      last_status_change_at: '2015-10-06T21:38:23Z'
                      last_status_change_by:
                        id: PXPGF42
                        type: user_reference
                        summary: Earline Greenholt
                        self: 'https://api.pagerduty.com/users/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      first_trigger_log_entry:
                        id: Q02JTSNZWHSEKV
                        type: trigger_log_entry_reference
                        summary: Triggered through the API
                        self: 'https://api.pagerduty.com/log_entries/Q02JTSNZWHSEKV?incident_id=PT4KHLK'
                        html_url: 'https://subdomain.pagerduty.com/incidents/PT4KHLK/log_entries/Q02JTSNZWHSEKV'
                      escalation_policy:
                        id: PT20YPA
                        type: escalation_policy_reference
                        summary: Another Escalation Policy
                        self: 'https://api.pagerduty.com/escalation_policies/PT20YPA'
                        html_url: 'https://subdomain.pagerduty.com/escalation_policies/PT20YPA'
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                      urgency: high
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/status_updates':
    post:
      x-pd-requires-scope: incidents.write
      tags:
        - Incidents
      operationId: createIncidentStatusUpdate
      description: |
        Create a new status update for the specified incident. Optionally pass `subject` and `html_message` properties in the request body to override the email notification that gets sent.

        An incident represents a problem or an issue that needs to be addressed and resolved.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#incidents)

        Scoped OAuth requires: `incidents.write`
      summary: Create a status update on an incident
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message to be posted as a status update.
                subject:
                  type: string
                  description: The subject to be sent for the custom html email status update. Required if sending custom html email.
                html_message:
                  type: string
                  description: The html content to be sent for the custom html email status update. Required if sending custom html email.
              required:
                - message
            examples:
              request:
                summary: Request Example
                value:
                  message: The server fire is spreading.
                  subject: Server Fire Update
                  html_message: <h1>Server is still on fire</h1>
      responses:
        '200':
          description: The new status update for the specified incident.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_update:
                    $ref: '#/components/schemas/StatusUpdate'
                required:
                  - status_update
              examples:
                response:
                  summary: Response Example
                  value:
                    status_update:
                      id: PWL7QXS
                      message: The server fire is spreading.
                      sender:
                        id: PXPGF42
                        type: user_reference
                        summary: Earline Greenholt
                        self: 'https://api.pagerduty.com/users/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      created_at: '2013-03-06T15:28:51-05:00'
                      html_message: <h1>Server is still on fire</h1>
                      subject: Server Fire Update
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/incidents/{id}/status_updates/subscribers':
    get:
      x-pd-requires-scope: subscribers.read
      summary: List Notification Subscribers
      tags:
        - Incidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      subscribers:
                        type: array
                        items:
                          $ref: '#/components/schemas/NotificationSubscriberWithContext'
                  - type: object
                    properties:
                      account_id:
                        type: string
                        description: The ID of the account belonging to the subscriber entity
              examples:
                response:
                  summary: Response Example
                  value:
                    limit: 100
                    more: false
                    offset: 0
                    subscribers:
                      - subscriber_id: PD1234
                        subscriber_type: user
                        has_indirect_subscription: false
                        subscribed_via: null
                      - subscriber_id: PD1234
                        subscriber_type: team
                        has_indirect_subscription: true
                        subscribed_via:
                          - id: PD1234
                            type: business_service
                    account_id: PD1234
                    total: 2
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      operationId: getIncidentNotificationSubscribers
      description: |
        Retrieve a list of Notification Subscribers on the Incident.

        <!-- theme: warning -->
        > Users must be added through `POST /incident/{id}/status_updates/subscribers` to be returned from this endpoint.
        Scoped OAuth requires: `subscribers.read`
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
    post:
      x-pd-requires-scope: subscribers.write
      summary: Add Notification Subscribers
      operationId: createIncidentNotificationSubscribers
      tags:
        - Incidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationSubscriptionWithContext'
              examples:
                response:
                  summary: Response Example
                  value:
                    subscriptions:
                      - account_id: PD1234
                        subscribable_id: PD1234
                        subscribable_type: incident
                        subscriber_id: PD1234
                        subscriber_type: user
                        result: success
                      - account_id: PD1234
                        subscribable_id: PD1234
                        subscribable_type: incident
                        subscriber_id: PD1234
                        subscriber_type: team
                        result: duplicate
                      - account_id: PD1234
                        subscribable_id: PD1235
                        subscribable_type: incident
                        subscriber_id: PD1234
                        subscriber_type: team
                        result: unauthorized
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      description: |
        Subscribe the given entities to Incident Status Update Notifications.

        Scoped OAuth requires: `subscribers.write`
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribers:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/NotificationSubscriber'
              required:
                - subscribers
            examples:
              request:
                summary: Request Example
                value:
                  subscribers:
                    - subscriber_id: PD1234
                      subscriber_type: team
                    - subscriber_id: PD1235
                      subscriber_type: team
                    - subscriber_id: PD1234
                      subscriber_type: user
        description: The entities to subscribe.
  '/incidents/{id}/status_updates/unsubscribe':
    post:
      x-pd-requires-scope: subscribers.write
      summary: Remove Notification Subscriber
      tags:
        - Incidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted_count:
                    type: number
                  unauthorized_count:
                    type: number
                  non_existent_count:
                    type: number
                required:
                  - deleted_count
                  - unauthorized_count
                  - non_existent_count
              examples:
                response:
                  summary: Response Example
                  value:
                    deleted_count: 1
                    unauthorized_count: 1
                    non_existent_count: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: removeIncidentNotificationSubscribers
      description: |
        Unsubscribes the matching Subscribers from Incident Status Update Notifications.

        Scoped OAuth requires: `subscribers.write`
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribers:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/NotificationSubscriber'
              required:
                - subscribers
            examples:
              request:
                summary: Request Example
                value:
                  subscribers:
                    - subscriber_id: PD1234
                      subscriber_type: team
                    - subscriber_id: PD1234
                      subscriber_type: user
        description: The entities to unsubscribe.
