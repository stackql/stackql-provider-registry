openapi: 3.0.2
servers:
  - url: 'https://api.pagerduty.com'
    description: PagerDuty V2 API.
info:
  contact:
    name: PagerDuty Support
    url: 'http://www.pagerduty.com/support'
    email: support@pagerduty.com
  version: 2.0.0
  title: PagerDuty API - users
  description: |
    Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
security:
  - api_key: []
tags:
  - name: Abilities
    description: |
      This describes your account's abilities by feature name. For example `"teams"`.
      An ability may be available to your account based on things like your pricing plan or account state.
  - name: Add-ons
    description: |
      Developers can write their own functionality to insert into PagerDuty's UI.
  - name: Analytics
    description: |
      Provides enriched incident data.
  - name: Apps
    description: ''
  - name: Audit
    description: |
      Provides audit record data.
  - name: Automation Actions
    description: |
      Automation Actions invoke jobs that are staged in Runbook Automation or Process Automation.
  - name: Paused Incident Reports
    description: |
      Provides paused Incident reporting data on services and accounts that have paused Alerts.
  - name: Business Services
    description: |
      Business services model capabilities that span multiple technical services and that may be owned by several different teams.
  - name: Custom Fields
    description: |
      Custom fields allow you to enrich PagerDuty incidents with critical and helpful metadata throughout the incident lifecycle.
  - name: Change Events
    description: |
      Change Events enable you to send informational events about recent changes such as code deploys and system config changes from any system that can make an outbound HTTP connection. These events do not create incidents and do not send notifications; they are shown in context with incidents on the same PagerDuty service.
  - name: Escalation Policies
    description: |
      Escalation policies define which user should be alerted at which time.
  - name: Event Orchestrations
    description: |
      Event Orchestrations allow you to route events to an endpoint and create collections of Event Orchestrations, which define sets of actions to take based on event content.
  - name: Extension Schemas
    description: |
      A PagerDuty extension vendor represents a specific type of outbound extension such as Generic Webhook, Slack, ServiceNow.
  - name: Extensions
    description: |
      Extensions are representations of Extension Schema objects that are attached to Services.
  - name: Incidents
    description: |
      An incident represents a problem or an issue that needs to be addressed and resolved. Incidents trigger on a service, which prompts notifications to go out to on-call responders per the service's escalation policy.
  - name: Incident Workflows
    description: |
      An Incident Workflow is a sequence of configurable Steps and associated Triggers that can execute automated Actions for a given Incident.
  - name: Licenses
    description: |
      Licenses are allocated to Users to allow for per-User access to PagerDuty functionality within an Account.
  - name: Log Entries
    description: |
      A log of all the events that happen to an Incident, and these are exposed as Log Entries.
  - name: Maintenance Windows
    description: |
      A Maintenance Window is used to temporarily disable one or more Services for a set period of time.
  - name: Notifications
    description: |
      A Notification is created when an Incident is triggered or escalated.
  - name: On-Calls
    description: |
      An on-call represents a contiguous unit of time for which a User will be on call for a given Escalation Policy and Escalation Rules
  - name: Priorities
    description: |
      A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.
  - name: Response Plays
    description: |
      Response Plays are a package of Incident Actions that can be applied during an Incident's life cycle.
  - name: Rulesets
    description: |
      Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.
  - name: Schedules
    description: |
      A Schedule determines the time periods that users are On-Call.
  - name: Service Dependencies
    description: |
      Services are categorized into technical and business services. Dependencies can be created via any combination of these services.
  - name: Services
    description: |
      A Service may represent an application, component, or team you wish to open incidents against.
  - name: Webhooks
    description: |
      A webhook is a way to receive events that occur on the PagerDuty platform via an HTTP POST request.
      V3 webhooks are set up by creating a webhook subscription.
  - name: Status Dashboards
    description: |
      Status Dashboards represent user-defined views for the Status Dashboard product that are limited to specific Business Services rather than the whole set of top-level Business Services (those with no dependent Services).
  - name: Tags
    description: |
      A Tag is applied to Escalation Policies, Teams or Users and can be used to filter them.
  - name: Teams
    description: |
      A team is a collection of Users and Escalation Policies that represent a group of people within an organization.
  - name: Templates
    description: |
      Templates is a new feature which will allow customers to create message templates to be leveraged by (but not limited to) status updates. The API will be secured to customers with the status updates entitlements.
  - name: Users
    description: |
      Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
  - name: Vendors
    description: |
      A PagerDuty Vendor represents a specific type of integration. AWS Cloudwatch, Splunk, Datadog are all examples of vendors
components:
  schemas:
    Pagination:
      type: object
      properties:
        offset:
          type: integer
          description: Echoes offset pagination property.
          readOnly: true
        limit:
          type: integer
          description: Echoes limit pagination property.
          readOnly: true
        more:
          type: boolean
          description: Indicates if there are additional records to return
          readOnly: true
        total:
          type: integer
          description: The total number of records matching the given query.
          nullable: true
          readOnly: true
    User:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          properties:
            name:
              type: string
              description: The name of the user.
              maxLength: 100
            type:
              type: string
              description: The type of object being created.
              default: user
              enum:
                - user
            email:
              type: string
              format: email
              description: The user's email address.
              minLength: 6
              maxLength: 100
            time_zone:
              type: string
              format: tzinfo
              description: 'The preferred time zone name. If null, the account''s time zone will be used.'
            color:
              type: string
              description: The schedule color.
            role:
              description: 'The user role. Account must have the `read_only_users` ability to set a user as a `read_only_user` or a `read_only_limited_user`, and must have advanced permissions abilities to set a user as `observer` or `restricted_access`.'
              type: string
              enum:
                - admin
                - limited_user
                - observer
                - owner
                - read_only_user
                - restricted_access
                - read_only_limited_user
                - user
            avatar_url:
              type: string
              format: url
              description: The URL of the user's avatar.
              readOnly: true
            description:
              type: string
              description: The user's bio.
              nullable: true
            invitation_sent:
              type: boolean
              readOnly: true
              description: 'If true, the user has an outstanding invitation.'
            job_title:
              type: string
              description: The user's title.
              maxLength: 100
            teams:
              type: array
              readOnly: true
              description: The list of teams to which the user belongs. Account must have the `teams` ability to set this.
              items:
                $ref: '#/components/schemas/TeamReference'
            contact_methods:
              type: array
              readOnly: true
              description: The list of contact methods for the user.
              items:
                $ref: '#/components/schemas/ContactMethodReference'
            notification_rules:
              readOnly: true
              type: array
              description: The list of notification rules for the user.
              items:
                $ref: '#/components/schemas/NotificationRuleReference'
            license:
              description: The License assigned to the User
              allOf:
                - $ref: '#/components/schemas/Reference'
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - license_reference
          required:
            - name
            - email
            - type
          example:
            type: user
            name: Earline Greenholt
            email: 125.greenholt.earline@graham.name
            time_zone: America/Lima
            color: green
            role: admin
            job_title: Director of Engineering
            avatar_url: 'https://secure.gravatar.com/avatar/1d1a39d4635208d5664082a6c654a73f.png?d=mm&r=PG'
            description: I'm the boss
    Tag:
      allOf:
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            summary:
              type: string
              nullable: true
              readOnly: true
              description: 'A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to `name`, though it is not intended to be an identifier.'
            type:
              type: string
              readOnly: true
              description: 'A string that determines the schema of the object. This must be the standard name for the entity, suffixed by `_reference` if the object is a reference.'
            self:
              type: string
              nullable: true
              readOnly: true
              format: url
              description: the API show URL at which the object is accessible
            html_url:
              type: string
              nullable: true
              readOnly: true
              format: url
              description: a URL at which the entity is uniquely displayed in the Web app
        - type: object
          properties:
            type:
              type: string
              description: The type of object being created.
              default: tag
              enum:
                - tag
            label:
              type: string
              description: The label of the tag.
              maxLength: 191
          required:
            - label
            - type
          example:
            type: tag
            label: Batman
    TeamReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - team_reference
    ContactMethodReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - email_contact_method_reference
                - phone_contact_method_reference
                - push_notification_contact_method_reference
                - sms_contact_method_reference
    NotificationRuleReference:
      allOf:
        - $ref: '#/components/schemas/Reference'
        - type: object
          properties:
            type:
              type: string
              enum:
                - assignment_notification_rule_reference
    Reference:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          required:
            - type
            - id
    AutomationActionsActionClassificationEnum:
      type: string
      enum:
        - diagnostic
        - remediation
      nullable: true
    AuditRecordResponseSchema:
      allOf:
        - type: object
          properties:
            records:
              type: array
              items:
                $ref: '#/components/schemas/AuditRecord'
            response_metadata:
              nullable: true
              anyOf:
                - $ref: '#/components/schemas/AuditMetadata'
          required:
            - records
        - $ref: '#/components/schemas/CursorPagination'
    AuditRecord:
      type: object
      readOnly: true
      description: An Audit Trail record
      properties:
        id:
          type: string
        self:
          type: string
          nullable: true
          description: Record URL.
        execution_time:
          type: string
          format: date-time
          description: 'The date/time the action executed, in ISO8601 format and millisecond precision.'
        execution_context:
          type: object
          description: Action execution context
          properties:
            request_id:
              type: string
              nullable: true
              description: Request Id
            remote_address:
              type: string
              nullable: true
              description: remote address
          nullable: true
        actors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Reference'
        method:
          type: object
          description: The method information
          properties:
            description:
              type: string
              nullable: true
            truncated_token:
              description: Truncated token containing the last 4 chars of the token's actual value.
              type: string
              nullable: true
              example: 3xyz
            type:
              $ref: '#/components/parameters/audit_method_type/schema'
          required:
            - type
        root_resource:
          $ref: '#/components/schemas/Reference'
        action:
          type: string
          example: create
        details:
          type: object
          nullable: true
          description: |
            Additional details to provide further information about the action or
            the resource that has been audited.
          properties:
            resource:
              $ref: '#/components/schemas/Reference'
            fields:
              description: |
                A set of fields that have been affected.
                The fields that have not been affected MAY be returned.
              type: array
              nullable: true
              items:
                type: object
                description: |
                  Information about the affected field.
                  When available, field's before and after values are returned:
                    
                  #### Resource creation
                  - `value` MAY be returned

                  #### Resource update
                  - `value` MAY be returned
                  - `before_value` MAY be returned

                  #### Resource deletion
                  - `before_value` MAY be returned
                properties:
                  name:
                    type: string
                    description: Name of the resource field
                    example: name
                  description:
                    type: string
                    nullable: true
                    description: Human readable description of the resource field
                    example: First and Last name
                  value:
                    type: string
                    nullable: true
                    description: new or updated value of the field
                    example: Jonathan
                  before_value:
                    type: string
                    nullable: true
                    description: previous or deleted value of the field
                    example: John
                required:
                  - name
            references:
              description: A set of references that have been affected.
              type: array
              nullable: true
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Name of the reference field
                    example: team_members
                  description:
                    type: string
                    nullable: true
                    description: Human readable description of the references field
                    example: First and Last name
                  added:
                    type: array
                    nullable: true
                    items:
                      $ref: '#/components/schemas/Reference'
                  removed:
                    type: array
                    nullable: true
                    items:
                      $ref: '#/components/schemas/Reference'
                required:
                  - name
          required:
            - resource
      required:
        - id
        - execution_time
        - method
        - root_resource
        - action
    AuditMetadata:
      type: object
      properties:
        messages:
          type: array
          nullable: true
          items:
            type: string
            example: Message about the result
    CursorPagination:
      type: object
      properties:
        limit:
          type: integer
          description: The minimum of the `limit` parameter used in the request or the maximum request size of the API.
          readOnly: true
        next_cursor:
          type: string
          description: |
            An opaque string than will deliver the next set of results when provided as the `cursor` parameter in a subsequent request.  A `null` value for this field indicates that there are no additional results.
          example: dXNlcjaVMzc5V0ZYTlo=
          nullable: true
          readOnly: true
      required:
        - limit
        - next_cursor
    PhoneContactMethod:
      description: 'The Phone Contact Method of the User, used for Voice or SMS.'
      allOf:
        - $ref: '#/components/schemas/ContactMethod'
        - type: object
          properties:
            type:
              type: string
              enum:
                - phone_contact_method
                - sms_contact_method
            country_code:
              type: integer
              description: The 1-to-3 digit country calling code.
              minimum: 1
              maximum: 1999
            enabled:
              type: boolean
              description: 'If true, this phone is capable of receiving SMS messages.'
              readOnly: true
            blacklisted:
              type: boolean
              description: 'If true, this phone has been blacklisted by PagerDuty and no messages will be sent to it.'
              readOnly: true
          required:
            - country_code
          example:
            type: phone_contact_method
            label: work
            country_code: 123
            address: '1234567'
    PushContactMethod:
      description: The Push Contact Method of the User.
      allOf:
        - $ref: '#/components/schemas/ContactMethod'
        - type: object
          properties:
            type:
              type: string
              enum:
                - push_notification_contact_method
            device_type:
              type: string
              description: The type of device.
              enum:
                - android
                - ios
              readOnly: true
            sounds:
              type: array
              items:
                $ref: '#/components/schemas/PushContactMethodSound'
            created_at:
              type: string
              format: date-time
              description: Time at which the contact method was created.
            blacklisted:
              type: boolean
              description: 'If true, this phone has been blacklisted by PagerDuty and no messages will be sent to it.'
              readOnly: true
          required:
            - device_type
          example:
            type: push_notification_contact_method
            label: work
            device_type: android
            address: '12341234'
    EmailContactMethod:
      description: The Email Contact Method of the User.
      allOf:
        - $ref: '#/components/schemas/ContactMethod'
        - type: object
          properties:
            type:
              type: string
              enum:
                - email_contact_method
            send_short_email:
              type: boolean
              description: Send an abbreviated email message instead of the standard email output. Useful for email-to-SMS gateways and email based pagers.
              default: false
          example:
            type: email_contact_method
            label: work
            address: grady.haylie.126@hickle.net
            send_short_email: false
    ContactMethod:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          description: The method to contact a user.
          properties:
            type:
              type: string
              description: The type of contact method being created.
              enum:
                - email_contact_method
                - phone_contact_method
                - push_notification_contact_method
                - sms_contact_method
            label:
              type: string
              description: 'The label (e.g., "Work", "Mobile", etc.).'
            address:
              type: string
              description: 'The "address" to deliver to: email, phone number, etc., depending on the type.'
          discriminator:
            propertyName: type
          required:
            - type
            - label
            - address
    PushContactMethodSound:
      type: object
      properties:
        type:
          type: string
          description: The type of sound.
          enum:
            - alert_high_urgency
            - alert_low_urgency
        file:
          type: string
          description: The sound file name.
    LicenseWithCounts:
      allOf:
        - type: object
          required:
            - id
            - description
            - name
            - valid_roles
          properties:
            id:
              type: string
              description: Uniquely identifies the resource
            description:
              type: string
              description: |
                Description of the License. May include the names of add-ons associated with
                the License, if there are any.
            name:
              type: string
              description: |
                Name of the License.
            valid_roles:
              type: array
              description: The roles a User with this License can have
              items:
                type: string
            role_group:
              type: string
              enum:
                - FullUser
                - Stakeholder
              description: Indicates whether this License is assignable to full or stakeholder Users
              example: FullUser
            type:
              type: string
              description: Type of object
            self:
              type: string
              description: API URL to access the License
            html_url:
              type: string
              description: HTML URL to access the License
            summary:
              type: string
              description: Summary of the License
        - type: object
          properties:
            current_value:
              type: integer
              description: How many of these Licenses are currently allocated to Users
            allocations_available:
              type: integer
              nullable: true
              description: |
                How many of these licenses are available to be allocated to a user. If this
                value is "null" then there is no limit on the number of allocations allowed.
    NotificationRule:
      allOf:
        - $ref: '#/components/schemas/Tag/allOf/0'
        - type: object
          description: A rule for contacting the user.
          properties:
            type:
              type: string
              description: The type of object being created.
              default: assignment_notification_rule
              enum:
                - assignment_notification_rule
            start_delay_in_minutes:
              type: integer
              description: 'The delay before firing the rule, in minutes.'
              minimum: 0
            contact_method:
              $ref: '#/components/schemas/ContactMethodReference'
            urgency:
              type: string
              enum:
                - high
                - low
              description: Which incident urgency this rule is used for. Account must have the `urgencies` ability to have a low urgency notification rule.
          required:
            - start_delay_in_minutes
            - urgency
            - contact_method
            - type
          example:
            type: assignment_notification_rule
            start_delay_in_minutes: 0
            contact_method:
              id: PXPGF42
              type: email_contact_method_reference
            urgency: high
    NotificationSubscription:
      title: NotificationSubscription
      description: An object describing the relationship of a NotificationSubscriber and a NotificationSubscribable.
      type: object
      properties:
        subscriber_id:
          type: string
          description: The ID of the entity being subscribed
        subscriber_type:
          type: string
          description: The type of the entity being subscribed
          enum:
            - user
            - team
        subscribable_id:
          type: string
          description: The ID of the entity being subscribed to
        subscribable_type:
          type: string
          description: The type of the entity being subscribed to
          enum:
            - incident
            - business_service
        account_id:
          type: string
          description: The ID of the account belonging to the subscriber entity
      x-examples:
        example-1:
          subscriber_id: string
          subscriber_type: user
          subscribable_id: string
          subscribable_type: incident
          account_id: string
    NotificationSubscriptionWithContext:
      title: NotificationSubscriptionWithContext
      type: object
      description: An object describing the relationship of a NotificationSubscriber and a NotificationSubscribable with additional context on status of subscription attempt.
      x-examples:
        example-1:
          subscriber_id: string
          subscriber_type: user
          subscribable_id: string
          subscribable_type: incident
          account_id: string
          result: success
      properties:
        subscriber_id:
          type: string
          description: The ID of the entity being subscribed
        subscriber_type:
          type: string
          enum:
            - user
            - team
          description: The type of the entity being subscribed
        subscribable_id:
          type: string
          description: The ID of the entity being subscribed to
        subscribable_type:
          type: string
          enum:
            - incident
            - business_service
          description: The type of the entity being subscribed to
        account_id:
          type: string
          description: The type of the entity being subscribed to
        result:
          type: string
          enum:
            - success
            - duplicate
            - unauthorized
          description: The resulting status of the subscription
    NotificationSubscribable:
      title: NotificationSubscribable
      description: A reference of a subscribable entity.
      type: object
      properties:
        subscribable_id:
          type: string
          description: The ID of the entity to subscribe to
        subscribable_type:
          type: string
          description: The type of the entity being subscribed to
          enum:
            - incident
            - business_service
      example:
        subscribable_id: PD1234
        subscribable_type: incident
    HandoffNotificationRule:
      type: object
      description: A rule for contacting the user for Handoff Notifications.
      properties:
        id:
          type: string
          readOnly: true
        notify_advance_in_minutes:
          type: integer
          description: 'The delay before firing the rule, in minutes.'
          minimum: 0
        handoff_type:
          type: string
          description: The type of handoff being created.
          default: both
          enum:
            - both
            - oncall
            - offcall
        contact_method:
          $ref: '#/components/schemas/ContactMethodReference'
      required:
        - id
        - handoff_type
        - contact_method
      example:
        id: PXPGF42
        notify_advance_in_minutes: 180
        handoff_type: both
        contact_method:
          id: PXPGF42
          type: email_contact_method_reference
    UserSession:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user_id:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: The date/time the user session was first created.
        type:
          type: string
          readOnly: true
          description: The type of the session
          enum:
            - browser
            - oauth
        summary:
          type: string
          readOnly: true
          description: The summary of the session
      required:
        - id
        - user_id
        - created_at
        - type
        - summary
      example:
        id: PXPGF42
        user_id: PXPGF42
        created_at: '2018-10-06T21:30:42Z'
        summary: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'
        type: browser
    StatusUpdateNotificationRule:
      type: object
      description: A rule for contacting the user for Incident Status Updates.
      properties:
        contact_method:
          $ref: '#/components/schemas/ContactMethodReference'
      required:
        - contact_method
      example:
        contact_method:
          id: PXPGF42
          type: email_contact_method_reference
  parameters:
    header_Accept:
      name: Accept
      description: The `Accept` header is used as a versioning header.
      in: header
      required: false
      schema:
        type: string
        default: application/vnd.pagerduty+json;version=2
    header_Content-Type:
      name: Content-Type
      in: header
      required: false
      schema:
        type: string
        default: application/json
        enum:
          - application/json
    audit_since:
      name: since
      in: query
      description: 'The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)'
      schema:
        type: string
        format: date-time
    audit_until:
      name: until
      in: query
      description: 'The end of the date range over which you want to search. If not specified, defaults to `now()`. May not be more than 31 days after `since`.'
      schema:
        type: string
        format: date-time
    audit_root_resource_types:
      name: 'root_resource_types[]'
      in: query
      description: Resource type filter for the root_resource.
      schema:
        type: string
        enum:
          - users
          - teams
          - schedules
          - escalation_policies
          - services
        example: users
    audit_actor_type:
      name: actor_type
      in: query
      description: Actor type filter.
      schema:
        type: string
        example: user_reference
    audit_actor_id:
      name: actor_id
      in: query
      description: Actor Id filter. Must be qualified by providing the `actor_type` param.
      schema:
        type: string
        example: P123456
    audit_method_type:
      name: method_type
      in: query
      description: Method type filter.
      schema:
        type: string
        description: |
          Describes the method used to perform the action:

          `browser` -- authenticated user session. Session value is not returned in the `truncated_token` field.

          `oauth` -- access token obtained via the OAuth flow. Truncated token value is returned in the `truncated_token` field.

          `api_token` -- Pagerduty API token. Truncated token value is returned in the `truncated_token` field.

          `identity_provider` -- action performed by an Identity provider on behalf of a user. No value is returned in the `truncated_token` field.

          `other` -- Method that does not fall in the predefined categories. Truncated token value MAY be returned in the `truncated_token` field.
        enum:
          - browser
          - oauth
          - api_token
          - identity_provider
          - other
    audit_method_truncated_token:
      name: method_truncated_token
      in: query
      description: Method truncated_token filter. Must be qualified by providing the `method_type` param.
      schema:
        type: string
        example: 3xyz
    audit_actions:
      name: 'actions[]'
      in: query
      description: Action filter
      schema:
        type: string
        description: |
          The action executed on the aggregate
        enum:
          - create
          - update
          - delete
    offset_limit:
      name: limit
      in: query
      required: false
      description: The number of results per page.
      schema:
        type: integer
    offset_offset:
      name: offset
      in: query
      required: false
      description: Offset to start pagination search results.
      schema:
        type: integer
    offset_total:
      name: total
      in: query
      required: false
      description: |
        By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.

        See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.
      schema:
        default: false
        type: boolean
    automation_actions_name:
      name: name
      description: Filters results to include the ones matching the name (case insensitive substring matching)
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_runners_include:
      name: 'include[]'
      in: query
      required: false
      description: Includes additional data elements into the response
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - associated_actions
          example: associated_actions
        uniqueItems: true
    automation_actions_runner_id:
      name: runner_id
      description: |
        Filters results to include the ones linked to the specified runner.
        Specifying the value `any` filters results to include the ones linked to runners only,
        thus omitting the results not linked to runners.
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_classification:
      name: classification
      description: Filters results to include the ones matching the specified classification (aka category)
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AutomationActionsActionClassificationEnum'
    automation_actions_action_type:
      name: action_type
      description: Filters results to include the ones matching the specified action type
      in: query
      required: false
      schema:
        type: string
        enum:
          - script
          - process_automation
        example: process_automation
    automation_actions_team_id:
      name: team_id
      description: Filters results to include the ones associated with the specified team.
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_service_id:
      name: service_id
      description: Filters results to include the ones associated with the specified service
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_invocation_state:
      name: invocation_state
      description: Invocation state
      in: query
      schema:
        type: string
        description: 'prepared -- the invocation exists and can be referenced, but is NOT available to a Runner <br> created -- the invocation exists and is waiting for a Runner <br> sent -- invocation sent to a Runner <br> queued -- invocation queued by a Runner <br> running -- invocation is being ran by a Runner <br> aborted -- invocation was aborted on a Runner <br> completed -- invocation completed on a Runner <br> error -- invocation encountered an error on a Runner'
        enum:
          - prepared
          - created
          - sent
          - queued
          - running
          - aborted
          - completed
          - error
        example: sent
    automation_actions_incident_id:
      name: incident_id
      description: Incident ID
      in: query
      required: true
      schema:
        type: string
        example: Q2LAR4ADCXC8IB
    past_incidents_limit:
      name: limit
      in: query
      required: false
      description: The number of results to be returned in the response.
      schema:
        type: integer
        default: 5
        minimum: 1
        maximum: 999
    past_incidents_total:
      name: total
      in: query
      required: false
      description: |
        By default the `total` field in the response body is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated with the total number of Past Incidents.
      schema:
        type: boolean
        default: false
    cursor_limit:
      name: limit
      in: query
      required: false
      description: The minimum of the `limit` parameter used in the request or the maximum request size of the API.
      schema:
        type: integer
    cursor_cursor:
      name: cursor
      in: query
      required: false
      description: |
        Optional parameter used to request the "next" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.
      schema:
        type: string
    early_access_analytics:
      schema:
        type: string
        default: analytics-v2
        enum:
          - analytics-v2
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!
      name: X-EARLY-ACCESS
      required: true
    early_access_status-update-notification-rules:
      name: X-EARLY-ACCESS
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!
      required: true
      schema:
        type: string
        default: status-update-notification-rules
        enum:
          - status-update-notification-rules
    early_access_bis:
      schema:
        type: string
        default: business-impact-early-access
      in: header
      name: X-EARLY-ACCESS
      description: 'This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!'
      required: true
    early_access_status_dashboards:
      schema:
        type: string
        default: status-dashboards
      in: header
      name: X-EARLY-ACCESS
      description: 'This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!'
      required: true
    webhooks_filter_type:
      name: filter_type
      in: query
      required: false
      description: The type of resource to filter upon.
      schema:
        enum:
          - service
          - team
        type: string
    webhooks_filter_id:
      name: filter_id
      in: query
      required: false
      description: The id of the resource to filter upon.
      schema:
        type: string
    id:
      name: id
      description: The ID of the resource.
      in: path
      required: true
      schema:
        type: string
    ids:
      name: 'ids[]'
      description: The IDs of the resources.
      in: query
      explode: true
      schema:
        type: string
    entity_type:
      name: entity_type
      in: path
      description: Type of entity related with the tag
      required: true
      schema:
        type: string
        enum:
          - users
          - teams
          - escalation_policies
    business_service_id:
      name: business_service_id
      in: path
      description: The business service ID.
      required: true
      schema:
        type: string
    team_id:
      name: team_id
      in: path
      description: The team ID
      required: true
      schema:
        type: string
    team_user_id:
      name: user_id
      in: path
      description: The user ID on the team.
      required: true
      schema:
        type: string
    team_escalation_policy_id:
      name: escalation_policy_id
      in: path
      description: The escalation policy ID on the team.
      required: true
      schema:
        type: string
    escalation_policy_escalation_rule_id:
      name: escalation_rule_id
      in: path
      description: The escalation rule ID on the escalation policy.
      required: true
      schema:
        type: string
    impacts_additional_fields:
      name: 'additional_fields[]'
      in: query
      description: Provides access to additional fields such as highest priority per business service and total impacted count
      explode: true
      schema:
        type: string
        enum:
          - services.highest_impacting_priority
          - total_impacted_count
    include_addon:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - services
        uniqueItems: true
    include_escalation_policy:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - services
          - teams
          - targets
        uniqueItems: true
    include_log_entry:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - incidents
          - services
          - channels
          - teams
        uniqueItems: true
    include_user:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - contact_methods
          - notification_rules
          - teams
          - subdomains
        uniqueItems: true
    include_maintenance_window:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - teams
          - services
          - users
        uniqueItems: true
    include_teams:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - privileges
        uniqueItems: true
    include_teams_members:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - users
        uniqueItems: true
    include_triggers:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - triggers
        uniqueItems: true
    sort_by_escalation_policy:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
        default: name
    sort_by_service:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
        default: name
    schedule_overflow:
      name: overflow
      in: query
      description: |
        Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow=true` is passed. This parameter defaults to false.
        For instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:


        - If you don't pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.
        - If you do pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.
      schema:
        type: boolean
        default: false
    schedule_override_id:
      name: override_id
      in: path
      description: The override ID on the schedule.
      required: true
      schema:
        type: string
    team_ids:
      name: 'team_ids[]'
      in: query
      description: An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    time_zone:
      name: time_zone
      in: query
      description: Time zone in which dates in the result will be rendered.
      schema:
        type: string
        format: tzinfo
        default: UTC
    service_id:
      name: service_id
      in: path
      description: The service ID
      required: true
      schema:
        type: string
    services:
      name: 'service_ids[]'
      in: query
      description: An array of service IDs. Only results related to these services will be returned.
      explode: true
      schema:
        type: array
        items:
          type: string
    integration_id:
      name: integration_id
      in: path
      description: The integration ID on the service.
      required: true
      schema:
        type: string
    integration_ids:
      name: 'integration_ids[]'
      in: query
      description: An array of integration IDs. Only results related to these integrations will be returned.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    log_entry_is_overview:
      name: is_overview
      in: query
      description: 'If `true`, will return a subset of log entries that show only the most important changes to the incident.'
      required: false
      schema:
        type: boolean
        default: false
    since:
      name: since
      in: query
      description: The start of the date range over which you want to search.
      schema:
        type: string
        format: date-time
    until:
      name: until
      in: query
      description: The end of the date range over which you want to search.
      schema:
        type: string
        format: date-time
    url_slug:
      name: url_slug
      in: path
      description: The `url_slug` for a status dashboard
      required: true
      schema:
        type: string
    date_range:
      name: date_range
      in: query
      description: 'When set to all, the since and until parameters and defaults are ignored.'
      schema:
        type: string
        enum:
          - all
    incident_key:
      name: incident_key
      in: query
      description: Incident de-duplication key. Incidents with child alerts do not have an incident key; querying by incident key will return incidents whose alerts have alert_key matching the given incident key.
      schema:
        type: string
    incident_services:
      name: 'service_ids[]'
      in: query
      description: Returns only the incidents associated with the passed service(s). This expects one or more service IDs.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    incident_assigned_to_user:
      name: 'user_ids[]'
      in: query
      description: 'Returns only the incidents currently assigned to the passed user(s). This expects one or more user IDs. Note: When using the assigned_to_user filter, you will only receive incidents with statuses of triggered or acknowledged. This is because resolved incidents are not assigned to any user.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    incident_urgencies:
      name: 'urgencies[]'
      in: query
      description: Array of the urgencies of the incidents to be returned. Defaults to all urgencies. Account must have the `urgencies` ability to do this.
      explode: true
      schema:
        type: string
        enum:
          - high
          - low
        uniqueItems: true
    from_header:
      name: From
      in: header
      description: The email address of a valid user associated with the account making the request.
      required: true
      schema:
        type: string
        format: email
    optional_from_header:
      name: From
      in: header
      description: 'The email address of a valid user associated with the account making the request. This is optional, and is only used for change tracking.'
      required: false
      schema:
        type: string
        format: email
    user_contact_method_id:
      name: contact_method_id
      in: path
      description: The contact method ID on the user.
      required: true
      schema:
        type: string
    user_notification_rule_id:
      name: notification_rule_id
      in: path
      description: The notification rule ID on the user.
      required: true
      schema:
        type: string
    user_status_update_notification_rule_id:
      name: status_update_notification_rule_id
      in: path
      description: The status update notification rule ID on the user.
      required: true
      schema:
        type: string
    oncall_handoff_notification_rule_id:
      name: oncall_handoff_notification_rule_id
      in: path
      description: The oncall handoff notification rule ID on the user.
      required: true
      schema:
        type: string
    session_id:
      name: session_id
      in: path
      description: The session ID for the user.
      required: true
      schema:
        type: string
    type:
      name: type
      in: path
      description: The session type for the user session ID.
      required: true
      schema:
        type: string
    alert_key:
      name: alert_key
      in: query
      description: Alert de-duplication key.
      schema:
        type: string
    response_play_id:
      name: response_play_id
      in: path
      description: The response play ID of the response play associated with the request.
      required: true
      schema:
        type: string
    query:
      name: query
      in: query
      description: 'Filters the result, showing only the records whose name matches the query.'
      required: false
      schema:
        type: string
    tag_query:
      name: query
      in: query
      description: 'Filters the result, showing only the tags whose label matches the query.'
      required: false
      schema:
        type: string
    addon_services:
      name: 'service_ids[]'
      in: query
      description: 'Filters the results, showing only Add-ons for the given services'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    addon_filter:
      name: filter
      in: query
      description: 'Filters the results, showing only Add-ons of the given type'
      schema:
        type: string
        enum:
          - full_page_addon
          - incident_show_addon
    change_since:
      name: since
      in: query
      description: 'The start of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.'
      schema:
        type: string
        format: date-time
        pattern: 'YYYY-MM-DDThh:mm:ssZ'
    change_until:
      name: until
      in: query
      description: 'The end of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.'
      schema:
        type: string
        format: date-time
        pattern: 'YYYY-MM-DDThh:mm:ssZ'
    user_ids_escalation_policies:
      name: 'user_ids[]'
      in: query
      description: 'Filters the results, showing only escalation policies on which any of the users is a target.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    extension_object_id:
      name: extension_object_id
      description: The id of the extension object you want to filter by.
      in: query
      schema:
        type: string
    extension_schema_id:
      name: extension_schema_id
      in: query
      description: Filter the extensions by extension vendor id.
      schema:
        type: string
    include_extensions:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - extension_objects
          - extension_schemas
        uniqueItems: true
    include_extensions_id:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - extension_schemas
          - extension_objects
          - temporarily_disabled
        uniqueItems: true
    include_incident_workflow_children:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - steps
          - team
        uniqueItems: true
    statuses_incidents:
      name: 'statuses[]'
      in: query
      description: 'Return only incidents with the given statuses. To query multiple statuses, pass `statuses[]` more than once, for example: `https://api.pagerduty.com/incidents?statuses[]=triggered&statuses[]=acknowledged`. (More status codes may be introduced in the future.)'
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - acknowledged
          - resolved
        uniqueItems: true
    sort_by_incidents:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (incident_number/created_at/resolved_at/urgency), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending. The account must have the `urgencies` ability to sort by the urgency.'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        maxItems: 2
        uniqueItems: true
    include_incidents:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - users
          - services
          - first_trigger_log_entries
          - escalation_policies
          - teams
          - assignees
          - acknowledgers
          - priorities
          - conference_bridge
        uniqueItems: true
    include_incident:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - field_values
        uniqueItems: true
    since_incidents:
      schema:
        type: string
      in: query
      name: since
      description: The start of the date range over which you want to search. Maximum range is 6 months and default is 1 month.
    until_incidents:
      schema:
        type: string
      in: query
      name: until
      description: The end of the date range over which you want to search. Maximum range is 6 months and default is 1 month.
    statuses_incident_alerts:
      name: 'statuses[]'
      in: query
      description: Return only alerts with the given statuses. (More status codes may be introduced in the future.)
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - resolved
        uniqueItems: true
    sort_by_incident_alerts:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (created_at/resolved_at), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending.'
      style: form
      explode: false
      schema:
        type: string
        enum:
          - created_at
          - resolved_at
          - 'created_at:asc'
          - 'created_at:desc'
          - 'resolved_at:asc'
          - 'resolved_at:desc'
        maxItems: 2
        uniqueItems: true
    include_incident_alerts:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - services
          - first_trigger_log_entries
          - incidents
        uniqueItems: true
    alert_id:
      name: alert_id
      in: path
      description: The id of the alert to retrieve.
      required: true
      schema:
        type: string
    statuses_incident_count:
      name: 'statuses[]'
      in: query
      description: 'Count only incidents with the requested statuses. `all` returns all statuses. If `any` is specified, there will be an additional `any` boolean field in the response that is true if there are any incidents matching the criteria in the request. If no statuses are provided, then only the total count of incidents is returned regardless of status. More status codes may be introduced in the future.'
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - acknowledged
          - resolved
          - any
          - all
        uniqueItems: true
    filter_maintenance_windows:
      name: filter
      in: query
      description: Only return maintenance windows in a given state.
      schema:
        type: string
        enum:
          - past
          - future
          - ongoing
          - open
          - all
    since_notifications:
      name: since
      in: query
      description: The start of the date range over which you want to search. The time element is optional.
      required: true
      schema:
        type: string
        format: date-time
    until_notifications:
      name: until
      in: query
      description: The end of the date range over which you want to search. This should be in the same format as since. The size of the date range must be less than 3 months.
      required: true
      schema:
        type: string
        format: date-time
    filter_notifications:
      name: filter
      in: query
      description: Return notification of this type only.
      schema:
        type: string
        enum:
          - sms_notification
          - email_notification
          - phone_notification
          - push_notification
    include_notifications:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - users
        uniqueItems: true
    include_oncalls:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - users
          - schedules
        uniqueItems: true
    user_ids_oncalls:
      name: 'user_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified user IDs.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    escalation_policy_ids_oncalls:
      name: 'escalation_policy_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified escalation policy IDs.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    schedule_ids_oncalls:
      name: 'schedule_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified schedule IDs. If `null` is provided in the array, it includes permanent on-calls due to direct user escalation targets.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    since_oncalls:
      name: since
      in: query
      description: 'The start of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. On-call shifts are limited to 90 days in the future.'
      schema:
        type: string
        format: date-time
    until_oncalls:
      name: until
      in: query
      description: 'The end of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. On-call shifts are limited to 90 days in the future, and the `until` time cannot be before the `since` time.'
      schema:
        type: string
        format: date-time
    earliest_oncalls:
      name: earliest
      in: query
      description: 'This will filter on-calls such that only the earliest on-call for each combination of escalation policy, escalation level, and user is returned. This is useful for determining when the "next" on-calls are for a given set of filters.'
      schema:
        type: boolean
    filter_for_manual_run:
      name: filter_for_manual_run
      in: query
      description: 'When this parameter is present, only those Response Plays that can be run manually will be returned.'
      schema:
        type: boolean
    rule_id:
      name: rule_id
      in: path
      description: The id of the Event Rule to retrieve.
      required: true
      schema:
        type: string
    since_schedules:
      name: since
      in: query
      description: The start of the date range over which you want to search.
      required: true
      schema:
        type: string
        format: date-time
    until_schedules:
      name: until
      in: query
      description: The end of the date range over which you want to search.
      required: true
      schema:
        type: string
        format: date-time
    editable_schedules:
      name: editable
      in: query
      description: 'When this parameter is present, only editable overrides will be returned. The result will only include the id of the override if this parameter is present. Only future overrides are editable.'
      schema:
        type: boolean
    overflow_schedules:
      name: overflow
      in: query
      description: 'Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter overflow=true is passed. This parameter defaults to false.'
      schema:
        type: boolean
    include_services:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - teams
          - integrations
          - auto_pause_notifications_parameters
        uniqueItems: true
    include_services_id:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - teams
          - auto_pause_notifications_parameters
          - integrations
        uniqueItems: true
    include_services_integrations:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - services
          - vendors
        uniqueItems: true
    reassignment_team:
      name: reassignment_team
      in: query
      description: |
        Team to reassign unresolved incident to.
        If an unresolved incident exists on both the reassignment team and
        the team being deleted, a duplicate will not be made. If not supplied,
        unresolved incidents will be made account-level.
      required: false
      schema:
        type: string
    include_notification_rules:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - contact_methods
        uniqueItems: true
    additional_details:
      name: 'additional_details[]'
      in: query
      description: Array of additional attributes to any of the returned incidents for related incidents.
      explode: true
      schema:
        type: string
        enum:
          - incident
        uniqueItems: true
    include_schedules:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - schedule_layers
        uniqueItems: true
    sort_by_event_orchestration:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - 'name:asc'
          - 'name:desc'
          - 'routes:asc'
          - 'routes:desc'
          - 'created_at:asc'
          - 'created_at:desc'
        default: 'name:asc'
    event_orchestration_id:
      name: id
      description: The ID of an Event Orchestration.
      in: path
      required: true
      schema:
        type: string
    event_orchestration_integration_id:
      name: integration_id
      description: The ID of an Integration.
      in: path
      required: true
      schema:
        type: string
    urgency:
      name: urgency
      in: query
      description: 'The incident urgency for which the notification rules are applied. If not specified, defaults to `high`.'
      explode: true
      schema:
        type: string
        enum:
          - high
          - low
          - all
        uniqueItems: true
    template_query:
      name: query
      description: Template name or description to search
      in: query
      schema:
        type: string
    template_type:
      name: template_type
      description: Filters templates by type.
      in: query
      schema:
        type: string
        default: status_update
    sort_by_template:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (name/created_at), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. Sort direction defaults to ascending.'
      style: form
      explode: false
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
          - created_at
          - 'created_at:asc'
          - 'created_at:desc'
        default: 'created_at:asc'
    schedule_since:
      name: since
      in: query
      description: The start of the date range over which you want to show schedule entries. Defaults to 2 weeks before until if an until is given.
      schema:
        type: string
        format: date-time
    schedule_until:
      name: until
      in: query
      description: The end of the date range over which you want to show schedule entries. Defaults to 2 weeks after since if a since is given.
      schema:
        type: string
        format: date-time
    paused_incident_reports_service_id:
      name: service_id
      in: query
      description: Specifies a filter to limit the scope of reporting to a particular service
      schema:
        type: string
        example: P123456
    paused_incident_reports_suspended_by:
      name: suspended_by
      in: query
      description: Specifies a filter to scope the response to either alerts suspended by Auto Pause or Event Rules.
      schema:
        enum:
          - auto_pause
          - rules
    triggers_filter_workflow_id:
      name: workflow_id
      description: 'If provided, only show triggers configured to start the given workflow. Useful for listing all services associated with the given workflow'
      in: query
      schema:
        type: string
        example: P4RG7YW
    triggers_filter_incident_id:
      name: incident_id
      description: 'If provided, only show triggers configured on the service of the given incident. Useful for finding manual triggers that are configured on the service for a specific incident. Cannot be specified if `service_id` is provided.'
      in: query
      schema:
        type: string
        example: Q2LAR4ADCXC8IB
    triggers_filter_service_id:
      name: service_id
      description: 'If provided, only show triggers configured for incidents in the given service. Useful for listing all workflows associated with the given service. Cannot be specified if `incident_id` is provided.'
      in: query
      schema:
        type: string
        example: P4RG7YW
    triggers_filter_trigger_type:
      name: trigger_type
      description: 'If provided, only show triggers of the given type. For example “manual” to search for manual triggers'
      in: query
      schema:
        type: string
        enum:
          - manual
          - conditional
    triggers_path_trigger_id:
      name: trigger_id
      description: Identifier for the Trigger
      required: true
      in: path
      schema:
        type: string
    triggers_path_service_id:
      name: service_id
      description: Identifier for the Service
      required: true
      in: path
      schema:
        type: string
    triggers_sort_by:
      name: sort_by
      description: 'If provided, returns triggers sorted by the specified property.'
      in: query
      schema:
        type: string
        enum:
          - workflow_id
          - workflow_id asc
          - workflow_id desc
          - workflow_name
          - workflow_name asc
          - workflow_name desc
    actions_filter_keyword:
      name: keyword
      description: 'If provided, only show actions tagged with the specified keyword'
      in: query
      schema:
        type: string
        example: slack
    include_customfields_field:
      name: 'include[]'
      description: Array of additional details to include.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_options
        uniqueItems: true
    include_customfields_schema:
      name: 'include[]'
      description: Array of additional details to include. Including `field_configurations` will also include full field details.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_configurations
        uniqueItems: true
    include_customfields_field_configuration:
      name: 'include[]'
      description: Array of additional details to include.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - fields
        uniqueItems: true
    include_customfields_incident_schema:
      name: 'include[]'
      description: Array of additional details to include. Including `field_options` will also include field options.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_options
        uniqueItems: true
    field_id:
      name: field_id
      description: The ID of the field.
      in: path
      required: true
      schema:
        type: string
    field_option_id:
      name: field_option_id
      description: The ID of the field option.
      in: path
      required: true
      schema:
        type: string
    schema_id:
      name: schema_id
      description: The ID of the schema.
      in: path
      required: true
      schema:
        type: string
    field_configuration_id:
      name: field_configuration_id
      description: The ID of the field configuration.
      in: path
      required: true
      schema:
        type: string
    customfields_query_schema_assignments_filter:
      name: filter
      description: One of service_id or schema_id is required.
      in: query
      required: true
      explode: true
      schema:
        type: object
        properties:
          service_id:
            type: string
          schema_id:
            type: string
        minProperties: 1
        maxProperties: 1
    early_access_customfields:
      name: X-EARLY-ACCESS
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!
      required: true
      schema:
        type: string
        default: flex-service-early-access
        enum:
          - flex-service-early-access
  responses:
    ArgumentError:
      description: Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    Unauthorized:
      description: |
        Caller did not supply credentials or did not provide the correct credentials.
        If you are using an API key, it may be invalid or your Authorization header may be malformed.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    Forbidden:
      description: |
        Caller is not authorized to view the requested resource.
        While your authentication is valid, the authenticated user or token does not have permission to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    TooManyRequests:
      description: 'Too many requests have been made, the rate limit has been reached.'
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    Conflict:
      description: The request conflicts with the current state of the server.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                    readOnly: true
                  message:
                    type: string
                    readOnly: true
                    description: Error message string
                  errors:
                    type: array
                    readOnly: true
                    items:
                      type: string
                      readOnly: true
                      description: Human-readable error details
                example:
                  message: Not Found
                  code: 2100
    PaymentRequired:
      description: |
        Account does not have the abilities to perform the action. Please review the response for the required abilities.
        You can also use the [Abilities API](#resource_Abilities) to determine what features are available to your account.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    NotFound:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    InternalServerError:
      description: Internal Server Error the PagerDuty server experienced an error.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    UnprocessableEntity:
      description: Unprocessable Entity. Some arguments failed validation checks.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
      description: The API Key with format `Token token=<API_KEY>`
  examples:
    AuditRecordResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORDID1_TEAM_CREATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 3usr
            root_resource:
              id: PXASDFE
              type: team_reference
              summary: my DevOps team
            action: create
            details:
              resource:
                id: PXASDFE
                type: team_reference
                summary: my DevOps team
              fields:
                - name: teamName
                  value: DevOps team
          - id: PDRECORDID2_USER_REMOVED_FROM_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PRY9M8B
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PRY9M8B
                type: team_reference
                summary: DevOps
              references:
                - name: members
                  removed:
                    - id: PRY9M8B
                      type: user_reference
                      summary: John Doe
          - id: PDRECORDID5_USERS_TEAM_ROLE_UPDATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PRY9M8B
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PDUSER
                type: user_reference
                summary: John Snow
              fields:
                - name: team_role
                  before_value: observer
                  value: manager
          - id: PDRECORDID3_USERS_NAME_AND_EMAIL_UPDATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: identity_provider
            root_resource:
              id: PDUSER
              type: user_reference
              summary: John Snow
            action: update
            details:
              resource:
                id: PDUSER
                type: user_reference
                summary: John Snow
              fields:
                - name: name
                  before_value: Bob Doe
                  value: Jon Snow
                - name: email
                  before_value: bob.doe@domain.com
                  value: john.snow@domain.com
          - id: PDRECORDID4_UPDATED_USERS_NOTIFICATION_RULE
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PDUSER
              type: user_reference
              summary: John Snow
            action: update
            details:
              resource:
                id: PXOGWUS
                type: assignment_notification_rule_reference
                summary: '0 minutes: channel P1IAAPZ'
              fields:
                - name: start_delay_in_minutes
                  before_value: '0'
                  value: '2'
              references:
                - name: contact_method
                  removed:
                    - id: POE6L88
                      type: push_notification_contact_method_reference
                      summary: Pixel 3
                  added:
                    - id: P4GTUMK
                      type: sms_contact_method_reference
                      summary: Mobile
        next_cursor: null
        limit: 10
    AuditRecordEscalationPolicyResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ASSIGN_TEAM_TO_ESCALATION_POLICY
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_TEAM123
                      summary: Devops
                      type: team_reference
                      self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                      html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
                  name: teams
              resource:
                id: PD_ESCALATION_ID
                summary: DevOps Escalation
                type: escalation_policy_reference
                self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
                html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
            execution_context:
              request_id: 0cc413fb-8e7d-4414-b4bc-b7578bf3ba77
            execution_time: '2021-01-05T16:33:52.026Z'
            method:
              type: browser
            root_resource:
              id: PD_ESCALATION_ID
              summary: DevOps Escalation
              type: escalation_policy_reference
              self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
              html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
          - id: PD_CREATE_ESCALATION_POLICY
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: DevOps Escalation
                - name: description
                  value: Escalation Policy for devops
                - name: num_loops
                  value: '1'
              resource:
                id: PD_ESCALATION_ID
                summary: DevOps Escalation
                type: escalation_policy_reference
                self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
                html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
            execution_context:
              request_id: 0cc413fb-8e7d-4414-b4bc-b7578bf3ba77
            execution_time: '2021-01-05T16:33:51.951Z'
            method:
              type: browser
            root_resource:
              id: PD_ESCALATION_ID
              summary: DevOps Escalation
              type: escalation_policy_reference
              self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
              html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
        limit: 10
        next_cursor: null
    AuditRecordScheduleResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ASSIGN_TEAM_TO_SCHEDULE
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_TEAM123
                      summary: Devops
                      type: team_reference
                      self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                      html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
                  name: teams
              resource:
                id: PD_SCHEDULE_ID
                summary: DevOps Schedule
                type: schedule_reference
                self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
                html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
            execution_context:
              request_id: 13a1c0c3-545c-4ebb-4115-662fff9d8ad
            execution_time: '2021-01-05T16:25:41.324Z'
            method:
              type: browser
            root_resource:
              id: PD_SCHEDULE_ID
              summary: DevOps Schedule
              type: schedule_reference
              self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
              html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
          - id: PD_CREATE_SCHEDULE
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: DevOps Schedule
                - name: description
                  value: Our DevOps Team Schedule
                - name: time_zone
                  value: America/New_York
              resource:
                id: PD_SCHEDULE_ID
                summary: DevOps Schedule
                type: schedule_reference
                self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
                html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
            execution_context:
              request_id: 13a1c0c3-545c-4ebb-4115-662fff9d8ad
            execution_time: '2021-01-05T16:25:41.315Z'
            method:
              type: browser
            root_resource:
              id: PD_SCHEDULE_ID
              summary: DevOps Schedule
              type: schedule_reference
              self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
              html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
        limit: 10
        next_cursor: null
    AuditRecordServiceResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORDID1_SERVICE_CREATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 3usr
            root_resource:
              id: PN2YA40
              type: service_reference
              summary: Documentation Hub
            action: create
            details:
              resource:
                id: PD_SERVICE_ID
                type: service_reference
                summary: Documentation Hub
              fields:
                - name: name
                  value: Documentation Hub
                - name: description
                  value: Centralized documentation
                - name: incident_severity
                  value: always_high
                - name: alert_creation
                  value: create_alerts_and_incidents
                - name: auto_resolve_timeout
                  value: ''
                - name: acknowledgement_timeout
                  value: ''
                - name: alert_grouping
                  value: null
                - name: alert_grouping_timeout
                  value: ''
              references:
                - name: escalation_policy
                  added:
                    - id: PD_SERVICE_ID
                      summary: Default
                      type: escalation_policy_reference
        next_cursor: null
        limit: 10
    AuditRecordTeamResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORD_USER_ROLE_ON_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: my DevOps team
              self: 'https://api.pagerduty.com/teams/PD_TEAM123'
              html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
            action: update
            details:
              resource:
                id: PD_ADMIN_USER123
                type: user_reference
                summary: AA Admin User
                self: 'https://api.pagerduty.com/users/PD_ADMIN_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_ADMIN_USER123'
              fields:
                - name: members.role
                  value: manager
          - id: PDRECORD_USER_ADDED_TO_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PD_TEAM123
                type: team_reference
                summary: DevOps
              references:
                - name: members
                  added:
                    - id: PD_ADMIN_USER123
                      type: user_reference
                      summary: AA Admin User
                      self: 'https://api.pagerduty.com/users/PD_ADMIN_USER123'
                      html_url: 'https://mydomain.pagerduty.com/users/PD_ADMIN_USER123'
          - id: PDRECORD_TEAM_CREATED
            execution_time: '2020-06-04T15:25:04.113Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: DevOps
              self: 'https://api.pagerduty.com/teams/PD_TEAM123'
              html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
            action: create
            details:
              resource:
                id: PD_TEAM123
                type: team_reference
                summary: DevOps
                self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
              fields:
                - name: name
                  value: DevOps
                - name: description
                  value: MyDevOps Team
                - name: default_role
                  value: manager
        next_cursor: null
        limit: 10
    AuditRecordUserResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ADD_HIGH_URGENCY_NOTIFICATION
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_NOTIFICATION_RULE_HIGH
                      summary: 'High Urgency (Email: Default)'
                      type: assignment_notification_rule_reference
                  name: notification_rules
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.343Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_HIGH_URGENCY_EMAIL_CONTACT
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: start_delay_in_minutes
                  value: '0'
                - name: urgency
                  value: high
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_method
              resource:
                id: PD_NOTIFICATION_RULE_HIGH
                summary: 'High Urgency (Email: Default)'
                type: assignment_notification_rule_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.343Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_LOW_URGENCY_EMAIL_RULE
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: start_delay_in_minutes
                  value: '0'
                - name: urgency
                  value: low
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_method
              resource:
                id: PD_NOTIFICATION_RULE_LOW
                summary: 'Low Urgency (Email: Default)'
                type: assignment_notification_rule_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.335Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_LOW_URGENCY_EMAIL_CONTACT
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_NOTIFICATION_RULE_LOW
                      summary: 'Low Urgency (Email: Default)'
                      type: assignment_notification_rule_reference
                  name: notification_rules
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.335Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_EMAIL_CONTACT_FOR_USER
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: label
                  value: Default
                - name: type
                  value: email_contact_method
                - name: address
                  value: testuser@testabc123.com
              resource:
                id: PD_CONTACT_METHOD
                summary: Default
                type: email_contact_method_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.327Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_EMAIL_CONTACT_TO_USER
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_methods
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.327Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_CREATE_USER
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: Test User
                - name: role
                  value: user
                - name: email
                  value: testuser@testabc123.com
                - name: time_zone
                  value: America/New_York
                - name: description
                  value: null
                - name: job_title
                  value: null
                - name: color
                  value: brown
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:31.708Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
        limit: 10
        next_cursor: null
    OrchestrationPathGlobalTypeResponse:
      summary: Example Response
      value:
        orchestration_path:
          type: global
          parent:
            id: b02e973d-9620-4e0a-9edc-00fedf7d4694
            self: 'https://api.pagerduty.com/event_orchestrations/b02e973d-9620-4e0a-9edc-00fedf7d4694'
            type: event_orchestration_reference
          self: 'https://api.pagerduty.com/event_orchestrations/b02e973d-9620-4e0a-9edc-00fedf7d4694/global'
          sets:
            - id: start
              rules:
                - label: Always apply some consistent event transformations to all events
                  id: c91f72f3
                  conditions: []
                  actions:
                    variables:
                      - name: hostname
                        path: event.component
                        value: 'hostname: (.*)'
                        type: regex
                    extractions:
                      - template: '{{variables.hostname}}'
                        target: event.custom_details.hostname
                      - source: event.source
                        regex: www (.*) service
                        target: event.source
                    route_to: step-two
            - id: step-two
              rules:
                - label: All critical alerts should be treated as P1 incidents
                  id: 7c54529d
                  conditions:
                    - expression: event.severity matches 'critical'
                  actions:
                    priority: P0IN2KQ
                    suppress: false
                - label: Drop all events from the very-noisy monitoring tool
                  id: 1f6d9a33
                  conditions:
                    - expression: event.source matches part 'very-noisy'
                  actions:
                    drop_event: true
                - label: Never bother the on-call for info-level events outside of work hours
                  id: cd770384
                  conditions:
                    - expression: 'event.severity matches ''info'' and not (now in Mon,Tue,Wed,Thu,Fri 09:00:00 to 17:00:00 America/Los_Angeles)'
                  actions:
                    suppress: true
          catch_all:
            actions:
              suppress: true
          created_at: '2021-11-18T16:42:01Z'
          created_by:
            id: P8B9WR8
            self: 'https://api.pagerduty.com/users/P8B9WR8'
            type: user_reference
          updated_at: '2021-11-18T16:42:01Z'
          updated_by:
            id: P8B9WR8
            self: 'https://api.pagerduty.com/users/P8B9WR8'
            type: user_reference
          version: rn1Mja13T1HBdmPChqFilSQXUW2fWXM_
    CreateSubscriptionExample:
      summary: Example
      value:
        webhook_subscription:
          delivery_method:
            type: http_delivery_method
            url: 'https://example.com/receive_a_pagerduty_webhook'
            custom_headers:
              - name: header-name
                value: header-value
          description: Sends PagerDuty v3 webhook events somewhere interesting.
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
          filter:
            id: P393ZNQ
            type: service_reference
          type: webhook_subscription
    GetSubscriptionExample:
      summary: Example
      value:
        webhook_subscription:
          delivery_method:
            id: PF9KMXH
            secret: null
            temporarily_disabled: false
            type: http_delivery_method
            url: 'https://example.com/receive_a_pagerduty_webhook'
            custom_headers:
              - name: your-header-name
                value: '-- redacted --'
          description: Sends PagerDuty v3 webhook events somewhere interesting.
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
          filter:
            id: P393ZNQ
            type: service_reference
          id: PY1OL64
          type: webhook_subscription
          active: true
    ListSubscriptionExample:
      summary: Example
      value:
        webhook_subscriptions:
          - delivery_method:
              id: PF9KMXH
              secret: null
              type: http_delivery_method
              url: 'https://example.com/receive_a_pagerduty_webhook'
              custom_headers:
                - name: your-header-name
                  value: '-- redacted --'
            description: Sends PagerDuty v3 webhook events somewhere interesting.
            events:
              - incident.acknowledged
              - incident.annotated
              - incident.delegated
              - incident.escalated
              - incident.priority_updated
              - incident.reassigned
              - incident.resolved
              - incident.responder.added
              - incident.responder.replied
              - incident.triggered
              - incident.unacknowledged
            filter:
              id: P393ZNQ
              type: service_reference
            id: PY1OL64
            type: webhook_subscription
            active: true
        limit: 25
        offset: 0
        total: null
        more: false
    PutSubscriptionExample:
      summary: Update Subscribed Events
      value:
        webhook_subscription:
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
  x-stackQL-resources:
    users:
      id: pagerduty.users.users
      name: users
      title: Users
      methods:
        list_users:
          operation:
            $ref: '#/paths/~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.users
        _list_users:
          operation:
            $ref: '#/paths/~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_user:
          operation:
            $ref: '#/paths/~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_user:
          operation:
            $ref: '#/paths/~1users~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.user
        _get_user:
          operation:
            $ref: '#/paths/~1users~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user:
          operation:
            $ref: '#/paths/~1users~1{id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_user:
          operation:
            $ref: '#/paths/~1users~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get_user'
          - $ref: '#/components/x-stackQL-resources/users/methods/list_users'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_user'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete_user'
    audit_records:
      id: pagerduty.users.audit_records
      name: audit_records
      title: Audit Records
      methods:
        list_users_audit_records:
          operation:
            $ref: '#/paths/~1users~1{id}~1audit~1records/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.records
        _list_users_audit_records:
          operation:
            $ref: '#/paths/~1users~1{id}~1audit~1records/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/audit_records/methods/list_users_audit_records'
        insert: []
        update: []
        delete: []
    contact_methods:
      id: pagerduty.users.contact_methods
      name: contact_methods
      title: Contact Methods
      methods:
        get_user_contact_methods:
          operation:
            $ref: '#/paths/~1users~1{id}~1contact_methods/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.methods
        _get_user_contact_methods:
          operation:
            $ref: '#/paths/~1users~1{id}~1contact_methods/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_user_contact_method:
          operation:
            $ref: '#/paths/~1users~1{id}~1contact_methods/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_user_contact_method:
          operation:
            $ref: '#/paths/~1users~1{id}~1contact_methods~1{contact_method_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.contact_method
        _get_user_contact_method:
          operation:
            $ref: '#/paths/~1users~1{id}~1contact_methods~1{contact_method_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user_contact_method:
          operation:
            $ref: '#/paths/~1users~1{id}~1contact_methods~1{contact_method_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_user_contact_method:
          operation:
            $ref: '#/paths/~1users~1{id}~1contact_methods~1{contact_method_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/contact_methods/methods/get_user_contact_method'
          - $ref: '#/components/x-stackQL-resources/contact_methods/methods/get_user_contact_methods'
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_methods/methods/create_user_contact_method'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_methods/methods/delete_user_contact_method'
    license:
      id: pagerduty.users.license
      name: license
      title: License
      methods:
        get_user_license:
          operation:
            $ref: '#/paths/~1users~1{id}~1license/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.license
        _get_user_license:
          operation:
            $ref: '#/paths/~1users~1{id}~1license/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/license/methods/get_user_license'
        insert: []
        update: []
        delete: []
    notification_rules:
      id: pagerduty.users.notification_rules
      name: notification_rules
      title: Notification Rules
      methods:
        get_user_notification_rules:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rules
        _get_user_notification_rules:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_user_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_user_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_rules~1{notification_rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.notification_rule
        _get_user_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_rules~1{notification_rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_rules~1{notification_rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_user_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_rules~1{notification_rule_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_rules/methods/get_user_notification_rule'
          - $ref: '#/components/x-stackQL-resources/notification_rules/methods/get_user_notification_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_rules/methods/create_user_notification_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notification_rules/methods/delete_user_notification_rule'
    notification_subscriptions:
      id: pagerduty.users.notification_subscriptions
      name: notification_subscriptions
      title: Notification Subscriptions
      methods:
        get_user_notification_subscriptions:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.subscriptions
        _get_user_notification_subscriptions:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_user_notification_subscriptions:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_subscriptions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unsubscribe_user_notification_subscriptions:
          operation:
            $ref: '#/paths/~1users~1{id}~1notification_subscriptions~1unsubscribe/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_subscriptions/methods/get_user_notification_subscriptions'
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_subscriptions/methods/create_user_notification_subscriptions'
        update: []
        delete: []
    oncall_handoff_notification_rules:
      id: pagerduty.users.oncall_handoff_notification_rules
      name: oncall_handoff_notification_rules
      title: Oncall Handoff Notification Rules
      methods:
        get_user_handoff_notification_rules:
          operation:
            $ref: '#/paths/~1users~1{id}~1oncall_handoff_notification_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.oncall_handoff_notification_rules
        _get_user_handoff_notification_rules:
          operation:
            $ref: '#/paths/~1users~1{id}~1oncall_handoff_notification_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_user_handoff_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1oncall_handoff_notification_rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_user_handoff_notifiaction_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1oncall_handoff_notification_rules~1{oncall_handoff_notification_rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.oncall_handoff_notification_rule
        _get_user_handoff_notifiaction_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1oncall_handoff_notification_rules~1{oncall_handoff_notification_rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user_handoff_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1oncall_handoff_notification_rules~1{oncall_handoff_notification_rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_user_handoff_notification:
          operation:
            $ref: '#/paths/~1users~1{id}~1oncall_handoff_notification_rules~1{oncall_handoff_notification_rule_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/oncall_handoff_notification_rules/methods/get_user_handoff_notifiaction_rule'
          - $ref: '#/components/x-stackQL-resources/oncall_handoff_notification_rules/methods/get_user_handoff_notification_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/oncall_handoff_notification_rules/methods/create_user_handoff_notification_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/oncall_handoff_notification_rules/methods/delete_user_handoff_notification_rule'
    sessions:
      id: pagerduty.users.sessions
      name: sessions
      title: Sessions
      methods:
        get_user_sessions:
          operation:
            $ref: '#/paths/~1users~1{id}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.sessions
        _get_user_sessions:
          operation:
            $ref: '#/paths/~1users~1{id}~1sessions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user_sessions:
          operation:
            $ref: '#/paths/~1users~1{id}~1sessions/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_user_session:
          operation:
            $ref: '#/paths/~1users~1{id}~1sessions~1{type}~1{session_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.user_session
        _get_user_session:
          operation:
            $ref: '#/paths/~1users~1{id}~1sessions~1{type}~1{session_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user_session:
          operation:
            $ref: '#/paths/~1users~1{id}~1sessions~1{type}~1{session_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/get_user_session'
          - $ref: '#/components/x-stackQL-resources/sessions/methods/get_user_sessions'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sessions/methods/delete_user_session'
          - $ref: '#/components/x-stackQL-resources/sessions/methods/delete_user_sessions'
    status_update_notification_rules:
      id: pagerduty.users.status_update_notification_rules
      name: status_update_notification_rules
      title: Status Update Notification Rules
      methods:
        get_user_status_update_notification_rules:
          operation:
            $ref: '#/paths/~1users~1{id}~1status_update_notification_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.rules
        _get_user_status_update_notification_rules:
          operation:
            $ref: '#/paths/~1users~1{id}~1status_update_notification_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_user_status_update_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1status_update_notification_rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_user_status_update_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1status_update_notification_rules~1{status_update_notification_rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.notification_rule
        _get_user_status_update_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1status_update_notification_rules~1{status_update_notification_rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user_status_update_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1status_update_notification_rules~1{status_update_notification_rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_user_status_update_notification_rule:
          operation:
            $ref: '#/paths/~1users~1{id}~1status_update_notification_rules~1{status_update_notification_rule_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/status_update_notification_rules/methods/get_user_status_update_notification_rule'
          - $ref: '#/components/x-stackQL-resources/status_update_notification_rules/methods/get_user_status_update_notification_rules'
        insert:
          - $ref: '#/components/x-stackQL-resources/status_update_notification_rules/methods/create_user_status_update_notification_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/status_update_notification_rules/methods/delete_user_status_update_notification_rule'
    me:
      id: pagerduty.users.me
      name: me
      title: Me
      methods:
        get_current_user:
          operation:
            $ref: '#/paths/~1users~1me/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.user
        _get_current_user:
          operation:
            $ref: '#/paths/~1users~1me/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/me/methods/get_current_user'
        insert: []
        update: []
        delete: []
paths:
  /users:
    get:
      x-pd-requires-scope: users.read
      tags:
        - Users
      operationId: listUsers
      description: |
        List users of your PagerDuty account, optionally filtered by a search query.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.read`
      summary: List users
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/team_ids'
        - $ref: '#/components/parameters/offset_limit'
        - $ref: '#/components/parameters/offset_offset'
        - $ref: '#/components/parameters/offset_total'
        - $ref: '#/components/parameters/include_user'
      responses:
        '200':
          description: A paginated array of users.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                    required:
                      - users
              examples:
                response:
                  summary: Response Example
                  value:
                    users:
                      - id: PXPGF42
                        type: user
                        summary: Earline Greenholt
                        self: 'https://api.pagerduty.com/users/PXPGF42'
                        html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                        name: Earline Greenholt
                        email: 125.greenholt.earline@graham.name
                        time_zone: America/Lima
                        color: green
                        role: admin
                        avatar_url: 'https://secure.gravatar.com/avatar/a8b714a39626f2444ee05990b078995f.png?d=mm&r=PG'
                        description: I'm the boss
                        invitation_sent: false
                        contact_methods:
                          - id: PTDVERC
                            type: email_contact_method_reference
                            summary: Default
                            self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PTDVERC'
                        notification_rules:
                          - id: P8GRWKK
                            type: assignment_notification_rule_reference
                            summary: Default
                            self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/P8GRWKK'
                            html_url: null
                        job_title: Director of Engineering
                        teams:
                          - id: PQ9K7I8
                            type: team_reference
                            summary: Engineering
                            self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                            html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                      - id: PAM4FGS
                        type: user
                        summary: Kyler Kuhn
                        self: 'https://api.pagerduty.com/users/PAM4FGS'
                        html_url: 'https://subdomain.pagerduty.com/users/PAM4FGS'
                        name: Kyler Kuhn
                        email: 126_dvm_kyler_kuhn@beahan.name
                        time_zone: Asia/Hong_Kong
                        color: red
                        role: admin
                        avatar_url: 'https://secure.gravatar.com/avatar/47857d059adacf9a41dc4030c2e14b0a.png?d=mm&r=PG'
                        description: 'Actually, I am the boss'
                        invitation_sent: false
                        contact_methods:
                          - id: PVMGSML
                            type: email_contact_method_reference
                            summary: Work
                            self: 'https://api.pagerduty.com/users/PAM4FGS/contact_methods/PVMGSMLL'
                        notification_rules:
                          - id: P8GRWKK
                            type: assignment_notification_rule_reference
                            summary: Default
                            self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/P8GRWKK'
                            html_url: null
                        job_title: Senior Engineer
                        teams:
                          - id: PQ9K7I8
                            type: team_reference
                            summary: Engineering
                            self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                            html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
                    limit: 25
                    offset: 0
                    more: false
                    total: null
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      x-pd-requires-scope: users.write
      tags:
        - Users
      operationId: createUser
      description: |
        Create a new user.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Create a user
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/from_header'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/User'
              required:
                - user
            examples:
              request:
                summary: Request Example
                value:
                  user:
                    type: user
                    name: Earline Greenholt
                    email: 125.greenholt.earline@graham.name
                    time_zone: America/Lima
                    color: green
                    role: admin
                    job_title: Director of Engineering
                    avatar_url: 'https://secure.gravatar.com/avatar/1d1a39d4635208d5664082a6c654a73f.png?d=mm&r=PG'
                    description: I'm the boss
                    license:
                      id: PTDVERC
                      type: license_reference
        description: The user to be created.
      responses:
        '201':
          description: The user that was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - user
              examples:
                response:
                  summary: Response Example
                  value:
                    user:
                      id: PXPGF42
                      type: user
                      summary: Earline Greenholt
                      self: 'https://api.pagerduty.com/users/PXPGF42'
                      html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      name: Earline Greenholt
                      email: 125.greenholt.earline@graham.name
                      time_zone: America/Lima
                      color: green
                      role: admin
                      avatar_url: 'https://secure.gravatar.com/avatar/a8b714a39626f2444ee05990b078995f.png?d=mm&r=PG'
                      description: I'm the boss
                      invitation_sent: false
                      contact_methods:
                        - id: PTDVERC
                          type: email_contact_method_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PTDVERC'
                      notification_rules:
                        - id: P8GRWKK
                          type: assignment_notification_rule_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/P8GRWKK'
                          html_url: null
                      job_title: Director of Engineering
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}':
    get:
      x-pd-requires-scope: users.read
      tags:
        - Users
      operationId: getUser
      description: |
        Get details about an existing user.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.read`
      summary: Get a user
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/include_user'
      responses:
        '200':
          description: The user requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - user
              examples:
                response:
                  summary: Response Example
                  value:
                    user:
                      id: PXPGF42
                      type: user
                      summary: Earline Greenholt
                      self: 'https://api.pagerduty.com/users/PXPGF42'
                      html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      name: Earline Greenholt
                      email: 125.greenholt.earline@graham.name
                      time_zone: America/Lima
                      color: green
                      role: admin
                      avatar_url: 'https://secure.gravatar.com/avatar/a8b714a39626f2444ee05990b078995f.png?d=mm&r=PG'
                      description: I'm the boss
                      invitation_sent: false
                      contact_methods:
                        - id: PTDVERC
                          type: email_contact_method_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PTDVERC'
                      notification_rules:
                        - id: P8GRWKK
                          type: assignment_notification_rule_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/P8GRWKK'
                          html_url: null
                      job_title: Director of Engineering
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      x-pd-requires-scope: users.write
      tags:
        - Users
      operationId: deleteUser
      description: |
        Remove an existing user.

        Returns 400 if the user has assigned incidents unless your [pricing plan](https://www.pagerduty.com/pricing) has the `offboarding` feature and the account is [configured](https://support.pagerduty.com/docs/offboarding#section-additional-configurations) appropriately.

        Note that the incidents reassignment process is asynchronous and has no guarantee to complete before the api call return.

        [*Learn more about `offboarding` feature*](https://support.pagerduty.com/docs/offboarding).

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Delete a user
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: The user was deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: users.write
      tags:
        - Users
      operationId: updateUser
      description: |
        Update an existing user.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Update a user
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  $ref: '#/components/schemas/User'
              required:
                - user
            examples:
              request:
                summary: Request Example
                value:
                  user:
                    type: user
                    name: Earline Greenholt
                    email: 125.greenholt.earline@graham.name
                    time_zone: America/Lima
                    color: green
                    role: admin
                    job_title: Director of Engineering
                    avatar_url: 'https://secure.gravatar.com/avatar/1d1a39d4635208d5664082a6c654a73f.png?d=mm&r=PG'
                    description: I'm the boss
                    license:
                      id: PTDVERC
                      type: license_reference
        description: The user to be updated.
      responses:
        '200':
          description: The user that was updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - user
              examples:
                response:
                  summary: Response Example
                  value:
                    user:
                      id: PXPGF42
                      type: user
                      summary: Earline Greenholt
                      self: 'https://api.pagerduty.com/users/PXPGF42'
                      html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      name: Earline Greenholt
                      email: 125.greenholt.earline@graham.name
                      time_zone: America/Lima
                      color: green
                      role: admin
                      avatar_url: 'https://secure.gravatar.com/avatar/a8b714a39626f2444ee05990b078995f.png?d=mm&r=PG'
                      description: I'm the boss
                      invitation_sent: false
                      contact_methods:
                        - id: PTDVERC
                          type: email_contact_method_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PTDVERC'
                      notification_rules:
                        - id: P8GRWKK
                          type: assignment_notification_rule_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/P8GRWKK'
                          html_url: null
                      job_title: Director of Engineering
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/audit/records':
    get:
      x-pd-requires-scope: audit_records.read
      tags:
        - Users
      operationId: listUsersAuditRecords
      summary: List audit records for a user
      description: |
        The response will include audit records with changes that are made to the identified user not changes made by the identified user.


        The returned records are sorted by the `execution_time` from newest to oldest.

        See [`Cursor-based pagination`](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for instructions on how to paginate through the result set.

        For more information see the [Audit API Document](https://developer.pagerduty.com/docs/rest-api-v2/audit-records-api/).

        Scoped OAuth requires: `audit_records.read`
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/cursor_limit'
        - $ref: '#/components/parameters/cursor_cursor'
        - $ref: '#/components/parameters/audit_since'
        - $ref: '#/components/parameters/audit_until'
      responses:
        '200':
          description: Records matching the query criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditRecordResponseSchema'
              examples:
                response:
                  $ref: '#/components/examples/AuditRecordUserResponse'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/users/{id}/contact_methods':
    get:
      x-pd-requires-scope: 'users:contact_methods.read'
      tags:
        - Users
      operationId: getUserContactMethods
      description: |
        List contact methods of your PagerDuty user.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.read`
      summary: List a user's contact methods
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: A list of contact methods.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact_methods:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/PhoneContactMethod'
                        - $ref: '#/components/schemas/PushContactMethod'
                        - $ref: '#/components/schemas/EmailContactMethod'
              examples:
                response:
                  summary: Response Example
                  value:
                    contact_methods:
                      - id: PXPGF42
                        type: email_contact_method
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_method/PXPGF42'
                        label: Work
                        address: grady.haylie.126@hickle.net
                        send_short_email: false
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      x-pd-requires-scope: 'users:contact_methods.write'
      tags:
        - Users
      operationId: createUserContactMethod
      description: |
        Create a new contact method for the User.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.write`
      summary: Create a user contact method
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_method:
                  oneOf:
                    - $ref: '#/components/schemas/PhoneContactMethod'
                    - $ref: '#/components/schemas/PushContactMethod'
                    - $ref: '#/components/schemas/EmailContactMethod'
              required:
                - contact_method
            examples:
              request:
                summary: Request Example
                value:
                  contact_method:
                    id: PXPGF42
                    type: email_contact_method
                    summary: Work
                    self: 'https://api.pagerduty.com/users/PXPGF42/contact_method/PXPGF42'
                    label: Work
                    address: grady.haylie.126@hickle.net
                    send_short_email: false
        description: The contact method to be created.
      responses:
        '201':
          description: The contact method that was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact_method:
                    oneOf:
                      - $ref: '#/components/schemas/PhoneContactMethod'
                      - $ref: '#/components/schemas/PushContactMethod'
                      - $ref: '#/components/schemas/EmailContactMethod'
              examples:
                response:
                  summary: Response Example
                  value:
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method
                      summary: Work
                      self: 'https://api.pagerduty.com/users/PXPGF42/contact_method/PXPGF42'
                      label: Work
                      address: grady.haylie.126@hickle.net
                      send_short_email: false
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/contact_methods/{contact_method_id}':
    get:
      x-pd-requires-scope: 'users:contact_methods.read'
      tags:
        - Users
      operationId: getUserContactMethod
      description: |
        Get details about a User's contact method.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.read`
      summary: Get a user's contact method
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_contact_method_id'
      responses:
        '200':
          description: The user's contact method requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact_method:
                    oneOf:
                      - $ref: '#/components/schemas/PhoneContactMethod'
                      - $ref: '#/components/schemas/PushContactMethod'
                      - $ref: '#/components/schemas/EmailContactMethod'
              examples:
                response:
                  summary: Response Example
                  value:
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method
                      summary: Work
                      self: 'https://api.pagerduty.com/users/PXPGF42/contact_method/PXPGF42'
                      label: Work
                      address: grady.haylie.126@hickle.net
                      send_short_email: false
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      x-pd-requires-scope: 'users:contact_methods.write'
      tags:
        - Users
      operationId: deleteUserContactMethod
      description: |
        Remove a user's contact method.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.write`
      summary: Delete a user's contact method
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_contact_method_id'
      responses:
        '204':
          description: The contact method was deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: 'users:contact_methods.write'
      tags:
        - Users
      operationId: updateUserContactMethod
      description: |
        Update a User's contact method.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.write`
      summary: Update a user's contact method
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_contact_method_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_method:
                  oneOf:
                    - $ref: '#/components/schemas/PhoneContactMethod'
                    - $ref: '#/components/schemas/PushContactMethod'
                    - $ref: '#/components/schemas/EmailContactMethod'
              required:
                - contact_method
            examples:
              request:
                summary: Request Example
                value:
                  contact_method:
                    id: PXPGF42
                    type: email_contact_method
                    summary: Work
                    self: 'https://api.pagerduty.com/users/PXPGF42/contact_method/PXPGF42'
                    label: Work
                    address: grady.haylie.126@hickle.net
                    send_short_email: false
        description: The user's contact method to be updated.
      responses:
        '200':
          description: The user's contact method that was updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contact_method:
                    oneOf:
                      - $ref: '#/components/schemas/PhoneContactMethod'
                      - $ref: '#/components/schemas/PushContactMethod'
                      - $ref: '#/components/schemas/EmailContactMethod'
              examples:
                response:
                  summary: Response Example
                  value:
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method
                      summary: Work
                      self: 'https://api.pagerduty.com/users/PXPGF42/contact_method/PXPGF42'
                      label: Work
                      address: grady.haylie.126@hickle.net
                      send_short_email: false
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/license':
    get:
      x-pd-requires-scope: licenses.read
      tags:
        - Users
      operationId: getUserLicense
      description: |
        Get the License allocated to a User

        Scoped OAuth requires: `licenses.read`
      summary: Get the License allocated to a User
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: The License allocated to the User
          content:
            application/json:
              schema:
                type: object
                properties:
                  license:
                    $ref: '#/components/schemas/LicenseWithCounts/allOf/0'
                required:
                  - license
              examples:
                response:
                  summary: Response Example
                  value:
                    license:
                      id: PIP248G
                      name: Business (Full User)
                      description: Event Intelligence
                      valid_roles:
                        - owner
                        - admin
                        - user
                        - limited_user
                        - observer
                        - restricted_access
                      role_group: FullUser
                      summary: Business (Full User)
                      type: license
                      self: null
                      html_url: null
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  '/users/{id}/notification_rules':
    get:
      x-pd-requires-scope: 'users:contact_methods.read'
      tags:
        - Users
      operationId: getUserNotificationRules
      description: |
        List notification rules of your PagerDuty user.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.read`
      summary: List a user's notification rules
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/include_notification_rules'
        - $ref: '#/components/parameters/urgency'
      responses:
        '200':
          description: A list of notification rules.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_rules:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationRule'
                required:
                  - notification_rules
              examples:
                response:
                  summary: Response Example
                  value:
                    notification_rules:
                      - id: PXPGF42
                        type: assignment_notification_rule
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/PPSCXAN'
                        start_delay_in_minutes: 0
                        contact_method:
                          id: PXPGF42
                          type: email_contact_method_reference
                          summary: Work
                          self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
                          html_url: null
                        created_at: '2016-02-01T16:06:27-05:00'
                        urgency: high
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      x-pd-requires-scope: 'users:contact_methods.write'
      tags:
        - Users
      operationId: createUserNotificationRule
      description: |
        Create a new notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.write`
      summary: Create a user notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_rule:
                  $ref: '#/components/schemas/NotificationRule'
              required:
                - notification_rule
            examples:
              request:
                summary: Request Example
                value:
                  notification_rule:
                    type: assignment_notification_rule
                    start_delay_in_minutes: 0
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method_reference
                    urgency: high
        description: The notification rule to be created.
      responses:
        '201':
          description: The notification rule that was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_rule:
                    $ref: '#/components/schemas/NotificationRule'
                required:
                  - notification_rule
              examples:
                response:
                  summary: Response Example
                  value:
                    notification_rule:
                      id: PXPGF42
                      type: assignment_notification_rule
                      summary: Work
                      self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/PPSCXAN'
                      start_delay_in_minutes: 0
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
                        html_url: null
                      created_at: '2016-02-01T16:06:27-05:00'
                      urgency: high
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/notification_rules/{notification_rule_id}':
    get:
      x-pd-requires-scope: 'users:contact_methods.read'
      tags:
        - Users
      operationId: getUserNotificationRule
      description: |
        Get details about a user's notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.read`
      summary: Get a user's notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_notification_rule_id'
        - $ref: '#/components/parameters/include_notification_rules'
      responses:
        '200':
          description: The user's notification rule requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_rule:
                    $ref: '#/components/schemas/NotificationRule'
                required:
                  - notification_rule
              examples:
                response:
                  summary: Response Example
                  value:
                    notification_rule:
                      id: PXPGF42
                      type: assignment_notification_rule
                      summary: Work
                      self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/PPSCXAN'
                      start_delay_in_minutes: 0
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
                      created_at: '2016-02-01T16:06:27-05:00'
                      urgency: high
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      x-pd-requires-scope: 'users:contact_methods.write'
      tags:
        - Users
      operationId: deleteUserNotificationRule
      description: |
        Remove a user's notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.write`
      summary: Delete a user's notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_notification_rule_id'
      responses:
        '204':
          description: The notification rule was deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: 'users:contact_methods.write'
      tags:
        - Users
      operationId: updateUserNotificationRule
      description: |
        Update a user's notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:contact_methods.write`
      summary: Update a user's notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_notification_rule_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                notification_rule:
                  $ref: '#/components/schemas/NotificationRule'
              required:
                - notification_rule
            examples:
              request:
                summary: Request Example
                value:
                  notification_rule:
                    type: assignment_notification_rule
                    start_delay_in_minutes: 0
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method_reference
                    urgency: high
        description: The user's notification rule to be updated.
      responses:
        '200':
          description: The user's notification rule that was updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_rule:
                    $ref: '#/components/schemas/NotificationRule'
              examples:
                response:
                  summary: Response Example
                  value:
                    notification_rule:
                      id: PXPGF42
                      type: assignment_notification_rule
                      summary: Work
                      self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/PPSCXAN'
                      start_delay_in_minutes: 0
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
                      created_at: '2016-02-01T16:06:27-05:00'
                      urgency: high
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/notification_subscriptions':
    get:
      x-pd-requires-scope: subscribers.read
      tags:
        - Users
      operationId: getUserNotificationSubscriptions
      description: |
        Retrieve a list of Notification Subscriptions the given User has.

        <!-- theme: warning -->
        > Users must be added through `POST /users/{id}/notification_subscriptions` to be returned from this endpoint.

        Scoped OAuth requires: `subscribers.read`
      summary: List Notification Subscriptions
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Pagination'
                  - type: object
                    properties:
                      subscriptions:
                        type: array
                        items:
                          type: object
                          properties:
                            subscription:
                              $ref: '#/components/schemas/NotificationSubscription'
                            subscribable_name:
                              type: string
                              nullable: true
                              description: The name of the subscribable
                    required:
                      - subscriptions
              examples:
                response:
                  summary: Response Example
                  value:
                    subscriptions:
                      - subscription:
                          subscriber_id: PD1234
                          subscriber_type: user
                          subscribable_id: PD1234
                          subscribable_type: incident
                          subscribable_name: null
                          account_id: PD1234
                      - subscription:
                          subscriber_id: PD1234
                          subscriber_type: user
                          subscribable_id: PD1234
                          subscribable_type: business_service
                          subscribable_name: business service name
                          account_id: PD1234
                    limit: 2
                    offset: 0
                    total: 1000
                    more: true
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      x-pd-requires-scope: subscribers.write
      summary: Create Notification Subcriptions
      operationId: createUserNotificationSubscriptions
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscriptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationSubscriptionWithContext'
              examples:
                response:
                  summary: Response Example
                  value:
                    subscriptions:
                      - account_id: PD1234
                        subscribable_id: PD1234
                        subscribable_type: incident
                        subscriber_id: PD1234
                        subscriber_type: user
                        result: success
                      - account_id: PD1234
                        subscribable_id: PD1234
                        subscribable_type: business_service
                        subscriber_id: PD1234
                        subscriber_type: user
                        result: duplicate
                      - account_id: PD1234
                        subscribable_id: PD1235
                        subscribable_type: business_service
                        subscriber_id: PD1234
                        subscriber_type: user
                        result: unauthorized
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      description: |
        Create new Notification Subscriptions for the given User.

        Scoped OAuth requires: `subscribers.write`
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribables:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/NotificationSubscribable'
              required:
                - subscribables
            examples:
              request:
                summary: Request Example
                value:
                  subscribables:
                    - subscribable_type: incident
                      subscribable_id: PD1234
                    - subscribable_type: business_service
                      subscribable_id: PD1234
                    - subscribable_type: business_service
                      subscribable_id: PD1235
        description: The entities to subscribe to.
  '/users/{id}/notification_subscriptions/unsubscribe':
    post:
      x-pd-requires-scope: subscribers.write
      summary: Remove Notification Subscriptions
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted_count:
                    type: number
                  unauthorized_count:
                    type: number
                  non_existent_count:
                    type: number
                required:
                  - deleted_count
                  - unauthorized_count
                  - non_existent_count
              examples:
                response:
                  summary: Response Example
                  value:
                    deleted_count: 1
                    unauthorized_count: 1
                    non_existent_count: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: unsubscribeUserNotificationSubscriptions
      description: |
        Unsubscribe the given User from Notifications on the matching Subscribable entities.

        Scoped OAuth requires: `subscribers.write`
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                subscribables:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/NotificationSubscribable'
              required:
                - subscribables
            examples:
              request:
                summary: Response Example
                value:
                  subscribables:
                    - subscribable_type: incident
                      subscribable_id: PD1234
                    - subscribable_type: business_service
                      subscribable_id: PD1234
        description: The entities to unsubscribe from.
  '/users/{id}/oncall_handoff_notification_rules':
    get:
      tags:
        - Users
      x-pd-requires-scope: users.read
      operationId: getUserHandoffNotificationRules
      description: |
        List Handoff Notification Rules of your PagerDuty User.
        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.read`
      summary: List a User's Handoff Notification Rules
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: A list of Handoff Notification Rules.
          content:
            application/json:
              schema:
                type: object
                properties:
                  oncall_handoff_notification_rules:
                    type: array
                    items:
                      $ref: '#/components/schemas/HandoffNotificationRule'
                required:
                  - oncall_handoff_notification_rules
              examples:
                response:
                  summary: Response Example
                  value:
                    oncall_handoff_notification_rules:
                      - id: PXPGF42
                        handoff_type: both
                        notify_advance_in_minutes: 0
                        contact_method:
                          id: PXPGF42
                          type: email_contact_method_reference
                          summary: Work
                          self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      tags:
        - Users
      x-pd-requires-scope: users.write
      operationId: createUserHandoffNotificationRule
      description: |
        Create a new Handoff Notification Rule.
        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Create a User Handoff Notification Rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oncall_handoff_notification_rule:
                  $ref: '#/components/schemas/HandoffNotificationRule'
              required:
                - oncall_handoff_notification_rule
            examples:
              request:
                summary: Request Example
                value:
                  oncall_handoff_notification_rule:
                    id: PXPGF43
                    handoff_type: both
                    notify_advance_in_minutes: 180
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method_reference
        description: The Handoff Notification Rule to be created.
      responses:
        '201':
          description: The Handoff Notification Rule that was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  oncall_handoff_notification_rule:
                    $ref: '#/components/schemas/HandoffNotificationRule'
                required:
                  - oncall_handoff_notification_rule
              examples:
                response:
                  summary: Response Example
                  value:
                    oncall_handoff_notification_rule:
                      id: PXPGF42
                      handoff_type: both
                      notify_advance_in_minutes: 180
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/oncall_handoff_notification_rules/{oncall_handoff_notification_rule_id}':
    get:
      tags:
        - Users
      x-pd-requires-scope: users.read
      operationId: getUserHandoffNotifiactionRule
      description: |
        Get details about a User's Handoff Notification Rule.
        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.read`
      summary: Get a user's handoff notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/oncall_handoff_notification_rule_id'
      responses:
        '200':
          description: The user's handoff notification rule requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  oncall_handoff_notification_rule:
                    $ref: '#/components/schemas/HandoffNotificationRule'
                required:
                  - oncall_handoff_notification_rule
              examples:
                response:
                  summary: Response Example
                  value:
                    oncall_handoff_notification_rule:
                      id: PXPGF42
                      handoff_type: both
                      notify_advance_in_minutes: 60
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      tags:
        - Users
      x-pd-requires-scope: users.write
      operationId: deleteUserHandoffNotificationRule
      description: |
        Remove a User's Handoff Notification Rule.
        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Delete a User's Handoff Notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/oncall_handoff_notification_rule_id'
      responses:
        '204':
          description: The handoff notification rule was deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      tags:
        - Users
      x-pd-requires-scope: users.write
      operationId: updateUserHandoffNotification
      description: |
        Update a User's Handoff Notification Rule.
        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Update a User's Handoff Notification Rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/oncall_handoff_notification_rule_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oncall_handoff_notification_rule:
                  $ref: '#/components/schemas/HandoffNotificationRule'
              required:
                - oncall_handoff_notification_rule
            examples:
              request:
                summary: Request Example
                value:
                  oncall_handoff_notification_rule:
                    id: PXPGF42
                    handoff_type: both
                    notify_advance_in_minutes: 60
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method_reference
        description: The User's Handoff Notification Rule to be updated.
      responses:
        '200':
          description: The User's Handoff Notification Rule that was updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  oncall_handoff_notification_rule:
                    $ref: '#/components/schemas/HandoffNotificationRule'
              examples:
                response:
                  summary: Response Example
                  value:
                    oncall_handoff_notification_rule:
                      id: PXPGF42
                      handoff_type: oncall
                      notify_advance_in_minutes: 30
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/sessions':
    get:
      x-pd-requires-scope: 'users:sessions.read'
      tags:
        - Users
      operationId: getUserSessions
      description: |
        List active sessions of a PagerDuty user.

        Beginning November 2021, active sessions no longer includes newly issued OAuth tokens.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:sessions.read`
      summary: List a user's active sessions
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: A list of the user's active sessions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_sessions:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserSession'
                required:
                  - user_sessions
              examples:
                response:
                  summary: Response Example
                  value:
                    user_sessions:
                      - id: PXPGF42
                        user_id: PXPGF42
                        created_at: '2018-10-06T21:30:42Z'
                        summary: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'
                        type: browser
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      x-pd-requires-scope: 'users:sessions.write'
      tags:
        - Users
      operationId: deleteUserSessions
      description: |
        Delete all user sessions.

        Beginning November 2021, user sessions no longer includes newly issued OAuth tokens.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:sessions.write`
      summary: Delete all user sessions
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: The user sessions were all deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/sessions/{type}/{session_id}':
    get:
      x-pd-requires-scope: 'users:sessions.read'
      tags:
        - Users
      operationId: getUserSession
      description: |
        Get details about a user's session.

        Beginning November 2021, user sessions no longer includes newly issued OAuth tokens.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:sessions.read`
      summary: Get a user's session
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/session_id'
      responses:
        '200':
          description: The user's session requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_session:
                    $ref: '#/components/schemas/UserSession'
                required:
                  - user_session
              examples:
                response:
                  summary: Response Example
                  value:
                    user_session:
                      id: PXPGF42
                      user_id: PXPGF42
                      created_at: '2018-10-06T21:30:42Z'
                      summary: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36'
                      type: browser
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      x-pd-requires-scope: 'users:sessions.write'
      tags:
        - Users
      operationId: deleteUserSession
      description: |
        Delete a user's session.

        Beginning November 2021, user sessions no longer includes newly issued OAuth tokens.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users:sessions.write`
      summary: Delete a user's session
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/session_id'
      responses:
        '204':
          description: The user session was deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/status_update_notification_rules':
    get:
      x-pd-requires-scope: users.read
      tags:
        - Users
      operationId: getUserStatusUpdateNotificationRules
      description: |
        List status update notification rules of your PagerDuty user.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.read`
      summary: List a user's status update notification rules
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/early_access_status-update-notification-rules'
        - $ref: '#/components/parameters/include_notification_rules'
      responses:
        '200':
          description: A list of status update notification rules.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_update_notification_rules:
                    type: array
                    items:
                      $ref: '#/components/schemas/StatusUpdateNotificationRule'
                required:
                  - status_update_notification_rules
              examples:
                response:
                  summary: Response Example
                  value:
                    status_update_notification_rules:
                      - id: PXPGF42
                        type: status_update_notification_rule
                        summary: contact method PXPGF42 used as status_update_notification_rule
                        self: 'https://api.pagerduty.com/users/PXPGF42/status_update_notification_rules/PPSCXAN'
                        contact_method:
                          id: PXPGF42
                          type: email_contact_method_reference
                          summary: Work
                          self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
                          html_url: null
                        created_at: '2016-02-01T16:06:27-05:00'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      x-pd-requires-scope: users.write
      tags:
        - Users
      operationId: createUserStatusUpdateNotificationRule
      description: |
        Create a new status update notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Create a user status update notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/early_access_status-update-notification-rules'
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                status_update_notification_rule:
                  $ref: '#/components/schemas/StatusUpdateNotificationRule'
              required:
                - status_update_notification_rule
            examples:
              request:
                summary: Request Example
                value:
                  status_update_notification_rule:
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method_reference
        description: The status update notification rule to be created.
      responses:
        '201':
          description: The status update notification rule that was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_update_notification_rule:
                    $ref: '#/components/schemas/StatusUpdateNotificationRule'
                required:
                  - status_update_notification_rule
              examples:
                response:
                  summary: Response Example
                  value:
                    status_update_notification_rule:
                      id: PXPGF42
                      type: status_update_notification_rule
                      summary: contact method PXPGF42 used as status_update_notification_rule
                      self: 'https://api.pagerduty.com/users/PXPGF42/status_update_notification_rules/PPSCXAN'
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
                        html_url: null
                      created_at: '2016-02-01T16:06:27-05:00'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/users/{id}/status_update_notification_rules/{status_update_notification_rule_id}':
    get:
      x-pd-requires-scope: users.read
      tags:
        - Users
      operationId: getUserStatusUpdateNotificationRule
      description: |
        Get details about a user's status update notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.read`
      summary: Get a user's status update notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/early_access_status-update-notification-rules'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_status_update_notification_rule_id'
        - $ref: '#/components/parameters/include_notification_rules'
      responses:
        '200':
          description: The user's status update notification rule requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_rule:
                    $ref: '#/components/schemas/StatusUpdateNotificationRule'
                required:
                  - notification_rule
              examples:
                response:
                  summary: Response Example
                  value:
                    notification_rule:
                      id: PXPGF42
                      type: status_update_notification_rule
                      summary: contact method PXPGF42 used as status_update_notification_rule
                      self: 'https://api.pagerduty.com/users/PXPGF42/status_update_notification_rules/PPSCXAN'
                      contact_method:
                        id: PTDVERC
                        type: email_contact_method_reference
                        summary: Default
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PTDVERC'
                        html_url: null
                      created_at: '2016-02-01T16:06:27-05:00'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      x-pd-requires-scope: users.write
      tags:
        - Users
      operationId: deleteUserStatusUpdateNotificationRule
      description: |
        Remove a user's status update notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Delete a user's status update notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/early_access_status-update-notification-rules'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_status_update_notification_rule_id'
      responses:
        '204':
          description: The status update notification rule was deleted successfully.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      x-pd-requires-scope: users.write
      tags:
        - Users
      operationId: updateUserStatusUpdateNotificationRule
      description: |
        Update a user's status update notification rule.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)

        Scoped OAuth requires: `users.write`
      summary: Update a user's status update notification rule
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/early_access_status-update-notification-rules'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/user_status_update_notification_rule_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status_update_notification_rule:
                  $ref: '#/components/schemas/StatusUpdateNotificationRule'
              required:
                - status_update_notification_rule
            examples:
              request:
                summary: Request Example
                value:
                  status_update_notification_rule:
                    contact_method:
                      id: PXPGF42
                      type: email_contact_method_reference
        description: The user's status update notification rule to be updated.
      responses:
        '200':
          description: The user's status update notification rule that was updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_rule:
                    $ref: '#/components/schemas/StatusUpdateNotificationRule'
              examples:
                response:
                  summary: Response Example
                  value:
                    status_update_notification_rule:
                      id: PXPGF42
                      type: status_update_notification_rule
                      summary: contact method PXPGF42 used as status_update_notification_rule
                      self: 'https://api.pagerduty.com/users/PXPGF42/status_update_notification_rules/PPSCXAN'
                      contact_method:
                        id: PXPGF42
                        type: email_contact_method_reference
                        summary: Work
                        self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PXPGF42'
                        html_url: null
                      created_at: '2016-02-01T16:06:27-05:00'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          $ref: '#/components/responses/PaymentRequired'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /users/me:
    get:
      tags:
        - Users
      operationId: getCurrentUser
      description: |
        Get details about the current user.

        This endpoint can only be used with a [user-level API key](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or a key generated through an OAuth flow. This will not work if the request is made with an account-level access token.

        Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.

        For more information see the [API Concepts Document](../../api-reference/ZG9jOjI3NDc5Nzc-api-concepts#users)
      summary: Get the current user
      parameters:
        - $ref: '#/components/parameters/header_Accept'
        - $ref: '#/components/parameters/header_Content-Type'
        - $ref: '#/components/parameters/include_user'
      responses:
        '200':
          description: The requesting user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - user
              examples:
                response:
                  summary: Response Example
                  value:
                    user:
                      id: PXPGF42
                      type: user
                      summary: Earline Greenholt
                      self: 'https://api.pagerduty.com/users/PXPGF42'
                      html_url: 'https://subdomain.pagerduty.com/users/PXPGF42'
                      name: Earline Greenholt
                      email: 125.greenholt.earline@graham.name
                      time_zone: America/Lima
                      color: green
                      role: admin
                      avatar_url: 'https://secure.gravatar.com/avatar/a8b714a39626f2444ee05990b078995f.png?d=mm&r=PG'
                      description: null
                      invitation_sent: false
                      job_title: Director of Engineering
                      contact_methods:
                        - id: PTDVERC
                          type: email_contact_method_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/contact_methods/PTDVERC'
                          html_url: null
                      notification_rules:
                        - id: P8GRWKK
                          type: assignment_notification_rule_reference
                          summary: Default
                          self: 'https://api.pagerduty.com/users/PXPGF42/notification_rules/PTDVERC'
                          html_url: null
                      teams:
                        - id: PQ9K7I8
                          type: team_reference
                          summary: Engineering
                          self: 'https://api.pagerduty.com/teams/PQ9K7I8'
                          html_url: 'https://subdomain.pagerduty.com/teams/PQ9K7I8'
        '400':
          $ref: '#/components/responses/ArgumentError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
