openapi: 3.0.2
servers:
  - url: 'https://api.pagerduty.com'
    description: PagerDuty V2 API.
info:
  contact:
    name: PagerDuty Support
    url: 'http://www.pagerduty.com/support'
    email: support@pagerduty.com
  version: 2.0.0
  title: PagerDuty API - analytics
  description: |
    Provides enriched incident data.
security:
  - api_key: []
tags:
  - name: Abilities
    description: |
      This describes your account's abilities by feature name. For example `"teams"`.
      An ability may be available to your account based on things like your pricing plan or account state.
  - name: Add-ons
    description: |
      Developers can write their own functionality to insert into PagerDuty's UI.
  - name: Analytics
    description: |
      Provides enriched incident data.
  - name: Apps
    description: ''
  - name: Audit
    description: |
      Provides audit record data.
  - name: Automation Actions
    description: |
      Automation Actions invoke jobs that are staged in Runbook Automation or Process Automation.
  - name: Paused Incident Reports
    description: |
      Provides paused Incident reporting data on services and accounts that have paused Alerts.
  - name: Business Services
    description: |
      Business services model capabilities that span multiple technical services and that may be owned by several different teams.
  - name: Custom Fields
    description: |
      Custom fields allow you to enrich PagerDuty incidents with critical and helpful metadata throughout the incident lifecycle.
  - name: Change Events
    description: |
      Change Events enable you to send informational events about recent changes such as code deploys and system config changes from any system that can make an outbound HTTP connection. These events do not create incidents and do not send notifications; they are shown in context with incidents on the same PagerDuty service.
  - name: Escalation Policies
    description: |
      Escalation policies define which user should be alerted at which time.
  - name: Event Orchestrations
    description: |
      Event Orchestrations allow you to route events to an endpoint and create collections of Event Orchestrations, which define sets of actions to take based on event content.
  - name: Extension Schemas
    description: |
      A PagerDuty extension vendor represents a specific type of outbound extension such as Generic Webhook, Slack, ServiceNow.
  - name: Extensions
    description: |
      Extensions are representations of Extension Schema objects that are attached to Services.
  - name: Incidents
    description: |
      An incident represents a problem or an issue that needs to be addressed and resolved. Incidents trigger on a service, which prompts notifications to go out to on-call responders per the service's escalation policy.
  - name: Incident Workflows
    description: |
      An Incident Workflow is a sequence of configurable Steps and associated Triggers that can execute automated Actions for a given Incident.
  - name: Licenses
    description: |
      Licenses are allocated to Users to allow for per-User access to PagerDuty functionality within an Account.
  - name: Log Entries
    description: |
      A log of all the events that happen to an Incident, and these are exposed as Log Entries.
  - name: Maintenance Windows
    description: |
      A Maintenance Window is used to temporarily disable one or more Services for a set period of time.
  - name: Notifications
    description: |
      A Notification is created when an Incident is triggered or escalated.
  - name: On-Calls
    description: |
      An on-call represents a contiguous unit of time for which a User will be on call for a given Escalation Policy and Escalation Rules
  - name: Priorities
    description: |
      A priority is a label representing the importance and impact of an incident. This feature is only available on Standard and Enterprise plans.
  - name: Response Plays
    description: |
      Response Plays are a package of Incident Actions that can be applied during an Incident's life cycle.
  - name: Rulesets
    description: |
      Rulesets allow you to route events to an endpoint and create collections of Event Rules, which define sets of actions to take based on event content.
  - name: Schedules
    description: |
      A Schedule determines the time periods that users are On-Call.
  - name: Service Dependencies
    description: |
      Services are categorized into technical and business services. Dependencies can be created via any combination of these services.
  - name: Services
    description: |
      A Service may represent an application, component, or team you wish to open incidents against.
  - name: Webhooks
    description: |
      A webhook is a way to receive events that occur on the PagerDuty platform via an HTTP POST request.
      V3 webhooks are set up by creating a webhook subscription.
  - name: Status Dashboards
    description: |
      Status Dashboards represent user-defined views for the Status Dashboard product that are limited to specific Business Services rather than the whole set of top-level Business Services (those with no dependent Services).
  - name: Tags
    description: |
      A Tag is applied to Escalation Policies, Teams or Users and can be used to filter them.
  - name: Teams
    description: |
      A team is a collection of Users and Escalation Policies that represent a group of people within an organization.
  - name: Templates
    description: |
      Templates is a new feature which will allow customers to create message templates to be leveraged by (but not limited to) status updates. The API will be secured to customers with the status updates entitlements.
  - name: Users
    description: |
      Users are members of a PagerDuty account that have the ability to interact with Incidents and other data on the account.
  - name: Vendors
    description: |
      A PagerDuty Vendor represents a specific type of integration. AWS Cloudwatch, Splunk, Datadog are all examples of vendors
components:
  schemas:
    AnalyticsIncidentMetrics:
      title: Analytics Incident Metrics
      type: object
      properties:
        mean_assignment_count:
          type: integer
          description: Mean count of instances where responders were assigned an incident (including through reassignment or escalation) or accepted a responder request.
        mean_engaged_seconds:
          type: integer
          description: |-
            Mean engaged time across all responders for incidents that match the given filters.
            Engaged time is measured from the time a user engages with an incident (by
            acknowledging or accepting a responder request) until the incident is resolved.
            This may include periods in which the incidents was snoozed.
        mean_engaged_user_count:
          type: integer
          description: |-
            Mean number of users who engaged with an incident. *Engaged* is defined as
            acknowledging an incident or accepting a responder request in it.
        mean_seconds_to_engage:
          type: integer
          description: |-
            A measure of *people response time*. This metric measures the time from
            the first user engagement (acknowledge or responder accept) to the last.
            This metric is only used for incidents with **multiple responders**;
            for incidents with one or no engaged users, this value is null.
        mean_seconds_to_first_ack:
          type: integer
          description: 'Mean time between the start of an incident, and the first responder to acknowledge.'
        mean_seconds_to_mobilize:
          type: integer
          description: |-
            Mean time between the start of an incident, and the last additional responder
            to acknowledge. For incidents with one or no engaged users, this value is null.
        mean_seconds_to_resolve:
          type: integer
          description: Mean time from when an incident was triggered until it was resolved.
        service_id:
          type: string
          description: ID of the service. Only included when aggregating by service.
        service_name:
          type: string
          description: Name of the service. Only included when aggregating by service.
        team_id:
          type: string
          description: ID of the team the incident was assigned to.
        team_name:
          type: string
          description: Name of the team the incident was assigned to.
        total_business_hour_interruptions:
          type: integer
          description: |-
            Total number of unique interruptions during business hours.
            Business hour: 8am-6pm Mon-Fri, based on the user’s time zone. 
        total_engaged_seconds:
          type: integer
          description: |-
            Total engaged time across all responders for incidents. Engaged time is measured from
            the time a user engages with an incident (by acknowledging or accepting a responder request)
            until the incident is resolved. This may include periods in which the incidents was snoozed.
        total_escalation_count:
          type: integer
          description: |-
            Total count of instances where an incident is escalated between responders
            assigned to an escalation policy.
        total_incident_count:
          type: integer
          description: The total number of incidents that were created.
        total_off_hour_interruptions:
          type: integer
          description: |-
            Total number of unique interruptions during off hours.
            Off hour: 6pm-10pm Mon-Fri and all day Sat-Sun, based on the user’s time zone.
        total_sleep_hour_interruptions:
          type: integer
          description: |-
            Total number of unique interruptions during sleep hours.
            Sleep hour: 10pm-8am every day, based on the user’s time zone.
        total_snoozed_seconds:
          type: integer
          description: Total number of seconds incidents were snoozed.
        up_time_pct:
          type: number
          description: |-
            The percentage of time in the defined date range that the service was not interrupted
            by a [major incident](https://support.pagerduty.com/docs/operational-reviews#major-incidents).
    AnalyticsModel:
      type: object
      properties:
        filters:
          type: object
          description: Accepts a set of filters to apply to the Incidents before aggregating.  Any incidents that do not match the included filters will be omitted from the results
          properties:
            created_at_start:
              type: string
              description: Accepts an ISO8601 DateTime string.  Any incidents with a created_at less than this value will be omitted from the results.  The maximum supported time range in conjunction with created_at_end is one year.
              example: '2020-01-01T00:00:00+05:00'
            created_at_end:
              type: string
              description: Accepts an ISO8601 DateTime string.  Any incidents with a created_at greater than or equal to this value will be omitted from the results.  The maximum supported time range in conjunction with created_at_start is one year.
              example: '2020-02-01T00:00:00Z'
            urgency:
              type: string
              description: Any incidents whose urgency does not match the provided string will be omitted from the results.
              example: high
              enum:
                - high
                - low
            major:
              type: boolean
              description: 'A boolean flag including whether results should contain *only* [major incidents](https://support.pagerduty.com/docs/operational-reviews#major-incidents), or exclude major incidents. If no value is provided all incidents will be included.'
              example: true
            team_ids:
              type: array
              description: 'An array of team IDs. Only incidents related to these teams will be included in the results. If omitted, all teams the requestor has access to will be included in the results.'
              items:
                type: string
              example:
                - P373JQQ
                - PAECHJV
                - P7SYGW6
            service_ids:
              type: array
              description: 'An array of service IDs. Only incidents related to these services will be included in the results. If omitted, all services the requestor has access to will be included in the results.'
              items:
                type: string
              example:
                - PSEJLIN
                - PSLWBL8
                - PT4KHLX
            priority_ids:
              type: array
              description: 'An array of priority IDs. Only incidents with these priorities will be included in the results. If omitted, all services the requestor has access to will be included in the results.'
              items:
                type: string
              example:
                - PC8O0L3
                - PX01HJD
                - P5FK83M
            priority_names:
              type: array
              description: 'An array of user-defined priority names. Only incidents with these priorities will be included in the results. If omitted, all services the requestor has access to will be included in the results.'
              items:
                type: string
              example:
                - P1
                - P2
                - P3
        time_zone:
          type: string
          description: The time zone to use for the results and grouping.
          example: Etc/UTC
        aggregate_unit:
          type: string
          description: 'The time unit to aggregate metrics by.  If no value is provided, the metrics will be aggregated for the entire period.'
          nullable: true
          example: day
          enum:
            - day
            - week
            - month
    AutomationActionsActionClassificationEnum:
      type: string
      enum:
        - diagnostic
        - remediation
      nullable: true
    AnalyticsRawIncident:
      title: Analytics Raw Incident
      type: object
      properties:
        assignment_count:
          type: integer
          description: Total count of instances where responders were assigned an incident (including through reassignment or escalation) or accepted a responder request.
        business_hour_interruptions:
          type: integer
          description: |-
            Total number of unique interruptions during business hour.
            Business hour: 8am-6pm Mon-Fri, based on the user’s time zone.  
        created_at:
          type: string
          description: Timestamp of when the incident was created.
        description:
          type: string
          description: The incident description
        engaged_seconds:
          type: integer
          description: Total engaged time across all responders for this incident.  Engaged time is measured from the time a user engages with an incident (by acknowledging or accepting a responder request) until the incident is resolved.  This may include periods in which the incident was snoozed.
        engaged_user_count:
          type: integer
          description: 'Total number of users who engaged (acknowledged, accepted responder request) in the incident.'
        escalation_count:
          type: integer
          description: Total count of instances where an incident is escalated between responders assigned to an escalation policy.
        id:
          type: string
          description: Incident ID
        incident_number:
          type: integer
          description: The PagerDuty incident number
        major:
          type: boolean
          description: 'An incident is classified as a [major incident](https://support.pagerduty.com/docs/operational-reviews#major-incidents) if it has one of the two highest priorities, or if multiple responders are added and acknowledge the incident.'
        off_hour_interruptions:
          type: integer
          description: |-
            Total number of unique interruptions during off hour.
            Off hour: 6pm-10pm Mon-Fri and all day Sat-Sun, based on the user’s time zone.      
        priority_id:
          type: string
          nullable: true
          description: ID of the incident's priority level.
        priority_name:
          type: string
          nullable: true
          description: The user-provided short name of the priority.
        resolved_at:
          type: string
          description: Timestamp of when the incident was resolved.
        seconds_to_engage:
          type: integer
          description: |-
            A measure of *people response time*. This metric measures the time from
            the first user engagement (acknowledge or responder accept) to the last.
            This metric is only used for incidents with **multiple responders**;
            for incidents with one or no engaged users, this value is null.
        seconds_to_first_ack:
          type: integer
          description: 'Time between start of an incident, and the first responder to acknowledge.'
        seconds_to_mobilize:
          type: integer
          description: 'Time between start of an incident, and the last additional responder to acknowledge.  If an incident has one or less responders, the value will be null.'
        seconds_to_resolve:
          type: integer
          description: Time from when incident triggered until it was resolved.
        service_id:
          type: string
          description: ID of the service that the incident triggered on.
        service_name:
          type: string
          description: Name of the service that the incident triggered on.
        sleep_hour_interruptions:
          type: integer
          description: |-
            Total number of unique interruptions during sleep hour.
            Sleep hour: 10pm-8am every day, based on the user’s time zone.
        snoozed_seconds:
          type: integer
          description: Total seconds the incident has been snoozed for.
        team_id:
          type: string
          nullable: true
          description: ID of the team the incident was assigned to.
        team_name:
          type: string
          nullable: true
          description: Name of the team the incident was assigned to.
        urgency:
          type: string
          description: Notification level
        user_defined_effort_seconds:
          type: integer
          description: |-
            The total response effort in seconds,
            [as defined by the user](https://support.pagerduty.com/docs/editing-incidents#edit-incident-duration).
          nullable: true
  parameters:
    header_Accept:
      name: Accept
      description: The `Accept` header is used as a versioning header.
      in: header
      required: false
      schema:
        type: string
        default: application/vnd.pagerduty+json;version=2
    header_Content-Type:
      name: Content-Type
      in: header
      required: false
      schema:
        type: string
        default: application/json
        enum:
          - application/json
    audit_since:
      name: since
      in: query
      description: 'The start of the date range over which you want to search. If not specified, defaults to `now() - 24 hours` (past 24 hours)'
      schema:
        type: string
        format: date-time
    audit_until:
      name: until
      in: query
      description: 'The end of the date range over which you want to search. If not specified, defaults to `now()`. May not be more than 31 days after `since`.'
      schema:
        type: string
        format: date-time
    audit_root_resource_types:
      name: 'root_resource_types[]'
      in: query
      description: Resource type filter for the root_resource.
      schema:
        type: string
        enum:
          - users
          - teams
          - schedules
          - escalation_policies
          - services
        example: users
    audit_actor_type:
      name: actor_type
      in: query
      description: Actor type filter.
      schema:
        type: string
        example: user_reference
    audit_actor_id:
      name: actor_id
      in: query
      description: Actor Id filter. Must be qualified by providing the `actor_type` param.
      schema:
        type: string
        example: P123456
    audit_method_type:
      name: method_type
      in: query
      description: Method type filter.
      schema:
        type: string
        description: |
          Describes the method used to perform the action:

          `browser` -- authenticated user session. Session value is not returned in the `truncated_token` field.

          `oauth` -- access token obtained via the OAuth flow. Truncated token value is returned in the `truncated_token` field.

          `api_token` -- Pagerduty API token. Truncated token value is returned in the `truncated_token` field.

          `identity_provider` -- action performed by an Identity provider on behalf of a user. No value is returned in the `truncated_token` field.

          `other` -- Method that does not fall in the predefined categories. Truncated token value MAY be returned in the `truncated_token` field.
        enum:
          - browser
          - oauth
          - api_token
          - identity_provider
          - other
    audit_method_truncated_token:
      name: method_truncated_token
      in: query
      description: Method truncated_token filter. Must be qualified by providing the `method_type` param.
      schema:
        type: string
        example: 3xyz
    audit_actions:
      name: 'actions[]'
      in: query
      description: Action filter
      schema:
        type: string
        description: |
          The action executed on the aggregate
        enum:
          - create
          - update
          - delete
    offset_limit:
      name: limit
      in: query
      required: false
      description: The number of results per page.
      schema:
        type: integer
    offset_offset:
      name: offset
      in: query
      required: false
      description: Offset to start pagination search results.
      schema:
        type: integer
    offset_total:
      name: total
      in: query
      required: false
      description: |
        By default the `total` field in pagination responses is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated.

        See our [Pagination Docs](https://developer.pagerduty.com/docs/rest-api-v2/pagination/) for more information.
      schema:
        default: false
        type: boolean
    automation_actions_name:
      name: name
      description: Filters results to include the ones matching the name (case insensitive substring matching)
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_runners_include:
      name: 'include[]'
      in: query
      required: false
      description: Includes additional data elements into the response
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - associated_actions
          example: associated_actions
        uniqueItems: true
    automation_actions_runner_id:
      name: runner_id
      description: |
        Filters results to include the ones linked to the specified runner.
        Specifying the value `any` filters results to include the ones linked to runners only,
        thus omitting the results not linked to runners.
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_classification:
      name: classification
      description: Filters results to include the ones matching the specified classification (aka category)
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AutomationActionsActionClassificationEnum'
    automation_actions_action_type:
      name: action_type
      description: Filters results to include the ones matching the specified action type
      in: query
      required: false
      schema:
        type: string
        enum:
          - script
          - process_automation
        example: process_automation
    automation_actions_team_id:
      name: team_id
      description: Filters results to include the ones associated with the specified team.
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_service_id:
      name: service_id
      description: Filters results to include the ones associated with the specified service
      in: query
      required: false
      schema:
        type: string
        nullable: false
    automation_actions_invocation_state:
      name: invocation_state
      description: Invocation state
      in: query
      schema:
        type: string
        description: 'prepared -- the invocation exists and can be referenced, but is NOT available to a Runner <br> created -- the invocation exists and is waiting for a Runner <br> sent -- invocation sent to a Runner <br> queued -- invocation queued by a Runner <br> running -- invocation is being ran by a Runner <br> aborted -- invocation was aborted on a Runner <br> completed -- invocation completed on a Runner <br> error -- invocation encountered an error on a Runner'
        enum:
          - prepared
          - created
          - sent
          - queued
          - running
          - aborted
          - completed
          - error
        example: sent
    automation_actions_incident_id:
      name: incident_id
      description: Incident ID
      in: query
      required: true
      schema:
        type: string
        example: Q2LAR4ADCXC8IB
    past_incidents_limit:
      name: limit
      in: query
      required: false
      description: The number of results to be returned in the response.
      schema:
        type: integer
        default: 5
        minimum: 1
        maximum: 999
    past_incidents_total:
      name: total
      in: query
      required: false
      description: |
        By default the `total` field in the response body is set to `null` to provide the fastest possible response times. Set `total` to `true` for this field to be populated with the total number of Past Incidents.
      schema:
        type: boolean
        default: false
    cursor_limit:
      name: limit
      in: query
      required: false
      description: The minimum of the `limit` parameter used in the request or the maximum request size of the API.
      schema:
        type: integer
    cursor_cursor:
      name: cursor
      in: query
      required: false
      description: |
        Optional parameter used to request the "next" set of results from an API.  The value provided here is most commonly obtained from the `next_cursor` field of the previous request.  When no value is provided, the request starts at the beginning of the result set.
      schema:
        type: string
    early_access_analytics:
      schema:
        type: string
        default: analytics-v2
        enum:
          - analytics-v2
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time.  You __MUST__ pass in this header and the above value.  Do not use this endpoint in production, as it may change!
      name: X-EARLY-ACCESS
      required: true
    early_access_status-update-notification-rules:
      name: X-EARLY-ACCESS
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!
      required: true
      schema:
        type: string
        default: status-update-notification-rules
        enum:
          - status-update-notification-rules
    early_access_bis:
      schema:
        type: string
        default: business-impact-early-access
      in: header
      name: X-EARLY-ACCESS
      description: 'This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `business-impact-early-access`. Do not use this endpoint in production, as it may change!'
      required: true
    early_access_status_dashboards:
      schema:
        type: string
        default: status-dashboards
      in: header
      name: X-EARLY-ACCESS
      description: 'This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header with the value `status-dashboards`. Do not use this endpoint in production, as it may change!'
      required: true
    webhooks_filter_type:
      name: filter_type
      in: query
      required: false
      description: The type of resource to filter upon.
      schema:
        enum:
          - service
          - team
        type: string
    webhooks_filter_id:
      name: filter_id
      in: query
      required: false
      description: The id of the resource to filter upon.
      schema:
        type: string
    id:
      name: id
      description: The ID of the resource.
      in: path
      required: true
      schema:
        type: string
    ids:
      name: 'ids[]'
      description: The IDs of the resources.
      in: query
      explode: true
      schema:
        type: string
    entity_type:
      name: entity_type
      in: path
      description: Type of entity related with the tag
      required: true
      schema:
        type: string
        enum:
          - users
          - teams
          - escalation_policies
    business_service_id:
      name: business_service_id
      in: path
      description: The business service ID.
      required: true
      schema:
        type: string
    team_id:
      name: team_id
      in: path
      description: The team ID
      required: true
      schema:
        type: string
    team_user_id:
      name: user_id
      in: path
      description: The user ID on the team.
      required: true
      schema:
        type: string
    team_escalation_policy_id:
      name: escalation_policy_id
      in: path
      description: The escalation policy ID on the team.
      required: true
      schema:
        type: string
    escalation_policy_escalation_rule_id:
      name: escalation_rule_id
      in: path
      description: The escalation rule ID on the escalation policy.
      required: true
      schema:
        type: string
    impacts_additional_fields:
      name: 'additional_fields[]'
      in: query
      description: Provides access to additional fields such as highest priority per business service and total impacted count
      explode: true
      schema:
        type: string
        enum:
          - services.highest_impacting_priority
          - total_impacted_count
    include_addon:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - services
        uniqueItems: true
    include_escalation_policy:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - services
          - teams
          - targets
        uniqueItems: true
    include_log_entry:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - incidents
          - services
          - channels
          - teams
        uniqueItems: true
    include_user:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - contact_methods
          - notification_rules
          - teams
          - subdomains
        uniqueItems: true
    include_maintenance_window:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - teams
          - services
          - users
        uniqueItems: true
    include_teams:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - privileges
        uniqueItems: true
    include_teams_members:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - users
        uniqueItems: true
    include_triggers:
      name: 'include[]'
      in: query
      description: Array of additional Models to include in response.
      explode: true
      schema:
        type: string
        enum:
          - triggers
        uniqueItems: true
    sort_by_escalation_policy:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
        default: name
    sort_by_service:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
        default: name
    schedule_overflow:
      name: overflow
      in: query
      description: |
        Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter `overflow=true` is passed. This parameter defaults to false.
        For instance, if your schedule is a rotation that changes daily at midnight UTC, and your date range is from `2011-06-01T10:00:00Z` to `2011-06-01T14:00:00Z`:


        - If you don't pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T10:00:00Z` and end of `2011-06-01T14:00:00Z`.
        - If you do pass the `overflow=true` parameter, you will get one schedule entry returned with a start of `2011-06-01T00:00:00Z` and end of `2011-06-02T00:00:00Z`.
      schema:
        type: boolean
        default: false
    schedule_override_id:
      name: override_id
      in: path
      description: The override ID on the schedule.
      required: true
      schema:
        type: string
    team_ids:
      name: 'team_ids[]'
      in: query
      description: An array of team IDs. Only results related to these teams will be returned. Account must have the `teams` ability to use this parameter.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    time_zone:
      name: time_zone
      in: query
      description: Time zone in which dates in the result will be rendered.
      schema:
        type: string
        format: tzinfo
        default: UTC
    service_id:
      name: service_id
      in: path
      description: The service ID
      required: true
      schema:
        type: string
    services:
      name: 'service_ids[]'
      in: query
      description: An array of service IDs. Only results related to these services will be returned.
      explode: true
      schema:
        type: array
        items:
          type: string
    integration_id:
      name: integration_id
      in: path
      description: The integration ID on the service.
      required: true
      schema:
        type: string
    integration_ids:
      name: 'integration_ids[]'
      in: query
      description: An array of integration IDs. Only results related to these integrations will be returned.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    log_entry_is_overview:
      name: is_overview
      in: query
      description: 'If `true`, will return a subset of log entries that show only the most important changes to the incident.'
      required: false
      schema:
        type: boolean
        default: false
    since:
      name: since
      in: query
      description: The start of the date range over which you want to search.
      schema:
        type: string
        format: date-time
    until:
      name: until
      in: query
      description: The end of the date range over which you want to search.
      schema:
        type: string
        format: date-time
    url_slug:
      name: url_slug
      in: path
      description: The `url_slug` for a status dashboard
      required: true
      schema:
        type: string
    date_range:
      name: date_range
      in: query
      description: 'When set to all, the since and until parameters and defaults are ignored.'
      schema:
        type: string
        enum:
          - all
    incident_key:
      name: incident_key
      in: query
      description: Incident de-duplication key. Incidents with child alerts do not have an incident key; querying by incident key will return incidents whose alerts have alert_key matching the given incident key.
      schema:
        type: string
    incident_services:
      name: 'service_ids[]'
      in: query
      description: Returns only the incidents associated with the passed service(s). This expects one or more service IDs.
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    incident_assigned_to_user:
      name: 'user_ids[]'
      in: query
      description: 'Returns only the incidents currently assigned to the passed user(s). This expects one or more user IDs. Note: When using the assigned_to_user filter, you will only receive incidents with statuses of triggered or acknowledged. This is because resolved incidents are not assigned to any user.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    incident_urgencies:
      name: 'urgencies[]'
      in: query
      description: Array of the urgencies of the incidents to be returned. Defaults to all urgencies. Account must have the `urgencies` ability to do this.
      explode: true
      schema:
        type: string
        enum:
          - high
          - low
        uniqueItems: true
    from_header:
      name: From
      in: header
      description: The email address of a valid user associated with the account making the request.
      required: true
      schema:
        type: string
        format: email
    optional_from_header:
      name: From
      in: header
      description: 'The email address of a valid user associated with the account making the request. This is optional, and is only used for change tracking.'
      required: false
      schema:
        type: string
        format: email
    user_contact_method_id:
      name: contact_method_id
      in: path
      description: The contact method ID on the user.
      required: true
      schema:
        type: string
    user_notification_rule_id:
      name: notification_rule_id
      in: path
      description: The notification rule ID on the user.
      required: true
      schema:
        type: string
    user_status_update_notification_rule_id:
      name: status_update_notification_rule_id
      in: path
      description: The status update notification rule ID on the user.
      required: true
      schema:
        type: string
    oncall_handoff_notification_rule_id:
      name: oncall_handoff_notification_rule_id
      in: path
      description: The oncall handoff notification rule ID on the user.
      required: true
      schema:
        type: string
    session_id:
      name: session_id
      in: path
      description: The session ID for the user.
      required: true
      schema:
        type: string
    type:
      name: type
      in: path
      description: The session type for the user session ID.
      required: true
      schema:
        type: string
    alert_key:
      name: alert_key
      in: query
      description: Alert de-duplication key.
      schema:
        type: string
    response_play_id:
      name: response_play_id
      in: path
      description: The response play ID of the response play associated with the request.
      required: true
      schema:
        type: string
    query:
      name: query
      in: query
      description: 'Filters the result, showing only the records whose name matches the query.'
      required: false
      schema:
        type: string
    tag_query:
      name: query
      in: query
      description: 'Filters the result, showing only the tags whose label matches the query.'
      required: false
      schema:
        type: string
    addon_services:
      name: 'service_ids[]'
      in: query
      description: 'Filters the results, showing only Add-ons for the given services'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    addon_filter:
      name: filter
      in: query
      description: 'Filters the results, showing only Add-ons of the given type'
      schema:
        type: string
        enum:
          - full_page_addon
          - incident_show_addon
    change_since:
      name: since
      in: query
      description: 'The start of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.'
      schema:
        type: string
        format: date-time
        pattern: 'YYYY-MM-DDThh:mm:ssZ'
    change_until:
      name: until
      in: query
      description: 'The end of the date range over which you want to search, as a UTC ISO 8601 datetime string. Will return an HTTP 400 for non-UTC datetimes.'
      schema:
        type: string
        format: date-time
        pattern: 'YYYY-MM-DDThh:mm:ssZ'
    user_ids_escalation_policies:
      name: 'user_ids[]'
      in: query
      description: 'Filters the results, showing only escalation policies on which any of the users is a target.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    extension_object_id:
      name: extension_object_id
      description: The id of the extension object you want to filter by.
      in: query
      schema:
        type: string
    extension_schema_id:
      name: extension_schema_id
      in: query
      description: Filter the extensions by extension vendor id.
      schema:
        type: string
    include_extensions:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - extension_objects
          - extension_schemas
        uniqueItems: true
    include_extensions_id:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - extension_schemas
          - extension_objects
          - temporarily_disabled
        uniqueItems: true
    include_incident_workflow_children:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - steps
          - team
        uniqueItems: true
    statuses_incidents:
      name: 'statuses[]'
      in: query
      description: 'Return only incidents with the given statuses. To query multiple statuses, pass `statuses[]` more than once, for example: `https://api.pagerduty.com/incidents?statuses[]=triggered&statuses[]=acknowledged`. (More status codes may be introduced in the future.)'
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - acknowledged
          - resolved
        uniqueItems: true
    sort_by_incidents:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (incident_number/created_at/resolved_at/urgency), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending. The account must have the `urgencies` ability to sort by the urgency.'
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
        maxItems: 2
        uniqueItems: true
    include_incidents:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - users
          - services
          - first_trigger_log_entries
          - escalation_policies
          - teams
          - assignees
          - acknowledgers
          - priorities
          - conference_bridge
        uniqueItems: true
    include_incident:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - field_values
        uniqueItems: true
    since_incidents:
      schema:
        type: string
      in: query
      name: since
      description: The start of the date range over which you want to search. Maximum range is 6 months and default is 1 month.
    until_incidents:
      schema:
        type: string
      in: query
      name: until
      description: The end of the date range over which you want to search. Maximum range is 6 months and default is 1 month.
    statuses_incident_alerts:
      name: 'statuses[]'
      in: query
      description: Return only alerts with the given statuses. (More status codes may be introduced in the future.)
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - resolved
        uniqueItems: true
    sort_by_incident_alerts:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (created_at/resolved_at), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending.'
      style: form
      explode: false
      schema:
        type: string
        enum:
          - created_at
          - resolved_at
          - 'created_at:asc'
          - 'created_at:desc'
          - 'resolved_at:asc'
          - 'resolved_at:desc'
        maxItems: 2
        uniqueItems: true
    include_incident_alerts:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - services
          - first_trigger_log_entries
          - incidents
        uniqueItems: true
    alert_id:
      name: alert_id
      in: path
      description: The id of the alert to retrieve.
      required: true
      schema:
        type: string
    statuses_incident_count:
      name: 'statuses[]'
      in: query
      description: 'Count only incidents with the requested statuses. `all` returns all statuses. If `any` is specified, there will be an additional `any` boolean field in the response that is true if there are any incidents matching the criteria in the request. If no statuses are provided, then only the total count of incidents is returned regardless of status. More status codes may be introduced in the future.'
      explode: true
      schema:
        type: string
        enum:
          - triggered
          - acknowledged
          - resolved
          - any
          - all
        uniqueItems: true
    filter_maintenance_windows:
      name: filter
      in: query
      description: Only return maintenance windows in a given state.
      schema:
        type: string
        enum:
          - past
          - future
          - ongoing
          - open
          - all
    since_notifications:
      name: since
      in: query
      description: The start of the date range over which you want to search. The time element is optional.
      required: true
      schema:
        type: string
        format: date-time
    until_notifications:
      name: until
      in: query
      description: The end of the date range over which you want to search. This should be in the same format as since. The size of the date range must be less than 3 months.
      required: true
      schema:
        type: string
        format: date-time
    filter_notifications:
      name: filter
      in: query
      description: Return notification of this type only.
      schema:
        type: string
        enum:
          - sms_notification
          - email_notification
          - phone_notification
          - push_notification
    include_notifications:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - users
        uniqueItems: true
    include_oncalls:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - users
          - schedules
        uniqueItems: true
    user_ids_oncalls:
      name: 'user_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified user IDs.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    escalation_policy_ids_oncalls:
      name: 'escalation_policy_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified escalation policy IDs.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    schedule_ids_oncalls:
      name: 'schedule_ids[]'
      in: query
      description: 'Filters the results, showing only on-calls for the specified schedule IDs. If `null` is provided in the array, it includes permanent on-calls due to direct user escalation targets.'
      explode: true
      schema:
        type: array
        items:
          type: string
        uniqueItems: true
    since_oncalls:
      name: since
      in: query
      description: 'The start of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. On-call shifts are limited to 90 days in the future.'
      schema:
        type: string
        format: date-time
    until_oncalls:
      name: until
      in: query
      description: 'The end of the time range over which you want to search. If an on-call period overlaps with the range, it will be included in the result. Defaults to current time. On-call shifts are limited to 90 days in the future, and the `until` time cannot be before the `since` time.'
      schema:
        type: string
        format: date-time
    earliest_oncalls:
      name: earliest
      in: query
      description: 'This will filter on-calls such that only the earliest on-call for each combination of escalation policy, escalation level, and user is returned. This is useful for determining when the "next" on-calls are for a given set of filters.'
      schema:
        type: boolean
    filter_for_manual_run:
      name: filter_for_manual_run
      in: query
      description: 'When this parameter is present, only those Response Plays that can be run manually will be returned.'
      schema:
        type: boolean
    rule_id:
      name: rule_id
      in: path
      description: The id of the Event Rule to retrieve.
      required: true
      schema:
        type: string
    since_schedules:
      name: since
      in: query
      description: The start of the date range over which you want to search.
      required: true
      schema:
        type: string
        format: date-time
    until_schedules:
      name: until
      in: query
      description: The end of the date range over which you want to search.
      required: true
      schema:
        type: string
        format: date-time
    editable_schedules:
      name: editable
      in: query
      description: 'When this parameter is present, only editable overrides will be returned. The result will only include the id of the override if this parameter is present. Only future overrides are editable.'
      schema:
        type: boolean
    overflow_schedules:
      name: overflow
      in: query
      description: 'Any on-call schedule entries that pass the date range bounds will be truncated at the bounds, unless the parameter overflow=true is passed. This parameter defaults to false.'
      schema:
        type: boolean
    include_services:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - teams
          - integrations
          - auto_pause_notifications_parameters
        uniqueItems: true
    include_services_id:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - escalation_policies
          - teams
          - auto_pause_notifications_parameters
          - integrations
        uniqueItems: true
    include_services_integrations:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - services
          - vendors
        uniqueItems: true
    reassignment_team:
      name: reassignment_team
      in: query
      description: |
        Team to reassign unresolved incident to.
        If an unresolved incident exists on both the reassignment team and
        the team being deleted, a duplicate will not be made. If not supplied,
        unresolved incidents will be made account-level.
      required: false
      schema:
        type: string
    include_notification_rules:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - contact_methods
        uniqueItems: true
    additional_details:
      name: 'additional_details[]'
      in: query
      description: Array of additional attributes to any of the returned incidents for related incidents.
      explode: true
      schema:
        type: string
        enum:
          - incident
        uniqueItems: true
    include_schedules:
      name: 'include[]'
      in: query
      description: Array of additional details to include.
      explode: true
      schema:
        type: string
        enum:
          - schedule_layers
        uniqueItems: true
    sort_by_event_orchestration:
      name: sort_by
      in: query
      description: Used to specify the field you wish to sort the results on.
      schema:
        type: string
        enum:
          - 'name:asc'
          - 'name:desc'
          - 'routes:asc'
          - 'routes:desc'
          - 'created_at:asc'
          - 'created_at:desc'
        default: 'name:asc'
    event_orchestration_id:
      name: id
      description: The ID of an Event Orchestration.
      in: path
      required: true
      schema:
        type: string
    event_orchestration_integration_id:
      name: integration_id
      description: The ID of an Integration.
      in: path
      required: true
      schema:
        type: string
    urgency:
      name: urgency
      in: query
      description: 'The incident urgency for which the notification rules are applied. If not specified, defaults to `high`.'
      explode: true
      schema:
        type: string
        enum:
          - high
          - low
          - all
        uniqueItems: true
    template_query:
      name: query
      description: Template name or description to search
      in: query
      schema:
        type: string
    template_type:
      name: template_type
      description: Filters templates by type.
      in: query
      schema:
        type: string
        default: status_update
    sort_by_template:
      name: sort_by
      in: query
      description: 'Used to specify both the field you wish to sort the results on (name/created_at), as well as the direction (asc/desc) of the results. The sort_by field and direction should be separated by a colon. Sort direction defaults to ascending.'
      style: form
      explode: false
      schema:
        type: string
        enum:
          - name
          - 'name:asc'
          - 'name:desc'
          - created_at
          - 'created_at:asc'
          - 'created_at:desc'
        default: 'created_at:asc'
    schedule_since:
      name: since
      in: query
      description: The start of the date range over which you want to show schedule entries. Defaults to 2 weeks before until if an until is given.
      schema:
        type: string
        format: date-time
    schedule_until:
      name: until
      in: query
      description: The end of the date range over which you want to show schedule entries. Defaults to 2 weeks after since if a since is given.
      schema:
        type: string
        format: date-time
    paused_incident_reports_service_id:
      name: service_id
      in: query
      description: Specifies a filter to limit the scope of reporting to a particular service
      schema:
        type: string
        example: P123456
    paused_incident_reports_suspended_by:
      name: suspended_by
      in: query
      description: Specifies a filter to scope the response to either alerts suspended by Auto Pause or Event Rules.
      schema:
        enum:
          - auto_pause
          - rules
    triggers_filter_workflow_id:
      name: workflow_id
      description: 'If provided, only show triggers configured to start the given workflow. Useful for listing all services associated with the given workflow'
      in: query
      schema:
        type: string
        example: P4RG7YW
    triggers_filter_incident_id:
      name: incident_id
      description: 'If provided, only show triggers configured on the service of the given incident. Useful for finding manual triggers that are configured on the service for a specific incident. Cannot be specified if `service_id` is provided.'
      in: query
      schema:
        type: string
        example: Q2LAR4ADCXC8IB
    triggers_filter_service_id:
      name: service_id
      description: 'If provided, only show triggers configured for incidents in the given service. Useful for listing all workflows associated with the given service. Cannot be specified if `incident_id` is provided.'
      in: query
      schema:
        type: string
        example: P4RG7YW
    triggers_filter_trigger_type:
      name: trigger_type
      description: 'If provided, only show triggers of the given type. For example “manual” to search for manual triggers'
      in: query
      schema:
        type: string
        enum:
          - manual
          - conditional
    triggers_path_trigger_id:
      name: trigger_id
      description: Identifier for the Trigger
      required: true
      in: path
      schema:
        type: string
    triggers_path_service_id:
      name: service_id
      description: Identifier for the Service
      required: true
      in: path
      schema:
        type: string
    triggers_sort_by:
      name: sort_by
      description: 'If provided, returns triggers sorted by the specified property.'
      in: query
      schema:
        type: string
        enum:
          - workflow_id
          - workflow_id asc
          - workflow_id desc
          - workflow_name
          - workflow_name asc
          - workflow_name desc
    actions_filter_keyword:
      name: keyword
      description: 'If provided, only show actions tagged with the specified keyword'
      in: query
      schema:
        type: string
        example: slack
    include_customfields_field:
      name: 'include[]'
      description: Array of additional details to include.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_options
        uniqueItems: true
    include_customfields_schema:
      name: 'include[]'
      description: Array of additional details to include. Including `field_configurations` will also include full field details.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_configurations
        uniqueItems: true
    include_customfields_field_configuration:
      name: 'include[]'
      description: Array of additional details to include.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - fields
        uniqueItems: true
    include_customfields_incident_schema:
      name: 'include[]'
      description: Array of additional details to include. Including `field_options` will also include field options.
      in: query
      explode: true
      schema:
        type: string
        enum:
          - field_options
        uniqueItems: true
    field_id:
      name: field_id
      description: The ID of the field.
      in: path
      required: true
      schema:
        type: string
    field_option_id:
      name: field_option_id
      description: The ID of the field option.
      in: path
      required: true
      schema:
        type: string
    schema_id:
      name: schema_id
      description: The ID of the schema.
      in: path
      required: true
      schema:
        type: string
    field_configuration_id:
      name: field_configuration_id
      description: The ID of the field configuration.
      in: path
      required: true
      schema:
        type: string
    customfields_query_schema_assignments_filter:
      name: filter
      description: One of service_id or schema_id is required.
      in: query
      required: true
      explode: true
      schema:
        type: object
        properties:
          service_id:
            type: string
          schema_id:
            type: string
        minProperties: 1
        maxProperties: 1
    early_access_customfields:
      name: X-EARLY-ACCESS
      in: header
      description: |
        This header indicates that this API endpoint is __UNDER CONSTRUCTION__ and may change at any time. You __MUST__ pass in this header and the above value. Do not use this endpoint in production, as it may change!
      required: true
      schema:
        type: string
        default: flex-service-early-access
        enum:
          - flex-service-early-access
  responses:
    ArgumentError:
      description: Caller provided invalid arguments. Please review the response for error details. Retrying with the same arguments will *not* work.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    TooManyRequests:
      description: 'Too many requests have been made, the rate limit has been reached.'
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
    Conflict:
      description: The request conflicts with the current state of the server.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                    readOnly: true
                  message:
                    type: string
                    readOnly: true
                    description: Error message string
                  errors:
                    type: array
                    readOnly: true
                    items:
                      type: string
                      readOnly: true
                      description: Human-readable error details
                example:
                  message: Not Found
                  code: 2100
    NotFound:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/responses/Conflict/content/application~1json/schema'
  securitySchemes:
    api_key:
      type: apiKey
      name: Authorization
      in: header
      description: The API Key with format `Token token=<API_KEY>`
  examples:
    AuditRecordResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORDID1_TEAM_CREATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 3usr
            root_resource:
              id: PXASDFE
              type: team_reference
              summary: my DevOps team
            action: create
            details:
              resource:
                id: PXASDFE
                type: team_reference
                summary: my DevOps team
              fields:
                - name: teamName
                  value: DevOps team
          - id: PDRECORDID2_USER_REMOVED_FROM_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PRY9M8B
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PRY9M8B
                type: team_reference
                summary: DevOps
              references:
                - name: members
                  removed:
                    - id: PRY9M8B
                      type: user_reference
                      summary: John Doe
          - id: PDRECORDID5_USERS_TEAM_ROLE_UPDATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PRY9M8B
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PDUSER
                type: user_reference
                summary: John Snow
              fields:
                - name: team_role
                  before_value: observer
                  value: manager
          - id: PDRECORDID3_USERS_NAME_AND_EMAIL_UPDATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: identity_provider
            root_resource:
              id: PDUSER
              type: user_reference
              summary: John Snow
            action: update
            details:
              resource:
                id: PDUSER
                type: user_reference
                summary: John Snow
              fields:
                - name: name
                  before_value: Bob Doe
                  value: Jon Snow
                - name: email
                  before_value: bob.doe@domain.com
                  value: john.snow@domain.com
          - id: PDRECORDID4_UPDATED_USERS_NOTIFICATION_RULE
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 2adm
            root_resource:
              id: PDUSER
              type: user_reference
              summary: John Snow
            action: update
            details:
              resource:
                id: PXOGWUS
                type: assignment_notification_rule_reference
                summary: '0 minutes: channel P1IAAPZ'
              fields:
                - name: start_delay_in_minutes
                  before_value: '0'
                  value: '2'
              references:
                - name: contact_method
                  removed:
                    - id: POE6L88
                      type: push_notification_contact_method_reference
                      summary: Pixel 3
                  added:
                    - id: P4GTUMK
                      type: sms_contact_method_reference
                      summary: Mobile
        next_cursor: null
        limit: 10
    AuditRecordEscalationPolicyResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ASSIGN_TEAM_TO_ESCALATION_POLICY
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_TEAM123
                      summary: Devops
                      type: team_reference
                      self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                      html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
                  name: teams
              resource:
                id: PD_ESCALATION_ID
                summary: DevOps Escalation
                type: escalation_policy_reference
                self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
                html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
            execution_context:
              request_id: 0cc413fb-8e7d-4414-b4bc-b7578bf3ba77
            execution_time: '2021-01-05T16:33:52.026Z'
            method:
              type: browser
            root_resource:
              id: PD_ESCALATION_ID
              summary: DevOps Escalation
              type: escalation_policy_reference
              self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
              html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
          - id: PD_CREATE_ESCALATION_POLICY
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: DevOps Escalation
                - name: description
                  value: Escalation Policy for devops
                - name: num_loops
                  value: '1'
              resource:
                id: PD_ESCALATION_ID
                summary: DevOps Escalation
                type: escalation_policy_reference
                self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
                html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
            execution_context:
              request_id: 0cc413fb-8e7d-4414-b4bc-b7578bf3ba77
            execution_time: '2021-01-05T16:33:51.951Z'
            method:
              type: browser
            root_resource:
              id: PD_ESCALATION_ID
              summary: DevOps Escalation
              type: escalation_policy_reference
              self: 'https://api.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
              html_url: 'https://mydomain.pagerduty.com/escalation_policies/PD_ESCALATION_ID'
        limit: 10
        next_cursor: null
    AuditRecordScheduleResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ASSIGN_TEAM_TO_SCHEDULE
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_TEAM123
                      summary: Devops
                      type: team_reference
                      self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                      html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
                  name: teams
              resource:
                id: PD_SCHEDULE_ID
                summary: DevOps Schedule
                type: schedule_reference
                self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
                html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
            execution_context:
              request_id: 13a1c0c3-545c-4ebb-4115-662fff9d8ad
            execution_time: '2021-01-05T16:25:41.324Z'
            method:
              type: browser
            root_resource:
              id: PD_SCHEDULE_ID
              summary: DevOps Schedule
              type: schedule_reference
              self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
              html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
          - id: PD_CREATE_SCHEDULE
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: DevOps Schedule
                - name: description
                  value: Our DevOps Team Schedule
                - name: time_zone
                  value: America/New_York
              resource:
                id: PD_SCHEDULE_ID
                summary: DevOps Schedule
                type: schedule_reference
                self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
                html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
            execution_context:
              request_id: 13a1c0c3-545c-4ebb-4115-662fff9d8ad
            execution_time: '2021-01-05T16:25:41.315Z'
            method:
              type: browser
            root_resource:
              id: PD_SCHEDULE_ID
              summary: DevOps Schedule
              type: schedule_reference
              self: 'https://api.pagerduty.com/schedules/PD_SCHEDULE_ID'
              html_url: 'https://mydomain.pagerduty.com/schedules/PD_SCHEDULE_ID'
        limit: 10
        next_cursor: null
    AuditRecordServiceResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORDID1_SERVICE_CREATED
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
            method:
              type: api_token
              truncated_token: 3usr
            root_resource:
              id: PN2YA40
              type: service_reference
              summary: Documentation Hub
            action: create
            details:
              resource:
                id: PD_SERVICE_ID
                type: service_reference
                summary: Documentation Hub
              fields:
                - name: name
                  value: Documentation Hub
                - name: description
                  value: Centralized documentation
                - name: incident_severity
                  value: always_high
                - name: alert_creation
                  value: create_alerts_and_incidents
                - name: auto_resolve_timeout
                  value: ''
                - name: acknowledgement_timeout
                  value: ''
                - name: alert_grouping
                  value: null
                - name: alert_grouping_timeout
                  value: ''
              references:
                - name: escalation_policy
                  added:
                    - id: PD_SERVICE_ID
                      summary: Default
                      type: escalation_policy_reference
        next_cursor: null
        limit: 10
    AuditRecordTeamResponse:
      summary: Response Example
      value:
        records:
          - id: PDRECORD_USER_ROLE_ON_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: my DevOps team
              self: 'https://api.pagerduty.com/teams/PD_TEAM123'
              html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
            action: update
            details:
              resource:
                id: PD_ADMIN_USER123
                type: user_reference
                summary: AA Admin User
                self: 'https://api.pagerduty.com/users/PD_ADMIN_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_ADMIN_USER123'
              fields:
                - name: members.role
                  value: manager
          - id: PDRECORD_USER_ADDED_TO_TEAM
            execution_time: '2020-06-04T15:30:16.272Z'
            execution_context:
              request_id: 111lDEOIH-534-4ljhLHJjh111
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: DevOps
            action: update
            details:
              resource:
                id: PD_TEAM123
                type: team_reference
                summary: DevOps
              references:
                - name: members
                  added:
                    - id: PD_ADMIN_USER123
                      type: user_reference
                      summary: AA Admin User
                      self: 'https://api.pagerduty.com/users/PD_ADMIN_USER123'
                      html_url: 'https://mydomain.pagerduty.com/users/PD_ADMIN_USER123'
          - id: PDRECORD_TEAM_CREATED
            execution_time: '2020-06-04T15:25:04.113Z'
            execution_context:
              request_id: 222lDEOIH-534-4ljhLHJjh222
              remote_address: 201.19.20.19
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            method:
              type: browser
            root_resource:
              id: PD_TEAM123
              type: team_reference
              summary: DevOps
              self: 'https://api.pagerduty.com/teams/PD_TEAM123'
              html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
            action: create
            details:
              resource:
                id: PD_TEAM123
                type: team_reference
                summary: DevOps
                self: 'https://api.pagerduty.com/teams/PD_TEAM123'
                html_url: 'https://mydomain.pagerduty.com/teams/PD_TEAM123'
              fields:
                - name: name
                  value: DevOps
                - name: description
                  value: MyDevOps Team
                - name: default_role
                  value: manager
        next_cursor: null
        limit: 10
    AuditRecordUserResponse:
      summary: Response Example
      value:
        records:
          - id: PD_ADD_HIGH_URGENCY_NOTIFICATION
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_NOTIFICATION_RULE_HIGH
                      summary: 'High Urgency (Email: Default)'
                      type: assignment_notification_rule_reference
                  name: notification_rules
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.343Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_HIGH_URGENCY_EMAIL_CONTACT
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: start_delay_in_minutes
                  value: '0'
                - name: urgency
                  value: high
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_method
              resource:
                id: PD_NOTIFICATION_RULE_HIGH
                summary: 'High Urgency (Email: Default)'
                type: assignment_notification_rule_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.343Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_LOW_URGENCY_EMAIL_RULE
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: start_delay_in_minutes
                  value: '0'
                - name: urgency
                  value: low
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_method
              resource:
                id: PD_NOTIFICATION_RULE_LOW
                summary: 'Low Urgency (Email: Default)'
                type: assignment_notification_rule_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.335Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_LOW_URGENCY_EMAIL_CONTACT
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_NOTIFICATION_RULE_LOW
                      summary: 'Low Urgency (Email: Default)'
                      type: assignment_notification_rule_reference
                  name: notification_rules
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.335Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_EMAIL_CONTACT_FOR_USER
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: label
                  value: Default
                - name: type
                  value: email_contact_method
                - name: address
                  value: testuser@testabc123.com
              resource:
                id: PD_CONTACT_METHOD
                summary: Default
                type: email_contact_method_reference
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.327Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_ADD_EMAIL_CONTACT_TO_USER
            action: update
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              references:
                - added:
                    - id: PD_CONTACT_METHOD
                      summary: Default
                      type: email_contact_method_reference
                  name: contact_methods
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:32.327Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
          - id: PD_CREATE_USER
            action: create
            actors:
              - id: PDUSER
                summary: John Snow
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER123'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER123'
            details:
              fields:
                - name: name
                  value: Test User
                - name: role
                  value: user
                - name: email
                  value: testuser@testabc123.com
                - name: time_zone
                  value: America/New_York
                - name: description
                  value: null
                - name: job_title
                  value: null
                - name: color
                  value: brown
              resource:
                id: PD_USER_999
                summary: Test User
                type: user_reference
                self: 'https://api.pagerduty.com/users/PD_USER_999'
                html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
            execution_context:
              request_id: a68929b2-d0f4-4def-b1d2-6bb744c44e3d
            execution_time: '2021-01-05T15:17:31.708Z'
            method:
              type: browser
            root_resource:
              id: PD_USER_999
              summary: Test User
              type: user_reference
              self: 'https://api.pagerduty.com/users/PD_USER_999'
              html_url: 'https://mydomain.pagerduty.com/users/PD_USER_999'
        limit: 10
        next_cursor: null
    OrchestrationPathGlobalTypeResponse:
      summary: Example Response
      value:
        orchestration_path:
          type: global
          parent:
            id: b02e973d-9620-4e0a-9edc-00fedf7d4694
            self: 'https://api.pagerduty.com/event_orchestrations/b02e973d-9620-4e0a-9edc-00fedf7d4694'
            type: event_orchestration_reference
          self: 'https://api.pagerduty.com/event_orchestrations/b02e973d-9620-4e0a-9edc-00fedf7d4694/global'
          sets:
            - id: start
              rules:
                - label: Always apply some consistent event transformations to all events
                  id: c91f72f3
                  conditions: []
                  actions:
                    variables:
                      - name: hostname
                        path: event.component
                        value: 'hostname: (.*)'
                        type: regex
                    extractions:
                      - template: '{{variables.hostname}}'
                        target: event.custom_details.hostname
                      - source: event.source
                        regex: www (.*) service
                        target: event.source
                    route_to: step-two
            - id: step-two
              rules:
                - label: All critical alerts should be treated as P1 incidents
                  id: 7c54529d
                  conditions:
                    - expression: event.severity matches 'critical'
                  actions:
                    priority: P0IN2KQ
                    suppress: false
                - label: Drop all events from the very-noisy monitoring tool
                  id: 1f6d9a33
                  conditions:
                    - expression: event.source matches part 'very-noisy'
                  actions:
                    drop_event: true
                - label: Never bother the on-call for info-level events outside of work hours
                  id: cd770384
                  conditions:
                    - expression: 'event.severity matches ''info'' and not (now in Mon,Tue,Wed,Thu,Fri 09:00:00 to 17:00:00 America/Los_Angeles)'
                  actions:
                    suppress: true
          catch_all:
            actions:
              suppress: true
          created_at: '2021-11-18T16:42:01Z'
          created_by:
            id: P8B9WR8
            self: 'https://api.pagerduty.com/users/P8B9WR8'
            type: user_reference
          updated_at: '2021-11-18T16:42:01Z'
          updated_by:
            id: P8B9WR8
            self: 'https://api.pagerduty.com/users/P8B9WR8'
            type: user_reference
          version: rn1Mja13T1HBdmPChqFilSQXUW2fWXM_
    CreateSubscriptionExample:
      summary: Example
      value:
        webhook_subscription:
          delivery_method:
            type: http_delivery_method
            url: 'https://example.com/receive_a_pagerduty_webhook'
            custom_headers:
              - name: header-name
                value: header-value
          description: Sends PagerDuty v3 webhook events somewhere interesting.
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
          filter:
            id: P393ZNQ
            type: service_reference
          type: webhook_subscription
    GetSubscriptionExample:
      summary: Example
      value:
        webhook_subscription:
          delivery_method:
            id: PF9KMXH
            secret: null
            temporarily_disabled: false
            type: http_delivery_method
            url: 'https://example.com/receive_a_pagerduty_webhook'
            custom_headers:
              - name: your-header-name
                value: '-- redacted --'
          description: Sends PagerDuty v3 webhook events somewhere interesting.
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
          filter:
            id: P393ZNQ
            type: service_reference
          id: PY1OL64
          type: webhook_subscription
          active: true
    ListSubscriptionExample:
      summary: Example
      value:
        webhook_subscriptions:
          - delivery_method:
              id: PF9KMXH
              secret: null
              type: http_delivery_method
              url: 'https://example.com/receive_a_pagerduty_webhook'
              custom_headers:
                - name: your-header-name
                  value: '-- redacted --'
            description: Sends PagerDuty v3 webhook events somewhere interesting.
            events:
              - incident.acknowledged
              - incident.annotated
              - incident.delegated
              - incident.escalated
              - incident.priority_updated
              - incident.reassigned
              - incident.resolved
              - incident.responder.added
              - incident.responder.replied
              - incident.triggered
              - incident.unacknowledged
            filter:
              id: P393ZNQ
              type: service_reference
            id: PY1OL64
            type: webhook_subscription
            active: true
        limit: 25
        offset: 0
        total: null
        more: false
    PutSubscriptionExample:
      summary: Update Subscribed Events
      value:
        webhook_subscription:
          events:
            - incident.acknowledged
            - incident.annotated
            - incident.delegated
            - incident.escalated
            - incident.priority_updated
            - incident.reassigned
            - incident.reopened
            - incident.resolved
            - incident.responder.added
            - incident.responder.replied
            - incident.triggered
            - incident.unacknowledged
  x-stackQL-resources:
    metrics_incidents_all:
      id: pagerduty.analytics.metrics_incidents_all
      name: metrics_incidents_all
      title: Metrics Incidents All
      methods:
        get_analytics_metrics_incidents_all:
          operation:
            $ref: '#/paths/~1analytics~1metrics~1incidents~1all/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    metrics_incidents_services:
      id: pagerduty.analytics.metrics_incidents_services
      name: metrics_incidents_services
      title: Metrics Incidents Services
      methods:
        get_analytics_metrics_incidents_service:
          operation:
            $ref: '#/paths/~1analytics~1metrics~1incidents~1services/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    metrics_incidents_teams:
      id: pagerduty.analytics.metrics_incidents_teams
      name: metrics_incidents_teams
      title: Metrics Incidents Teams
      methods:
        get_analytics_metrics_incidents_team:
          operation:
            $ref: '#/paths/~1analytics~1metrics~1incidents~1teams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    raw_incidents:
      id: pagerduty.analytics.raw_incidents
      name: raw_incidents
      title: Raw Incidents
      methods:
        get_analytics_incidents:
          operation:
            $ref: '#/paths/~1analytics~1raw~1incidents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_analytics_incidents_by_id:
          operation:
            $ref: '#/paths/~1analytics~1raw~1incidents~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/raw_incidents/methods/get_analytics_incidents_by_id'
        insert: []
        update: []
        delete: []
    raw_incidents_responses:
      id: pagerduty.analytics.raw_incidents_responses
      name: raw_incidents_responses
      title: Raw Incidents Responses
      methods:
        get_analytics_incident_responses_by_id:
          operation:
            $ref: '#/paths/~1analytics~1raw~1incidents~1{id}~1responses/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/raw_incidents_responses/methods/get_analytics_incident_responses_by_id'
        insert: []
        update: []
        delete: []
paths:
  /analytics/metrics/incidents/all:
    post:
      x-pd-requires-scope: analytics.read
      summary: Get aggregated incident data
      operationId: getAnalyticsMetricsIncidentsAll
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AnalyticsIncidentMetrics'
                  - $ref: '#/components/schemas/AnalyticsModel'
              examples:
                Example Response:
                  value:
                    aggregate_unit: day
                    data:
                      - mean_assignment_count: 1
                        mean_engaged_seconds: 366
                        mean_engaged_user_count: 1
                        mean_seconds_to_engage: 81
                        mean_seconds_to_first_ack: 63
                        mean_seconds_to_mobilize: 41
                        mean_seconds_to_resolve: 380
                        range_start: '2020-01-01T00:00:00.000000'
                        total_business_hour_interruptions: 81
                        total_engaged_seconds: 3591
                        total_escalation_count: 5
                        total_incident_count: 124
                        total_off_hour_interruptions: 20
                        total_sleep_hour_interruptions: 21
                        total_snoozed_seconds: 78
                    filters:
                      create_range_start: '2020-01-01T00:00:00Z'
                      create_range_end: '2020-02-01T00:00:00Z'
                    time_zone: Etc/UTC
        '400':
          $ref: '#/components/responses/ArgumentError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsModel'
            examples:
              Example Request:
                value:
                  filters:
                    created_at_start: '2021-01-01T00:00:00-05:00'
                    created_at_end: '2021-01-31T00:00:00-05:00'
                    urgency: high
                    major: true
                    team_ids:
                      - PGVXG6U
                      - PNVU4U4
                    service_ids:
                      - PQVUB8D
                      - PU2D9X3
                  aggregate_unit: day
                  time_zone: Etc/UTC
        description: Parameters and filters to apply to the dataset.
      description: |
        Provides aggregated enriched metrics for incidents.

        The provided metrics are aggregated by day, week, month using the aggregate_unit parameter, or for the entire period if no aggregate_unit is provided.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
        <!-- theme: info -->
        > A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.
        <!-- theme: info -->
        > **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.

        Scoped OAuth requires: `analytics.read`
      tags:
        - Analytics
  /analytics/metrics/incidents/services:
    post:
      x-pd-requires-scope: analytics.read
      summary: Get aggregated service data
      operationId: getAnalyticsMetricsIncidentsService
      responses:
        '200':
          description: Currently the response only returns data for services that match the filters and have data.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AnalyticsIncidentMetrics'
                  - $ref: '#/components/schemas/AnalyticsModel'
              examples:
                Example Response:
                  value:
                    aggregate_unit: week
                    data:
                      - mean_assignment_count: 1
                        mean_engaged_seconds: 366
                        mean_engaged_user_count: 1
                        mean_seconds_to_engage: 81
                        mean_seconds_to_first_ack: 63
                        mean_seconds_to_mobilize: 41
                        mean_seconds_to_resolve: 380
                        service_id: PPSCXAN
                        service_name: Critical Prod Service 1
                        team_id: P3XUQ75
                        team_name: Engineering
                        total_business_hour_interruptions: 81
                        total_engaged_seconds: 3591
                        total_escalation_count: 5
                        total_incident_count: 124
                        total_off_hour_interruptions: 20
                        total_sleep_hour_interruptions: 21
                        total_snoozed_seconds: 78
                        up_time_pct: 99.92677595628416
                      - mean_assignment_count: 1
                        mean_engaged_seconds: 366
                        mean_engaged_user_count: 1
                        mean_seconds_to_engage: 81
                        mean_seconds_to_first_ack: 63
                        mean_seconds_to_mobilize: 41
                        mean_seconds_to_resolve: 380
                        service_id: PPSCXAN
                        service_name: Meme Fetcher Bot
                        team_id: PDN84B1
                        team_name: Marketing
                        total_business_hour_interruptions: 81
                        total_engaged_seconds: 3591
                        total_escalation_count: 5
                        total_incident_count: 124
                        total_off_hour_interruptions: 20
                        total_sleep_hour_interruptions: 21
                        total_snoozed_seconds: 78
                        up_time_pct: 99.98747723132969
                    filters:
                      created_at_start: '2020-06-17T17:27:27Z'
                      created_at_end: '2020-06-16T17:27:27Z'
                    time_zone: Etc/UTC
        '400':
          $ref: '#/components/responses/ArgumentError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsModel'
            examples:
              Example Request:
                value:
                  filters:
                    created_at_start: '2021-01-01T00:00:00-05:00'
                    created_at_end: '2021-01-31T00:00:00-05:00'
                    urgency: high
                    major: true
                    team_ids:
                      - PGVXG6U
                      - PNVU4U4
                    service_ids:
                      - PQVUB8D
                      - PU2D9X3
                    priority_ids:
                      - PITMC5Y
                      - PEHBBT8
                  aggregate_unit: week
                  time_zone: Etc/UTC
        description: Parameters and filters to apply to the dataset.
      description: |
        Provides aggregated metrics for incidents aggregated into units of time by service.

        Example metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).
        Data can be aggregated by day, week or month in addition to by service, or provided just as a collection of aggregates for each service in the dataset for the entire period.  If a unit is provided, each row in the returned dataset will include a 'range_start' timestamp.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
        <!-- theme: info -->
        > A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.
        <!-- theme: info -->
        > **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.

        Scoped OAuth requires: `analytics.read`
      tags:
        - Analytics
  /analytics/metrics/incidents/teams:
    post:
      x-pd-requires-scope: analytics.read
      summary: Get aggregated team data
      operationId: getAnalyticsMetricsIncidentsTeam
      responses:
        '200':
          description: Currently the response only returns data for teams that match the filters and have data.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AnalyticsIncidentMetrics'
                  - $ref: '#/components/schemas/AnalyticsModel'
              examples:
                Example Response:
                  value:
                    data:
                      - mean_assignment_count: 1
                        mean_engaged_seconds: 366
                        mean_engaged_user_count: 1
                        mean_seconds_to_engage: 81
                        mean_seconds_to_first_ack: 63
                        mean_seconds_to_mobilize: 41
                        mean_seconds_to_resolve: 380
                        team_id: PPSCXAN
                        team_name: 'Best Team A #1'
                        total_business_hour_interruptions: 81
                        total_engaged_seconds: 3591
                        total_escalation_count: 5
                        total_incident_count: 124
                        total_off_hour_interruptions: 20
                        total_sleep_hour_interruptions: 21
                        total_snoozed_seconds: 78
                        up_time_pct: 99.98861566484517
                      - mean_assignment_count: 1
                        mean_engaged_seconds: 366
                        mean_engaged_user_count: 1
                        mean_seconds_to_engage: 81
                        mean_seconds_to_first_ack: 63
                        mean_seconds_to_mobilize: 41
                        mean_seconds_to_resolve: 380
                        team_id: PPSCXAN
                        team_name: 'Best Team A #2'
                        total_business_hour_interruptions: 81
                        total_engaged_seconds: 3591
                        total_escalation_count: 5
                        total_incident_count: 124
                        total_off_hour_interruptions: 20
                        total_sleep_hour_interruptions: 21
                        total_snoozed_seconds: 78
                        up_time_pct: 99.98483728172828
                    filters:
                      created_at_start: '2020-06-17T17:27:27Z'
                      created_at_end: '2020-06-16T17:27:27Z'
                    aggregate_unit: day
                    time_zone: Etc/UTC
        '400':
          $ref: '#/components/responses/ArgumentError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticsModel'
            examples:
              Example Request:
                value:
                  filters:
                    created_at_start: '2021-01-01T00:00:00-05:00'
                    created_at_end: '2021-01-31T00:00:00-05:00'
                    urgency: high
                    major: true
                    team_ids:
                      - PGVXG6U
                      - PNVU4U4
                    service_ids:
                      - PQVUB8D
                      - PU2D9X2
                    priority_ids:
                      - PITMC5Y
                      - PEHBBT8
                  aggregate_unit: week
                  time_zone: Etc/UTC
        description: Parameters and filters to apply to the dataset.
      description: |
        Provides aggregated metrics for incidents aggregated into units of time by team.

        Example metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).
        Data can be aggregated by day, week or month in addition to by team, or provided just as a collection of aggregates for each team in the dataset for the entire period.  If a unit is provided, each row in the returned dataset will include a 'range_start' timestamp.

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
        <!-- theme: info -->
        > A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.
        <!-- theme: info -->
        > **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.

        Scoped OAuth requires: `analytics.read`
      tags:
        - Analytics
  /analytics/raw/incidents:
    post:
      x-pd-requires-scope: analytics.read
      summary: Get raw data - multiple incidents
      operationId: getAnalyticsIncidents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  first:
                    type: string
                    description: Cursor to identify the first object in the response.
                  last:
                    type: string
                    description: Cursor to identify the last object in the response.
                  limit:
                    type: integer
                    description: Number of results to include in the batch.
                  more:
                    type: boolean
                    description: Indicates if there are more resources available than were returned.
                  order:
                    type: string
                    description: 'The order in which the results were sorted;  asc for ascending, desc for descending.'
                    enum:
                      - asc
                      - desc
                  order_by:
                    type: string
                    description: The column that was used for ordering the results.
                    enum:
                      - created_at
                      - seconds_to_resolve
                  filters:
                    type: object
                    description: A collection of filters that were applied to the results.
                    properties:
                      created_at_start:
                        type: string
                        description: The lower boundary for the created_at range filter applied to the results.
                      created_at_end:
                        type: string
                        description: The upper boundary for the created_at range filter applied to the results.
                      urgency:
                        type: string
                        description: The urgency filter applied to the results.
                        enum:
                          - high
                          - low
                      major:
                        type: boolean
                        description: 'The [major incident](https://support.pagerduty.com/docs/operational-reviews#major-incidents) filter applied to the results.'
                      team_ids:
                        type: array
                        description: The team_ids filter applied to the results.
                        items:
                          type: string
                      service_ids:
                        type: array
                        description: The service_ids filter applied to the results.
                        items:
                          type: string
                      priority_ids:
                        type: array
                        description: The priority_ids filter applied to the results.
                        maxItems: 5
                        items:
                          type: string
                      priority_names:
                        type: array
                        description: The priority_names filter applied to the results.
                        maxItems: 5
                        items:
                          type: string
                  time_zone:
                    type: string
                    description: The time zone that the results are in.
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/AnalyticsRawIncident'
                required:
                  - first
                  - last
                  - limit
                  - more
                  - order
                  - order_by
                  - time_zone
                  - data
              examples:
                Example Response:
                  value:
                    data:
                      - assignment_count: 4
                        business_hour_interruptions: 5
                        created_at: '2020-05-31T10:05:00'
                        description: The server is on fire!
                        engaged_seconds: 3510
                        engaged_user_count: 10
                        escalation_count: 1
                        id: PYC0H08
                        incident_number: 928
                        major: false
                        off_hour_interruptions: 4
                        priority_id: null
                        priority_name: null
                        resolved_at: '2020-05-31T10:15:00'
                        seconds_to_engage: 70
                        seconds_to_first_ack: 5
                        seconds_to_mobilize: 19
                        seconds_to_resolve: 3305
                        service_id: PPSCXAN
                        service_name: Engineering
                        sleep_hour_interruptions: 3
                        snoozed_seconds: 604
                        team_id: null
                        team_name: null
                        urgency: low
                        user_defined_effort_seconds: null
                      - assignment_count: 1
                        business_hour_interruptions: 2
                        created_at: '2020-05-31T10:05:00'
                        description: Reply on social media
                        engaged_seconds: 521
                        engaged_user_count: 6
                        escalation_count: 1
                        id: PCOOHCY
                        incident_number: 929
                        major: false
                        off_hour_interruptions: 3
                        priority_id: POTCOTX
                        priority_name: SEV-2
                        resolved_at: '2020-05-31T10:15:00'
                        seconds_to_engage: 24
                        seconds_to_first_ack: 48
                        seconds_to_mobilize: 122
                        seconds_to_resolve: 2029
                        service_id: PPSCXAN
                        service_name: Social media tracking
                        sleep_hour_interruptions: 1
                        snoozed_seconds: 698
                        team_id: null
                        team_name: Marketing
                        urgency: low
                        user_defined_effort_seconds: null
                    ending_before: null
                    filters: {}
                    first: PYC0H08
                    last: PCOOHCY
                    limit: 10
                    more: true
                    order: desc
                    order_by: created_at
                    starting_after: null
                    time_zone: Etc/UTC
        '400':
          $ref: '#/components/responses/ArgumentError'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: object
                  description: 'Filters the result, only show incidents that match the conditions passed in the filter.'
                  properties:
                    created_at_start:
                      type: string
                      description: 'Filters the result, showing only the incidents where the creation timestamp is greater than the filter value.'
                      example: '2020-05-01T00:00:00-04:00'
                    created_at_end:
                      type: string
                      description: 'Filters the result, showing only the incidents where the creation timestamp is less than the filter value.'
                      example: '2020-06-01T00:00:00-04:00'
                    urgency:
                      type: string
                      description: 'Filters the result, showing only the incidents where urgency matches the filter value.'
                      example: high
                    major:
                      type: boolean
                      description: 'An incident is classified as a [major incident](https://support.pagerduty.com/docs/operational-reviews#major-incidents) if it has one of the two highest priorities, or if multiple responders are added and acknowledge the incident.'
                      example: true
                    team_ids:
                      type: array
                      description: An array of team IDs. Only results related to these teams will be returned. Account must have the teams ability to use this parameter.
                      items:
                        type: string
                      example:
                        - P373JQQ
                        - PAECHJV
                        - P7SYGW6
                    service_ids:
                      type: array
                      description: An array of service IDs. Only results related to these services will be returned.
                      items:
                        type: string
                      example:
                        - PC8O0L3
                        - PX01HJD
                        - P5FK83M
                    priority_ids:
                      type: array
                      description: The priority_ids filter applied to the results.
                      items:
                        type: string
                      example:
                        - PITMC5Y
                        - PEHBBT8
                        - PB8QADI
                    priority_names:
                      type: array
                      description: The priority_names filter applied to the results.
                      items:
                        type: string
                      example:
                        - P1
                        - P2
                        - P3
                starting_after:
                  type: string
                  description: A cursor to indicate the reference point that the results should follow
                ending_before:
                  type: string
                  description: A cursor to indicate the reference point that the results should precede
                order:
                  type: string
                  description: 'The order the results;  asc for ascending, desc for descending. Defaults to ''desc''.'
                  enum:
                    - asc
                    - desc
                order_by:
                  type: string
                  description: The column to use for ordering the results. Defaults to 'created_at'.
                  enum:
                    - created_at
                    - seconds_to_resolve
                limit:
                  type: integer
                  description: |-
                    Number of results to include in each batch.
                    Limits between 1 to 1000 are accepted.
                  example: 20
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 1000
                  exclusiveMaximum: false
                time_zone:
                  type: string
                  description: The time zone to use for the results.
                  example: Etc/UTC
            examples:
              Example Request:
                value:
                  filters:
                    created_at_start: '2021-01-01T00:00:00-05:00'
                    created_at_end: '2021-01-31T00:00:00-05:00'
                    urgency: high
                    major: true
                    team_ids:
                      - PGVXG6U
                      - PNVU4U4
                    service_ids:
                      - PQVUB8D
                      - PU2D9X3
                    priority_names:
                      - P1
                      - P2
                  limit: 20
                  order: desc
                  order_by: created_at
                  time_zone: Etc/UTC
        description: Parameters and filters to apply to the dataset.
      description: |
        Provides enriched incident data and metrics for multiple incidents.

        Example metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
        <!-- theme: info -->
        > A `team_ids` or `service_ids` filter is required for [user-level API keys](https://support.pagerduty.com/docs/using-the-api#section-generating-a-personal-rest-api-key) or keys generated through an OAuth flow. Account-level API keys do not have this requirement.
        <!-- theme: info -->
        > **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.

        Scoped OAuth requires: `analytics.read`
      tags:
        - Analytics
  '/analytics/raw/incidents/{id}':
    get:
      x-pd-requires-scope: analytics.read
      summary: Get raw data - single incident
      tags:
        - Analytics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsRawIncident'
              examples:
                Example Response:
                  value:
                    time_zone: Etc/UTC
                    data:
                      assignment_count: 0
                      business_hour_interruptions: 0
                      created_at: '2019-12-01T21:00:00Z'
                      description: The server is on fire!
                      engaged_seconds: 75
                      engaged_user_count: 2
                      escalation_count: 0
                      id: PJASD33
                      incident_number: 924
                      major: true
                      off_hour_interruptions: 2
                      priority_id: PZOZQXA
                      priority_name: SEV-1
                      resolved_at: '2019-12-01T21:01:00Z'
                      seconds_to_engage: 30
                      seconds_to_first_ack: 15
                      seconds_to_mobilize: 15
                      seconds_to_resolve: 60
                      service_id: PAQTPI2
                      service_name: Engineering
                      sleep_hour_interruptions: 0
                      snoozed_seconds: 0
                      team_id: PNVU4UR
                      team_name: Engineering team 7
                      urgency: high
                      user_defined_effort_seconds: null
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      operationId: getAnalyticsIncidentsById
      description: |
        Provides enriched incident data and metrics for a single incident.

        Example metrics include Seconds to Resolve, Seconds to Engage, Snoozed Seconds, and Sleep Hour Interruptions. Some metric definitions can be found in our [Knowledge Base](https://support.pagerduty.com/docs/pagerduty-analytics).

        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
        <!-- theme: info -->
        > **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incidents appear in the Analytics API.

        Scoped OAuth requires: `analytics.read`
      parameters:
        - $ref: '#/components/parameters/id'
  '/analytics/raw/incidents/{id}/responses':
    get:
      x-pd-requires-scope: analytics.read
      summary: Get raw responses from a single incident
      tags:
        - Analytics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  incident_id:
                    type: string
                    description: The Incident ID passed in to the request.
                  limit:
                    type: integer
                    description: Number of results to include in the batch.
                  order:
                    type: string
                    description: 'The order in which the results were sorted; asc for ascending, desc for descending.'
                    enum:
                      - asc
                      - desc
                  order_by:
                    type: string
                    description: The column that was used for ordering the results.
                    enum:
                      - requested_at
                  time_zone:
                    type: string
                    description: The time zone that the results are in.
                  responses:
                    type: array
                    items:
                      title: Analytics Raw Incident Responses
                      type: object
                      properties:
                        responder_name:
                          type: string
                          description: Name of the user associated with the Incident Response.
                        responder_id:
                          type: string
                          description: ID of the user associated with the Incident Response.
                        response_status:
                          type: string
                          description: Status of the user's interaction with the Incident notification.
                          enum:
                            - joined
                            - pending
                            - declined
                        responder_type:
                          type: string
                          description: |-
                            Type of responder, where `assigned` means the user was added to the Incident via Assignment at Incident creation,
                            `reassigned` means the user was added to the Incident via Reassignment, `escalated` means the user was added via Escalation,
                            and `added_responder` means the user was added via Responder Reqeuest.
                          enum:
                            - assigned
                            - reassigned
                            - escalated
                            - added_responder
                        requested_at:
                          type: string
                          description: Timestamp of when the user was requested.
                        responded_at:
                          type: string
                          description: Timestamp of when the user responded to the request.
                        time_to_respond_seconds:
                          type: integer
                          description: 'Measures the time it took for the user to respond to the Incident request. In other words, `responded_at - requested_at`.'
              examples:
                Example Response:
                  value:
                    incident_id: ABCDEFGHIJKLMN
                    limit: 100
                    order: asc
                    order_by: requested_at
                    time_zone: Etc/UTC
                    responses:
                      responder_name: Earline Greenholt
                      responder_id: PXPGF42
                      response_status: accepted
                      responder_type: added_responder
                      requested_at: '2023-01-05T10:15:00'
                      responded_at: '2023-01-05T10:18:00'
                      time_to_respond_seconds: 180
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  description: |-
                    Number of results to include in each batch.
                    Limits between 1 to 1000 are accepted.
                  example: 20
                  minimum: 0
                  exclusiveMinimum: true
                  maximum: 1000
                  exclusiveMaximum: false
                order:
                  type: string
                  description: 'The order the results; asc for ascending, desc for descending. Defaults to `desc`.'
                  enum:
                    - asc
                    - desc
                order_by:
                  type: string
                  description: The column to use for ordering the results.
                  enum:
                    - requested_at
                time_zone:
                  type: string
                  description: The time zone to use for the results.
                  example: Etc/UTC
            examples:
              Example Request:
                value:
                  limit: 20
                  order: desc
                  order_by: requested_at
                  time_zone: America/Los_Angeles
        description: Parameters to apply to the dataset.
      operationId: getAnalyticsIncidentResponsesById
      description: |
        Provides enriched responder data for a single incident.

        Example metrics include Time to Respond, Responder Type, and Response Status. See metric definitions below.
        <!-- theme: warning -->
        > ### Early Access
        > This endpoint is in Early Access and may change at any time. You must pass in the X-EARLY-ACCESS header to access it.
        <!-- theme: info -->
        > **Note:** Analytics data is updated once per day. It takes up to 24 hours before new incident responses appear in the Analytics API.
        Scoped OAuth requires: `analytics.read`
      parameters:
        - $ref: '#/components/parameters/id'
