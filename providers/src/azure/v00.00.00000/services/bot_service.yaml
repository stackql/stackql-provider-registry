openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Bot Service
  description: Azure Bot Service is a platform for creating smart conversational agents.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkSecurityPerimeterConfigurationNameParameter:
      name: networkSecurityPerimeterConfigurationName
      in: path
      description: The resource association Name. Composed of parameter guid and association name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: .*
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the Bot resource group in the user subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        type: string
    resourceNameParameter:
      name: resourceName
      in: path
      description: The name of the Bot resource.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Azure Subscription ID.
      required: true
      schema:
        type: string
    apiVersionParameter:
      name: api-version
      in: query
      description: Version of the API to be used with the client request.
      required: false
      schema:
        type: string
    operationResultIdParameter:
      name: operationResultId
      in: path
      description: The ID of the operation result to get.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    connectionNameParameter:
      name: connectionName
      in: path
      description: The name of the Bot Service Connection Setting resource.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 64
        minLength: 2
        pattern: ^[a-zA-Z0-9][\sa-zA-Z0-9_.-]*$
        type: string
    channelNameParameter:
      name: channelName
      in: path
      description: The name of the Channel resource.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - AlexaChannel
          - FacebookChannel
          - EmailChannel
          - KikChannel
          - TelegramChannel
          - SlackChannel
          - MsTeamsChannel
          - SkypeChannel
          - WebChatChannel
          - DirectLineChannel
          - SmsChannel
          - LineChannel
          - DirectLineSpeechChannel
          - OutlookChannel
          - Omnichannel
          - TelephonyChannel
          - AcsChatChannel
          - SearchAssistant
          - M365Extensions
        x-ms-enum:
          name: channelName
          modelAsString: false
          values:
            - value: AlexaChannel
            - value: FacebookChannel
            - value: EmailChannel
            - value: KikChannel
            - value: TelegramChannel
            - value: SlackChannel
            - value: MsTeamsChannel
            - value: SkypeChannel
            - value: WebChatChannel
            - value: DirectLineChannel
            - value: SmsChannel
            - value: LineChannel
            - value: DirectLineSpeechChannel
            - value: OutlookChannel
            - value: Omnichannel
            - value: TelephonyChannel
            - value: AcsChatChannel
            - value: SearchAssistant
            - value: M365Extensions
        type: string
    regenerateKeyschannelNameParameter:
      name: channelName
      in: path
      description: The name of the Channel resource for which keys are to be regenerated.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - WebChatChannel
          - DirectLineChannel
        x-ms-enum:
          name: regenerateKeysChannelName
          modelAsString: false
          values:
            - value: WebChatChannel
            - value: DirectLineChannel
        type: string
  schemas:
    Resource:
      description: Azure resource
      x-ms-azure-resource: true
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: Required. Gets or sets the Kind of the resource.
          nullable: true
          x-nullable: true
        etag:
          type: string
          description: Entity Tag.
        zones:
          type: array
          items:
            type: string
          description: Entity zones
          readOnly: true
      type: object
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          description: Entity Tag.
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: Required. Gets or sets the Kind of the resource.
          nullable: true
          x-nullable: true
        zones:
          type: array
          items:
            type: string
          description: Entity zones
          readOnly: true
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        location:
          description: Specifies the location of the resource.
          type: string
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: Required. Gets or sets the Kind of the resource.
          nullable: true
          x-nullable: true
        etag:
          type: string
          description: Entity Tag.
        zones:
          type: array
          items:
            type: string
          description: Entity zones
          readOnly: true
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: Required. Gets or sets the Kind of the resource.
          nullable: true
          x-nullable: true
        etag:
          type: string
          description: Entity Tag.
        zones:
          type: array
          items:
            type: string
          description: Entity zones
          readOnly: true
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
          description: The sku name
        tier:
          readOnly: true
          type: string
          description: Gets the sku tier. This is based on the SKU name.
          enum:
            - Free
            - Standard
          x-ms-enum:
            name: SkuTier
            modelAsString: true
      required:
        - name
      description: The SKU of the cognitive services account.
      type: object
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    NetworkSecurityPerimeterConfigurationList:
      description: Result of the List NetworkSecurityPerimeterConfiguration operation.
      type: object
      properties:
        value:
          description: A collection of Network Security Perimeter configurations
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        nextLink:
          description: Link to retrieve next page of results.
          type: string
          readOnly: true
    NetworkSecurityPerimeterConfiguration:
      description: Network Security Perimeter configuration
      readOnly: true
      properties:
        id:
          description: Fully qualified identifier of the resource
          type: string
        name:
          description: Name of the resource
          type: string
        type:
          description: Type of the resource
          type: string
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProperties'
          description: Properties of the Network Security Perimeter configuration
      type: object
    NetworkSecurityPerimeterConfigurationProperties:
      description: Properties of Network Security Perimeter configuration
      type: object
      readOnly: true
      properties:
        provisioningState:
          enum:
            - Creating
            - Updating
            - Accepted
            - Succeeded
            - Failed
            - Deleting
          type: string
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          default: Succeeded
        provisioningIssues:
          description: List of Provisioning Issues if any
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningIssue'
          x-ms-identifiers: []
        networkSecurityPerimeter:
          $ref: '#/components/schemas/NetworkSecurityPerimeter'
        resourceAssociation:
          $ref: '#/components/schemas/ResourceAssociation'
        profile:
          $ref: '#/components/schemas/Profile'
    ProvisioningIssue:
      description: Describes Provisioning issue for given Network Security Perimeter configuration
      readOnly: true
      properties:
        name:
          description: Name of the issue
          type: string
        properties:
          description: Properties of Provisioning Issue
          type: object
          readOnly: true
          properties:
            issueType:
              description: Type of Issue
              type: string
            severity:
              description: Provisioning state of Network Security Perimeter configuration propagation
              enum:
                - Warning
                - Error
              type: string
              x-ms-enum:
                name: Severity
                modelAsString: true
            description:
              description: Description of the issue
              type: string
            suggestedResourceIds:
              type: array
              items:
                readOnly: true
                type: string
                format: arm-id
                description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              readOnly: true
              description: ARM IDs of resources that can be associated to the same perimeter to remediate the issue.
            suggestedAccessRules:
              description: Access rules that can be added to the same profile to remediate the issue.
              type: array
              items:
                $ref: '#/components/schemas/NspAccessRule'
              x-ms-identifiers: []
      type: object
    NetworkSecurityPerimeter:
      description: Information about Network Security Perimeter
      type: object
      readOnly: true
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        perimeterGuid:
          description: Guid of the Network Security Perimeter
          type: string
        location:
          description: Location of the Network Security Perimeter
          type: string
    ResourceAssociation:
      description: Information about resource association
      readOnly: true
      type: object
      properties:
        name:
          description: Name of the resource association
          type: string
        accessMode:
          description: Access Mode of the resource association
          enum:
            - Enforced
            - Learning
            - Audit
          type: string
          x-ms-enum:
            name: AccessMode
            modelAsString: true
    Profile:
      description: Information about profile
      readOnly: true
      type: object
      properties:
        name:
          description: Name of the profile
          type: string
        accessRulesVersion:
          description: Current access rules version
          type: integer
          format: int64
        accessRules:
          description: List of Access Rules
          type: array
          items:
            $ref: '#/components/schemas/NspAccessRule'
          x-ms-identifiers: []
        diagnosticSettingsVersion:
          description: Current diagnostic settings version
          type: integer
          format: int64
        enabledLogCategories:
          type: array
          items:
            type: string
          readOnly: true
          description: List of log categories
    NspAccessRule:
      description: Information of Access Rule in a profile
      readOnly: true
      properties:
        name:
          description: Name of the access rule
          type: string
        properties:
          description: Properties of Access Rule
          readOnly: true
          type: object
          properties:
            direction:
              description: Direction of Access Rule
              enum:
                - Inbound
                - Outbound
              type: string
              x-ms-enum:
                name: NspAccessRuleDirection
                modelAsString: true
            addressPrefixes:
              description: Address prefixes in the CIDR format for inbound rules
              type: array
              items:
                description: IP Address
                type: string
            subscriptions:
              description: Subscriptions for inbound rules
              type: array
              items:
                description: Subscription for inbound rule
                type: object
                readOnly: true
                properties:
                  id:
                    description: Fully qualified identifier of subscription
                    type: string
            networkSecurityPerimeters:
              description: NetworkSecurityPerimeters for inbound rules
              type: array
              readOnly: true
              items:
                $ref: '#/components/schemas/NetworkSecurityPerimeter'
            fullyQualifiedDomainNames:
              description: FQDN for outbound rules
              type: array
              readOnly: true
              items:
                description: Fully qualified domain name
                type: string
            emailAddresses:
              description: Email addresses for outbound rules
              type: array
              readOnly: true
              items:
                type: string
            phoneNumbers:
              description: Phone numbers for outbound rules
              type: array
              readOnly: true
              items:
                type: string
      type: object
    PrivateEndpoint:
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
      type: object
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateEndpointConnectionProperties:
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
        groupIds:
          type: array
          items:
            type: string
          description: Group ids
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
      type: object
    PrivateLinkServiceConnectionState:
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
      type: object
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateLinkResourceProperties:
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
      type: object
    PrivateEndpointConnectionListResult:
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
      type: object
    PrivateLinkResourceListResult:
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
      type: object
    SkuName:
      type: string
      description: The name of SKU.
      enum:
        - F0
        - S1
      x-ms-enum:
        name: SkuName
        modelAsString: true
    Kind:
      type: string
      description: Indicates the type of bot service
      enum:
        - sdk
        - designer
        - bot
        - function
        - azurebot
      x-ms-enum:
        name: Kind
        modelAsString: true
      x-ms-mutability:
        - create
        - read
    Bot:
      description: Bot resource definition
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: Required. Gets or sets the Kind of the resource.
          nullable: true
          x-nullable: true
        etag:
          type: string
          description: Entity Tag.
        zones:
          type: array
          items:
            type: string
          description: Entity zones
          readOnly: true
        properties:
          $ref: '#/components/schemas/BotProperties'
          description: The set of properties specific to bot resource
      type: object
    BotProperties:
      properties:
        displayName:
          type: string
          description: The Name of the bot
        description:
          type: string
          description: The description of the bot
        iconUrl:
          type: string
          description: The Icon Url of the bot
          default: ''
        endpoint:
          type: string
          description: The bot's endpoint
          nullable: true
        endpointVersion:
          type: string
          readOnly: true
          description: The bot's endpoint version
        allSettings:
          description: Contains resource all settings defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        parameters:
          description: Contains resource parameters defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        manifestUrl:
          type: string
          description: The bot's manifest url
        msaAppType:
          type: string
          description: Microsoft App Type for the bot
          enum:
            - UserAssignedMSI
            - SingleTenant
            - MultiTenant
          x-ms-enum:
            name: msaAppType
            modelAsString: true
        msaAppId:
          type: string
          description: Microsoft App Id for the bot
          x-ms-mutability:
            - create
            - read
        msaAppTenantId:
          type: string
          description: Microsoft App Tenant Id for the bot
          x-ms-mutability:
            - create
            - read
        msaAppMSIResourceId:
          type: string
          description: Microsoft App Managed Identity Resource Id for the bot
        configuredChannels:
          type: array
          items:
            type: string
          readOnly: true
          description: Collection of channels for which the bot is configured
        enabledChannels:
          type: array
          items:
            type: string
          readOnly: true
          description: Collection of channels for which the bot is enabled
        developerAppInsightKey:
          type: string
          description: The Application Insights key
        developerAppInsightsApiKey:
          type: string
          description: The Application Insights Api Key
        developerAppInsightsApplicationId:
          type: string
          description: The Application Insights App Id
        luisAppIds:
          type: array
          items:
            type: string
          description: Collection of LUIS App Ids
        luisKey:
          type: string
          description: The LUIS Key
        isCmekEnabled:
          type: boolean
          description: Whether Cmek is enabled
          default: false
        cmekKeyVaultUrl:
          type: string
          description: The CMK Url
        cmekEncryptionStatus:
          type: string
          description: The CMK encryption status
          readOnly: true
        tenantId:
          type: string
          description: The Tenant Id for the bot
          x-ms-mutability:
            - create
            - read
        publicNetworkAccess:
          description: Whether the bot is in an isolated network
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
        isStreamingSupported:
          type: boolean
          description: Whether the bot is streaming supported
          default: false
        isDeveloperAppInsightsApiKeySet:
          type: boolean
          description: Whether the bot is developerAppInsightsApiKey set
          readOnly: true
        migrationToken:
          type: string
          description: Token used to migrate non Azure bot to azure subscription
          readOnly: true
        disableLocalAuth:
          type: boolean
          description: Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        schemaTransformationVersion:
          type: string
          description: The channel schema transformation version for the bot
          nullable: true
          default: null
        storageResourceId:
          type: string
          description: The storage resourceId for the bot
        privateEndpointConnections:
          type: array
          readOnly: true
          description: List of Private Endpoint Connections configured for the bot
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        networkSecurityPerimeterConfigurations:
          type: array
          readOnly: true
          description: List of Network Security Perimeter configurations for the bot
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        openWithHint:
          type: string
          description: The hint to browser (e.g. protocol handler) on how to open the bot for authoring
        appPasswordHint:
          type: string
          description: The hint (e.g. keyVault secret resourceId) on how to fetch the app secret
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        publishingCredentials:
          type: string
          description: Publishing credentials of the resource
      description: The parameters to provide for the Bot.
      required:
        - displayName
        - endpoint
        - msaAppId
      type: object
    BotResponseList:
      properties:
        nextLink:
          description: The link used to get the next page of bot service resources.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Bot'
          description: Gets the list of bot service results and their properties.
      description: The list of bot service operation response.
      type: object
    CreateEmailSignInUrlResponse:
      description: The ARM create email sign in url operation response.
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        properties:
          $ref: '#/components/schemas/CreateEmailSignInUrlResponseProperties'
          description: The set of properties specific to sign in url
      type: object
    CreateEmailSignInUrlResponseProperties:
      type: object
      description: The set of properties specific to sign in url
      properties:
        url:
          description: Sign in url.
          type: string
    ListChannelWithKeysResponse:
      description: The ARM channel of list channel with keys operation response.
      properties:
        properties:
          $ref: '#/components/schemas/Channel'
          description: The set of properties specific to bot channel resource
        resource:
          $ref: '#/components/schemas/Channel'
          description: The set of properties specific to bot channel resource
        setting:
          $ref: '#/components/schemas/ChannelSettings'
          description: Channel settings
        provisioningState:
          type: string
          description: Provisioning state of the resource
        entityTag:
          type: string
          description: Entity tag of the resource
        changedTime:
          type: string
          description: Changed time of the resource
      type: object
    BotChannel:
      description: Bot channel resource definition
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: Required. Gets or sets the Kind of the resource.
          nullable: true
          x-nullable: true
        etag:
          type: string
          description: Entity Tag.
        zones:
          type: array
          items:
            type: string
          description: Entity zones
          readOnly: true
        properties:
          $ref: '#/components/schemas/Channel'
          description: The set of properties specific to bot channel resource
      type: object
    ChannelSettings:
      type: object
      description: Channel settings definition
      properties:
        extensionKey1:
          type: string
          description: The extensionKey1
          default: ''
        extensionKey2:
          type: string
          description: The extensionKey2
          default: ''
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Site'
          description: The list of sites
        channelId:
          type: string
          description: The channel id
        channelDisplayName:
          type: string
          description: The channel display name
        botId:
          type: string
          description: The bot id
        botIconUrl:
          type: string
          description: The bot icon url
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
        disableLocalAuth:
          type: boolean
          description: Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
        requireTermsAgreement:
          type: boolean
          description: Whether customer needs to agree to new terms.
          x-ms-nullable: true
    Channel:
      type: object
      description: Channel definition
      discriminator:
        propertyName: channelName
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
      required:
        - channelName
    AlexaChannel:
      x-ms-discriminator-value: AlexaChannel
      description: Alexa channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/AlexaChannelProperties'
          description: The set of properties specific to Alexa channel resource
      type: object
    AlexaChannelProperties:
      properties:
        alexaSkillId:
          type: string
          description: The Alexa skill Id
        urlFragment:
          type: string
          readOnly: true
          description: Url fragment used in part of the Uri configured in Alexa
        serviceEndpointUri:
          type: string
          readOnly: true
          description: Full Uri used to configured the skill in Alexa
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Alexa channel.
      required:
        - alexaSkillId
        - isEnabled
      type: object
    FacebookChannel:
      description: Facebook channel definition
      x-ms-discriminator-value: FacebookChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/FacebookChannelProperties'
          description: The set of properties specific to bot facebook channel
      type: object
    FacebookChannelProperties:
      properties:
        verifyToken:
          x-ms-secret: true
          type: string
          readOnly: true
          description: Verify token. Value only returned through POST to the action Channel List API, otherwise empty.
        pages:
          type: array
          items:
            $ref: '#/components/schemas/FacebookPage'
          description: The list of Facebook pages
        appId:
          type: string
          description: Facebook application id
        appSecret:
          x-ms-secret: true
          type: string
          description: Facebook application secret. Value only returned through POST to the action Channel List API, otherwise empty.
        callbackUrl:
          type: string
          readOnly: true
          description: Callback Url
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Facebook channel.
      required:
        - appId
        - isEnabled
      type: object
    FacebookPage:
      properties:
        id:
          type: string
          description: Page id
        accessToken:
          x-ms-secret: true
          type: string
          description: Facebook application access token. Value only returned through POST to the action Channel List API, otherwise empty.
      description: A Facebook page for Facebook channel registration
      required:
        - id
      type: object
    EmailChannel:
      description: Email channel definition
      x-ms-discriminator-value: EmailChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/EmailChannelProperties'
          description: The set of properties specific to email channel resource
      type: object
    EmailChannelProperties:
      properties:
        emailAddress:
          type: string
          description: The email address
        authMethod:
          $ref: '#/components/schemas/EmailChannelAuthMethod'
          description: Email channel auth method. 0 Password (Default); 1 Graph.
        password:
          type: string
          description: The password for the email address. Value only returned through POST to the action Channel List API, otherwise empty.
        magicCode:
          type: string
          description: The magic code for setting up the modern authentication.
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Email channel.
      required:
        - emailAddress
        - isEnabled
      type: object
    EmailChannelAuthMethod:
      type: number
      description: Email channel auth method. 0 Password (Default); 1 Graph.
      enum:
        - 0
        - 1
      x-ms-enum:
        name: EmailChannelAuthMethod
        modelAsString: false
        values:
          - value: 0
            name: Password
            description: Basic authentication.
          - value: 1
            name: Graph
            description: Modern authentication.
    OutlookChannel:
      x-ms-discriminator-value: OutlookChannel
      description: Outlook channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
      type: object
    MsTeamsChannel:
      x-ms-discriminator-value: MsTeamsChannel
      description: Microsoft Teams channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/MsTeamsChannelProperties'
          description: The set of properties specific to Microsoft Teams channel resource
      type: object
    MsTeamsChannelProperties:
      properties:
        enableCalling:
          type: boolean
          description: Enable calling for Microsoft Teams channel
          default: false
        callingWebhook:
          type: string
          description: Webhook for Microsoft Teams channel calls
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
        incomingCallRoute:
          type: string
          description: Webhook for Microsoft Teams channel calls
        deploymentEnvironment:
          type: string
          description: Deployment environment for Microsoft Teams channel calls
          default: CommercialDeployment
        acceptedTerms:
          type: boolean
          description: Whether this channel accepted terms
          nullable: true
          default: null
      description: The parameters to provide for the Microsoft Teams channel.
      required:
        - isEnabled
      type: object
    SkypeChannel:
      description: Skype channel definition
      x-ms-discriminator-value: SkypeChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/SkypeChannelProperties'
          description: The set of properties specific to Skype channel resource
      type: object
    SkypeChannelProperties:
      properties:
        enableMessaging:
          type: boolean
          description: Enable messaging for Skype channel
        enableMediaCards:
          type: boolean
          description: Enable media cards for Skype channel
        enableVideo:
          type: boolean
          description: Enable video for Skype channel
        enableCalling:
          type: boolean
          description: Enable calling for Skype channel
          default: false
        enableScreenSharing:
          type: boolean
          description: Enable screen sharing for Skype channel
        enableGroups:
          type: boolean
          description: Enable groups for Skype channel
        groupsMode:
          type: string
          description: Group mode for Skype channel
        callingWebHook:
          type: string
          description: Calling web hook for Skype channel
        incomingCallRoute:
          type: string
          description: Incoming call route for Skype channel
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Microsoft Teams channel.
      required:
        - isEnabled
      type: object
    KikChannel:
      x-ms-discriminator-value: KikChannel
      description: Kik channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/KikChannelProperties'
          description: The set of properties specific to Kik channel resource
      type: object
    KikChannelProperties:
      properties:
        userName:
          type: string
          description: The Kik user name
        apiKey:
          type: string
          description: Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.
        isValidated:
          type: boolean
          description: Whether this channel is validated for the bot
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Kik channel.
      required:
        - userName
        - isEnabled
      type: object
    WebChatChannel:
      x-ms-discriminator-value: WebChatChannel
      description: Web Chat channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/WebChatChannelProperties'
          description: The set of properties specific to Web Chat channel resource
      type: object
    WebChatChannelProperties:
      properties:
        webChatEmbedCode:
          type: string
          x-ms-mutability:
            - read
          readOnly: true
          description: Web chat control embed code
        sites:
          type: array
          items:
            $ref: '#/components/schemas/WebChatSite'
          description: The list of Web Chat sites
      description: The parameters to provide for the Web Chat channel.
      type: object
    DirectLineChannel:
      x-ms-discriminator-value: DirectLineChannel
      description: Direct Line channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/DirectLineChannelProperties'
          description: The set of properties specific to Direct Line channel resource
      type: object
    DirectLineChannelProperties:
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/DirectLineSite'
          description: The list of Direct Line sites
        extensionKey1:
          type: string
          description: The extensionKey1
          default: ''
        extensionKey2:
          type: string
          description: The extensionKey2
          default: ''
        DirectLineEmbedCode:
          type: string
          description: Direct Line embed code of the resource
      description: The parameters to provide for the Direct Line channel.
      type: object
    TelegramChannel:
      description: Telegram channel definition
      x-ms-discriminator-value: TelegramChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/TelegramChannelProperties'
          description: The set of properties specific to Telegram channel resource
      type: object
    TelegramChannelProperties:
      properties:
        accessToken:
          x-ms-secret: true
          type: string
          description: The Telegram access token. Value only returned through POST to the action Channel List API, otherwise empty.
        isValidated:
          type: boolean
          description: Whether this channel is validated for the bot
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Telegram channel.
      required:
        - isEnabled
      type: object
    SmsChannel:
      description: Sms channel definition
      x-ms-discriminator-value: SmsChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/SmsChannelProperties'
          description: The set of properties specific to Sms channel resource
      type: object
    SmsChannelProperties:
      properties:
        phone:
          type: string
          description: The Sms phone
        accountSID:
          type: string
          description: The Sms account SID. Value only returned through POST to the action Channel List API, otherwise empty.
        authToken:
          x-ms-secret: true
          type: string
          description: The Sms auth token. Value only returned through POST to the action Channel List API, otherwise empty.
        isValidated:
          type: boolean
          description: Whether this channel is validated for the bot
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Sms channel.
      required:
        - phone
        - accountSID
        - isEnabled
      type: object
    SlackChannel:
      description: Slack channel definition
      x-ms-discriminator-value: SlackChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/SlackChannelProperties'
          description: The set of properties specific to Slack channel resource
      type: object
    SlackChannelProperties:
      properties:
        clientId:
          type: string
          description: The Slack client id
        clientSecret:
          x-ms-secret: true
          type: string
          description: The Slack client secret. Value only returned through POST to the action Channel List API, otherwise empty.
        verificationToken:
          x-ms-secret: true
          type: string
          description: The Slack verification token. Value only returned through POST to the action Channel List API, otherwise empty.
        scopes:
          type: string
          description: The Slack permission scopes.
        landingPageUrl:
          type: string
          description: The Slack landing page Url
        redirectAction:
          type: string
          description: The Slack redirect action
          readOnly: true
        lastSubmissionId:
          type: string
          description: The Sms auth token
          readOnly: true
        registerBeforeOAuthFlow:
          type: boolean
          description: Whether to register the settings before OAuth validation is performed. Recommended to True.
        IsValidated:
          type: boolean
          description: Whether this channel is validated for the bot
          readOnly: true
        signingSecret:
          x-ms-secret: true
          type: string
          description: The Slack signing secret.
        isEnabled:
          type: boolean
          description: Whether this channel is enabled for the bot
      description: The parameters to provide for the Slack channel.
      required:
        - isEnabled
      type: object
    LineChannel:
      description: Line channel definition
      x-ms-discriminator-value: LineChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/LineChannelProperties'
          description: The set of properties specific to line channel resource
      type: object
    LineChannelProperties:
      properties:
        lineRegistrations:
          type: array
          description: The list of line channel registrations
          items:
            $ref: '#/components/schemas/LineRegistration'
        callbackUrl:
          type: string
          description: Callback Url to enter in line registration.
          readOnly: true
        isValidated:
          type: boolean
          description: Whether this channel is validated for the bot
          readOnly: true
      description: The parameters to provide for the Line channel.
      required:
        - lineRegistrations
      type: object
    LineRegistration:
      properties:
        generatedId:
          x-ms-mutability:
            - read
          type: string
          description: Id generated for the line channel registration
          readOnly: true
        channelSecret:
          x-ms-secret: true
          type: string
          description: Secret for the line channel registration
        channelAccessToken:
          x-ms-secret: true
          type: string
          description: Access token for the line channel registration
      description: The properties corresponding to a line channel registration
      type: object
    DirectLineSpeechChannel:
      description: DirectLine Speech channel definition
      x-ms-discriminator-value: DirectLineSpeechChannel
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/DirectLineSpeechChannelProperties'
          description: The set of properties specific to DirectLine Speech channel resource
      type: object
    DirectLineSpeechChannelProperties:
      properties:
        cognitiveServiceResourceId:
          type: string
          description: The cognitive service id with this channel registration.
        cognitiveServiceRegion:
          type: string
          description: The cognitive service region with this channel registration.
          nullable: true
        cognitiveServiceSubscriptionKey:
          x-ms-secret: true
          type: string
          description: The cognitive service subscription key to use with this channel registration.
          nullable: true
        isEnabled:
          type: boolean
          description: Whether this channel is enabled or not.
        customVoiceDeploymentId:
          type: string
          description: Custom speech model id (optional).
        customSpeechModelId:
          type: string
          description: Custom voice deployment id (optional).
        isDefaultBotForCogSvcAccount:
          type: boolean
          description: Make this a default bot for chosen cognitive service account.
      description: The parameters to provide for the DirectLine Speech channel.
      type: object
    Omnichannel:
      x-ms-discriminator-value: Omnichannel
      description: Omnichannel channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
      type: object
    TelephonyChannel:
      x-ms-discriminator-value: TelephonyChannel
      description: Telephony channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
        properties:
          $ref: '#/components/schemas/TelephonyChannelProperties'
          description: The set of properties specific to Telephony channel resource
      type: object
    TelephonyChannelProperties:
      type: object
      properties:
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/TelephonyPhoneNumbers'
          description: The list of Telephony phone numbers
        apiConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/TelephonyChannelResourceApiConfiguration'
          description: The list of Telephony api configuration
        cognitiveServiceSubscriptionKey:
          type: string
          description: The extensionKey1
          nullable: true
        cognitiveServiceRegion:
          type: string
          description: The extensionKey2
          nullable: true
        defaultLocale:
          type: string
          description: The default locale of the channel
          nullable: true
        premiumSKU:
          type: string
          description: The premium SKU applied to the channel
          nullable: true
        isEnabled:
          type: boolean
          description: Whether the channel is enabled
      description: The parameters to provide for the Direct Line channel.
    AcsChatChannel:
      x-ms-discriminator-value: AcsChatChannel
      description: AcsChat channel definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
      type: object
    SearchAssistant:
      x-ms-discriminator-value: SearchAssistant
      description: SearchAssistant definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
      type: object
    M365Extensions:
      x-ms-discriminator-value: M365Extensions
      description: M365 Extensions definition
      properties:
        channelName:
          type: string
          description: The channel name
        etag:
          type: string
          description: Entity Tag of the resource
          nullable: true
          x-ms-mutability:
            - create
            - read
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the resource
        location:
          description: Specifies the location of the resource.
          type: string
          default: global
      type: object
    ChannelResponseList:
      properties:
        nextLink:
          description: The link used to get the next page of bot service channel resources.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BotChannel'
          description: Gets the list of bot service channel results and their properties.
      description: The list of bot service channel operation response.
      type: object
    WebChatSite:
      required:
        - isWebchatPreviewEnabled
      description: A site for the Webchat channel
      properties:
        tenantId:
          type: string
          description: Tenant Id
        siteId:
          type: string
          description: Site Id
          x-ms-mutability:
            - read
          readOnly: true
        siteName:
          type: string
          description: Site name
          x-ms-mutability:
            - create
            - read
        key:
          type: string
          description: Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
          x-ms-mutability:
            - read
          readOnly: true
        key2:
          type: string
          description: Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
          x-ms-mutability:
            - read
          readOnly: true
        isEnabled:
          type: boolean
          description: Whether this site is enabled for DirectLine channel
        isTokenEnabled:
          type: boolean
          description: Whether this site is token enabled for channel
          readOnly: true
        isEndpointParametersEnabled:
          type: boolean
          description: Whether this site is EndpointParameters enabled for channel
        isDetailedLoggingEnabled:
          type: boolean
          description: Whether this site is disabled detailed logging for
        isBlockUserUploadEnabled:
          type: boolean
          description: Whether this site is enabled for block user upload.
          nullable: true
          default: null
        isNoStorageEnabled:
          type: boolean
          description: Whether this no-storage site is disabled detailed logging for
        eTag:
          type: string
          description: Entity Tag
        appId:
          type: string
          description: DirectLine application id
        isV1Enabled:
          type: boolean
          description: Whether this site is enabled for Bot Framework V1 protocol.
          x-ms-mutability:
            - create
            - read
        isV3Enabled:
          type: boolean
          description: Whether this site is enabled for Bot Framework V3 protocol.
        isSecureSiteEnabled:
          type: boolean
          description: Whether this site is enabled for authentication with Bot Framework.
        trustedOrigins:
          type: array
          description: List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
          items:
            type: string
        isWebChatSpeechEnabled:
          type: boolean
          description: Whether this site is enabled for Webchat Speech
          default: false
        isWebchatPreviewEnabled:
          type: boolean
          description: Whether this site is enabled for preview versions of Webchat
          default: false
      type: object
    DirectLineSite:
      description: A site for the Direct Line channel
      required:
        - isV1Enabled
        - isV3Enabled
      properties:
        tenantId:
          type: string
          description: Tenant Id
        siteId:
          type: string
          description: Site Id
          x-ms-mutability:
            - read
          readOnly: true
        siteName:
          type: string
          description: Site name
          x-ms-mutability:
            - create
            - read
        key:
          type: string
          description: Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
          x-ms-mutability:
            - read
          readOnly: true
        key2:
          type: string
          description: Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
          x-ms-mutability:
            - read
          readOnly: true
        isEnabled:
          type: boolean
          description: Whether this site is enabled for DirectLine channel
        isTokenEnabled:
          type: boolean
          description: Whether this site is token enabled for channel
          readOnly: true
        isEndpointParametersEnabled:
          type: boolean
          description: Whether this site is EndpointParameters enabled for channel
        isDetailedLoggingEnabled:
          type: boolean
          description: Whether this site is disabled detailed logging for
        isBlockUserUploadEnabled:
          type: boolean
          description: Whether this site is enabled for block user upload.
          nullable: true
          default: null
        isNoStorageEnabled:
          type: boolean
          description: Whether this no-storage site is disabled detailed logging for
        eTag:
          type: string
          description: Entity Tag
        appId:
          type: string
          description: DirectLine application id
        isV1Enabled:
          type: boolean
          description: Whether this site is enabled for Bot Framework V1 protocol.
          x-ms-mutability:
            - create
            - read
        isV3Enabled:
          type: boolean
          description: Whether this site is enabled for Bot Framework V3 protocol.
        isSecureSiteEnabled:
          type: boolean
          description: Whether this site is enabled for authentication with Bot Framework.
        trustedOrigins:
          type: array
          description: List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
          items:
            type: string
        isWebChatSpeechEnabled:
          type: boolean
          description: Whether this site is enabled for Webchat Speech
          default: false
        isWebchatPreviewEnabled:
          type: boolean
          description: Whether this site is enabled for preview versions of Webchat
          default: false
      type: object
    Site:
      type: object
      properties:
        tenantId:
          type: string
          description: Tenant Id
        siteId:
          type: string
          description: Site Id
          x-ms-mutability:
            - read
          readOnly: true
        siteName:
          type: string
          description: Site name
          x-ms-mutability:
            - create
            - read
        key:
          type: string
          description: Primary key. Value only returned through POST to the action Channel List API, otherwise empty.
          x-ms-mutability:
            - read
          readOnly: true
        key2:
          type: string
          description: Secondary key. Value only returned through POST to the action Channel List API, otherwise empty.
          x-ms-mutability:
            - read
          readOnly: true
        isEnabled:
          type: boolean
          description: Whether this site is enabled for DirectLine channel
        isTokenEnabled:
          type: boolean
          description: Whether this site is token enabled for channel
          readOnly: true
        isEndpointParametersEnabled:
          type: boolean
          description: Whether this site is EndpointParameters enabled for channel
        isDetailedLoggingEnabled:
          type: boolean
          description: Whether this site is disabled detailed logging for
        isBlockUserUploadEnabled:
          type: boolean
          description: Whether this site is enabled for block user upload.
          nullable: true
          default: null
        isNoStorageEnabled:
          type: boolean
          description: Whether this no-storage site is disabled detailed logging for
        eTag:
          type: string
          description: Entity Tag
        appId:
          type: string
          description: DirectLine application id
        isV1Enabled:
          type: boolean
          description: Whether this site is enabled for Bot Framework V1 protocol.
          x-ms-mutability:
            - create
            - read
        isV3Enabled:
          type: boolean
          description: Whether this site is enabled for Bot Framework V3 protocol.
        isSecureSiteEnabled:
          type: boolean
          description: Whether this site is enabled for authentication with Bot Framework.
        trustedOrigins:
          type: array
          description: List of Trusted Origin URLs for this site. This field is applicable only if isSecureSiteEnabled is True.
          items:
            type: string
        isWebChatSpeechEnabled:
          type: boolean
          description: Whether this site is enabled for Webchat Speech
          default: false
        isWebchatPreviewEnabled:
          type: boolean
          description: Whether this site is enabled for preview versions of Webchat
          default: false
      required:
        - isEnabled
        - siteName
      description: A site for the channel
    SiteInfo:
      properties:
        siteName:
          type: string
          description: The site name
          x-ms-mutability:
            - create
            - read
        key:
          type: string
          description: Determines which key is to be regenerated
          enum:
            - key1
            - key2
          x-ms-enum:
            name: key
            modelAsString: false
      description: Site information for WebChat or DirectLine Channels to identify which site to regenerate keys for.
      type: object
      required:
        - siteName
        - key
    TelephonyPhoneNumbers:
      type: object
      properties:
        id:
          type: string
          description: The element id.
        phoneNumber:
          type: string
          description: The phone number.
        acsEndpoint:
          type: string
          description: The endpoint of ACS.
          nullable: true
        acsSecret:
          type: string
          description: The secret of ACS.
          nullable: true
        acsResourceId:
          type: string
          description: The resource id of ACS.
          nullable: true
        cognitiveServiceSubscriptionKey:
          type: string
          description: The subscription key of cognitive service.
          nullable: true
        cognitiveServiceRegion:
          type: string
          description: The service region of cognitive service.
          nullable: true
        cognitiveServiceResourceId:
          type: string
          description: The resource id of cognitive service.
          nullable: true
        defaultLocale:
          type: string
          description: The default locale of the phone number.
          nullable: true
        offerType:
          type: string
          description: Optional Property that will determine the offering type of the phone.
          nullable: true
      description: A telephone number for the Telephony channel
    TelephonyChannelResourceApiConfiguration:
      type: object
      properties:
        id:
          type: string
          description: The id of config.
        providerName:
          type: string
          description: The provider name.
          nullable: true
        cognitiveServiceSubscriptionKey:
          type: string
          description: The cognitive service subscription key.
          nullable: true
        cognitiveServiceRegion:
          type: string
          description: The cognitive service region.
          nullable: true
        cognitiveServiceResourceId:
          type: string
          description: The cognitive service resourceId.
          nullable: true
        defaultLocale:
          type: string
          description: The default locale.
          nullable: true
      description: A resource Api configuration for the Telephony channel
    ConnectionItemName:
      properties:
        name:
          type: string
          description: Connection Item name that has been added in the API
          readOnly: true
      description: The display name of a connection Item Setting registered with the Bot
      type: object
    ConnectionSettingParameter:
      properties:
        key:
          type: string
          description: Key for the Connection Setting Parameter.
        value:
          type: string
          description: Value associated with the Connection Setting Parameter.
          nullable: true
      description: Extra Parameter in a Connection Setting Properties to indicate service provider specific properties
      type: object
    ConnectionSettingProperties:
      properties:
        id:
          type: string
          description: Id of the Connection Setting.
        name:
          type: string
          description: Name of the Connection Setting.
        clientId:
          type: string
          description: Client Id associated with the Connection Setting.
        settingId:
          type: string
          description: Setting Id set by the service for the Connection Setting.
          readOnly: true
        clientSecret:
          x-ms-secret: true
          type: string
          description: Client Secret associated with the Connection Setting
        scopes:
          type: string
          description: Scopes associated with the Connection Setting
          default: ''
        serviceProviderId:
          type: string
          description: Service Provider Id associated with the Connection Setting
        serviceProviderDisplayName:
          type: string
          description: Service Provider Display Name associated with the Connection Setting
        parameters:
          type: array
          description: Service Provider Parameters associated with the Connection Setting
          items:
            $ref: '#/components/schemas/ConnectionSettingParameter'
        provisioningState:
          type: string
          description: Provisioning state of the resource
      description: Properties for a Connection Setting Item
      type: object
    ConnectionSetting:
      description: Bot channel resource definition
      properties:
        id:
          description: Specifies the resource ID.
          type: string
          readOnly: true
        name:
          description: Specifies the name of the resource.
          type: string
          readOnly: true
        location:
          description: Specifies the location of the resource.
          type: string
        type:
          description: Specifies the type of the resource.
          type: string
          readOnly: true
        tags:
          description: Contains resource tags defined as key/value pairs.
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU of the resource.
        kind:
          $ref: '#/components/schemas/Kind'
          description: Required. Gets or sets the Kind of the resource.
          nullable: true
          x-nullable: true
        etag:
          type: string
          description: Entity Tag.
        zones:
          type: array
          items:
            type: string
          description: Entity zones
          readOnly: true
        properties:
          $ref: '#/components/schemas/ConnectionSettingProperties'
          description: The set of properties specific to bot channel resource
      type: object
    ConnectionSettingResponseList:
      properties:
        nextLink:
          description: The link used to get the next page of bot service connection setting resources.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ConnectionSetting'
          description: Gets the list of bot service connection settings and their properties.
      description: The list of bot service connection settings response.
      type: object
    ServiceProviderResponseList:
      properties:
        nextLink:
          description: The link used to get the next page of bot service providers.
          type: string
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceProvider'
          description: Gets the list of bot service providers and their properties.
      description: The list of bot service providers response.
      type: object
    ServiceProviderParameter:
      properties:
        name:
          type: string
          description: Name of the Service Provider
          readOnly: true
        type:
          type: string
          description: Type of the Service Provider
          readOnly: true
        displayName:
          type: string
          description: Display Name of the Service Provider
          readOnly: true
        description:
          type: string
          description: Description of the Service Provider
          readOnly: true
        helpUrl:
          type: string
          description: Help Url for the  Service Provider
          readOnly: true
        default:
          type: string
          description: Default Name for the Service Provider
          readOnly: true
        metadata:
          type: object
          description: Meta data for the Service Provider
          readOnly: true
          properties:
            constraints:
              description: the constraints of the bot meta data.
              type: object
              properties:
                required:
                  description: Whether required the constraints of the bot meta data.
                  type: boolean
      description: Extra Parameters specific to each Service Provider
      type: object
    ServiceProviderProperties:
      properties:
        id:
          type: string
          description: Id for Service Provider
          readOnly: true
        displayName:
          type: string
          description: Display Name of the Service Provider
          readOnly: true
        serviceProviderName:
          type: string
          description: Name of the Service Provider
          readOnly: true
        devPortalUrl:
          type: string
          description: URL of Dev Portal
          readOnly: true
        iconUrl:
          type: string
          description: The URL of icon
          default: ''
        parameters:
          description: The list of parameters for the Service Provider
          type: array
          items:
            $ref: '#/components/schemas/ServiceProviderParameter'
      description: The Object used to describe a Service Provider supported by Bot Service
      type: object
    ServiceProvider:
      description: Service Provider Definition
      properties:
        properties:
          $ref: '#/components/schemas/ServiceProviderProperties'
          description: The Properties of a Service Provider Object
      type: object
    Error:
      properties:
        error:
          $ref: '#/components/schemas/ErrorBody'
          description: The error body.
      description: Bot Service error object.
      type: object
    ErrorBody:
      properties:
        code:
          type: string
          description: error code
        message:
          type: string
          description: error message
      description: Bot Service error body.
      required:
        - code
        - message
      type: object
    OperationEntityListResult:
      description: The list of bot service operation response.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of operations.
          type: array
          items:
            $ref: '#/components/schemas/OperationEntity'
    OperationEntity:
      description: The operations supported by Bot Service Management.
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        display:
          $ref: '#/components/schemas/OperationDisplayInfo'
          description: The operation supported by Bot Service Management.
        origin:
          description: The origin of the operation.
          type: string
        properties:
          description: Additional properties.
          type: object
      type: object
    OperationDisplayInfo:
      description: The operation supported by Bot Service Management.
      type: object
      properties:
        description:
          description: The description of the operation.
          type: string
        operation:
          description: The action that users can perform, based on their permission level.
          type: string
        provider:
          description: 'Service provider: Microsoft Bot Service.'
          type: string
        resource:
          description: Resource on which the operation is performed.
          type: string
    CheckNameAvailabilityRequestBody:
      description: The request body for a request to Bot Service Management to check availability of a bot name.
      type: object
      properties:
        name:
          description: the name of the bot for which availability needs to be checked.
          type: string
        type:
          description: the type of the bot for which availability needs to be checked
          type: string
    CheckNameAvailabilityResponseBody:
      description: The response body returned for a request to Bot Service Management to check availability of a bot name.
      type: object
      properties:
        valid:
          description: indicates if the bot name is valid.
          type: boolean
        message:
          description: additional message from the bot management api showing why a bot name is not available
          type: string
        absCode:
          description: response code from ABS
          type: string
          x-ms-nullable: true
    HostSettingsResponse:
      description: The response body returned for a request to Bot Service Management to check per subscription hostSettings
      type: object
      properties:
        OAuthUrl:
          description: For in-conversation bot user authentication
          type: string
        ToBotFromChannelOpenIdMetadataUrl:
          description: For verifying incoming tokens from the channels
          type: string
        ToBotFromChannelTokenIssuer:
          description: For verifying incoming tokens from the channels
          type: string
        ToBotFromEmulatorOpenIdMetadataUrl:
          description: For verifying incoming tokens from bot emulator
          type: string
        ToChannelFromBotLoginUrl:
          description: For getting access token to channels from bot host
          type: string
        ToChannelFromBotOAuthScope:
          description: For getting access token to channels from bot host
          type: string
        ValidateAuthority:
          description: Per cloud OAuth setting on whether authority is validated
          type: boolean
        BotOpenIdMetadata:
          description: Same as toBotFromChannelOpenIdMetadataUrl, used by SDK < v4.12
          type: string
    QnAMakerEndpointKeysRequestBody:
      description: The request body for a request to Bot Service Management to list QnA Maker endpoint keys.
      type: object
      properties:
        hostname:
          description: the host name of the QnA Maker endpoint
          type: string
        authkey:
          description: Subscription key which provides access to this API.
          type: string
    QnAMakerEndpointKeysResponse:
      type: object
      description: Schema for EndpointKeys generate/refresh operations.
      properties:
        primaryEndpointKey:
          type: string
          description: Primary Access Key.
        secondaryEndpointKey:
          type: string
          description: Secondary Access Key.
        installedVersion:
          type: string
          description: Current version of runtime.
        lastStableVersion:
          type: string
          description: Latest version of runtime.
    OperationResultsDescription:
      description: The properties indicating the operation result of an operation on a service.
      type: object
      properties:
        id:
          description: The ID of the operation returned.
          readOnly: true
          type: string
        name:
          description: The name of the operation result.
          readOnly: true
          type: string
        status:
          description: The status of the operation being performed.
          enum:
            - Canceled
            - Succeeded
            - Failed
            - Requested
            - Running
          readOnly: true
          type: string
          x-ms-enum:
            name: OperationResultStatus
            modelAsString: true
        startTime:
          format: date-time
          description: The time that the operation was started.
          readOnly: true
          type: string
    PrivateLinkResourceBase:
      title: Private Link Resource Base
      description: Common fields that are returned in the response for all BotService Private Link Resources
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
      type: object
  x-stackQL-resources:
    bots:
      id: azure.bot_service.bots
      name: bots
      title: bots
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}?api-version=2023-09-15-preview/put'
            operationId: Bots_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Bot
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}?api-version=2023-09-15-preview/patch'
            operationId: Bots_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Bot
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}?api-version=2023-09-15-preview/delete'
            operationId: Bots_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}?api-version=2023-09-15-preview/get'
            operationId: Bots_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Bot
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices?api-version=2023-09-15-preview/get'
            operationId: Bots_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BotResponseList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.BotService~1botServices?api-version=2023-09-15-preview/get'
            operationId: Bots_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BotResponseList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bots/methods/get'
          - $ref: '#/components/x-stackQL-resources/bots/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/bots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/bots/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/bots/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bots/methods/delete'
    channels:
      id: azure.bot_service.channels
      name: channels
      title: channels
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1channels~1{channelName}?api-version=2023-09-15-preview/put'
            operationId: Channels_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BotChannel
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1channels~1{channelName}?api-version=2023-09-15-preview/patch'
            operationId: Channels_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BotChannel
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1channels~1{channelName}?api-version=2023-09-15-preview/delete'
            operationId: Channels_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1channels~1{channelName}?api-version=2023-09-15-preview/get'
            operationId: Channels_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BotChannel
        list_with_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1channels~1{channelName}~1listChannelWithKeys?api-version=2023-09-15-preview/post'
            operationId: Channels_ListWithKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListChannelWithKeysResponse
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1channels?api-version=2023-09-15-preview/get'
            operationId: Channels_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ChannelResponseList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/channels/methods/get'
          - $ref: '#/components/x-stackQL-resources/channels/methods/list_with_keys'
          - $ref: '#/components/x-stackQL-resources/channels/methods/list_by_resource_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/channels/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/channels/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/channels/methods/delete'
    direct_lines:
      id: azure.bot_service.direct_lines
      name: direct_lines
      title: direct_lines
      methods:
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1channels~1{channelName}~1regeneratekeys?api-version=2023-09-15-preview/post'
            operationId: DirectLine_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BotChannel
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    email_sign_in_urls:
      id: azure.bot_service.email_sign_in_urls
      name: email_sign_in_urls
      title: email_sign_in_urls
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1createEmailSignInUrl?api-version=2023-09-15-preview/post'
            operationId: EmailSignInUrl_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CreateEmailSignInUrlResponse
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/email_sign_in_urls/methods/create'
        update: []
        replace: []
        delete: []
    bots_check_name_availabilities:
      id: azure.bot_service.bots_check_name_availabilities
      name: bots_check_name_availabilities
      title: bots_check_name_availabilities
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.BotService~1checkNameAvailability?api-version=2023-09-15-preview/post'
            operationId: BotsCheckNameAvailability_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponseBody
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bots_check_name_availabilities/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.bot_service.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.BotService~1operations?api-version=2023-09-15-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationEntityListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    bot_connection_service_providers:
      id: azure.bot_service.bot_connection_service_providers
      name: bot_connection_service_providers
      title: bot_connection_service_providers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.BotService~1listAuthServiceProviders?api-version=2023-09-15-preview/post'
            operationId: BotConnectionServiceProviders_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceProviderResponseList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bot_connection_service_providers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    qn_a_maker_endpoint_keys:
      id: azure.bot_service.qn_a_maker_endpoint_keys
      name: qn_a_maker_endpoint_keys
      title: qn_a_maker_endpoint_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.BotService~1listQnAMakerEndpointKeys?api-version=2023-09-15-preview/post'
            operationId: QnAMakerEndpointKeys_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QnAMakerEndpointKeysResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/qn_a_maker_endpoint_keys/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    bot_connections:
      id: azure.bot_service.bot_connections
      name: bot_connections
      title: bot_connections
      methods:
        list_with_secrets:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1connections~1{connectionName}~1listWithSecrets?api-version=2023-09-15-preview/post'
            operationId: BotConnection_ListWithSecrets
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectionSetting
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1connections~1{connectionName}?api-version=2023-09-15-preview/put'
            operationId: BotConnection_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectionSetting
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1connections~1{connectionName}?api-version=2023-09-15-preview/patch'
            operationId: BotConnection_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectionSetting
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1connections~1{connectionName}?api-version=2023-09-15-preview/get'
            operationId: BotConnection_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectionSetting
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1connections~1{connectionName}?api-version=2023-09-15-preview/delete'
            operationId: BotConnection_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_bot_service:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1connections?api-version=2023-09-15-preview/get'
            operationId: BotConnection_ListByBotService
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectionSettingResponseList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/bot_connections/methods/list_with_secrets'
          - $ref: '#/components/x-stackQL-resources/bot_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/bot_connections/methods/list_by_bot_service'
        insert:
          - $ref: '#/components/x-stackQL-resources/bot_connections/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/bot_connections/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/bot_connections/methods/delete'
    host_settings:
      id: azure.bot_service.host_settings
      name: host_settings
      title: host_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.BotService~1hostSettings?api-version=2023-09-15-preview/get'
            operationId: HostSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HostSettingsResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/host_settings/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operation_results:
      id: azure.bot_service.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.BotService~1operationresults~1{operationResultId}?api-version=2023-09-15-preview/get'
            operationId: OperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationResultsDescription
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_results/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connections:
      id: azure.bot_service.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1privateEndpointConnections?api-version=2023-09-15-preview/get'
            operationId: PrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-09-15-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-09-15-preview/put'
            operationId: PrivateEndpointConnections_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2023-09-15-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.bot_service.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_bot_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1privateLinkResources?api-version=2023-09-15-preview/get'
            operationId: PrivateLinkResources_ListByBotResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_bot_resource'
        insert: []
        update: []
        replace: []
        delete: []
    network_security_perimeter_configurations:
      id: azure.bot_service.network_security_perimeter_configurations
      name: network_security_perimeter_configurations
      title: network_security_perimeter_configurations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}?api-version=2023-09-15-preview/get'
            operationId: NetworkSecurityPerimeterConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfiguration
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1networkSecurityPerimeterConfigurations?api-version=2023-09-15-preview/get'
            operationId: NetworkSecurityPerimeterConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfigurationList
            objectKey: $.value
        reconcile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.BotService~1botServices~1{resourceName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}~1reconcile?api-version=2023-09-15-preview/post'
            operationId: NetworkSecurityPerimeterConfigurations_Reconcile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfiguration
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_bots:
      id: azure.bot_service.vw_bots
      name: vw_bots
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              sku as sku,
              kind as kind,
              etag as etag,
              zones as zones,
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.iconUrl') as "icon_url",
              JSON_EXTRACT(properties, '$.endpoint') as "endpoint",
              JSON_EXTRACT(properties, '$.endpointVersion') as "endpoint_version",
              JSON_EXTRACT(properties, '$.allSettings') as "all_settings",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.manifestUrl') as "manifest_url",
              JSON_EXTRACT(properties, '$.msaAppType') as "msa_app_type",
              JSON_EXTRACT(properties, '$.msaAppId') as "msa_app_id",
              JSON_EXTRACT(properties, '$.msaAppTenantId') as "msa_app_tenant_id",
              JSON_EXTRACT(properties, '$.msaAppMSIResourceId') as "msa_app_msi_resource_id",
              JSON_EXTRACT(properties, '$.configuredChannels') as "configured_channels",
              JSON_EXTRACT(properties, '$.enabledChannels') as "enabled_channels",
              JSON_EXTRACT(properties, '$.developerAppInsightKey') as "developer_app_insight_key",
              JSON_EXTRACT(properties, '$.developerAppInsightsApiKey') as "developer_app_insights_api_key",
              JSON_EXTRACT(properties, '$.developerAppInsightsApplicationId') as "developer_app_insights_application_id",
              JSON_EXTRACT(properties, '$.luisAppIds') as "luis_app_ids",
              JSON_EXTRACT(properties, '$.luisKey') as "luis_key",
              JSON_EXTRACT(properties, '$.isCmekEnabled') as "is_cmek_enabled",
              JSON_EXTRACT(properties, '$.cmekKeyVaultUrl') as "cmek_key_vault_url",
              JSON_EXTRACT(properties, '$.cmekEncryptionStatus') as "cmek_encryption_status",
              JSON_EXTRACT(properties, '$.tenantId') as "tenant_id",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.isStreamingSupported') as "is_streaming_supported",
              JSON_EXTRACT(properties, '$.isDeveloperAppInsightsApiKeySet') as "is_developer_app_insights_api_key_set",
              JSON_EXTRACT(properties, '$.migrationToken') as "migration_token",
              JSON_EXTRACT(properties, '$.disableLocalAuth') as "disable_local_auth",
              JSON_EXTRACT(properties, '$.schemaTransformationVersion') as "schema_transformation_version",
              JSON_EXTRACT(properties, '$.storageResourceId') as "storage_resource_id",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.networkSecurityPerimeterConfigurations') as "network_security_perimeter_configurations",
              JSON_EXTRACT(properties, '$.openWithHint') as "open_with_hint",
              JSON_EXTRACT(properties, '$.appPasswordHint') as "app_password_hint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.publishingCredentials') as "publishing_credentials",
              subscriptionId,
              resourceGroupName,
              resourceName
              FROM azure.bot_service.bots
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                sku as sku,
                kind as kind,
                etag as etag,
                zones as zones,
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.iconUrl') as "icon_url",
                json_extract_path_text(properties, '$.endpoint') as "endpoint",
                json_extract_path_text(properties, '$.endpointVersion') as "endpoint_version",
                json_extract_path_text(properties, '$.allSettings') as "all_settings",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.manifestUrl') as "manifest_url",
                json_extract_path_text(properties, '$.msaAppType') as "msa_app_type",
                json_extract_path_text(properties, '$.msaAppId') as "msa_app_id",
                json_extract_path_text(properties, '$.msaAppTenantId') as "msa_app_tenant_id",
                json_extract_path_text(properties, '$.msaAppMSIResourceId') as "msa_app_msi_resource_id",
                json_extract_path_text(properties, '$.configuredChannels') as "configured_channels",
                json_extract_path_text(properties, '$.enabledChannels') as "enabled_channels",
                json_extract_path_text(properties, '$.developerAppInsightKey') as "developer_app_insight_key",
                json_extract_path_text(properties, '$.developerAppInsightsApiKey') as "developer_app_insights_api_key",
                json_extract_path_text(properties, '$.developerAppInsightsApplicationId') as "developer_app_insights_application_id",
                json_extract_path_text(properties, '$.luisAppIds') as "luis_app_ids",
                json_extract_path_text(properties, '$.luisKey') as "luis_key",
                json_extract_path_text(properties, '$.isCmekEnabled') as "is_cmek_enabled",
                json_extract_path_text(properties, '$.cmekKeyVaultUrl') as "cmek_key_vault_url",
                json_extract_path_text(properties, '$.cmekEncryptionStatus') as "cmek_encryption_status",
                json_extract_path_text(properties, '$.tenantId') as "tenant_id",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.isStreamingSupported') as "is_streaming_supported",
                json_extract_path_text(properties, '$.isDeveloperAppInsightsApiKeySet') as "is_developer_app_insights_api_key_set",
                json_extract_path_text(properties, '$.migrationToken') as "migration_token",
                json_extract_path_text(properties, '$.disableLocalAuth') as "disable_local_auth",
                json_extract_path_text(properties, '$.schemaTransformationVersion') as "schema_transformation_version",
                json_extract_path_text(properties, '$.storageResourceId') as "storage_resource_id",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.networkSecurityPerimeterConfigurations') as "network_security_perimeter_configurations",
                json_extract_path_text(properties, '$.openWithHint') as "open_with_hint",
                json_extract_path_text(properties, '$.appPasswordHint') as "app_password_hint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.publishingCredentials') as "publishing_credentials",
                subscriptionId,
                resourceGroupName,
                resourceName
                FROM azure.bot_service.bots
                WHERE subscriptionId = 'replace-me';
    vw_channels:
      id: azure.bot_service.vw_channels
      name: vw_channels
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              sku as sku,
              kind as kind,
              etag as etag,
              zones as zones,
              JSON_EXTRACT(properties, '$.channelName') as "channel_name",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.location') as "location",
              subscriptionId,
              resourceGroupName,
              resourceName,
              channelName
              FROM azure.bot_service.channels
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                sku as sku,
                kind as kind,
                etag as etag,
                zones as zones,
                json_extract_path_text(properties, '$.channelName') as "channel_name",
                json_extract_path_text(properties, '$.etag') as "etag",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.location') as "location",
                subscriptionId,
                resourceGroupName,
                resourceName,
                channelName
                FROM azure.bot_service.channels
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.bot_service.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              subscriptionId,
              resourceGroupName,
              resourceName,
              privateEndpointConnectionName
              FROM azure.bot_service.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                subscriptionId,
                resourceGroupName,
                resourceName,
                privateEndpointConnectionName
                FROM azure.bot_service.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
    vw_network_security_perimeter_configurations:
      id: azure.bot_service.vw_network_security_perimeter_configurations
      name: vw_network_security_perimeter_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.provisioningIssues') as "provisioning_issues",
              JSON_EXTRACT(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
              JSON_EXTRACT(properties, '$.resourceAssociation') as "resource_association",
              JSON_EXTRACT(properties, '$.profile') as "profile",
              subscriptionId,
              resourceGroupName,
              resourceName,
              networkSecurityPerimeterConfigurationName
              FROM azure.bot_service.network_security_perimeter_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.provisioningIssues') as "provisioning_issues",
                json_extract_path_text(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
                json_extract_path_text(properties, '$.resourceAssociation') as "resource_association",
                json_extract_path_text(properties, '$.profile') as "profile",
                subscriptionId,
                resourceGroupName,
                resourceName,
                networkSecurityPerimeterConfigurationName
                FROM azure.bot_service.network_security_perimeter_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND resourceName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}?api-version=2023-09-15-preview:
    put:
      tags:
        - Bot
      description: Creates a Bot Service. Bot Service is a resource group wide resource type.
      operationId: Bots_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created bot.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bot'
      responses:
        '200':
          description: If resource is created successfully or already existed, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '201':
          description: If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Bot
      description: Updates a Bot Service
      operationId: Bots_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created bot.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bot'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        '201':
          description: If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Bot
      description: 'Deletes a Bot Service from the resource group. '
      operationId: Bots_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: A 200 (OK) should be returned if the object exists and was deleted successfully;
        '204':
          description: a 204 (NoContent) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Bot
      description: Returns a BotService specified by the parameters.
      operationId: Bots_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices?api-version=2023-09-15-preview:
    get:
      tags:
        - Bot
      description: Returns all the resources of a particular type belonging to a resource group
      operationId: Bots_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponseList'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices?api-version=2023-09-15-preview:
    get:
      tags:
        - Bot
      description: Returns all the resources of a particular type belonging to a subscription.
      operationId: Bots_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.
            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponseList'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}?api-version=2023-09-15-preview:
    put:
      tags:
        - Channel
      description: Creates a Channel registration for a Bot Service
      operationId: Channels_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/channelNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created bot.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotChannel'
      responses:
        '200':
          description: If resource is created successfully or already existed, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
        '201':
          description: If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Channel
      description: Updates a Channel registration for a Bot Service
      operationId: Channels_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/channelNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for the created bot.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-client-flatten: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotChannel'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
        '201':
          description: If resource is updated successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Channel
      description: Deletes a Channel registration from a Bot Service
      operationId: Channels_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - name: channelName
          in: path
          description: The name of the Bot resource.
          required: true
          schema:
            maxLength: 64
            minLength: 2
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: A 200 (OK) should be returned if the object exists and was deleted successfully;
        '204':
          description: a 204 (NoContent) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Channel
      description: Returns a BotService Channel registration specified by the parameters.
      operationId: Channels_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - name: channelName
          in: path
          description: The name of the Bot resource.
          required: true
          schema:
            maxLength: 64
            minLength: 2
            pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys?api-version=2023-09-15-preview:
    post:
      tags:
        - Channel
      description: Lists a Channel registration for a Bot Service including secrets
      operationId: Channels_ListWithKeys
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/channelNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: If resource is retrieved successfully, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelWithKeysResponse'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels?api-version=2023-09-15-preview:
    get:
      tags:
        - Channel
      description: Returns all the Channel registrations of a particular BotService resource
      operationId: Channels_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponseList'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/regeneratekeys?api-version=2023-09-15-preview:
    post:
      tags:
        - Channel
      description: Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService resource
      operationId: DirectLine_RegenerateKeys
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/regenerateKeyschannelNameParameter'
      requestBody:
        description: The parameters to provide for the created bot.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteInfo'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotChannel'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/createEmailSignInUrl?api-version=2023-09-15-preview:
    post:
      tags:
        - Channel
      description: Creates an email channel sign in url for a Bot Service
      operationId: EmailSignInUrl_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: If url is created successfully, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEmailSignInUrlResponse'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Email_CreateSignInUrl
  /providers/Microsoft.BotService/checkNameAvailability?api-version=2023-09-15-preview:
    post:
      tags:
        - Bot
      description: Check whether a bot name is available.
      operationId: BotsCheckNameAvailability_Get
      requestBody:
        description: The request body parameters to provide for the check name availability request
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequestBody'
      parameters: []
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses. If a resource provider does not support paging, it should return the same body but leave nextLink empty for future compatibility.
            For a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponseBody'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Bots_GetCheckNameAvailability
  /providers/Microsoft.BotService/operations?api-version=2023-09-15-preview:
    get:
      tags:
        - Operations
      description: Lists all the available BotService operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationEntityListResult'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders?api-version=2023-09-15-preview:
    post:
      tags:
        - ListServiceProviders
      description: Lists the available Service Providers for creating Connection Settings
      operationId: BotConnectionServiceProviders_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: If resource is retrieved successfully, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderResponseList'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: BotConnection_ListServiceProviders
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/listQnAMakerEndpointKeys?api-version=2023-09-15-preview:
    post:
      tags:
        - ListQnAMakerEndpointKeys
      description: Lists the QnA Maker endpoint keys
      operationId: QnAMakerEndpointKeys_Get
      requestBody:
        description: The request body parameters to provide for the check name availability request
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QnAMakerEndpointKeysRequestBody'
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: If resource is retrieved successfully, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QnAMakerEndpointKeysResponse'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}/listWithSecrets?api-version=2023-09-15-preview:
    post:
      tags:
        - BotConnection
      description: Get a Connection Setting registration for a Bot Service
      operationId: BotConnection_ListWithSecrets
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}?api-version=2023-09-15-preview:
    put:
      tags:
        - BotConnection
      description: Register a new Auth Connection for a Bot Service
      operationId: BotConnection_Create
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for creating the Connection Setting.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSetting'
      responses:
        '200':
          description: If resource is created successfully or already existed, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
        '201':
          description: If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - BotConnection
      description: Updates a Connection Setting registration for a Bot Service
      operationId: BotConnection_Update
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: The parameters to provide for updating the Connection Setting.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSetting'
      responses:
        '200':
          description: If resource is created successfully or already existed, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
        '201':
          description: If resource is created successfully, the service should return 201 (Created). Execution to continue asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - BotConnection
      description: Get a Connection Setting registration for a Bot Service
      operationId: BotConnection_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: 'The resource provider should return 200 (OK) to indicate that the operation completed successfully. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSetting'
        default:
          description: Error response describing why the operation failed. If the resource group *or* resource does not exist, 404 (NotFound) should be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - BotConnection
      description: Deletes a Connection Setting registration for a Bot Service
      operationId: BotConnection_Delete
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/connectionNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: A 200 (OK) should be returned if the object exists and was deleted successfully;
        '204':
          description: a 204 (NoContent) should be used if the resource does not exist and the request is well formed.
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections?api-version=2023-09-15-preview:
    get:
      tags:
        - BotConnection
      description: Returns all the Connection Settings registered to a particular BotService resource
      operationId: BotConnection_ListByBotService
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: |-
            The resource provider should return 200 (OK) to indicate that the operation completed successfully. For other errors (e.g. internal errors) use the appropriate HTTP error code.
            The nextLink field is expected to point to the URL the client should use to fetch the next page (per server side paging). This matches the OData guidelines for paged responses here. If a resource provider does not support paging, it should return the same body (JSON object with “value” property) but omit nextLink entirely (or set to null, *not* empty string) for future compatibility.
            The nextLink should be implemented using following query parameters:
            · skipToken: opaque token that allows the resource provider to skip resources already enumerated. This value is defined and returned by the RP after first request via nextLink.
            · top: the optional client query parameter which defines the maximum number of records to be returned by the server.
            Implementation details:
            · NextLink may include all the query parameters (specifically OData $filter) used by the client in the first query. 
            · Server may return less records than requested with nextLink. Returning zero records with NextLink is an acceptable response. 
            Clients must fetch records until the nextLink is not returned back / null. Clients should never rely on number of returned records to determinate if pagination is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionSettingResponseList'
        default:
          description: Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/hostSettings?api-version=2023-09-15-preview:
    get:
      tags:
        - BotHostSettings
      description: Get per subscription settings needed to host bot in compute resource such as Azure App Service
      operationId: HostSettings_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: If resource is retrieved successfully, the service should return 200 (OK).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostSettingsResponse'
        default:
          description: Error response describing why the operation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.BotService/operationresults/{operationResultId}?api-version=2023-09-15-preview:
    get:
      tags:
        - OperationResults
      description: Get the operation result for a long running operation.
      operationId: OperationResults_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/operationResultIdParameter'
      responses:
        '200':
          description: The body contains all of the properties of the operation result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultsDescription'
        '202':
          description: Accepted - Get request accepted; the operation will complete asynchronously.
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections?api-version=2023-09-15-preview:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: List all the private endpoint connections associated with the Bot.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK -- Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2023-09-15-preview:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the specified private endpoint connection associated with the Bot.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Get the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Create
      description: Update the state of specified private endpoint connection associated with the Bot.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: The private endpoint connection properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK -- Update the private endpoint connection properties successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes the specified private endpoint connection associated with the Bot.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Delete the private endpoint connection successfully.
        '204':
          description: No Content -- The private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateLinkResources?api-version=2023-09-15-preview:
    get:
      tags:
        - PrivateLinkResources
      operationId: PrivateLinkResources_ListByBotResource
      description: Gets the private link resources that need to be created for a Bot.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}?api-version=2023-09-15-preview:
    get:
      tags:
        - NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_Get
      description: Gets the specified Network Security Perimeter configuration associated with the Bot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/NetworkSecurityPerimeterConfigurationNameParameter'
      responses:
        '200':
          description: OK -- Get the Network Security Perimeter configuration successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/networkSecurityPerimeterConfigurations?api-version=2023-09-15-preview:
    get:
      tags:
        - NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_List
      description: List Network Security Perimeter configurations associated with the Bot.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
      responses:
        '200':
          description: OK -- List the Network Security Perimeter configurations successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          x-ms-error-response: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}/reconcile?api-version=2023-09-15-preview:
    post:
      tags:
        - NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_Reconcile
      description: Reconcile the specified Network Security Perimeter configuration associated with the Bot.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/resourceNameParameter'
        - $ref: '#/components/parameters/NetworkSecurityPerimeterConfigurationNameParameter'
      responses:
        '200':
          description: Request to reconcile the configuration succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        '202':
          description: Request to reconcile the configuration accepted.
          headers:
            location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          x-ms-error-response: true
      x-ms-long-running-operation: true
