openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Hybrid Data Manager
  description: Microsoft Azure Hybrid Data management client
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    apiVersionParameter:
      name: api-version
      in: query
      description: The API Version
      required: true
      schema:
        type: string
    dataManagerNameParameter:
      name: dataManagerName
      in: path
      description: The name of the DataManager Resource within the specified resource group. DataManager names must be between 3 and 24 characters in length and use any alphanumeric and underscore only
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 24
        minLength: 3
        pattern: ^[-\w\.]+$
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The Resource Group Name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Subscription Id
      required: true
      schema:
        type: string
  schemas:
    AvailableProviderOperation:
      description: Class represents provider operation
      required:
        - name
      properties:
        name:
          description: Gets or Sets Name of the operations
          type: string
        display:
          $ref: '#/components/schemas/AvailableProviderOperationDisplay'
          description: "Gets or sets Display information\r\nContains the localized display information for this particular operation/action"
        origin:
          description: "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is “user,system”"
          type: string
        properties:
          $ref: '#/components/schemas/AvailableProviderOperationProperties'
          description: "Gets or sets Properties\r\nReserved for future use"
          x-ms-client-flatten: true
      type: object
    AvailableProviderOperationDisplay:
      description: "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations."
      type: object
      properties:
        provider:
          description: "Gets or sets Provider\r\nThe localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with “Microsoft” for 1st party services."
          type: string
        resource:
          description: "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider. \r\nIt should use Title Casing – for examples, please refer to the “name” section."
          type: string
        operation:
          description: "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies."
          type: string
        description:
          description: "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise – it will be used in tool tips and detailed views."
          type: string
    AvailableProviderOperationProperties:
      description: Class represents Properties in AvailableProviderOperations
      type: object
      properties: {}
    AvailableProviderOperations:
      description: Class for set of operations used for discovery of available provider operations.
      type: object
      properties:
        value:
          description: List of operations.
          type: array
          items:
            $ref: '#/components/schemas/AvailableProviderOperation'
          x-ms-identifiers:
            - name
        nextLink:
          description: Link for the next set of operations.
          type: string
    CustomerSecret:
      description: The pair of customer secret.
      required:
        - keyIdentifier
        - keyValue
        - algorithm
      type: object
      properties:
        keyIdentifier:
          description: The identifier to the data service input object which this secret corresponds to.
          type: string
        keyValue:
          description: It contains the encrypted customer secret.
          type: string
        algorithm:
          description: The encryption algorithm used to encrypt data.
          enum:
            - None
            - RSA1_5
            - RSA_OAEP
            - PlainText
          type: string
          x-ms-enum:
            name: SupportedAlgorithm
            modelAsString: false
    DataManager:
      description: The DataManager resource.
      properties:
        id:
          description: The Resource Id.
          type: string
          readOnly: true
        name:
          description: The Resource Name.
          type: string
          readOnly: true
        type:
          description: The Resource type.
          type: string
          readOnly: true
        location:
          description: "The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East\r\nUS, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo\r\nregion is specified on update the request will succeed."
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\r\n(across resource groups)."
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku type.
        etag:
          description: Etag of the Resource.
          type: string
      type: object
    DataManagerList:
      description: DataManager resources Collection.
      type: object
      properties:
        value:
          description: List of data manager resources.
          type: array
          items:
            $ref: '#/components/schemas/DataManager'
        nextLink:
          description: Link for the next set of data stores.
          type: string
    DataManagerUpdateParameter:
      description: The DataManagerUpdateParameter.
      type: object
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku type.
        tags:
          description: "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\r\n(across resource groups)."
          type: object
          additionalProperties:
            type: string
    DataService:
      description: Data Service.
      required:
        - properties
      properties:
        name:
          description: Name of the object.
          type: string
          readOnly: true
        id:
          description: Id of the object.
          type: string
          readOnly: true
        type:
          description: Type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DataServiceProperties'
          description: DataService properties.
          x-ms-client-flatten: true
      type: object
    DataServiceList:
      description: Data Service Collection.
      type: object
      properties:
        value:
          description: List of data services.
          type: array
          items:
            $ref: '#/components/schemas/DataService'
        nextLink:
          description: Link for the next set of data services.
          type: string
    DataServiceProperties:
      description: Data Service properties.
      required:
        - state
      type: object
      properties:
        state:
          description: State of the data service.
          enum:
            - Disabled
            - Enabled
            - Supported
          type: string
          x-ms-enum:
            name: State
            modelAsString: false
        supportedDataSinkTypes:
          description: Supported data store types which can be used as a sink.
          type: array
          items:
            type: string
        supportedDataSourceTypes:
          description: Supported data store types which can be used as a source.
          type: array
          items:
            type: string
    DataStore:
      description: Data store.
      required:
        - properties
      properties:
        name:
          description: Name of the object.
          type: string
          readOnly: true
        id:
          description: Id of the object.
          type: string
          readOnly: true
        type:
          description: Type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DataStoreProperties'
          description: DataStore properties.
          x-ms-client-flatten: true
      type: object
    DataStoreFilter:
      description: Contains the information about the filters for the DataStore.
      type: object
      properties:
        dataStoreTypeId:
          description: The data store type id.
          type: string
    DataStoreList:
      description: Data Store Collection.
      type: object
      properties:
        value:
          description: List of data stores.
          type: array
          items:
            $ref: '#/components/schemas/DataStore'
        nextLink:
          description: Link for the next set of data stores.
          type: string
    DataStoreProperties:
      description: Data Store for sources and sinks
      required:
        - state
        - dataStoreTypeId
      type: object
      properties:
        repositoryId:
          description: Arm Id for the manager resource to which the data source is associated. This is optional.
          type: string
        state:
          description: State of the data source.
          enum:
            - Disabled
            - Enabled
            - Supported
          type: string
          x-ms-enum:
            name: State
            modelAsString: false
        extendedProperties:
          description: A generic json used differently by each data source type.
          type: object
        dataStoreTypeId:
          description: The arm id of the data store type.
          type: string
        customerSecrets:
          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
          type: array
          items:
            $ref: '#/components/schemas/CustomerSecret'
          x-ms-identifiers:
            - keyIdentifier
    DataStoreType:
      description: Data Store Type.
      required:
        - properties
      properties:
        name:
          description: Name of the object.
          type: string
          readOnly: true
        id:
          description: Id of the object.
          type: string
          readOnly: true
        type:
          description: Type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/DataStoreTypeProperties'
          description: DataStoreType properties.
          x-ms-client-flatten: true
      type: object
    DataStoreTypeList:
      description: Data Store Type Collection.
      type: object
      properties:
        value:
          description: List of DataStoreType.
          type: array
          items:
            $ref: '#/components/schemas/DataStoreType'
        nextLink:
          description: Link for the next set of data store types.
          type: string
    DataStoreTypeProperties:
      description: Data Store Type properties.
      required:
        - state
      type: object
      properties:
        repositoryType:
          description: Arm type for the manager resource to which the data source type is associated. This is optional.
          type: string
        state:
          description: State of the data store type.
          enum:
            - Disabled
            - Enabled
            - Supported
          type: string
          x-ms-enum:
            name: State
            modelAsString: false
        supportedDataServicesAsSink:
          description: Supported data services where it can be used as a sink.
          type: array
          items:
            type: string
        supportedDataServicesAsSource:
          description: Supported data services where it can be used as a source.
          type: array
          items:
            type: string
    DmsBaseObject:
      description: Base class for all objects under DataManager Service
      type: object
      properties:
        name:
          description: Name of the object.
          type: string
          readOnly: true
        id:
          description: Id of the object.
          type: string
          readOnly: true
        type:
          description: Type of the object.
          type: string
          readOnly: true
    Error:
      description: Top level error for the job.
      required:
        - code
      type: object
      properties:
        code:
          description: Error code that can be used to programmatically identify the error.
          type: string
        message:
          description: Describes the error in detail and provides debugging information.
          type: string
    ErrorDetails:
      description: Error Details
      type: object
      properties:
        errorMessage:
          description: Error message.
          type: string
        errorCode:
          format: int32
          description: Error code.
          type: integer
        recommendedAction:
          description: Recommended action for the error.
          type: string
        exceptionMessage:
          description: Contains the non localized exception message
          type: string
    Job:
      description: Data service job.
      required:
        - status
        - startTime
        - properties
      properties:
        name:
          description: Name of the object.
          type: string
          readOnly: true
        id:
          description: Id of the object.
          type: string
          readOnly: true
        type:
          description: Type of the object.
          type: string
          readOnly: true
        status:
          description: Status of the job.
          enum:
            - None
            - InProgress
            - Succeeded
            - WaitingForAction
            - Failed
            - Cancelled
            - Cancelling
            - PartiallySucceeded
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        startTime:
          format: date-time
          description: Time at which the job was started in UTC ISO 8601 format.
          type: string
        endTime:
          format: date-time
          description: Time at which the job ended in UTC ISO 8601 format.
          type: string
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: Job properties.
          x-ms-client-flatten: true
        error:
          $ref: '#/components/schemas/Error'
          description: Top level error for the job.
      type: object
    JobDefinition:
      description: Job Definition.
      required:
        - properties
      properties:
        name:
          description: Name of the object.
          type: string
          readOnly: true
        id:
          description: Id of the object.
          type: string
          readOnly: true
        type:
          description: Type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/JobDefinitionProperties'
          description: JobDefinition properties.
          x-ms-client-flatten: true
      type: object
    JobDefinitionFilter:
      description: Contains the supported job definition filters.
      required:
        - state
      type: object
      properties:
        state:
          description: The state of the job definition.
          enum:
            - Disabled
            - Enabled
            - Supported
          type: string
          x-ms-enum:
            name: State
            modelAsString: false
        dataSource:
          description: The data source associated with the job definition
          type: string
        lastModified:
          format: date-time
          description: The last modified date time of the data source.
          type: string
    JobDefinitionList:
      description: Job Definition Collection.
      type: object
      properties:
        value:
          description: List of job definitions.
          type: array
          items:
            $ref: '#/components/schemas/JobDefinition'
        nextLink:
          description: Link for the next set of job definitions.
          type: string
    JobDefinitionProperties:
      description: Job Definition
      required:
        - dataSourceId
        - dataSinkId
        - state
      type: object
      properties:
        dataSourceId:
          description: Data Source Id associated to the job definition.
          type: string
        dataSinkId:
          description: Data Sink Id associated to the job definition.
          type: string
        schedules:
          description: Schedule for running the job definition
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
          x-ms-identifiers:
            - name
        state:
          description: State of the job definition.
          enum:
            - Disabled
            - Enabled
            - Supported
          type: string
          x-ms-enum:
            name: State
            modelAsString: false
        lastModifiedTime:
          format: date-time
          description: Last modified time of the job definition.
          type: string
        runLocation:
          description: This is the preferred geo location for the job to run.
          enum:
            - none
            - australiaeast
            - australiasoutheast
            - brazilsouth
            - canadacentral
            - canadaeast
            - centralindia
            - centralus
            - eastasia
            - eastus
            - eastus2
            - japaneast
            - japanwest
            - koreacentral
            - koreasouth
            - southeastasia
            - southcentralus
            - southindia
            - northcentralus
            - northeurope
            - uksouth
            - ukwest
            - westcentralus
            - westeurope
            - westindia
            - westus
            - westus2
          type: string
          x-ms-enum:
            name: RunLocation
            modelAsString: false
        userConfirmation:
          description: Enum to detect if user confirmation is required. If not passed will default to NotRequired.
          default: NotRequired
          enum:
            - NotRequired
            - Required
          type: string
          x-ms-enum:
            name: UserConfirmation
            modelAsString: false
        dataServiceInput:
          description: A generic json used differently by each data service type.
          type: object
        customerSecrets:
          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
          type: array
          items:
            $ref: '#/components/schemas/CustomerSecret'
          x-ms-identifiers:
            - keyIdentifier
    JobDetails:
      description: Job details.
      type: object
      properties:
        jobStages:
          description: List of stages that ran in the job
          type: array
          items:
            $ref: '#/components/schemas/JobStages'
          x-ms-identifiers: []
        jobDefinition:
          $ref: '#/components/schemas/JobDefinition'
          description: JobDefinition at the time of the run
        errorDetails:
          description: Error details for failure. This is optional.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
          x-ms-identifiers: []
        itemDetailsLink:
          description: Item Details Link to download files or see details
          type: string
    JobFilter:
      description: Contains the information about the filters for the job.
      required:
        - status
      type: object
      properties:
        status:
          description: The status of the job.
          enum:
            - None
            - InProgress
            - Succeeded
            - WaitingForAction
            - Failed
            - Cancelled
            - Cancelling
            - PartiallySucceeded
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        startTime:
          format: date-time
          description: The start time of the job.
          type: string
    JobList:
      description: Job Collection.
      type: object
      properties:
        value:
          description: List of jobs.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        nextLink:
          description: Link for the next set of jobs.
          type: string
    JobProperties:
      description: Job Properties
      required:
        - isCancellable
      type: object
      properties:
        isCancellable:
          description: Describes whether the job is cancellable.
          enum:
            - NotCancellable
            - Cancellable
          type: string
          x-ms-enum:
            name: IsJobCancellable
            modelAsString: false
        bytesProcessed:
          format: int64
          description: Number of bytes processed by the job as of now.
          type: integer
        itemsProcessed:
          format: int64
          description: Number of items processed by the job as of now
          type: integer
        totalBytesToProcess:
          format: int64
          description: Number of bytes to be processed by the job in total.
          type: integer
        totalItemsToProcess:
          format: int64
          description: Number of items to be processed by the job in total
          type: integer
        details:
          $ref: '#/components/schemas/JobDetails'
          description: Details of a job run. This field will only be sent for expand details filter.
        dataSourceName:
          description: Name of the data source on which the job was triggered.
          type: string
        dataSinkName:
          description: Name of the data sink on which the job was triggered.
          type: string
    JobStages:
      description: Job stages.
      required:
        - stageStatus
      type: object
      properties:
        stageName:
          description: Name of the job stage.
          type: string
        stageStatus:
          description: Status of the job stage.
          enum:
            - None
            - InProgress
            - Succeeded
            - WaitingForAction
            - Failed
            - Cancelled
            - Cancelling
            - PartiallySucceeded
          type: string
          x-ms-enum:
            name: JobStatus
            modelAsString: false
        jobStageDetails:
          description: Job Stage Details
          type: object
        errorDetails:
          description: Error details for the stage. This is optional
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
          x-ms-identifiers: []
    Key:
      description: Encryption Key.
      required:
        - keyModulus
        - keyExponent
        - encryptionChunkSizeInBytes
      type: object
      properties:
        keyModulus:
          description: Modulus of the encryption key.
          type: string
        keyExponent:
          description: Exponent of the encryption key.
          type: string
        encryptionChunkSizeInBytes:
          format: int32
          description: 'The maximum byte size that can be encrypted by the key. For a key size larger than the size, break into chunks and encrypt each chunk, append each encrypted chunk with : to mark the end of the chunk.'
          type: integer
    PublicKey:
      description: Public key
      required:
        - properties
      properties:
        name:
          description: Name of the object.
          type: string
          readOnly: true
        id:
          description: Id of the object.
          type: string
          readOnly: true
        type:
          description: Type of the object.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/PublicKeyProperties'
          description: Public key property.
          x-ms-client-flatten: true
      type: object
    PublicKeyList:
      description: PublicKey Collection
      type: object
      properties:
        value:
          description: List of public keys.
          type: array
          items:
            $ref: '#/components/schemas/PublicKey'
        nextLink:
          description: Link for the next set of public keys.
          type: string
    PublicKeyProperties:
      description: PublicKey Properties
      required:
        - dataServiceLevel1Key
        - dataServiceLevel2Key
      type: object
      properties:
        dataServiceLevel1Key:
          $ref: '#/components/schemas/Key'
          description: Level one public key for encryption
        dataServiceLevel2Key:
          $ref: '#/components/schemas/Key'
          description: Level two public key for encryption
    Resource:
      description: Model of the Resource.
      required:
        - location
      type: object
      properties:
        id:
          description: The Resource Id.
          type: string
          readOnly: true
        name:
          description: The Resource Name.
          type: string
          readOnly: true
        type:
          description: The Resource type.
          type: string
          readOnly: true
        location:
          description: "The location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East\r\nUS, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo\r\nregion is specified on update the request will succeed."
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          description: "The list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource\r\n(across resource groups)."
          type: object
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku type.
      x-ms-azure-resource: true
    RunParameters:
      description: Run parameters for a job.
      type: object
      properties:
        userConfirmation:
          description: Enum to detect if user confirmation is required. If not passed will default to NotRequired.
          default: NotRequired
          enum:
            - NotRequired
            - Required
          type: string
          x-ms-enum:
            name: UserConfirmation
            modelAsString: false
        dataServiceInput:
          description: A generic json used differently by each data service type.
          type: object
        customerSecrets:
          description: List of customer secrets containing a key identifier and key value. The key identifier is a way for the specific data source to understand the key. Value contains customer secret encrypted by the encryptionKeys.
          type: array
          items:
            $ref: '#/components/schemas/CustomerSecret'
          x-ms-identifiers:
            - keyIdentifier
    Schedule:
      description: Schedule for the job run.
      type: object
      properties:
        name:
          description: Name of the schedule.
          type: string
        policyList:
          description: A list of repetition intervals in ISO 8601 format.
          type: array
          items:
            type: string
    Sku:
      description: The sku type.
      type: object
      properties:
        name:
          description: The sku name. Required for data manager creation, optional for update.
          type: string
        tier:
          description: The sku tier. This is based on the SKU name.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.hybrid_data_manager.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.HybridData~1operations~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    data_managers:
      id: azure.hybrid_data_manager.data_managers
      name: data_managers
      title: data_managers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.HybridData~1dataManagers~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1?api-version=2019-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_managers/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_managers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/data_managers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_managers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_managers/methods/delete'
    data_services:
      id: azure.hybrid_data_manager.data_services
      name: data_services
      title: data_services
      methods:
        list_by_data_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_services/methods/list_by_data_manager'
        insert: []
        update: []
        replace: []
        delete: []
    job_definitions:
      id: azure.hybrid_data_manager.job_definitions
      name: job_definitions
      title: job_definitions
      methods:
        list_by_data_service:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2019-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2019-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        run:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1run~1?api-version=2019-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_data_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1jobDefinitions~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/list_by_data_service'
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/list_by_data_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/delete'
    jobs:
      id: azure.hybrid_data_manager.jobs
      name: jobs
      title: jobs
      methods:
        list_by_job_definition:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1{jobId}~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1{jobId}~1cancel~1?api-version=2019-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resume:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobDefinitions~1{jobDefinitionName}~1jobs~1{jobId}~1resume~1?api-version=2019-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_data_service:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataServices~1{dataServiceName}~1jobs~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_data_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1jobs~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_job_definition'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_data_service'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_data_manager'
        insert: []
        update: []
        replace: []
        delete: []
    data_stores:
      id: azure.hybrid_data_manager.data_stores
      name: data_stores
      title: data_stores
      methods:
        list_by_data_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1{dataStoreName}~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1{dataStoreName}~1?api-version=2019-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStores~1{dataStoreName}~1?api-version=2019-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_stores/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_stores/methods/list_by_data_manager'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_stores/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_stores/methods/delete'
    data_store_types:
      id: azure.hybrid_data_manager.data_store_types
      name: data_store_types
      title: data_store_types
      methods:
        list_by_data_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStoreTypes~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1dataStoreTypes~1{dataStoreTypeName}~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_store_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_store_types/methods/list_by_data_manager'
        insert: []
        update: []
        replace: []
        delete: []
    public_keys:
      id: azure.hybrid_data_manager.public_keys
      name: public_keys
      title: public_keys
      methods:
        list_by_data_manager:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1publicKeys~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridData~1dataManagers~1{dataManagerName}~1publicKeys~1{publicKeyName}~1?api-version=2019-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/list_by_data_manager'
        insert: []
        update: []
        replace: []
        delete: []
    vw_data_services:
      id: azure.hybrid_data_manager.vw_data_services
      name: vw_data_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.supportedDataSinkTypes') as supported_data_sink_types,
              JSON_EXTRACT(properties, '$.supportedDataSourceTypes') as supported_data_source_types,
              subscriptionId,
              resourceGroupName,
              dataManagerName,
              dataServiceName
              FROM azure.hybrid_data_manager.data_services
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.supportedDataSinkTypes') as supported_data_sink_types,
                JSON_EXTRACT(properties, '$.supportedDataSourceTypes') as supported_data_source_types,
                subscriptionId,
                resourceGroupName,
                dataManagerName,
                dataServiceName
                FROM azure.hybrid_data_manager.data_services
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
    vw_job_definitions:
      id: azure.hybrid_data_manager.vw_job_definitions
      name: vw_job_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.dataSourceId') as data_source_id,
              JSON_EXTRACT(properties, '$.dataSinkId') as data_sink_id,
              JSON_EXTRACT(properties, '$.schedules') as schedules,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.lastModifiedTime') as last_modified_time,
              JSON_EXTRACT(properties, '$.runLocation') as run_location,
              JSON_EXTRACT(properties, '$.userConfirmation') as user_confirmation,
              JSON_EXTRACT(properties, '$.dataServiceInput') as data_service_input,
              JSON_EXTRACT(properties, '$.customerSecrets') as customer_secrets,
              subscriptionId,
              resourceGroupName,
              dataManagerName,
              dataServiceName,
              jobDefinitionName
              FROM azure.hybrid_data_manager.job_definitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.dataSourceId') as data_source_id,
                JSON_EXTRACT(properties, '$.dataSinkId') as data_sink_id,
                JSON_EXTRACT(properties, '$.schedules') as schedules,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.lastModifiedTime') as last_modified_time,
                JSON_EXTRACT(properties, '$.runLocation') as run_location,
                JSON_EXTRACT(properties, '$.userConfirmation') as user_confirmation,
                JSON_EXTRACT(properties, '$.dataServiceInput') as data_service_input,
                JSON_EXTRACT(properties, '$.customerSecrets') as customer_secrets,
                subscriptionId,
                resourceGroupName,
                dataManagerName,
                dataServiceName,
                jobDefinitionName
                FROM azure.hybrid_data_manager.job_definitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
    vw_jobs:
      id: azure.hybrid_data_manager.vw_jobs
      name: vw_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              status as status,
              startTime as start_time,
              endTime as end_time,
              error as error,
              JSON_EXTRACT(properties, '$.isCancellable') as is_cancellable,
              JSON_EXTRACT(properties, '$.bytesProcessed') as bytes_processed,
              JSON_EXTRACT(properties, '$.itemsProcessed') as items_processed,
              JSON_EXTRACT(properties, '$.totalBytesToProcess') as total_bytes_to_process,
              JSON_EXTRACT(properties, '$.totalItemsToProcess') as total_items_to_process,
              JSON_EXTRACT(properties, '$.details') as details,
              JSON_EXTRACT(properties, '$.dataSourceName') as data_source_name,
              JSON_EXTRACT(properties, '$.dataSinkName') as data_sink_name,
              subscriptionId,
              resourceGroupName,
              dataManagerName,
              dataServiceName,
              jobDefinitionName,
              jobId
              FROM azure.hybrid_data_manager.jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                status as status,
                startTime as start_time,
                endTime as end_time,
                error as error,
                json_extract_path_text(properties, '$.isCancellable') as is_cancellable,
                JSON_EXTRACT(properties, '$.bytesProcessed') as bytes_processed,
                JSON_EXTRACT(properties, '$.itemsProcessed') as items_processed,
                JSON_EXTRACT(properties, '$.totalBytesToProcess') as total_bytes_to_process,
                JSON_EXTRACT(properties, '$.totalItemsToProcess') as total_items_to_process,
                JSON_EXTRACT(properties, '$.details') as details,
                JSON_EXTRACT(properties, '$.dataSourceName') as data_source_name,
                JSON_EXTRACT(properties, '$.dataSinkName') as data_sink_name,
                subscriptionId,
                resourceGroupName,
                dataManagerName,
                dataServiceName,
                jobDefinitionName,
                jobId
                FROM azure.hybrid_data_manager.jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
    vw_data_stores:
      id: azure.hybrid_data_manager.vw_data_stores
      name: vw_data_stores
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.repositoryId') as repository_id,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.extendedProperties') as extended_properties,
              JSON_EXTRACT(properties, '$.dataStoreTypeId') as data_store_type_id,
              JSON_EXTRACT(properties, '$.customerSecrets') as customer_secrets,
              subscriptionId,
              resourceGroupName,
              dataManagerName,
              dataStoreName
              FROM azure.hybrid_data_manager.data_stores
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.repositoryId') as repository_id,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.extendedProperties') as extended_properties,
                JSON_EXTRACT(properties, '$.dataStoreTypeId') as data_store_type_id,
                JSON_EXTRACT(properties, '$.customerSecrets') as customer_secrets,
                subscriptionId,
                resourceGroupName,
                dataManagerName,
                dataStoreName
                FROM azure.hybrid_data_manager.data_stores
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
    vw_data_store_types:
      id: azure.hybrid_data_manager.vw_data_store_types
      name: vw_data_store_types
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.repositoryType') as repository_type,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.supportedDataServicesAsSink') as supported_data_services_as_sink,
              JSON_EXTRACT(properties, '$.supportedDataServicesAsSource') as supported_data_services_as_source,
              subscriptionId,
              resourceGroupName,
              dataManagerName,
              dataStoreTypeName
              FROM azure.hybrid_data_manager.data_store_types
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.repositoryType') as repository_type,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.supportedDataServicesAsSink') as supported_data_services_as_sink,
                JSON_EXTRACT(properties, '$.supportedDataServicesAsSource') as supported_data_services_as_source,
                subscriptionId,
                resourceGroupName,
                dataManagerName,
                dataStoreTypeName
                FROM azure.hybrid_data_manager.data_store_types
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
    vw_public_keys:
      id: azure.hybrid_data_manager.vw_public_keys
      name: vw_public_keys
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.dataServiceLevel1Key') as data_service_level1_key,
              JSON_EXTRACT(properties, '$.dataServiceLevel2Key') as data_service_level2_key,
              subscriptionId,
              resourceGroupName,
              dataManagerName,
              publicKeyName
              FROM azure.hybrid_data_manager.public_keys
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.dataServiceLevel1Key') as data_service_level1_key,
                JSON_EXTRACT(properties, '$.dataServiceLevel2Key') as data_service_level2_key,
                subscriptionId,
                resourceGroupName,
                dataManagerName,
                publicKeyName
                FROM azure.hybrid_data_manager.public_keys
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dataManagerName = 'replace-me';
paths:
  /providers/Microsoft.HybridData/operations/?api-version=2019-06-01:
    get:
      tags:
        - Operations
      summary: The list of operations for Microsoft.HybridData provider.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: The list of operations for Microsoft.HybridData provider.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableProviderOperations'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.HybridData/dataManagers/?api-version=2019-06-01:
    get:
      tags:
        - DataManagers
      description: Lists all the data manager resources available under the subscription.
      operationId: DataManagers_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: List of data manager resources available under the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerList'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/?api-version=2019-06-01:
    get:
      tags:
        - DataManagers
      description: Lists all the data manager resources available under the given resource group.
      operationId: DataManagers_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: List of data manager resources by resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManagerList'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/?api-version=2019-06-01:
    get:
      tags:
        - DataManagers
      description: Gets information about the specified data manager resource.
      operationId: DataManagers_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: Data Manager Resource object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManager'
    put:
      tags:
        - DataManagers
      description: "Creates a new data manager resource with the specified parameters. Existing resources cannot be updated with this API\r\nand should instead be updated with the Update data manager resource API."
      operationId: DataManagers_Create
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      requestBody:
        description: Data manager resource details from request body.
        required: true
        x-ms-requestBody-name: dataManager
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataManager'
      responses:
        '200':
          description: Completed request for Create. Returns the Data Manager Resource object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManager'
        '202':
          description: Accepted request for Create.
      x-ms-long-running-operation: true
    delete:
      tags:
        - DataManagers
      description: Deletes a data manager resource in Microsoft Azure.
      operationId: DataManagers_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '202':
          description: Data Manager Resource deleted.
        '204':
          description: Data Manager Resource deleted.
      x-ms-long-running-operation: true
    patch:
      tags:
        - DataManagers
      description: Updates the properties of an existing data manager resource.
      operationId: DataManagers_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: If-Match
          in: header
          description: Defines the If-Match condition. The patch will be performed only if the ETag of the data manager resource on the server matches this value.
          schema:
            type: string
      requestBody:
        description: Data manager resource details from request body.
        required: true
        x-ms-requestBody-name: dataManagerUpdateParameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataManagerUpdateParameter'
      responses:
        '200':
          description: Completed request for Updated. Returns the Data Manager Resource object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataManager'
        '202':
          description: Accepted request for Data Manager Update.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/?api-version=2019-06-01:
    get:
      tags:
        - DataServices
      description: This method gets all the data services.
      operationId: DataServices_ListByDataManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The list of data services.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataServiceList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/?api-version=2019-06-01:
    get:
      tags:
        - DataServices
      description: Gets the data service that matches the data service name given.
      operationId: DataServices_Get
      parameters:
        - name: dataServiceName
          in: path
          description: The name of the data service that is being queried.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The data service that matches the name.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataService'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/?api-version=2019-06-01:
    get:
      tags:
        - JobDefinitions
      description: This method gets all the job definitions of the given data service name.
      operationId: JobDefinitions_ListByDataService
      parameters:
        - name: dataServiceName
          in: path
          description: The data service type of interest.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of job definitions of the given data service type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinitionList'
      x-ms-odata: '#/components/schemas/JobDefinitionFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/?api-version=2019-06-01:
    get:
      tags:
        - JobDefinitions
      description: This method gets job definition object by name.
      operationId: JobDefinitions_Get
      parameters:
        - name: dataServiceName
          in: path
          description: The data service name of the job definition
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: The job definition name that is being queried.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The job definition that matches the criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
    put:
      tags:
        - JobDefinitions
      description: Creates or updates a job definition.
      operationId: JobDefinitions_CreateOrUpdate
      parameters:
        - name: dataServiceName
          in: path
          description: The data service type of the job definition.
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: The job definition name to be created or updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      requestBody:
        description: Job Definition object to be created or updated.
        required: true
        x-ms-requestBody-name: jobDefinition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
      responses:
        '200':
          description: Completed request for Create or Update. Returns the JobDefinition object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        '202':
          description: Accepted request for create/update.
      x-ms-long-running-operation: true
    delete:
      tags:
        - JobDefinitions
      description: This method deletes the given job definition.
      operationId: JobDefinitions_Delete
      parameters:
        - name: dataServiceName
          in: path
          description: The data service type of the job definition.
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: The job definition name to be deleted.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '202':
          description: Accepted request for JobDefinition deletion.
        '204':
          description: Completed request for Delete JobDefinition.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/?api-version=2019-06-01:
    get:
      tags:
        - Jobs
      description: This method gets all the jobs of a given job definition.
      operationId: Jobs_ListByJobDefinition
      parameters:
        - name: dataServiceName
          in: path
          description: The name of the data service of the job definition.
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: The name of the job definition for which jobs are needed.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of jobs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
      x-ms-odata: '#/components/schemas/JobFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/?api-version=2019-06-01:
    get:
      tags:
        - Jobs
      description: This method gets a data manager job given the jobId.
      operationId: Jobs_Get
      parameters:
        - name: dataServiceName
          in: path
          description: The name of the data service of the job definition.
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: The name of the job definition of the job.
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          description: The job id of the job queried.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: $expand
          in: query
          description: $expand is supported on details parameter for job, which provides details on the job stages.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The job that matches the given criteria.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/cancel/?api-version=2019-06-01:
    post:
      tags:
        - Jobs
      description: Cancels the given job.
      operationId: Jobs_Cancel
      parameters:
        - name: dataServiceName
          in: path
          description: The name of the data service of the job definition.
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: The name of the job definition of the job.
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          description: The job id of the job queried.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '202':
          description: Accepted job cancellation request.
        '204':
          description: Completed request for job Cancel.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/jobs/{jobId}/resume/?api-version=2019-06-01:
    post:
      tags:
        - Jobs
      description: Resumes the given job.
      operationId: Jobs_Resume
      parameters:
        - name: dataServiceName
          in: path
          description: The name of the data service of the job definition.
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: The name of the job definition of the job.
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          description: The job id of the job queried.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '202':
          description: Accepted job resume request.
        '204':
          description: Complete request for Job resume.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobDefinitions/{jobDefinitionName}/run/?api-version=2019-06-01:
    post:
      tags:
        - JobDefinitions
      description: This method runs a job instance of the given job definition.
      operationId: JobDefinitions_Run
      parameters:
        - name: dataServiceName
          in: path
          description: The data service type of the job definition.
          required: true
          schema:
            type: string
        - name: jobDefinitionName
          in: path
          description: Name of the job definition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      requestBody:
        description: Run time parameters for the job definition.
        required: true
        x-ms-requestBody-name: runParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunParameters'
      responses:
        '202':
          description: Job run accepted.
        '204':
          description: Completed request for Job run. Run has started.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataServices/{dataServiceName}/jobs/?api-version=2019-06-01:
    get:
      tags:
        - Jobs
      description: This method gets all the jobs of a data service type in a given resource.
      operationId: Jobs_ListByDataService
      parameters:
        - name: dataServiceName
          in: path
          description: The name of the data service of interest.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of jobs that match the service and resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
      x-ms-odata: '#/components/schemas/JobFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/?api-version=2019-06-01:
    get:
      tags:
        - DataStores
      description: Gets all the data stores/repositories in the given resource.
      operationId: DataStores_ListByDataManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of data stores/repositories in the given resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStoreList'
      x-ms-odata: '#/components/schemas/DataStoreFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStores/{dataStoreName}/?api-version=2019-06-01:
    get:
      tags:
        - DataStores
      description: This method gets the data store/repository by name.
      operationId: DataStores_Get
      parameters:
        - name: dataStoreName
          in: path
          description: The data store/repository name queried.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The data store/repository which matches the name given.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStore'
    put:
      tags:
        - DataStores
      description: Creates or updates the data store/repository in the data manager.
      operationId: DataStores_CreateOrUpdate
      parameters:
        - name: dataStoreName
          in: path
          description: The data store/repository name to be created or updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      requestBody:
        description: The data store/repository object to be created or updated.
        required: true
        x-ms-requestBody-name: dataStore
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataStore'
      responses:
        '200':
          description: Completed request for Create/Update. Returns the Data Store/Repository object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStore'
        '202':
          description: Accepted request for create/update.
      x-ms-long-running-operation: true
    delete:
      tags:
        - DataStores
      description: This method deletes the given data store/repository.
      operationId: DataStores_Delete
      parameters:
        - name: dataStoreName
          in: path
          description: The data store/repository name to be deleted.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '202':
          description: Accepted request for DataStore deletion.
        '204':
          description: Completed request for Delete Data Store.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes/?api-version=2019-06-01:
    get:
      tags:
        - DataStoreTypes
      description: Gets all the data store/repository types that the resource supports.
      operationId: DataStoreTypes_ListByDataManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The list of data store types that are supported.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStoreTypeList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/dataStoreTypes/{dataStoreTypeName}/?api-version=2019-06-01:
    get:
      tags:
        - DataStoreTypes
      description: Gets the data store/repository type given its name.
      operationId: DataStoreTypes_Get
      parameters:
        - name: dataStoreTypeName
          in: path
          description: The data store/repository type name for which details are needed.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The data store/repository type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStoreType'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobDefinitions/?api-version=2019-06-01:
    get:
      tags:
        - JobDefinitions
      description: This method gets all the job definitions of the given data manager resource.
      operationId: JobDefinitions_ListByDataManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of job definitions in that resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinitionList'
      x-ms-odata: '#/components/schemas/JobDefinitionFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/jobs/?api-version=2019-06-01:
    get:
      tags:
        - Jobs
      description: This method gets all the jobs at the data manager resource level.
      operationId: Jobs_ListByDataManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
        - name: $filter
          in: query
          description: OData Filter options
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of jobs in the resource specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
      x-ms-odata: '#/components/schemas/JobFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys/?api-version=2019-06-01:
    get:
      tags:
        - PublicKeys
      description: This method gets the list view of public keys, however it will only have one element.
      operationId: PublicKeys_ListByDataManager
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The list of public keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKeyList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridData/dataManagers/{dataManagerName}/publicKeys/{publicKeyName}/?api-version=2019-06-01:
    get:
      tags:
        - PublicKeys
      description: This method gets the public keys.
      operationId: PublicKeys_Get
      parameters:
        - name: publicKeyName
          in: path
          description: Name of the public key.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/dataManagerNameParameter'
      responses:
        '200':
          description: The public keys.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicKey'
