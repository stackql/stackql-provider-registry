openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Policy Guest Configuration
  description: Guest Configuration definitions in Azure Policy allow you to validate settings inside virtual machines. This validation includes the configuration of the operating system, applications, or even environmental data. You can use this API to create or update a Guest Configuration, and get information about the compliance details of a virtual machine. The details include specific settings that arent compliant with the assigned configuration.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    VmNameParameter:
      name: vmName
      in: path
      description: The name of the virtual machine.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9][-a-zA-Z0-9_.]*[a-zA-Z0-9]$
        type: string
    VMSSNameParameter:
      name: vmssName
      in: path
      description: The name of the virtual machine scale set.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    MachineNameParameter:
      name: machineName
      in: path
      description: The name of the ARC machine.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    GuestConfigurationAssignmentList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GuestConfigurationAssignment'
          description: Result of the list guest configuration assignment operation.
      description: The response of the list guest configuration assignment operation.
      type: object
    GuestConfigurationAssignment:
      description: Guest configuration assignment is an association between a machine and guest configuration.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/GuestConfigurationAssignmentProperties'
          description: Properties of the Guest configuration assignment.
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    GuestConfigurationNavigation:
      description: Guest configuration is an artifact that encapsulates DSC configuration and its dependencies. The artifact is a zip file containing DSC configuration (as MOF) and dependent resources and other dependencies like modules.
      properties:
        kind:
          type: string
          description: Kind of the guest configuration. For example:DSC
          x-ms-enum:
            name: kind
            modelAsString: true
          enum:
            - DSC
        name:
          type: string
          description: Name of the guest configuration.
        version:
          type: string
          description: Version of the guest configuration.
        contentUri:
          type: string
          description: Uri of the storage where guest configuration package is uploaded.
        contentHash:
          type: string
          description: Combined hash of the guest configuration package and configuration parameters.
        contentManagedIdentity:
          type: string
          description: Managed identity with storage access of the guest configuration package and configuration parameters.
        assignmentType:
          type: string
          description: Specifies the assignment type and execution of the configuration. Possible values are Audit, DeployAndAutoCorrect, ApplyAndAutoCorrect and ApplyAndMonitor.
          x-ms-enum:
            name: assignmentType
            modelAsString: true
          enum:
            - Audit
            - DeployAndAutoCorrect
            - ApplyAndAutoCorrect
            - ApplyAndMonitor
        assignmentSource:
          type: string
          readOnly: true
          description: Specifies the origin of the configuration.
          nullable: true
        contentType:
          type: string
          readOnly: true
          description: Specifies the content type of the configuration. Possible values could be Builtin or Custom.
          nullable: true
        configurationParameter:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationParameter'
          x-ms-identifiers:
            - name
          description: The configuration parameters for the guest configuration.
        configurationProtectedParameter:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationParameter'
          x-ms-identifiers:
            - name
          description: The protected configuration parameters for the guest configuration.
        configurationSetting:
          $ref: '#/components/schemas/ConfigurationSetting'
          readOnly: true
          description: The configuration setting for the guest configuration.
      type: object
    ConfigurationParameter:
      properties:
        name:
          type: string
          readOnly: false
          description: Name of the configuration parameter.
        value:
          type: string
          readOnly: false
          description: Value of the configuration parameter.
      description: Represents a configuration parameter.
      type: object
    ConfigurationSetting:
      properties:
        configurationMode:
          type: string
          readOnly: true
          description: Specifies how the LCM(Local Configuration Manager) actually applies the configuration to the target nodes. Possible values are ApplyOnly, ApplyAndMonitor, and ApplyAndAutoCorrect.
          x-ms-enum:
            name: configurationMode
            modelAsString: true
          enum:
            - ApplyOnly
            - ApplyAndMonitor
            - ApplyAndAutoCorrect
        allowModuleOverwrite:
          type: boolean
          readOnly: true
          description: If true - new configurations downloaded from the pull service are allowed to overwrite the old ones on the target node. Otherwise, false
        actionAfterReboot:
          type: string
          readOnly: true
          description: Specifies what happens after a reboot during the application of a configuration. The possible values are ContinueConfiguration and StopConfiguration
          x-ms-enum:
            name: actionAfterReboot
            modelAsString: true
          enum:
            - ContinueConfiguration
            - StopConfiguration
        refreshFrequencyMins:
          type: number
          readOnly: true
          default: 30
          description: The time interval, in minutes, at which the LCM checks a pull service to get updated configurations. This value is ignored if the LCM is not configured in pull mode. The default value is 30.
        rebootIfNeeded:
          type: boolean
          readOnly: true
          description: Set this to true to automatically reboot the node after a configuration that requires reboot is applied. Otherwise, you will have to manually reboot the node for any configuration that requires it. The default value is false. To use this setting when a reboot condition is enacted by something other than DSC (such as Windows Installer), combine this setting with the xPendingReboot module.
        configurationModeFrequencyMins:
          type: number
          readOnly: true
          default: 15
          description: How often, in minutes, the current configuration is checked and applied. This property is ignored if the ConfigurationMode property is set to ApplyOnly. The default value is 15.
      description: Configuration setting of LCM (Local Configuration Manager).
      type: object
    AssignmentReport:
      properties:
        id:
          type: string
          readOnly: true
          description: ARM resource id of the report for the guest configuration assignment.
        reportId:
          type: string
          readOnly: true
          description: GUID that identifies the guest configuration assignment report under a subscription, resource group.
        assignment:
          $ref: '#/components/schemas/AssignmentInfo'
          description: Configuration details of the guest configuration assignment.
        vm:
          $ref: '#/components/schemas/VMInfo'
          description: Information about the VM.
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Start date and time of the guest configuration assignment compliance status check.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: End date and time of the guest configuration assignment compliance status check.
        complianceStatus:
          type: string
          readOnly: true
          description: A value indicating compliance status of the machine for the assigned guest configuration.
          x-ms-enum:
            name: complianceStatus
            modelAsString: true
          enum:
            - Compliant
            - NonCompliant
            - Pending
        operationType:
          type: string
          readOnly: true
          description: Type of report, Consistency or Initial
          x-ms-enum:
            name: type
            modelAsString: true
          enum:
            - Consistency
            - Initial
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentReportResource'
          x-ms-identifiers: []
          description: The list of resources for which guest configuration assignment compliance is checked.
      type: object
    GuestConfigurationAssignmentProperties:
      properties:
        targetResourceId:
          type: string
          readOnly: true
          description: VM resource Id.
          nullable: true
        guestConfiguration:
          $ref: '#/components/schemas/GuestConfigurationNavigation'
          description: The guest configuration to assign.
        complianceStatus:
          type: string
          readOnly: true
          description: A value indicating compliance status of the machine for the assigned guest configuration.
          x-ms-enum:
            name: complianceStatus
            modelAsString: true
          enum:
            - Compliant
            - NonCompliant
            - Pending
        lastComplianceStatusChecked:
          type: string
          format: date-time
          readOnly: true
          description: Date and time when last compliance status was checked.
          nullable: true
        latestReportId:
          type: string
          readOnly: true
          description: 'Id of the latest report for the guest configuration assignment. '
          nullable: true
        parameterHash:
          type: string
          readOnly: true
          description: 'parameter hash for the guest configuration assignment. '
          nullable: true
        latestAssignmentReport:
          $ref: '#/components/schemas/AssignmentReport'
          description: Last reported guest configuration assignment report.
        context:
          type: string
          description: 'The source which initiated the guest configuration assignment. Ex: Azure Policy'
        assignmentHash:
          type: string
          readOnly: true
          description: Combined hash of the configuration package and parameters.
          nullable: true
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
          nullable: true
          x-ms-enum:
            name: provisioningState
            modelAsString: true
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Created
        resourceType:
          type: string
          readOnly: true
          description: Type of the resource - VMSS / VM
          nullable: true
        vmssVMList:
          type: array
          items:
            $ref: '#/components/schemas/VMSSVMInfo'
          x-ms-identifiers:
            - vmId
          description: The list of VM Compliance data for VMSS
      description: Guest configuration assignment properties.
      type: object
    GuestConfigurationAssignmentReportList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GuestConfigurationAssignmentReport'
          description: List of reports for the guest configuration. Report contains information such as compliance status, reason and more.
      description: List of guest configuration assignment reports.
      type: object
    GuestConfigurationAssignmentReport:
      description: Report for the guest configuration assignment. Report contains information such as compliance status, reason, and more.
      properties:
        id:
          type: string
          readOnly: true
          description: ARM resource id of the report for the guest configuration assignment.
        name:
          type: string
          readOnly: true
          description: GUID that identifies the guest configuration assignment report under a subscription, resource group.
        properties:
          $ref: '#/components/schemas/GuestConfigurationAssignmentReportProperties'
          description: Properties of the guest configuration report.
      type: object
    GuestConfigurationAssignmentReportProperties:
      properties:
        complianceStatus:
          type: string
          readOnly: true
          description: A value indicating compliance status of the machine for the assigned guest configuration.
          x-ms-enum:
            name: complianceStatus
            modelAsString: true
          enum:
            - Compliant
            - NonCompliant
            - Pending
        reportId:
          type: string
          readOnly: true
          description: GUID that identifies the guest configuration assignment report under a subscription, resource group.
        assignment:
          $ref: '#/components/schemas/AssignmentInfo'
          description: Configuration details of the guest configuration assignment.
        vm:
          $ref: '#/components/schemas/VMInfo'
          description: Information about the VM.
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Start date and time of the guest configuration assignment compliance status check.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: End date and time of the guest configuration assignment compliance status check.
        details:
          $ref: '#/components/schemas/AssignmentReportDetails'
          description: Details of the assignment report.
          nullable: true
          x-nullable: true
        vmssResourceId:
          type: string
          readOnly: true
          description: Azure resource Id of the VMSS.
      description: Report for the guest configuration assignment. Report contains information such as compliance status, reason, and more.
      type: object
    AssignmentInfo:
      properties:
        name:
          type: string
          readOnly: true
          description: Name of the guest configuration assignment.
        configuration:
          $ref: '#/components/schemas/ConfigurationInfo'
          description: Information about the configuration.
      description: Information about the guest configuration assignment.
      type: object
    VMInfo:
      properties:
        id:
          type: string
          readOnly: true
          description: Azure resource Id of the VM.
        uuid:
          type: string
          readOnly: true
          description: UUID(Universally Unique Identifier) of the VM.
      description: Information about the VM.
      type: object
    ConfigurationInfo:
      properties:
        name:
          type: string
          readOnly: true
          description: Name of the configuration.
        version:
          type: string
          readOnly: true
          description: Version of the configuration.
      description: Information about the configuration.
      type: object
    AssignmentReportDetails:
      properties:
        complianceStatus:
          type: string
          readOnly: true
          description: A value indicating compliance status of the machine for the assigned guest configuration.
          x-ms-enum:
            name: complianceStatus
            modelAsString: true
          enum:
            - Compliant
            - NonCompliant
            - Pending
        startTime:
          type: string
          format: date-time
          readOnly: true
          description: Start date and time of the guest configuration assignment compliance status check.
        endTime:
          type: string
          format: date-time
          readOnly: true
          description: End date and time of the guest configuration assignment compliance status check.
        jobId:
          type: string
          readOnly: true
          description: GUID of the report.
        operationType:
          type: string
          readOnly: true
          description: Type of report, Consistency or Initial
          x-ms-enum:
            name: type
            modelAsString: true
          enum:
            - Consistency
            - Initial
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentReportResource'
          x-ms-identifiers: []
          description: The list of resources for which guest configuration assignment compliance is checked.
      description: Details of the guest configuration assignment report.
      type: object
    AssignmentReportResource:
      description: The guest configuration assignment resource.
      properties:
        complianceStatus:
          type: string
          readOnly: true
          description: A value indicating compliance status of the machine for the assigned guest configuration.
          x-ms-enum:
            name: complianceStatus
            modelAsString: true
          enum:
            - Compliant
            - NonCompliant
            - Pending
        resourceId:
          type: string
          readOnly: true
          description: Name of the guest configuration assignment resource setting.
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/AssignmentReportResourceComplianceReason'
          x-ms-identifiers:
            - phrase
            - code
          description: Compliance reason and reason code for a resource.
        properties:
          type: object
          readOnly: true
          description: Properties of a guest configuration assignment resource.
      type: object
    AssignmentReportResourceComplianceReason:
      properties:
        phrase:
          type: string
          readOnly: true
          description: Reason for the compliance of the guest configuration assignment resource.
        code:
          type: string
          readOnly: true
          description: Code for the compliance of the guest configuration assignment resource.
      description: Reason and code for the compliance of the guest configuration assignment resource.
      type: object
    VMSSVMInfo:
      properties:
        vmId:
          type: string
          readOnly: true
          description: UUID of the VM.
        vmResourceId:
          type: string
          readOnly: true
          description: Azure resource Id of the VM.
        complianceStatus:
          type: string
          readOnly: true
          description: A value indicating compliance status of the machine for the assigned guest configuration.
          x-ms-enum:
            name: complianceStatus
            modelAsString: true
          enum:
            - Compliant
            - NonCompliant
            - Pending
        latestReportId:
          type: string
          readOnly: true
          description: 'Id of the latest report for the guest configuration assignment. '
          nullable: true
        lastComplianceChecked:
          type: string
          format: date-time
          readOnly: true
          description: Date and time when last compliance status was checked.
          nullable: true
      description: Information about VMSS VM
      type: object
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of Automation operations supported by the Automation resource provider.
      description: The response model for the list of Automation operations
      type: object
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    assignments:
      id: azure.guest_configuration.assignments
      name: assignments
      title: assignments
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        subscription_list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rg_list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/delete'
    assignment_reports:
      id: azure.guest_configuration.assignment_reports
      name: assignment_reports
      title: assignment_reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1reports~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1reports~1{reportId}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assignment_reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/assignment_reports/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hcrp_assignments:
      id: azure.guest_configuration.hcrp_assignments
      name: hcrp_assignments
      title: hcrp_assignments
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCompute~1machines~1{machineName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCompute~1machines~1{machineName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCompute~1machines~1{machineName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCompute~1machines~1{machineName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hcrp_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/hcrp_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/hcrp_assignments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hcrp_assignments/methods/delete'
    hcrp_assignment_reports:
      id: azure.guest_configuration.hcrp_assignment_reports
      name: hcrp_assignment_reports
      title: hcrp_assignment_reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCompute~1machines~1{machineName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1reports~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.HybridCompute~1machines~1{machineName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1reports~1{reportId}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hcrp_assignment_reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/hcrp_assignment_reports/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    assignments_vm_ss:
      id: azure.guest_configuration.assignments_vm_ss
      name: assignments_vm_ss
      title: assignments_vm_ss
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmssName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{name}~1?api-version=2024-04-05/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmssName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{name}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmssName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{name}~1?api-version=2024-04-05/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmssName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assignments_vm_ss/methods/get'
          - $ref: '#/components/x-stackQL-resources/assignments_vm_ss/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/assignments_vm_ss/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/assignments_vm_ss/methods/delete'
    assignment_reports_vm_ss:
      id: azure.guest_configuration.assignment_reports_vm_ss
      name: assignment_reports_vm_ss
      title: assignment_reports_vm_ss
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmssName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{name}~1reports~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmssName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{name}~1reports~1{id}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/assignment_reports_vm_ss/methods/get'
          - $ref: '#/components/x-stackQL-resources/assignment_reports_vm_ss/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    connected_vmwarev_sphere_assignments:
      id: azure.guest_configuration.connected_vmwarev_sphere_assignments
      name: connected_vmwarev_sphere_assignments
      title: connected_vmwarev_sphere_assignments
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualmachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualmachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualmachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1?api-version=2024-04-05/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualmachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_vmwarev_sphere_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_vmwarev_sphere_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_vmwarev_sphere_assignments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_vmwarev_sphere_assignments/methods/delete'
    connected_vmwarev_sphere_assignments_reports:
      id: azure.guest_configuration.connected_vmwarev_sphere_assignments_reports
      name: connected_vmwarev_sphere_assignments_reports
      title: connected_vmwarev_sphere_assignments_reports
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualmachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1reports~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ConnectedVMwarevSphere~1virtualmachines~1{vmName}~1providers~1Microsoft.GuestConfiguration~1guestConfigurationAssignments~1{guestConfigurationAssignmentName}~1reports~1{reportId}~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_vmwarev_sphere_assignments_reports/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_vmwarev_sphere_assignments_reports/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.guest_configuration.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.GuestConfiguration~1operations~1?api-version=2024-04-05/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_assignments:
      id: azure.guest_configuration.vw_assignments
      name: vw_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
              JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
              JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
              JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
              JSON_EXTRACT(properties, '$.context') as context,
              JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.resourceType') as resource_type,
              JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
              subscriptionId,
              resourceGroupName,
              vmName,
              guestConfigurationAssignmentName
              FROM azure.guest_configuration.assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
                JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
                JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
                JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
                JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
                JSON_EXTRACT(properties, '$.context') as context,
                JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.resourceType') as resource_type,
                JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
                subscriptionId,
                resourceGroupName,
                vmName,
                guestConfigurationAssignmentName
                FROM azure.guest_configuration.assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me';
    vw_assignment_reports:
      id: azure.guest_configuration.vw_assignment_reports
      name: vw_assignment_reports
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.reportId') as report_id,
              JSON_EXTRACT(properties, '$.assignment') as assignment,
              JSON_EXTRACT(properties, '$.vm') as vm,
              JSON_EXTRACT(properties, '$.startTime') as start_time,
              JSON_EXTRACT(properties, '$.endTime') as end_time,
              JSON_EXTRACT(properties, '$.details') as details,
              JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
              subscriptionId,
              resourceGroupName,
              vmName,
              guestConfigurationAssignmentName,
              reportId
              FROM azure.guest_configuration.assignment_reports
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me' AND guestConfigurationAssignmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                json_extract_path_text(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.reportId') as report_id,
                JSON_EXTRACT(properties, '$.assignment') as assignment,
                JSON_EXTRACT(properties, '$.vm') as vm,
                JSON_EXTRACT(properties, '$.startTime') as start_time,
                JSON_EXTRACT(properties, '$.endTime') as end_time,
                JSON_EXTRACT(properties, '$.details') as details,
                JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
                subscriptionId,
                resourceGroupName,
                vmName,
                guestConfigurationAssignmentName,
                reportId
                FROM azure.guest_configuration.assignment_reports
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me' AND guestConfigurationAssignmentName = 'replace-me';
    vw_hcrp_assignments:
      id: azure.guest_configuration.vw_hcrp_assignments
      name: vw_hcrp_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
              JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
              JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
              JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
              JSON_EXTRACT(properties, '$.context') as context,
              JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.resourceType') as resource_type,
              JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
              subscriptionId,
              resourceGroupName,
              machineName,
              guestConfigurationAssignmentName
              FROM azure.guest_configuration.hcrp_assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND machineName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
                JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
                JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
                JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
                JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
                JSON_EXTRACT(properties, '$.context') as context,
                JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.resourceType') as resource_type,
                JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
                subscriptionId,
                resourceGroupName,
                machineName,
                guestConfigurationAssignmentName
                FROM azure.guest_configuration.hcrp_assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND machineName = 'replace-me';
    vw_hcrp_assignment_reports:
      id: azure.guest_configuration.vw_hcrp_assignment_reports
      name: vw_hcrp_assignment_reports
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.reportId') as report_id,
              JSON_EXTRACT(properties, '$.assignment') as assignment,
              JSON_EXTRACT(properties, '$.vm') as vm,
              JSON_EXTRACT(properties, '$.startTime') as start_time,
              JSON_EXTRACT(properties, '$.endTime') as end_time,
              JSON_EXTRACT(properties, '$.details') as details,
              JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
              subscriptionId,
              resourceGroupName,
              machineName,
              guestConfigurationAssignmentName,
              reportId
              FROM azure.guest_configuration.hcrp_assignment_reports
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND machineName = 'replace-me' AND guestConfigurationAssignmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                json_extract_path_text(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.reportId') as report_id,
                JSON_EXTRACT(properties, '$.assignment') as assignment,
                JSON_EXTRACT(properties, '$.vm') as vm,
                JSON_EXTRACT(properties, '$.startTime') as start_time,
                JSON_EXTRACT(properties, '$.endTime') as end_time,
                JSON_EXTRACT(properties, '$.details') as details,
                JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
                subscriptionId,
                resourceGroupName,
                machineName,
                guestConfigurationAssignmentName,
                reportId
                FROM azure.guest_configuration.hcrp_assignment_reports
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND machineName = 'replace-me' AND guestConfigurationAssignmentName = 'replace-me';
    vw_assignments_vm_ss:
      id: azure.guest_configuration.vw_assignments_vm_ss
      name: vw_assignments_vm_ss
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
              JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
              JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
              JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
              JSON_EXTRACT(properties, '$.context') as context,
              JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.resourceType') as resource_type,
              JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
              subscriptionId,
              resourceGroupName,
              vmssName,
              name
              FROM azure.guest_configuration.assignments_vm_ss
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmssName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
                JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
                JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
                JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
                JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
                JSON_EXTRACT(properties, '$.context') as context,
                JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.resourceType') as resource_type,
                JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
                subscriptionId,
                resourceGroupName,
                vmssName,
                name
                FROM azure.guest_configuration.assignments_vm_ss
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmssName = 'replace-me';
    vw_assignment_reports_vm_ss:
      id: azure.guest_configuration.vw_assignment_reports_vm_ss
      name: vw_assignment_reports_vm_ss
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.reportId') as report_id,
              JSON_EXTRACT(properties, '$.assignment') as assignment,
              JSON_EXTRACT(properties, '$.vm') as vm,
              JSON_EXTRACT(properties, '$.startTime') as start_time,
              JSON_EXTRACT(properties, '$.endTime') as end_time,
              JSON_EXTRACT(properties, '$.details') as details,
              JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
              subscriptionId,
              resourceGroupName,
              vmssName,
              name,
              id
              FROM azure.guest_configuration.assignment_reports_vm_ss
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmssName = 'replace-me' AND name = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                json_extract_path_text(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.reportId') as report_id,
                JSON_EXTRACT(properties, '$.assignment') as assignment,
                JSON_EXTRACT(properties, '$.vm') as vm,
                JSON_EXTRACT(properties, '$.startTime') as start_time,
                JSON_EXTRACT(properties, '$.endTime') as end_time,
                JSON_EXTRACT(properties, '$.details') as details,
                JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
                subscriptionId,
                resourceGroupName,
                vmssName,
                name,
                id
                FROM azure.guest_configuration.assignment_reports_vm_ss
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmssName = 'replace-me' AND name = 'replace-me';
    vw_connected_vmwarev_sphere_assignments:
      id: azure.guest_configuration.vw_connected_vmwarev_sphere_assignments
      name: vw_connected_vmwarev_sphere_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
              JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
              JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
              JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
              JSON_EXTRACT(properties, '$.context') as context,
              JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.resourceType') as resource_type,
              JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
              subscriptionId,
              resourceGroupName,
              vmName,
              guestConfigurationAssignmentName
              FROM azure.guest_configuration.connected_vmwarev_sphere_assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.guestConfiguration') as guest_configuration,
                JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.lastComplianceStatusChecked') as last_compliance_status_checked,
                JSON_EXTRACT(properties, '$.latestReportId') as latest_report_id,
                JSON_EXTRACT(properties, '$.parameterHash') as parameter_hash,
                JSON_EXTRACT(properties, '$.latestAssignmentReport') as latest_assignment_report,
                JSON_EXTRACT(properties, '$.context') as context,
                JSON_EXTRACT(properties, '$.assignmentHash') as assignment_hash,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.resourceType') as resource_type,
                JSON_EXTRACT(properties, '$.vmssVMList') as vmss_vm_list,
                subscriptionId,
                resourceGroupName,
                vmName,
                guestConfigurationAssignmentName
                FROM azure.guest_configuration.connected_vmwarev_sphere_assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me';
    vw_connected_vmwarev_sphere_assignments_reports:
      id: azure.guest_configuration.vw_connected_vmwarev_sphere_assignments_reports
      name: vw_connected_vmwarev_sphere_assignments_reports
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              JSON_EXTRACT(properties, '$.complianceStatus') as compliance_status,
              JSON_EXTRACT(properties, '$.reportId') as report_id,
              JSON_EXTRACT(properties, '$.assignment') as assignment,
              JSON_EXTRACT(properties, '$.vm') as vm,
              JSON_EXTRACT(properties, '$.startTime') as start_time,
              JSON_EXTRACT(properties, '$.endTime') as end_time,
              JSON_EXTRACT(properties, '$.details') as details,
              JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
              subscriptionId,
              resourceGroupName,
              vmName,
              guestConfigurationAssignmentName,
              reportId
              FROM azure.guest_configuration.connected_vmwarev_sphere_assignments_reports
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me' AND guestConfigurationAssignmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                json_extract_path_text(properties, '$.complianceStatus') as compliance_status,
                JSON_EXTRACT(properties, '$.reportId') as report_id,
                JSON_EXTRACT(properties, '$.assignment') as assignment,
                JSON_EXTRACT(properties, '$.vm') as vm,
                JSON_EXTRACT(properties, '$.startTime') as start_time,
                JSON_EXTRACT(properties, '$.endTime') as end_time,
                JSON_EXTRACT(properties, '$.details') as details,
                JSON_EXTRACT(properties, '$.vmssResourceId') as vmss_resource_id,
                subscriptionId,
                resourceGroupName,
                vmName,
                guestConfigurationAssignmentName,
                reportId
                FROM azure.guest_configuration.connected_vmwarev_sphere_assignments_reports
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND vmName = 'replace-me' AND guestConfigurationAssignmentName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/?api-version=2024-04-05:
    put:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignments_CreateOrUpdate
      description: Creates an association between a VM and guest configuration
      parameters:
        - name: guestConfigurationAssignmentName
          in: path
          description: Name of the guest configuration assignment.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VmNameParameter'
      requestBody:
        description: Parameters supplied to the create or update guest configuration assignment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestConfigurationAssignment'
      responses:
        '200':
          description: OK. The guest configuration assignment for the VM was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        '201':
          description: Created. The guest configuration assignment for the VM was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignments_Get
      description: Get information about a guest configuration assignment
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/VmNameParameter'
      responses:
        '200':
          description: OK. The guest configuration assignment was returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignments_Delete
      description: Delete a guest configuration assignment
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: Name of the guest configuration assignment
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/VmNameParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignments_SubscriptionList
      description: List all guest configuration assignments for a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentList'
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignments_RGList
      description: List all guest configuration assignments for a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentList'
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignments_List
      description: List all guest configuration assignments for a virtual machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/VmNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignmentReports
      operationId: GuestConfigurationAssignmentReports_List
      description: List all reports for the guest configuration assignment, latest report first.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/VmNameParameter'
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Reports were returned successfully 2. Guest configuration assignment was found, but VM is not registered yet, hence no reports returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReportList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports/{reportId}/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignmentReports
      operationId: GuestConfigurationAssignmentReports_Get
      description: Get a report for the guest configuration assignment, by reportId.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The GUID for the guest configuration assignment report.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/VmNameParameter'
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Report was returned successfully 2. Guest configuration assignment was found, but VM is not registered yet, hence no report was returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReport'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/?api-version=2024-04-05:
    put:
      tags:
        - GuestConfigurationHCRPAssignments
      operationId: GuestConfigurationHCRPAssignments_CreateOrUpdate
      description: Creates an association between a ARC machine and guest configuration
      parameters:
        - name: guestConfigurationAssignmentName
          in: path
          description: Name of the guest configuration assignment.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/MachineNameParameter'
      requestBody:
        description: Parameters supplied to the create or update guest configuration assignment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestConfigurationAssignment'
      responses:
        '200':
          description: OK. The guest configuration assignment for the ARC machine was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        '201':
          description: Created. The guest configuration assignment for the ARC machine was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GuestConfigurationHCRPAssignments
      operationId: GuestConfigurationHCRPAssignments_Get
      description: Get information about a guest configuration assignment
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/MachineNameParameter'
      responses:
        '200':
          description: OK. The guest configuration assignment was returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GuestConfigurationHCRPAssignments
      operationId: GuestConfigurationHCRPAssignments_Delete
      description: Delete a guest configuration assignment
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: Name of the guest configuration assignment
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/MachineNameParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationHCRPAssignments
      operationId: GuestConfigurationHCRPAssignments_List
      description: List all guest configuration assignments for an ARC machine.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/MachineNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignmentHCRPReports
      operationId: GuestConfigurationHCRPAssignmentReports_List
      description: List all reports for the guest configuration assignment, latest report first.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/MachineNameParameter'
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Reports were returned successfully 2. Guest configuration assignment was found, but machine is not registered yet, hence no reports returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReportList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports/{reportId}/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignmentHCRPReports
      operationId: GuestConfigurationHCRPAssignmentReports_Get
      description: Get a report for the guest configuration assignment, by reportId.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          description: The GUID for the guest configuration assignment report.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/MachineNameParameter'
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Report was returned successfully 2. Guest configuration assignment was found, but machine is not registered yet, hence no report was returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReport'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{name}/?api-version=2024-04-05:
    put:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignmentsVMSS_CreateOrUpdate
      description: Creates an association between a VMSS and guest configuration
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VMSSNameParameter'
        - name: name
          in: path
          description: Name of the guest configuration assignment.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create or update guest configuration assignment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestConfigurationAssignment'
      responses:
        '200':
          description: OK. The guest configuration assignment for the VMSS was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        '201':
          description: Created. The guest configuration assignment for the VMSS was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignmentsVMSS_Get
      description: Get information about a guest configuration assignment for VMSS
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VMSSNameParameter'
        - name: name
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. The guest configuration assignment was returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignmentsVMSS_Delete
      description: Delete a guest configuration assignment for VMSS
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VMSSNameParameter'
        - name: name
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        '204':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignments
      operationId: GuestConfigurationAssignmentsVMSS_List
      description: List all guest configuration assignments for VMSS.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/VMSSNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{name}/reports/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignmentReports
      operationId: GuestConfigurationAssignmentReportsVMSS_List
      description: List all reports for the VMSS guest configuration assignment, latest report first.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VMSSNameParameter'
        - name: name
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Reports were returned successfully 2. Guest configuration assignment was found, but VM is not registered yet, hence no reports returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReportList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{name}/reports/{id}/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationAssignmentReports
      operationId: GuestConfigurationAssignmentReportsVMSS_Get
      description: Get a report for the VMSS guest configuration assignment, by reportId.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VMSSNameParameter'
        - name: name
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The GUID for the guest configuration assignment report.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Report was returned successfully 2. Guest configuration assignment was found, but VM is not registered yet, hence no report was returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReport'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualmachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/?api-version=2024-04-05:
    put:
      tags:
        - GuestConfigurationConnectedVMwarevSphereAssignments
      operationId: GuestConfigurationConnectedVMwarevSphereAssignments_CreateOrUpdate
      description: Creates an association between a Connected VM Sphere machine and guest configuration
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VmNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: Name of the guest configuration assignment.
          required: true
          schema:
            pattern: ^[^<>%&:\\?/#]*$
            type: string
      requestBody:
        description: Parameters supplied to the create or update guest configuration assignment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuestConfigurationAssignment'
      responses:
        '200':
          description: OK. The guest configuration assignment for the Connected VM Sphere machine was updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        '201':
          description: Created. The guest configuration assignment for the Connected VM Sphere machine was created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GuestConfigurationConnectedVMwarevSphereAssignments
      operationId: GuestConfigurationConnectedVMwarevSphereAssignments_Get
      description: Get information about a guest configuration assignment
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VmNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            pattern: ^[^<>%&:\\?/#]*$
            type: string
      responses:
        '200':
          description: OK. The guest configuration assignment was returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GuestConfigurationConnectedVMwarevSphereAssignments
      operationId: GuestConfigurationConnectedVMwarevSphereAssignments_Delete
      description: Delete a guest configuration assignment
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VmNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: Name of the guest configuration assignment
          required: true
          schema:
            pattern: ^[^<>%&:\\?/#]*$
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualmachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationConnectedVMwarevSphereAssignments
      operationId: GuestConfigurationConnectedVMwarevSphereAssignments_List
      description: List all guest configuration assignments for an ARC machine.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VmNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualmachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationConnectedVMwarevSphereAssignmentsReports
      operationId: GuestConfigurationConnectedVMwarevSphereAssignmentsReports_List
      description: List all reports for the guest configuration assignment, latest report first.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VmNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            pattern: ^[^<>%&:\\?/#]*$
            type: string
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Reports were returned successfully 2. Guest configuration assignment was found, but machine is not registered yet, hence no reports returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReportList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualmachines/{vmName}/providers/Microsoft.GuestConfiguration/guestConfigurationAssignments/{guestConfigurationAssignmentName}/reports/{reportId}/?api-version=2024-04-05:
    get:
      tags:
        - GuestConfigurationConnectedVMwarevSphereAssignmentsReports
      operationId: GuestConfigurationConnectedVMwarevSphereAssignmentsReports_Get
      description: Get a report for the guest configuration assignment, by reportId.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VmNameParameter'
        - name: guestConfigurationAssignmentName
          in: path
          description: The guest configuration assignment name.
          required: true
          schema:
            pattern: ^[^<>%&:\\?/#]*$
            type: string
        - name: reportId
          in: path
          description: The GUID for the guest configuration assignment report.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK. This response is due one of these two reasons: 1. Report was returned successfully 2. Guest configuration assignment was found, but machine is not registered yet, hence no report was returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuestConfigurationAssignmentReport'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.GuestConfiguration/operations/?api-version=2024-04-05:
    get:
      tags:
        - Operations
      description: Lists all of the available GuestConfiguration REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: null
