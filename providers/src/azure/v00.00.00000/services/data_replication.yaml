openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Recovery Services Data Replication
  description: Azure Recovery Services Data Replication provides your business with the capabilities to replicate and migrate from supported platforms (i.e., Hyper-V and VMware) to Azure Stack HCI. The data movement stays entirely on-premises and Azure Migrate is utilized as the management plane.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FabricNameParameter:
      name: fabricName
      in: path
      description: The fabric name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    FabricAgentNameParameter:
      name: fabricAgentName
      in: path
      description: The fabric agent (Dra) name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    VaultNameParameter:
      name: vaultName
      in: path
      description: The vault name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    PolicyNameParameter:
      name: policyName
      in: path
      description: The policy name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ProtectedItemNameParameter:
      name: protectedItemName
      in: path
      description: The protected item name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    ReplicationExtensionNameParameter:
      name: replicationExtensionName
      in: path
      description: The replication extension name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    JobNameParameter:
      name: jobName
      in: path
      description: The job (workflow) name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    EmailConfigurationNameParameter:
      name: emailConfigurationName
      in: path
      description: The email configuration name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    EventNameParameter:
      name: eventName
      in: path
      description: The event name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
    RecoveryPointNameParameter:
      name: recoveryPointName
      in: path
      description: The recovery point name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]*$
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AzStackHCIClusterProperties:
      description: AzStackHCI cluster properties.
      required:
        - clusterName
        - resourceName
        - storageAccountName
        - storageContainers
      type: object
      properties:
        clusterName:
          description: Gets or sets the AzStackHCICluster FQDN name.
          minLength: 1
          type: string
        resourceName:
          description: Gets or sets the AzStackHCICluster resource name.
          minLength: 1
          type: string
        storageAccountName:
          description: Gets or sets the Storage account name.
          minLength: 1
          type: string
        storageContainers:
          description: Gets or sets the list of AzStackHCICluster Storage Container.
          type: array
          items:
            $ref: '#/components/schemas/StorageContainerProperties'
          x-ms-identifiers: []
    AzStackHCIFabricModelCustomProperties:
      description: AzStackHCI fabric model custom properties.
      required:
        - azStackHciSiteId
        - cluster
        - migrationSolutionId
      x-ms-discriminator-value: AzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        azStackHciSiteId:
          description: Gets or sets the ARM Id of the AzStackHCI site.
          minLength: 1
          type: string
        applianceName:
          description: Gets or sets the Appliance name.
          type: array
          items:
            type: string
          readOnly: true
        cluster:
          $ref: '#/components/schemas/AzStackHCIClusterProperties'
        fabricResourceId:
          description: Gets or sets the fabric resource Id.
          type: string
          readOnly: true
        fabricContainerId:
          description: Gets or sets the fabric container Id.
          type: string
          readOnly: true
        migrationSolutionId:
          description: Gets or sets the Migration solution ARM Id.
          minLength: 1
          type: string
        migrationHubUri:
          description: Gets or sets the migration hub Uri.
          type: string
          readOnly: true
      type: object
    CheckNameAvailabilityModel:
      description: Check name availability model.
      type: object
      properties:
        name:
          description: Gets or sets the resource name.
          type: string
        type:
          description: Gets or sets the resource type.
          type: string
    CheckNameAvailabilityResponseModel:
      description: Check name availability response model.
      type: object
      properties:
        nameAvailable:
          description: Gets or sets a value indicating whether resource name is available or not.
          type: boolean
        reason:
          description: Gets or sets the reason for resource name unavailability.
          type: string
        message:
          description: Gets or sets the message for resource name unavailability.
          type: string
    DeploymentPreflightModel:
      description: Deployment preflight model.
      type: object
      properties:
        resources:
          description: Gets or sets the list of resources.
          type: array
          items:
            $ref: '#/components/schemas/DeploymentPreflightResource'
          x-ms-identifiers: []
    DeploymentPreflightResource:
      description: Deployment preflight resource.
      type: object
      properties:
        name:
          description: Gets or sets the resource name.
          type: string
        type:
          description: Gets or sets the resource type.
          type: string
        location:
          description: Gets or sets the location of the resource.
          type: string
          x-ms-mutability:
            - create
            - read
        apiVersion:
          description: Gets or sets the Api version.
          type: string
    DraModel:
      description: Dra model.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/DraModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    DraModelCollection:
      description: Dra model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of Dras.
          type: array
          items:
            $ref: '#/components/schemas/DraModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    DraModelCustomProperties:
      description: Dra model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    DraModelProperties:
      description: Dra model properties.
      required:
        - authenticationIdentity
        - customProperties
        - machineId
        - machineName
        - resourceAccessIdentity
      type: object
      properties:
        correlationId:
          description: Gets or sets the Dra correlation Id.
          type: string
          readOnly: true
        machineId:
          description: Gets or sets the machine Id where Dra is running.
          minLength: 1
          type: string
        machineName:
          description: Gets or sets the machine name where Dra is running.
          minLength: 1
          type: string
        authenticationIdentity:
          $ref: '#/components/schemas/IdentityModel'
        resourceAccessIdentity:
          $ref: '#/components/schemas/IdentityModel'
        isResponsive:
          description: Gets or sets a value indicating whether Dra is responsive.
          type: boolean
          readOnly: true
        lastHeartbeat:
          format: date-time
          description: Gets or sets the time when last heartbeat was sent by the Dra.
          type: string
          readOnly: true
        versionNumber:
          description: Gets or sets the Dra version.
          type: string
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state of the Dra.
          enum:
            - Canceled
            - Creating
            - Deleting
            - Deleted
            - Failed
            - Succeeded
            - Updating
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        healthErrors:
          description: Gets or sets the list of health errors.
          type: array
          items:
            $ref: '#/components/schemas/HealthErrorModel'
          readOnly: true
          x-ms-identifiers: []
        customProperties:
          $ref: '#/components/schemas/DraModelCustomProperties'
    EmailConfigurationModel:
      description: Email configuration model.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/EmailConfigurationModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    EmailConfigurationModelCollection:
      description: Email configuration model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of email configurations.
          type: array
          items:
            $ref: '#/components/schemas/EmailConfigurationModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    EmailConfigurationModelProperties:
      description: Email configuration model properties.
      required:
        - sendToOwners
      type: object
      properties:
        sendToOwners:
          description: Gets or sets a value indicating whether to send email to subscription administrator.
          type: boolean
        customEmailAddresses:
          description: Gets or sets the custom email address for sending emails.
          type: array
          items:
            type: string
        locale:
          description: Gets or sets the locale for the email notification.
          type: string
    ErrorModel:
      description: Error model.
      type: object
      properties:
        code:
          description: Gets or sets the error code.
          type: string
          readOnly: true
        type:
          description: Gets or sets the error type.
          type: string
          readOnly: true
        severity:
          description: Gets or sets the error severity.
          type: string
          readOnly: true
        creationTime:
          format: date-time
          description: Gets or sets the creation time of error.
          type: string
          readOnly: true
        message:
          description: Gets or sets the error message.
          type: string
          readOnly: true
        causes:
          description: Gets or sets the possible causes of error.
          type: string
          readOnly: true
        recommendation:
          description: Gets or sets the recommended action to resolve error.
          type: string
          readOnly: true
    EventModel:
      description: Event model.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/EventModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    EventModelCollection:
      description: Event model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of events.
          type: array
          items:
            $ref: '#/components/schemas/EventModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    EventModelCustomProperties:
      description: Event model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    EventModelProperties:
      description: Event model properties.
      required:
        - customProperties
      type: object
      properties:
        resourceType:
          description: Gets or sets the resource type.
          type: string
          readOnly: true
        resourceName:
          description: Gets or sets the resource name.
          type: string
          readOnly: true
        eventType:
          description: Gets or sets the event type.
          type: string
          readOnly: true
        eventName:
          description: Gets or sets the event name.
          type: string
          readOnly: true
        timeOfOccurrence:
          format: date-time
          description: Gets or sets the time at which the event occurred at source.
          type: string
          readOnly: true
        severity:
          description: Gets or sets the event severity.
          type: string
          readOnly: true
        description:
          description: Gets or sets the event description.
          type: string
          readOnly: true
        correlationId:
          description: Gets or sets the event correlation Id.
          type: string
          readOnly: true
        healthErrors:
          description: Gets or sets the errors associated with this event.
          type: array
          items:
            $ref: '#/components/schemas/HealthErrorModel'
          readOnly: true
          x-ms-identifiers: []
        customProperties:
          $ref: '#/components/schemas/EventModelCustomProperties'
    FabricModel:
      description: Fabric model.
      required:
        - location
        - properties
      x-ms-azure-resource: true
      properties:
        location:
          description: Gets or sets the location of the fabric.
          minLength: 1
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Gets or sets the resource tags.
          maxLength: 15
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/FabricModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    FabricModelCollection:
      description: Fabric model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of fabrics.
          type: array
          items:
            $ref: '#/components/schemas/FabricModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    FabricModelCustomProperties:
      description: Fabric model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    FabricModelProperties:
      description: Fabric model properties.
      required:
        - customProperties
      type: object
      properties:
        provisioningState:
          description: Gets or sets the provisioning state of the fabric.
          enum:
            - Canceled
            - Creating
            - Deleting
            - Deleted
            - Failed
            - Succeeded
            - Updating
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        serviceEndpoint:
          description: Gets or sets the service endpoint.
          type: string
          readOnly: true
        serviceResourceId:
          description: Gets or sets the service resource Id.
          type: string
          readOnly: true
        health:
          description: Gets or sets the fabric health.
          enum:
            - Normal
            - Warning
            - Critical
          type: string
          readOnly: true
          x-ms-enum:
            name: HealthStatus
            modelAsString: true
        healthErrors:
          description: Gets or sets the list of health errors.
          type: array
          items:
            $ref: '#/components/schemas/HealthErrorModel'
          readOnly: true
          x-ms-identifiers: []
        customProperties:
          $ref: '#/components/schemas/FabricModelCustomProperties'
    FabricModelUpdate:
      description: Fabric model for update.
      x-ms-azure-resource: true
      properties:
        tags:
          description: Gets or sets the resource tags.
          maxLength: 15
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/FabricModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    FailoverProtectedItemProperties:
      description: Failover properties of the protected item.
      type: object
      properties:
        protectedItemName:
          description: Gets or sets the protected item name.
          type: string
          readOnly: true
        vmName:
          description: Gets or sets the VM name.
          type: string
          readOnly: true
        testVmName:
          description: Gets or sets the test VM name.
          type: string
          readOnly: true
        recoveryPointId:
          description: Gets or sets the recovery point Id.
          type: string
          readOnly: true
        recoveryPointTime:
          format: date-time
          description: Gets or sets the recovery point time.
          type: string
          readOnly: true
        networkName:
          description: Gets or sets the network name.
          type: string
          readOnly: true
        subnet:
          description: Gets or sets the network subnet.
          type: string
          readOnly: true
    FailoverWorkflowModelCustomProperties:
      description: Failover workflow model custom properties.
      x-ms-discriminator-value: FailoverWorkflowDetails
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        affectedObjectDetails:
          description: Gets or sets any custom properties of the affected object.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        protectedItemDetails:
          description: Gets or sets the failed over protected item details.
          type: array
          items:
            $ref: '#/components/schemas/FailoverProtectedItemProperties'
          readOnly: true
          x-ms-identifiers: []
      type: object
    HealthErrorModel:
      description: Health error model.
      type: object
      properties:
        affectedResourceType:
          description: Gets or sets the type of affected resource type.
          type: string
        affectedResourceCorrelationIds:
          description: "Gets or sets the list of affected resource correlation Ids. This can be used to\r\nuniquely identify the count of items affected by a specific category and severity\r\nas well as count of item affected by an specific issue."
          type: array
          items:
            type: string
        childErrors:
          description: Gets or sets a list of child health errors associated with this error.
          type: array
          items:
            $ref: '#/components/schemas/InnerHealthErrorModel'
          x-ms-identifiers: []
        code:
          description: Gets or sets the error code.
          type: string
          readOnly: true
        healthCategory:
          description: Gets or sets the health category.
          type: string
          readOnly: true
        category:
          description: Gets or sets the error category.
          type: string
          readOnly: true
        severity:
          description: Gets or sets the error severity.
          type: string
          readOnly: true
        source:
          description: Gets or sets the error source.
          type: string
          readOnly: true
        creationTime:
          format: date-time
          description: Gets or sets the error creation time.
          type: string
          readOnly: true
        isCustomerResolvable:
          description: Gets or sets a value indicating whether the error is customer resolvable.
          type: boolean
          readOnly: true
        summary:
          description: Gets or sets the error summary.
          type: string
          readOnly: true
        message:
          description: Gets or sets the error message.
          type: string
          readOnly: true
        causes:
          description: Gets or sets possible causes of the error.
          type: string
          readOnly: true
        recommendation:
          description: Gets or sets recommended action to resolve the error.
          type: string
          readOnly: true
    HyperVMigrateFabricModelCustomProperties:
      description: HyperV migrate fabric model custom properties.
      required:
        - hyperVSiteId
        - migrationSolutionId
      x-ms-discriminator-value: HyperVMigrate
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        hyperVSiteId:
          description: Gets or sets the ARM Id of the HyperV site.
          minLength: 1
          type: string
        fabricResourceId:
          description: Gets or sets the fabric resource Id.
          type: string
          readOnly: true
        fabricContainerId:
          description: Gets or sets the fabric container Id.
          type: string
          readOnly: true
        migrationSolutionId:
          description: Gets or sets the migration solution ARM Id.
          minLength: 1
          type: string
        migrationHubUri:
          description: Gets or sets the migration hub Uri.
          type: string
          readOnly: true
      type: object
    HyperVToAzStackHCIDiskInput:
      description: HyperVToAzStack disk input.
      required:
        - diskFileFormat
        - diskId
        - diskSizeGB
        - isOsDisk
      type: object
      properties:
        diskId:
          description: Gets or sets the disk Id.
          minLength: 1
          type: string
        storageContainerId:
          description: Gets or sets the target storage account ARM Id.
          type: string
        isDynamic:
          description: "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard\r\ndisk."
          type: boolean
        diskSizeGB:
          format: int64
          description: Gets or sets the disk size in GB.
          type: integer
        diskFileFormat:
          description: Gets or sets the type of the virtual hard disk, vhd or vhdx.
          minLength: 1
          type: string
        isOsDisk:
          description: Gets or sets a value indicating whether disk is os disk.
          type: boolean
    HyperVToAzStackHCIEventModelCustomProperties:
      description: "HyperV to  AzStackHCI event model custom properties. This class provides provider specific\r\ndetails for events of type DataContract.HealthEvents.HealthEventType.ProtectedItemHealth and\r\nDataContract.HealthEvents.HealthEventType.AgentHealth."
      x-ms-discriminator-value: HyperVToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        eventSourceFriendlyName:
          description: Gets or sets the friendly name of the source which has raised this health event.
          type: string
          readOnly: true
        protectedItemFriendlyName:
          description: Gets or sets the protected item friendly name.
          type: string
          readOnly: true
        sourceApplianceName:
          description: Gets or sets the source appliance name.
          type: string
          readOnly: true
        targetApplianceName:
          description: Gets or sets the source target name.
          type: string
          readOnly: true
        serverType:
          description: Gets or sets the server type.
          type: string
          readOnly: true
      type: object
    HyperVToAzStackHCINicInput:
      description: HyperVToAzStackHCI NIC properties.
      required:
        - nicId
        - selectionTypeForFailover
        - targetNetworkId
        - testNetworkId
      type: object
      properties:
        nicId:
          description: Gets or sets the NIC Id.
          minLength: 1
          type: string
        networkName:
          description: Gets or sets the network name.
          type: string
          readOnly: true
        targetNetworkId:
          description: Gets or sets the target network Id within AzStackHCI Cluster.
          minLength: 1
          type: string
        testNetworkId:
          description: Gets or sets the target test network Id within AzStackHCI Cluster.
          minLength: 1
          type: string
        selectionTypeForFailover:
          description: Gets or sets the selection type of the NIC.
          enum:
            - NotSelected
            - SelectedByUser
            - SelectedByDefault
            - SelectedByUserOverride
          type: string
          x-ms-enum:
            name: VMNicSelection
            modelAsString: true
    HyperVToAzStackHCIPlannedFailoverModelCustomProperties:
      description: HyperV to AzStackHCI planned failover model custom properties.
      required:
        - shutdownSourceVM
      x-ms-discriminator-value: HyperVToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        shutdownSourceVM:
          description: Gets or sets a value indicating whether VM needs to be shut down.
          type: boolean
      type: object
    HyperVToAzStackHCIPolicyModelCustomProperties:
      description: HyperV To AzStackHCI Policy model custom properties.
      required:
        - appConsistentFrequencyInMinutes
        - crashConsistentFrequencyInMinutes
        - recoveryPointHistoryInMinutes
      x-ms-discriminator-value: HyperVToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        recoveryPointHistoryInMinutes:
          format: int32
          description: "Gets or sets the duration in minutes until which the recovery points need to be\r\nstored."
          type: integer
        crashConsistentFrequencyInMinutes:
          format: int32
          description: Gets or sets the crash consistent snapshot frequency (in minutes).
          type: integer
        appConsistentFrequencyInMinutes:
          format: int32
          description: Gets or sets the app consistent snapshot frequency (in minutes).
          type: integer
      type: object
    HyperVToAzStackHCIProtectedDiskProperties:
      description: HyperVToAzStackHCI protected disk properties.
      type: object
      properties:
        storageContainerId:
          description: Gets or sets the ARM Id of the storage container.
          type: string
          readOnly: true
        storageContainerLocalPath:
          description: Gets or sets the local path of the storage container.
          type: string
          readOnly: true
        sourceDiskId:
          description: Gets or sets the source disk Id.
          type: string
          readOnly: true
        sourceDiskName:
          description: Gets or sets the source disk Name.
          type: string
          readOnly: true
        seedDiskName:
          description: Gets or sets the seed disk name.
          type: string
          readOnly: true
        testMigrateDiskName:
          description: Gets or sets the test failover clone disk.
          type: string
          readOnly: true
        migrateDiskName:
          description: Gets or sets the failover clone disk.
          type: string
          readOnly: true
        isOsDisk:
          description: Gets or sets a value indicating whether the disk is the OS disk.
          type: boolean
          readOnly: true
        capacityInBytes:
          format: int64
          description: Gets or sets the disk capacity in bytes.
          type: integer
          readOnly: true
        isDynamic:
          description: "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard\r\ndisk."
          type: boolean
          readOnly: true
        diskType:
          description: Gets or sets the disk type.
          type: string
          readOnly: true
    HyperVToAzStackHCIProtectedItemModelCustomProperties:
      description: HyperV to AzStackHCI Protected item model custom properties.
      required:
        - customLocationRegion
        - disksToInclude
        - fabricDiscoveryMachineId
        - hyperVGeneration
        - nicsToInclude
        - runAsAccountId
        - sourceDraName
        - storageContainerId
        - targetArcClusterCustomLocationId
        - targetDraName
        - targetHciClusterId
        - targetResourceGroupId
      x-ms-discriminator-value: HyperVToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        activeLocation:
          description: Gets or sets the location of the protected item.
          enum:
            - Primary
            - Recovery
          type: string
          readOnly: true
          x-ms-enum:
            name: ProtectedItemActiveLocation
            modelAsString: true
        targetHciClusterId:
          description: Gets or sets the Target HCI Cluster ARM Id.
          minLength: 1
          type: string
        targetArcClusterCustomLocationId:
          description: Gets or sets the Target Arc Cluster Custom Location ARM Id.
          minLength: 1
          type: string
        targetAzStackHciClusterName:
          description: Gets or sets the Target AzStackHCI cluster name.
          type: string
          readOnly: true
        fabricDiscoveryMachineId:
          description: Gets or sets the ARM Id of the discovered machine.
          minLength: 1
          type: string
        disksToInclude:
          description: Gets or sets the list of disks to replicate.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/HyperVToAzStackHCIDiskInput'
          x-ms-identifiers: []
        nicsToInclude:
          description: Gets or sets the list of VM NIC to replicate.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/HyperVToAzStackHCINicInput'
          x-ms-identifiers: []
        sourceVmName:
          description: Gets or sets the source VM display name.
          type: string
          readOnly: true
        sourceCpuCores:
          format: int32
          description: Gets or sets the source VM CPU cores.
          type: integer
          readOnly: true
        sourceMemoryInMegaBytes:
          format: double
          description: Gets or sets the source VM ram memory size in megabytes.
          type: number
          readOnly: true
        targetVmName:
          description: Gets or sets the target VM display name.
          type: string
        targetResourceGroupId:
          description: Gets or sets the target resource group ARM Id.
          minLength: 1
          type: string
        storageContainerId:
          description: Gets or sets the target storage container ARM Id.
          minLength: 1
          type: string
        hyperVGeneration:
          description: Gets or sets the hypervisor generation of the virtual machine.
          minLength: 1
          type: string
        targetNetworkId:
          description: Gets or sets the target network Id within AzStackHCI Cluster.
          type: string
        testNetworkId:
          description: Gets or sets the target test network Id within AzStackHCI Cluster.
          type: string
        targetCpuCores:
          format: int32
          description: Gets or sets the target CPU cores.
          type: integer
        isDynamicRam:
          description: Gets or sets a value indicating whether memory is dynamical.
          type: boolean
        dynamicMemoryConfig:
          $ref: '#/components/schemas/ProtectedItemDynamicMemoryConfig'
        targetMemoryInMegaBytes:
          format: int32
          description: Gets or sets the target memory in mega-bytes.
          type: integer
        runAsAccountId:
          description: Gets or sets the Run As account Id.
          minLength: 1
          type: string
        sourceDraName:
          description: Gets or sets the source DRA name.
          minLength: 1
          type: string
        targetDraName:
          description: Gets or sets the target DRA name.
          minLength: 1
          type: string
        sourceApplianceName:
          description: Gets or sets the source appliance name.
          type: string
          readOnly: true
        targetApplianceName:
          description: Gets or sets the target appliance name.
          type: string
          readOnly: true
        osType:
          description: Gets or sets the type of the OS.
          type: string
          readOnly: true
        osName:
          description: Gets or sets the name of the OS.
          type: string
          readOnly: true
        firmwareType:
          description: Gets or sets the firmware type.
          type: string
          readOnly: true
        targetLocation:
          description: Gets or sets the target location.
          type: string
          readOnly: true
        customLocationRegion:
          description: Gets or sets the location of Azure Arc HCI custom location resource.
          minLength: 1
          type: string
        failoverRecoveryPointId:
          description: Gets or sets the recovery point Id to which the VM was failed over.
          type: string
          readOnly: true
        lastRecoveryPointReceived:
          format: date-time
          description: Gets or sets the last recovery point received time.
          type: string
          readOnly: true
        lastRecoveryPointId:
          description: Gets or sets the last recovery point Id.
          type: string
          readOnly: true
        initialReplicationProgressPercentage:
          format: int32
          description: "Gets or sets the initial replication progress percentage. This is calculated based on\r\ntotal bytes processed for all disks in the source VM."
          type: integer
          readOnly: true
        resyncProgressPercentage:
          format: int32
          description: "Gets or sets the resync progress percentage. This is calculated based on total bytes\r\nprocessed for all disks in the source VM."
          type: integer
          readOnly: true
        protectedDisks:
          description: Gets or sets the list of protected disks.
          type: array
          items:
            $ref: '#/components/schemas/HyperVToAzStackHCIProtectedDiskProperties'
          readOnly: true
          x-ms-identifiers: []
        protectedNics:
          description: Gets or sets the VM NIC details.
          type: array
          items:
            $ref: '#/components/schemas/HyperVToAzStackHCIProtectedNicProperties'
          readOnly: true
          x-ms-identifiers: []
        targetVmBiosId:
          description: Gets or sets the BIOS Id of the target AzStackHCI VM.
          type: string
          readOnly: true
        lastReplicationUpdateTime:
          format: date-time
          description: Gets or sets the latest timestamp that replication status is updated.
          type: string
          readOnly: true
      type: object
    HyperVToAzStackHCIProtectedNicProperties:
      description: HyperVToAzStackHCI NIC properties.
      type: object
      properties:
        nicId:
          description: Gets or sets the NIC Id.
          type: string
          readOnly: true
        macAddress:
          description: Gets or sets the NIC mac address.
          type: string
          readOnly: true
        networkName:
          description: Gets or sets the network name.
          type: string
          readOnly: true
        targetNetworkId:
          description: Gets or sets the target network Id within AzStackHCI Cluster.
          type: string
          readOnly: true
        testNetworkId:
          description: Gets or sets the target test network Id within AzStackHCI Cluster.
          type: string
          readOnly: true
        selectionTypeForFailover:
          description: Gets or sets the selection type of the NIC.
          enum:
            - NotSelected
            - SelectedByUser
            - SelectedByDefault
            - SelectedByUserOverride
          type: string
          readOnly: true
          x-ms-enum:
            name: VMNicSelection
            modelAsString: true
    HyperVToAzStackHCIRecoveryPointModelCustomProperties:
      description: HyperV to AzStackHCI recovery point model custom properties.
      x-ms-discriminator-value: HyperVToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        diskIds:
          description: Gets or sets the list of the disk Ids.
          type: array
          items:
            type: string
          readOnly: true
      type: object
    HyperVToAzStackHCIReplicationExtensionModelCustomProperties:
      description: HyperV to AzStackHCI Replication extension model custom properties.
      required:
        - azStackHciFabricArmId
        - hyperVFabricArmId
      x-ms-discriminator-value: HyperVToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        hyperVFabricArmId:
          description: Gets or sets the ARM Id of the source HyperV fabric.
          minLength: 1
          type: string
        hyperVSiteId:
          description: Gets or sets the ARM Id of the HyperV site.
          type: string
          readOnly: true
        azStackHciFabricArmId:
          description: Gets or sets the ARM Id of the target AzStackHCI fabric.
          minLength: 1
          type: string
        azStackHciSiteId:
          description: Gets or sets the ARM Id of the AzStackHCI site.
          type: string
          readOnly: true
        storageAccountId:
          description: Gets or sets the storage account Id.
          type: string
        storageAccountSasSecretName:
          description: Gets or sets the Sas Secret of storage account.
          type: string
        asrServiceUri:
          description: Gets or sets the Uri of ASR.
          type: string
          readOnly: true
        rcmServiceUri:
          description: Gets or sets the Uri of Rcm.
          type: string
          readOnly: true
        gatewayServiceUri:
          description: Gets or sets the Uri of Gateway.
          type: string
          readOnly: true
        sourceGatewayServiceId:
          description: Gets or sets the gateway service Id of source.
          type: string
          readOnly: true
        targetGatewayServiceId:
          description: Gets or sets the gateway service Id of target.
          type: string
          readOnly: true
        sourceStorageContainerName:
          description: Gets or sets the source storage container name.
          type: string
          readOnly: true
        targetStorageContainerName:
          description: Gets or sets the target storage container name.
          type: string
          readOnly: true
        resourceLocation:
          description: Gets or sets the resource location.
          type: string
          readOnly: true
        subscriptionId:
          description: Gets or sets the subscription.
          type: string
          readOnly: true
        resourceGroup:
          description: Gets or sets the resource group.
          type: string
          readOnly: true
      type: object
    IdentityModel:
      description: Identity model.
      required:
        - aadAuthority
        - applicationId
        - audience
        - objectId
        - tenantId
      type: object
      properties:
        tenantId:
          description: Gets or sets the tenant Id of the SPN with which Dra communicates to service.
          minLength: 1
          type: string
        applicationId:
          description: "Gets or sets the client/application Id of the SPN with which Dra communicates to\r\nservice."
          minLength: 1
          type: string
        objectId:
          description: Gets or sets the object Id of the SPN with which Dra communicates to service.
          minLength: 1
          type: string
        audience:
          description: Gets or sets the audience of the SPN with which Dra communicates to service.
          minLength: 1
          type: string
        aadAuthority:
          description: Gets or sets the authority of the SPN with which Dra communicates to service.
          minLength: 1
          type: string
    InnerHealthErrorModel:
      description: Inner health error model.
      type: object
      properties:
        code:
          description: Gets or sets the error code.
          type: string
          readOnly: true
        healthCategory:
          description: Gets or sets the health category.
          type: string
          readOnly: true
        category:
          description: Gets or sets the error category.
          type: string
          readOnly: true
        severity:
          description: Gets or sets the error severity.
          type: string
          readOnly: true
        source:
          description: Gets or sets the error source.
          type: string
          readOnly: true
        creationTime:
          format: date-time
          description: Gets or sets the error creation time.
          type: string
          readOnly: true
        isCustomerResolvable:
          description: Gets or sets a value indicating whether the error is customer resolvable.
          type: boolean
          readOnly: true
        summary:
          description: Gets or sets the error summary.
          type: string
          readOnly: true
        message:
          description: Gets or sets the error message.
          type: string
          readOnly: true
        causes:
          description: Gets or sets possible causes of the error.
          type: string
          readOnly: true
        recommendation:
          description: Gets or sets recommended action to resolve the error.
          type: string
          readOnly: true
    OperationModel:
      description: Operation model.
      type: object
      properties:
        name:
          description: Gets or sets the name of the operation.
          type: string
        isDataAction:
          description: "Gets or sets a value indicating whether the action is specific to data plane or\r\ncontrol plane."
          type: boolean
        origin:
          description: Gets or sets the executor of the operation.
          type: string
        display:
          $ref: '#/components/schemas/OperationModelProperties'
    OperationModelCollection:
      description: Available operations of the service.
      type: object
      properties:
        value:
          description: Gets or sets the list of operations.
          type: array
          items:
            $ref: '#/components/schemas/OperationModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    OperationModelProperties:
      description: Operation model properties.
      type: object
      properties:
        provider:
          description: Gets or sets the resource provider name.
          type: string
        resource:
          description: Gets or sets resource name.
          type: string
        operation:
          description: Gets or sets the operation.
          type: string
        description:
          description: Gets or sets the description.
          type: string
    OperationStatus:
      description: Defines the operation status.
      type: object
      properties:
        id:
          description: Gets or sets the Id.
          type: string
        name:
          description: Gets or sets the operation name.
          type: string
        status:
          description: "Gets or sets the status of the operation. ARM expects the terminal status to be one of\r\nSucceeded/ Failed/ Canceled. All other values imply that the operation is still running."
          type: string
        startTime:
          description: Gets or sets the start time.
          type: string
        endTime:
          description: Gets or sets the end time.
          type: string
    PlannedFailoverModel:
      description: Planned failover model.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/PlannedFailoverModelProperties'
      type: object
    PlannedFailoverModelCustomProperties:
      description: Planned failover model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    PlannedFailoverModelProperties:
      description: Planned failover model properties.
      required:
        - customProperties
      type: object
      properties:
        customProperties:
          $ref: '#/components/schemas/PlannedFailoverModelCustomProperties'
    PolicyModel:
      description: Policy model.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/PolicyModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    PolicyModelCollection:
      description: Policy model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of policies.
          type: array
          items:
            $ref: '#/components/schemas/PolicyModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    PolicyModelCustomProperties:
      description: Policy model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    PolicyModelProperties:
      description: Policy model properties.
      required:
        - customProperties
      type: object
      properties:
        provisioningState:
          description: Gets or sets the provisioning state of the policy.
          enum:
            - Canceled
            - Creating
            - Deleting
            - Deleted
            - Failed
            - Succeeded
            - Updating
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        customProperties:
          $ref: '#/components/schemas/PolicyModelCustomProperties'
    ProtectedItemDynamicMemoryConfig:
      description: Protected item dynamic memory config.
      required:
        - maximumMemoryInMegaBytes
        - minimumMemoryInMegaBytes
        - targetMemoryBufferPercentage
      type: object
      properties:
        maximumMemoryInMegaBytes:
          format: int64
          description: Gets or sets maximum memory in MB.
          type: integer
        minimumMemoryInMegaBytes:
          format: int64
          description: Gets or sets minimum memory in MB.
          type: integer
        targetMemoryBufferPercentage:
          format: int32
          description: Gets or sets target memory buffer in %.
          type: integer
    ProtectedItemJobProperties:
      description: Protected item job properties.
      type: object
      properties:
        scenarioName:
          description: Gets or sets protection scenario name.
          type: string
          readOnly: true
        id:
          description: Gets or sets workflow Id.
          type: string
          readOnly: true
        name:
          description: Gets or sets workflow name.
          type: string
          readOnly: true
        displayName:
          description: Gets or sets the workflow friendly display name.
          type: string
          readOnly: true
        state:
          description: Gets or sets workflow state.
          type: string
          readOnly: true
        startTime:
          format: date-time
          description: Gets or sets start time of the workflow.
          type: string
          readOnly: true
        endTime:
          format: date-time
          description: Gets or sets end time of the workflow.
          type: string
          readOnly: true
    ProtectedItemModel:
      description: Protected item model.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/ProtectedItemModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    ProtectedItemModelCollection:
      description: Protected item model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of protected items.
          type: array
          items:
            $ref: '#/components/schemas/ProtectedItemModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    ProtectedItemModelCustomProperties:
      description: Protected item model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    ProtectedItemModelProperties:
      description: Protected item model properties.
      required:
        - customProperties
        - policyName
        - replicationExtensionName
      type: object
      properties:
        policyName:
          description: Gets or sets the policy name.
          minLength: 1
          type: string
        replicationExtensionName:
          description: Gets or sets the replication extension name.
          minLength: 1
          type: string
        correlationId:
          description: Gets or sets the protected item correlation Id.
          type: string
          readOnly: true
        provisioningState:
          description: Gets or sets the provisioning state of the Dra.
          enum:
            - Canceled
            - Creating
            - Deleting
            - Deleted
            - Failed
            - Succeeded
            - Updating
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        protectionState:
          description: Gets or sets the protection state.
          enum:
            - UnprotectedStatesBegin
            - EnablingProtection
            - EnablingFailed
            - DisablingProtection
            - MarkedForDeletion
            - DisablingFailed
            - UnprotectedStatesEnd
            - InitialReplicationStatesBegin
            - InitialReplicationInProgress
            - InitialReplicationCompletedOnPrimary
            - InitialReplicationCompletedOnRecovery
            - InitialReplicationFailed
            - InitialReplicationStatesEnd
            - ProtectedStatesBegin
            - Protected
            - ProtectedStatesEnd
            - PlannedFailoverTransitionStatesBegin
            - PlannedFailoverInitiated
            - PlannedFailoverCompleting
            - PlannedFailoverCompleted
            - PlannedFailoverFailed
            - PlannedFailoverCompletionFailed
            - PlannedFailoverTransitionStatesEnd
            - UnplannedFailoverTransitionStatesBegin
            - UnplannedFailoverInitiated
            - UnplannedFailoverCompleting
            - UnplannedFailoverCompleted
            - UnplannedFailoverFailed
            - UnplannedFailoverCompletionFailed
            - UnplannedFailoverTransitionStatesEnd
            - CommitFailoverStatesBegin
            - CommitFailoverInProgressOnPrimary
            - CommitFailoverInProgressOnRecovery
            - CommitFailoverCompleted
            - CommitFailoverFailedOnPrimary
            - CommitFailoverFailedOnRecovery
            - CommitFailoverStatesEnd
            - CancelFailoverStatesBegin
            - CancelFailoverInProgressOnPrimary
            - CancelFailoverInProgressOnRecovery
            - CancelFailoverFailedOnPrimary
            - CancelFailoverFailedOnRecovery
            - CancelFailoverStatesEnd
            - ChangeRecoveryPointStatesBegin
            - ChangeRecoveryPointInitiated
            - ChangeRecoveryPointCompleted
            - ChangeRecoveryPointFailed
            - ChangeRecoveryPointStatesEnd
            - ReprotectStatesBegin
            - ReprotectInitiated
            - ReprotectFailed
            - ReprotectStatesEnd
          type: string
          readOnly: true
          x-ms-enum:
            name: ProtectionState
            modelAsString: true
        protectionStateDescription:
          description: Gets or sets the protection state description.
          type: string
          readOnly: true
        testFailoverState:
          description: Gets or sets the test failover state.
          enum:
            - None
            - TestFailoverInitiated
            - TestFailoverCompleting
            - TestFailoverCompleted
            - TestFailoverFailed
            - TestFailoverCompletionFailed
            - TestFailoverCleanupInitiated
            - TestFailoverCleanupCompleting
            - MarkedForDeletion
          type: string
          readOnly: true
          x-ms-enum:
            name: TestFailoverState
            modelAsString: true
        testFailoverStateDescription:
          description: Gets or sets the Test failover state description.
          type: string
          readOnly: true
        resynchronizationState:
          description: Gets or sets the resynchronization state.
          enum:
            - None
            - ResynchronizationInitiated
            - ResynchronizationCompleted
            - ResynchronizationFailed
          type: string
          readOnly: true
          x-ms-enum:
            name: ResynchronizationState
            modelAsString: true
        fabricObjectId:
          description: Gets or sets the fabric object Id.
          type: string
          readOnly: true
        fabricObjectName:
          description: Gets or sets the fabric object name.
          type: string
          readOnly: true
        sourceFabricProviderId:
          description: Gets or sets the source fabric provider Id.
          type: string
          readOnly: true
        targetFabricProviderId:
          description: Gets or sets the target fabric provider Id.
          type: string
          readOnly: true
        fabricId:
          description: Gets or sets the fabric Id.
          type: string
          readOnly: true
        targetFabricId:
          description: Gets or sets the target fabric Id.
          type: string
          readOnly: true
        draId:
          description: Gets or sets the DRA Id.
          type: string
          readOnly: true
        targetDraId:
          description: Gets or sets the target DRA Id.
          type: string
          readOnly: true
        resyncRequired:
          description: Gets or sets a value indicating whether resynchronization is required or not.
          type: boolean
          readOnly: true
        lastSuccessfulPlannedFailoverTime:
          format: date-time
          description: Gets or sets the Last successful planned failover time.
          type: string
          readOnly: true
        lastSuccessfulUnplannedFailoverTime:
          format: date-time
          description: Gets or sets the Last successful unplanned failover time.
          type: string
          readOnly: true
        lastSuccessfulTestFailoverTime:
          format: date-time
          description: Gets or sets the Last successful test failover time.
          type: string
          readOnly: true
        currentJob:
          allOf:
            - $ref: '#/components/schemas/ProtectedItemJobProperties'
          readOnly: true
        allowedJobs:
          description: Gets or sets the allowed scenarios on the protected item.
          type: array
          items:
            type: string
          readOnly: true
        lastFailedEnableProtectionJob:
          allOf:
            - $ref: '#/components/schemas/ProtectedItemJobProperties'
          readOnly: true
        lastFailedPlannedFailoverJob:
          allOf:
            - $ref: '#/components/schemas/ProtectedItemJobProperties'
          readOnly: true
        lastTestFailoverJob:
          allOf:
            - $ref: '#/components/schemas/ProtectedItemJobProperties'
          readOnly: true
        replicationHealth:
          description: Gets or sets protected item replication health.
          enum:
            - Normal
            - Warning
            - Critical
          type: string
          readOnly: true
          x-ms-enum:
            name: HealthStatus
            modelAsString: true
        healthErrors:
          description: Gets or sets the list of health errors.
          type: array
          items:
            $ref: '#/components/schemas/HealthErrorModel'
          readOnly: true
          x-ms-identifiers: []
        customProperties:
          $ref: '#/components/schemas/ProtectedItemModelCustomProperties'
    RecoveryPointModel:
      description: Recovery point model.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/RecoveryPointModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    RecoveryPointModelCollection:
      description: Recovery point model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of recovery points.
          type: array
          items:
            $ref: '#/components/schemas/RecoveryPointModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    RecoveryPointModelCustomProperties:
      description: Recovery point model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    RecoveryPointModelProperties:
      description: Recovery point model properties.
      required:
        - customProperties
        - recoveryPointTime
        - recoveryPointType
      type: object
      properties:
        recoveryPointTime:
          format: date-time
          description: Gets or sets the recovery point time.
          type: string
        recoveryPointType:
          description: Gets or sets the recovery point type.
          enum:
            - ApplicationConsistent
            - CrashConsistent
          type: string
          x-ms-enum:
            name: RecoveryPointType
            modelAsString: true
        customProperties:
          $ref: '#/components/schemas/RecoveryPointModelCustomProperties'
    ReplicationExtensionModel:
      description: Replication extension model.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/ReplicationExtensionModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    ReplicationExtensionModelCollection:
      description: Replication extension model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of replication extensions.
          type: array
          items:
            $ref: '#/components/schemas/ReplicationExtensionModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    ReplicationExtensionModelCustomProperties:
      description: Replication extension model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
      discriminator:
        propertyName: instanceType
    ReplicationExtensionModelProperties:
      description: Replication extension model properties.
      required:
        - customProperties
      type: object
      properties:
        provisioningState:
          description: Gets or sets the provisioning state of the replication extension.
          enum:
            - Canceled
            - Creating
            - Deleting
            - Deleted
            - Failed
            - Succeeded
            - Updating
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        customProperties:
          $ref: '#/components/schemas/ReplicationExtensionModelCustomProperties'
    StorageContainerProperties:
      description: Storage container properties.
      required:
        - clusterSharedVolumePath
        - name
      type: object
      properties:
        name:
          description: Gets or sets the Name.
          minLength: 1
          type: string
        clusterSharedVolumePath:
          description: Gets or sets the ClusterSharedVolumePath.
          minLength: 1
          type: string
    SystemDataModel:
      description: System data required to be defined for Azure resources.
      type: object
      properties:
        createdBy:
          description: Gets or sets identity that created the resource.
          type: string
        createdByType:
          description: "Gets or sets the type of identity that created the resource: user, application,\r\nmanagedIdentity."
          type: string
        createdAt:
          format: date-time
          description: Gets or sets the timestamp of resource creation (UTC).
          type: string
        lastModifiedBy:
          description: Gets or sets the identity that last modified the resource.
          type: string
        lastModifiedByType:
          description: "Gets or sets the type of identity that last modified the resource: user, application,\r\nmanagedIdentity."
          type: string
        lastModifiedAt:
          format: date-time
          description: Gets or sets the timestamp of resource last modification (UTC).
          type: string
    TaskModel:
      description: Task model.
      type: object
      properties:
        taskName:
          description: Gets or sets the task name.
          type: string
          readOnly: true
        state:
          description: Gets or sets the task state.
          enum:
            - Pending
            - Started
            - Succeeded
            - Failed
            - Cancelled
            - Skipped
          type: string
          readOnly: true
          x-ms-enum:
            name: TaskState
            modelAsString: true
        startTime:
          format: date-time
          description: Gets or sets the start time.
          type: string
          readOnly: true
        endTime:
          format: date-time
          description: Gets or sets the end time.
          type: string
          readOnly: true
        customProperties:
          $ref: '#/components/schemas/TaskModelCustomProperties'
        childrenWorkflows:
          description: Gets or sets the list of children workflow models.
          type: array
          items:
            $ref: '#/components/schemas/WorkflowModel'
          x-ms-identifiers: []
    TaskModelCustomProperties:
      description: Task model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
    TestFailoverCleanupWorkflowModelCustomProperties:
      description: Test failover cleanup workflow model custom properties.
      x-ms-discriminator-value: TestFailoverCleanupWorkflowDetails
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        affectedObjectDetails:
          description: Gets or sets any custom properties of the affected object.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        comments:
          description: Gets or sets the test failover cleanup comments.
          type: string
          readOnly: true
      type: object
    TestFailoverWorkflowModelCustomProperties:
      description: Test failover workflow model custom properties.
      x-ms-discriminator-value: TestFailoverWorkflowDetails
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        affectedObjectDetails:
          description: Gets or sets any custom properties of the affected object.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        protectedItemDetails:
          description: Gets or sets the test VM details.
          type: array
          items:
            $ref: '#/components/schemas/FailoverProtectedItemProperties'
          readOnly: true
          x-ms-identifiers: []
      type: object
    VMwareDraModelCustomProperties:
      description: VMware DRA model custom properties.
      required:
        - biosId
        - marsAuthenticationIdentity
      x-ms-discriminator-value: VMware
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        biosId:
          description: Gets or sets the BIOS Id of the DRA machine.
          minLength: 1
          type: string
        marsAuthenticationIdentity:
          $ref: '#/components/schemas/IdentityModel'
      type: object
    VMwareMigrateFabricModelCustomProperties:
      description: VMware migrate fabric model custom properties.
      required:
        - migrationSolutionId
        - vmwareSiteId
      x-ms-discriminator-value: VMwareMigrate
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        vmwareSiteId:
          description: Gets or sets the ARM Id of the VMware site.
          minLength: 1
          type: string
        migrationSolutionId:
          description: Gets or sets the ARM Id of the migration solution.
          minLength: 1
          type: string
      type: object
    VMwareToAzStackHCIDiskInput:
      description: VMwareToAzStack disk input.
      required:
        - diskFileFormat
        - diskId
        - diskSizeGB
        - isOsDisk
      type: object
      properties:
        diskId:
          description: Gets or sets the disk Id.
          minLength: 1
          type: string
        storageContainerId:
          description: Gets or sets the target storage account ARM Id.
          type: string
        isDynamic:
          description: "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard\r\ndisk."
          type: boolean
        diskSizeGB:
          format: int64
          description: Gets or sets the disk size in GB.
          type: integer
        diskFileFormat:
          description: Gets or sets the type of the virtual hard disk, vhd or vhdx.
          minLength: 1
          type: string
        isOsDisk:
          description: Gets or sets a value indicating whether disk is os disk.
          type: boolean
    VMwareToAzStackHCINicInput:
      description: VMwareToAzStackHCI NIC properties.
      required:
        - label
        - nicId
        - selectionTypeForFailover
        - targetNetworkId
        - testNetworkId
      type: object
      properties:
        nicId:
          description: Gets or sets the NIC Id.
          minLength: 1
          type: string
        label:
          description: Gets or sets the NIC label.
          minLength: 1
          type: string
        networkName:
          description: Gets or sets the network name.
          type: string
          readOnly: true
        targetNetworkId:
          description: Gets or sets the target network Id within AzStackHCI Cluster.
          minLength: 1
          type: string
        testNetworkId:
          description: Gets or sets the target test network Id within AzStackHCI Cluster.
          minLength: 1
          type: string
        selectionTypeForFailover:
          description: Gets or sets the selection type of the NIC.
          enum:
            - NotSelected
            - SelectedByUser
            - SelectedByDefault
            - SelectedByUserOverride
          type: string
          x-ms-enum:
            name: VMNicSelection
            modelAsString: true
    VMwareToAzStackHCIPlannedFailoverModelCustomProperties:
      description: VMware to AzStackHCI planned failover model custom properties.
      required:
        - shutdownSourceVM
      x-ms-discriminator-value: VMwareToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        shutdownSourceVM:
          description: Gets or sets a value indicating whether VM needs to be shut down.
          type: boolean
      type: object
    VMwareToAzStackHCIPolicyModelCustomProperties:
      description: VMware To AzStackHCI Policy model custom properties.
      required:
        - appConsistentFrequencyInMinutes
        - crashConsistentFrequencyInMinutes
        - recoveryPointHistoryInMinutes
      x-ms-discriminator-value: VMwareToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        recoveryPointHistoryInMinutes:
          format: int32
          description: "Gets or sets the duration in minutes until which the recovery points need to be\r\nstored."
          type: integer
        crashConsistentFrequencyInMinutes:
          format: int32
          description: Gets or sets the crash consistent snapshot frequency (in minutes).
          type: integer
        appConsistentFrequencyInMinutes:
          format: int32
          description: Gets or sets the app consistent snapshot frequency (in minutes).
          type: integer
      type: object
    VMwareToAzStackHCIProtectedDiskProperties:
      description: VMwareToAzStackHCI protected disk properties.
      type: object
      properties:
        storageContainerId:
          description: Gets or sets the ARM Id of the storage container.
          type: string
          readOnly: true
        storageContainerLocalPath:
          description: Gets or sets the local path of the storage container.
          type: string
          readOnly: true
        sourceDiskId:
          description: Gets or sets the source disk Id.
          type: string
          readOnly: true
        sourceDiskName:
          description: Gets or sets the source disk Name.
          type: string
          readOnly: true
        seedDiskName:
          description: Gets or sets the seed disk name.
          type: string
          readOnly: true
        testMigrateDiskName:
          description: Gets or sets the test failover clone disk.
          type: string
          readOnly: true
        migrateDiskName:
          description: Gets or sets the failover clone disk.
          type: string
          readOnly: true
        isOsDisk:
          description: Gets or sets a value indicating whether the disk is the OS disk.
          type: boolean
          readOnly: true
        capacityInBytes:
          format: int64
          description: Gets or sets the disk capacity in bytes.
          type: integer
          readOnly: true
        isDynamic:
          description: "Gets or sets a value indicating whether dynamic sizing is enabled on the virtual hard\r\ndisk."
          type: boolean
          readOnly: true
        diskType:
          description: Gets or sets the disk type.
          type: string
          readOnly: true
    VMwareToAzStackHCIProtectedItemModelCustomProperties:
      description: VMware to AzStackHCI Protected item model custom properties.
      required:
        - customLocationRegion
        - disksToInclude
        - fabricDiscoveryMachineId
        - hyperVGeneration
        - nicsToInclude
        - runAsAccountId
        - sourceDraName
        - storageContainerId
        - targetArcClusterCustomLocationId
        - targetDraName
        - targetHciClusterId
        - targetResourceGroupId
      x-ms-discriminator-value: VMwareToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        activeLocation:
          description: Gets or sets the location of the protected item.
          enum:
            - Primary
            - Recovery
          type: string
          readOnly: true
          x-ms-enum:
            name: ProtectedItemActiveLocation
            modelAsString: true
        targetHciClusterId:
          description: Gets or sets the Target HCI Cluster ARM Id.
          minLength: 1
          type: string
        targetArcClusterCustomLocationId:
          description: Gets or sets the Target Arc Cluster Custom Location ARM Id.
          minLength: 1
          type: string
        targetAzStackHciClusterName:
          description: Gets or sets the Target AzStackHCI cluster name.
          type: string
          readOnly: true
        storageContainerId:
          description: Gets or sets the target storage container ARM Id.
          minLength: 1
          type: string
        targetResourceGroupId:
          description: Gets or sets the target resource group ARM Id.
          minLength: 1
          type: string
        targetLocation:
          description: Gets or sets the target location.
          type: string
          readOnly: true
        customLocationRegion:
          description: Gets or sets the location of Azure Arc HCI custom location resource.
          minLength: 1
          type: string
        disksToInclude:
          description: Gets or sets the list of disks to replicate.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/VMwareToAzStackHCIDiskInput'
          x-ms-identifiers: []
        nicsToInclude:
          description: Gets or sets the list of VM NIC to replicate.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/VMwareToAzStackHCINicInput'
          x-ms-identifiers: []
        protectedDisks:
          description: Gets or sets the list of protected disks.
          type: array
          items:
            $ref: '#/components/schemas/VMwareToAzStackHCIProtectedDiskProperties'
          readOnly: true
          x-ms-identifiers: []
        protectedNics:
          description: Gets or sets the VM NIC details.
          type: array
          items:
            $ref: '#/components/schemas/VMwareToAzStackHCIProtectedNicProperties'
          readOnly: true
          x-ms-identifiers: []
        targetVmBiosId:
          description: Gets or sets the BIOS Id of the target AzStackHCI VM.
          type: string
          readOnly: true
        targetVmName:
          description: Gets or sets the target VM display name.
          type: string
        hyperVGeneration:
          description: Gets or sets the hypervisor generation of the virtual machine possible values are 1,2.
          minLength: 1
          type: string
        targetNetworkId:
          description: Gets or sets the target network Id within AzStackHCI Cluster.
          type: string
        testNetworkId:
          description: Gets or sets the target test network Id within AzStackHCI Cluster.
          type: string
        targetCpuCores:
          format: int32
          description: Gets or sets the target CPU cores.
          type: integer
        isDynamicRam:
          description: Gets or sets a value indicating whether memory is dynamical.
          type: boolean
        dynamicMemoryConfig:
          $ref: '#/components/schemas/ProtectedItemDynamicMemoryConfig'
        targetMemoryInMegaBytes:
          format: int32
          description: Gets or sets the target memory in mega-bytes.
          type: integer
        osType:
          description: Gets or sets the type of the OS.
          type: string
          readOnly: true
        osName:
          description: Gets or sets the name of the OS.
          type: string
          readOnly: true
        firmwareType:
          description: Gets or sets the firmware type.
          type: string
          readOnly: true
        fabricDiscoveryMachineId:
          description: Gets or sets the ARM Id of the discovered machine.
          minLength: 1
          type: string
        sourceVmName:
          description: Gets or sets the source VM display name.
          type: string
          readOnly: true
        sourceCpuCores:
          format: int32
          description: Gets or sets the source VM CPU cores.
          type: integer
          readOnly: true
        sourceMemoryInMegaBytes:
          format: double
          description: Gets or sets the source VM ram memory size in megabytes.
          type: number
          readOnly: true
        runAsAccountId:
          description: Gets or sets the run as account Id.
          minLength: 1
          type: string
        sourceDraName:
          description: Gets or sets the source DRA name.
          minLength: 1
          type: string
        targetDraName:
          description: Gets or sets the target DRA name.
          minLength: 1
          type: string
        sourceApplianceName:
          description: Gets or sets the source appliance name.
          type: string
          readOnly: true
        targetApplianceName:
          description: Gets or sets the target appliance name.
          type: string
          readOnly: true
        failoverRecoveryPointId:
          description: Gets or sets the recovery point Id to which the VM was failed over.
          type: string
          readOnly: true
        lastRecoveryPointReceived:
          format: date-time
          description: Gets or sets the last recovery point received time.
          type: string
          readOnly: true
        lastRecoveryPointId:
          description: Gets or sets the last recovery point Id.
          type: string
          readOnly: true
        initialReplicationProgressPercentage:
          format: int32
          description: "Gets or sets the initial replication progress percentage. This is calculated based on\r\ntotal bytes processed for all disks in the source VM."
          type: integer
          readOnly: true
        migrationProgressPercentage:
          format: int32
          description: Gets or sets the migration progress percentage.
          type: integer
          readOnly: true
        resumeProgressPercentage:
          format: int32
          description: Gets or sets the resume progress percentage.
          type: integer
          readOnly: true
        resyncProgressPercentage:
          format: int32
          description: "Gets or sets the resync progress percentage. This is calculated based on total bytes\r\nprocessed for all disks in the source VM."
          type: integer
          readOnly: true
        resyncRetryCount:
          format: int64
          description: Gets or sets the resync retry count.
          type: integer
          readOnly: true
        resyncRequired:
          description: Gets or sets a value indicating whether resync is required.
          type: boolean
          readOnly: true
        resyncState:
          description: Gets or sets the resync state.
          enum:
            - None
            - PreparedForResynchronization
            - StartedResynchronization
          type: string
          readOnly: true
          x-ms-enum:
            name: VMwareToAzureMigrateResyncState
            modelAsString: true
        performAutoResync:
          description: Gets or sets a value indicating whether auto resync is to be done.
          type: boolean
        resumeRetryCount:
          format: int64
          description: Gets or sets the resume retry count.
          type: integer
          readOnly: true
        lastReplicationUpdateTime:
          format: date-time
          description: Gets or sets the latest timestamp that replication status is updated.
          type: string
          readOnly: true
      type: object
    VMwareToAzStackHCIProtectedNicProperties:
      description: VMwareToAzStackHCI NIC properties.
      type: object
      properties:
        nicId:
          description: Gets or sets the NIC Id.
          type: string
          readOnly: true
        macAddress:
          description: Gets or sets the NIC mac address.
          type: string
          readOnly: true
        label:
          description: Gets or sets the NIC label.
          type: string
          readOnly: true
        isPrimaryNic:
          description: Gets or sets a value indicating whether this is the primary NIC.
          type: boolean
        networkName:
          description: Gets or sets the network name.
          type: string
          readOnly: true
        targetNetworkId:
          description: Gets or sets the target network Id within AzStackHCI Cluster.
          type: string
          readOnly: true
        testNetworkId:
          description: Gets or sets the target test network Id within AzStackHCI Cluster.
          type: string
          readOnly: true
        selectionTypeForFailover:
          description: Gets or sets the selection type of the NIC.
          enum:
            - NotSelected
            - SelectedByUser
            - SelectedByDefault
            - SelectedByUserOverride
          type: string
          readOnly: true
          x-ms-enum:
            name: VMNicSelection
            modelAsString: true
    VMwareToAzStackHCIReplicationExtensionModelCustomProperties:
      description: VMware to AzStackHCI Replication extension model custom properties.
      required:
        - azStackHciFabricArmId
        - vmwareFabricArmId
      x-ms-discriminator-value: VMwareToAzStackHCI
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        vmwareFabricArmId:
          description: Gets or sets the ARM Id of the source VMware fabric.
          minLength: 1
          type: string
        vmwareSiteId:
          description: Gets or sets the ARM Id of the VMware site.
          type: string
          readOnly: true
        azStackHciFabricArmId:
          description: Gets or sets the ARM Id of the target AzStackHCI fabric.
          minLength: 1
          type: string
        azStackHciSiteId:
          description: Gets or sets the ARM Id of the AzStackHCI site.
          type: string
          readOnly: true
        storageAccountId:
          description: Gets or sets the storage account Id.
          type: string
        storageAccountSasSecretName:
          description: Gets or sets the Sas Secret of storage account.
          type: string
        asrServiceUri:
          description: Gets or sets the Uri of ASR.
          type: string
          readOnly: true
        rcmServiceUri:
          description: Gets or sets the Uri of Rcm.
          type: string
          readOnly: true
        gatewayServiceUri:
          description: Gets or sets the Uri of Gateway.
          type: string
          readOnly: true
        sourceGatewayServiceId:
          description: Gets or sets the gateway service Id of source.
          type: string
          readOnly: true
        targetGatewayServiceId:
          description: Gets or sets the gateway service Id of target.
          type: string
          readOnly: true
        sourceStorageContainerName:
          description: Gets or sets the source storage container name.
          type: string
          readOnly: true
        targetStorageContainerName:
          description: Gets or sets the target storage container name.
          type: string
          readOnly: true
        resourceLocation:
          description: Gets or sets the resource location.
          type: string
          readOnly: true
        subscriptionId:
          description: Gets or sets the subscription.
          type: string
          readOnly: true
        resourceGroup:
          description: Gets or sets the resource group.
          type: string
          readOnly: true
      type: object
    VaultModel:
      description: Vault model.
      required:
        - location
      x-ms-azure-resource: true
      properties:
        location:
          description: Gets or sets the location of the vault.
          minLength: 1
          type: string
          x-ms-mutability:
            - create
            - read
        tags:
          description: Gets or sets the resource tags.
          maxLength: 15
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/VaultModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    VaultModelCollection:
      description: Vault model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of vaults.
          type: array
          items:
            $ref: '#/components/schemas/VaultModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    VaultModelProperties:
      description: Vault properties.
      type: object
      properties:
        provisioningState:
          description: Gets or sets the provisioning state of the vault.
          enum:
            - Canceled
            - Creating
            - Deleting
            - Deleted
            - Failed
            - Succeeded
            - Updating
          type: string
          readOnly: true
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        serviceResourceId:
          description: Gets or sets the service resource Id.
          type: string
          readOnly: true
        vaultType:
          description: Gets or sets the type of vault.
          enum:
            - DisasterRecovery
            - Migrate
          type: string
          x-ms-enum:
            name: ReplicationVaultType
            modelAsString: true
    VaultModelUpdate:
      description: Vault model for update.
      x-ms-azure-resource: true
      properties:
        tags:
          description: Gets or sets the resource tags.
          maxLength: 15
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/VaultModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    WorkflowModel:
      description: Workflow model.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/WorkflowModelProperties'
        id:
          description: Gets or sets the Id of the resource.
          type: string
          readOnly: true
        name:
          description: Gets or sets the name of the resource.
          type: string
          readOnly: true
        type:
          description: Gets or sets the type of the resource.
          type: string
          readOnly: true
        systemData:
          allOf:
            - $ref: '#/components/schemas/SystemDataModel'
          readOnly: true
      type: object
    WorkflowModelCollection:
      description: Workflow model collection.
      type: object
      properties:
        value:
          description: Gets or sets the list of workflows.
          type: array
          items:
            $ref: '#/components/schemas/WorkflowModel'
          x-ms-identifiers: []
        nextLink:
          description: Gets or sets the value of next link.
          type: string
    WorkflowModelCustomProperties:
      description: Workflow model custom properties.
      required:
        - instanceType
      type: object
      properties:
        instanceType:
          description: Gets or sets the instance type.
          minLength: 1
          type: string
        affectedObjectDetails:
          description: Gets or sets any custom properties of the affected object.
          type: object
          additionalProperties:
            type: string
          readOnly: true
      discriminator:
        propertyName: instanceType
    WorkflowModelProperties:
      description: Workflow model properties.
      required:
        - customProperties
      type: object
      properties:
        displayName:
          description: Gets or sets the friendly display name.
          type: string
          readOnly: true
        state:
          description: Gets or sets the workflow state.
          enum:
            - Pending
            - Started
            - Cancelling
            - Succeeded
            - Failed
            - Cancelled
            - CompletedWithInformation
            - CompletedWithWarnings
            - CompletedWithErrors
          type: string
          readOnly: true
          x-ms-enum:
            name: WorkflowState
            modelAsString: true
        startTime:
          format: date-time
          description: Gets or sets the start time.
          type: string
          readOnly: true
        endTime:
          format: date-time
          description: Gets or sets the end time.
          type: string
          readOnly: true
        objectId:
          description: Gets or sets the affected object Id.
          type: string
          readOnly: true
        objectName:
          description: Gets or sets the affected object name.
          type: string
          readOnly: true
        objectInternalId:
          description: Gets or sets the affected object internal Id.
          type: string
          readOnly: true
        objectInternalName:
          description: Gets or sets the affected object internal name.
          type: string
          readOnly: true
        objectType:
          description: Gets or sets the object type.
          enum:
            - AvsDiskPool
            - Dra
            - Fabric
            - Policy
            - ProtectedItem
            - RecoveryPlan
            - ReplicationExtension
            - Vault
          type: string
          readOnly: true
          x-ms-enum:
            name: WorkflowObjectType
            modelAsString: true
        replicationProviderId:
          description: Gets or sets the replication provider.
          type: string
          readOnly: true
        sourceFabricProviderId:
          description: Gets or sets the source fabric provider.
          type: string
          readOnly: true
        targetFabricProviderId:
          description: Gets or sets the target fabric provider.
          type: string
          readOnly: true
        allowedActions:
          description: Gets or sets the list of allowed actions on the workflow.
          type: array
          items:
            type: string
          readOnly: true
        activityId:
          description: Gets or sets the workflow activity id.
          type: string
          readOnly: true
        tasks:
          description: Gets or sets the list of tasks.
          type: array
          items:
            $ref: '#/components/schemas/TaskModel'
          readOnly: true
          x-ms-identifiers: []
        errors:
          description: Gets or sets the list of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorModel'
          readOnly: true
          x-ms-identifiers: []
        customProperties:
          $ref: '#/components/schemas/WorkflowModelCustomProperties'
  x-stackQL-resources:
    dra:
      id: azure.data_replication.dra
      name: dra
      title: dra
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1fabricAgents~1{fabricAgentName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1fabricAgents~1{fabricAgentName}~1?api-version=2021-02-16-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1fabricAgents~1{fabricAgentName}~1?api-version=2021-02-16-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1fabricAgents~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dra/methods/get'
          - $ref: '#/components/x-stackQL-resources/dra/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dra/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dra/methods/delete'
    dra_operation_status:
      id: azure.data_replication.dra_operation_status
      name: dra_operation_status
      title: dra_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1fabricAgents~1{fabricAgentName}~1operations~1{operationId}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dra_operation_status/methods/get'
        insert: []
        update: []
        delete: []
    email_configuration:
      id: azure.data_replication.email_configuration
      name: email_configuration
      title: email_configuration
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1alertSettings~1{emailConfigurationName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1alertSettings~1{emailConfigurationName}~1?api-version=2021-02-16-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1alertSettings~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/email_configuration/methods/get'
          - $ref: '#/components/x-stackQL-resources/email_configuration/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/email_configuration/methods/create'
        update: []
        delete: []
    event:
      id: azure.data_replication.event
      name: event
      title: event
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1events~1{eventName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1events~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event/methods/get'
          - $ref: '#/components/x-stackQL-resources/event/methods/list'
        insert: []
        update: []
        delete: []
    fabric:
      id: azure.data_replication.fabric
      name: fabric
      title: fabric
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1?api-version=2021-02-16-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1?api-version=2021-02-16-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1?api-version=2021-02-16-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataReplication~1replicationFabrics~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fabric/methods/get'
          - $ref: '#/components/x-stackQL-resources/fabric/methods/list'
          - $ref: '#/components/x-stackQL-resources/fabric/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/fabric/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/fabric/methods/delete'
    fabric_operations_status:
      id: azure.data_replication.fabric_operations_status
      name: fabric_operations_status
      title: fabric_operations_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationFabrics~1{fabricName}~1operations~1{operationId}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/fabric_operations_status/methods/get'
        insert: []
        update: []
        delete: []
    policy:
      id: azure.data_replication.policy
      name: policy
      title: policy
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationPolicies~1{policyName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationPolicies~1{policyName}~1?api-version=2021-02-16-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationPolicies~1{policyName}~1?api-version=2021-02-16-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationPolicies~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policy/methods/get'
          - $ref: '#/components/x-stackQL-resources/policy/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/policy/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/policy/methods/delete'
    policy_operation_status:
      id: azure.data_replication.policy_operation_status
      name: policy_operation_status
      title: policy_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationPolicies~1{policyName}~1operations~1{operationId}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policy_operation_status/methods/get'
        insert: []
        update: []
        delete: []
    protected_item:
      id: azure.data_replication.protected_item
      name: protected_item
      title: protected_item
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1{protectedItemName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1{protectedItemName}~1?api-version=2021-02-16-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1{protectedItemName}~1?api-version=2021-02-16-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        planned_failover:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1{protectedItemName}~1plannedFailover~1?api-version=2021-02-16-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/protected_item/methods/get'
          - $ref: '#/components/x-stackQL-resources/protected_item/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/protected_item/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/protected_item/methods/delete'
    protected_item_operation_status:
      id: azure.data_replication.protected_item_operation_status
      name: protected_item_operation_status
      title: protected_item_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1{protectedItemName}~1operations~1{operationId}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/protected_item_operation_status/methods/get'
        insert: []
        update: []
        delete: []
    recovery_points:
      id: azure.data_replication.recovery_points
      name: recovery_points
      title: recovery_points
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1{protectedItemName}~1recoveryPoints~1{recoveryPointName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1protectedItems~1{protectedItemName}~1recoveryPoints~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recovery_points/methods/get'
          - $ref: '#/components/x-stackQL-resources/recovery_points/methods/list'
        insert: []
        update: []
        delete: []
    replication_extension:
      id: azure.data_replication.replication_extension
      name: replication_extension
      title: replication_extension
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationExtensions~1{replicationExtensionName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationExtensions~1{replicationExtensionName}~1?api-version=2021-02-16-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationExtensions~1{replicationExtensionName}~1?api-version=2021-02-16-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationExtensions~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replication_extension/methods/get'
          - $ref: '#/components/x-stackQL-resources/replication_extension/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/replication_extension/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/replication_extension/methods/delete'
    replication_extension_operation_status:
      id: azure.data_replication.replication_extension_operation_status
      name: replication_extension_operation_status
      title: replication_extension_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1replicationExtensions~1{replicationExtensionName}~1operations~1{operationId}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/replication_extension_operation_status/methods/get'
        insert: []
        update: []
        delete: []
    tenant:
      id: azure.data_replication.tenant
      name: tenant
      title: tenant
      methods:
        tenant:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1deployments~1{deploymentId}~1preflight~1?api-version=2021-02-16-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    operations:
      id: azure.data_replication.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataReplication~1operations~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    vault:
      id: azure.data_replication.vault
      name: vault
      title: vault
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1?api-version=2021-02-16-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1?api-version=2021-02-16-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1?api-version=2021-02-16-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataReplication~1replicationVaults~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vault/methods/get'
          - $ref: '#/components/x-stackQL-resources/vault/methods/list'
          - $ref: '#/components/x-stackQL-resources/vault/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/vault/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vault/methods/delete'
    vault_operation_status:
      id: azure.data_replication.vault_operation_status
      name: vault_operation_status
      title: vault_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1operations~1{operationId}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vault_operation_status/methods/get'
        insert: []
        update: []
        delete: []
    workflow:
      id: azure.data_replication.workflow
      name: workflow
      title: workflow
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1jobs~1{jobName}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1jobs~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow/methods/get'
          - $ref: '#/components/x-stackQL-resources/workflow/methods/list'
        insert: []
        update: []
        delete: []
    workflow_operation_status:
      id: azure.data_replication.workflow_operation_status
      name: workflow_operation_status
      title: workflow_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataReplication~1replicationVaults~1{vaultName}~1jobs~1{jobName}~1operations~1{operationId}~1?api-version=2021-02-16-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/workflow_operation_status/methods/get'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}/fabricAgents/{fabricAgentName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Dra
      summary: Gets the fabric agent (Dra).
      description: Gets the details of the fabric agent.
      operationId: Dra_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
        - $ref: '#/components/parameters/FabricAgentNameParameter'
      responses:
        '200':
          description: Returns Dra Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Dra
      summary: Puts the fabric agent (Dra).
      description: Creates the fabric agent.
      operationId: Dra_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
        - $ref: '#/components/parameters/FabricAgentNameParameter'
      requestBody:
        description: Dra model.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraModel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraModel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Dra
      summary: Deletes the fabric agent (Dra).
      description: Deletes the fabric agent.
      operationId: Dra_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
        - $ref: '#/components/parameters/FabricAgentNameParameter'
      responses:
        '202':
          description: Returns success on deletion.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}/fabricAgents/?api-version=2021-02-16-preview:
    get:
      tags:
        - Dra
      summary: Lists the fabric agents (Dras).
      description: Gets the list of fabric agents in the given fabric.
      operationId: Dra_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
      responses:
        '200':
          description: Returns Dra Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}/fabricAgents/{fabricAgentName}/operations/{operationId}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Dra
      summary: Gets the fabric agent (Dra) operation status.
      description: Tracks the results of an asynchronous operation on the fabric agent.
      operationId: DraOperationStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
        - $ref: '#/components/parameters/FabricAgentNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/alertSettings/{emailConfigurationName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - EmailConfiguration
      summary: Gets the email configuration setting.
      description: Gets the details of the alert configuration setting.
      operationId: EmailConfiguration_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/EmailConfigurationNameParameter'
      responses:
        '200':
          description: Returns EmailConfiguration Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailConfigurationModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - EmailConfiguration
      summary: Creates email configuration settings.
      description: Creates an alert configuration setting for the given vault.
      operationId: EmailConfiguration_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/EmailConfigurationNameParameter'
      requestBody:
        description: EmailConfiguration model.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailConfigurationModel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailConfigurationModel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailConfigurationModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/alertSettings/?api-version=2021-02-16-preview:
    get:
      tags:
        - EmailConfiguration
      summary: Lists the email configuration settings.
      description: Gets the list of alert configuration settings for the given vault.
      operationId: EmailConfiguration_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      responses:
        '200':
          description: Returns EmailConfiguration Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailConfigurationModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/events/{eventName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Event
      summary: Gets the event.
      description: Gets the details of the event.
      operationId: Event_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/EventNameParameter'
      responses:
        '200':
          description: Returns Event Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/events/?api-version=2021-02-16-preview:
    get:
      tags:
        - Event
      summary: Lists the events.
      description: Gets the list of events in the given vault.
      operationId: Event_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - name: $filter
          in: query
          description: Filter string.
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Continuation token.
          schema:
            type: string
      responses:
        '200':
          description: Returns Event Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Fabric
      summary: Gets the fabric.
      description: Gets the details of the fabric.
      operationId: Fabric_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
      responses:
        '200':
          description: Returns Fabric Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Fabric
      summary: Puts the fabric.
      description: Creates the fabric.
      operationId: Fabric_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
      requestBody:
        description: Fabric properties.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FabricModel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricModel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Fabric
      summary: Updates the fabric.
      description: Performs update on the fabric.
      operationId: Fabric_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
      requestBody:
        description: Fabric properties.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FabricModelUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricModel'
        '202':
          description: Returns success on update.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Fabric
      summary: Deletes the fabric.
      description: Removes the fabric.
      operationId: Fabric_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
      responses:
        '202':
          description: Returns success on deletion.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.DataReplication/replicationFabrics/?api-version=2021-02-16-preview:
    get:
      tags:
        - Fabric
      summary: Lists the fabrics.
      description: Gets the list of fabrics in the given subscription.
      operationId: Fabric_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: continuationToken
          in: query
          description: Continuation token from the previous call.
          schema:
            type: string
      responses:
        '200':
          description: Returns Fabric Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/?api-version=2021-02-16-preview:
    get:
      tags:
        - Fabric
      summary: Lists the fabrics.
      description: Gets the list of fabrics in the given subscription and resource group.
      operationId: Fabric_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: continuationToken
          in: query
          description: Continuation token from the previous call.
          schema:
            type: string
      responses:
        '200':
          description: Returns Fabric Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FabricModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationFabrics/{fabricName}/operations/{operationId}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Fabric
      summary: Gets the fabric operation status.
      description: Tracks the results of an asynchronous operation on the fabric.
      operationId: FabricOperationsStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FabricNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationPolicies/{policyName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Policy
      summary: Gets the policy.
      description: Gets the details of the policy.
      operationId: Policy_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
      responses:
        '200':
          description: Returns Policy Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Policy
      summary: Puts the policy.
      description: Creates the policy.
      operationId: Policy_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
      requestBody:
        description: Policy model.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyModel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyModel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Policy
      summary: Deletes the policy.
      description: Removes the policy.
      operationId: Policy_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
      responses:
        '202':
          description: Returns success on deletion.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationPolicies/?api-version=2021-02-16-preview:
    get:
      tags:
        - Policy
      summary: Lists the policies.
      description: Gets the list of policies in the given vault.
      operationId: Policy_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      responses:
        '200':
          description: Returns Policy Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationPolicies/{policyName}/operations/{operationId}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Policy
      summary: Gets the policy operation status.
      description: Tracks the results of an asynchronous operation on the policy.
      operationId: PolicyOperationStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - ProtectedItem
      summary: Gets the protected item.
      description: Gets the details of the protected item.
      operationId: ProtectedItem_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ProtectedItemNameParameter'
      responses:
        '200':
          description: Returns ProtectedItem Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedItemModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ProtectedItem
      summary: Puts the protected item.
      description: Creates the protected item.
      operationId: ProtectedItem_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ProtectedItemNameParameter'
      requestBody:
        description: Protected item model.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtectedItemModel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedItemModel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedItemModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - ProtectedItem
      summary: Deletes the protected item.
      description: Removes the protected item.
      operationId: ProtectedItem_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ProtectedItemNameParameter'
        - name: forceDelete
          in: query
          description: A flag indicating whether to do force delete or not.
          schema:
            type: boolean
      responses:
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/?api-version=2021-02-16-preview:
    get:
      tags:
        - ProtectedItem
      summary: Lists the protected items.
      description: Gets the list of protected items in the given vault.
      operationId: ProtectedItem_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      responses:
        '200':
          description: Returns ProtectedItem Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtectedItemModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/plannedFailover/?api-version=2021-02-16-preview:
    post:
      tags:
        - ProtectedItem
      summary: Performs planned failover.
      description: Performs the planned failover on the protected item.
      operationId: ProtectedItem_PlannedFailover
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ProtectedItemNameParameter'
      requestBody:
        description: Planned failover model.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlannedFailoverModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlannedFailoverModel'
        '202':
          description: Accepted
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/operations/{operationId}/?api-version=2021-02-16-preview:
    get:
      tags:
        - ProtectedItem
      summary: Gets the protected item operation status.
      description: Tracks the results of an asynchronous operation on the protected item.
      operationId: ProtectedItemOperationStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ProtectedItemNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - RecoveryPoint
      summary: Gets the recovery point.
      description: Gets the details of the recovery point of a protected item.
      operationId: RecoveryPoints_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ProtectedItemNameParameter'
        - $ref: '#/components/parameters/RecoveryPointNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryPointModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/protectedItems/{protectedItemName}/recoveryPoints/?api-version=2021-02-16-preview:
    get:
      tags:
        - RecoveryPoint
      summary: Lists the recovery points.
      description: Gets the list of recovery points of the given protected item.
      operationId: RecoveryPoints_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ProtectedItemNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryPointModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationExtensions/{replicationExtensionName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - ReplicationExtension
      summary: Gets the replication extension.
      description: Gets the details of the replication extension.
      operationId: ReplicationExtension_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ReplicationExtensionNameParameter'
      responses:
        '200':
          description: Returns Replication extension Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationExtensionModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ReplicationExtension
      summary: Puts the replication extension.
      description: Creates the replication extension in the given vault.
      operationId: ReplicationExtension_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ReplicationExtensionNameParameter'
      requestBody:
        description: Replication extension model.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplicationExtensionModel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationExtensionModel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationExtensionModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - ReplicationExtension
      summary: Deletes the replication extension.
      description: Deletes the replication extension in the given vault.
      operationId: ReplicationExtension_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ReplicationExtensionNameParameter'
      responses:
        '202':
          description: Returns success on deletion.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationExtensions/?api-version=2021-02-16-preview:
    get:
      tags:
        - ReplicationExtension
      summary: Lists the replication extensions.
      description: Gets the list of replication extensions in the given vault.
      operationId: ReplicationExtension_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      responses:
        '200':
          description: Returns Replication extension Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicationExtensionModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/replicationExtensions/{replicationExtensionName}/operations/{operationId}/?api-version=2021-02-16-preview:
    get:
      tags:
        - ReplicationExtension
      summary: Gets the replication extension operation status.
      description: Tracks the results of an asynchronous operation on the replication extension.
      operationId: ReplicationExtensionOperationStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/ReplicationExtensionNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DataReplication/locations/{location}/checkNameAvailability/?api-version=2021-02-16-preview:
    post:
      tags:
        - Tenant
      summary: Performs the resource name availability check.
      description: Checks the resource name availability.
      operationId: CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: Resource details.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponseModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.DataReplication/operations/?api-version=2021-02-16-preview:
    get:
      tags:
        - Tenant
      summary: Get a list of REST API operations supported by Microsoft.DataReplication.
      description: Gets the operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/deployments/{deploymentId}/preflight/?api-version=2021-02-16-preview:
    post:
      tags:
        - Tenant
      summary: Performs resource deployment validation.
      operationId: DeploymentPreflight
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: deploymentId
          in: path
          description: Deployment Id.
          required: true
          schema:
            type: string
      requestBody:
        description: Deployment preflight model.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentPreflightModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentPreflightModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Vault
      summary: Gets the vault.
      description: Gets the details of the vault.
      operationId: Vault_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      responses:
        '200':
          description: Returns Vault Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Vault
      summary: Puts the vault.
      description: Creates the vault.
      operationId: Vault_Create
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      requestBody:
        description: Vault properties.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultModel'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultModel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Vault
      summary: Updates the vault.
      description: Performs update on the vault.
      operationId: Vault_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      requestBody:
        description: Vault properties.
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaultModelUpdate'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultModel'
        '202':
          description: Returns success on update.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    delete:
      tags:
        - Vault
      summary: Deletes the vault.
      description: Removes the vault.
      operationId: Vault_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
      responses:
        '202':
          description: Returns success on deletion.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: Tracking URL for long running operation.
            Location:
              schema:
                type: string
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.DataReplication/replicationVaults/?api-version=2021-02-16-preview:
    get:
      tags:
        - Vault
      summary: Lists the vaults.
      description: Gets the list of vaults in the given subscription.
      operationId: Vault_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: continuationToken
          in: query
          description: Continuation token from the previous call.
          schema:
            type: string
      responses:
        '200':
          description: Returns Vault Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/?api-version=2021-02-16-preview:
    get:
      tags:
        - Vault
      summary: Lists the vaults.
      description: Gets the list of vaults in the given subscription and resource group.
      operationId: Vault_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: continuationToken
          in: query
          description: Continuation token from the previous call.
          schema:
            type: string
      responses:
        '200':
          description: Returns Vault Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaultModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/operations/{operationId}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Vault
      summary: Gets the vault operation status.
      description: Tracks the results of an asynchronous operation on the vault.
      operationId: VaultOperationStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/jobs/{jobName}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Workflow
      summary: Gets the job (workflow).
      description: Gets the details of the job.
      operationId: Workflow_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: Returns Workflow Model on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowModel'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/jobs/?api-version=2021-02-16-preview:
    get:
      tags:
        - Workflow
      summary: Lists the jobs (workflows).
      description: Gets the list of jobs in the given vault.
      operationId: Workflow_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - name: $filter
          in: query
          description: Filter string.
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Continuation token.
          schema:
            type: string
      responses:
        '200':
          description: Returns Workflow Model Collection on success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowModelCollection'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataReplication/replicationVaults/{vaultName}/jobs/{jobName}/operations/{operationId}/?api-version=2021-02-16-preview:
    get:
      tags:
        - Workflow
      summary: Gets the job (workflow) operation status.
      description: Tracks the results of an asynchronous operation on the job.
      operationId: WorkflowOperationStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VaultNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - $ref: '#/components/parameters/OperationIdParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
