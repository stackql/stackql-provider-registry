openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Service Fabric
  description: Service Fabric Client APIs allow managing microservices applications in a Service Fabric cluster through its management endpoint. For example, mycluster.westus.cloudapp.azure.com.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    api-version:
      name: api-version
      in: query
      description: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be "2021-06-01" for this specification.
      required: true
      x-ms-parameter-location: client
      schema:
        enum:
          - '2021-06-01'
        default: '2021-06-01'
        type: string
    applicationName:
      name: applicationName
      in: path
      description: The name of the application resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    applicationTypeName:
      name: applicationTypeName
      in: path
      description: The name of the application type name resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    clusterNameParameter:
      name: clusterName
      in: path
      description: The name of the cluster resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    serviceName:
      name: serviceName
      in: path
      description: The name of the service resource in the format of {applicationName}~{serviceName}.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The customer subscription identifier.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    version:
      name: version
      in: path
      description: The application type version.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    clusterVersion:
      name: clusterVersion
      in: path
      description: The cluster code version.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    environment:
      name: environment
      in: path
      description: The operating system of the cluster. The default means all.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - Windows
          - Linux
        x-ms-enum:
          name: ClusterVersionsEnvironment
          modelAsString: true
        type: string
    locationForClusterCodeVersions:
      name: location
      in: path
      description: The location for the cluster code versions. This is different from cluster location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    ApplicationMetricDescription:
      type: object
      description: |
        Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.
      properties:
        name:
          type: string
          description: The name of the metric.
        maximumCapacity:
          type: integer
          format: int64
          description: |
            The maximum node capacity for Service Fabric application.
            This is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.
            If set to zero, capacity for this metric is unlimited on each node.
            When creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
            When updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.
        reservationCapacity:
          type: integer
          format: int64
          description: |
            The node reservation capacity for Service Fabric application.
            This is the amount of load which is reserved on nodes which have instances of this application.
            If MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.
            If set to zero, no capacity is reserved for this metric.
            When setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.
        totalApplicationCapacity:
          description: |
            The total metric capacity for Service Fabric application.
            This is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.
            When creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.
          type: integer
          format: int64
    ApplicationMetricDescriptionList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationMetricDescription'
      description: List of application capacity metric description.
    ApplicationParameterList:
      description: List of application parameters with overridden values from their default values specified in the application manifest.
      additionalProperties:
        type: string
      properties: {}
      type: object
    ApplicationResource:
      description: The application resource.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: It will be deprecated in New API, resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ApplicationResourceList:
      type: object
      description: The list of application resources.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationResource'
        nextLink:
          type: string
          description: URL to get the next set of application list results if there are any.
          readOnly: true
    ApplicationResourceProperties:
      description: The application resource properties.
      properties:
        typeVersion:
          $ref: '#/components/schemas/ApplicationTypeVersion'
        parameters:
          $ref: '#/components/schemas/ApplicationParameterList'
        upgradePolicy:
          $ref: '#/components/schemas/ApplicationUpgradePolicy'
        minimumNodes:
          type: integer
          format: int64
          description: The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
          minimum: 0
        maximumNodes:
          type: integer
          format: int64
          description: The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
          minimum: 0
          default: 0
        removeApplicationCapacity:
          type: boolean
          description: Remove the current application capacity settings.
        metrics:
          $ref: '#/components/schemas/ApplicationMetricDescriptionList'
        managedIdentities:
          description: List of user assigned identities for the application, each mapped to a friendly name.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserAssignedIdentity'
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        typeName:
          $ref: '#/components/schemas/ApplicationTypeName'
      type: object
    ApplicationResourceUpdate:
      description: The application resource for patch operations.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationResourceUpdateProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: It will be deprecated in New API, resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ApplicationResourceUpdateProperties:
      type: object
      description: The application resource properties for patch operations.
      properties:
        typeVersion:
          $ref: '#/components/schemas/ApplicationTypeVersion'
        parameters:
          $ref: '#/components/schemas/ApplicationParameterList'
        upgradePolicy:
          $ref: '#/components/schemas/ApplicationUpgradePolicy'
        minimumNodes:
          type: integer
          format: int64
          description: The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property.
          minimum: 0
        maximumNodes:
          type: integer
          format: int64
          description: The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node.
          minimum: 0
          default: 0
        removeApplicationCapacity:
          type: boolean
          description: Remove the current application capacity settings.
        metrics:
          $ref: '#/components/schemas/ApplicationMetricDescriptionList'
        managedIdentities:
          description: List of user assigned identities for the application, each mapped to a friendly name.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserAssignedIdentity'
    ApplicationTypeName:
      type: string
      description: The application type name as defined in the application manifest.
    ApplicationTypeParameterList:
      description: List of application type parameters that can be overridden when creating or updating the application.
      additionalProperties:
        type: string
      properties: {}
      type: object
    ApplicationTypeResource:
      description: The application type name resource
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationTypeResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: It will be deprecated in New API, resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ApplicationTypeResourceList:
      type: object
      description: The list of application type names.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTypeResource'
        nextLink:
          type: string
          description: URL to get the next set of application type list results if there are any.
          readOnly: true
    ApplicationTypeResourceProperties:
      type: object
      description: The application type name properties
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response.
    ApplicationTypeVersion:
      type: string
      description: The version of the application type as defined in the application manifest.
    ApplicationTypeVersionResource:
      description: An application type version resource for the specified application type name resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationTypeVersionResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: It will be deprecated in New API, resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ApplicationTypeVersionResourceList:
      type: object
      description: The list of application type version resources for the specified application type name resource.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTypeVersionResource'
        nextLink:
          type: string
          description: URL to get the next set of application type version list results if there are any.
          readOnly: true
    ApplicationTypeVersionResourceProperties:
      type: object
      description: The properties of the application type version resource.
      required:
        - appPackageUrl
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        appPackageUrl:
          type: string
          description: The URL to the application package
        defaultParameterList:
          readOnly: true
          $ref: '#/components/schemas/ApplicationTypeParameterList'
    ApplicationUpgradePolicy:
      type: object
      description: Describes the policy for a monitored application upgrade.
      properties:
        upgradeReplicaSetCheckTimeout:
          type: string
          description: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
        forceRestart:
          $ref: '#/components/schemas/ForceRestart'
        rollingUpgradeMonitoringPolicy:
          $ref: '#/components/schemas/ArmRollingUpgradeMonitoringPolicy'
        applicationHealthPolicy:
          $ref: '#/components/schemas/ArmApplicationHealthPolicy'
        upgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        recreateApplication:
          type: boolean
          description: Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed and it will result in availability loss.
    ApplicationUserAssignedIdentity:
      type: object
      required:
        - name
        - principalId
      properties:
        name:
          type: string
          description: The friendly name of user assigned identity.
        principalId:
          type: string
          description: The principal id of user assigned identity.
    ArmApplicationHealthPolicy:
      type: object
      description: |
        Defines a health policy used to evaluate the health of an application or one of its children entities.
      properties:
        considerWarningAsError:
          type: boolean
          description: Indicates whether warnings are treated with the same severity as errors.
          default: false
        maxPercentUnhealthyDeployedApplications:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
            The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
            This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
          default: 0
        defaultServiceTypeHealthPolicy:
          $ref: '#/components/schemas/ArmServiceTypeHealthPolicy'
          description: The health policy used by default to evaluate the health of a service type.
        serviceTypeHealthPolicyMap:
          $ref: '#/components/schemas/ArmServiceTypeHealthPolicyMap'
          description: The map with service type health policy per service type name. The map is empty by default.
    ArmRollingUpgradeMonitoringPolicy:
      type: object
      description: The policy used for monitoring the application upgrade
      properties:
        failureAction:
          type: string
          description: The activation Mode of the service package
          enum:
            - Rollback
            - Manual
          x-ms-enum:
            name: ArmUpgradeFailureAction
            modelAsString: true
            values:
              - value: Rollback
                description: Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails.
              - value: Manual
                description: Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically.
        healthCheckWaitDuration:
          $ref: '#/components/schemas/HealthCheckWaitDuration'
        healthCheckStableDuration:
          $ref: '#/components/schemas/HealthCheckStableDuration'
        healthCheckRetryTimeout:
          $ref: '#/components/schemas/HealthCheckRetryTimeout'
        upgradeTimeout:
          $ref: '#/components/schemas/UpgradeTimeout'
        upgradeDomainTimeout:
          $ref: '#/components/schemas/UpgradeDomainTimeout'
    ArmServiceTypeHealthPolicy:
      type: object
      description: |
        Represents the health policy used to evaluate the health of services belonging to a service type.
      properties:
        maxPercentUnhealthyServices:
          type: integer
          format: int32
          description: |
            The maximum percentage of services allowed to be unhealthy before your application is considered in error.
          default: 0
          minimum: 0
          maximum: 100
        maxPercentUnhealthyPartitionsPerService:
          type: integer
          format: int32
          description: |
            The maximum percentage of partitions per service allowed to be unhealthy before your application is considered in error.
          default: 0
          minimum: 0
          maximum: 100
        maxPercentUnhealthyReplicasPerPartition:
          type: integer
          format: int32
          description: |
            The maximum percentage of replicas per partition allowed to be unhealthy before your application is considered in error.
          default: 0
          minimum: 0
          maximum: 100
    ArmServiceTypeHealthPolicyMap:
      description: |
        Defines a ServiceTypeHealthPolicy per service type name.

        The entries in the map replace the default service type health policy for each specified service type.
        For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.
        With policy per service type, there's more granular control of the health of the service.

        If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
      additionalProperties:
        $ref: '#/components/schemas/ArmServiceTypeHealthPolicy'
      properties: {}
      type: object
    CorrelationSchemeList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceCorrelationDescription'
      description: A list that describes the correlation of the service with other services.
    ForceRestart:
      type: boolean
      description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
      default: false
    HealthCheckRetryTimeout:
      type: string
      description: The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
      default: PT0H10M0S
    HealthCheckStableDuration:
      type: string
      description: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
      default: PT0H2M0S
    HealthCheckWaitDuration:
      type: string
      description: The amount of time to wait after completing an upgrade domain before applying health policies. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
      default: '0'
    ManagedIdentity:
      type: object
      description: Describes the managed identities for an Azure resource.
      properties:
        principalId:
          type: string
          readOnly: true
          description: The principal id of the managed identity. This property will only be provided for a system assigned identity.
        tenantId:
          type: string
          readOnly: true
          description: The tenant id of the managed identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentityMap'
    ManagedIdentityType:
      type: string
      description: The type of managed identity for the resource.
      enum:
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
        - None
      x-ms-enum:
        name: ManagedIdentityType
        modelAsString: false
        values:
          - value: SystemAssigned
            description: Indicates that system assigned identity is associated with the resource.
          - value: UserAssigned
            description: Indicates that user assigned identity is associated with the resource.
          - value: SystemAssigned, UserAssigned
            description: Indicates that both system assigned and user assigned identity are associated with the resource.
          - value: None
            description: Indicates that no identity is associated with the resource.
    MoveCost:
      type: string
      description: Specifies the move cost for the service.
      enum:
        - Zero
        - Low
        - Medium
        - High
      x-ms-enum:
        name: MoveCost
        modelAsString: true
        values:
          - value: Zero
            description: Zero move cost. This value is zero.
          - value: Low
            description: Specifies the move cost of the service as Low. The value is 1.
          - value: Medium
            description: Specifies the move cost of the service as Medium. The value is 2.
          - value: High
            description: Specifies the move cost of the service as High. The value is 3.
    NamedPartitionSchemeDescription:
      description: Describes the named partition scheme of the service.
      x-ms-discriminator-value: Named
      required:
        - count
        - names
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
        count:
          type: integer
          format: int32
          description: The number of partitions.
        names:
          type: array
          items:
            type: string
          description: Array of size specified by the ‘count’ parameter, for the names of the partitions.
      type: object
    PartitionScheme:
      type: string
      description: Enumerates the ways that a service can be partitioned.
      enum:
        - Invalid
        - Singleton
        - UniformInt64Range
        - Named
      x-ms-enum:
        name: PartitionScheme
        modelAsString: true
        values:
          - value: Invalid
            description: Indicates the partition kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - value: Singleton
            description: Indicates that the partition is based on string names, and is a SingletonPartitionSchemeDescription object, The value is 1.
          - value: UniformInt64Range
            description: Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionSchemeDescription object. The value is 2.
          - value: Named
            description: Indicates that the partition is based on string names, and is a NamedPartitionSchemeDescription object. The value is 3
    PartitionSchemeDescription:
      type: object
      discriminator:
        propertyName: partitionScheme
      description: Describes how the service is partitioned.
      required:
        - partitionScheme
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
    ProxyResource:
      type: object
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: It will be deprecated in New API, resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      description: The resource model definition for proxy-only resource.
      x-ms-azure-resource: true
    RollingUpgradeMode:
      type: string
      description: The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, and Monitored.
      enum:
        - Invalid
        - UnmonitoredAuto
        - UnmonitoredManual
        - Monitored
      default: Monitored
      x-ms-enum:
        name: RollingUpgradeMode
        modelAsString: true
        values:
          - value: Invalid
            description: Indicates the upgrade mode is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - value: UnmonitoredAuto
            description: The upgrade will proceed automatically without performing any health monitoring. The value is 1
          - value: UnmonitoredManual
            description: The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 2
          - value: Monitored
            description: The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 3
    ServiceCorrelationDescription:
      type: object
      description: Creates a particular correlation between services.
      required:
        - scheme
        - serviceName
      properties:
        scheme:
          $ref: '#/components/schemas/ServiceCorrelationScheme'
          description: The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.
        serviceName:
          $ref: '#/components/schemas/ServiceName'
          description: The name of the service that the correlation relationship is established with.
    ServiceCorrelationScheme:
      type: string
      description: The service correlation scheme.
      enum:
        - Invalid
        - Affinity
        - AlignedAffinity
        - NonAlignedAffinity
      x-ms-enum:
        name: ServiceCorrelationScheme
        modelAsString: true
        values:
          - value: Invalid
            description: An invalid correlation scheme. Cannot be used. The value is zero.
          - value: Affinity
            description: Indicates that this service has an affinity relationship with another service. Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity options. The value is 1.
          - value: AlignedAffinity
            description: Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 2.
          - value: NonAlignedAffinity
            description: Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 3.
    ServiceKind:
      type: string
      description: The kind of service (Stateless or Stateful).
      enum:
        - Invalid
        - Stateless
        - Stateful
      x-ms-enum:
        name: ServiceKind
        modelAsString: true
        values:
          - value: Invalid
            description: Indicates the service kind is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - value: Stateless
            description: Does not use Service Fabric to make its state highly available or reliable. The value is 1.
          - value: Stateful
            description: Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 2.
    ServiceLoadMetricDescription:
      type: object
      description: Specifies a metric to load balance a service during runtime.
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
        weight:
          $ref: '#/components/schemas/ServiceLoadMetricWeight'
          description: The service load metric relative weight, compared to other metrics configured for this service, as a number.
        primaryDefaultLoad:
          type: integer
          format: int32
          description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
        secondaryDefaultLoad:
          type: integer
          format: int32
          description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
        defaultLoad:
          type: integer
          format: int32
          description: Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
    ServiceLoadMetricsList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceLoadMetricDescription'
      description: The service load metrics is given as an array of ServiceLoadMetricDescription objects.
    ServiceLoadMetricWeight:
      type: string
      description: Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight.
      enum:
        - Zero
        - Low
        - Medium
        - High
      x-ms-enum:
        name: ServiceLoadMetricWeight
        modelAsString: true
        values:
          - value: Zero
            description: Disables resource balancing for this metric. This value is zero.
          - value: Low
            description: Specifies the metric weight of the service load as Low. The value is 1.
          - value: Medium
            description: Specifies the metric weight of the service load as Medium. The value is 2.
          - value: High
            description: Specifies the metric weight of the service load as High. The value is 3.
    ServiceName:
      type: string
      description: The full name of the service with 'fabric:' URI scheme.
    ServicePlacementPoliciesList:
      type: array
      items:
        $ref: '#/components/schemas/ServicePlacementPolicyDescription'
      description: A list that describes the correlation of the service with other services.
    ServicePlacementPolicyDescription:
      type: object
      discriminator:
        propertyName: type
      description: Describes the policy to be used for placement of a Service Fabric service.
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
    ServicePlacementPolicyType:
      type: string
      description: The type of placement policy for a service fabric service. Following are the possible values.
      enum:
        - Invalid
        - InvalidDomain
        - RequiredDomain
        - PreferredPrimaryDomain
        - RequiredDomainDistribution
        - NonPartiallyPlaceService
      x-ms-enum:
        name: ServicePlacementPolicyType
        modelAsString: true
        values:
          - value: Invalid
            description: Indicates the type of the placement policy is invalid. All Service Fabric enumerations have the invalid type. The value is zero.
          - value: InvalidDomain
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 1.
          - value: RequiredDomain
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 2.
          - value: PreferredPrimaryDomain
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 3.
          - value: RequiredDomainDistribution
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 4.
          - value: NonPartiallyPlaceService
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 5.
    ServiceResource:
      description: The service resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ServiceResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: It will be deprecated in New API, resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ServiceResourceList:
      type: object
      description: The list of service resources.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceResource'
        nextLink:
          type: string
          description: URL to get the next set of service list results if there are any.
          readOnly: true
    ServiceResourceProperties:
      description: The service resource properties.
      required:
        - serviceKind
      discriminator:
        propertyName: serviceKind
      properties:
        placementConstraints:
          type: string
          description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        correlationScheme:
          $ref: '#/components/schemas/CorrelationSchemeList'
        serviceLoadMetrics:
          $ref: '#/components/schemas/ServiceLoadMetricsList'
        servicePlacementPolicies:
          $ref: '#/components/schemas/ServicePlacementPoliciesList'
        defaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        serviceTypeName:
          type: string
          description: The name of the service type
        partitionDescription:
          $ref: '#/components/schemas/PartitionSchemeDescription'
        servicePackageActivationMode:
          type: string
          description: The activation Mode of the service package
          enum:
            - SharedProcess
            - ExclusiveProcess
          x-ms-enum:
            name: ArmServicePackageActivationMode
            modelAsString: true
            values:
              - value: SharedProcess
                description: Indicates the application package activation mode will use shared process.
              - value: ExclusiveProcess
                description: Indicates the application package activation mode will use exclusive process.
        serviceDnsName:
          type: string
          description: Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.
      type: object
    ServiceResourcePropertiesBase:
      type: object
      description: The common service resource properties.
      properties:
        placementConstraints:
          type: string
          description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        correlationScheme:
          $ref: '#/components/schemas/CorrelationSchemeList'
        serviceLoadMetrics:
          $ref: '#/components/schemas/ServiceLoadMetricsList'
        servicePlacementPolicies:
          $ref: '#/components/schemas/ServicePlacementPoliciesList'
        defaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
    ServiceResourceUpdate:
      description: The service resource for patch operations.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ServiceResourceUpdateProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: It will be deprecated in New API, resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ServiceResourceUpdateProperties:
      description: The service resource properties for patch operations.
      required:
        - serviceKind
      discriminator:
        propertyName: serviceKind
      properties:
        placementConstraints:
          type: string
          description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        correlationScheme:
          $ref: '#/components/schemas/CorrelationSchemeList'
        serviceLoadMetrics:
          $ref: '#/components/schemas/ServiceLoadMetricsList'
        servicePlacementPolicies:
          $ref: '#/components/schemas/ServicePlacementPoliciesList'
        defaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
      type: object
    SingletonPartitionSchemeDescription:
      description: Describes the partition scheme of a singleton-partitioned, or non-partitioned service.
      x-ms-discriminator-value: Singleton
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
      type: object
    StatefulServiceProperties:
      description: The properties of a stateful service resource.
      x-ms-discriminator-value: Stateful
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        serviceTypeName:
          type: string
          description: The name of the service type
        partitionDescription:
          $ref: '#/components/schemas/PartitionSchemeDescription'
        servicePackageActivationMode:
          type: string
          description: The activation Mode of the service package
          enum:
            - SharedProcess
            - ExclusiveProcess
          x-ms-enum:
            name: ArmServicePackageActivationMode
            modelAsString: true
            values:
              - value: SharedProcess
                description: Indicates the application package activation mode will use shared process.
              - value: ExclusiveProcess
                description: Indicates the application package activation mode will use exclusive process.
        serviceDnsName:
          type: string
          description: Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.
        hasPersistedState:
          type: boolean
          description: A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.
        targetReplicaSetSize:
          type: integer
          format: int32
          minimum: 1
          description: The target replica set size as a number.
        minReplicaSetSize:
          type: integer
          format: int32
          minimum: 1
          description: The minimum replica set size as a number.
        replicaRestartWaitDuration:
          type: string
          format: date-time
          description: The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s).
        quorumLossWaitDuration:
          type: string
          format: date-time
          description: The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).
        standByReplicaKeepDuration:
          type: string
          format: date-time
          description: The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s).
      type: object
    StatefulServiceUpdateProperties:
      description: The properties of a stateful service resource for patch operations.
      x-ms-discriminator-value: Stateful
      properties:
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        targetReplicaSetSize:
          type: integer
          format: int32
          minimum: 1
          description: The target replica set size as a number.
        minReplicaSetSize:
          type: integer
          format: int32
          minimum: 1
          description: The minimum replica set size as a number.
        replicaRestartWaitDuration:
          type: string
          format: date-time
          description: The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s).
        quorumLossWaitDuration:
          type: string
          format: date-time
          description: The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s).
        standByReplicaKeepDuration:
          type: string
          format: date-time
          description: The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s).
      type: object
    StatelessServiceProperties:
      description: The properties of a stateless service resource.
      x-ms-discriminator-value: Stateless
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        serviceTypeName:
          type: string
          description: The name of the service type
        partitionDescription:
          $ref: '#/components/schemas/PartitionSchemeDescription'
        servicePackageActivationMode:
          type: string
          description: The activation Mode of the service package
          enum:
            - SharedProcess
            - ExclusiveProcess
          x-ms-enum:
            name: ArmServicePackageActivationMode
            modelAsString: true
            values:
              - value: SharedProcess
                description: Indicates the application package activation mode will use shared process.
              - value: ExclusiveProcess
                description: Indicates the application package activation mode will use exclusive process.
        serviceDnsName:
          type: string
          description: Dns name used for the service. If this is specified, then the service can be accessed via its DNS name instead of service name.
        instanceCount:
          type: integer
          format: int32
          minimum: -1
          description: The instance count.
        instanceCloseDelayDuration:
          type: string
          description: Delay duration for RequestDrain feature to ensures that the endpoint advertised by the stateless instance is removed before the delay starts prior to closing the instance. This delay enables existing requests to drain gracefully before the instance actually goes down (https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-application-upgrade-advanced#avoid-connection-drops-during-stateless-service-planned-downtime-preview). It is represented in ISO 8601 format (hh:mm:ss.s).
      type: object
    StatelessServiceUpdateProperties:
      description: The properties of a stateless service resource for patch operations.
      x-ms-discriminator-value: Stateless
      properties:
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        instanceCount:
          type: integer
          format: int32
          minimum: -1
          description: The instance count.
        instanceCloseDelayDuration:
          type: string
          description: Delay duration for RequestDrain feature to ensures that the endpoint advertised by the stateless instance is removed before the delay starts prior to closing the instance. This delay enables existing requests to drain gracefully before the instance actually goes down (https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-application-upgrade-advanced#avoid-connection-drops-during-stateless-service-planned-downtime-preview). It is first interpreted as a string representing an ISO 8601 duration. It is represented in ISO 8601 format (hh:mm:ss.s).
      type: object
    UserAssignedIdentity:
      type: object
      properties:
        principalId:
          type: string
          readOnly: true
          description: The principal id of user assigned identity.
        clientId:
          type: string
          readOnly: true
          description: The client id of user assigned identity.
    UserAssignedIdentityMap:
      description: |
        The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UniformInt64RangePartitionSchemeDescription:
      description: Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
      x-ms-discriminator-value: UniformInt64Range
      required:
        - count
        - lowKey
        - highKey
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
        count:
          type: integer
          format: int32
          description: The number of partitions.
        lowKey:
          type: string
          description: |
            String indicating the lower bound of the partition key range that
            should be split between the partition ‘count’
        highKey:
          type: string
          description: |
            String indicating the upper bound of the partition key range that
            should be split between the partition ‘count’
      type: object
    UpgradeDomainTimeout:
      type: string
      description: The amount of time each upgrade domain has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
      default: P10675199DT02H48M05.4775807S
    UpgradeTimeout:
      type: string
      description: The amount of time the overall upgrade has to complete before FailureAction is executed. It is first interpreted as a string representing an ISO 8601 duration. If that fails, then it is interpreted as a number representing the total number of milliseconds.
      default: P10675199DT02H48M05.4775807S
    ErrorModel:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorModelError'
      description: The structure of the error.
    ErrorModelError:
      type: object
      properties:
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message.
      description: The error details.
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC).
    AddOnFeatures:
      type: string
      description: Available cluster add-on features
      enum:
        - RepairManager
        - DnsService
        - BackupRestoreService
        - ResourceMonitorService
    ApplicationTypeVersionsCleanupPolicy:
      type: object
      required:
        - maxUnusedVersionsToKeep
      properties:
        maxUnusedVersionsToKeep:
          type: integer
          format: int64
          minimum: 0
          description: Number of unused versions per application type to keep.
    ApplicationDeltaHealthPolicy:
      type: object
      description: |
        Defines a delta health policy used to evaluate the health of an application or one of its child entities when upgrading the cluster.
      properties:
        defaultServiceTypeDeltaHealthPolicy:
          $ref: '#/components/schemas/ServiceTypeDeltaHealthPolicy'
          description: The delta health policy used by default to evaluate the health of a service type when upgrading the cluster.
        serviceTypeDeltaHealthPolicies:
          $ref: '#/components/schemas/ServiceTypeDeltaHealthPolicyMap'
          description: The map with service type delta health policy per service type name. The map is empty by default.
    ApplicationDeltaHealthPolicyMap:
      description: |
        Defines a map that contains specific application delta health policies for different applications.
        Each entry specifies as key the application name and as value an ApplicationDeltaHealthPolicy used to evaluate the application health when upgrading the cluster.
        The application name should include the 'fabric:' URI scheme.
        The map is empty by default.
      additionalProperties:
        $ref: '#/components/schemas/ApplicationDeltaHealthPolicy'
      properties: {}
      type: object
    ApplicationHealthPolicy:
      type: object
      description: |
        Defines a health policy used to evaluate the health of an application or one of its children entities.
      properties:
        defaultServiceTypeHealthPolicy:
          $ref: '#/components/schemas/ServiceTypeHealthPolicy'
          description: The health policy used by default to evaluate the health of a service type.
        serviceTypeHealthPolicies:
          $ref: '#/components/schemas/ServiceTypeHealthPolicyMap'
          description: The map with service type health policy per service type name. The map is empty by default.
    ApplicationHealthPolicyMap:
      description: |
        Defines a map that contains specific application health policies for different applications.
        Each entry specifies as key the application name and as value an ApplicationHealthPolicy used to evaluate the application health.
        The application name should include the 'fabric:' URI scheme.
        The map is empty by default.
      additionalProperties:
        $ref: '#/components/schemas/ApplicationHealthPolicy'
      properties: {}
      type: object
    AvailableOperationDisplay:
      type: object
      properties:
        provider:
          type: string
          description: The name of the provider.
        resource:
          type: string
          description: The resource on which the operation is performed
        operation:
          type: string
          description: The operation that can be performed.
        description:
          type: string
          description: Operation description
      description: Operation supported by the Service Fabric resource provider
    AzureActiveDirectory:
      type: object
      properties:
        tenantId:
          type: string
          description: Azure active directory tenant id.
        clusterApplication:
          type: string
          description: Azure active directory cluster application id.
        clientApplication:
          type: string
          description: Azure active directory client application id.
      description: The settings to enable AAD authentication on the cluster.
    CertificateDescription:
      type: object
      required:
        - thumbprint
      properties:
        thumbprint:
          type: string
          description: Thumbprint of the primary certificate.
        thumbprintSecondary:
          type: string
          description: Thumbprint of the secondary certificate.
        x509StoreName:
          $ref: '#/components/schemas/StoreName'
      description: Describes the certificate details.
    ClientCertificateCommonName:
      type: object
      required:
        - certificateCommonName
        - isAdmin
        - certificateIssuerThumbprint
      properties:
        isAdmin:
          type: boolean
          description: Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
        certificateCommonName:
          type: string
          description: The common name of the client certificate.
        certificateIssuerThumbprint:
          type: string
          description: The issuer thumbprint of the client certificate.
      description: Describes the client certificate details using common name.
    ClientCertificateThumbprint:
      type: object
      required:
        - certificateThumbprint
        - isAdmin
      properties:
        isAdmin:
          type: boolean
          description: Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
        certificateThumbprint:
          type: string
          description: The thumbprint of the client certificate.
      description: Describes the client certificate details using thumbprint.
    Cluster:
      description: |
        The cluster resource
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Azure resource location.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClusterProperties'
          description: The cluster resource properties
      type: object
    ClusterCodeVersionsListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ClusterCodeVersionsResult'
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: The list results of the Service Fabric runtime versions.
    ClusterCodeVersionsResult:
      description: The result of the Service Fabric runtime versions
      properties:
        id:
          type: string
          description: The identification of the result
        name:
          type: string
          description: The name of the result
        type:
          type: string
          description: The result resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClusterVersionDetails'
      type: object
    ClusterEnvironment:
      type: string
      description: Cluster operating system, the default will be Windows
      enum:
        - Windows
        - Linux
    ClusterHealthPolicy:
      type: object
      description: |
        Defines a health policy used to evaluate the health of the cluster or of a cluster node.
      properties:
        maxPercentUnhealthyNodes:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.

            The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
            If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.

            In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
          default: 0
          minimum: 0
          maximum: 100
        maxPercentUnhealthyApplications:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.

            The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
            If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
            This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
            The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
          default: 0
          minimum: 0
          maximum: 100
        applicationHealthPolicies:
          $ref: '#/components/schemas/ApplicationHealthPolicyMap'
          description: Defines the application health policy map used to evaluate the health of an application or one of its children entities.
    ClusterListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: Cluster list results
    ClusterProperties:
      type: object
      required:
        - managementEndpoint
        - nodeTypes
      properties:
        addOnFeatures:
          type: array
          description: The list of add-on features to enable in the cluster.
          items:
            $ref: '#/components/schemas/AddOnFeatures'
        availableClusterVersions:
          type: array
          description: The Service Fabric runtime versions available for this cluster.
          readOnly: true
          items:
            $ref: '#/components/schemas/ClusterVersionDetails'
        azureActiveDirectory:
          $ref: '#/components/schemas/AzureActiveDirectory'
          description: The AAD authentication settings of the cluster.
        certificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: The certificate to use for securing the cluster. The certificate provided will be used for node to node security within the cluster, SSL certificate for cluster management endpoint and default admin client.
        certificateCommonNames:
          $ref: '#/components/schemas/ServerCertificateCommonNames'
        clientCertificateCommonNames:
          type: array
          description: The list of client certificates referenced by common name that are allowed to manage the cluster.
          items:
            $ref: '#/components/schemas/ClientCertificateCommonName'
        clientCertificateThumbprints:
          type: array
          description: The list of client certificates referenced by thumbprint that are allowed to manage the cluster.
          items:
            $ref: '#/components/schemas/ClientCertificateThumbprint'
        clusterCodeVersion:
          type: string
          description: The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**.
        clusterEndpoint:
          type: string
          description: The Azure Resource Provider endpoint. A system service in the cluster connects to this  endpoint.
          readOnly: true
        clusterId:
          type: string
          description: A service generated unique identifier for the cluster resource.
          readOnly: true
        clusterState:
          readOnly: true
          $ref: '#/components/schemas/ClusterState'
        diagnosticsStorageAccountConfig:
          $ref: '#/components/schemas/DiagnosticsStorageAccountConfig'
          description: The storage account information for storing Service Fabric diagnostic logs.
        eventStoreServiceEnabled:
          type: boolean
          description: Indicates if the event store service is enabled.
        fabricSettings:
          type: array
          description: The list of custom fabric settings to configure the cluster.
          items:
            $ref: '#/components/schemas/SettingsSectionDescription'
        managementEndpoint:
          type: string
          description: The http management endpoint of the cluster.
        nodeTypes:
          type: array
          description: The list of node types in the cluster.
          items:
            $ref: '#/components/schemas/NodeTypeDescription'
        provisioningState:
          type: string
          description: The provisioning state of the cluster resource.
          readOnly: true
          enum:
            - Updating
            - Succeeded
            - Failed
            - Canceled
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
        reliabilityLevel:
          $ref: '#/components/schemas/ReliabilityLevel'
        reverseProxyCertificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: The server certificate used by reverse proxy.
        reverseProxyCertificateCommonNames:
          $ref: '#/components/schemas/ServerCertificateCommonNames'
        upgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradePolicy'
          description: The policy to use when upgrading the cluster.
        upgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        applicationTypeVersionsCleanupPolicy:
          $ref: '#/components/schemas/ApplicationTypeVersionsCleanupPolicy'
          description: The policy used to clean up unused versions.
        vmImage:
          type: string
          description: The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used.
        sfZonalUpgradeMode:
          $ref: '#/components/schemas/SfZonalUpgradeMode'
        vmssZonalUpgradeMode:
          $ref: '#/components/schemas/VmssZonalUpgradeMode'
        infrastructureServiceManager:
          type: boolean
          description: Indicates if infrastructure service manager is enabled.
        upgradeWave:
          $ref: '#/components/schemas/ClusterUpgradeCadence'
          description: Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.
        upgradePauseStartTimestampUtc:
          type: string
          format: date-time
          description: Indicates the start date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).
        upgradePauseEndTimestampUtc:
          type: string
          format: date-time
          description: Indicates the end date and time to pause automatic runtime version upgrades on the cluster for an specific period of time on the cluster (UTC).
        waveUpgradePaused:
          type: boolean
          description: Boolean to pause automatic runtime version upgrades to the cluster.
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
          description: Indicates a list of notification channels for cluster events.
      description: Describes the cluster resource properties.
    ClusterPropertiesUpdateParameters:
      type: object
      properties:
        addOnFeatures:
          type: array
          description: The list of add-on features to enable in the cluster.
          items:
            $ref: '#/components/schemas/AddOnFeatures'
        certificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client.
        certificateCommonNames:
          $ref: '#/components/schemas/ServerCertificateCommonNames'
        clientCertificateCommonNames:
          type: array
          description: The list of client certificates referenced by common name that are allowed to manage the cluster. This will overwrite the existing list.
          items:
            $ref: '#/components/schemas/ClientCertificateCommonName'
        clientCertificateThumbprints:
          type: array
          description: The list of client certificates referenced by thumbprint that are allowed to manage the cluster. This will overwrite the existing list.
          items:
            $ref: '#/components/schemas/ClientCertificateThumbprint'
        clusterCodeVersion:
          type: string
          description: The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](https://learn.microsoft.com/rest/api/servicefabric/cluster-versions/list). To get the list of available version for existing clusters use **availableClusterVersions**.
        eventStoreServiceEnabled:
          type: boolean
          description: Indicates if the event store service is enabled.
        fabricSettings:
          type: array
          description: The list of custom fabric settings to configure the cluster. This will overwrite the existing list.
          items:
            $ref: '#/components/schemas/SettingsSectionDescription'
        nodeTypes:
          type: array
          description: The list of node types in the cluster. This will overwrite the existing list.
          items:
            $ref: '#/components/schemas/NodeTypeDescription'
        reliabilityLevel:
          $ref: '#/components/schemas/ReliabilityLevel'
        reverseProxyCertificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: The server certificate used by reverse proxy.
        upgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradePolicy'
          description: The policy to use when upgrading the cluster.
        applicationTypeVersionsCleanupPolicy:
          $ref: '#/components/schemas/ApplicationTypeVersionsCleanupPolicy'
          description: The policy used to clean up unused versions.
        upgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
        sfZonalUpgradeMode:
          $ref: '#/components/schemas/SfZonalUpgradeMode'
        vmssZonalUpgradeMode:
          $ref: '#/components/schemas/VmssZonalUpgradeMode'
        infrastructureServiceManager:
          type: boolean
          description: Indicates if infrastructure service manager is enabled.
        upgradeWave:
          $ref: '#/components/schemas/ClusterUpgradeCadence'
          description: Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **upgradeMode** is set to 'Automatic'.
        upgradePauseStartTimestampUtc:
          type: string
          format: date-time
          description: The start timestamp to pause runtime version upgrades on the cluster (UTC).
        upgradePauseEndTimestampUtc:
          type: string
          format: date-time
          description: The end timestamp of pause runtime version upgrades on the cluster (UTC).
        waveUpgradePaused:
          type: boolean
          description: Boolean to pause automatic runtime version upgrades to the cluster.
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
          description: Indicates a list of notification channels for cluster events.
      description: Describes the cluster resource properties that can be updated during PATCH operation.
    ClusterState:
      type: string
      description: |
        The current state of the cluster.

          - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
          - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
          - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
          - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.
          - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.
          - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.
          - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.
          - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.
          - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.
          - Ready - Indicates that the cluster is in a stable state.
      enum:
        - WaitingForNodes
        - Deploying
        - BaselineUpgrade
        - UpdatingUserConfiguration
        - UpdatingUserCertificate
        - UpdatingInfrastructure
        - EnforcingClusterVersion
        - UpgradeServiceUnreachable
        - AutoScale
        - Ready
    ClusterUpdateParameters:
      description: Cluster update request
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClusterPropertiesUpdateParameters'
        tags:
          type: object
          description: Cluster update parameters
          additionalProperties:
            type: string
      type: object
    ClusterUpgradeDeltaHealthPolicy:
      type: object
      description: Describes the delta health policies for the cluster upgrade.
      required:
        - maxPercentDeltaUnhealthyApplications
        - maxPercentDeltaUnhealthyNodes
        - maxPercentUpgradeDomainDeltaUnhealthyNodes
      properties:
        maxPercentDeltaUnhealthyNodes:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.
            The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
          minimum: 0
          maximum: 100
        maxPercentUpgradeDomainDeltaUnhealthyNodes:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.
            The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.
          minimum: 0
          maximum: 100
        maxPercentDeltaUnhealthyApplications:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of applications health degradation allowed during cluster upgrades.
            The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.
          minimum: 0
          maximum: 100
        applicationDeltaHealthPolicies:
          $ref: '#/components/schemas/ApplicationDeltaHealthPolicyMap'
          description: Defines the application delta health policy map used to evaluate the health of an application or one of its child entities when upgrading the cluster.
    ClusterUpgradeCadence:
      type: string
      enum:
        - Wave0
        - Wave1
        - Wave2
      x-ms-enum:
        name: clusterUpgradeCadence
        modelAsString: true
        values:
          - value: Wave0
            description: Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters.
          - value: Wave1
            description: Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters.
          - value: Wave2
            description: Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters.
      description: Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0.
    ClusterUpgradePolicy:
      type: object
      required:
        - healthCheckRetryTimeout
        - healthCheckStableDuration
        - healthCheckWaitDuration
        - healthPolicy
        - upgradeDomainTimeout
        - upgradeReplicaSetCheckTimeout
        - upgradeTimeout
      properties:
        forceRestart:
          type: boolean
          description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
        upgradeReplicaSetCheckTimeout:
          type: string
          description: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        healthCheckWaitDuration:
          type: string
          description: The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        healthCheckStableDuration:
          type: string
          description: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        healthCheckRetryTimeout:
          type: string
          description: The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        upgradeTimeout:
          type: string
          description: The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        upgradeDomainTimeout:
          type: string
          description: The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        healthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
          description: The cluster health policy used when upgrading the cluster.
        deltaHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeDeltaHealthPolicy'
          description: The cluster delta health policy used when upgrading the cluster.
      description: Describes the policy used when upgrading the cluster.
    ClusterVersionDetails:
      type: object
      properties:
        codeVersion:
          type: string
          description: The Service Fabric runtime version of the cluster.
        supportExpiryUtc:
          type: string
          description: The date of expiry of support of the version.
        environment:
          $ref: '#/components/schemas/ClusterEnvironment'
          description: Indicates if this version is for Windows or Linux operating system.
      description: The detail of the Service Fabric runtime version result
    DiagnosticsStorageAccountConfig:
      type: object
      required:
        - blobEndpoint
        - protectedAccountKeyName
        - queueEndpoint
        - storageAccountName
        - tableEndpoint
      properties:
        storageAccountName:
          type: string
          description: The Azure storage account name.
        protectedAccountKeyName:
          type: string
          description: The protected diagnostics storage key name.
        protectedAccountKeyName2:
          type: string
          description: The secondary protected diagnostics storage key name. If one of the storage account keys is rotated the cluster will fallback to using the other.
        blobEndpoint:
          type: string
          description: The blob endpoint of the azure storage account.
        queueEndpoint:
          type: string
          description: The queue endpoint of the azure storage account.
        tableEndpoint:
          type: string
          description: The table endpoint of the azure storage account.
      description: The storage account information for storing Service Fabric diagnostic logs.
    DurabilityLevel:
      type: string
      description: |
        The durability level of the node type. Learn about [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

          - Bronze - No privileges. This is the default.
          - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.
          - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.
      enum:
        - Bronze
        - Silver
        - Gold
    EndpointRangeDescription:
      type: object
      required:
        - endPort
        - startPort
      properties:
        startPort:
          type: integer
          format: int32
          description: Starting port of a range of ports
        endPort:
          type: integer
          format: int32
          description: End port of a range of ports
      description: Port range details
    NodeTypeDescription:
      type: object
      required:
        - clientConnectionEndpointPort
        - httpGatewayEndpointPort
        - isPrimary
        - name
        - vmInstanceCount
      properties:
        name:
          type: string
          description: The name of the node type.
        placementProperties:
          type: object
          description: The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
          additionalProperties:
            type: string
            description: Placement tag value
        capacities:
          type: object
          description: The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
          additionalProperties:
            type: string
            description: Capacity tag value
        clientConnectionEndpointPort:
          type: integer
          format: int32
          description: The TCP cluster management endpoint port.
        httpGatewayEndpointPort:
          type: integer
          format: int32
          description: The HTTP cluster management endpoint port.
        durabilityLevel:
          $ref: '#/components/schemas/DurabilityLevel'
        applicationPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
          description: The range of ports from which cluster assigned port to Service Fabric applications.
        ephemeralPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
          description: The range of ephemeral ports that nodes in this node type should be configured with.
        isPrimary:
          type: boolean
          description: The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters.
        vmInstanceCount:
          type: integer
          format: int32
          description: 'VMInstanceCount should be 1 to n, where n indicates the number of VM instances corresponding to this nodeType. VMInstanceCount = 0 can be done only in these scenarios: NodeType is a secondary nodeType. Durability = Bronze or Durability >= Bronze and InfrastructureServiceManager = true. If VMInstanceCount = 0, implies the VMs for this nodeType will not be used for the initial cluster size computation.'
          minimum: 0
          maximum: 2147483647
        reverseProxyEndpointPort:
          type: integer
          format: int32
          description: The endpoint used by reverse proxy.
        isStateless:
          type: boolean
          description: Indicates if the node type can only host Stateless workloads.
        multipleAvailabilityZones:
          type: boolean
          description: Indicates if the node type is enabled to support multiple zones.
      description: Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.
    Notification:
      type: object
      required:
        - isEnabled
        - notificationCategory
        - notificationLevel
        - notificationTargets
      properties:
        isEnabled:
          type: boolean
          description: Indicates if the notification is enabled.
        notificationCategory:
          type: string
          description: The category of notification.
          enum:
            - WaveProgress
          x-ms-enum:
            name: notificationCategory
            modelAsString: true
            values:
              - value: WaveProgress
                description: Notification will be regarding wave progress.
        notificationLevel:
          type: string
          description: The level of notification.
          enum:
            - Critical
            - All
          x-ms-enum:
            name: notificationLevel
            modelAsString: true
            values:
              - value: Critical
                description: Receive only critical notifications.
              - value: All
                description: Receive all notifications.
        notificationTargets:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTarget'
          description: List of targets that subscribe to the notification.
      description: Describes the notification channel for cluster events.
    NotificationTarget:
      type: object
      required:
        - notificationChannel
        - receivers
      properties:
        notificationChannel:
          type: string
          description: The notification channel indicates the type of receivers subscribed to the notification, either user or subscription.
          enum:
            - EmailUser
            - EmailSubscription
          x-ms-enum:
            name: notificationChannel
            modelAsString: true
            values:
              - value: EmailUser
                description: For email user receivers. In this case, the parameter receivers should be a list of email addresses that will receive the notifications.
              - value: EmailSubscription
                description: For subscription receivers. In this case, the parameter receivers should be a list of roles of the subscription for the cluster (eg. Owner, AccountAdmin, etc) that will receive the notifications.
        receivers:
          type: array
          items:
            type: string
          description: List of targets that subscribe to the notification.
      description: Describes the notification target properties.
    OperationListResult:
      type: object
      properties:
        value:
          type: array
          description: List of operations supported by the Service Fabric resource provider.
          items:
            $ref: '#/components/schemas/OperationResult'
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
      description: Describes the result of the request to list Service Fabric resource provider operations.
    OperationResult:
      type: object
      properties:
        name:
          type: string
          description: The name of the operation.
        isDataAction:
          type: boolean
          description: Indicates whether the operation is a data action
        display:
          $ref: '#/components/schemas/AvailableOperationDisplay'
          description: The object that represents the operation.
        origin:
          type: string
          description: Origin result
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: Available operation list result
    ReliabilityLevel:
      type: string
      description: |
        The reliability level sets the replica set size of system services. Learn about [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

          - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
          - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
          - Silver - Run the System services with a target replica set count of 5.
          - Gold - Run the System services with a target replica set count of 7.
          - Platinum - Run the System services with a target replica set count of 9.
      enum:
        - None
        - Bronze
        - Silver
        - Gold
        - Platinum
    Resource:
      type: object
      required:
        - location
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Azure resource location.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      description: The resource model definition.
      x-ms-azure-resource: true
    ServerCertificateCommonName:
      type: object
      description: Describes the server certificate details using common name.
      required:
        - certificateCommonName
        - certificateIssuerThumbprint
      properties:
        certificateCommonName:
          type: string
          description: The common name of the server certificate.
        certificateIssuerThumbprint:
          type: string
          description: The issuer thumbprint of the server certificate.
    ServerCertificateCommonNames:
      type: object
      description: Describes a list of server certificates referenced by common name that are used to secure the cluster.
      properties:
        commonNames:
          type: array
          description: The list of server certificates referenced by common name that are used to secure the cluster.
          items:
            $ref: '#/components/schemas/ServerCertificateCommonName'
        x509StoreName:
          $ref: '#/components/schemas/StoreName'
    ServiceTypeDeltaHealthPolicy:
      type: object
      description: |
        Represents the delta health policy used to evaluate the health of services belonging to a service type when upgrading the cluster.
      properties:
        maxPercentDeltaUnhealthyServices:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of services health degradation allowed during cluster upgrades.
            The delta is measured between the state of the services at the beginning of upgrade and the state of the services at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
          default: 0
          minimum: 0
          maximum: 100
    ServiceTypeDeltaHealthPolicyMap:
      description: |
        Defines a map that contains specific delta health policies for different service types.
        Each entry specifies as key the service type name and as value a ServiceTypeDeltaHealthPolicy used to evaluate the service health when upgrading the cluster.
        The map is empty by default.
      additionalProperties:
        $ref: '#/components/schemas/ServiceTypeDeltaHealthPolicy'
      properties: {}
      type: object
    SettingsParameterDescription:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: The parameter name of fabric setting.
        value:
          type: string
          description: The parameter value of fabric setting.
      description: Describes a parameter in fabric settings of the cluster.
    SettingsSectionDescription:
      type: object
      required:
        - name
        - parameters
      properties:
        name:
          type: string
          description: The section name of the fabric settings.
        parameters:
          type: array
          description: The collection of parameters in the section.
          items:
            $ref: '#/components/schemas/SettingsParameterDescription'
      description: Describes a section in the fabric settings of the cluster.
    StoreName:
      type: string
      description: The local certificate store location.
      enum:
        - AddressBook
        - AuthRoot
        - CertificateAuthority
        - Disallowed
        - My
        - Root
        - TrustedPeople
        - TrustedPublisher
    UpgradableVersionPathResult:
      type: object
      properties:
        supportedPath:
          type: array
          items:
            type: string
            description: The cluster code version.
      description: The list of intermediate cluster code versions for an upgrade or downgrade. Or minimum and maximum upgradable version if no target was given
    UpgradableVersionsDescription:
      type: object
      required:
        - targetVersion
      properties:
        targetVersion:
          type: string
          description: The target code version.
    UpgradeMode:
      type: string
      description: The upgrade mode of the cluster when new Service Fabric runtime version is available.
      enum:
        - Automatic
        - Manual
      default: Automatic
      x-ms-enum:
        name: UpgradeMode
        modelAsString: true
        values:
          - value: Automatic
            description: The cluster will be automatically upgraded to the latest Service Fabric runtime version, **upgradeWave** will determine when the upgrade starts after the new version becomes available.
          - value: Manual
            description: The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
    SfZonalUpgradeMode:
      type: string
      enum:
        - Parallel
        - Hierarchical
      x-ms-enum:
        name: sfZonalUpgradeMode
        modelAsString: true
        values:
          - value: Parallel
            description: VMs under the node type are grouped into UDs and ignore the zone info in five UDs. This setting causes UDs across all zones to be upgraded at the same time. This deployment mode is faster for upgrades, we don't recommend it because it goes against the SDP guidelines, which state that the updates should be applied to one zone at a time.
          - value: Hierarchical
            description: If this value is omitted or set to Hierarchical, VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone. This update process is safer for the cluster and the user application.
      description: This property controls the logical grouping of VMs in upgrade domains (UDs). This property can't be modified if a node type with multiple Availability Zones is already present in the cluster.
    VmssZonalUpgradeMode:
      type: string
      enum:
        - Parallel
        - Hierarchical
      x-ms-enum:
        name: vmssZonalUpgradeMode
        modelAsString: true
        values:
          - value: Parallel
            description: Updates will happen in all Availability Zones at once for the virtual machine scale sets.
          - value: Hierarchical
            description: VMs are grouped to reflect the zonal distribution in up to 15 UDs. Each of the three zones has five UDs. This ensures that the zones are updated one at a time, moving to next zone only after completing five UDs within the first zone.
      description: This property defines the upgrade mode for the virtual machine scale set, it is mandatory if a node type with multiple Availability Zones is added.
    ServiceTypeHealthPolicy:
      type: object
      description: |
        Represents the health policy used to evaluate the health of services belonging to a service type.
      properties:
        maxPercentUnhealthyServices:
          type: integer
          format: int32
          description: |
            The maximum percentage of services allowed to be unhealthy before your application is considered in error.
          default: 0
          minimum: 0
          maximum: 100
    ServiceTypeHealthPolicyMap:
      description: |
        Defines a ServiceTypeHealthPolicy per service type name.

        The entries in the map replace the default service type health policy for each specified service type.
        For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.
        With policy per service type, there's more granular control of the health of the service.

        If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
      additionalProperties:
        $ref: '#/components/schemas/ServiceTypeHealthPolicy'
      properties: {}
      type: object
  x-stackQL-resources:
    application_types:
      id: azure.service_fabric.application_types
      name: application_types
      title: application_types
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_types/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_types/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_types/methods/delete'
    application_type_versions:
      id: azure.service_fabric.application_type_versions
      name: application_type_versions
      title: application_type_versions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1{version}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1{version}~1?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1{version}~1?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/delete'
    applications:
      id: azure.service_fabric.applications
      name: applications
      title: applications
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1?api-version=2021-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/applications/methods/get'
          - $ref: '#/components/x-stackQL-resources/applications/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete'
    services:
      id: azure.service_fabric.services
      name: services
      title: services
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}~1?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}~1?api-version=2021-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}~1?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1applications~1{applicationName}~1services~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    clusters:
      id: azure.service_fabric.clusters
      name: clusters
      title: clusters
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1?api-version=2021-06-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1?api-version=2021-06-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1?api-version=2021-06-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1clusters~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    cluster_versions:
      id: azure.service_fabric.cluster_versions
      name: cluster_versions
      title: cluster_versions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1clusterVersions~1{clusterVersion}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1environments~1{environment}~1clusterVersions~1{clusterVersion}~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1clusterVersions~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1environments~1{environment}~1clusterVersions~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cluster_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/cluster_versions/methods/list_by_environment'
          - $ref: '#/components/x-stackQL-resources/cluster_versions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    clusters_upgradable_versions:
      id: azure.service_fabric.clusters_upgradable_versions
      name: clusters_upgradable_versions
      title: clusters_upgradable_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1clusters~1{clusterName}~1listUpgradableVersions~1?api-version=2021-06-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters_upgradable_versions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.service_fabric.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ServiceFabric~1operations~1?api-version=2021-06-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_application_types:
      id: azure.service_fabric.vw_application_types
      name: vw_application_types
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationTypeName
              FROM azure.service_fabric.application_types
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationTypeName
                FROM azure.service_fabric.application_types
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_application_type_versions:
      id: azure.service_fabric.vw_application_type_versions
      name: vw_application_type_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.appPackageUrl') as app_package_url,
              JSON_EXTRACT(properties, '$.defaultParameterList') as default_parameter_list,
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationTypeName,
              version
              FROM azure.service_fabric.application_type_versions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationTypeName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.appPackageUrl') as app_package_url,
                JSON_EXTRACT(properties, '$.defaultParameterList') as default_parameter_list,
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationTypeName,
                version
                FROM azure.service_fabric.application_type_versions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationTypeName = 'replace-me';
    vw_applications:
      id: azure.service_fabric.vw_applications
      name: vw_applications
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              identity as identity,
              type as type,
              tags as tags,
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.typeVersion') as type_version,
              JSON_EXTRACT(properties, '$.parameters') as parameters,
              JSON_EXTRACT(properties, '$.upgradePolicy') as upgrade_policy,
              JSON_EXTRACT(properties, '$.minimumNodes') as minimum_nodes,
              JSON_EXTRACT(properties, '$.maximumNodes') as maximum_nodes,
              JSON_EXTRACT(properties, '$.removeApplicationCapacity') as remove_application_capacity,
              JSON_EXTRACT(properties, '$.metrics') as metrics,
              JSON_EXTRACT(properties, '$.managedIdentities') as managed_identities,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.typeName') as type_name,
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationName
              FROM azure.service_fabric.applications
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                identity as identity,
                type as type,
                tags as tags,
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.typeVersion') as type_version,
                JSON_EXTRACT(properties, '$.parameters') as parameters,
                JSON_EXTRACT(properties, '$.upgradePolicy') as upgrade_policy,
                JSON_EXTRACT(properties, '$.minimumNodes') as minimum_nodes,
                JSON_EXTRACT(properties, '$.maximumNodes') as maximum_nodes,
                JSON_EXTRACT(properties, '$.removeApplicationCapacity') as remove_application_capacity,
                JSON_EXTRACT(properties, '$.metrics') as metrics,
                JSON_EXTRACT(properties, '$.managedIdentities') as managed_identities,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.typeName') as type_name,
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationName
                FROM azure.service_fabric.applications
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_services:
      id: azure.service_fabric.vw_services
      name: vw_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.placementConstraints') as placement_constraints,
              JSON_EXTRACT(properties, '$.correlationScheme') as correlation_scheme,
              JSON_EXTRACT(properties, '$.serviceLoadMetrics') as service_load_metrics,
              JSON_EXTRACT(properties, '$.servicePlacementPolicies') as service_placement_policies,
              JSON_EXTRACT(properties, '$.defaultMoveCost') as default_move_cost,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.serviceKind') as service_kind,
              JSON_EXTRACT(properties, '$.serviceTypeName') as service_type_name,
              JSON_EXTRACT(properties, '$.partitionDescription') as partition_description,
              JSON_EXTRACT(properties, '$.servicePackageActivationMode') as service_package_activation_mode,
              JSON_EXTRACT(properties, '$.serviceDnsName') as service_dns_name,
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationName,
              serviceName
              FROM azure.service_fabric.services
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.placementConstraints') as placement_constraints,
                JSON_EXTRACT(properties, '$.correlationScheme') as correlation_scheme,
                JSON_EXTRACT(properties, '$.serviceLoadMetrics') as service_load_metrics,
                JSON_EXTRACT(properties, '$.servicePlacementPolicies') as service_placement_policies,
                JSON_EXTRACT(properties, '$.defaultMoveCost') as default_move_cost,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.serviceKind') as service_kind,
                JSON_EXTRACT(properties, '$.serviceTypeName') as service_type_name,
                JSON_EXTRACT(properties, '$.partitionDescription') as partition_description,
                JSON_EXTRACT(properties, '$.servicePackageActivationMode') as service_package_activation_mode,
                JSON_EXTRACT(properties, '$.serviceDnsName') as service_dns_name,
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationName,
                serviceName
                FROM azure.service_fabric.services
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationName = 'replace-me';
    vw_clusters:
      id: azure.service_fabric.vw_clusters
      name: vw_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.addOnFeatures') as add_on_features,
              JSON_EXTRACT(properties, '$.availableClusterVersions') as available_cluster_versions,
              JSON_EXTRACT(properties, '$.azureActiveDirectory') as azure_active_directory,
              JSON_EXTRACT(properties, '$.certificate') as certificate,
              JSON_EXTRACT(properties, '$.certificateCommonNames') as certificate_common_names,
              JSON_EXTRACT(properties, '$.clientCertificateCommonNames') as client_certificate_common_names,
              JSON_EXTRACT(properties, '$.clientCertificateThumbprints') as client_certificate_thumbprints,
              JSON_EXTRACT(properties, '$.clusterCodeVersion') as cluster_code_version,
              JSON_EXTRACT(properties, '$.clusterEndpoint') as cluster_endpoint,
              JSON_EXTRACT(properties, '$.clusterId') as cluster_id,
              JSON_EXTRACT(properties, '$.clusterState') as cluster_state,
              JSON_EXTRACT(properties, '$.diagnosticsStorageAccountConfig') as diagnostics_storage_account_config,
              JSON_EXTRACT(properties, '$.eventStoreServiceEnabled') as event_store_service_enabled,
              JSON_EXTRACT(properties, '$.fabricSettings') as fabric_settings,
              JSON_EXTRACT(properties, '$.managementEndpoint') as management_endpoint,
              JSON_EXTRACT(properties, '$.nodeTypes') as node_types,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.reliabilityLevel') as reliability_level,
              JSON_EXTRACT(properties, '$.reverseProxyCertificate') as reverse_proxy_certificate,
              JSON_EXTRACT(properties, '$.reverseProxyCertificateCommonNames') as reverse_proxy_certificate_common_names,
              JSON_EXTRACT(properties, '$.upgradeDescription') as upgrade_description,
              JSON_EXTRACT(properties, '$.upgradeMode') as upgrade_mode,
              JSON_EXTRACT(properties, '$.applicationTypeVersionsCleanupPolicy') as application_type_versions_cleanup_policy,
              JSON_EXTRACT(properties, '$.vmImage') as vm_image,
              JSON_EXTRACT(properties, '$.sfZonalUpgradeMode') as sf_zonal_upgrade_mode,
              JSON_EXTRACT(properties, '$.vmssZonalUpgradeMode') as vmss_zonal_upgrade_mode,
              JSON_EXTRACT(properties, '$.infrastructureServiceManager') as infrastructure_service_manager,
              JSON_EXTRACT(properties, '$.upgradeWave') as upgrade_wave,
              JSON_EXTRACT(properties, '$.upgradePauseStartTimestampUtc') as upgrade_pause_start_timestamp_utc,
              JSON_EXTRACT(properties, '$.upgradePauseEndTimestampUtc') as upgrade_pause_end_timestamp_utc,
              JSON_EXTRACT(properties, '$.waveUpgradePaused') as wave_upgrade_paused,
              JSON_EXTRACT(properties, '$.notifications') as notifications,
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure.service_fabric.clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.addOnFeatures') as add_on_features,
                JSON_EXTRACT(properties, '$.availableClusterVersions') as available_cluster_versions,
                JSON_EXTRACT(properties, '$.azureActiveDirectory') as azure_active_directory,
                JSON_EXTRACT(properties, '$.certificate') as certificate,
                JSON_EXTRACT(properties, '$.certificateCommonNames') as certificate_common_names,
                JSON_EXTRACT(properties, '$.clientCertificateCommonNames') as client_certificate_common_names,
                JSON_EXTRACT(properties, '$.clientCertificateThumbprints') as client_certificate_thumbprints,
                JSON_EXTRACT(properties, '$.clusterCodeVersion') as cluster_code_version,
                JSON_EXTRACT(properties, '$.clusterEndpoint') as cluster_endpoint,
                JSON_EXTRACT(properties, '$.clusterId') as cluster_id,
                JSON_EXTRACT(properties, '$.clusterState') as cluster_state,
                JSON_EXTRACT(properties, '$.diagnosticsStorageAccountConfig') as diagnostics_storage_account_config,
                JSON_EXTRACT(properties, '$.eventStoreServiceEnabled') as event_store_service_enabled,
                JSON_EXTRACT(properties, '$.fabricSettings') as fabric_settings,
                JSON_EXTRACT(properties, '$.managementEndpoint') as management_endpoint,
                JSON_EXTRACT(properties, '$.nodeTypes') as node_types,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.reliabilityLevel') as reliability_level,
                JSON_EXTRACT(properties, '$.reverseProxyCertificate') as reverse_proxy_certificate,
                JSON_EXTRACT(properties, '$.reverseProxyCertificateCommonNames') as reverse_proxy_certificate_common_names,
                JSON_EXTRACT(properties, '$.upgradeDescription') as upgrade_description,
                JSON_EXTRACT(properties, '$.upgradeMode') as upgrade_mode,
                JSON_EXTRACT(properties, '$.applicationTypeVersionsCleanupPolicy') as application_type_versions_cleanup_policy,
                JSON_EXTRACT(properties, '$.vmImage') as vm_image,
                JSON_EXTRACT(properties, '$.sfZonalUpgradeMode') as sf_zonal_upgrade_mode,
                JSON_EXTRACT(properties, '$.vmssZonalUpgradeMode') as vmss_zonal_upgrade_mode,
                JSON_EXTRACT(properties, '$.infrastructureServiceManager') as infrastructure_service_manager,
                JSON_EXTRACT(properties, '$.upgradeWave') as upgrade_wave,
                JSON_EXTRACT(properties, '$.upgradePauseStartTimestampUtc') as upgrade_pause_start_timestamp_utc,
                JSON_EXTRACT(properties, '$.upgradePauseEndTimestampUtc') as upgrade_pause_end_timestamp_utc,
                JSON_EXTRACT(properties, '$.waveUpgradePaused') as wave_upgrade_paused,
                JSON_EXTRACT(properties, '$.notifications') as notifications,
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure.service_fabric.clusters
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/?api-version=2021-06-01:
    get:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_Get
      summary: Gets a Service Fabric application type name resource.
      description: Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_CreateOrUpdate
      summary: Creates or updates a Service Fabric application type name resource.
      description: Create or update a Service Fabric application type name resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application type name resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTypeResource'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_Delete
      summary: Deletes a Service Fabric application type name resource.
      description: Delete a Service Fabric application type name resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/?api-version=2021-06-01:
    get:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_List
      summary: Gets the list of application type name resources created in the specified Service Fabric cluster resource.
      description: Gets all application type name resources created or in the process of being created in the Service Fabric cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}/?api-version=2021-06-01:
    get:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_Get
      summary: Gets a Service Fabric application type version resource.
      description: Get a Service Fabric application type version resource created or in the process of being created in the Service Fabric application type name resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_CreateOrUpdate
      summary: Creates or updates a Service Fabric application type version resource.
      description: Create or update a Service Fabric application type version resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application type version resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTypeVersionResource'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_Delete
      summary: Deletes a Service Fabric application type version resource.
      description: Delete a Service Fabric application type version resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/?api-version=2021-06-01:
    get:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_List
      summary: Gets the list of application type version resources created in the specified Service Fabric application type name resource.
      description: Gets all application type version resources created or in the process of being created in the Service Fabric application type name resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/?api-version=2021-06-01:
    get:
      tags:
        - Application
      operationId: Applications_Get
      summary: Gets a Service Fabric application resource.
      description: Get a Service Fabric application resource created or in the process of being created in the Service Fabric cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - Application
      operationId: Applications_CreateOrUpdate
      summary: Creates or updates a Service Fabric application resource.
      description: Create or update a Service Fabric application resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - Application
      operationId: Applications_Update
      summary: Updates a Service Fabric application resource.
      description: Update a Service Fabric application resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application resource for patch operations.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResourceUpdate'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - Application
      operationId: Applications_Delete
      summary: Deletes a Service Fabric application resource.
      description: Delete a Service Fabric application resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/?api-version=2021-06-01:
    get:
      tags:
        - Application
      operationId: Applications_List
      summary: Gets the list of application resources created in the specified Service Fabric cluster resource.
      description: Gets all application resources created or in the process of being created in the Service Fabric cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services/{serviceName}/?api-version=2021-06-01:
    get:
      tags:
        - Service
      operationId: Services_Get
      summary: Gets a Service Fabric service resource.
      description: Get a Service Fabric service resource created or in the process of being created in the Service Fabric application resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - Service
      operationId: Services_CreateOrUpdate
      summary: Creates or updates a Service Fabric service resource.
      description: Create or update a Service Fabric service resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The service resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResource'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - Service
      operationId: Services_Update
      summary: Updates a Service Fabric service resource.
      description: Update a Service Fabric service resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The service resource for patch operations.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResourceUpdate'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - Service
      operationId: Services_Delete
      summary: Deletes a Service Fabric service resource.
      description: Delete a Service Fabric service resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      responses:
        '202':
          description: The request was accepted and the operation will complete asynchronously.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applications/{applicationName}/services/?api-version=2021-06-01:
    get:
      tags:
        - Service
      operationId: Services_List
      summary: Gets the list of service resources created in the specified Service Fabric application resource.
      description: Gets all service resources created or in the process of being created in the Service Fabric application resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/?api-version=2021-06-01:
    get:
      tags:
        - Cluster
      operationId: Clusters_Get
      summary: Gets a Service Fabric cluster resource.
      description: Get a Service Fabric cluster resource created or in the process of being created in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - Cluster
      operationId: Clusters_CreateOrUpdate
      summary: Creates or updates a Service Fabric cluster resource.
      description: Create or update a Service Fabric cluster resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      requestBody:
        description: The cluster resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      x-ms-long-running-operation: true
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - Cluster
      operationId: Clusters_Update
      summary: Updates the configuration of a Service Fabric cluster resource.
      description: Update the configuration of a Service Fabric cluster resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      requestBody:
        description: The parameters which contains the property value and property name which used to update the cluster configuration.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdateParameters'
      x-ms-long-running-operation: true
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - Cluster
      operationId: Clusters_Delete
      summary: Deletes a Service Fabric cluster resource.
      description: Delete a Service Fabric cluster resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/?api-version=2021-06-01:
    get:
      operationId: Clusters_ListByResourceGroup
      summary: Gets the list of Service Fabric cluster resources created in the specified resource group.
      description: Gets all Service Fabric cluster resources created or in the process of being created in the resource group.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - Cluster
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters/?api-version=2021-06-01:
    get:
      operationId: Clusters_List
      summary: Gets the list of Service Fabric cluster resources created in the specified subscription.
      description: Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - Cluster
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}/?api-version=2021-06-01:
    get:
      operationId: ClusterVersions_Get
      summary: Gets information about a Service Fabric cluster code version available in the specified location.
      description: Gets information about an available Service Fabric cluster code version.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/clusterVersion'
      tags:
        - ClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}/?api-version=2021-06-01:
    get:
      operationId: ClusterVersions_GetByEnvironment
      summary: Gets information about a Service Fabric cluster code version available for the specified environment.
      description: Gets information about an available Service Fabric cluster code version by environment.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/clusterVersion'
      tags:
        - ClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/?api-version=2021-06-01:
    get:
      operationId: ClusterVersions_List
      summary: Gets the list of Service Fabric cluster code versions available for the specified location.
      description: Gets all available code versions for Service Fabric cluster resources by location.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - ClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/?api-version=2021-06-01:
    get:
      operationId: ClusterVersions_ListByEnvironment
      summary: Gets the list of Service Fabric cluster code versions available for the specified environment.
      description: Gets all available code versions for Service Fabric cluster resources by environment.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - ClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/listUpgradableVersions/?api-version=2021-06-01:
    post:
      operationId: Clusters_ListUpgradableVersions
      summary: Operation to get the minimum and maximum upgradable version from the current cluster version, or the required path to get to the an specific target version.
      description: If a target is not provided, it will get the minimum and maximum versions available from the current cluster version. If a target is given, it will provide the required path to get from the current cluster version to the target version.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The upgrade path description with target version.
        x-ms-requestBody-name: versionsDescription
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpgradableVersionsDescription'
      tags:
        - ListUpgradableVersions
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradableVersionPathResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /providers/Microsoft.ServiceFabric/operations/?api-version=2021-06-01:
    get:
      tags:
        - Operations
      summary: Lists all of the available Service Fabric resource provider API operations.
      description: Get the list of available Service Fabric resource provider API operations.
      operationId: Operations_List
      parameters:
        - name: api-version
          in: query
          description: The version of the Service Fabric resource provider API
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
