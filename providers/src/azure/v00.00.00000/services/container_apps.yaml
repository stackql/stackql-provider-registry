openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Container Apps
  description: Azure Container Apps allows you to run containerized applications without worrying about orchestration or infrastructure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    JobNameParameter:
      name: jobName
      in: path
      description: Job Name
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        type: string
    JobExecutionNameParameter:
      name: jobExecutionName
      in: path
      description: Job execution name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        type: string
  schemas:
    BillingMeter:
      description: Billing meter.
      properties:
        location:
          type: string
          description: Region for the billing meter.
        properties:
          description: Revision resource specific properties
          type: object
          properties:
            category:
              description: Used to categorize billing meters.
              type: string
            meterType:
              type: string
              description: Billing meter type.
            displayName:
              type: string
              description: The everyday name of the billing meter.
      type: object
    BillingMeterCollection:
      description: Collection of billing meters.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of billing meters.
          type: array
          items:
            $ref: '#/components/schemas/BillingMeter'
    AppLogsConfiguration:
      description: Configuration of application logs
      type: object
      properties:
        destination:
          description: Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'
          type: string
        logAnalyticsConfiguration:
          description: Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
          $ref: '#/components/schemas/LogAnalyticsConfiguration'
    KedaConfiguration:
      type: object
      description: Configuration properties Keda component
      properties:
        version:
          type: string
          readOnly: true
          description: The version of Keda
    DaprConfiguration:
      type: object
      description: Configuration properties Dapr component
      properties:
        version:
          type: string
          readOnly: true
          description: The version of Dapr
    VnetConfiguration:
      type: object
      description: Configuration properties for apps environment to join a Virtual Network
      properties:
        internal:
          type: boolean
          description: Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property
          x-ms-mutability:
            - create
            - read
        infrastructureSubnetId:
          type: string
          description: Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
          x-ms-mutability:
            - create
            - read
        dockerBridgeCidr:
          type: string
          description: CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
          x-ms-mutability:
            - create
            - read
        platformReservedCidr:
          type: string
          description: IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.
          x-ms-mutability:
            - create
            - read
        platformReservedDnsIP:
          type: string
          description: ' An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.'
          x-ms-mutability:
            - create
            - read
    Mtls:
      type: object
      description: Configuration properties for mutual TLS authentication
      properties:
        enabled:
          type: boolean
          description: Boolean indicating whether the mutual TLS authentication is enabled
    ManagedEnvironment:
      description: An environment for hosting container apps
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        kind:
          type: string
          description: Kind of the Environment.
        properties:
          description: Managed environment resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Environment.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - Waiting
                - InitializationInProgress
                - InfrastructureSetupInProgress
                - InfrastructureSetupComplete
                - ScheduledForDelete
                - UpgradeRequested
                - UpgradeFailed
              type: string
              readOnly: true
              x-ms-enum:
                name: EnvironmentProvisioningState
                modelAsString: true
            daprAIInstrumentationKey:
              type: string
              description: Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
              x-ms-secret: true
            daprAIConnectionString:
              type: string
              description: Application Insights connection string used by Dapr to export Service to Service communication telemetry
              x-ms-secret: true
            vnetConfiguration:
              description: Vnet configuration for the environment
              $ref: '#/components/schemas/VnetConfiguration'
            deploymentErrors:
              description: Any errors that occurred during deployment or deployment validation
              type: string
              readOnly: true
            defaultDomain:
              description: Default Domain Name for the cluster
              type: string
              readOnly: true
            staticIp:
              description: Static IP of the Environment
              type: string
              readOnly: true
            appLogsConfiguration:
              $ref: '#/components/schemas/AppLogsConfiguration'
              description: |-
                Cluster configuration which enables the log daemon to export
                app logs to a destination. Currently only "log-analytics" is
                supported
            zoneRedundant:
              description: Whether or not this Managed Environment is zone-redundant.
              type: boolean
              x-ms-mutability:
                - create
                - read
            customDomainConfiguration:
              $ref: '#/components/schemas/CustomDomainConfiguration'
              description: Custom domain configuration for the environment
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the Environment.
              type: string
              readOnly: true
            workloadProfiles:
              description: Workload profiles configured for the Managed Environment.
              type: array
              items:
                $ref: '#/components/schemas/WorkloadProfile'
              x-ms-identifiers:
                - name
            kedaConfiguration:
              $ref: '#/components/schemas/KedaConfiguration'
              description: The configuration of Keda component.
            daprConfiguration:
              $ref: '#/components/schemas/DaprConfiguration'
              description: The configuration of Dapr component.
            infrastructureResourceGroup:
              description: Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.
              type: string
              x-ms-mutability:
                - create
                - read
            peerAuthentication:
              description: Peer authentication settings for the Managed Environment
              type: object
              properties:
                mtls:
                  description: Mutual TLS authentication settings for the Managed Environment
                  $ref: '#/components/schemas/Mtls'
            peerTrafficConfiguration:
              description: Peer traffic settings for the Managed Environment
              type: object
              properties:
                encryption:
                  description: Peer traffic encryption settings for the Managed Environment
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      description: Boolean indicating whether the peer traffic encryption is enabled
          x-ms-client-flatten: true
      type: object
    ManagedEnvironmentsCollection:
      description: Collection of Environments
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ManagedEnvironment'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    LogAnalyticsConfiguration:
      description: Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
      type: object
      properties:
        customerId:
          description: Log analytics customer id
          type: string
        sharedKey:
          description: Log analytics customer key
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    EnvironmentAuthToken:
      description: Environment Auth Token.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Environment auth token resource specific properties
          type: object
          properties:
            token:
              description: Auth token value.
              type: string
              x-ms-secret: true
              readOnly: true
            expires:
              format: date-time
              description: Token expiration date.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    WorkloadProfile:
      description: Workload profile to scope container app execution.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/WorkloadProfileName'
          description: Workload profile type for the workloads to run on.
        workloadProfileType:
          $ref: '#/components/schemas/WorkloadProfileType'
          description: Workload profile type for the workloads to run on.
        minimumCount:
          type: integer
          format: int32
          description: The minimum capacity.
        maximumCount:
          type: integer
          format: int32
          description: The maximum capacity.
      required:
        - name
        - workloadProfileType
    workloadProfileStates:
      description: Collection of all the workload Profile States for a Managed Environment..
      properties:
        properties:
          description: Workload Profile resource specific properties.
          type: object
          properties:
            minimumCount:
              type: integer
              format: int32
              description: Minimum count of instances.
            maximumCount:
              type: integer
              format: int32
              description: Maximum count of nodes.
            currentCount:
              type: integer
              format: int32
              description: Current count of nodes.
      type: object
    workloadProfileStatesCollection:
      description: Collection of workloadProfileStates
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/workloadProfileStates'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    EnvironmentVar:
      description: Container App container environment variable.
      type: object
      properties:
        name:
          description: Environment variable name.
          type: string
        value:
          description: Non-secret environment variable value.
          type: string
        secretRef:
          description: Name of the Container App secret from which to pull the environment variable value.
          type: string
    WorkloadProfileName:
      description: Workload profile name for container apps to execute on.
      type: string
    WorkloadProfileType:
      description: Workload profile type for container apps to execute on.
      type: string
    BaseContainer:
      description: Container App base container definition.
      type: object
      properties:
        image:
          description: Container image tag.
          type: string
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
        volumeMounts:
          description: Container volume mounts.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
          x-ms-identifiers:
            - volumeName
    InitContainer:
      description: Container App init container definition
      properties:
        image:
          description: Container image tag.
          type: string
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
        volumeMounts:
          description: Container volume mounts.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
          x-ms-identifiers:
            - volumeName
      type: object
    Container:
      description: Container App container definition
      properties:
        image:
          description: Container image tag.
          type: string
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
        volumeMounts:
          description: Container volume mounts.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
          x-ms-identifiers:
            - volumeName
        probes:
          description: List of probes for the container.
          type: array
          items:
            $ref: '#/components/schemas/ContainerAppProbe'
          x-ms-identifiers:
            - type
      type: object
    ContainerResources:
      description: Container App container resource requirements.
      type: object
      properties:
        cpu:
          format: double
          description: Required CPU in cores, e.g. 0.5
          type: number
        memory:
          description: Required memory, e.g. "250Mb"
          type: string
        ephemeralStorage:
          description: Ephemeral Storage, e.g. "1Gi"
          type: string
          readOnly: true
    ContainerAppProbe:
      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
      type: object
      properties:
        failureThreshold:
          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.
          type: integer
          format: int32
        httpGet:
          description: HTTPGet specifies the http request to perform.
          type: object
          required:
            - port
          properties:
            host:
              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
              type: string
            httpHeaders:
              description: Custom headers to set in the request. HTTP allows repeated headers.
              type: array
              items:
                description: HTTPHeader describes a custom header to be used in HTTP probes
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    description: The header field name
                    type: string
                  value:
                    description: The header field value
                    type: string
              x-ms-identifiers:
                - name
            path:
              description: Path to access on the HTTP server.
              type: string
            port:
              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
              type: integer
              format: int32
            scheme:
              description: Scheme to use for connecting to the host. Defaults to HTTP.
              enum:
                - HTTP
                - HTTPS
              type: string
              x-ms-enum:
                name: Scheme
                modelAsString: true
        initialDelaySeconds:
          description: Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.
          type: integer
          format: int32
        periodSeconds:
          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.
          type: integer
          format: int32
        successThreshold:
          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.
          type: integer
          format: int32
        tcpSocket:
          description: TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.
          type: object
          required:
            - port
          properties:
            host:
              description: 'Optional: Host name to connect to, defaults to the pod IP.'
              type: string
            port:
              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
              type: integer
              format: int32
        terminationGracePeriodSeconds:
          description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)
          type: integer
          format: int64
        timeoutSeconds:
          description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.
          type: integer
          format: int32
        type:
          description: The type of probe.
          enum:
            - Liveness
            - Readiness
            - Startup
          type: string
          x-ms-enum:
            name: Type
            modelAsString: true
    CustomScaleRule:
      description: Container App container Custom scaling rule.
      type: object
      properties:
        type:
          description: |-
            Type of the custom scale rule
            eg: azure-servicebus, redis etc.
          type: string
        metadata:
          description: Metadata properties to describe custom scale rule.
          type: object
          additionalProperties:
            type: string
        auth:
          description: Authentication secrets for the custom scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
    CustomDomainConfiguration:
      type: object
      description: Configuration properties for apps environment custom domain
      properties:
        customDomainVerificationId:
          description: Id used to verify domain name ownership
          type: string
          readOnly: true
        dnsSuffix:
          type: string
          description: Dns suffix for the environment domain
          x-ms-mutability:
            - create
            - read
        certificateValue:
          format: byte
          description: PFX or PEM blob
          type: string
          x-ms-secret: true
        certificatePassword:
          description: Certificate password
          type: string
          x-ms-secret: true
        expirationDate:
          format: date-time
          description: Certificate expiration date.
          type: string
          readOnly: true
        thumbprint:
          description: Certificate thumbprint.
          type: string
          readOnly: true
        subjectName:
          description: Subject name of the certificate.
          type: string
          readOnly: true
    DefaultErrorResponse:
      description: App Service error response.
      type: object
      properties:
        error:
          description: Error model.
          type: object
          properties:
            code:
              description: Standardized string to programmatically identify the error.
              type: string
              readOnly: true
            message:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            target:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            details:
              type: array
              description: Details or the error
              items:
                description: Detailed errors.
                type: object
                properties:
                  code:
                    description: Standardized string to programmatically identify the error.
                    type: string
                    readOnly: true
                  message:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                  target:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                readOnly: true
              x-ms-identifiers:
                - code
            innererror:
              description: More information to debug error.
              type: string
              readOnly: true
          readOnly: true
    HttpScaleRule:
      description: Container App container Http scaling rule.
      type: object
      properties:
        metadata:
          description: Metadata properties to describe http scale rule.
          type: object
          additionalProperties:
            type: string
        auth:
          description: Authentication secrets for the custom scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
    TcpScaleRule:
      description: Container App container Tcp scaling rule.
      type: object
      properties:
        metadata:
          description: Metadata properties to describe tcp scale rule.
          type: object
          additionalProperties:
            type: string
        auth:
          description: Authentication secrets for the tcp scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
    QueueScaleRule:
      description: Container App container Azure Queue based scaling rule.
      type: object
      properties:
        queueName:
          description: Queue name.
          type: string
        queueLength:
          format: int32
          description: Queue length.
          type: integer
        auth:
          description: Authentication secrets for the queue scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
    Scale:
      description: Container App scaling configurations.
      type: object
      properties:
        minReplicas:
          format: int32
          description: Optional. Minimum number of container replicas.
          type: integer
        maxReplicas:
          format: int32
          description: Optional. Maximum number of container replicas. Defaults to 10 if not set.
          type: integer
          default: 10
        rules:
          description: Scaling rules.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRule'
          x-ms-identifiers:
            - name
    ScaleRule:
      description: Container App container scaling rule.
      type: object
      properties:
        name:
          description: Scale Rule Name
          type: string
        azureQueue:
          $ref: '#/components/schemas/QueueScaleRule'
          description: Azure Queue based scaling.
        custom:
          $ref: '#/components/schemas/CustomScaleRule'
          description: Custom scale rule.
        http:
          $ref: '#/components/schemas/HttpScaleRule'
          description: HTTP requests based scaling.
        tcp:
          $ref: '#/components/schemas/TcpScaleRule'
          description: Tcp requests based scaling.
    ScaleRuleAuth:
      description: Auth Secrets for Scale Rule
      type: object
      properties:
        secretRef:
          description: Name of the secret from which to pull the auth params.
          type: string
        triggerParameter:
          description: Trigger Parameter that uses the secret
          type: string
    Secret:
      description: Secret definition.
      type: object
      properties:
        name:
          description: Secret Name.
          type: string
        value:
          description: Secret Value.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        identity:
          description: Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
          type: string
        keyVaultUrl:
          description: Azure Key Vault URL pointing to the secret referenced by the container app.
          type: string
    Template:
      description: |-
        Container App versioned application definition.
        Defines the desired state of an immutable revision.
        Any changes to this section Will result in a new revision being created
      type: object
      properties:
        revisionSuffix:
          description: User friendly suffix that is appended to the revision name
          type: string
        terminationGracePeriodSeconds:
          description: Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
          format: int64
          type: integer
        initContainers:
          description: List of specialized containers that run before app containers.
          type: array
          items:
            $ref: '#/components/schemas/InitContainer'
          x-ms-identifiers:
            - name
        containers:
          description: List of container definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Container'
          x-ms-identifiers:
            - name
        scale:
          $ref: '#/components/schemas/Scale'
          description: Scaling properties for the Container App.
        volumes:
          description: List of volume definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          x-ms-identifiers:
            - name
        serviceBinds:
          description: List of container app services bound to the app
          type: array
          items:
            $ref: '#/components/schemas/ServiceBind'
          x-ms-identifier:
            - name
    Volume:
      description: Volume definitions for the Container App.
      type: object
      properties:
        name:
          description: Volume name.
          type: string
        storageType:
          description: Storage type for the volume. If not provided, use EmptyDir.
          enum:
            - AzureFile
            - EmptyDir
            - Secret
          type: string
          x-ms-enum:
            name: StorageType
            modelAsString: true
        storageName:
          description: Name of storage resource. No need to provide for EmptyDir and Secret.
          type: string
        secrets:
          description: List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
          type: array
          items:
            $ref: '#/components/schemas/SecretVolumeItem'
          x-ms-identifiers:
            - secretRef
        mountOptions:
          description: Mount options used while mounting the AzureFile. Must be a comma-separated string.
          type: string
    SecretVolumeItem:
      description: Secret to be added to volume.
      type: object
      properties:
        secretRef:
          description: Name of the Container App secret from which to pull the secret value.
          type: string
        path:
          description: Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.
          type: string
    VolumeMount:
      description: Volume mount for the Container App.
      type: object
      properties:
        volumeName:
          description: This must match the Name of a Volume.
          type: string
        mountPath:
          description: Path within the container at which the volume should be mounted.Must not contain ':'.
          type: string
        subPath:
          description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
          type: string
    DaprComponentsCollection:
      description: Dapr Components ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/DaprComponent'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    DaprComponent:
      description: Dapr Component.
      properties:
        properties:
          description: Dapr Component resource specific properties
          type: object
          properties:
            componentType:
              description: Component type
              type: string
            version:
              description: Component version
              type: string
            ignoreErrors:
              description: Boolean describing if the component errors are ignores
              type: boolean
              default: false
            initTimeout:
              description: Initialization timeout
              type: string
            secrets:
              description: Collection of secrets used by a Dapr component
              type: array
              items:
                $ref: '#/components/schemas/Secret'
              x-ms-identifiers:
                - name
            secretStoreComponent:
              description: Name of a Dapr component to retrieve component secrets from
              type: string
            metadata:
              description: Component metadata
              type: array
              items:
                $ref: '#/components/schemas/DaprMetadata'
              x-ms-identifiers:
                - name
            scopes:
              description: Names of container apps that can use this Dapr component
              type: array
              items:
                type: string
          x-ms-client-flatten: true
      type: object
    DaprMetadata:
      description: Dapr component metadata.
      type: object
      properties:
        name:
          description: Metadata property name.
          type: string
        value:
          description: Metadata property value.
          type: string
        secretRef:
          description: Name of the Dapr Component secret from which to pull the metadata property value.
          type: string
    DaprSecretsCollection:
      description: Dapr component Secrets Collection for ListSecrets Action.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of secrets used by a Dapr component
          type: array
          items:
            $ref: '#/components/schemas/DaprSecret'
          x-ms-identifiers:
            - name
    DaprSecret:
      description: Dapr component Secret for ListSecrets Action
      type: object
      properties:
        name:
          description: Secret Name.
          type: string
          readOnly: true
        value:
          description: Secret Value.
          type: string
          x-ms-secret: true
          readOnly: true
    ExtendedLocation:
      type: object
      description: The complex type of the extended location.
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
    ExtendedLocationType:
      type: string
      description: The type of extendedLocation.
      enum:
        - CustomLocation
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    AzureFileProperties:
      description: Azure File Properties.
      type: object
      properties:
        accountName:
          description: Storage account name for azure file.
          type: string
        accountKey:
          description: Storage account key for azure file.
          type: string
          x-ms-secret: true
        accessMode:
          description: Access mode for storage
          enum:
            - ReadOnly
            - ReadWrite
          type: string
          x-ms-enum:
            name: AccessMode
            modelAsString: true
        shareName:
          description: Azure file share name.
          type: string
    Certificate:
      description: Certificate used for Custom Domain bindings of Container Apps in a Managed Environment
      x-ms-client-flatten: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Certificate resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the certificate.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - DeleteFailed
                - Pending
              type: string
              readOnly: true
              x-ms-enum:
                name: CertificateProvisioningState
                modelAsString: true
            password:
              description: Certificate password.
              type: string
              x-ms-mutability:
                - create
              x-ms-secret: true
            subjectName:
              description: Subject name of the certificate.
              type: string
              readOnly: true
            subjectAlternativeNames:
              description: Subject alternative names the certificate applies to.
              type: array
              items:
                type: string
              readOnly: true
            value:
              format: byte
              description: PFX or PEM blob
              type: string
              x-ms-mutability:
                - create
              x-ms-secret: true
            issuer:
              description: Certificate issuer.
              type: string
              readOnly: true
            issueDate:
              format: date-time
              description: Certificate issue Date.
              type: string
              readOnly: true
            expirationDate:
              format: date-time
              description: Certificate expiration date.
              type: string
              readOnly: true
            thumbprint:
              description: Certificate thumbprint.
              type: string
              readOnly: true
            valid:
              description: Is the certificate valid?.
              type: boolean
              readOnly: true
            publicKeyHash:
              description: Public key hash.
              type: string
              readOnly: true
      type: object
    CertificateCollection:
      description: Collection of Certificates.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    CertificatePatch:
      description: A certificate to update
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
    ManagedCertificate:
      description: Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment
      x-ms-client-flatten: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Certificate resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the certificate.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - DeleteFailed
                - Pending
              type: string
              readOnly: true
              x-ms-enum:
                name: CertificateProvisioningState
                modelAsString: true
            subjectName:
              description: Subject name of the certificate.
              type: string
            error:
              description: Any error occurred during the certificate provision.
              type: string
              readOnly: true
            domainControlValidation:
              description: Selected type of domain control validation for managed certificates.
              enum:
                - CNAME
                - HTTP
                - TXT
              type: string
              x-ms-enum:
                name: ManagedCertificateDomainControlValidation
                modelAsString: true
            validationToken:
              description: A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.
              type: string
              readOnly: true
      type: object
    ManagedCertificatePatch:
      description: A managed certificate to update
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
    ManagedCertificateCollection:
      description: Collection of Managed Certificates.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ManagedCertificate'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    JobTemplate:
      description: Container Apps Job versioned application definition. Defines the desired state of an immutable revision. Any changes to this section Will result in a new revision being created
      type: object
      properties:
        initContainers:
          description: List of specialized containers that run before app containers.
          type: array
          items:
            $ref: '#/components/schemas/InitContainer'
          x-ms-identifiers:
            - name
        containers:
          description: List of container definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Container'
          x-ms-identifiers:
            - name
        volumes:
          description: List of volume definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          x-ms-identifiers:
            - name
    ServiceBind:
      description: Configuration to bind a ContainerApp to a dev ContainerApp Service
      type: object
      properties:
        serviceId:
          description: Resource id of the target service
          type: string
        name:
          description: Name of the service bind
          type: string
    ManagedEnvironmentStoragesCollection:
      description: Collection of Storage for Environments
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of storage resources.
          type: array
          items:
            $ref: '#/components/schemas/ManagedEnvironmentStorage'
    ManagedEnvironmentStorage:
      description: Storage resource for managedEnvironment.
      properties:
        properties:
          description: Storage properties
          type: object
          properties:
            azureFile:
              $ref: '#/components/schemas/AzureFileProperties'
              description: Azure file properties
      type: object
    Revision:
      description: Container App Revision.
      properties:
        properties:
          description: Revision resource specific properties
          type: object
          properties:
            createdTime:
              format: date-time
              description: |-
                Timestamp describing when the revision was created
                by controller
              type: string
              readOnly: true
            lastActiveTime:
              format: date-time
              description: Timestamp describing when the revision was last active. Only meaningful when revision is inactive
              type: string
              readOnly: true
            fqdn:
              description: Fully qualified domain name of the revision
              type: string
              readOnly: true
            template:
              $ref: '#/components/schemas/Template'
              description: |-
                Container App Revision Template with all possible settings and the
                defaults if user did not provide them. The defaults are populated
                as they were at the creation time
              readOnly: true
            active:
              description: Boolean describing if the Revision is Active
              type: boolean
              readOnly: true
            replicas:
              format: int32
              description: Number of pods currently running for this revision
              type: integer
              readOnly: true
            trafficWeight:
              format: int32
              description: Traffic weight assigned to this revision
              type: integer
              readOnly: true
            provisioningError:
              description: Optional Field - Platform Error Message
              type: string
              readOnly: true
            healthState:
              description: Current health State of the revision
              enum:
                - Healthy
                - Unhealthy
                - None
              type: string
              readOnly: true
              x-ms-enum:
                name: RevisionHealthState
                modelAsString: true
            provisioningState:
              description: Current provisioning State of the revision
              enum:
                - Provisioning
                - Provisioned
                - Failed
                - Deprovisioning
                - Deprovisioned
              type: string
              readOnly: true
              x-ms-enum:
                name: RevisionProvisioningState
                modelAsString: true
            runningState:
              description: Current running state of the revision
              enum:
                - Running
                - Processing
                - Stopped
                - Degraded
                - Failed
                - Unknown
              type: string
              readOnly: true
              x-ms-enum:
                name: RevisionRunningState
                modelAsString: true
          x-ms-client-flatten: true
      type: object
    RevisionCollection:
      description: Container App Revisions collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Revision'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Replica:
      description: Container App Revision Replica.
      properties:
        properties:
          description: Replica resource specific properties
          type: object
          properties:
            createdTime:
              type: string
              description: Timestamp describing when the pod was created by controller
              format: date-time
              readOnly: true
            runningState:
              description: Current running state of the replica
              enum:
                - Running
                - NotRunning
                - Unknown
              type: string
              readOnly: true
              x-ms-enum:
                name: ContainerAppReplicaRunningState
                modelAsString: true
            runningStateDetails:
              description: The details of replica current running state
              type: string
              readOnly: true
            containers:
              description: The containers collection under a replica.
              type: array
              items:
                $ref: '#/components/schemas/ReplicaContainer'
              x-ms-identifiers:
                - name
            initContainers:
              description: The init containers collection under a replica.
              type: array
              items:
                $ref: '#/components/schemas/ReplicaContainer'
              x-ms-identifiers:
                - name
          x-ms-client-flatten: true
      type: object
    ReplicaCollection:
      description: Container App Revision Replicas collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Replica'
    ReplicaContainer:
      description: Container object under Container App Revision Replica.
      type: object
      properties:
        name:
          description: The Name of the Container
          type: string
        containerId:
          description: The Id of the Container
          type: string
        ready:
          description: The container ready status
          type: boolean
        started:
          description: The container start status
          type: boolean
        restartCount:
          format: int32
          description: The container restart count
          type: integer
        runningState:
          description: Current running state of the container
          enum:
            - Running
            - Terminated
            - Waiting
          type: string
          readOnly: true
          x-ms-enum:
            name: ContainerAppContainerRunningState
            modelAsString: true
        runningStateDetails:
          description: The details of container current running state
          type: string
          readOnly: true
        logStreamEndpoint:
          description: Log Stream endpoint
          type: string
          readOnly: true
        execEndpoint:
          description: Container exec endpoint
          type: string
          readOnly: true
    DiagnosticsCollection:
      description: Diagnostics data collection for a resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of diagnostic data.
          type: array
          items:
            $ref: '#/components/schemas/Diagnostics'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Diagnostics:
      description: Diagnostics data for a resource.
      properties:
        properties:
          description: Diagnostics resource specific properties
          type: object
          properties:
            metadata:
              $ref: '#/components/schemas/DiagnosticsDefinition'
              description: Metadata of the diagnostics response.
            dataset:
              description: Set of data collections associated with the response.
              type: array
              items:
                $ref: '#/components/schemas/DiagnosticsDataApiResponse'
              x-ms-identifiers: []
            status:
              $ref: '#/components/schemas/DiagnosticsStatus'
              description: Status of the diagnostics response.
            dataProviderMetadata:
              $ref: '#/components/schemas/DiagnosticDataProviderMetadata'
              description: List of data providers' metadata.
      type: object
    DiagnosticsDefinition:
      description: Metadata of the diagnostics response
      type: object
      properties:
        id:
          description: Unique detector name
          type: string
          readOnly: true
        name:
          description: Display Name of the detector
          type: string
          readOnly: true
        description:
          description: Details of the diagnostics info
          type: string
          readOnly: true
        author:
          description: Authors' names of the detector
          type: string
          readOnly: true
        category:
          description: Category of the detector
          type: string
          readOnly: true
        supportTopicList:
          description: List of support topics
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticSupportTopic'
        analysisTypes:
          description: List of analysis types
          type: array
          items:
            type: string
        type:
          description: Authors' names of the detector
          type: string
          readOnly: true
        score:
          description: Authors' names of the detector
          type: number
          readOnly: true
    DiagnosticSupportTopic:
      description: Support topic information
      type: object
      properties:
        id:
          description: Unique topic identifier
          type: string
          readOnly: true
        pesId:
          description: PES identifier
          type: string
          readOnly: true
    DiagnosticsDataApiResponse:
      description: Diagnostics data returned from a detector
      type: object
      properties:
        table:
          description: Table response
          $ref: '#/components/schemas/DiagnosticDataTableResponseObject'
        renderingProperties:
          description: Details of the table response
          $ref: '#/components/schemas/DiagnosticRendering'
    DiagnosticDataTableResponseObject:
      description: Diagnostics data table
      type: object
      properties:
        tableName:
          description: Table name
          type: string
        columns:
          description: Columns in the table
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticDataTableResponseColumn'
          x-ms-identifiers:
            - columnName
        rows:
          description: Rows in the table
          type: array
          items:
            type: object
          x-ms-identifiers: []
    DiagnosticDataTableResponseColumn:
      description: Diagnostics data column
      type: object
      properties:
        columnName:
          description: Column name
          type: string
        dataType:
          description: Data type of the column
          type: string
        columnType:
          description: Column type
          type: string
    DiagnosticRendering:
      description: Rendering details of a diagnostics table
      type: object
      properties:
        type:
          format: int32
          description: Rendering type
          type: integer
        title:
          description: Title of the table
          type: string
        description:
          description: Description of the table
          type: string
        isVisible:
          description: Flag if the table should be rendered
          type: boolean
    DiagnosticsStatus:
      description: Rendering details of a diagnostics table
      type: object
      properties:
        message:
          description: Diagnostic message
          type: string
        statusId:
          format: int32
          description: Status
          type: integer
    DiagnosticDataProviderMetadata:
      description: Details of a diagnostics data provider
      type: object
      properties:
        providerName:
          description: Name of data provider
          type: string
        propertyBag:
          description: Collection of properties
          type: array
          items:
            description: Property details
            type: object
            properties:
              name:
                description: Property name
                type: string
              value:
                description: Property value
                type: string
          x-ms-identifiers:
            - name
    AvailableWorkloadProfile:
      description: A workload profile with specific hardware configure to run container apps.
      properties:
        location:
          type: string
          description: Region of the workload profile.
        properties:
          description: Revision resource specific properties
          type: object
          properties:
            category:
              description: Used to categorize workload profiles.
              type: string
            applicability:
              type: string
              description: indicates whether the profile is default for the location.
              enum:
                - LocationDefault
                - Custom
              x-ms-enum:
                name: Applicability
                modelAsString: true
            cores:
              type: integer
              format: int32
              description: Number of cores in CPU.
            memoryGiB:
              type: integer
              format: int32
              description: Memory in GiB.
            gpus:
              type: integer
              format: int32
              description: Number of GPUs.
            displayName:
              type: string
              description: The everyday name of the workload profile.
      type: object
    AvailableWorkloadProfilesCollection:
      description: Collection of available workload profiles in the location.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of workload profiles.
          type: array
          items:
            $ref: '#/components/schemas/AvailableWorkloadProfile'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    SourceControl:
      description: Container App SourceControl.
      properties:
        properties:
          description: SourceControl resource specific properties
          type: object
          properties:
            operationState:
              description: Current provisioning State of the operation
              enum:
                - InProgress
                - Succeeded
                - Failed
                - Canceled
              type: string
              readOnly: true
              x-ms-enum:
                name: SourceControlOperationState
                modelAsString: true
            repoUrl:
              description: The repo url which will be integrated to ContainerApp.
              type: string
            branch:
              description: The branch which will trigger the auto deployment
              type: string
            githubActionConfiguration:
              $ref: '#/components/schemas/GithubActionConfiguration'
              description: |-
                Container App Revision Template with all possible settings and the
                defaults if user did not provide them. The defaults are populated
                as they were at the creation time
          x-ms-client-flatten: true
      type: object
    GithubActionConfiguration:
      description: Configuration properties that define the mutable settings of a Container App SourceControl
      type: object
      properties:
        registryInfo:
          $ref: '#/components/schemas/RegistryInfo'
          description: Registry configurations.
        azureCredentials:
          $ref: '#/components/schemas/AzureCredentials'
          description: AzureCredentials configurations.
        contextPath:
          description: Context path
          type: string
        githubPersonalAccessToken:
          description: One time Github PAT to configure github environment
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        image:
          description: Image name
          type: string
        publishType:
          description: Code or Image
          type: string
        os:
          description: Operation system
          type: string
        runtimeStack:
          description: Runtime stack
          type: string
        runtimeVersion:
          description: Runtime version
          type: string
    RegistryInfo:
      description: Container App registry information.
      type: object
      properties:
        registryUrl:
          description: registry server Url.
          type: string
        registryUserName:
          description: registry username.
          type: string
        registryPassword:
          description: registry secret.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    AzureCredentials:
      description: Container App credentials.
      type: object
      properties:
        clientId:
          description: Client Id.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        clientSecret:
          description: Client Secret.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        tenantId:
          description: Tenant Id.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        kind:
          description: Kind of auth github does for deploying the template
          type: string
          x-ms-mutability:
            - create
            - update
        subscriptionId:
          description: Subscription Id.
          type: string
    SourceControlCollection:
      description: SourceControl collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/SourceControl'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Configuration:
      description: Non versioned Container App configuration properties that define the mutable settings of a Container app
      type: object
      properties:
        secrets:
          description: Collection of secrets used by a Container app
          type: array
          items:
            $ref: '#/components/schemas/Secret'
          x-ms-identifiers:
            - name
        activeRevisionsMode:
          description: |-
            ActiveRevisionsMode controls how active revisions are handled for the Container app:
            <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
          enum:
            - Multiple
            - Single
          type: string
          default: Single
          x-ms-enum:
            name: ActiveRevisionsMode
            modelAsString: true
        ingress:
          $ref: '#/components/schemas/Ingress'
          description: Ingress configurations.
        registries:
          description: Collection of private container registry credentials for containers used by the Container app
          type: array
          items:
            $ref: '#/components/schemas/RegistryCredentials'
          x-ms-identifiers:
            - server
        dapr:
          $ref: '#/components/schemas/Dapr'
          description: Dapr configuration for the Container App.
        maxInactiveRevisions:
          format: int32
          description: Optional. Max inactive revisions a Container App can have.
          type: integer
        service:
          $ref: '#/components/schemas/Service'
          description: Container App to be a dev Container App Service
    ContainerApp:
      description: Container App.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        identity:
          description: managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        properties:
          description: ContainerApp resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Container App.
              enum:
                - InProgress
                - Succeeded
                - Failed
                - Canceled
                - Deleting
              type: string
              readOnly: true
              x-ms-enum:
                name: ContainerAppProvisioningState
                modelAsString: true
            managedEnvironmentId:
              description: Deprecated. Resource ID of the Container App's environment.
              type: string
              x-ms-mutability:
                - create
                - read
            environmentId:
              description: Resource ID of environment.
              type: string
              x-ms-mutability:
                - create
                - read
            workloadProfileName:
              $ref: '#/components/schemas/WorkloadProfileName'
              description: Workload profile name to pin for container app execution.
            latestRevisionName:
              description: Name of the latest revision of the Container App.
              type: string
              readOnly: true
            latestReadyRevisionName:
              description: Name of the latest ready revision of the Container App.
              type: string
              readOnly: true
            latestRevisionFqdn:
              description: Fully Qualified Domain Name of the latest revision of the Container App.
              type: string
              readOnly: true
            customDomainVerificationId:
              description: Id used to verify domain name ownership
              type: string
              readOnly: true
            configuration:
              $ref: '#/components/schemas/Configuration'
              description: Non versioned Container App configuration properties.
            template:
              $ref: '#/components/schemas/Template'
              description: Container App versioned application definition.
            outboundIpAddresses:
              description: Outbound IP Addresses for container app.
              type: array
              items:
                type: string
              readOnly: true
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the container app.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    ContainerAppCollection:
      description: Container App collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ContainerApp'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Dapr:
      description: Container App Dapr configuration.
      type: object
      properties:
        enabled:
          description: Boolean indicating if the Dapr side car is enabled
          type: boolean
          default: false
        appId:
          description: Dapr application identifier
          type: string
        appProtocol:
          description: Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
          enum:
            - http
            - grpc
          type: string
          default: http
          x-ms-enum:
            name: appProtocol
            modelAsString: true
        appPort:
          format: int32
          description: Tells Dapr which port your application is listening on
          type: integer
        httpReadBufferSize:
          type: integer
          description: Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.
          format: int32
        httpMaxRequestSize:
          type: integer
          description: Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.
          format: int32
        logLevel:
          description: Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.
          enum:
            - info
            - debug
            - warn
            - error
          type: string
          x-ms-enum:
            name: logLevel
            modelAsString: true
        enableApiLogging:
          description: Enables API logging for the Dapr sidecar
          type: boolean
    Ingress:
      description: Container App Ingress configuration.
      type: object
      properties:
        fqdn:
          description: Hostname.
          type: string
          readOnly: true
        external:
          description: Bool indicating if app exposes an external http endpoint
          default: false
          type: boolean
        targetPort:
          format: int32
          description: Target Port in containers for traffic from ingress
          type: integer
        exposedPort:
          format: int32
          description: Exposed Port in containers for TCP traffic from ingress
          type: integer
        transport:
          description: Ingress transport protocol
          enum:
            - auto
            - http
            - http2
            - tcp
          type: string
          default: auto
          x-ms-enum:
            name: IngressTransportMethod
            modelAsString: true
        traffic:
          description: Traffic weights for app's revisions
          type: array
          items:
            $ref: '#/components/schemas/TrafficWeight'
          x-ms-identifiers:
            - revisionName
        customDomains:
          description: custom domain bindings for Container Apps' hostnames.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomain'
          x-ms-identifiers:
            - name
        allowInsecure:
          description: Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
          type: boolean
          default: false
        ipSecurityRestrictions:
          description: Rules to restrict incoming IP address.
          type: array
          items:
            $ref: '#/components/schemas/IpSecurityRestrictionRule'
          x-ms-identifiers:
            - name
        stickySessions:
          description: Sticky Sessions for Single Revision Mode
          type: object
          properties:
            affinity:
              description: Sticky Session Affinity
              enum:
                - sticky
                - none
              type: string
              x-ms-enum:
                name: affinity
                modelAsString: true
        clientCertificateMode:
          description: Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.
          enum:
            - ignore
            - accept
            - require
          type: string
          x-ms-enum:
            name: IngressClientCertificateMode
            modelAsString: true
        corsPolicy:
          description: CORS policy for container app
          $ref: '#/components/schemas/CorsPolicy'
        additionalPortMappings:
          description: Settings to expose additional ports on container app
          type: array
          items:
            $ref: '#/components/schemas/IngressPortMapping'
          x-ms-identifiers:
            - targetPort
    RegistryCredentials:
      description: Container App Private Registry
      type: object
      properties:
        server:
          description: Container Registry Server
          type: string
        username:
          description: Container Registry Username
          type: string
        passwordSecretRef:
          description: The name of the Secret that contains the registry login password
          type: string
        identity:
          description: A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'
          type: string
    SecretsCollection:
      description: Container App Secrets Collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ContainerAppSecret'
          x-ms-identifiers:
            - name
    ContainerAppSecret:
      description: Container App Secret.
      type: object
      properties:
        name:
          description: Secret Name.
          type: string
          readOnly: true
        value:
          description: Secret Value.
          type: string
          x-ms-secret: true
          readOnly: true
        identity:
          description: Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
          type: string
          readOnly: true
        keyVaultUrl:
          description: Azure Key Vault URL pointing to the secret referenced by the container app.
          type: string
          readOnly: true
    TrafficWeight:
      description: Traffic weight assigned to a revision
      type: object
      properties:
        revisionName:
          description: Name of a revision
          type: string
        weight:
          format: int32
          description: Traffic weight assigned to a revision
          type: integer
        latestRevision:
          description: Indicates that the traffic weight belongs to a latest stable revision
          default: false
          type: boolean
        label:
          description: Associates a traffic label with a revision
          type: string
    CustomDomain:
      description: Custom Domain of a Container App
      type: object
      required:
        - name
      properties:
        name:
          description: Hostname.
          type: string
        bindingType:
          description: Custom Domain binding type.
          enum:
            - Disabled
            - SniEnabled
          type: string
          x-ms-enum:
            name: bindingType
            modelAsString: true
        certificateId:
          description: Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.
          type: string
    IpSecurityRestrictionRule:
      description: Rule to restrict incoming IP address.
      type: object
      required:
        - name
        - ipAddressRange
        - action
      properties:
        name:
          description: Name for the IP restriction rule.
          type: string
        description:
          description: Describe the IP restriction rule that is being sent to the container-app. This is an optional field.
          type: string
        ipAddressRange:
          description: CIDR notation to match incoming IP address
          type: string
        action:
          description: 'Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny'
          enum:
            - Allow
            - Deny
          type: string
          x-ms-enum:
            name: action
            modelAsString: true
    CorsPolicy:
      description: Cross-Origin-Resource-Sharing policy
      type: object
      required:
        - allowedOrigins
      properties:
        allowedOrigins:
          description: Specifies the content for the access-control-allow-origins header
          type: array
          items:
            type: string
        allowedMethods:
          description: Specifies the content for the access-control-allow-methods header
          type: array
          items:
            type: string
        allowedHeaders:
          description: Specifies the content for the access-control-allow-headers header
          type: array
          items:
            type: string
        exposeHeaders:
          description: 'Specifies the content for the access-control-expose-headers header '
          type: array
          items:
            type: string
        maxAge:
          format: int32
          description: Specifies the content for the access-control-max-age header
          type: integer
        allowCredentials:
          description: Specifies whether the resource allows credentials
          type: boolean
    IngressPortMapping:
      description: Port mappings of container app ingress
      type: object
      required:
        - external
        - targetPort
      properties:
        external:
          description: Specifies whether the app port is accessible outside of the environment
          type: boolean
        targetPort:
          format: int32
          description: Specifies the port user's container listens on
          type: integer
        exposedPort:
          format: int32
          description: Specifies the exposed port for the target port. If not specified, it defaults to target port
          type: integer
    CustomHostnameAnalysisResult:
      description: Custom domain analysis.
      type: object
      properties:
        hostName:
          description: Host name that was analyzed
          type: string
          readOnly: true
        isHostnameAlreadyVerified:
          description: <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
          type: boolean
          readOnly: true
        customDomainVerificationTest:
          description: DNS verification test result.
          enum:
            - Passed
            - Failed
            - Skipped
          type: string
          readOnly: true
          x-ms-enum:
            name: DnsVerificationTestResult
            modelAsString: false
        customDomainVerificationFailureInfo:
          description: Raw failure information if DNS verification fails.
          type: object
          properties:
            code:
              description: Standardized string to programmatically identify the error.
              type: string
              readOnly: true
            message:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            target:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            details:
              type: array
              description: Details or the error
              items:
                description: Detailed errors.
                type: object
                properties:
                  code:
                    description: Standardized string to programmatically identify the error.
                    type: string
                    readOnly: true
                  message:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                  target:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                readOnly: true
              x-ms-identifiers:
                - code
          readOnly: true
        hasConflictOnManagedEnvironment:
          description: <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
          type: boolean
          readOnly: true
        conflictWithEnvironmentCustomDomain:
          description: <code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.
          type: boolean
          readOnly: true
        conflictingContainerAppResourceId:
          description: Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
          type: string
          readOnly: true
        cNameRecords:
          description: CName records visible for this hostname.
          type: array
          items:
            type: string
        txtRecords:
          description: TXT records visible for this hostname.
          type: array
          items:
            type: string
        aRecords:
          description: A records visible for this hostname.
          type: array
          items:
            type: string
        alternateCNameRecords:
          description: Alternate CName records visible for this hostname.
          type: array
          items:
            type: string
        alternateTxtRecords:
          description: Alternate TXT records visible for this hostname.
          type: array
          items:
            type: string
      x-ms-client-flatten: true
    ContainerAppAuthToken:
      description: Container App Auth Token.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Container App auth token resource specific properties
          type: object
          properties:
            token:
              description: Auth token value.
              type: string
              x-ms-secret: true
              readOnly: true
            expires:
              format: date-time
              description: Token expiration date.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    Service:
      description: Container App to be a dev service
      type: object
      required:
        - type
      properties:
        type:
          description: Dev ContainerApp service type
          type: string
    CustomDomainVerificationId:
      description: Custom domain verification Id of a subscription
      type: string
      readOnly: true
    ConnectedEnvironmentStoragesCollection:
      description: Collection of Storage for Environments
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of storage resources.
          type: array
          items:
            $ref: '#/components/schemas/ConnectedEnvironmentStorage'
    ConnectedEnvironmentStorage:
      description: Storage resource for connectedEnvironment.
      properties:
        properties:
          description: Storage properties
          type: object
          properties:
            azureFile:
              $ref: '#/components/schemas/AzureFileProperties'
              description: Azure file properties
      type: object
    UsageName:
      type: object
      properties:
        value:
          type: string
          description: The name of the resource.
        localizedValue:
          type: string
          description: The localized name of the resource.
      description: The Usage Names.
    Usage:
      type: object
      properties:
        unit:
          type: string
          description: An enum describing the unit of usage measurement.
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: false
        currentValue:
          type: number
          format: float
          description: The current usage of the resource.
        limit:
          type: number
          format: float
          description: The maximum permitted usage of the resource.
        name:
          $ref: '#/components/schemas/UsageName'
          description: The name of the type of usage.
      required:
        - unit
        - currentValue
        - limit
        - name
      description: Describes Compute Resource Usage.
    ListUsagesResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers:
            - name
          description: The list of compute resource usages.
        nextLink:
          type: string
          description: The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information.
    JobConfiguration:
      description: Non versioned Container Apps Job configuration properties
      type: object
      required:
        - replicaTimeout
        - triggerType
      properties:
        secrets:
          description: Collection of secrets used by a Container Apps Job
          type: array
          items:
            $ref: '#/components/schemas/Secret'
          x-ms-identifiers:
            - name
        triggerType:
          description: Trigger type of the job
          enum:
            - Schedule
            - Event
            - Manual
          type: string
          default: Manual
          x-ms-enum:
            name: TriggerType
            modelAsString: true
        replicaTimeout:
          description: Maximum number of seconds a replica is allowed to run.
          format: int32
          type: integer
        replicaRetryLimit:
          format: int32
          description: Maximum number of retries before failing the job.
          type: integer
        manualTriggerConfig:
          type: object
          description: Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default
          properties:
            replicaCompletionCount:
              $ref: '#/components/schemas/ReplicaCompletionCount'
            parallelism:
              $ref: '#/components/schemas/Parallelism'
        scheduleTriggerConfig:
          description: Cron formatted repeating trigger schedule ("* * * * *") for cronjobs. Properties completions and parallelism would be set to 1 by default
          required:
            - cronExpression
          type: object
          properties:
            replicaCompletionCount:
              $ref: '#/components/schemas/ReplicaCompletionCount'
            cronExpression:
              description: Cron formatted repeating schedule ("* * * * *") of a Cron Job.
              type: string
            parallelism:
              $ref: '#/components/schemas/Parallelism'
        eventTriggerConfig:
          type: object
          description: Trigger configuration of an event driven job.
          properties:
            replicaCompletionCount:
              $ref: '#/components/schemas/ReplicaCompletionCount'
            parallelism:
              $ref: '#/components/schemas/Parallelism'
            scale:
              $ref: '#/components/schemas/JobScale'
        registries:
          description: Collection of private container registry credentials used by a Container apps job
          type: array
          items:
            $ref: '#/components/schemas/RegistryCredentials'
          x-ms-identifiers:
            - server
    Job:
      description: Container App Job
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        identity:
          description: Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          description: Container Apps Job resource specific properties.
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Container Apps Job.
              enum:
                - InProgress
                - Succeeded
                - Failed
                - Canceled
                - Deleting
              type: string
              readOnly: true
              x-ms-enum:
                name: JobProvisioningState
                modelAsString: true
            environmentId:
              description: Resource ID of environment.
              type: string
              x-ms-mutability:
                - create
                - read
            workloadProfileName:
              $ref: '#/components/schemas/WorkloadProfileName'
              description: Workload profile name to pin for container apps job execution.
            configuration:
              $ref: '#/components/schemas/JobConfiguration'
              description: Container Apps Job configuration properties.
            template:
              $ref: '#/components/schemas/JobTemplate'
              description: Container Apps job definition.
            outboundIpAddresses:
              description: Outbound IP Addresses of a container apps job.
              type: array
              items:
                type: string
              readOnly: true
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the container apps job.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    JobPatchProperties:
      description: Container Apps Job resource specific properties.
      properties:
        identity:
          description: Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          type: object
          properties:
            environmentId:
              description: Resource ID of environment.
              type: string
              x-ms-mutability:
                - create
                - read
                - update
            configuration:
              $ref: '#/components/schemas/JobConfiguration'
              description: Container Apps Job configuration properties.
            template:
              $ref: '#/components/schemas/JobTemplate'
              description: Container Apps job definition.
            outboundIpAddresses:
              description: Outbound IP Addresses of a container apps job.
              type: array
              items:
                type: string
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the container apps job.
              type: string
      type: object
    JobsCollection:
      description: Container Apps Jobs collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    JobSecretsCollection:
      description: Container Apps Job Secrets Collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Secret'
          x-ms-identifiers:
            - name
    ReplicaCompletionCount:
      description: Minimum number of successful replica completions before overall job completion.
      format: int32
      type: integer
    Parallelism:
      description: Number of parallel replicas of a job that can run at a given time.
      format: int32
      type: integer
    PollingInterval:
      description: Interval to check each event source in seconds. Defaults to 30s
      format: int32
      type: integer
    JobScaleRule:
      description: Scaling rule.
      type: object
      properties:
        name:
          description: Scale Rule Name
          type: string
        type:
          description: |-
            Type of the scale rule
            eg: azure-servicebus, redis etc.
          type: string
        metadata:
          description: Metadata properties to describe the scale rule.
          type: object
        auth:
          description: Authentication secrets for the scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
    JobScale:
      description: Scaling configurations for event driven jobs.
      type: object
      properties:
        pollingInterval:
          $ref: '#/components/schemas/PollingInterval'
        minExecutions:
          format: int32
          description: Minimum number of job executions that are created for a trigger, default 0
          type: integer
          default: 0
        maxExecutions:
          format: int32
          description: Maximum number of job executions that are created for a trigger, default 100.
          type: integer
          default: 100
        rules:
          description: Scaling rules.
          type: array
          items:
            $ref: '#/components/schemas/JobScaleRule'
    JobExecutionBase:
      description: Container App's Job execution name.
      type: object
      properties:
        name:
          description: Job execution name.
          type: string
        id:
          description: Job execution Id.
          type: string
    JobExecution:
      description: Container Apps Job execution.
      properties:
        name:
          description: Job execution Name.
          type: string
        id:
          description: Job execution Id.
          type: string
        type:
          description: Job execution type
          type: string
        properties:
          description: Container Apps Job execution specific properties.
          type: object
          properties:
            status:
              description: Current running State of the job
              enum:
                - Running
                - Processing
                - Stopped
                - Degraded
                - Failed
                - Unknown
                - Succeeded
              type: string
              readOnly: true
              x-ms-enum:
                name: JobExecutionRunningState
                modelAsString: true
            startTime:
              description: Job execution start time.
              format: date-time
              type: string
            endTime:
              description: Job execution end time.
              format: date-time
              type: string
            template:
              description: Job's execution container.
              $ref: '#/components/schemas/JobExecutionTemplate'
          x-ms-client-flatten: true
      type: object
    ContainerAppJobExecutions:
      description: Container App executions collection ARM resource.
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/JobExecution'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
      required:
        - value
    JobExecutionNamesCollection:
      description: Container App executions names list.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/JobExecutionBase'
    JobExecutionTemplate:
      description: Job's execution template, containing container configuration for a job's execution
      type: object
      properties:
        containers:
          description: List of container definitions for the Container Apps Job.
          type: array
          items:
            $ref: '#/components/schemas/JobExecutionContainer'
          x-ms-identifiers:
            - name
        initContainers:
          description: List of specialized containers that run before job containers.
          type: array
          items:
            $ref: '#/components/schemas/JobExecutionContainer'
          x-ms-identifiers:
            - name
    JobExecutionContainer:
      description: Container Apps Jobs execution container definition.
      type: object
      properties:
        image:
          description: Container image tag.
          type: string
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
    AuthConfigCollection:
      description: AuthConfig collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/AuthConfig'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    AuthConfig:
      description: Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.
      properties:
        properties:
          description: AuthConfig resource specific properties
          type: object
          properties:
            platform:
              $ref: '#/components/schemas/AuthPlatform'
              description: The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
            globalValidation:
              $ref: '#/components/schemas/GlobalValidation'
              description: The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.
            identityProviders:
              $ref: '#/components/schemas/IdentityProviders'
              description: The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
            login:
              $ref: '#/components/schemas/Login'
              description: The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
            httpSettings:
              $ref: '#/components/schemas/HttpSettings'
              description: The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.
            encryptionSettings:
              $ref: '#/components/schemas/EncryptionSettings'
              description: The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.
          x-ms-client-flatten: true
      type: object
    AuthPlatform:
      description: The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        enabled:
          description: <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
          type: boolean
        runtimeVersion:
          description: |-
            The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
            The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
          type: string
    GlobalValidation:
      description: The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        unauthenticatedClientAction:
          description: The action to take when an unauthenticated client attempts to access the app.
          enum:
            - RedirectToLoginPage
            - AllowAnonymous
            - Return401
            - Return403
          type: string
          x-ms-enum:
            name: UnauthenticatedClientActionV2
            modelAsString: false
        redirectToProvider:
          description: |-
            The default authentication provider to use when multiple providers are configured.
            This setting is only needed if multiple providers are configured and the unauthenticated client
            action is set to "RedirectToLoginPage".
          type: string
        excludedPaths:
          description: The paths for which unauthenticated flow would not be redirected to the login page.
          type: array
          items:
            type: string
    HttpSettings:
      description: The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        requireHttps:
          description: <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
          type: boolean
        routes:
          $ref: '#/components/schemas/HttpSettingsRoutes'
          description: The configuration settings of the paths HTTP requests.
        forwardProxy:
          $ref: '#/components/schemas/ForwardProxy'
          description: The configuration settings of a forward proxy used to make the requests.
    EncryptionSettings:
      description: The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        containerAppAuthEncryptionSecretName:
          description: The secret name which is referenced for EncryptionKey.
          type: string
        containerAppAuthSigningSecretName:
          description: The secret name which is referenced for SigningKey.
          type: string
    HttpSettingsRoutes:
      description: The configuration settings of the paths HTTP requests.
      type: object
      properties:
        apiPrefix:
          description: The prefix that should precede all the authentication/authorization paths.
          type: string
    ForwardProxy:
      description: The configuration settings of a forward proxy used to make the requests.
      type: object
      properties:
        convention:
          description: The convention used to determine the url of the request made.
          enum:
            - NoProxy
            - Standard
            - Custom
          type: string
          x-ms-enum:
            name: ForwardProxyConvention
            modelAsString: false
        customHostHeaderName:
          description: The name of the header containing the host of the request.
          type: string
        customProtoHeaderName:
          description: The name of the header containing the scheme of the request.
          type: string
    Login:
      description: The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        routes:
          $ref: '#/components/schemas/LoginRoutes'
          description: The routes that specify the endpoints used for login and logout requests.
        tokenStore:
          $ref: '#/components/schemas/TokenStore'
          description: The configuration settings of the token store.
        preserveUrlFragmentsForLogins:
          description: <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
          type: boolean
        allowedExternalRedirectUrls:
          description: |-
            External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
            This is an advanced setting typically only needed by Windows Store application backends.
            Note that URLs within the current domain are always implicitly allowed.
          type: array
          items:
            type: string
        cookieExpiration:
          $ref: '#/components/schemas/CookieExpiration'
          description: The configuration settings of the session cookie's expiration.
        nonce:
          $ref: '#/components/schemas/Nonce'
          description: The configuration settings of the nonce used in the login flow.
    LoginRoutes:
      description: The routes that specify the endpoints used for login and logout requests.
      type: object
      properties:
        logoutEndpoint:
          description: The endpoint at which a logout request should be made.
          type: string
    TokenStore:
      description: The configuration settings of the token store.
      type: object
      properties:
        enabled:
          description: |-
            <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
             The default is <code>false</code>.
          type: boolean
        tokenRefreshExtensionHours:
          format: double
          description: |-
            The number of hours after session token expiration that a session token can be used to
            call the token refresh API. The default is 72 hours.
          type: number
        azureBlobStorage:
          $ref: '#/components/schemas/BlobStorageTokenStore'
          description: The configuration settings of the storage of the tokens if blob storage is used.
    BlobStorageTokenStore:
      description: The configuration settings of the storage of the tokens if blob storage is used.
      type: object
      required:
        - sasUrlSettingName
      properties:
        sasUrlSettingName:
          description: The name of the app secrets containing the SAS URL of the blob storage containing the tokens.
          type: string
    CookieExpiration:
      description: The configuration settings of the session cookie's expiration.
      type: object
      properties:
        convention:
          description: The convention used when determining the session cookie's expiration.
          enum:
            - FixedTime
            - IdentityProviderDerived
          type: string
          x-ms-enum:
            name: CookieExpirationConvention
            modelAsString: false
        timeToExpiration:
          description: The time after the request is made when the session cookie should expire.
          type: string
    Nonce:
      description: The configuration settings of the nonce used in the login flow.
      type: object
      properties:
        validateNonce:
          description: <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
          type: boolean
        nonceExpirationInterval:
          description: The time after the request is made when the nonce should expire.
          type: string
    IdentityProviders:
      description: The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        azureActiveDirectory:
          $ref: '#/components/schemas/AzureActiveDirectory'
          description: The configuration settings of the Azure Active directory provider.
        facebook:
          $ref: '#/components/schemas/Facebook'
          description: The configuration settings of the Facebook provider.
        gitHub:
          $ref: '#/components/schemas/GitHub'
          description: The configuration settings of the GitHub provider.
        google:
          $ref: '#/components/schemas/Google'
          description: The configuration settings of the Google provider.
        twitter:
          $ref: '#/components/schemas/Twitter'
          description: The configuration settings of the Twitter provider.
        apple:
          $ref: '#/components/schemas/Apple'
          description: The configuration settings of the Apple provider.
        azureStaticWebApps:
          $ref: '#/components/schemas/AzureStaticWebApps'
          description: The configuration settings of the Azure Static Web Apps provider.
        customOpenIdConnectProviders:
          description: |-
            The map of the name of the alias of each custom Open ID Connect provider to the
            configuration settings of the custom Open ID Connect provider.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CustomOpenIdConnectProvider'
    AzureActiveDirectory:
      description: The configuration settings of the Azure Active directory provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AzureActiveDirectoryRegistration'
          description: The configuration settings of the Azure Active Directory app registration.
        login:
          $ref: '#/components/schemas/AzureActiveDirectoryLogin'
          description: The configuration settings of the Azure Active Directory login flow.
        validation:
          $ref: '#/components/schemas/AzureActiveDirectoryValidation'
          description: The configuration settings of the Azure Active Directory token validation flow.
        isAutoProvisioned:
          description: |-
            Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
            This is an internal flag primarily intended to support the Azure Management Portal. Users should not
            read or write to this property.
          type: boolean
    AzureActiveDirectoryLogin:
      description: The configuration settings of the Azure Active Directory login flow.
      type: object
      properties:
        loginParameters:
          description: |-
            Login parameters to send to the OpenID Connect authorization endpoint when
            a user logs in. Each parameter must be in the form "key=value".
          type: array
          items:
            type: string
        disableWWWAuthenticate:
          description: <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
          type: boolean
    AzureActiveDirectoryRegistration:
      description: The configuration settings of the Azure Active Directory app registration.
      type: object
      properties:
        openIdIssuer:
          description: |-
            The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
            When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
            This URI is a case-sensitive identifier for the token issuer.
            More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
          type: string
        clientId:
          description: |-
            The Client ID of this relying party application, known as the client_id.
            This setting is required for enabling OpenID Connection authentication with Azure Active Directory or 
            other 3rd party OpenID Connect providers.
            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
          type: string
        clientSecretSettingName:
          description: The app setting name that contains the client secret of the relying party application.
          type: string
        clientSecretCertificateThumbprint:
          description: |-
            An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
            a replacement for the Client Secret. It is also optional.
          type: string
        clientSecretCertificateSubjectAlternativeName:
          description: |-
            An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
            a replacement for the Client Secret Certificate Thumbprint. It is also optional.
          type: string
        clientSecretCertificateIssuer:
          description: |-
            An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
            a replacement for the Client Secret Certificate Thumbprint. It is also optional.
          type: string
    AzureActiveDirectoryValidation:
      description: The configuration settings of the Azure Active Directory token validation flow.
      type: object
      properties:
        jwtClaimChecks:
          $ref: '#/components/schemas/JwtClaimChecks'
          description: The configuration settings of the checks that should be made while validating the JWT Claims.
        allowedAudiences:
          description: The list of audiences that can make successful authentication/authorization requests.
          type: array
          items:
            type: string
        defaultAuthorizationPolicy:
          $ref: '#/components/schemas/DefaultAuthorizationPolicy'
          description: The configuration settings of the default authorization policy.
    JwtClaimChecks:
      description: The configuration settings of the checks that should be made while validating the JWT Claims.
      type: object
      properties:
        allowedGroups:
          description: The list of the allowed groups.
          type: array
          items:
            type: string
        allowedClientApplications:
          description: The list of the allowed client applications.
          type: array
          items:
            type: string
    DefaultAuthorizationPolicy:
      description: The configuration settings of the Azure Active Directory default authorization policy.
      type: object
      properties:
        allowedPrincipals:
          $ref: '#/components/schemas/AllowedPrincipals'
          description: The configuration settings of the Azure Active Directory allowed principals.
        allowedApplications:
          description: The configuration settings of the Azure Active Directory allowed applications.
          type: array
          items:
            type: string
    AllowedPrincipals:
      description: The configuration settings of the Azure Active Directory allowed principals.
      type: object
      properties:
        groups:
          description: The list of the allowed groups.
          type: array
          items:
            type: string
        identities:
          description: The list of the allowed identities.
          type: array
          items:
            type: string
    Facebook:
      description: The configuration settings of the Facebook provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AppRegistration'
          description: The configuration settings of the app registration for the Facebook provider.
        graphApiVersion:
          description: The version of the Facebook api to be used while logging in.
          type: string
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
    AppRegistration:
      description: The configuration settings of the app registration for providers that have app ids and app secrets
      type: object
      properties:
        appId:
          description: The App ID of the app used for login.
          type: string
        appSecretSettingName:
          description: The app setting name that contains the app secret.
          type: string
    LoginScopes:
      description: The configuration settings of the login flow, including the scopes that should be requested.
      type: object
      properties:
        scopes:
          description: A list of the scopes that should be requested while authenticating.
          type: array
          items:
            type: string
    GitHub:
      description: The configuration settings of the GitHub provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/ClientRegistration'
          description: The configuration settings of the app registration for the GitHub provider.
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
    ClientRegistration:
      description: The configuration settings of the app registration for providers that have client ids and client secrets
      type: object
      properties:
        clientId:
          description: The Client ID of the app used for login.
          type: string
        clientSecretSettingName:
          description: The app setting name that contains the client secret.
          type: string
    Google:
      description: The configuration settings of the Google provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/ClientRegistration'
          description: The configuration settings of the app registration for the Google provider.
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
        validation:
          $ref: '#/components/schemas/AllowedAudiencesValidation'
          description: The configuration settings of the Azure Active Directory token validation flow.
    AllowedAudiencesValidation:
      description: The configuration settings of the Allowed Audiences validation flow.
      type: object
      properties:
        allowedAudiences:
          description: The configuration settings of the allowed list of audiences from which to validate the JWT token.
          type: array
          items:
            type: string
    Twitter:
      description: The configuration settings of the Twitter provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/TwitterRegistration'
          description: The configuration settings of the app registration for the Twitter provider.
    TwitterRegistration:
      description: The configuration settings of the app registration for the Twitter provider.
      type: object
      properties:
        consumerKey:
          description: |-
            The OAuth 1.0a consumer key of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          type: string
        consumerSecretSettingName:
          description: |-
            The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
            application used for sign-in.
          type: string
    Apple:
      description: The configuration settings of the Apple provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AppleRegistration'
          description: The configuration settings of the Apple registration.
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
    AppleRegistration:
      description: The configuration settings of the registration for the Apple provider
      type: object
      properties:
        clientId:
          description: The Client ID of the app used for login.
          type: string
        clientSecretSettingName:
          description: The app setting name that contains the client secret.
          type: string
    AzureStaticWebApps:
      description: The configuration settings of the Azure Static Web Apps provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AzureStaticWebAppsRegistration'
          description: The configuration settings of the Azure Static Web Apps registration.
    AzureStaticWebAppsRegistration:
      description: The configuration settings of the registration for the Azure Static Web Apps provider
      type: object
      properties:
        clientId:
          description: The Client ID of the app used for login.
          type: string
    CustomOpenIdConnectProvider:
      description: The configuration settings of the custom Open ID Connect provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/OpenIdConnectRegistration'
          description: The configuration settings of the app registration for the custom Open ID Connect provider.
        login:
          $ref: '#/components/schemas/OpenIdConnectLogin'
          description: The configuration settings of the login flow of the custom Open ID Connect provider.
    OpenIdConnectRegistration:
      description: The configuration settings of the app registration for the custom Open ID Connect provider.
      type: object
      properties:
        clientId:
          description: The client id of the custom Open ID Connect provider.
          type: string
        clientCredential:
          $ref: '#/components/schemas/OpenIdConnectClientCredential'
          description: The authentication credentials of the custom Open ID Connect provider.
        openIdConnectConfiguration:
          $ref: '#/components/schemas/OpenIdConnectConfig'
          description: The configuration settings of the endpoints used for the custom Open ID Connect provider.
    OpenIdConnectClientCredential:
      description: The authentication client credentials of the custom Open ID Connect provider.
      type: object
      properties:
        method:
          description: The method that should be used to authenticate the user.
          enum:
            - ClientSecretPost
          type: string
          x-ms-enum:
            name: ClientCredentialMethod
            modelAsString: false
        clientSecretSettingName:
          description: The app setting that contains the client secret for the custom Open ID Connect provider.
          type: string
    OpenIdConnectConfig:
      description: The configuration settings of the endpoints used for the custom Open ID Connect provider.
      type: object
      properties:
        authorizationEndpoint:
          description: The endpoint to be used to make an authorization request.
          type: string
        tokenEndpoint:
          description: The endpoint to be used to request a token.
          type: string
        issuer:
          description: The endpoint that issues the token.
          type: string
        certificationUri:
          description: The endpoint that provides the keys necessary to validate the token.
          type: string
        wellKnownOpenIdConfiguration:
          description: The endpoint that contains all the configuration endpoints for the provider.
          type: string
    OpenIdConnectLogin:
      description: The configuration settings of the login flow of the custom Open ID Connect provider.
      type: object
      properties:
        nameClaimType:
          description: The name of the claim that contains the users name.
          type: string
        scopes:
          description: A list of the scopes that should be requested while authenticating.
          type: array
          items:
            type: string
    ConnectedEnvironment:
      description: An environment for Kubernetes cluster specialized for web workloads by Azure App Service
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        properties:
          description: ConnectedEnvironment resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Kubernetes Environment.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - Waiting
                - InitializationInProgress
                - InfrastructureSetupInProgress
                - InfrastructureSetupComplete
                - ScheduledForDelete
              type: string
              readOnly: true
              x-ms-enum:
                name: ConnectedEnvironmentProvisioningState
                modelAsString: true
            deploymentErrors:
              description: Any errors that occurred during deployment or deployment validation
              type: string
              readOnly: true
            defaultDomain:
              description: Default Domain Name for the cluster
              type: string
              readOnly: true
            staticIp:
              description: Static IP of the connectedEnvironment
              type: string
            daprAIConnectionString:
              type: string
              description: Application Insights connection string used by Dapr to export Service to Service communication telemetry
              x-ms-secret: true
            customDomainConfiguration:
              $ref: '#/components/schemas/CustomDomainConfiguration'
              description: Custom domain configuration for the environment
          x-ms-client-flatten: true
      type: object
    ConnectedEnvironmentCollection:
      description: Collection of connectedEnvironments
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ConnectedEnvironment'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    AvailableOperations:
      description: Available operations of the service
      type: object
      properties:
        value:
          description: Collection of available operation details
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OperationDetail'
          x-ms-identifiers:
            - name
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    OperationDetail:
      description: Operation detail payload
      type: object
      properties:
        name:
          description: Name of the operation
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: Display of the operation
        origin:
          description: Origin of the operation
          type: string
    OperationDisplay:
      description: Operation display payload
      type: object
      properties:
        provider:
          description: Resource provider of the operation
          type: string
        resource:
          description: Resource of the operation
          type: string
        operation:
          description: Localized friendly name for the operation
          type: string
        description:
          description: Localized friendly description for the operation
          type: string
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    dapr_components:
      id: azure.container_apps.dapr_components
      name: dapr_components
      title: dapr_components
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/get'
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/delete'
    dapr_components_secrets:
      id: azure.container_apps.dapr_components_secrets
      name: dapr_components_secrets
      title: dapr_components_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1listSecrets~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dapr_components_secrets/methods/list'
        insert: []
        update: []
        delete: []
    billing_meters:
      id: azure.container_apps.billing_meters
      name: billing_meters
      title: billing_meters
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1locations~1{location}~1billingMeters~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_meters/methods/get'
        insert: []
        update: []
        delete: []
    managed_environments:
      id: azure.container_apps.managed_environments
      name: managed_environments
      title: managed_environments
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1managedEnvironments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/delete'
    certificates:
      id: azure.container_apps.certificates
      name: certificates
      title: certificates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/delete'
    managed_certificates:
      id: azure.container_apps.managed_certificates
      name: managed_certificates
      title: managed_certificates
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/delete'
    namespaces:
      id: azure.container_apps.namespaces
      name: namespaces
      title: namespaces
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1checkNameAvailability~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    managed_environments_auth_token:
      id: azure.container_apps.managed_environments_auth_token
      name: managed_environments_auth_token
      title: managed_environments_auth_token
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1getAuthtoken~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_auth_token/methods/get'
        insert: []
        update: []
        delete: []
    managed_environments_workload_profile_states:
      id: azure.container_apps.managed_environments_workload_profile_states
      name: managed_environments_workload_profile_states
      title: managed_environments_workload_profile_states
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1workloadProfileStates~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_workload_profile_states/methods/list'
        insert: []
        update: []
        delete: []
    connected_environments_dapr_components:
      id: azure.container_apps.connected_environments_dapr_components
      name: connected_environments_dapr_components
      title: connected_environments_dapr_components
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/delete'
    connected_environments_dapr_components_secrets:
      id: azure.container_apps.connected_environments_dapr_components_secrets
      name: connected_environments_dapr_components_secrets
      title: connected_environments_dapr_components_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}~1listSecrets~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components_secrets/methods/list'
        insert: []
        update: []
        delete: []
    managed_environments_storages:
      id: azure.container_apps.managed_environments_storages
      name: managed_environments_storages
      title: managed_environments_storages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages~1{storageName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages~1{storageName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages~1{storageName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/delete'
    revisions_revisions:
      id: azure.container_apps.revisions_revisions
      name: revisions_revisions
      title: revisions_revisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions_revisions/methods/list'
        insert: []
        update: []
        delete: []
    revisions_revision:
      id: azure.container_apps.revisions_revision
      name: revisions_revision
      title: revisions_revision
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions_revision/methods/get'
        insert: []
        update: []
        delete: []
    revisions:
      id: azure.container_apps.revisions
      name: revisions
      title: revisions
      methods:
        activate_revision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1activate~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate_revision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1deactivate~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart_revision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1restart~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    revision_replicas_replica:
      id: azure.container_apps.revision_replicas_replica
      name: revision_replicas_replica
      title: revision_replicas_replica
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1replicas~1{replicaName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revision_replicas_replica/methods/get'
        insert: []
        update: []
        delete: []
    revision_replicas_replicas:
      id: azure.container_apps.revision_replicas_replicas
      name: revision_replicas_replicas
      title: revision_replicas_replicas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1replicas~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revision_replicas_replicas/methods/list'
        insert: []
        update: []
        delete: []
    diagnostics_detectors:
      id: azure.container_apps.diagnostics_detectors
      name: diagnostics_detectors
      title: diagnostics_detectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectors~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_detectors/methods/list'
        insert: []
        update: []
        delete: []
    diagnostics_detector:
      id: azure.container_apps.diagnostics_detector
      name: diagnostics_detector
      title: diagnostics_detector
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectors~1{detectorName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_detector/methods/get'
        insert: []
        update: []
        delete: []
    diagnostics_revisions:
      id: azure.container_apps.diagnostics_revisions
      name: diagnostics_revisions
      title: diagnostics_revisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectorProperties~1revisionsApi~1revisions~1~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_revisions/methods/list'
        insert: []
        update: []
        delete: []
    diagnostics_revision:
      id: azure.container_apps.diagnostics_revision
      name: diagnostics_revision
      title: diagnostics_revision
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectorProperties~1revisionsApi~1revisions~1{revisionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_revision/methods/get'
        insert: []
        update: []
        delete: []
    diagnostics_root:
      id: azure.container_apps.diagnostics_root
      name: diagnostics_root
      title: diagnostics_root
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectorProperties~1rootApi~1~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_root/methods/get'
        insert: []
        update: []
        delete: []
    managed_environment_diagnostics_detectors:
      id: azure.container_apps.managed_environment_diagnostics_detectors
      name: managed_environment_diagnostics_detectors
      title: managed_environment_diagnostics_detectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1detectors~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environment_diagnostics_detectors/methods/list'
        insert: []
        update: []
        delete: []
    managed_environment_diagnostics_detector:
      id: azure.container_apps.managed_environment_diagnostics_detector
      name: managed_environment_diagnostics_detector
      title: managed_environment_diagnostics_detector
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1detectors~1{detectorName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environment_diagnostics_detector/methods/get'
        insert: []
        update: []
        delete: []
    managed_environments_diagnostics_root:
      id: azure.container_apps.managed_environments_diagnostics_root
      name: managed_environments_diagnostics_root
      title: managed_environments_diagnostics_root
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1detectorProperties~1rootApi~1~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_diagnostics_root/methods/get'
        insert: []
        update: []
        delete: []
    jobs_detectors:
      id: azure.container_apps.jobs_detectors
      name: jobs_detectors
      title: jobs_detectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1detectors~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_detectors/methods/list'
        insert: []
        update: []
        delete: []
    jobs_detector:
      id: azure.container_apps.jobs_detector
      name: jobs_detector
      title: jobs_detector
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1detectors~1{detectorName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_detector/methods/get'
        insert: []
        update: []
        delete: []
    jobs:
      id: azure.container_apps.jobs
      name: jobs
      title: jobs
      methods:
        proxy_get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1detectorProperties~1{apiName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1jobs~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1start~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_execution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1executions~1{jobExecutionName}~1stop~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_multiple_executions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1stop~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        jobs:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1executions~1{jobExecutionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
    available_workload_profiles:
      id: azure.container_apps.available_workload_profiles
      name: available_workload_profiles
      title: available_workload_profiles
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1locations~1{location}~1availableManagedEnvironmentsWorkloadProfileTypes~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_workload_profiles/methods/get'
        insert: []
        update: []
        delete: []
    source_controls:
      id: azure.container_apps.source_controls
      name: source_controls
      title: source_controls
      methods:
        list_by_container_app:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols~1{sourceControlName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols~1{sourceControlName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols~1{sourceControlName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/get'
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/list_by_container_app'
        insert:
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/delete'
    connected_environments_certificates:
      id: azure.container_apps.connected_environments_certificates
      name: connected_environments_certificates
      title: connected_environments_certificates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/delete'
    container_apps:
      id: azure.container_apps.container_apps
      name: container_apps
      title: container_apps
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1containerApps~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1start~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1stop~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/get'
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/delete'
    custom_host_name_analysis:
      id: azure.container_apps.custom_host_name_analysis
      name: custom_host_name_analysis
      title: custom_host_name_analysis
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1listCustomHostNameAnalysis~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_host_name_analysis/methods/list'
        insert: []
        update: []
        delete: []
    secrets:
      id: azure.container_apps.secrets
      name: secrets
      title: secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1listSecrets~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/list'
        insert: []
        update: []
        delete: []
    auth_token:
      id: azure.container_apps.auth_token
      name: auth_token
      title: auth_token
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1getAuthtoken~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/auth_token/methods/get'
        insert: []
        update: []
        delete: []
    subscriptions:
      id: azure.container_apps.subscriptions
      name: subscriptions
      title: subscriptions
      methods:
        subscriptions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1getCustomDomainVerificationId~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    connected_environments_storages:
      id: azure.container_apps.connected_environments_storages
      name: connected_environments_storages
      title: connected_environments_storages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages~1{storageName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages~1{storageName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages~1{storageName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/delete'
    usages:
      id: azure.container_apps.usages
      name: usages
      title: usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1locations~1{location}~1usages~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list'
        insert: []
        update: []
        delete: []
    managed_environment_usages:
      id: azure.container_apps.managed_environment_usages
      name: managed_environment_usages
      title: managed_environment_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1usages~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environment_usages/methods/list'
        insert: []
        update: []
        delete: []
    jobs_executions:
      id: azure.container_apps.jobs_executions
      name: jobs_executions
      title: jobs_executions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1executions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_executions/methods/list'
        insert: []
        update: []
        delete: []
    jobs_secrets:
      id: azure.container_apps.jobs_secrets
      name: jobs_secrets
      title: jobs_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1listSecrets~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_secrets/methods/list'
        insert: []
        update: []
        delete: []
    auth_configs:
      id: azure.container_apps.auth_configs
      name: auth_configs
      title: auth_configs
      methods:
        list_by_container_app:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs~1{authConfigName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs~1{authConfigName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs~1{authConfigName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/list_by_container_app'
        insert:
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/delete'
    connected_environments:
      id: azure.container_apps.connected_environments
      name: connected_environments
      title: connected_environments
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1connectedEnvironments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1checkNameAvailability~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/delete'
    operations:
      id: azure.container_apps.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.App~1operations~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/?api-version=2024-03-01:
    get:
      tags:
        - DaprComponents
      summary: Get the Dapr Components for a managed environment.
      operationId: DaprComponents_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/?api-version=2024-03-01:
    get:
      tags:
        - DaprComponents
      summary: Get a dapr component.
      operationId: DaprComponents_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - DaprComponents
      summary: Creates or updates a Dapr Component.
      description: Creates or updates a Dapr Component in a Managed Environment.
      operationId: DaprComponents_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Dapr Component.
        required: true
        x-ms-requestBody-name: daprComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DaprComponent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
    delete:
      tags:
        - DaprComponents
      summary: Delete a Dapr Component.
      description: Delete a Dapr Component from a Managed Environment.
      operationId: DaprComponents_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Environment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/listSecrets/?api-version=2024-03-01:
    post:
      tags:
        - DaprComponents
      summary: List secrets for a dapr component
      operationId: DaprComponents_ListSecrets
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/billingMeters/?api-version=2024-03-01:
    get:
      tags:
        - BillingMeters
      summary: Get billing meters by location.
      description: Get all billingMeters for a location.
      operationId: BillingMeters_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMeterCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
      summary: Get all Environments for a subscription.
      description: Get all Managed Environments for a subscription.
      operationId: ManagedEnvironments_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
      summary: Get all the Environments in a resource group.
      description: Get all the Managed Environments in a resource group.
      operationId: ManagedEnvironments_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
      summary: Get the properties of a Managed Environment.
      description: Get the properties of a Managed Environment used to host container apps.
      operationId: ManagedEnvironments_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironments
      summary: Creates or updates a Managed Environment.
      description: Creates or updates a Managed Environment used to host container apps.
      operationId: ManagedEnvironments_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Environment.
        required: true
        x-ms-requestBody-name: environmentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - ManagedEnvironments
      summary: Delete a Managed Environment.
      description: Delete a Managed Environment if it does not have any container apps.
      operationId: ManagedEnvironments_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '202':
          description: Delete operation is in progress
        '204':
          description: Environment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - ManagedEnvironments
      summary: Update Managed Environment's properties.
      description: Patches a Managed Environment using JSON Merge Patch
      operationId: ManagedEnvironments_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Environment.
        required: true
        x-ms-requestBody-name: environmentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedEnvironment'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        '202':
          description: Patch operation is in progress.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Get the Certificates in a given managed environment.
      operationId: Certificates_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates/{certificateName}/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Get the specified Certificate.
      operationId: Certificates_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Create or Update a Certificate.
      operationId: Certificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Certificate to be created or updated
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Deletes the specified Certificate.
      operationId: Certificates_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Certificate does not exist
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Update properties of a certificate
      description: Patches a certificate. Currently only patching of tags is supported
      operationId: Certificates_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a certificate that need to be updated
        required: true
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePatch'
      responses:
        '200':
          description: Certificate updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates/{managedCertificateName}/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Get the specified Managed Certificate.
      operationId: ManagedCertificates_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Create or Update a Managed Certificate.
      operationId: ManagedCertificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Managed Certificate to be created or updated
        x-ms-requestBody-name: managedCertificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedCertificate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        '400':
          description: Bad Request.
          x-ms-error-response: true
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Deletes the specified Managed Certificate.
      operationId: ManagedCertificates_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Certificate does not exist
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Update tags of a managed certificate
      description: Patches a managed certificate. Oly patching of tags is supported
      operationId: ManagedCertificates_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a managed certificate that need to be updated
        required: true
        x-ms-requestBody-name: managedCertificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedCertificatePatch'
      responses:
        '200':
          description: Managed Certificate updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Get the Managed Certificates in a given managed environment.
      operationId: ManagedCertificates_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificateCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/checkNameAvailability/?api-version=2024-03-01:
    post:
      tags:
        - ManagedEnvironments
      summary: Checks the resource name availability.
      description: Checks if resource name is available.
      operationId: Namespaces_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: The check name availability request.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/getAuthtoken/?api-version=2024-03-01:
    post:
      tags:
        - ManagedEnvironments
      summary: Get auth token for a managed environment
      description: Checks if resource name is available.
      operationId: ManagedEnvironments_GetAuthToken
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAuthToken'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/workloadProfileStates/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
      summary: Get all workload Profile States for a Managed Environment..
      description: Get all workload Profile States for a Managed Environment.
      operationId: ManagedEnvironments_ListWorkloadProfileStates
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workloadProfileStatesCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/?api-version=2024-03-01:
    get:
      tags:
        - DaprComponents
      summary: Get the Dapr Components for a connected environment.
      operationId: ConnectedEnvironmentsDaprComponents_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}/?api-version=2024-03-01:
    get:
      tags:
        - DaprComponents
      summary: Get a dapr component.
      operationId: ConnectedEnvironmentsDaprComponents_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - DaprComponents
      summary: Creates or updates a Dapr Component.
      description: Creates or updates a Dapr Component in a connected environment.
      operationId: ConnectedEnvironmentsDaprComponents_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Dapr Component.
        required: true
        x-ms-requestBody-name: daprComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DaprComponent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
    delete:
      tags:
        - DaprComponents
      summary: Delete a Dapr Component.
      description: Delete a Dapr Component from a connected environment.
      operationId: ConnectedEnvironmentsDaprComponents_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Environment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}/listSecrets/?api-version=2024-03-01:
    post:
      tags:
        - DaprComponents
      summary: List secrets for a dapr component
      operationId: ConnectedEnvironmentsDaprComponents_ListSecrets
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironmentsStorages
      summary: Get all storages for a managedEnvironment.
      description: Get all storages for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentStoragesCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages/{storageName}/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironmentsStorages
      summary: Get storage for a managedEnvironment.
      description: Get storage for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironmentsStorages
      summary: Create or update storage for a managedEnvironment.
      description: Create or update storage for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of storage.
        required: true
        x-ms-requestBody-name: storageEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedEnvironmentStorage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ManagedEnvironmentsStorages
      summary: Delete storage for a managedEnvironment.
      description: Delete storage for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: Storage does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsRevisions
      summary: Get the Revisions for a given Container App.
      operationId: ContainerAppsRevisions_ListRevisions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App for which Revisions are needed.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Revision'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsRevisions
      summary: Get a revision of a Container App.
      operationId: ContainerAppsRevisions_GetRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/activate/?api-version=2024-03-01:
    post:
      tags:
        - ContainerAppsRevisions
      summary: Activates a revision for a Container App
      operationId: ContainerAppsRevisions_ActivateRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App revision was activated
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/deactivate/?api-version=2024-03-01:
    post:
      tags:
        - ContainerAppsRevisions
      summary: Deactivates a revision for a Container App
      operationId: ContainerAppsRevisions_DeactivateRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App revision was deactivated
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{replicaName}/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsRevisionReplicas
      summary: Get a replica for a Container App Revision.
      operationId: ContainerAppsRevisionReplicas_GetReplica
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
        - name: replicaName
          in: path
          description: Name of the Container App Revision Replica.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replica'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsRevisionReplicas
      summary: List replicas for a Container App Revision.
      operationId: ContainerAppsRevisionReplicas_ListReplicas
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/restart/?api-version=2024-03-01:
    post:
      tags:
        - ContainerAppsRevisions
      summary: Restarts a revision for a Container App
      operationId: ContainerAppsRevisions_RestartRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App revision was restarted
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors/?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get the list of diagnostics for a given Container App.
      operationId: ContainerAppsDiagnostics_ListDetectors
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App for which detector info is needed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors/{detectorName}/?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get a diagnostics result of a Container App.
      operationId: ContainerAppsDiagnostics_GetDetector
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: detectorName
          in: path
          description: Name of the Container App Detector.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostics'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions//?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get the Revisions for a given Container App.
      operationId: ContainerAppsDiagnostics_ListRevisions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App for which Revisions are needed.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Revision'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/{revisionName}/?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get a revision of a Container App.
      operationId: ContainerAppsDiagnostics_GetRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/rootApi//?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get the properties of a Container App.
      operationId: ContainerAppsDiagnostics_GetRoot
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '404':
          description: Not found.
          x-ms-error-response: true
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
        - Diagnostics
      summary: Get the list of diagnostics for a given Managed Environment.
      description: Get the list of diagnostics for a Managed Environment used to host container apps.
      operationId: ManagedEnvironmentDiagnostics_ListDetectors
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors/{detectorName}/?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
        - Diagnostics
      summary: Get the diagnostics data for a given Managed Environment.
      description: Get the diagnostics data for a Managed Environment used to host container apps.
      operationId: ManagedEnvironmentDiagnostics_GetDetector
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: detectorName
          in: path
          description: Name of the Managed Environment detector.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostics'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectorProperties/rootApi//?api-version=2024-03-01:
    get:
      tags:
        - ManagedEnvironments
        - Diagnostics
      summary: Get the properties of a Managed Environment.
      description: Get the properties of a Managed Environment used to host container apps.
      operationId: ManagedEnvironmentsDiagnostics_GetRoot
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
        - Diagnostics
      summary: Get the list of diagnostics for a given Container App Job.
      description: Get the list of diagnostics for a Container App Job.
      operationId: Jobs_ListDetectors
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors/{detectorName}/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
        - Diagnostics
      summary: Get the diagnostics data for a given Container App Job.
      description: Get the diagnostics data for a Container App Job.
      operationId: Jobs_GetDetector
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - name: detectorName
          in: path
          description: Name of the Container App Job detector.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostics'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectorProperties/{apiName}/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
        - Diagnostics
      summary: Get the properties of a Container App Job.
      description: Get the properties of a Container App Job.
      operationId: Jobs_ProxyGet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - name: apiName
          in: path
          description: Proxy API Name for Container App Job.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/availableManagedEnvironmentsWorkloadProfileTypes/?api-version=2024-03-01:
    get:
      tags:
        - AvailableWorkloadProfiles
      summary: Get available workload profiles by location.
      description: Get all available workload profiles for a location.
      operationId: AvailableWorkloadProfiles_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableWorkloadProfilesCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsSourceControls
      summary: Get the Container App SourceControls in a given resource group.
      operationId: ContainerAppsSourceControls_ListByContainerApp
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{sourceControlName}/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsSourceControls
      summary: Get a SourceControl of a Container App.
      operationId: ContainerAppsSourceControls_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: sourceControlName
          in: path
          description: Name of the Container App SourceControl.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ContainerAppsSourceControls
      summary: Create or update the SourceControl for a Container App.
      description: Create or update the SourceControl for a Container App.
      operationId: ContainerAppsSourceControls_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: sourceControlName
          in: path
          description: Name of the Container App SourceControl.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties used to create a Container App SourceControl
        required: true
        x-ms-requestBody-name: sourceControlEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceControl'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - ContainerAppsSourceControls
      summary: Delete a Container App SourceControl.
      description: Delete a Container App SourceControl.
      operationId: ContainerAppsSourceControls_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: sourceControlName
          in: path
          description: Name of the Container App SourceControl.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App SourceControl deleted successfully.
        '202':
          description: Delete operation is in progress.
        '204':
          description: Container App SourceControl does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates/?api-version=2024-03-01:
    get:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Get the Certificates in a given connected environment.
      operationId: ConnectedEnvironmentsCertificates_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates/{certificateName}/?api-version=2024-03-01:
    get:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Get the specified Certificate.
      operationId: ConnectedEnvironmentsCertificates_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Create or Update a Certificate.
      operationId: ConnectedEnvironmentsCertificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Certificate to be created or updated
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Deletes the specified Certificate.
      operationId: ConnectedEnvironmentsCertificates_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Certificate does not exist
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Update properties of a certificate
      description: Patches a certificate. Currently only patching of tags is supported
      operationId: ConnectedEnvironmentsCertificates_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a certificate that need to be updated
        required: true
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePatch'
      responses:
        '200':
          description: Certificate updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps/?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
      summary: Get the Container Apps in a given subscription.
      operationId: ContainerApps_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
      summary: Get the Container Apps in a given resource group.
      operationId: ContainerApps_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/?api-version=2024-03-01:
    get:
      tags:
        - ContainerApps
      summary: Get the properties of a Container App.
      operationId: ContainerApps_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '404':
          description: Not found.
          x-ms-error-response: true
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ContainerApps
      summary: Create or update a Container App.
      description: Create or update a Container App.
      operationId: ContainerApps_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties used to create a container app
        required: true
        x-ms-requestBody-name: containerAppEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerApp'
      responses:
        '200':
          description: No change performed on the Container App.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '201':
          description: Container App create or update has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ContainerApps
      summary: Delete a Container App.
      description: Delete a Container App.
      operationId: ContainerApps_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App deleted successfully.
        '202':
          description: Delete operation is in progress.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Container App does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - ContainerApps
      summary: Update properties of a Container App
      description: Patches a Container App using JSON Merge Patch
      operationId: ContainerApps_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a Container App that need to be updated
        required: true
        x-ms-requestBody-name: containerAppEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerApp'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '202':
          description: Patch operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listCustomHostNameAnalysis/?api-version=2024-03-01:
    post:
      tags:
        - ContainerApps
      summary: Analyzes a custom hostname for a Container App
      operationId: ContainerApps_ListCustomHostNameAnalysis
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: customHostname
          in: query
          description: Custom hostname.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomHostnameAnalysisResult'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listSecrets/?api-version=2024-03-01:
    post:
      tags:
        - ContainerApps
      summary: List secrets for a container app
      operationId: ContainerApps_ListSecrets
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/getAuthtoken/?api-version=2024-03-01:
    post:
      tags:
        - ContainerApps
      summary: Get auth token for a container app
      operationId: ContainerApps_GetAuthToken
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppAuthToken'
        '404':
          description: Not found.
          x-ms-error-response: true
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/start/?api-version=2024-03-01:
    post:
      tags:
        - ContainerApps
      summary: Start a container app
      operationId: ContainerApps_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Container App started successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '202':
          description: Start operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/stop/?api-version=2024-03-01:
    post:
      tags:
        - ContainerApps
      summary: Stop a container app
      operationId: ContainerApps_Stop
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Container App stopped successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '202':
          description: Stop operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.App/getCustomDomainVerificationId/?api-version=2024-03-01:
    post:
      tags:
        - Subscriptions
      description: Get the verification id of a subscription used for verifying custom domains
      operationId: GetCustomDomainVerificationId
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The custom domain verification id has been returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomainVerificationId'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages/?api-version=2024-03-01:
    get:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Get all storages for a connectedEnvironment.
      description: Get all storages for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentStoragesCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages/{storageName}/?api-version=2024-03-01:
    get:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Get storage for a connectedEnvironment.
      description: Get storage for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Create or update storage for a connectedEnvironment.
      description: Create or update storage for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of storage.
        required: true
        x-ms-requestBody-name: storageEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedEnvironmentStorage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Delete storage for a connectedEnvironment.
      description: Delete storage for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: Storage does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/usages/?api-version=2024-03-01:
    get:
      tags:
        - Usages
      operationId: Usages_List
      description: Gets, for the specified location, the current resource usage information as well as the limits under the subscription.
      parameters:
        - name: location
          in: path
          description: The location for which resource usage is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/usages/?api-version=2024-03-01:
    get:
      tags:
        - Usages
      operationId: ManagedEnvironmentUsages_List
      description: Gets the current usage information as well as the limits for environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.App/jobs/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
      summary: Get the Container Apps Jobs in a given subscription.
      operationId: Jobs_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
      summary: Get the Container Apps Jobs in a given resource group.
      operationId: Jobs_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
      summary: Get the properties of a Container Apps Job.
      operationId: Jobs_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - Jobs
      summary: Create or Update a Container Apps Job.
      description: Create or Update a Container Apps Job.
      operationId: Jobs_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      requestBody:
        description: Properties used to create a container apps job
        required: true
        x-ms-requestBody-name: JobEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: No change performed on the Container Apps Job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '201':
          description: Container Apps Job create has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Jobs
      summary: Delete a Container Apps Job.
      description: Delete a Container Apps Job.
      operationId: Jobs_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: Container Apps Job deleted successfully.
        '202':
          description: Delete operation is in progress.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Container Apps Job does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Jobs
      summary: Update properties of a Container Apps Job
      description: Patches a Container Apps Job using JSON Merge Patch
      operationId: Jobs_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      requestBody:
        description: Properties used to create a container apps job
        required: true
        x-ms-requestBody-name: JobEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPatchProperties'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '202':
          description: Patch operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/start/?api-version=2024-03-01:
    post:
      tags:
        - Jobs
      summary: Start a Container Apps Job
      operationId: Jobs_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      requestBody:
        description: Properties used to start a job execution.
        required: false
        x-ms-requestBody-name: template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobExecutionTemplate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionBase'
        '202':
          description: OK
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}/stop/?api-version=2024-03-01:
    post:
      tags:
        - Jobs
      summary: Terminates execution of a running container apps job
      operationId: Jobs_StopExecution
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - $ref: '#/components/parameters/JobExecutionNameParameter'
      responses:
        '200':
          description: Container Apps Jobs terminated successfully.
        '202':
          description: OK
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/stop/?api-version=2024-03-01:
    post:
      tags:
        - Jobs
      summary: Terminates execution of a running container apps job
      operationId: Jobs_StopMultipleExecutions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: List of all the job executions that were requested to be stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppJobExecutions'
        '202':
          description: OK
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
      summary: Get a Container Apps Job's executions
      operationId: JobsExecutions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppJobExecutions'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}/?api-version=2024-03-01:
    get:
      tags:
        - Jobs
      summary: Get details of a single job execution
      operationId: JobExecution
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - $ref: '#/components/parameters/JobExecutionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/listSecrets/?api-version=2024-03-01:
    post:
      tags:
        - Jobs
      summary: List secrets for a container apps job
      operationId: Jobs_ListSecrets
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsAuthConfigs
      summary: Get the Container App AuthConfigs in a given resource group.
      operationId: ContainerAppsAuthConfigs_ListByContainerApp
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfigCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{authConfigName}/?api-version=2024-03-01:
    get:
      tags:
        - ContainerAppsAuthConfigs
      summary: Get a AuthConfig of a Container App.
      operationId: ContainerAppsAuthConfigs_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: authConfigName
          in: path
          description: Name of the Container App AuthConfig.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfig'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ContainerAppsAuthConfigs
      summary: Create or update the AuthConfig for a Container App.
      description: Create or update the AuthConfig for a Container App.
      operationId: ContainerAppsAuthConfigs_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: authConfigName
          in: path
          description: Name of the Container App AuthConfig.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties used to create a Container App AuthConfig
        required: true
        x-ms-requestBody-name: authConfigEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthConfig'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfig'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ContainerAppsAuthConfigs
      summary: Delete a Container App AuthConfig.
      description: Delete a Container App AuthConfig.
      operationId: ContainerAppsAuthConfigs_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: authConfigName
          in: path
          description: Name of the Container App AuthConfig.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App deleted successfully.
        '204':
          description: Container App AuthConfig does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/connectedEnvironments/?api-version=2024-03-01:
    get:
      tags:
        - ConnectedEnvironments
      summary: Get all connectedEnvironments for a subscription.
      description: Get all connectedEnvironments for a subscription.
      operationId: ConnectedEnvironments_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/?api-version=2024-03-01:
    get:
      tags:
        - ConnectedEnvironments
      operationId: ConnectedEnvironments_ListByResourceGroup
      description: Get all connectedEnvironments in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/?api-version=2024-03-01:
    get:
      tags:
        - ConnectedEnvironments
      operationId: ConnectedEnvironments_Get
      description: Get the properties of an connectedEnvironment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ConnectedEnvironments
      description: Creates or updates an connectedEnvironment.
      operationId: ConnectedEnvironments_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the connectedEnvironment.
        required: true
        x-ms-requestBody-name: environmentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ConnectedEnvironments
      summary: Delete an connectedEnvironment.
      description: Delete an connectedEnvironment.
      operationId: ConnectedEnvironments_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '202':
          description: Delete operation is accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: ConnectedEnvironment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ConnectedEnvironments
      summary: Update connected Environment's properties.
      description: Patches a Managed Environment. Only patching of tags is supported currently
      operationId: ConnectedEnvironments_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/checkNameAvailability/?api-version=2024-03-01:
    post:
      tags:
        - ConnectedEnvironments
      summary: Checks the resource connectedEnvironmentName availability.
      description: Checks if resource connectedEnvironmentName is available.
      operationId: ConnectedEnvironments_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: The check connectedEnvironmentName availability request.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /providers/Microsoft.App/operations/?api-version=2024-03-01:
    get:
      tags:
        - Operations
      description: Lists all of the available RP operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableOperations'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
