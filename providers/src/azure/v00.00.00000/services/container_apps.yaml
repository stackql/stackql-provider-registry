openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Container Apps
  description: Azure Container Apps allows you to run containerized applications without worrying about orchestration or infrastructure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    JobNameParameter:
      name: jobName
      in: path
      description: Job Name
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        type: string
    JobExecutionNameParameter:
      name: jobExecutionName
      in: path
      description: Job execution name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        type: string
    PrivateEndpointConnectionName:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    BuildNameParameter:
      name: buildName
      in: path
      description: The name of a build.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 2
        maxLength: 64
        pattern: ^[-\w\._\(\)]+$
        type: string
    BuilderNameParameter:
      name: builderName
      in: path
      description: The name of the builder.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 2
        maxLength: 32
        pattern: ^[-\w\._\(\)]+$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    SessionPoolNameParameter:
      name: sessionPoolName
      in: path
      description: Name of the session pool.
      required: true
      schema:
        pattern: ^[a-z][a-z0-9]*$
        minLength: 3
        maxLength: 63
        type: string
    ContainerAppsPatchNameParameter:
      name: patchName
      in: path
      description: The name of the patch
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 2
        maxLength: 64
        pattern: ^[-\w\._\(\)]+$
        type: string
    ContainerAppsNameParameter:
      name: containerAppName
      in: path
      description: Name of the Container App the Build is associated.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ContainerAppsBuildNameParameter:
      name: buildName
      in: path
      description: The name of a build.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 2
        maxLength: 64
        pattern: ^[-\w\._\(\)]+$
        type: string
  schemas:
    CustomDomainVerificationId:
      description: Custom domain verification Id of a subscription
      type: string
      readOnly: true
    SourceControl:
      description: Container App SourceControl.
      properties:
        properties:
          description: SourceControl resource specific properties
          type: object
          properties:
            operationState:
              description: Current provisioning State of the operation
              enum:
                - InProgress
                - Succeeded
                - Failed
                - Canceled
              type: string
              readOnly: true
              x-ms-enum:
                name: SourceControlOperationState
                modelAsString: true
            repoUrl:
              description: The repo url which will be integrated to ContainerApp.
              type: string
            branch:
              description: The branch which will trigger the auto deployment
              type: string
            githubActionConfiguration:
              $ref: '#/components/schemas/GithubActionConfiguration'
              description: |-
                Container App Revision Template with all possible settings and the
                defaults if user did not provide them. The defaults are populated
                as they were at the creation time
          x-ms-client-flatten: true
      type: object
    GithubActionConfiguration:
      description: Configuration properties that define the mutable settings of a Container App SourceControl
      type: object
      properties:
        registryInfo:
          $ref: '#/components/schemas/RegistryInfo'
          description: Registry configurations.
        azureCredentials:
          $ref: '#/components/schemas/AzureCredentials'
          description: AzureCredentials configurations.
        contextPath:
          description: Context path
          type: string
        githubPersonalAccessToken:
          description: One time Github PAT to configure github environment
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        image:
          description: Image name
          type: string
        publishType:
          description: Code or Image
          type: string
        os:
          description: Operation system
          type: string
        runtimeStack:
          description: Runtime stack
          type: string
        runtimeVersion:
          description: Runtime version
          type: string
        buildEnvironmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          x-ms-identifiers:
            - name
          description: List of environment variables to be passed to the build.
    RegistryInfo:
      description: Container App registry information.
      type: object
      properties:
        registryUrl:
          description: registry server Url.
          type: string
        registryUserName:
          description: registry username.
          type: string
        registryPassword:
          description: registry secret.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    AzureCredentials:
      description: Container App credentials.
      type: object
      properties:
        clientId:
          description: Client Id.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        clientSecret:
          description: Client Secret.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        tenantId:
          description: Tenant Id.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        kind:
          description: Kind of auth github does for deploying the template
          type: string
          x-ms-mutability:
            - create
            - update
        subscriptionId:
          description: Subscription Id.
          type: string
    SourceControlCollection:
      description: SourceControl collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/SourceControl'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    FunctionsProxySerializedResponse:
      type: string
      description: Functions host call response as a serialized string, a common type of string is used as multiple response structures are possible.
    BillingMeter:
      description: Billing meter.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          description: Region for the billing meter.
        properties:
          description: Revision resource specific properties
          type: object
          properties:
            category:
              description: Used to categorize billing meters.
              type: string
            meterType:
              type: string
              description: Billing meter type.
            displayName:
              type: string
              description: The everyday name of the billing meter.
      type: object
    BillingMeterCollection:
      description: Collection of billing meters.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of billing meters.
          type: array
          items:
            $ref: '#/components/schemas/BillingMeter'
    JobConfiguration:
      description: Non versioned Container Apps Job configuration properties
      type: object
      required:
        - replicaTimeout
        - triggerType
      properties:
        secrets:
          description: Collection of secrets used by a Container Apps Job
          type: array
          items:
            $ref: '#/components/schemas/Secret'
          x-ms-identifiers:
            - name
        triggerType:
          description: Trigger type of the job
          enum:
            - Schedule
            - Event
            - Manual
          type: string
          default: Manual
          x-ms-enum:
            name: TriggerType
            modelAsString: true
        replicaTimeout:
          description: Maximum number of seconds a replica is allowed to run.
          format: int32
          type: integer
        replicaRetryLimit:
          format: int32
          description: Maximum number of retries before failing the job.
          type: integer
        manualTriggerConfig:
          type: object
          description: Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default
          properties:
            replicaCompletionCount:
              $ref: '#/components/schemas/ReplicaCompletionCount'
            parallelism:
              $ref: '#/components/schemas/Parallelism'
        scheduleTriggerConfig:
          description: Cron formatted repeating trigger schedule ("* * * * *") for cronjobs. Properties completions and parallelism would be set to 1 by default
          required:
            - cronExpression
          type: object
          properties:
            replicaCompletionCount:
              $ref: '#/components/schemas/ReplicaCompletionCount'
            cronExpression:
              description: Cron formatted repeating schedule ("* * * * *") of a Cron Job.
              type: string
            parallelism:
              $ref: '#/components/schemas/Parallelism'
        eventTriggerConfig:
          type: object
          description: Trigger configuration of an event driven job.
          properties:
            replicaCompletionCount:
              $ref: '#/components/schemas/ReplicaCompletionCount'
            parallelism:
              $ref: '#/components/schemas/Parallelism'
            scale:
              $ref: '#/components/schemas/JobScale'
        registries:
          description: Collection of private container registry credentials used by a Container apps job
          type: array
          items:
            $ref: '#/components/schemas/RegistryCredentials'
          x-ms-identifiers:
            - server
        identitySettings:
          description: Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.
          type: array
          items:
            $ref: '#/components/schemas/IdentitySettings'
          x-ms-identifiers:
            - identity
    Job:
      description: Container App Job
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        identity:
          description: Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          description: Container Apps Job resource specific properties.
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Container Apps Job.
              enum:
                - InProgress
                - Succeeded
                - Failed
                - Canceled
                - Deleting
              type: string
              readOnly: true
              x-ms-enum:
                name: JobProvisioningState
                modelAsString: true
            environmentId:
              description: Resource ID of environment.
              type: string
              x-ms-mutability:
                - create
                - read
            workloadProfileName:
              $ref: '#/components/schemas/WorkloadProfileName'
              description: Workload profile name to pin for container apps job execution.
            configuration:
              $ref: '#/components/schemas/JobConfiguration'
              description: Container Apps Job configuration properties.
            template:
              $ref: '#/components/schemas/JobTemplate'
              description: Container Apps job definition.
            outboundIpAddresses:
              description: Outbound IP Addresses of a container apps job.
              type: array
              items:
                type: string
              readOnly: true
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the container apps job.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    JobPatchProperties:
      description: Container Apps Job resource specific properties.
      properties:
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        identity:
          description: Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        properties:
          type: object
          properties:
            environmentId:
              description: Resource ID of environment.
              type: string
              x-ms-mutability:
                - create
                - read
                - update
            configuration:
              $ref: '#/components/schemas/JobConfiguration'
              description: Container Apps Job configuration properties.
            template:
              $ref: '#/components/schemas/JobTemplate'
              description: Container Apps job definition.
            outboundIpAddresses:
              description: Outbound IP Addresses of a container apps job.
              type: array
              items:
                type: string
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the container apps job.
              type: string
      type: object
    JobsCollection:
      description: Container Apps Jobs collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Job'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    RegistryCredentials:
      description: Container App Private Registry
      type: object
      properties:
        server:
          description: Container Registry Server
          type: string
        username:
          description: Container Registry Username
          type: string
        passwordSecretRef:
          description: The name of the Secret that contains the registry login password
          type: string
        identity:
          description: A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'
          type: string
    JobSecretsCollection:
      description: Container Apps Job Secrets Collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Secret'
          x-ms-identifiers:
            - name
    ReplicaCompletionCount:
      description: Minimum number of successful replica completions before overall job completion.
      format: int32
      type: integer
    Parallelism:
      description: Number of parallel replicas of a job that can run at a given time.
      format: int32
      type: integer
    PollingInterval:
      description: Interval to check each event source in seconds. Defaults to 30s
      format: int32
      type: integer
    JobScaleRule:
      description: Scaling rule.
      type: object
      properties:
        name:
          description: Scale Rule Name
          type: string
        type:
          description: |-
            Type of the scale rule
            eg: azure-servicebus, redis etc.
          type: string
        metadata:
          description: Metadata properties to describe the scale rule.
          type: object
        auth:
          description: Authentication secrets for the scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
        identity:
          description: The resource ID of a user-assigned managed identity that is assigned to the job, or 'system' for system-assigned identity.
          type: string
    JobScale:
      description: Scaling configurations for event driven jobs.
      type: object
      properties:
        pollingInterval:
          $ref: '#/components/schemas/PollingInterval'
        minExecutions:
          format: int32
          description: Minimum number of job executions that are created for a trigger, default 0
          type: integer
          default: 0
        maxExecutions:
          format: int32
          description: Maximum number of job executions that are created for a trigger, default 100.
          type: integer
          default: 100
        rules:
          description: Scaling rules.
          type: array
          items:
            $ref: '#/components/schemas/JobScaleRule'
    JobExecutionBase:
      description: Container App's Job execution name.
      type: object
      properties:
        name:
          description: Job execution name.
          type: string
        id:
          description: Job execution Id.
          type: string
    JobExecution:
      description: Container Apps Job execution.
      properties:
        name:
          description: Job execution Name.
          type: string
        id:
          description: Job execution Id.
          type: string
        type:
          description: Job execution type
          type: string
        properties:
          description: Container Apps Job execution specific properties.
          type: object
          properties:
            status:
              description: Current running State of the job
              enum:
                - Running
                - Processing
                - Stopped
                - Degraded
                - Failed
                - Unknown
                - Succeeded
              type: string
              readOnly: true
              x-ms-enum:
                name: JobExecutionRunningState
                modelAsString: true
            startTime:
              description: Job execution start time.
              format: date-time
              type: string
            endTime:
              description: Job execution end time.
              format: date-time
              type: string
            template:
              description: Job's execution container.
              $ref: '#/components/schemas/JobExecutionTemplate'
            detailedStatus:
              description: Detailed status of the job execution.
              $ref: '#/components/schemas/ExecutionStatus'
          x-ms-client-flatten: true
      type: object
    ExecutionStatus:
      description: Container Apps Job execution status.
      type: object
      properties:
        replicas:
          description: Replicas in the execution.
          type: array
          items:
            $ref: '#/components/schemas/ReplicaExecutionStatus'
          x-ms-identifiers:
            - name
    ReplicaExecutionStatus:
      description: Container Apps Job execution replica status.
      type: object
      properties:
        name:
          description: Replica Name.
          type: string
        containers:
          description: Containers in the execution replica
          type: array
          items:
            $ref: '#/components/schemas/ContainerExecutionStatus'
          x-ms-identifiers:
            - name
    ContainerExecutionStatus:
      description: Container Apps Job execution container status. Contains status code and reason
      type: object
      properties:
        name:
          description: Container Name.
          type: string
        code:
          description: Exit code
          type: integer
          format: int32
        additionalInformation:
          description: Additional information for the container status
          type: string
        status:
          description: Status of the container
          type: string
    ContainerAppJobExecutions:
      description: Container App executions collection ARM resource.
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/JobExecution'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
      required:
        - value
    JobExecutionNamesCollection:
      description: Container App executions names list.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/JobExecutionBase'
    JobExecutionTemplate:
      description: Job's execution template, containing container configuration for a job's execution
      type: object
      properties:
        containers:
          description: List of container definitions for the Container Apps Job.
          type: array
          items:
            $ref: '#/components/schemas/JobExecutionContainer'
          x-ms-identifiers:
            - name
        initContainers:
          description: List of specialized containers that run before job containers.
          type: array
          items:
            $ref: '#/components/schemas/JobExecutionContainer'
          x-ms-identifiers:
            - name
    JobExecutionContainer:
      description: Container Apps Jobs execution container definition.
      type: object
      properties:
        image:
          description: Container image tag.
          type: string
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
    EnvironmentVar:
      description: Container App container environment variable.
      type: object
      properties:
        name:
          description: Environment variable name.
          type: string
        value:
          description: Non-secret environment variable value.
          type: string
        secretRef:
          description: Name of the Container App secret from which to pull the environment variable value.
          type: string
    WorkloadProfileName:
      description: Workload profile name for container apps to execute on.
      type: string
    WorkloadProfileType:
      description: Workload profile type for container apps to execute on.
      type: string
    BaseContainer:
      description: Container App base container definition.
      type: object
      properties:
        image:
          description: Container image tag.
          type: string
        imageType:
          description: The type of the image. Set to CloudBuild to let the system manages the image, where user will not be able to update image through image field. Set to ContainerImage for user provided image.
          type: string
          enum:
            - CloudBuild
            - ContainerImage
          x-ms-enum:
            name: imageType
            modelAsString: true
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
        volumeMounts:
          description: Container volume mounts.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
          x-ms-identifiers:
            - volumeName
    InitContainer:
      description: Container App init container definition
      properties:
        image:
          description: Container image tag.
          type: string
        imageType:
          description: The type of the image. Set to CloudBuild to let the system manages the image, where user will not be able to update image through image field. Set to ContainerImage for user provided image.
          type: string
          enum:
            - CloudBuild
            - ContainerImage
          x-ms-enum:
            name: imageType
            modelAsString: true
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
        volumeMounts:
          description: Container volume mounts.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
          x-ms-identifiers:
            - volumeName
      type: object
    Container:
      description: Container App container definition
      properties:
        image:
          description: Container image tag.
          type: string
        imageType:
          description: The type of the image. Set to CloudBuild to let the system manages the image, where user will not be able to update image through image field. Set to ContainerImage for user provided image.
          type: string
          enum:
            - CloudBuild
            - ContainerImage
          x-ms-enum:
            name: imageType
            modelAsString: true
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/ContainerResources'
          description: Container resource requirements.
        volumeMounts:
          description: Container volume mounts.
          type: array
          items:
            $ref: '#/components/schemas/VolumeMount'
          x-ms-identifiers:
            - volumeName
        probes:
          description: List of probes for the container.
          type: array
          items:
            $ref: '#/components/schemas/ContainerAppProbe'
          x-ms-identifiers:
            - type
      type: object
    ContainerResources:
      description: Container App container resource requirements.
      type: object
      properties:
        cpu:
          format: double
          description: Required CPU in cores, e.g. 0.5
          type: number
        memory:
          description: Required memory, e.g. "250Mb"
          type: string
        ephemeralStorage:
          description: Ephemeral Storage, e.g. "1Gi"
          type: string
          readOnly: true
    ContainerAppProbe:
      description: Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
      type: object
      properties:
        failureThreshold:
          description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.
          type: integer
          format: int32
        httpGet:
          description: HTTPGet specifies the http request to perform.
          type: object
          required:
            - port
          properties:
            host:
              description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
              type: string
            httpHeaders:
              description: Custom headers to set in the request. HTTP allows repeated headers.
              type: array
              items:
                description: HTTPHeader describes a custom header to be used in HTTP probes
                type: object
                required:
                  - name
                  - value
                properties:
                  name:
                    description: The header field name
                    type: string
                  value:
                    description: The header field value
                    type: string
              x-ms-identifiers:
                - name
            path:
              description: Path to access on the HTTP server.
              type: string
            port:
              description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
              type: integer
              format: int32
            scheme:
              description: Scheme to use for connecting to the host. Defaults to HTTP.
              enum:
                - HTTP
                - HTTPS
              type: string
              x-ms-enum:
                name: Scheme
                modelAsString: true
        initialDelaySeconds:
          description: Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.
          type: integer
          format: int32
        periodSeconds:
          description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.
          type: integer
          format: int32
        successThreshold:
          description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.
          type: integer
          format: int32
        tcpSocket:
          description: TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.
          type: object
          required:
            - port
          properties:
            host:
              description: 'Optional: Host name to connect to, defaults to the pod IP.'
              type: string
            port:
              description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
              type: integer
              format: int32
        terminationGracePeriodSeconds:
          description: Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)
          type: integer
          format: int64
        timeoutSeconds:
          description: Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.
          type: integer
          format: int32
        type:
          description: The type of probe.
          enum:
            - Liveness
            - Readiness
            - Startup
          type: string
          x-ms-enum:
            name: Type
            modelAsString: true
    ContainerRegistryWithCustomImage:
      type: object
      properties:
        server:
          type: string
          description: Login server of the container registry that the final image should be uploaded to. Builder resource needs to have this container registry defined along with an identity to use to access it.
        image:
          type: string
          description: Full name that the final image should be uploaded as, including both image name and tag.
      description: Container registry that the final image will be uploaded to.
      required:
        - server
    CustomScaleRule:
      description: Container App container Custom scaling rule.
      type: object
      properties:
        type:
          description: |-
            Type of the custom scale rule
            eg: azure-servicebus, redis etc.
          type: string
        metadata:
          description: Metadata properties to describe custom scale rule.
          type: object
          additionalProperties:
            type: string
        auth:
          description: Authentication secrets for the custom scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
        identity:
          description: The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.
          type: string
    CustomDomainConfiguration:
      type: object
      description: Configuration properties for apps environment custom domain
      properties:
        customDomainVerificationId:
          description: Id used to verify domain name ownership
          type: string
          readOnly: true
        dnsSuffix:
          type: string
          description: Dns suffix for the environment domain
          x-ms-mutability:
            - create
            - read
        certificateKeyVaultProperties:
          description: Certificate stored in Azure Key Vault.
          $ref: '#/components/schemas/CertificateKeyVaultProperties'
        certificateValue:
          format: byte
          description: PFX or PEM blob
          type: string
          x-ms-secret: true
        certificatePassword:
          description: Certificate password
          type: string
          x-ms-secret: true
        expirationDate:
          format: date-time
          description: Certificate expiration date.
          type: string
          readOnly: true
        thumbprint:
          description: Certificate thumbprint.
          type: string
          readOnly: true
        subjectName:
          description: Subject name of the certificate.
          type: string
          readOnly: true
    DefaultErrorResponse:
      description: App Service error response.
      type: object
      properties:
        error:
          description: Error model.
          type: object
          properties:
            code:
              description: Standardized string to programmatically identify the error.
              type: string
              readOnly: true
            message:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            target:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            details:
              type: array
              description: Details or the error
              items:
                description: Detailed errors.
                type: object
                properties:
                  code:
                    description: Standardized string to programmatically identify the error.
                    type: string
                    readOnly: true
                  message:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                  target:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                readOnly: true
              x-ms-identifiers:
                - code
            innererror:
              description: More information to debug error.
              type: string
              readOnly: true
          readOnly: true
    HttpGet:
      type: object
      properties:
        url:
          type: string
          description: URL to make HTTP GET request against.
        fileName:
          type: string
          description: Name of the file that the request should be saved to.
        headers:
          type: array
          items:
            type: string
          description: List of headers to send with the request.
      description: Model representing a http get request.
      required:
        - url
    HttpScaleRule:
      description: Container App container Http scaling rule.
      type: object
      properties:
        metadata:
          description: Metadata properties to describe http scale rule.
          type: object
          additionalProperties:
            type: string
        auth:
          description: Authentication secrets for the custom scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
        identity:
          description: The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.
          type: string
    PreBuildStep:
      type: object
      properties:
        description:
          type: string
          description: Description of the pre-build step.
        scripts:
          type: array
          items:
            type: string
          description: List of custom commands to run.
        httpGet:
          $ref: '#/components/schemas/HttpGet'
          description: Http get request to send before the build.
          x-ms-identifiers: []
      description: Model representing a pre-build step.
    TcpScaleRule:
      description: Container App container Tcp scaling rule.
      type: object
      properties:
        metadata:
          description: Metadata properties to describe tcp scale rule.
          type: object
          additionalProperties:
            type: string
        auth:
          description: Authentication secrets for the tcp scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
        identity:
          description: The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.
          type: string
    QueueScaleRule:
      description: Container App container Azure Queue based scaling rule.
      type: object
      properties:
        accountName:
          description: Storage account name. required if using managed identity to authenticate
          type: string
        queueName:
          description: Queue name.
          type: string
        queueLength:
          format: int32
          description: Queue length.
          type: integer
        auth:
          description: Authentication secrets for the queue scale rule.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRuleAuth'
          x-ms-identifiers:
            - triggerParameter
        identity:
          description: The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.
          type: string
    Scale:
      description: Container App scaling configurations.
      type: object
      properties:
        minReplicas:
          format: int32
          description: Optional. Minimum number of container replicas.
          type: integer
        maxReplicas:
          format: int32
          description: Optional. Maximum number of container replicas. Defaults to 10 if not set.
          type: integer
          default: 10
        rules:
          description: Scaling rules.
          type: array
          items:
            $ref: '#/components/schemas/ScaleRule'
          x-ms-identifiers:
            - name
    ScaleRule:
      description: Container App container scaling rule.
      type: object
      properties:
        name:
          description: Scale Rule Name
          type: string
        azureQueue:
          $ref: '#/components/schemas/QueueScaleRule'
          description: Azure Queue based scaling.
        custom:
          $ref: '#/components/schemas/CustomScaleRule'
          description: Custom scale rule.
        http:
          $ref: '#/components/schemas/HttpScaleRule'
          description: HTTP requests based scaling.
        tcp:
          $ref: '#/components/schemas/TcpScaleRule'
          description: Tcp requests based scaling.
    ScaleRuleAuth:
      description: Auth Secrets for Scale Rule
      type: object
      properties:
        secretRef:
          description: Name of the secret from which to pull the auth params.
          type: string
        triggerParameter:
          description: Trigger Parameter that uses the secret
          type: string
    Secret:
      description: Secret definition.
      type: object
      properties:
        name:
          description: Secret Name.
          type: string
        value:
          description: Secret Value.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        identity:
          description: Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
          type: string
        keyVaultUrl:
          description: Azure Key Vault URL pointing to the secret referenced by the container app.
          type: string
    Template:
      description: |-
        Container App versioned application definition.
        Defines the desired state of an immutable revision.
        Any changes to this section Will result in a new revision being created
      type: object
      properties:
        revisionSuffix:
          description: User friendly suffix that is appended to the revision name
          type: string
        terminationGracePeriodSeconds:
          description: Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
          format: int64
          type: integer
        initContainers:
          description: List of specialized containers that run before app containers.
          type: array
          items:
            $ref: '#/components/schemas/InitContainer'
          x-ms-identifiers:
            - name
        containers:
          description: List of container definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Container'
          x-ms-identifiers:
            - name
        scale:
          $ref: '#/components/schemas/Scale'
          description: Scaling properties for the Container App.
        volumes:
          description: List of volume definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          x-ms-identifiers:
            - name
        serviceBinds:
          description: List of container app services bound to the app
          type: array
          items:
            $ref: '#/components/schemas/ServiceBind'
          x-ms-identifiers:
            - name
    Volume:
      description: Volume definitions for the Container App.
      type: object
      properties:
        name:
          description: Volume name.
          type: string
        storageType:
          description: Storage type for the volume. If not provided, use EmptyDir.
          enum:
            - AzureFile
            - EmptyDir
            - Secret
            - NfsAzureFile
            - Smb
          type: string
          x-ms-enum:
            name: StorageType
            modelAsString: true
        storageName:
          description: Name of storage resource. No need to provide for EmptyDir and Secret.
          type: string
        secrets:
          description: List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.
          type: array
          items:
            $ref: '#/components/schemas/SecretVolumeItem'
          x-ms-identifiers:
            - secretRef
        mountOptions:
          description: Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.
          type: string
    SecretVolumeItem:
      description: Secret to be added to volume.
      type: object
      properties:
        secretRef:
          description: Name of the Container App secret from which to pull the secret value.
          type: string
        path:
          description: Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.
          type: string
    VolumeMount:
      description: Volume mount for the Container App.
      type: object
      properties:
        volumeName:
          description: This must match the Name of a Volume.
          type: string
        mountPath:
          description: Path within the container at which the volume should be mounted.Must not contain ':'.
          type: string
        subPath:
          description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
          type: string
    DaprComponentsCollection:
      description: Dapr Components ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/DaprComponent'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    DaprComponent:
      description: Dapr Component.
      properties:
        properties:
          description: Dapr Component resource specific properties
          type: object
          properties:
            componentType:
              description: Component type
              type: string
            version:
              description: Component version
              type: string
            ignoreErrors:
              description: Boolean describing if the component errors are ignores
              type: boolean
              default: false
            initTimeout:
              description: Initialization timeout
              type: string
            secrets:
              description: Collection of secrets used by a Dapr component
              type: array
              items:
                $ref: '#/components/schemas/Secret'
              x-ms-identifiers:
                - name
            secretStoreComponent:
              description: Name of a Dapr component to retrieve component secrets from
              type: string
            metadata:
              description: Component metadata
              type: array
              items:
                $ref: '#/components/schemas/DaprMetadata'
              x-ms-identifiers:
                - name
            scopes:
              description: Names of container apps that can use this Dapr component
              type: array
              items:
                type: string
            serviceComponentBind:
              description: List of container app services that are bound to the Dapr component
              type: array
              items:
                $ref: '#/components/schemas/DaprComponentServiceBinding'
              x-ms-identifiers:
                - name
          x-ms-client-flatten: true
      type: object
    DaprMetadata:
      description: Dapr component metadata.
      type: object
      properties:
        name:
          description: Metadata property name.
          type: string
        value:
          description: Metadata property value.
          type: string
        secretRef:
          description: Name of the Dapr Component secret from which to pull the metadata property value.
          type: string
    DaprComponentServiceBinding:
      description: Configuration to bind a Dapr Component to a dev ContainerApp Service
      type: object
      properties:
        name:
          description: Name of the service bind
          type: string
        serviceId:
          description: Resource id of the target service
          type: string
        metadata:
          description: Service bind metadata
          type: array
          $ref: '#/components/schemas/DaprServiceBindMetadata'
    DaprServiceBindMetadata:
      description: Dapr component metadata.
      type: object
      properties:
        name:
          description: Service bind metadata property name.
          type: string
        value:
          description: Service bind metadata property value.
          type: string
    DaprSecretsCollection:
      description: Dapr component Secrets Collection for ListSecrets Action.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of secrets used by a Dapr component
          type: array
          items:
            $ref: '#/components/schemas/DaprSecret'
          x-ms-identifiers:
            - name
    DaprSecret:
      description: Dapr component Secret for ListSecrets Action
      type: object
      properties:
        name:
          description: Secret Name.
          type: string
          readOnly: true
        value:
          description: Secret Value.
          type: string
          x-ms-secret: true
          readOnly: true
    ExtendedLocation:
      type: object
      description: The complex type of the extended location.
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
    DaprComponentResiliencyPoliciesCollection:
      description: Dapr Component Resiliency Policies ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/DaprComponentResiliencyPolicy'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    DaprComponentResiliencyPolicy:
      description: Dapr Component Resiliency Policy.
      properties:
        properties:
          description: Dapr Component Resiliency Policy resource specific properties
          type: object
          properties:
            inboundPolicy:
              description: The optional inbound component resiliency policy configuration
              $ref: '#/components/schemas/DaprComponentResiliencyPolicyConfiguration'
            outboundPolicy:
              description: The optional outbound component resiliency policy configuration
              $ref: '#/components/schemas/DaprComponentResiliencyPolicyConfiguration'
          x-ms-client-flatten: true
      type: object
    DaprComponentResiliencyPolicyConfiguration:
      description: Dapr Component Resiliency Policy Configuration.
      type: object
      properties:
        httpRetryPolicy:
          description: The optional HTTP retry policy configuration
          $ref: '#/components/schemas/DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration'
        timeoutPolicy:
          description: The optional timeout policy configuration
          $ref: '#/components/schemas/DaprComponentResiliencyPolicyTimeoutPolicyConfiguration'
        circuitBreakerPolicy:
          description: The optional circuit breaker policy configuration
          $ref: '#/components/schemas/DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration'
    DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration:
      description: Dapr Component Resiliency Policy Circuit Breaker Policy Configuration.
      type: object
      properties:
        consecutiveErrors:
          description: The number of consecutive errors before the circuit is opened.
          type: integer
          format: int32
        timeoutInSeconds:
          description: The interval in seconds until a retry attempt is made after the circuit is opened.
          type: integer
          format: int32
        intervalInSeconds:
          description: The optional interval in seconds after which the error count resets to 0. An interval of 0 will never reset. If not specified, the timeoutInSeconds value will be used.
          type: integer
          format: int32
    DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration:
      description: Dapr Component Resiliency Policy HTTP Retry Policy Configuration.
      type: object
      properties:
        maxRetries:
          description: The optional maximum number of retries
          type: integer
          format: int32
        retryBackOff:
          description: The optional retry backoff configuration
          $ref: '#/components/schemas/DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration'
    DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration:
      description: Dapr Component Resiliency Policy HTTP Retry Backoff Configuration.
      type: object
      properties:
        initialDelayInMilliseconds:
          description: The optional initial delay in milliseconds before an operation is retried
          type: integer
          format: int32
        maxIntervalInMilliseconds:
          description: The optional maximum time interval in milliseconds between retry attempts
          type: integer
          format: int32
    DaprComponentResiliencyPolicyTimeoutPolicyConfiguration:
      description: Dapr Component Resiliency Policy Timeout Policy Configuration.
      type: object
      properties:
        responseTimeoutInSeconds:
          description: The optional response timeout in seconds
          type: integer
          format: int32
    DaprSubscriptionsCollection:
      description: Dapr Subscriptions ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/DaprSubscription'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    DaprSubscription:
      description: Dapr PubSub Event Subscription.
      properties:
        properties:
          description: Dapr PubSub Event Subscription resource specific properties
          type: object
          properties:
            pubsubName:
              description: Dapr PubSub component name
              type: string
            topic:
              description: Topic name
              type: string
            deadLetterTopic:
              description: Deadletter topic name
              type: string
            routes:
              description: Subscription routes
              $ref: '#/components/schemas/DaprSubscriptionRoutes'
            scopes:
              description: Application scopes to restrict the subscription to specific apps.
              type: array
              items:
                type: string
            metadata:
              description: Subscription metadata
              type: object
              additionalProperties:
                type: string
            bulkSubscribe:
              description: Bulk subscription options
              $ref: '#/components/schemas/DaprSubscriptionBulkSubscribeOptions'
          x-ms-client-flatten: true
      type: object
    DaprSubscriptionBulkSubscribeOptions:
      description: Dapr PubSub Bulk Subscription Options.
      type: object
      properties:
        enabled:
          description: Enable bulk subscription
          type: boolean
          default: false
        maxMessagesCount:
          description: Maximum number of messages to deliver in a bulk message.
          type: integer
          format: int32
        maxAwaitDurationMs:
          description: Maximum duration in milliseconds to wait before a bulk message is sent to the app.
          type: integer
          format: int32
    DaprSubscriptionRoutes:
      description: Dapr PubSub Event Subscription Routes configuration.
      type: object
      properties:
        rules:
          description: The list of Dapr PubSub Event Subscription Route Rules.
          type: array
          items:
            $ref: '#/components/schemas/DaprSubscriptionRouteRule'
          x-ms-identifiers: []
        default:
          description: The default path to deliver events that do not match any of the rules.
          type: string
    DaprSubscriptionRouteRule:
      description: Dapr Pubsub Event Subscription Route Rule is used to specify the condition for sending a message to a specific path.
      type: object
      properties:
        match:
          description: The optional CEL expression used to match the event. If the match is not specified, then the route is considered the default. The rules are tested in the order specified, so they should be define from most-to-least specific. The default route should appear last in the list.
          type: string
        path:
          description: The path for events that match this rule
          type: string
    ExtendedLocationType:
      type: string
      description: The type of extendedLocation.
      enum:
        - CustomLocation
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    AzureFileProperties:
      description: Azure File Properties.
      type: object
      properties:
        accountName:
          description: Storage account name for azure file.
          type: string
        accountKey:
          description: Storage account key for azure file.
          type: string
          x-ms-secret: true
        accessMode:
          description: Access mode for storage
          enum:
            - ReadOnly
            - ReadWrite
          type: string
          x-ms-enum:
            name: AccessMode
            modelAsString: true
        shareName:
          description: Azure file share name.
          type: string
    NfsAzureFileProperties:
      description: NFS Azure File Properties.
      type: object
      properties:
        server:
          description: Server for NFS azure file.
          type: string
        accessMode:
          description: Access mode for storage
          enum:
            - ReadOnly
            - ReadWrite
          type: string
          x-ms-enum:
            name: AccessMode
            modelAsString: true
        shareName:
          description: NFS Azure file share name.
          type: string
    SmbStorage:
      description: SMB storage properties
      type: object
      properties:
        host:
          description: The host name or IP address of the SMB server.
          type: string
        shareName:
          description: The path to the SMB shared folder.
          type: string
        username:
          description: The user to log on to the SMB server.
          type: string
        domain:
          description: The domain name for the user.
          type: string
        password:
          description: The password for the user.
          type: string
          x-ms-secret: true
        accessMode:
          description: Access mode for storage
          enum:
            - ReadOnly
            - ReadWrite
          type: string
          x-ms-enum:
            name: AccessMode
            modelAsString: true
    CertificateKeyVaultProperties:
      description: Properties for a certificate stored in a Key Vault.
      type: object
      properties:
        identity:
          description: Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
          type: string
        keyVaultUrl:
          description: URL pointing to the Azure Key Vault secret that holds the certificate.
          type: string
    Certificate:
      description: Certificate used for Custom Domain bindings of Container Apps in a Managed Environment
      x-ms-client-flatten: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Certificate resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the certificate.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - DeleteFailed
                - Pending
              type: string
              readOnly: true
              x-ms-enum:
                name: CertificateProvisioningState
                modelAsString: true
            certificateKeyVaultProperties:
              description: Properties for a certificate stored in a Key Vault.
              $ref: '#/components/schemas/CertificateKeyVaultProperties'
            password:
              description: Certificate password.
              type: string
              x-ms-mutability:
                - create
              x-ms-secret: true
            subjectName:
              description: Subject name of the certificate.
              type: string
              readOnly: true
            subjectAlternativeNames:
              description: Subject alternative names the certificate applies to.
              type: array
              items:
                type: string
              readOnly: true
            value:
              format: byte
              description: PFX or PEM blob
              type: string
              x-ms-mutability:
                - create
              x-ms-secret: true
            issuer:
              description: Certificate issuer.
              type: string
              readOnly: true
            issueDate:
              format: date-time
              description: Certificate issue Date.
              type: string
              readOnly: true
            expirationDate:
              format: date-time
              description: Certificate expiration date.
              type: string
              readOnly: true
            thumbprint:
              description: Certificate thumbprint.
              type: string
              readOnly: true
            valid:
              description: Is the certificate valid?.
              type: boolean
              readOnly: true
            publicKeyHash:
              description: Public key hash.
              type: string
              readOnly: true
            certificateType:
              description: The type of the certificate. Allowed values are `ServerSSLCertificate` and `ImagePullTrustedCA`
              type: string
              enum:
                - ServerSSLCertificate
                - ImagePullTrustedCA
              x-ms-enum:
                name: CertificateType
                modelAsString: true
      type: object
    CertificateCollection:
      description: Collection of Certificates.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    CertificatePatch:
      description: A certificate to update
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
    ManagedCertificate:
      description: Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment
      x-ms-client-flatten: true
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Certificate resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the certificate.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - DeleteFailed
                - Pending
              type: string
              readOnly: true
              x-ms-enum:
                name: CertificateProvisioningState
                modelAsString: true
            subjectName:
              description: Subject name of the certificate.
              type: string
            error:
              description: Any error occurred during the certificate provision.
              type: string
              readOnly: true
            domainControlValidation:
              description: Selected type of domain control validation for managed certificates.
              enum:
                - CNAME
                - HTTP
                - TXT
              type: string
              x-ms-enum:
                name: ManagedCertificateDomainControlValidation
                modelAsString: true
            validationToken:
              description: A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.
              type: string
              readOnly: true
      type: object
    ManagedCertificatePatch:
      description: A managed certificate to update
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Application-specific metadata in the form of key-value pairs.
    ManagedCertificateCollection:
      description: Collection of Managed Certificates.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ManagedCertificate'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    JobTemplate:
      description: Container Apps Job versioned application definition. Defines the desired state of an immutable revision. Any changes to this section Will result in a new revision being created
      type: object
      properties:
        initContainers:
          description: List of specialized containers that run before app containers.
          type: array
          items:
            $ref: '#/components/schemas/InitContainer'
          x-ms-identifiers:
            - name
        containers:
          description: List of container definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Container'
          x-ms-identifiers:
            - name
        volumes:
          description: List of volume definitions for the Container App.
          type: array
          items:
            $ref: '#/components/schemas/Volume'
          x-ms-identifiers:
            - name
    ServiceBind:
      description: Configuration to bind a ContainerApp to a dev ContainerApp Service
      type: object
      properties:
        serviceId:
          description: Resource id of the target service
          type: string
        name:
          description: Name of the service bind
          type: string
        clientType:
          description: Type of the client to be used to connect to the service
          type: string
        customizedKeys:
          description: Customized keys for customizing injected values to the app
          type: object
          additionalProperties:
            type: string
    AppResiliencyCollection:
      description: Collection of AppResiliency policies
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/AppResiliency'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    AppResiliency:
      description: Configuration to setup App Resiliency
      properties:
        properties:
          type: object
          description: App Resiliency resource specific properties
          properties:
            timeoutPolicy:
              description: Policy to set request timeouts
              $ref: '#/components/schemas/TimeoutPolicy'
            httpRetryPolicy:
              description: Policy that defines http request retry conditions
              $ref: '#/components/schemas/HttpRetryPolicy'
            tcpRetryPolicy:
              description: Policy that defines tcp request retry conditions
              $ref: '#/components/schemas/TcpRetryPolicy'
            circuitBreakerPolicy:
              description: Policy that defines circuit breaker conditions
              $ref: '#/components/schemas/CircuitBreakerPolicy'
            httpConnectionPool:
              description: Defines parameters for http connection pooling
              $ref: '#/components/schemas/HttpConnectionPool'
            tcpConnectionPool:
              description: Defines parameters for tcp connection pooling
              $ref: '#/components/schemas/TcpConnectionPool'
          x-ms-client-flatten: true
      type: object
    TimeoutPolicy:
      description: Policy to set request timeouts
      type: object
      properties:
        responseTimeoutInSeconds:
          description: Timeout, in seconds, for a request to respond
          format: int32
          type: integer
        connectionTimeoutInSeconds:
          description: Timeout, in seconds, for a request to initiate a connection
          format: int32
          type: integer
    HttpRetryPolicy:
      description: Policy that defines http request retry conditions
      type: object
      properties:
        maxRetries:
          description: Maximum number of times a request will retry
          format: int32
          type: integer
        retryBackOff:
          description: Settings for retry backoff characteristics
          type: object
          properties:
            initialDelayInMilliseconds:
              description: Initial delay, in milliseconds, before retrying a request
              format: int64
              type: integer
            maxIntervalInMilliseconds:
              description: Maximum interval, in milliseconds, between retries
              format: int64
              type: integer
          x-ms-client-flatten: true
        matches:
          description: Conditions that must be met for a request to be retried
          type: object
          properties:
            headers:
              description: Headers that must be present for a request to be retried
              type: array
              items:
                $ref: '#/components/schemas/HeaderMatch'
              x-ms-identifiers:
                - header
            httpStatusCodes:
              description: Additional http status codes that can trigger a retry
              type: array
              items:
                format: int32
                type: integer
              x-ms-identifiers: []
            errors:
              description: Errors that can trigger a retry
              type: array
              items:
                type: string
              x-ms-identifiers: []
          x-ms-client-flatten: true
      x-ms-client-flatten: true
    TcpRetryPolicy:
      description: Policy that defines tcp request retry conditions
      type: object
      properties:
        maxConnectAttempts:
          description: Maximum number of attempts to connect to the tcp service
          format: int32
          type: integer
    CircuitBreakerPolicy:
      description: Policy that defines circuit breaker conditions
      type: object
      properties:
        consecutiveErrors:
          description: Number of consecutive errors before the circuit breaker opens
          format: int32
          type: integer
        intervalInSeconds:
          description: The time interval, in seconds, between endpoint checks. This can result in opening the circuit breaker if the check fails as well as closing the circuit breaker if the check succeeds. Defaults to 10s.
          format: int32
          type: integer
        maxEjectionPercent:
          description: Maximum percentage of hosts that will be ejected after failure threshold has been met
          format: int32
          type: integer
    HttpConnectionPool:
      description: Defines parameters for http connection pooling
      type: object
      properties:
        http1MaxPendingRequests:
          description: Maximum number of pending http1 requests allowed
          format: int32
          type: integer
        http2MaxRequests:
          description: Maximum number of http2 requests allowed
          format: int32
          type: integer
    TcpConnectionPool:
      description: Defines parameters for tcp connection pooling
      type: object
      properties:
        maxConnections:
          description: Maximum number of tcp connections allowed
          format: int32
          type: integer
    HeaderMatch:
      description: Conditions required to match a header
      type: object
      properties:
        header:
          description: Name of the header
          type: string
        match:
          description: Type of match to perform
          type: object
          properties:
            exactMatch:
              description: Exact value of the header
              type: string
            prefixMatch:
              description: Prefix value of the header
              type: string
            suffixMatch:
              description: Suffix value of the header
              type: string
            regexMatch:
              description: Regex value of the header
              type: string
          x-ms-client-flatten: true
    EnvironmentVariable:
      type: object
      properties:
        name:
          type: string
          description: Environment variable name.
        value:
          type: string
          description: Environment variable value.
      description: Model representing an environment variable.
      required:
        - name
        - value
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for private endpoint.
      description: The private endpoint resource.
    PrivateEndpointConnection:
      description: The private endpoint connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        groupIds:
          description: The group ids for the private endpoint resource.
          type: array
          items:
            type: string
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The private endpoint resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the private endpoint connection.
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connections associated with the specified resource.
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources.
    IdentitySettings:
      description: Optional settings for a Managed Identity that is assigned to the Container App.
      type: object
      required:
        - identity
      properties:
        identity:
          description: The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.
          type: string
        lifecycle:
          description: Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.
          enum:
            - Init
            - Main
            - None
            - All
          type: string
          default: All
          x-ms-enum:
            name: IdentitySettingsLifeCycle
            modelAsString: true
    AvailableOperations:
      description: Available operations of the service
      type: object
      properties:
        value:
          description: Collection of available operation details
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/OperationDetail'
          x-ms-identifiers:
            - name
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    OperationDetail:
      description: Operation detail payload
      type: object
      properties:
        name:
          description: Name of the operation
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: Display of the operation
        origin:
          description: Origin of the operation
          type: string
    OperationDisplay:
      description: Operation display payload
      type: object
      properties:
        provider:
          description: Resource provider of the operation
          type: string
        resource:
          description: Resource of the operation
          type: string
        operation:
          description: Localized friendly name for the operation
          type: string
        description:
          description: Localized friendly description for the operation
          type: string
    BuildConfiguration:
      type: object
      properties:
        baseOs:
          type: string
          description: Base OS used to build and run the app.
        platform:
          type: string
          description: Platform to be used to build and run the app.
        platformVersion:
          type: string
          description: Platform version to be used to build and run the app.
        environmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          x-ms-identifiers:
            - name
          description: List of environment variables to be passed to the build, secrets should not be used in environment variable.
        preBuildSteps:
          type: array
          items:
            $ref: '#/components/schemas/PreBuildStep'
          x-ms-identifiers: []
          description: List of steps to perform before the build.
      description: Configuration of the build.
    BuildProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/BuildProvisioningState'
          description: Build provisioning state.
          readOnly: true
        buildStatus:
          $ref: '#/components/schemas/BuildStatus'
          description: Status of the build once it has been provisioned.
          readOnly: true
        destinationContainerRegistry:
          $ref: '#/components/schemas/ContainerRegistryWithCustomImage'
          description: Container registry that the final image will be uploaded to.
        configuration:
          $ref: '#/components/schemas/BuildConfiguration'
          description: Configuration of the build.
        uploadEndpoint:
          type: string
          description: Endpoint to which the source code should be uploaded.
          readOnly: true
        logStreamEndpoint:
          type: string
          description: Endpoint from which the build logs can be streamed.
          readOnly: true
        tokenEndpoint:
          type: string
          description: Endpoint to use to retrieve an authentication token for log streaming and uploading source code.
          readOnly: true
      description: The build properties.
    BuildResource:
      description: Information pertaining to an individual build.
      properties:
        properties:
          $ref: '#/components/schemas/BuildProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    BuildCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BuildResource'
          description: The BuildResource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: The response of a BuildResource list operation.
      required:
        - value
    BuildStatus:
      type: string
      description: Status of the build once it has been provisioned.
      enum:
        - NotStarted
        - InProgress
        - Succeeded
        - Canceled
        - Failed
      x-ms-enum:
        name: BuildStatus
        modelAsString: true
      readOnly: true
    BuildToken:
      description: Build Auth Token.
      type: object
      properties:
        token:
          type: string
          x-ms-secret: true
          description: Authentication token.
          readOnly: true
        expires:
          format: date-time
          description: Token expiration date.
          type: string
          readOnly: true
    BuildProvisioningState:
      type: string
      description: Resource instance provisioning state.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: BuildProvisioningState
        modelAsString: true
      readOnly: true
    ManagedEnvironmentStoragesCollection:
      description: Collection of Storage for Environments
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of storage resources.
          type: array
          items:
            $ref: '#/components/schemas/ManagedEnvironmentStorage'
    ManagedEnvironmentStorage:
      description: Storage resource for managedEnvironment.
      properties:
        properties:
          description: Storage properties
          type: object
          properties:
            azureFile:
              $ref: '#/components/schemas/AzureFileProperties'
              description: Azure file properties
            nfsAzureFile:
              $ref: '#/components/schemas/NfsAzureFileProperties'
              description: NFS Azure file properties
      type: object
    DotNetComponentConfigurationProperty:
      description: Configuration properties for a .NET Component
      type: object
      properties:
        propertyName:
          description: The name of the property
          type: string
        value:
          description: The value of the property
          type: string
    DotNetComponentServiceBind:
      description: Configuration to bind a .NET Component to another .NET Component
      type: object
      properties:
        name:
          description: Name of the service bind
          type: string
        serviceId:
          description: Resource id of the target service
          format: arm-id
          type: string
    DotNetComponent:
      description: .NET Component.
      properties:
        properties:
          description: .NET Component resource specific properties
          type: object
          properties:
            componentType:
              description: Type of the .NET Component.
              enum:
                - AspireDashboard
              type: string
              x-ms-enum:
                name: DotNetComponentType
                modelAsString: true
            provisioningState:
              description: Provisioning state of the .NET Component.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - Deleting
                - InProgress
              type: string
              readOnly: true
              x-ms-enum:
                name: DotNetComponentProvisioningState
                modelAsString: true
            configurations:
              description: List of .NET Components configuration properties
              type: array
              items:
                $ref: '#/components/schemas/DotNetComponentConfigurationProperty'
              x-ms-identifiers:
                - propertyName
            serviceBinds:
              description: List of .NET Components that are bound to the .NET component
              type: array
              items:
                $ref: '#/components/schemas/DotNetComponentServiceBind'
              x-ms-identifiers:
                - name
          x-ms-client-flatten: true
      type: object
    DotNetComponentsCollection:
      description: .NET Components ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/DotNetComponent'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    AvailableWorkloadProfile:
      description: A workload profile with specific hardware configure to run container apps.
      properties:
        location:
          type: string
          description: Region of the workload profile.
        properties:
          description: Revision resource specific properties
          type: object
          properties:
            category:
              description: Used to categorize workload profiles.
              type: string
            applicability:
              type: string
              description: indicates whether the profile is default for the location.
              enum:
                - LocationDefault
                - Custom
              x-ms-enum:
                name: Applicability
                modelAsString: true
            cores:
              type: integer
              format: int32
              description: Number of cores in CPU.
            memoryGiB:
              type: integer
              format: int32
              description: Memory in GiB.
            gpus:
              type: integer
              format: int32
              description: Number of GPUs.
            displayName:
              type: string
              description: The everyday name of the workload profile.
      type: object
    AvailableWorkloadProfilesCollection:
      description: Collection of available workload profiles in the location.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of workload profiles.
          type: array
          items:
            $ref: '#/components/schemas/AvailableWorkloadProfile'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    DiagnosticsCollection:
      description: Diagnostics data collection for a resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of diagnostic data.
          type: array
          items:
            $ref: '#/components/schemas/Diagnostics'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Diagnostics:
      description: Diagnostics data for a resource.
      properties:
        properties:
          description: Diagnostics resource specific properties
          type: object
          properties:
            metadata:
              $ref: '#/components/schemas/DiagnosticsDefinition'
              description: Metadata of the diagnostics response.
            dataset:
              description: Set of data collections associated with the response.
              type: array
              items:
                $ref: '#/components/schemas/DiagnosticsDataApiResponse'
              x-ms-identifiers: []
            status:
              $ref: '#/components/schemas/DiagnosticsStatus'
              description: Status of the diagnostics response.
            dataProviderMetadata:
              $ref: '#/components/schemas/DiagnosticDataProviderMetadata'
              description: List of data providers' metadata.
      type: object
    DiagnosticsDefinition:
      description: Metadata of the diagnostics response
      type: object
      properties:
        id:
          description: Unique detector name
          type: string
          readOnly: true
        name:
          description: Display Name of the detector
          type: string
          readOnly: true
        description:
          description: Details of the diagnostics info
          type: string
          readOnly: true
        author:
          description: Authors' names of the detector
          type: string
          readOnly: true
        category:
          description: Category of the detector
          type: string
          readOnly: true
        supportTopicList:
          description: List of support topics
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticSupportTopic'
        analysisTypes:
          description: List of analysis types
          type: array
          items:
            type: string
        type:
          description: Authors' names of the detector
          type: string
          readOnly: true
        score:
          description: Authors' names of the detector
          type: number
          readOnly: true
    DiagnosticSupportTopic:
      description: Support topic information
      type: object
      properties:
        id:
          description: Unique topic identifier
          type: string
          readOnly: true
        pesId:
          description: PES identifier
          type: string
          readOnly: true
    DiagnosticsDataApiResponse:
      description: Diagnostics data returned from a detector
      type: object
      properties:
        table:
          description: Table response
          $ref: '#/components/schemas/DiagnosticDataTableResponseObject'
        renderingProperties:
          description: Details of the table response
          $ref: '#/components/schemas/DiagnosticRendering'
    DiagnosticDataTableResponseObject:
      description: Diagnostics data table
      type: object
      properties:
        tableName:
          description: Table name
          type: string
        columns:
          description: Columns in the table
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticDataTableResponseColumn'
          x-ms-identifiers:
            - columnName
        rows:
          description: Rows in the table
          type: array
          items:
            type: object
          x-ms-identifiers: []
    DiagnosticDataTableResponseColumn:
      description: Diagnostics data column
      type: object
      properties:
        columnName:
          description: Column name
          type: string
        dataType:
          description: Data type of the column
          type: string
        columnType:
          description: Column type
          type: string
    DiagnosticRendering:
      description: Rendering details of a diagnostics table
      type: object
      properties:
        type:
          format: int32
          description: Rendering type
          type: integer
        title:
          description: Title of the table
          type: string
        description:
          description: Description of the table
          type: string
        isVisible:
          description: Flag if the table should be rendered
          type: boolean
    DiagnosticsStatus:
      description: Rendering details of a diagnostics table
      type: object
      properties:
        message:
          description: Diagnostic message
          type: string
        statusId:
          format: int32
          description: Status
          type: integer
    DiagnosticDataProviderMetadata:
      description: Details of a diagnostics data provider
      type: object
      properties:
        providerName:
          description: Name of data provider
          type: string
        propertyBag:
          description: Collection of properties
          type: array
          items:
            description: Property details
            type: object
            properties:
              name:
                description: Property name
                type: string
              value:
                description: Property value
                type: string
          x-ms-identifiers:
            - name
    BuilderProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/BuilderProvisioningState'
          description: Provisioning state of a builder resource.
          readOnly: true
        environmentId:
          type: string
          description: Resource ID of the container apps environment that the builder is associated with.
          format: arm-id
        containerRegistries:
          type: array
          items:
            $ref: '#/components/schemas/ContainerRegistry'
          x-ms-identifiers:
            - containerRegistryServer
          description: List of mappings of container registries and the managed identity used to connect to it.
      description: The builder properties.
      required:
        - environmentId
    BuilderResource:
      description: Information about the SourceToCloud builder resource.
      properties:
        properties:
          $ref: '#/components/schemas/BuilderProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    BuilderCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BuilderResource'
          description: The BuilderResource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: The response of a BuilderResource list operation.
      required:
        - value
    BuilderResourceUpdate:
      description: The type used for update operations of the BuilderResource.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        properties:
          $ref: '#/components/schemas/BuilderResourceUpdateProperties'
          x-ms-client-flatten: true
      type: object
    BuilderResourceUpdateProperties:
      type: object
      properties:
        environmentId:
          type: string
          description: Resource ID of the container apps environment that the builder is associated with.
          format: arm-id
      description: The updatable properties of the BuilderResource.
    ContainerRegistry:
      type: object
      properties:
        containerRegistryServer:
          type: string
          description: Login server of the container registry.
        identityResourceId:
          type: string
          description: Resource ID of the managed identity.
          format: arm-id
      description: Model representing a mapping from a container registry to the identity used to connect to it.
      required:
        - containerRegistryServer
        - identityResourceId
    BuilderProvisioningState:
      type: string
      description: Resource instance provisioning state.
      enum:
        - Succeeded
        - Failed
        - Canceled
        - Creating
        - Updating
        - Deleting
      x-ms-enum:
        name: BuilderProvisioningState
        modelAsString: true
      readOnly: true
    AppLogsConfiguration:
      description: Configuration of application logs
      type: object
      properties:
        destination:
          description: Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'
          type: string
        logAnalyticsConfiguration:
          description: Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
          $ref: '#/components/schemas/LogAnalyticsConfiguration'
    AppInsightsConfiguration:
      description: 'Configuration of Application Insights '
      type: object
      properties:
        connectionString:
          description: Application Insights connection string
          type: string
          x-ms-secret: true
    OpenTelemetryConfiguration:
      description: Configuration of Open Telemetry
      type: object
      properties:
        destinationsConfiguration:
          description: Open telemetry destinations configuration
          $ref: '#/components/schemas/DestinationsConfiguration'
        tracesConfiguration:
          description: Open telemetry trace configuration
          $ref: '#/components/schemas/TracesConfiguration'
        logsConfiguration:
          description: Open telemetry logs configuration
          $ref: '#/components/schemas/LogsConfiguration'
        metricsConfiguration:
          description: Open telemetry metrics configuration
          $ref: '#/components/schemas/MetricsConfiguration'
    DestinationsConfiguration:
      description: Configuration of Open Telemetry destinations
      type: object
      properties:
        dataDogConfiguration:
          description: Open telemetry datadog destination configuration
          $ref: '#/components/schemas/DataDogConfiguration'
        otlpConfigurations:
          description: Open telemetry otlp configurations
          type: array
          items:
            $ref: '#/components/schemas/OtlpConfiguration'
          x-ms-identifiers:
            - name
    DataDogConfiguration:
      description: 'Configuration of datadog '
      type: object
      properties:
        site:
          description: The data dog site
          type: string
        key:
          description: The data dog api key
          type: string
          x-ms-secret: true
    OtlpConfiguration:
      description: 'Configuration of otlp '
      type: object
      properties:
        name:
          description: The name of otlp configuration
          type: string
        endpoint:
          description: The endpoint of otlp configuration
          type: string
        insecure:
          description: Boolean indicating if otlp configuration is insecure
          type: boolean
        headers:
          description: Headers of otlp configurations
          type: array
          items:
            $ref: '#/components/schemas/Header'
          x-ms-identifiers:
            - key
    Header:
      description: Header of otlp configuration
      type: object
      properties:
        key:
          description: The key of otlp configuration header
          type: string
        value:
          description: The value of otlp configuration header
          type: string
    TracesConfiguration:
      description: Configuration of Open Telemetry traces
      type: object
      properties:
        destinations:
          description: Open telemetry traces destinations
          type: array
          items:
            type: string
    LogsConfiguration:
      description: Configuration of Open Telemetry logs
      type: object
      properties:
        destinations:
          description: Open telemetry logs destinations
          type: array
          items:
            type: string
    MetricsConfiguration:
      description: Configuration of Open Telemetry metrics
      type: object
      properties:
        destinations:
          description: Open telemetry metrics destinations
          type: array
          items:
            type: string
    KedaConfiguration:
      type: object
      description: Configuration properties Keda component
      properties:
        version:
          type: string
          readOnly: true
          description: The version of Keda
    DaprConfiguration:
      type: object
      description: Configuration properties Dapr component
      properties:
        version:
          type: string
          readOnly: true
          description: The version of Dapr
    VnetConfiguration:
      type: object
      description: Configuration properties for apps environment to join a Virtual Network
      properties:
        internal:
          type: boolean
          description: Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property
          x-ms-mutability:
            - create
            - read
        infrastructureSubnetId:
          type: string
          description: Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.
          x-ms-mutability:
            - create
            - read
        dockerBridgeCidr:
          type: string
          description: CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.
          x-ms-mutability:
            - create
            - read
        platformReservedCidr:
          type: string
          description: IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.
          x-ms-mutability:
            - create
            - read
        platformReservedDnsIP:
          type: string
          description: ' An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.'
          x-ms-mutability:
            - create
            - read
    Mtls:
      type: object
      description: Configuration properties for mutual TLS authentication
      properties:
        enabled:
          type: boolean
          description: Boolean indicating whether the mutual TLS authentication is enabled
    ManagedEnvironment:
      description: An environment for hosting container apps
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        kind:
          type: string
          description: Kind of the Environment.
        identity:
          description: Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          description: Managed environment resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Environment.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - Waiting
                - InitializationInProgress
                - InfrastructureSetupInProgress
                - InfrastructureSetupComplete
                - ScheduledForDelete
                - UpgradeRequested
                - UpgradeFailed
              type: string
              readOnly: true
              x-ms-enum:
                name: EnvironmentProvisioningState
                modelAsString: true
            daprAIInstrumentationKey:
              type: string
              description: Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry
              x-ms-secret: true
            daprAIConnectionString:
              type: string
              description: Application Insights connection string used by Dapr to export Service to Service communication telemetry
              x-ms-secret: true
            vnetConfiguration:
              description: Vnet configuration for the environment
              $ref: '#/components/schemas/VnetConfiguration'
            deploymentErrors:
              description: Any errors that occurred during deployment or deployment validation
              type: string
              readOnly: true
            defaultDomain:
              description: Default Domain Name for the cluster
              type: string
              readOnly: true
            staticIp:
              description: Static IP of the Environment
              type: string
              readOnly: true
            appLogsConfiguration:
              $ref: '#/components/schemas/AppLogsConfiguration'
              description: |-
                Cluster configuration which enables the log daemon to export
                app logs to a destination. Currently only "log-analytics" is
                supported
            appInsightsConfiguration:
              $ref: '#/components/schemas/AppInsightsConfiguration'
              description: Environment level Application Insights configuration
            openTelemetryConfiguration:
              $ref: '#/components/schemas/OpenTelemetryConfiguration'
              description: Environment Open Telemetry configuration
            zoneRedundant:
              description: Whether or not this Managed Environment is zone-redundant.
              type: boolean
              x-ms-mutability:
                - create
                - read
            customDomainConfiguration:
              $ref: '#/components/schemas/CustomDomainConfiguration'
              description: Custom domain configuration for the environment
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the Environment.
              type: string
              readOnly: true
            workloadProfiles:
              description: Workload profiles configured for the Managed Environment.
              type: array
              items:
                $ref: '#/components/schemas/WorkloadProfile'
              x-ms-identifiers:
                - name
            kedaConfiguration:
              $ref: '#/components/schemas/KedaConfiguration'
              description: The configuration of Keda component.
            daprConfiguration:
              $ref: '#/components/schemas/DaprConfiguration'
              description: The configuration of Dapr component.
            infrastructureResourceGroup:
              description: Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.
              type: string
              x-ms-mutability:
                - create
                - read
            peerAuthentication:
              description: Peer authentication settings for the Managed Environment
              type: object
              properties:
                mtls:
                  description: Mutual TLS authentication settings for the Managed Environment
                  $ref: '#/components/schemas/Mtls'
            peerTrafficConfiguration:
              description: Peer traffic settings for the Managed Environment
              type: object
              properties:
                encryption:
                  description: Peer traffic encryption settings for the Managed Environment
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      description: Boolean indicating whether the peer traffic encryption is enabled
            privateEndpointConnections:
              description: Private endpoint connections to the resource.
              type: array
              items:
                $ref: '#/components/schemas/PrivateEndpointConnection'
              readOnly: true
            publicNetworkAccess:
              enum:
                - Enabled
                - Disabled
              description: 'Property to allow or block all public traffic. Allowed Values: ''Enabled'', ''Disabled''.'
              type: string
              x-ms-enum:
                name: PublicNetworkAccess
                modelAsString: true
          x-ms-client-flatten: true
      type: object
    ManagedEnvironmentsCollection:
      description: Collection of Environments
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ManagedEnvironment'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    LogAnalyticsConfiguration:
      description: Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'
      type: object
      properties:
        customerId:
          description: Log analytics customer id
          type: string
        sharedKey:
          description: Log analytics customer key
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
        dynamicJsonColumns:
          description: Boolean indicating whether to parse json string log into dynamic json columns
          type: boolean
    EnvironmentAuthToken:
      description: Environment Auth Token.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Environment auth token resource specific properties
          type: object
          properties:
            token:
              description: Auth token value.
              type: string
              x-ms-secret: true
              readOnly: true
            expires:
              format: date-time
              description: Token expiration date.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    WorkloadProfile:
      description: Workload profile to scope container app execution.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/WorkloadProfileName'
          description: Workload profile type for the workloads to run on.
        workloadProfileType:
          $ref: '#/components/schemas/WorkloadProfileType'
          description: Workload profile type for the workloads to run on.
        minimumCount:
          type: integer
          format: int32
          description: The minimum capacity.
        maximumCount:
          type: integer
          format: int32
          description: The maximum capacity.
      required:
        - name
        - workloadProfileType
    workloadProfileStates:
      description: Collection of all the workload Profile States for a Managed Environment..
      properties:
        properties:
          description: Workload Profile resource specific properties.
          type: object
          properties:
            minimumCount:
              type: integer
              format: int32
              description: Minimum count of instances.
            maximumCount:
              type: integer
              format: int32
              description: Maximum count of nodes.
            currentCount:
              type: integer
              format: int32
              description: Current count of nodes.
      type: object
    workloadProfileStatesCollection:
      description: Collection of workloadProfileStates
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/workloadProfileStates'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AuthConfigCollection:
      description: AuthConfig collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/AuthConfig'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    AuthConfig:
      description: Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.
      properties:
        properties:
          description: AuthConfig resource specific properties
          type: object
          properties:
            platform:
              $ref: '#/components/schemas/AuthPlatform'
              description: The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
            globalValidation:
              $ref: '#/components/schemas/GlobalValidation'
              description: The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.
            identityProviders:
              $ref: '#/components/schemas/IdentityProviders'
              description: The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
            login:
              $ref: '#/components/schemas/Login'
              description: The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
            httpSettings:
              $ref: '#/components/schemas/HttpSettings'
              description: The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.
            encryptionSettings:
              $ref: '#/components/schemas/EncryptionSettings'
              description: The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.
          x-ms-client-flatten: true
      type: object
    AuthPlatform:
      description: The configuration settings of the platform of ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        enabled:
          description: <code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.
          type: boolean
        runtimeVersion:
          description: |-
            The RuntimeVersion of the Authentication / Authorization feature in use for the current app.
            The setting in this value can control the behavior of certain features in the Authentication / Authorization module.
          type: string
    GlobalValidation:
      description: The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        unauthenticatedClientAction:
          description: The action to take when an unauthenticated client attempts to access the app.
          enum:
            - RedirectToLoginPage
            - AllowAnonymous
            - Return401
            - Return403
          type: string
          x-ms-enum:
            name: UnauthenticatedClientActionV2
            modelAsString: false
        redirectToProvider:
          description: |-
            The default authentication provider to use when multiple providers are configured.
            This setting is only needed if multiple providers are configured and the unauthenticated client
            action is set to "RedirectToLoginPage".
          type: string
        excludedPaths:
          description: The paths for which unauthenticated flow would not be redirected to the login page.
          type: array
          items:
            type: string
    HttpSettings:
      description: The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        requireHttps:
          description: <code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.
          type: boolean
        routes:
          $ref: '#/components/schemas/HttpSettingsRoutes'
          description: The configuration settings of the paths HTTP requests.
        forwardProxy:
          $ref: '#/components/schemas/ForwardProxy'
          description: The configuration settings of a forward proxy used to make the requests.
    EncryptionSettings:
      description: The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        containerAppAuthEncryptionSecretName:
          description: The secret name which is referenced for EncryptionKey.
          type: string
        containerAppAuthSigningSecretName:
          description: The secret name which is referenced for SigningKey.
          type: string
    HttpSettingsRoutes:
      description: The configuration settings of the paths HTTP requests.
      type: object
      properties:
        apiPrefix:
          description: The prefix that should precede all the authentication/authorization paths.
          type: string
    ForwardProxy:
      description: The configuration settings of a forward proxy used to make the requests.
      type: object
      properties:
        convention:
          description: The convention used to determine the url of the request made.
          enum:
            - NoProxy
            - Standard
            - Custom
          type: string
          x-ms-enum:
            name: ForwardProxyConvention
            modelAsString: false
        customHostHeaderName:
          description: The name of the header containing the host of the request.
          type: string
        customProtoHeaderName:
          description: The name of the header containing the scheme of the request.
          type: string
    Login:
      description: The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        routes:
          $ref: '#/components/schemas/LoginRoutes'
          description: The routes that specify the endpoints used for login and logout requests.
        tokenStore:
          $ref: '#/components/schemas/TokenStore'
          description: The configuration settings of the token store.
        preserveUrlFragmentsForLogins:
          description: <code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.
          type: boolean
        allowedExternalRedirectUrls:
          description: |-
            External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.
            This is an advanced setting typically only needed by Windows Store application backends.
            Note that URLs within the current domain are always implicitly allowed.
          type: array
          items:
            type: string
        cookieExpiration:
          $ref: '#/components/schemas/CookieExpiration'
          description: The configuration settings of the session cookie's expiration.
        nonce:
          $ref: '#/components/schemas/Nonce'
          description: The configuration settings of the nonce used in the login flow.
    LoginRoutes:
      description: The routes that specify the endpoints used for login and logout requests.
      type: object
      properties:
        logoutEndpoint:
          description: The endpoint at which a logout request should be made.
          type: string
    TokenStore:
      description: The configuration settings of the token store.
      type: object
      properties:
        enabled:
          description: |-
            <code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.
             The default is <code>false</code>.
          type: boolean
        tokenRefreshExtensionHours:
          format: double
          description: |-
            The number of hours after session token expiration that a session token can be used to
            call the token refresh API. The default is 72 hours.
          type: number
        azureBlobStorage:
          $ref: '#/components/schemas/BlobStorageTokenStore'
          description: The configuration settings of the storage of the tokens if blob storage is used.
    BlobStorageTokenStore:
      description: The configuration settings of the storage of the tokens if blob storage is used.
      type: object
      required:
        - sasUrlSettingName
      properties:
        sasUrlSettingName:
          description: The name of the app secrets containing the SAS URL of the blob storage containing the tokens.
          type: string
    CookieExpiration:
      description: The configuration settings of the session cookie's expiration.
      type: object
      properties:
        convention:
          description: The convention used when determining the session cookie's expiration.
          enum:
            - FixedTime
            - IdentityProviderDerived
          type: string
          x-ms-enum:
            name: CookieExpirationConvention
            modelAsString: false
        timeToExpiration:
          description: The time after the request is made when the session cookie should expire.
          type: string
    Nonce:
      description: The configuration settings of the nonce used in the login flow.
      type: object
      properties:
        validateNonce:
          description: <code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.
          type: boolean
        nonceExpirationInterval:
          description: The time after the request is made when the nonce should expire.
          type: string
    IdentityProviders:
      description: The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.
      type: object
      properties:
        azureActiveDirectory:
          $ref: '#/components/schemas/AzureActiveDirectory'
          description: The configuration settings of the Azure Active directory provider.
        facebook:
          $ref: '#/components/schemas/Facebook'
          description: The configuration settings of the Facebook provider.
        gitHub:
          $ref: '#/components/schemas/GitHub'
          description: The configuration settings of the GitHub provider.
        google:
          $ref: '#/components/schemas/Google'
          description: The configuration settings of the Google provider.
        twitter:
          $ref: '#/components/schemas/Twitter'
          description: The configuration settings of the Twitter provider.
        apple:
          $ref: '#/components/schemas/Apple'
          description: The configuration settings of the Apple provider.
        azureStaticWebApps:
          $ref: '#/components/schemas/AzureStaticWebApps'
          description: The configuration settings of the Azure Static Web Apps provider.
        customOpenIdConnectProviders:
          description: |-
            The map of the name of the alias of each custom Open ID Connect provider to the
            configuration settings of the custom Open ID Connect provider.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CustomOpenIdConnectProvider'
    AzureActiveDirectory:
      description: The configuration settings of the Azure Active directory provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AzureActiveDirectoryRegistration'
          description: The configuration settings of the Azure Active Directory app registration.
        login:
          $ref: '#/components/schemas/AzureActiveDirectoryLogin'
          description: The configuration settings of the Azure Active Directory login flow.
        validation:
          $ref: '#/components/schemas/AzureActiveDirectoryValidation'
          description: The configuration settings of the Azure Active Directory token validation flow.
        isAutoProvisioned:
          description: |-
            Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.
            This is an internal flag primarily intended to support the Azure Management Portal. Users should not
            read or write to this property.
          type: boolean
    AzureActiveDirectoryLogin:
      description: The configuration settings of the Azure Active Directory login flow.
      type: object
      properties:
        loginParameters:
          description: |-
            Login parameters to send to the OpenID Connect authorization endpoint when
            a user logs in. Each parameter must be in the form "key=value".
          type: array
          items:
            type: string
        disableWWWAuthenticate:
          description: <code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.
          type: boolean
    AzureActiveDirectoryRegistration:
      description: The configuration settings of the Azure Active Directory app registration.
      type: object
      properties:
        openIdIssuer:
          description: |-
            The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.
            When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.
            This URI is a case-sensitive identifier for the token issuer.
            More information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html
          type: string
        clientId:
          description: |-
            The Client ID of this relying party application, known as the client_id.
            This setting is required for enabling OpenID Connection authentication with Azure Active Directory or 
            other 3rd party OpenID Connect providers.
            More information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html
          type: string
        clientSecretSettingName:
          description: The app setting name that contains the client secret of the relying party application.
          type: string
        clientSecretCertificateThumbprint:
          description: |-
            An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as
            a replacement for the Client Secret. It is also optional.
          type: string
        clientSecretCertificateSubjectAlternativeName:
          description: |-
            An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as
            a replacement for the Client Secret Certificate Thumbprint. It is also optional.
          type: string
        clientSecretCertificateIssuer:
          description: |-
            An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as
            a replacement for the Client Secret Certificate Thumbprint. It is also optional.
          type: string
    AzureActiveDirectoryValidation:
      description: The configuration settings of the Azure Active Directory token validation flow.
      type: object
      properties:
        jwtClaimChecks:
          $ref: '#/components/schemas/JwtClaimChecks'
          description: The configuration settings of the checks that should be made while validating the JWT Claims.
        allowedAudiences:
          description: The list of audiences that can make successful authentication/authorization requests.
          type: array
          items:
            type: string
        defaultAuthorizationPolicy:
          $ref: '#/components/schemas/DefaultAuthorizationPolicy'
          description: The configuration settings of the default authorization policy.
    JwtClaimChecks:
      description: The configuration settings of the checks that should be made while validating the JWT Claims.
      type: object
      properties:
        allowedGroups:
          description: The list of the allowed groups.
          type: array
          items:
            type: string
        allowedClientApplications:
          description: The list of the allowed client applications.
          type: array
          items:
            type: string
    DefaultAuthorizationPolicy:
      description: The configuration settings of the Azure Active Directory default authorization policy.
      type: object
      properties:
        allowedPrincipals:
          $ref: '#/components/schemas/AllowedPrincipals'
          description: The configuration settings of the Azure Active Directory allowed principals.
        allowedApplications:
          description: The configuration settings of the Azure Active Directory allowed applications.
          type: array
          items:
            type: string
    AllowedPrincipals:
      description: The configuration settings of the Azure Active Directory allowed principals.
      type: object
      properties:
        groups:
          description: The list of the allowed groups.
          type: array
          items:
            type: string
        identities:
          description: The list of the allowed identities.
          type: array
          items:
            type: string
    Facebook:
      description: The configuration settings of the Facebook provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AppRegistration'
          description: The configuration settings of the app registration for the Facebook provider.
        graphApiVersion:
          description: The version of the Facebook api to be used while logging in.
          type: string
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
    AppRegistration:
      description: The configuration settings of the app registration for providers that have app ids and app secrets
      type: object
      properties:
        appId:
          description: The App ID of the app used for login.
          type: string
        appSecretSettingName:
          description: The app setting name that contains the app secret.
          type: string
    LoginScopes:
      description: The configuration settings of the login flow, including the scopes that should be requested.
      type: object
      properties:
        scopes:
          description: A list of the scopes that should be requested while authenticating.
          type: array
          items:
            type: string
    GitHub:
      description: The configuration settings of the GitHub provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/ClientRegistration'
          description: The configuration settings of the app registration for the GitHub provider.
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
    ClientRegistration:
      description: The configuration settings of the app registration for providers that have client ids and client secrets
      type: object
      properties:
        clientId:
          description: The Client ID of the app used for login.
          type: string
        clientSecretSettingName:
          description: The app setting name that contains the client secret.
          type: string
    Google:
      description: The configuration settings of the Google provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/ClientRegistration'
          description: The configuration settings of the app registration for the Google provider.
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
        validation:
          $ref: '#/components/schemas/AllowedAudiencesValidation'
          description: The configuration settings of the Azure Active Directory token validation flow.
    AllowedAudiencesValidation:
      description: The configuration settings of the Allowed Audiences validation flow.
      type: object
      properties:
        allowedAudiences:
          description: The configuration settings of the allowed list of audiences from which to validate the JWT token.
          type: array
          items:
            type: string
    Twitter:
      description: The configuration settings of the Twitter provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/TwitterRegistration'
          description: The configuration settings of the app registration for the Twitter provider.
    TwitterRegistration:
      description: The configuration settings of the app registration for the Twitter provider.
      type: object
      properties:
        consumerKey:
          description: |-
            The OAuth 1.0a consumer key of the Twitter application used for sign-in.
            This setting is required for enabling Twitter Sign-In.
            Twitter Sign-In documentation: https://dev.twitter.com/web/sign-in
          type: string
        consumerSecretSettingName:
          description: |-
            The app setting name that contains the OAuth 1.0a consumer secret of the Twitter
            application used for sign-in.
          type: string
    Apple:
      description: The configuration settings of the Apple provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AppleRegistration'
          description: The configuration settings of the Apple registration.
        login:
          $ref: '#/components/schemas/LoginScopes'
          description: The configuration settings of the login flow.
    AppleRegistration:
      description: The configuration settings of the registration for the Apple provider
      type: object
      properties:
        clientId:
          description: The Client ID of the app used for login.
          type: string
        clientSecretSettingName:
          description: The app setting name that contains the client secret.
          type: string
    AzureStaticWebApps:
      description: The configuration settings of the Azure Static Web Apps provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/AzureStaticWebAppsRegistration'
          description: The configuration settings of the Azure Static Web Apps registration.
    AzureStaticWebAppsRegistration:
      description: The configuration settings of the registration for the Azure Static Web Apps provider
      type: object
      properties:
        clientId:
          description: The Client ID of the app used for login.
          type: string
    CustomOpenIdConnectProvider:
      description: The configuration settings of the custom Open ID Connect provider.
      type: object
      properties:
        enabled:
          description: <code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.
          type: boolean
        registration:
          $ref: '#/components/schemas/OpenIdConnectRegistration'
          description: The configuration settings of the app registration for the custom Open ID Connect provider.
        login:
          $ref: '#/components/schemas/OpenIdConnectLogin'
          description: The configuration settings of the login flow of the custom Open ID Connect provider.
    OpenIdConnectRegistration:
      description: The configuration settings of the app registration for the custom Open ID Connect provider.
      type: object
      properties:
        clientId:
          description: The client id of the custom Open ID Connect provider.
          type: string
        clientCredential:
          $ref: '#/components/schemas/OpenIdConnectClientCredential'
          description: The authentication credentials of the custom Open ID Connect provider.
        openIdConnectConfiguration:
          $ref: '#/components/schemas/OpenIdConnectConfig'
          description: The configuration settings of the endpoints used for the custom Open ID Connect provider.
    OpenIdConnectClientCredential:
      description: The authentication client credentials of the custom Open ID Connect provider.
      type: object
      properties:
        method:
          description: The method that should be used to authenticate the user.
          enum:
            - ClientSecretPost
          type: string
          x-ms-enum:
            name: ClientCredentialMethod
            modelAsString: false
        clientSecretSettingName:
          description: The app setting that contains the client secret for the custom Open ID Connect provider.
          type: string
    OpenIdConnectConfig:
      description: The configuration settings of the endpoints used for the custom Open ID Connect provider.
      type: object
      properties:
        authorizationEndpoint:
          description: The endpoint to be used to make an authorization request.
          type: string
        tokenEndpoint:
          description: The endpoint to be used to request a token.
          type: string
        issuer:
          description: The endpoint that issues the token.
          type: string
        certificationUri:
          description: The endpoint that provides the keys necessary to validate the token.
          type: string
        wellKnownOpenIdConfiguration:
          description: The endpoint that contains all the configuration endpoints for the provider.
          type: string
    OpenIdConnectLogin:
      description: The configuration settings of the login flow of the custom Open ID Connect provider.
      type: object
      properties:
        nameClaimType:
          description: The name of the claim that contains the users name.
          type: string
        scopes:
          description: A list of the scopes that should be requested while authenticating.
          type: array
          items:
            type: string
    ScaleConfiguration:
      description: Scale configuration.
      type: object
      properties:
        maxConcurrentSessions:
          description: The maximum count of sessions at the same time.
          type: integer
          format: int32
        readySessionInstances:
          description: The minimum count of ready session instances.
          type: integer
          format: int32
    SessionPoolSecret:
      description: Secret definition.
      type: object
      properties:
        name:
          description: Secret Name.
          type: string
        value:
          description: Secret Value.
          type: string
          x-ms-mutability:
            - create
            - update
          x-ms-secret: true
    DynamicPoolConfiguration:
      description: Dynamic pool configuration.
      type: object
      properties:
        executionType:
          description: The execution type of the session pool.
          enum:
            - Timed
          type: string
          x-ms-enum:
            name: ExecutionType
            modelAsString: true
        cooldownPeriodInSeconds:
          description: The cooldown period of a session in seconds.
          type: integer
          format: int32
    SessionRegistryCredentials:
      description: Session pool private registry credentials.
      type: object
      properties:
        registryServer:
          description: Container registry server.
          type: string
        username:
          description: Container registry username.
          type: string
        passwordSecretRef:
          description: The name of the secret that contains the registry login password
          type: string
    SessionContainerResources:
      description: Container resource requirements for sessions of the session pool.
      type: object
      properties:
        cpu:
          format: double
          description: Required CPU in cores, e.g. 0.5
          type: number
        memory:
          description: Required memory, e.g. "250Mb"
          type: string
    SessionContainer:
      description: Container definitions for the sessions of the session pool.
      type: object
      properties:
        image:
          description: Container image tag.
          type: string
        name:
          description: Custom container name.
          type: string
        command:
          description: Container start command.
          type: array
          items:
            type: string
        args:
          description: Container start command arguments.
          type: array
          items:
            type: string
        env:
          description: Container environment variables.
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVar'
          x-ms-identifiers:
            - name
        resources:
          $ref: '#/components/schemas/SessionContainerResources'
          description: Container resource requirements.
    SessionIngress:
      description: Session pool ingress configuration.
      type: object
      properties:
        targetPort:
          format: int32
          description: Target port in containers for traffic from ingress
          type: integer
    CustomContainerTemplate:
      description: Custom container configuration.
      type: object
      properties:
        registryCredentials:
          description: Private container registry credentials for containers used by the sessions of the session pool.
          $ref: '#/components/schemas/SessionRegistryCredentials'
        containers:
          description: List of container definitions for the sessions of the session pool.
          type: array
          items:
            $ref: '#/components/schemas/SessionContainer'
          x-ms-identifiers:
            - name
        ingress:
          description: Session pool ingress configuration.
          $ref: '#/components/schemas/SessionIngress'
    SessionNetworkConfiguration:
      description: Session network configuration.
      type: object
      properties:
        status:
          description: Network status for the sessions.
          type: string
          enum:
            - EgressEnabled
            - EgressDisabled
          x-ms-enum:
            name: SessionNetworkStatus
            modelAsString: true
    SessionPool:
      description: Container App session pool.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Container App session pool resource specific properties
          type: object
          properties:
            environmentId:
              description: Resource ID of the session pool's environment.
              type: string
              format: arm-id
              x-ms-arm-id-details:
                allowedResources:
                  - type: Microsoft.App/managedEnvironments
              x-ms-mutability:
                - create
                - read
            containerType:
              description: The container type of the sessions.
              enum:
                - CustomContainer
                - PythonLTS
              type: string
              x-ms-enum:
                name: ContainerType
                modelAsString: true
            poolManagementType:
              description: The pool management type of the session pool.
              enum:
                - Manual
                - Dynamic
              type: string
              x-ms-enum:
                name: PoolManagementType
                modelAsString: true
            nodeCount:
              description: The number of nodes the session pool is using.
              type: integer
              format: int32
              readOnly: true
            scaleConfiguration:
              description: The scale configuration of the session pool.
              $ref: '#/components/schemas/ScaleConfiguration'
            secrets:
              description: The secrets of the session pool.
              type: array
              items:
                $ref: '#/components/schemas/SessionPoolSecret'
              x-ms-identifiers:
                - name
            dynamicPoolConfiguration:
              description: The pool configuration if the poolManagementType is dynamic.
              $ref: '#/components/schemas/DynamicPoolConfiguration'
            customContainerTemplate:
              description: The custom container configuration if the containerType is CustomContainer.
              $ref: '#/components/schemas/CustomContainerTemplate'
            sessionNetworkConfiguration:
              description: The network configuration of the sessions in the session pool.
              $ref: '#/components/schemas/SessionNetworkConfiguration'
            poolManagementEndpoint:
              description: The endpoint to manage the pool.
              type: string
              format: uri
              readOnly: true
            provisioningState:
              description: Provisioning state of the session pool.
              enum:
                - InProgress
                - Succeeded
                - Failed
                - Canceled
                - Deleting
              type: string
              readOnly: true
              x-ms-enum:
                name: SessionPoolProvisioningState
                modelAsString: true
          x-ms-client-flatten: true
      type: object
    SessionPoolUpdatableProperties:
      description: Container App session pool updatable properties.
      properties:
        properties:
          description: Session pool resource specific updatable properties.
          type: object
          properties:
            scaleConfiguration:
              description: The scale configuration of the session pool.
              $ref: '#/components/schemas/ScaleConfiguration'
            secrets:
              description: The secrets of the session pool.
              type: array
              items:
                $ref: '#/components/schemas/SessionPoolSecret'
              x-ms-identifiers:
                - name
            dynamicPoolConfiguration:
              description: The pool configuration if the poolManagementType is dynamic.
              $ref: '#/components/schemas/DynamicPoolConfiguration'
            customContainerTemplate:
              description: The custom container configuration if the containerType is CustomContainer.
              $ref: '#/components/schemas/CustomContainerTemplate'
            sessionNetworkConfiguration:
              description: The network configuration of the sessions in the session pool.
              $ref: '#/components/schemas/SessionNetworkConfiguration'
          x-ms-client-flatten: true
      type: object
    SessionPoolCollection:
      description: Session pool collection Azure resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/SessionPool'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    ConnectedEnvironmentStoragesCollection:
      description: Collection of Storage for Environments
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of storage resources.
          type: array
          items:
            $ref: '#/components/schemas/ConnectedEnvironmentStorage'
    ConnectedEnvironmentStorage:
      description: Storage resource for connectedEnvironment.
      properties:
        properties:
          description: Storage properties
          type: object
          properties:
            azureFile:
              $ref: '#/components/schemas/AzureFileProperties'
              description: Azure file properties
            smb:
              $ref: '#/components/schemas/SmbStorage'
              description: SMB storage properties
      type: object
    JavaComponentConfigurationProperty:
      description: Configuration properties for a Java Component
      type: object
      properties:
        propertyName:
          description: The name of the property
          type: string
        value:
          description: The value of the property
          type: string
    JavaComponentServiceBind:
      description: Configuration to bind a Java Component to another Java Component
      type: object
      properties:
        name:
          description: Name of the service bind
          type: string
        serviceId:
          description: Resource id of the target service
          format: arm-id
          type: string
    JavaComponent:
      description: Java Component.
      properties:
        properties:
          description: Java Component resource specific properties
          type: object
          $ref: '#/components/schemas/JavaComponentProperties'
      type: object
    JavaComponentProperties:
      description: Java Component common properties.
      type: object
      required:
        - componentType
      properties:
        componentType:
          description: Type of the Java Component.
          enum:
            - SpringBootAdmin
            - SpringCloudEureka
            - SpringCloudConfig
            - Nacos
          type: string
          x-ms-enum:
            name: JavaComponentType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the Java Component.
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Deleting
            - InProgress
          type: string
          readOnly: true
          x-ms-enum:
            name: JavaComponentProvisioningState
            modelAsString: true
        configurations:
          description: List of Java Components configuration properties
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentConfigurationProperty'
          x-ms-identifiers:
            - propertyName
        serviceBinds:
          description: List of Java Components that are bound to the Java component
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentServiceBind'
          x-ms-identifiers:
            - name
      x-ms-client-flatten: true
      discriminator:
        propertyName: componentType
    JavaComponentIngress:
      description: Container App Ingress configuration.
      type: object
      properties:
        fqdn:
          description: Hostname of the Java Component endpoint
          type: string
          readOnly: true
    SpringBootAdminComponent:
      description: Spring Boot Admin properties.
      x-ms-discriminator-value: SpringBootAdmin
      properties:
        componentType:
          description: Type of the Java Component.
          enum:
            - SpringBootAdmin
            - SpringCloudEureka
            - SpringCloudConfig
            - Nacos
          type: string
          x-ms-enum:
            name: JavaComponentType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the Java Component.
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Deleting
            - InProgress
          type: string
          readOnly: true
          x-ms-enum:
            name: JavaComponentProvisioningState
            modelAsString: true
        configurations:
          description: List of Java Components configuration properties
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentConfigurationProperty'
          x-ms-identifiers:
            - propertyName
        serviceBinds:
          description: List of Java Components that are bound to the Java component
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentServiceBind'
          x-ms-identifiers:
            - name
        ingress:
          $ref: '#/components/schemas/JavaComponentIngress'
          description: Java Component Ingress configurations.
      type: object
    NacosComponent:
      description: Nacos properties.
      x-ms-discriminator-value: Nacos
      properties:
        componentType:
          description: Type of the Java Component.
          enum:
            - SpringBootAdmin
            - SpringCloudEureka
            - SpringCloudConfig
            - Nacos
          type: string
          x-ms-enum:
            name: JavaComponentType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the Java Component.
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Deleting
            - InProgress
          type: string
          readOnly: true
          x-ms-enum:
            name: JavaComponentProvisioningState
            modelAsString: true
        configurations:
          description: List of Java Components configuration properties
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentConfigurationProperty'
          x-ms-identifiers:
            - propertyName
        serviceBinds:
          description: List of Java Components that are bound to the Java component
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentServiceBind'
          x-ms-identifiers:
            - name
        ingress:
          $ref: '#/components/schemas/JavaComponentIngress'
          description: Java Component Ingress configurations.
      type: object
    SpringCloudEurekaComponent:
      description: Spring Cloud Eureka properties.
      x-ms-discriminator-value: SpringCloudEureka
      properties:
        componentType:
          description: Type of the Java Component.
          enum:
            - SpringBootAdmin
            - SpringCloudEureka
            - SpringCloudConfig
            - Nacos
          type: string
          x-ms-enum:
            name: JavaComponentType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the Java Component.
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Deleting
            - InProgress
          type: string
          readOnly: true
          x-ms-enum:
            name: JavaComponentProvisioningState
            modelAsString: true
        configurations:
          description: List of Java Components configuration properties
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentConfigurationProperty'
          x-ms-identifiers:
            - propertyName
        serviceBinds:
          description: List of Java Components that are bound to the Java component
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentServiceBind'
          x-ms-identifiers:
            - name
        ingress:
          $ref: '#/components/schemas/JavaComponentIngress'
          description: Java Component Ingress configurations.
      type: object
    SpringCloudConfigComponent:
      description: Spring Cloud Config properties.
      x-ms-discriminator-value: SpringCloudConfig
      properties:
        componentType:
          description: Type of the Java Component.
          enum:
            - SpringBootAdmin
            - SpringCloudEureka
            - SpringCloudConfig
            - Nacos
          type: string
          x-ms-enum:
            name: JavaComponentType
            modelAsString: true
        provisioningState:
          description: Provisioning state of the Java Component.
          enum:
            - Succeeded
            - Failed
            - Canceled
            - Deleting
            - InProgress
          type: string
          readOnly: true
          x-ms-enum:
            name: JavaComponentProvisioningState
            modelAsString: true
        configurations:
          description: List of Java Components configuration properties
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentConfigurationProperty'
          x-ms-identifiers:
            - propertyName
        serviceBinds:
          description: List of Java Components that are bound to the Java component
          type: array
          items:
            $ref: '#/components/schemas/JavaComponentServiceBind'
          x-ms-identifiers:
            - name
      type: object
    JavaComponentsCollection:
      description: Java Components ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/JavaComponent'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Configuration:
      description: Non versioned Container App configuration properties that define the mutable settings of a Container app
      type: object
      properties:
        secrets:
          description: Collection of secrets used by a Container app
          type: array
          items:
            $ref: '#/components/schemas/Secret'
          x-ms-identifiers:
            - name
        activeRevisionsMode:
          description: |-
            ActiveRevisionsMode controls how active revisions are handled for the Container app:
            <list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>
          enum:
            - Multiple
            - Single
          type: string
          default: Single
          x-ms-enum:
            name: ActiveRevisionsMode
            modelAsString: true
        ingress:
          $ref: '#/components/schemas/Ingress'
          description: Ingress configurations.
        registries:
          description: Collection of private container registry credentials for containers used by the Container app
          type: array
          items:
            $ref: '#/components/schemas/RegistryCredentials'
          x-ms-identifiers:
            - server
        dapr:
          $ref: '#/components/schemas/Dapr'
          description: Dapr configuration for the Container App.
        runtime:
          $ref: '#/components/schemas/Runtime'
          description: App runtime configuration for the Container App.
        maxInactiveRevisions:
          format: int32
          description: Optional. Max inactive revisions a Container App can have.
          type: integer
        service:
          $ref: '#/components/schemas/Service'
          description: Container App to be a dev Container App Service
        identitySettings:
          description: Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.
          type: array
          items:
            $ref: '#/components/schemas/IdentitySettings'
          x-ms-identifiers:
            - identity
    ContainerApp:
      description: Container App.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        identity:
          description: managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.
          $ref: '#/components/schemas/ManagedServiceIdentity'
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          enum:
            - workflowapp
          x-ms-mutability:
            - read
            - create
          x-ms-enum:
            name: kind
            modelAsString: true
          description: Metadata used to render different experiences for resources of the same type; e.g. WorkflowApp is a kind of Microsoft.App/ContainerApps type. If supported, the resource provider must validate and persist this value.
        properties:
          description: ContainerApp resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Container App.
              enum:
                - InProgress
                - Succeeded
                - Failed
                - Canceled
                - Deleting
              type: string
              readOnly: true
              x-ms-enum:
                name: ContainerAppProvisioningState
                modelAsString: true
            managedEnvironmentId:
              description: Deprecated. Resource ID of the Container App's environment.
              type: string
              x-ms-mutability:
                - create
                - read
            environmentId:
              description: Resource ID of environment.
              type: string
              x-ms-mutability:
                - create
                - read
            workloadProfileName:
              $ref: '#/components/schemas/WorkloadProfileName'
              description: Workload profile name to pin for container app execution.
            patchingConfiguration:
              description: Container App auto patch configuration.
              type: object
              properties:
                patchingMode:
                  description: Patching mode for the container app. Null or default in this field will be interpreted as Automatic by RP. Automatic mode will automatically apply available patches. Manual mode will require the user to manually apply patches. Disabled mode will stop patch detection and auto patching.
                  type: string
                  enum:
                    - Automatic
                    - Manual
                    - Disabled
                  x-ms-enum:
                    name: patchingMode
                    modelAsString: true
            latestRevisionName:
              description: Name of the latest revision of the Container App.
              type: string
              readOnly: true
            latestReadyRevisionName:
              description: Name of the latest ready revision of the Container App.
              type: string
              readOnly: true
            latestRevisionFqdn:
              description: Fully Qualified Domain Name of the latest revision of the Container App.
              type: string
              readOnly: true
            customDomainVerificationId:
              description: Id used to verify domain name ownership
              type: string
              readOnly: true
            configuration:
              $ref: '#/components/schemas/Configuration'
              description: Non versioned Container App configuration properties.
            template:
              $ref: '#/components/schemas/Template'
              description: Container App versioned application definition.
            outboundIpAddresses:
              description: Outbound IP Addresses for container app.
              type: array
              items:
                type: string
              readOnly: true
            eventStreamEndpoint:
              description: The endpoint of the eventstream of the container app.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    ContainerAppCollection:
      description: Container App collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ContainerApp'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Dapr:
      description: Container App Dapr configuration.
      type: object
      properties:
        enabled:
          description: Boolean indicating if the Dapr side car is enabled
          type: boolean
          default: false
        appId:
          description: Dapr application identifier
          type: string
        appProtocol:
          description: Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http
          enum:
            - http
            - grpc
          type: string
          default: http
          x-ms-enum:
            name: appProtocol
            modelAsString: true
        appPort:
          format: int32
          description: Tells Dapr which port your application is listening on
          type: integer
        httpReadBufferSize:
          type: integer
          description: Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.
          format: int32
        httpMaxRequestSize:
          type: integer
          description: Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.
          format: int32
        logLevel:
          description: Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.
          enum:
            - info
            - debug
            - warn
            - error
          type: string
          x-ms-enum:
            name: logLevel
            modelAsString: true
        enableApiLogging:
          description: Enables API logging for the Dapr sidecar
          type: boolean
    Runtime:
      description: Container App Runtime configuration.
      type: object
      properties:
        java:
          description: Java app configuration
          type: object
          properties:
            enableMetrics:
              description: Enable jmx core metrics for the java app
              type: boolean
            javaAgent:
              description: Diagnostic capabilities achieved by java agent
              type: object
              properties:
                enabled:
                  description: Enable java agent injection for the java app.
                  type: boolean
                logging:
                  description: Capabilities on the java logging scenario.
                  type: object
                  properties:
                    loggerSettings:
                      description: Settings of the logger for the java app.
                      type: array
                      items:
                        $ref: '#/components/schemas/LoggerSetting'
                      x-ms-identifiers:
                        - logger
                        - level
        dotnet:
          description: .NET app configuration
          type: object
          properties:
            autoConfigureDataProtection:
              description: Auto configure the ASP.NET Core Data Protection feature
              type: boolean
    LoggerSetting:
      description: Logger settings for java workloads.
      type: object
      required:
        - logger
        - level
      properties:
        logger:
          description: Logger name.
          type: string
        level:
          description: The specified logger's log level.
          enum:
            - 'off'
            - error
            - info
            - debug
            - trace
            - warn
          type: string
          x-ms-enum:
            name: level
            modelAsString: true
    Ingress:
      description: Container App Ingress configuration.
      type: object
      properties:
        fqdn:
          description: Hostname.
          type: string
          readOnly: true
        external:
          description: Bool indicating if app exposes an external http endpoint
          default: false
          type: boolean
        targetPort:
          format: int32
          description: Target Port in containers for traffic from ingress
          type: integer
        exposedPort:
          format: int32
          description: Exposed Port in containers for TCP traffic from ingress
          type: integer
        transport:
          description: Ingress transport protocol
          enum:
            - auto
            - http
            - http2
            - tcp
          type: string
          default: auto
          x-ms-enum:
            name: IngressTransportMethod
            modelAsString: true
        traffic:
          description: Traffic weights for app's revisions
          type: array
          items:
            $ref: '#/components/schemas/TrafficWeight'
          x-ms-identifiers:
            - revisionName
        customDomains:
          description: custom domain bindings for Container Apps' hostnames.
          type: array
          items:
            $ref: '#/components/schemas/CustomDomain'
          x-ms-identifiers:
            - name
        allowInsecure:
          description: Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections
          type: boolean
          default: false
        ipSecurityRestrictions:
          description: Rules to restrict incoming IP address.
          type: array
          items:
            $ref: '#/components/schemas/IpSecurityRestrictionRule'
          x-ms-identifiers:
            - name
        stickySessions:
          description: Sticky Sessions for Single Revision Mode
          type: object
          properties:
            affinity:
              description: Sticky Session Affinity
              enum:
                - sticky
                - none
              type: string
              x-ms-enum:
                name: affinity
                modelAsString: true
        clientCertificateMode:
          description: Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.
          enum:
            - ignore
            - accept
            - require
          type: string
          x-ms-enum:
            name: IngressClientCertificateMode
            modelAsString: true
        corsPolicy:
          description: CORS policy for container app
          $ref: '#/components/schemas/CorsPolicy'
        additionalPortMappings:
          description: Settings to expose additional ports on container app
          type: array
          items:
            $ref: '#/components/schemas/IngressPortMapping'
          x-ms-identifiers:
            - targetPort
        targetPortHttpScheme:
          description: Whether an http app listens on http or https
          enum:
            - http
            - https
          type: string
          x-ms-enum:
            name: IngressTargetPortHttpScheme
            modelAsString: true
    SecretsCollection:
      description: Container App Secrets Collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ContainerAppSecret'
          x-ms-identifiers:
            - name
    ContainerAppSecret:
      description: Container App Secret.
      type: object
      properties:
        name:
          description: Secret Name.
          type: string
          readOnly: true
        value:
          description: Secret Value.
          type: string
          x-ms-secret: true
          readOnly: true
        identity:
          description: Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.
          type: string
          readOnly: true
        keyVaultUrl:
          description: Azure Key Vault URL pointing to the secret referenced by the container app.
          type: string
          readOnly: true
    TrafficWeight:
      description: Traffic weight assigned to a revision
      type: object
      properties:
        revisionName:
          description: Name of a revision
          type: string
        weight:
          format: int32
          description: Traffic weight assigned to a revision
          type: integer
        latestRevision:
          description: Indicates that the traffic weight belongs to a latest stable revision
          default: false
          type: boolean
        label:
          description: Associates a traffic label with a revision
          type: string
    CustomDomain:
      description: Custom Domain of a Container App
      type: object
      required:
        - name
      properties:
        name:
          description: Hostname.
          type: string
        bindingType:
          description: Custom Domain binding type.
          enum:
            - Disabled
            - SniEnabled
          type: string
          x-ms-enum:
            name: bindingType
            modelAsString: true
        certificateId:
          description: Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.
          type: string
    IpSecurityRestrictionRule:
      description: Rule to restrict incoming IP address.
      type: object
      required:
        - name
        - ipAddressRange
        - action
      properties:
        name:
          description: Name for the IP restriction rule.
          type: string
        description:
          description: Describe the IP restriction rule that is being sent to the container-app. This is an optional field.
          type: string
        ipAddressRange:
          description: CIDR notation to match incoming IP address
          type: string
        action:
          description: 'Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny'
          enum:
            - Allow
            - Deny
          type: string
          x-ms-enum:
            name: action
            modelAsString: true
    CorsPolicy:
      description: Cross-Origin-Resource-Sharing policy
      type: object
      required:
        - allowedOrigins
      properties:
        allowedOrigins:
          description: Specifies the content for the access-control-allow-origins header
          type: array
          items:
            type: string
        allowedMethods:
          description: Specifies the content for the access-control-allow-methods header
          type: array
          items:
            type: string
        allowedHeaders:
          description: Specifies the content for the access-control-allow-headers header
          type: array
          items:
            type: string
        exposeHeaders:
          description: 'Specifies the content for the access-control-expose-headers header '
          type: array
          items:
            type: string
        maxAge:
          format: int32
          description: Specifies the content for the access-control-max-age header
          type: integer
        allowCredentials:
          description: Specifies whether the resource allows credentials
          type: boolean
    IngressPortMapping:
      description: Port mappings of container app ingress
      type: object
      required:
        - external
        - targetPort
      properties:
        external:
          description: Specifies whether the app port is accessible outside of the environment
          type: boolean
        targetPort:
          format: int32
          description: Specifies the port user's container listens on
          type: integer
        exposedPort:
          format: int32
          description: Specifies the exposed port for the target port. If not specified, it defaults to target port
          type: integer
    CustomHostnameAnalysisResult:
      description: Custom domain analysis.
      type: object
      properties:
        hostName:
          description: Host name that was analyzed
          type: string
          readOnly: true
        isHostnameAlreadyVerified:
          description: <code>true</code> if hostname is already verified; otherwise, <code>false</code>.
          type: boolean
          readOnly: true
        customDomainVerificationTest:
          description: DNS verification test result.
          enum:
            - Passed
            - Failed
            - Skipped
          type: string
          readOnly: true
          x-ms-enum:
            name: DnsVerificationTestResult
            modelAsString: false
        customDomainVerificationFailureInfo:
          description: Raw failure information if DNS verification fails.
          type: object
          properties:
            code:
              description: Standardized string to programmatically identify the error.
              type: string
              readOnly: true
            message:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            target:
              description: Detailed error description and debugging information.
              type: string
              readOnly: true
            details:
              type: array
              description: Details or the error
              items:
                description: Detailed errors.
                type: object
                properties:
                  code:
                    description: Standardized string to programmatically identify the error.
                    type: string
                    readOnly: true
                  message:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                  target:
                    description: Detailed error description and debugging information.
                    type: string
                    readOnly: true
                readOnly: true
              x-ms-identifiers:
                - code
          readOnly: true
        hasConflictOnManagedEnvironment:
          description: <code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.
          type: boolean
          readOnly: true
        conflictWithEnvironmentCustomDomain:
          description: <code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.
          type: boolean
          readOnly: true
        conflictingContainerAppResourceId:
          description: Name of the conflicting Container App on the Managed Environment if it's within the same subscription.
          type: string
          readOnly: true
        cNameRecords:
          description: CName records visible for this hostname.
          type: array
          items:
            type: string
        txtRecords:
          description: TXT records visible for this hostname.
          type: array
          items:
            type: string
        aRecords:
          description: A records visible for this hostname.
          type: array
          items:
            type: string
        alternateCNameRecords:
          description: Alternate CName records visible for this hostname.
          type: array
          items:
            type: string
        alternateTxtRecords:
          description: Alternate TXT records visible for this hostname.
          type: array
          items:
            type: string
      x-ms-client-flatten: true
    ContainerAppAuthToken:
      description: Container App Auth Token.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          description: Container App auth token resource specific properties
          type: object
          properties:
            token:
              description: Auth token value.
              type: string
              x-ms-secret: true
              readOnly: true
            expires:
              format: date-time
              description: Token expiration date.
              type: string
              readOnly: true
          x-ms-client-flatten: true
      type: object
    Service:
      description: Container App to be a dev service
      type: object
      required:
        - type
      properties:
        type:
          description: Dev ContainerApp service type
          type: string
    ContainerAppsPatchResource:
      description: Container App Patch
      properties:
        properties:
          $ref: '#/components/schemas/PatchProperties'
          description: Properties that describes current states of the patch resource.
          x-ms-mutability:
            - read
            - update
      type: object
    PatchApplyStatus:
      type: string
      description: The status of the patch once it has been provisioned
      enum:
        - NotStarted
        - RebaseInProgress
        - CreatingRevision
        - Succeeded
        - Canceled
        - RebaseFailed
        - RevisionCreationFailed
        - ImagePushPullFailed
        - ManuallySkipped
      x-ms-enum:
        name: PatchApplyStatus
        modelAsString: true
      readOnly: true
    DetectionStatus:
      type: string
      description: The status of the patch detection.
      enum:
        - Succeeded
        - RegistryLoginFailed
        - Failed
      x-ms-enum:
        name: DetectionStatus
        modelAsString: true
      readOnly: true
    PatchDetails:
      description: The detailed info of patch operation performing when applying a patch.
      type: object
      required:
        - targetContainerName
        - targetImage
        - lastDetectionTime
        - detectionStatus
      properties:
        targetContainerName:
          type: string
          description: The name of the target container for the patch.
          readOnly: true
        targetImage:
          type: string
          description: The name of the target image for the patch.
          readOnly: true
        lastDetectionTime:
          type: string
          format: date-time
          description: The UTC timestamp that describes the latest detection was done.
          readOnly: true
        detectionStatus:
          $ref: '#/components/schemas/DetectionStatus'
          description: The status of the patch detection.
          readOnly: true
        newImageName:
          type: string
          description: The name of the new image created by the patch.
          readOnly: true
        newLayer:
          type: object
          properties:
            name:
              type: string
              description: The details of the new layer for the target image.
            frameworkAndVersion:
              type: string
              description: The framework and its version in the new run image for the target image.
            osAndVersion:
              type: string
              description: The OS name and its version in the new run image for the target image.
          description: New layer update details in the target image.
          readOnly: true
        oldLayer:
          type: object
          properties:
            name:
              type: string
              description: The details of the old layer for the target image.
            frameworkAndVersion:
              type: string
              description: The framework and its version in the old run image for the target image.
            osAndVersion:
              type: string
              description: The OS name and its version in the old run image for the target image.
          description: The old layer details in the target image.
          readOnly: true
        patchType:
          type: string
          description: The type for the patch.
          enum:
            - FrameworkSecurity
            - OSSecurity
            - FrameworkAndOSSecurity
            - Other
          x-ms-enum:
            name: PatchType
            modelAsString: true
          readOnly: true
      readOnly: true
    PatchProperties:
      description: Top level properties that describes current states of the patch resource
      type: object
      properties:
        targetEnvironmentId:
          format: arm-id
          type: string
          description: The Azure resource id of the target environment for the patch.
        targetContainerAppId:
          format: arm-id
          type: string
          description: The Azure resource id of the target container app for the patch.
        targetRevisionId:
          format: arm-id
          type: string
          description: The Azure resource id of the target revision for the patch.
        patchApplyStatus:
          $ref: '#/components/schemas/PatchApplyStatus'
          description: The status of the patch operation.
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: The UTC timestamp that describes when the patch object was created.
          readOnly: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The UTC timestamp that describes when the patch object was last updated.
          readOnly: true
        patchDetails:
          description: Detailed info describes the patch operation for the target container app.
          type: array
          items:
            $ref: '#/components/schemas/PatchDetails'
          x-ms-identifiers: []
          readOnly: true
      readOnly: true
    PatchCollection:
      description: Container App patch collection
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of patch resources.
          type: array
          items:
            $ref: '#/components/schemas/ContainerAppsPatchResource'
        nextLink:
          description: the link to the next page of items
          type: string
          format: uri
    PatchSkipConfig:
      description: The configuration for patcher to skip a patch or not.
      type: object
      properties:
        skip:
          type: boolean
          description: The flag to indicate whether to skip the patch or not.
    LogicApp:
      description: A logic app extension resource
      properties:
        properties:
          $ref: '#/components/schemas/LogicAppProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    LogicAppProperties:
      description: The properties of logic apps extension.
      properties: {}
      type: object
    WorkflowEnvelope:
      description: Workflow properties definition.
      properties:
        id:
          type: string
          readOnly: true
          description: The resource id.
        name:
          type: string
          readOnly: true
          description: Gets the resource name.
        type:
          type: string
          readOnly: true
          description: Gets the resource type.
        kind:
          type: string
          description: The resource kind.
        location:
          type: string
          description: The resource location.
          x-ms-mutability:
            - create
            - read
        properties:
          description: Additional workflow properties.
          type: object
          properties:
            files:
              description: Gets or sets the files.
              $ref: '#/components/schemas/WorkflowFiles'
            flowState:
              description: Gets or sets the state of the workflow.
              $ref: '#/components/schemas/WorkflowState'
            health:
              $ref: '#/components/schemas/WorkflowHealth'
              description: Gets or sets workflow health.
      type: object
    WorkflowEnvelopeCollection:
      description: Collection of workflow information elements.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/WorkflowEnvelope'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    WorkflowFiles:
      description: Gets or sets the files.
      properties: {}
      type: object
    WorkflowHealth:
      description: Represents the workflow health.
      required:
        - state
      type: object
      properties:
        state:
          description: Gets or sets the workflow health state.
          enum:
            - NotSpecified
            - Healthy
            - Unhealthy
            - Unknown
          type: string
          x-ms-enum:
            name: WorkflowHealthState
            modelAsString: false
        error:
          $ref: '#/components/schemas/ErrorEntity'
          description: Gets or sets the workflow error.
    WorkflowState:
      type: string
      description: The workflow state.
      enum:
        - NotSpecified
        - Completed
        - Enabled
        - Disabled
        - Deleted
        - Suspended
      x-ms-enum:
        name: WorkflowState
        modelAsString: true
    WorkflowArtifacts:
      type: object
      properties:
        appSettings:
          $ref: '#/components/schemas/Object'
          description: Application settings of the workflow.
        files:
          $ref: '#/components/schemas/WorkflowFiles'
          description: Files of the app.
        filesToDelete:
          type: array
          items:
            type: string
          description: Files of the app to delete.
      description: The workflow filter.
    Object:
      type: object
      properties: {}
    ErrorEntity:
      description: Body of the error response returned from the API.
      type: object
      properties:
        extendedCode:
          description: Type of error.
          type: string
        messageTemplate:
          description: Message template.
          type: string
        parameters:
          description: Parameters for the template.
          type: array
          items:
            type: string
        innerErrors:
          description: Inner errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorEntity'
          x-ms-identifiers: []
        details:
          description: Error Details.
          type: array
          items:
            $ref: '#/components/schemas/ErrorEntity'
          x-ms-identifiers: []
        target:
          description: The error target.
          type: string
        code:
          description: Basic error code.
          type: string
        message:
          description: Any details of the error.
          type: string
    Revision:
      description: Container App Revision.
      properties:
        properties:
          description: Revision resource specific properties
          type: object
          properties:
            createdTime:
              format: date-time
              description: |-
                Timestamp describing when the revision was created
                by controller
              type: string
              readOnly: true
            lastActiveTime:
              format: date-time
              description: Timestamp describing when the revision was last active. Only meaningful when revision is inactive
              type: string
              readOnly: true
            fqdn:
              description: Fully qualified domain name of the revision
              type: string
              readOnly: true
            template:
              $ref: '#/components/schemas/Template'
              description: |-
                Container App Revision Template with all possible settings and the
                defaults if user did not provide them. The defaults are populated
                as they were at the creation time
              readOnly: true
            active:
              description: Boolean describing if the Revision is Active
              type: boolean
              readOnly: true
            replicas:
              format: int32
              description: Number of pods currently running for this revision
              type: integer
              readOnly: true
            trafficWeight:
              format: int32
              description: Traffic weight assigned to this revision
              type: integer
              readOnly: true
            provisioningError:
              description: Optional Field - Platform Error Message
              type: string
              readOnly: true
            healthState:
              description: Current health State of the revision
              enum:
                - Healthy
                - Unhealthy
                - None
              type: string
              readOnly: true
              x-ms-enum:
                name: RevisionHealthState
                modelAsString: true
            provisioningState:
              description: Current provisioning State of the revision
              enum:
                - Provisioning
                - Provisioned
                - Failed
                - Deprovisioning
                - Deprovisioned
              type: string
              readOnly: true
              x-ms-enum:
                name: RevisionProvisioningState
                modelAsString: true
            runningState:
              description: Current running state of the revision
              enum:
                - Running
                - Processing
                - Stopped
                - Degraded
                - Failed
                - Unknown
              type: string
              readOnly: true
              x-ms-enum:
                name: RevisionRunningState
                modelAsString: true
          x-ms-client-flatten: true
      type: object
    RevisionCollection:
      description: Container App Revisions collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Revision'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    Replica:
      description: Container App Revision Replica.
      properties:
        properties:
          description: Replica resource specific properties
          type: object
          properties:
            createdTime:
              type: string
              description: Timestamp describing when the pod was created by controller
              format: date-time
              readOnly: true
            runningState:
              description: Current running state of the replica
              enum:
                - Running
                - NotRunning
                - Unknown
              type: string
              readOnly: true
              x-ms-enum:
                name: ContainerAppReplicaRunningState
                modelAsString: true
            runningStateDetails:
              description: The details of replica current running state
              type: string
              readOnly: true
            containers:
              description: The containers collection under a replica.
              type: array
              items:
                $ref: '#/components/schemas/ReplicaContainer'
              x-ms-identifiers:
                - name
            initContainers:
              description: The init containers collection under a replica.
              type: array
              items:
                $ref: '#/components/schemas/ReplicaContainer'
              x-ms-identifiers:
                - name
          x-ms-client-flatten: true
      type: object
    ReplicaCollection:
      description: Container App Revision Replicas collection ARM resource.
      required:
        - value
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/Replica'
    ReplicaContainer:
      description: Container object under Container App Revision Replica.
      type: object
      properties:
        name:
          description: The Name of the Container
          type: string
        containerId:
          description: The Id of the Container
          type: string
        ready:
          description: The container ready status
          type: boolean
        started:
          description: The container start status
          type: boolean
        restartCount:
          format: int32
          description: The container restart count
          type: integer
        runningState:
          description: Current running state of the container
          enum:
            - Running
            - Terminated
            - Waiting
          type: string
          readOnly: true
          x-ms-enum:
            name: ContainerAppContainerRunningState
            modelAsString: true
        runningStateDetails:
          description: The details of container current running state
          type: string
          readOnly: true
        logStreamEndpoint:
          description: Log Stream endpoint
          type: string
          readOnly: true
        execEndpoint:
          description: Container exec endpoint
          type: string
          readOnly: true
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    ConnectedEnvironment:
      description: An environment for Kubernetes cluster specialized for web workloads by Azure App Service
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
        properties:
          description: ConnectedEnvironment resource specific properties
          type: object
          properties:
            provisioningState:
              description: Provisioning state of the Kubernetes Environment.
              enum:
                - Succeeded
                - Failed
                - Canceled
                - Waiting
                - InitializationInProgress
                - InfrastructureSetupInProgress
                - InfrastructureSetupComplete
                - ScheduledForDelete
              type: string
              readOnly: true
              x-ms-enum:
                name: ConnectedEnvironmentProvisioningState
                modelAsString: true
            deploymentErrors:
              description: Any errors that occurred during deployment or deployment validation
              type: string
              readOnly: true
            defaultDomain:
              description: Default Domain Name for the cluster
              type: string
              readOnly: true
            staticIp:
              description: Static IP of the connectedEnvironment
              type: string
            daprAIConnectionString:
              type: string
              description: Application Insights connection string used by Dapr to export Service to Service communication telemetry
              x-ms-secret: true
            customDomainConfiguration:
              $ref: '#/components/schemas/CustomDomainConfiguration'
              description: Custom domain configuration for the environment
          x-ms-client-flatten: true
      type: object
    ConnectedEnvironmentCollection:
      description: Collection of connectedEnvironments
      type: object
      properties:
        value:
          description: Collection of resources.
          type: array
          items:
            $ref: '#/components/schemas/ConnectedEnvironment'
        nextLink:
          description: Link to next page of resources.
          type: string
          readOnly: true
    UsageName:
      type: object
      properties:
        value:
          type: string
          description: The name of the resource.
        localizedValue:
          type: string
          description: The localized name of the resource.
      description: The Usage Names.
    Usage:
      type: object
      properties:
        unit:
          type: string
          description: An enum describing the unit of usage measurement.
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: false
        currentValue:
          type: number
          format: float
          description: The current usage of the resource.
        limit:
          type: number
          format: float
          description: The maximum permitted usage of the resource.
        name:
          $ref: '#/components/schemas/UsageName'
          description: The name of the type of usage.
      required:
        - unit
        - currentValue
        - limit
        - name
      description: Describes Compute Resource Usage.
    ListUsagesResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers:
            - name
          description: The list of compute resource usages.
        nextLink:
          type: string
          description: The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information.
    ContainerAppsBuildConfiguration:
      type: object
      properties:
        baseOs:
          type: string
          description: Base OS used to build and run the app.
          readOnly: true
        platform:
          type: string
          description: Platform to be used to build and run the app.
          readOnly: true
        platformVersion:
          type: string
          description: Platform version to be used to build and run the app.
          readOnly: true
        environmentVariables:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          x-ms-identifiers:
            - name
          description: List of environment variables to be passed to the build, secrets should not be used in environment variable.
          readOnly: true
        preBuildSteps:
          type: array
          items:
            $ref: '#/components/schemas/PreBuildStep'
          x-ms-identifiers: []
          description: List of steps to perform before the build.
          readOnly: true
      description: Configuration of the build.
    ContainerAppsBuildProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/BuildProvisioningState'
          description: Build provisioning state.
          readOnly: true
        buildStatus:
          $ref: '#/components/schemas/BuildStatus'
          description: Status of the build once it has been provisioned.
          readOnly: true
        destinationContainerRegistry:
          $ref: '#/components/schemas/ContainerRegistryWithCustomImage'
          description: Container registry that the final image will be uploaded to.
          readOnly: true
        configuration:
          $ref: '#/components/schemas/ContainerAppsBuildConfiguration'
          description: Configuration of the build.
          readOnly: true
        logStreamEndpoint:
          type: string
          description: Endpoint from which the build logs can be streamed.
          readOnly: true
      description: The ContainerAppBuild properties.
    ContainerAppsBuildResource:
      description: Information pertaining to an individual build.
      properties:
        properties:
          $ref: '#/components/schemas/ContainerAppsBuildProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
      type: object
    ContainerAppsBuildCollection:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ContainerAppsBuildResource'
          description: The Container Apps Build Resource items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: The response of a Container Apps Build Resource list operation.
      required:
        - value
  x-stackQL-resources:
    connected_environments_dapr_components:
      id: azure.container_apps.connected_environments_dapr_components
      name: connected_environments_dapr_components
      title: connected_environments_dapr_components
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironmentsDaprComponents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponentsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironmentsDaprComponents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponent
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}?api-version=2024-02-02-preview/put'
            operationId: ConnectedEnvironmentsDaprComponents_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponent
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}?api-version=2024-02-02-preview/delete'
            operationId: ConnectedEnvironmentsDaprComponents_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components/methods/delete'
    connected_environments_dapr_components_secrets:
      id: azure.container_apps.connected_environments_dapr_components_secrets
      name: connected_environments_dapr_components_secrets
      title: connected_environments_dapr_components_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1daprComponents~1{componentName}~1listSecrets?api-version=2024-02-02-preview/post'
            operationId: ConnectedEnvironmentsDaprComponentsSecrets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprSecretsCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_dapr_components_secrets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    custom_domain_verification_ids:
      id: azure.container_apps.custom_domain_verification_ids
      name: custom_domain_verification_ids
      title: custom_domain_verification_ids
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1getCustomDomainVerificationId?api-version=2024-02-02-preview/post'
            operationId: CustomDomainVerificationId_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomDomainVerificationId
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    source_controls:
      id: azure.container_apps.source_controls
      name: source_controls
      title: source_controls
      methods:
        list_by_container_app:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsSourceControls_ListByContainerApp
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SourceControlCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols~1{sourceControlName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsSourceControls_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SourceControl
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols~1{sourceControlName}?api-version=2024-02-02-preview/put'
            operationId: ContainerAppsSourceControls_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SourceControl
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1sourcecontrols~1{sourceControlName}?api-version=2024-02-02-preview/delete'
            operationId: ContainerAppsSourceControls_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/get'
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/list_by_container_app'
        insert:
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/source_controls/methods/delete'
    functions_extensions:
      id: azure.container_apps.functions_extensions
      name: functions_extensions
      title: functions_extensions
      methods:
        invoke_functions_host:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1providers~1Microsoft.App~1functions~1{functionAppName}~1invoke?api-version=2024-02-02-preview/post'
            operationId: FunctionsExtension_InvokeFunctionsHost
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    billing_meters:
      id: azure.container_apps.billing_meters
      name: billing_meters
      title: billing_meters
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1locations~1{location}~1billingMeters?api-version=2024-02-02-preview/get'
            operationId: BillingMeters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BillingMeterCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/billing_meters/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    jobs:
      id: azure.container_apps.jobs
      name: jobs
      title: jobs
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1jobs?api-version=2024-02-02-preview/get'
            operationId: Jobs_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobsCollection
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs?api-version=2024-02-02-preview/get'
            operationId: Jobs_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}?api-version=2024-02-02-preview/get'
            operationId: Jobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}?api-version=2024-02-02-preview/put'
            operationId: Jobs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}?api-version=2024-02-02-preview/delete'
            operationId: Jobs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}?api-version=2024-02-02-preview/patch'
            operationId: Jobs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1start?api-version=2024-02-02-preview/post'
            operationId: Jobs_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobExecutionBase
        stop_execution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1executions~1{jobExecutionName}~1stop?api-version=2024-02-02-preview/post'
            operationId: Jobs_StopExecution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop_multiple_executions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1stop?api-version=2024-02-02-preview/post'
            operationId: Jobs_StopMultipleExecutions
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppJobExecutions
        proxy_get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1detectorProperties~1{apiName}?api-version=2024-02-02-preview/get'
            operationId: Jobs_ProxyGet
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Job
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/jobs/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/jobs/methods/delete'
    jobs_executions:
      id: azure.container_apps.jobs_executions
      name: jobs_executions
      title: jobs_executions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1executions?api-version=2024-02-02-preview/get'
            operationId: JobsExecutions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppJobExecutions
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_executions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.container_apps.operations
      name: operations
      title: operations
      methods:
        job_execution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1executions~1{jobExecutionName}?api-version=2024-02-02-preview/get'
            operationId: Operations_JobExecution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobExecution
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.App~1operations?api-version=2024-02-02-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableOperations
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    jobs_secrets:
      id: azure.container_apps.jobs_secrets
      name: jobs_secrets
      title: jobs_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1listSecrets?api-version=2024-02-02-preview/post'
            operationId: JobsSecrets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobSecretsCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_secrets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    dapr_component_resiliency_policies:
      id: azure.container_apps.dapr_component_resiliency_policies
      name: dapr_component_resiliency_policies
      title: dapr_component_resiliency_policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1resiliencyPolicies?api-version=2024-02-02-preview/get'
            operationId: DaprComponentResiliencyPolicies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponentResiliencyPoliciesCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1resiliencyPolicies~1{name}?api-version=2024-02-02-preview/get'
            operationId: DaprComponentResiliencyPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponentResiliencyPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1resiliencyPolicies~1{name}?api-version=2024-02-02-preview/put'
            operationId: DaprComponentResiliencyPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponentResiliencyPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1resiliencyPolicies~1{name}?api-version=2024-02-02-preview/delete'
            operationId: DaprComponentResiliencyPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dapr_component_resiliency_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/dapr_component_resiliency_policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dapr_component_resiliency_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dapr_component_resiliency_policies/methods/delete'
    builds_by_builder_resources:
      id: azure.container_apps.builds_by_builder_resources
      name: builds_by_builder_resources
      title: builds_by_builder_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders~1{builderName}~1builds?api-version=2024-02-02-preview/get'
            operationId: BuildsByBuilderResource_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuildCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/builds_by_builder_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    builds:
      id: azure.container_apps.builds
      name: builds
      title: builds
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1builds~1{buildName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsBuilds_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppsBuildResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders~1{builderName}~1builds~1{buildName}?api-version=2024-02-02-preview/put'
            operationId: Builds_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuildResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1builds~1{buildName}?api-version=2024-02-02-preview/delete'
            operationId: ContainerAppsBuilds_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/builds/methods/get'
          - $ref: '#/components/x-stackQL-resources/builds/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/builds/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/builds/methods/delete'
          - $ref: '#/components/x-stackQL-resources/builds/methods/delete'
    build_auth_tokens:
      id: azure.container_apps.build_auth_tokens
      name: build_auth_tokens
      title: build_auth_tokens
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders~1{builderName}~1builds~1{buildName}~1listAuthToken?api-version=2024-02-02-preview/post'
            operationId: BuildAuthToken_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuildToken
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/build_auth_tokens/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    dapr_components:
      id: azure.container_apps.dapr_components
      name: dapr_components
      title: dapr_components
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents?api-version=2024-02-02-preview/get'
            operationId: DaprComponents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponentsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}?api-version=2024-02-02-preview/get'
            operationId: DaprComponents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponent
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}?api-version=2024-02-02-preview/put'
            operationId: DaprComponents_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprComponent
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}?api-version=2024-02-02-preview/delete'
            operationId: DaprComponents_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/get'
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dapr_components/methods/delete'
    dapr_components_secrets:
      id: azure.container_apps.dapr_components_secrets
      name: dapr_components_secrets
      title: dapr_components_secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprComponents~1{componentName}~1listSecrets?api-version=2024-02-02-preview/post'
            operationId: DaprComponentsSecrets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprSecretsCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dapr_components_secrets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managed_environments_storages:
      id: azure.container_apps.managed_environments_storages
      name: managed_environments_storages
      title: managed_environments_storages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentsStorages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironmentStoragesCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages~1{storageName}?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentsStorages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironmentStorage
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages~1{storageName}?api-version=2024-02-02-preview/put'
            operationId: ManagedEnvironmentsStorages_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironmentStorage
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1storages~1{storageName}?api-version=2024-02-02-preview/delete'
            operationId: ManagedEnvironmentsStorages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_environments_storages/methods/delete'
    dot_net_components:
      id: azure.container_apps.dot_net_components
      name: dot_net_components
      title: dot_net_components
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1dotNetComponents?api-version=2024-02-02-preview/get'
            operationId: DotNetComponents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DotNetComponentsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1dotNetComponents~1{name}?api-version=2024-02-02-preview/get'
            operationId: DotNetComponents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DotNetComponent
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1dotNetComponents~1{name}?api-version=2024-02-02-preview/put'
            operationId: DotNetComponents_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DotNetComponent
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1dotNetComponents~1{name}?api-version=2024-02-02-preview/patch'
            operationId: DotNetComponents_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DotNetComponent
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1dotNetComponents~1{name}?api-version=2024-02-02-preview/delete'
            operationId: DotNetComponents_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dot_net_components/methods/get'
          - $ref: '#/components/x-stackQL-resources/dot_net_components/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dot_net_components/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/dot_net_components/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dot_net_components/methods/delete'
    available_workload_profiles:
      id: azure.container_apps.available_workload_profiles
      name: available_workload_profiles
      title: available_workload_profiles
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1locations~1{location}~1availableManagedEnvironmentsWorkloadProfileTypes?api-version=2024-02-02-preview/get'
            operationId: AvailableWorkloadProfiles_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AvailableWorkloadProfilesCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/available_workload_profiles/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    diagnostics_detectors:
      id: azure.container_apps.diagnostics_detectors
      name: diagnostics_detectors
      title: diagnostics_detectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectors?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsDiagnosticsDetectors_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectors~1{detectorName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsDiagnosticsDetector_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Diagnostics
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_detectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/diagnostics_detectors/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    diagnostics_revisions:
      id: azure.container_apps.diagnostics_revisions
      name: diagnostics_revisions
      title: diagnostics_revisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectorProperties~1revisionsApi~1revisions~1?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsDiagnosticsRevisions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RevisionCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectorProperties~1revisionsApi~1revisions~1{revisionName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsDiagnosticsRevision_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Revision
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_revisions/methods/get'
          - $ref: '#/components/x-stackQL-resources/diagnostics_revisions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    diagnostics_roots:
      id: azure.container_apps.diagnostics_roots
      name: diagnostics_roots
      title: diagnostics_roots
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1detectorProperties~1rootApi~1?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsDiagnosticsRoot_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerApp
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/diagnostics_roots/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managed_environment_diagnostics_detectors:
      id: azure.container_apps.managed_environment_diagnostics_detectors
      name: managed_environment_diagnostics_detectors
      title: managed_environment_diagnostics_detectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1detectors?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentDiagnosticsDetectors_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1detectors~1{detectorName}?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentDiagnosticsDetector_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Diagnostics
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environment_diagnostics_detectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_environment_diagnostics_detectors/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managed_environments_diagnostics_roots:
      id: azure.container_apps.managed_environments_diagnostics_roots
      name: managed_environments_diagnostics_roots
      title: managed_environments_diagnostics_roots
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1detectorProperties~1rootApi~1?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentsDiagnosticsRoot_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironment
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_diagnostics_roots/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    jobs_detectors:
      id: azure.container_apps.jobs_detectors
      name: jobs_detectors
      title: jobs_detectors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1detectors?api-version=2024-02-02-preview/get'
            operationId: JobsDetectors_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiagnosticsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1jobs~1{jobName}~1detectors~1{detectorName}?api-version=2024-02-02-preview/get'
            operationId: JobsDetector_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Diagnostics
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/jobs_detectors/methods/get'
          - $ref: '#/components/x-stackQL-resources/jobs_detectors/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    dapr_subscriptions:
      id: azure.container_apps.dapr_subscriptions
      name: dapr_subscriptions
      title: dapr_subscriptions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprSubscriptions?api-version=2024-02-02-preview/get'
            operationId: DaprSubscriptions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprSubscriptionsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprSubscriptions~1{name}?api-version=2024-02-02-preview/get'
            operationId: DaprSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprSubscription
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprSubscriptions~1{name}?api-version=2024-02-02-preview/put'
            operationId: DaprSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DaprSubscription
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1daprSubscriptions~1{name}?api-version=2024-02-02-preview/delete'
            operationId: DaprSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dapr_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/dapr_subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dapr_subscriptions/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dapr_subscriptions/methods/delete'
    builders:
      id: azure.container_apps.builders
      name: builders
      title: builders
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1builders?api-version=2024-02-02-preview/get'
            operationId: Builders_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuilderCollection
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders?api-version=2024-02-02-preview/get'
            operationId: Builders_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuilderCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders~1{builderName}?api-version=2024-02-02-preview/get'
            operationId: Builders_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuilderResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders~1{builderName}?api-version=2024-02-02-preview/put'
            operationId: Builders_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuilderResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders~1{builderName}?api-version=2024-02-02-preview/patch'
            operationId: Builders_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BuilderResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1builders~1{builderName}?api-version=2024-02-02-preview/delete'
            operationId: Builders_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/builders/methods/get'
          - $ref: '#/components/x-stackQL-resources/builders/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/builders/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/builders/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/builders/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/builders/methods/delete'
    managed_environments:
      id: azure.container_apps.managed_environments
      name: managed_environments
      title: managed_environments
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1managedEnvironments?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironments_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironmentsCollection
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironments_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironmentsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironment
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}?api-version=2024-02-02-preview/put'
            operationId: ManagedEnvironments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}?api-version=2024-02-02-preview/delete'
            operationId: ManagedEnvironments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}?api-version=2024-02-02-preview/patch'
            operationId: ManagedEnvironments_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedEnvironment
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_environments/methods/delete'
    certificates:
      id: azure.container_apps.certificates
      name: certificates
      title: certificates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates?api-version=2024-02-02-preview/get'
            operationId: Certificates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CertificateCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/get'
            operationId: Certificates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Certificate
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/put'
            operationId: Certificates_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Certificate
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/delete'
            operationId: Certificates_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/patch'
            operationId: Certificates_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Certificate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/certificates/methods/delete'
    managed_certificates:
      id: azure.container_apps.managed_certificates
      name: managed_certificates
      title: managed_certificates
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}?api-version=2024-02-02-preview/get'
            operationId: ManagedCertificates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedCertificate
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}?api-version=2024-02-02-preview/put'
            operationId: ManagedCertificates_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedCertificate
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}?api-version=2024-02-02-preview/delete'
            operationId: ManagedCertificates_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates~1{managedCertificateName}?api-version=2024-02-02-preview/patch'
            operationId: ManagedCertificates_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedCertificate
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1managedCertificates?api-version=2024-02-02-preview/get'
            operationId: ManagedCertificates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedCertificateCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_certificates/methods/delete'
    namespaces:
      id: azure.container_apps.namespaces
      name: namespaces
      title: namespaces
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1checkNameAvailability?api-version=2024-02-02-preview/post'
            operationId: Namespaces_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    managed_environments_auth_tokens:
      id: azure.container_apps.managed_environments_auth_tokens
      name: managed_environments_auth_tokens
      title: managed_environments_auth_tokens
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1getAuthtoken?api-version=2024-02-02-preview/post'
            operationId: ManagedEnvironmentsAuthToken_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnvironmentAuthToken
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_auth_tokens/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managed_environments_workload_profile_states:
      id: azure.container_apps.managed_environments_workload_profile_states
      name: managed_environments_workload_profile_states
      title: managed_environments_workload_profile_states
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1workloadProfileStates?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentsWorkloadProfileStates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: workloadProfileStatesCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environments_workload_profile_states/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managed_environment_private_endpoint_connections:
      id: azure.container_apps.managed_environment_private_endpoint_connections
      name: managed_environment_private_endpoint_connections
      title: managed_environment_private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1privateEndpointConnections?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentPrivateEndpointConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentPrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-02-02-preview/put'
            operationId: ManagedEnvironmentPrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-02-02-preview/delete'
            operationId: ManagedEnvironmentPrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environment_private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_environment_private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_environment_private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_environment_private_endpoint_connections/methods/delete'
    managed_environment_private_link_resources:
      id: azure.container_apps.managed_environment_private_link_resources
      name: managed_environment_private_link_resources
      title: managed_environment_private_link_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1privateLinkResources?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentPrivateLinkResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environment_private_link_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    auth_configs:
      id: azure.container_apps.auth_configs
      name: auth_configs
      title: auth_configs
      methods:
        list_by_container_app:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsAuthConfigs_ListByContainerApp
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthConfigCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs~1{authConfigName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsAuthConfigs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthConfig
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs~1{authConfigName}?api-version=2024-02-02-preview/put'
            operationId: ContainerAppsAuthConfigs_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AuthConfig
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1authConfigs~1{authConfigName}?api-version=2024-02-02-preview/delete'
            operationId: ContainerAppsAuthConfigs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/get'
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/list_by_container_app'
        insert:
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/auth_configs/methods/delete'
    session_pools:
      id: azure.container_apps.session_pools
      name: session_pools
      title: session_pools
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1sessionPools?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsSessionPools_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionPoolCollection
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1sessionPools?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsSessionPools_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionPoolCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1sessionPools~1{sessionPoolName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsSessionPools_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionPool
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1sessionPools~1{sessionPoolName}?api-version=2024-02-02-preview/put'
            operationId: ContainerAppsSessionPools_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionPool
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1sessionPools~1{sessionPoolName}?api-version=2024-02-02-preview/patch'
            operationId: ContainerAppsSessionPools_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SessionPool
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1sessionPools~1{sessionPoolName}?api-version=2024-02-02-preview/delete'
            operationId: ContainerAppsSessionPools_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/session_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/session_pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/session_pools/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/session_pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/session_pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/session_pools/methods/delete'
    connected_environments_storages:
      id: azure.container_apps.connected_environments_storages
      name: connected_environments_storages
      title: connected_environments_storages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironmentsStorages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironmentStoragesCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages~1{storageName}?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironmentsStorages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironmentStorage
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages~1{storageName}?api-version=2024-02-02-preview/put'
            operationId: ConnectedEnvironmentsStorages_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironmentStorage
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1storages~1{storageName}?api-version=2024-02-02-preview/delete'
            operationId: ConnectedEnvironmentsStorages_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments_storages/methods/delete'
    java_components:
      id: azure.container_apps.java_components
      name: java_components
      title: java_components
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1javaComponents?api-version=2024-02-02-preview/get'
            operationId: JavaComponents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JavaComponentsCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1javaComponents~1{name}?api-version=2024-02-02-preview/get'
            operationId: JavaComponents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JavaComponent
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1javaComponents~1{name}?api-version=2024-02-02-preview/put'
            operationId: JavaComponents_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JavaComponent
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1javaComponents~1{name}?api-version=2024-02-02-preview/patch'
            operationId: JavaComponents_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JavaComponent
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1javaComponents~1{name}?api-version=2024-02-02-preview/delete'
            operationId: JavaComponents_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/java_components/methods/get'
          - $ref: '#/components/x-stackQL-resources/java_components/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/java_components/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/java_components/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/java_components/methods/delete'
    container_apps:
      id: azure.container_apps.container_apps
      name: container_apps
      title: container_apps
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1containerApps?api-version=2024-02-02-preview/get'
            operationId: ContainerApps_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppCollection
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps?api-version=2024-02-02-preview/get'
            operationId: ContainerApps_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}?api-version=2024-02-02-preview/get'
            operationId: ContainerApps_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerApp
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}?api-version=2024-02-02-preview/put'
            operationId: ContainerApps_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerApp
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}?api-version=2024-02-02-preview/delete'
            operationId: ContainerApps_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}?api-version=2024-02-02-preview/patch'
            operationId: ContainerApps_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerApp
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1start?api-version=2024-02-02-preview/post'
            operationId: ContainerApps_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerApp
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1stop?api-version=2024-02-02-preview/post'
            operationId: ContainerApps_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerApp
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/get'
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/container_apps/methods/delete'
    custom_host_name_analyses:
      id: azure.container_apps.custom_host_name_analyses
      name: custom_host_name_analyses
      title: custom_host_name_analyses
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1listCustomHostNameAnalysis?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsCustomHostNameAnalysis_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CustomHostnameAnalysisResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_host_name_analyses/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    secrets:
      id: azure.container_apps.secrets
      name: secrets
      title: secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1listSecrets?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsSecrets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecretsCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    auth_tokens:
      id: azure.container_apps.auth_tokens
      name: auth_tokens
      title: auth_tokens
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1getAuthtoken?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsAuthToken_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppAuthToken
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/auth_tokens/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    patches:
      id: azure.container_apps.patches
      name: patches
      title: patches
      methods:
        list_by_container_app:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1patches?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsPatches_ListByContainerApp
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PatchCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1patches~1{patchName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsPatches_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppsPatchResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1patches~1{patchName}?api-version=2024-02-02-preview/delete'
            operationId: ContainerAppsPatches_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        skip_configure:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1patches~1{patchName}~1skipConfig?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsPatches_SkipConfigure
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        apply:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1patches~1{patchName}~1apply?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsPatches_Apply
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppsPatchResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/patches/methods/get'
          - $ref: '#/components/x-stackQL-resources/patches/methods/list_by_container_app'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/patches/methods/delete'
    connected_environments_certificates:
      id: azure.container_apps.connected_environments_certificates
      name: connected_environments_certificates
      title: connected_environments_certificates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironmentsCertificates_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CertificateCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironmentsCertificates_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Certificate
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/put'
            operationId: ConnectedEnvironmentsCertificates_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Certificate
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/delete'
            operationId: ConnectedEnvironmentsCertificates_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1certificates~1{certificateName}?api-version=2024-02-02-preview/patch'
            operationId: ConnectedEnvironmentsCertificates_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Certificate
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments_certificates/methods/delete'
    logic_apps:
      id: azure.container_apps.logic_apps
      name: logic_apps
      title: logic_apps
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}?api-version=2024-02-02-preview/get'
            operationId: LogicApps_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogicApp
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}?api-version=2024-02-02-preview/put'
            operationId: LogicApps_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LogicApp
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}?api-version=2024-02-02-preview/delete'
            operationId: LogicApps_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deploy_workflow_artifacts:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}~1deployWorkflowArtifacts?api-version=2024-02-02-preview/post'
            operationId: LogicApps_DeployWorkflowArtifacts
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        invoke:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}~1invoke?api-version=2024-02-02-preview/post'
            operationId: LogicApps_Invoke
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Object
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logic_apps/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/logic_apps/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/logic_apps/methods/delete'
    logic_apps_workflows:
      id: azure.container_apps.logic_apps_workflows
      name: logic_apps_workflows
      title: logic_apps_workflows
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}~1workflows?api-version=2024-02-02-preview/get'
            operationId: LogicAppsWorkflows_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowEnvelopeCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}~1workflows~1{workflowName}?api-version=2024-02-02-preview/get'
            operationId: LogicAppsWorkflow_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowEnvelope
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logic_apps_workflows/methods/get'
          - $ref: '#/components/x-stackQL-resources/logic_apps_workflows/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    logic_apps_workflows_connections:
      id: azure.container_apps.logic_apps_workflows_connections
      name: logic_apps_workflows_connections
      title: logic_apps_workflows_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1providers~1Microsoft.App~1logicApps~1{logicAppName}~1listWorkflowsConnections?api-version=2024-02-02-preview/post'
            operationId: LogicAppsWorkflowsConnections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WorkflowEnvelope
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logic_apps_workflows_connections/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    revisions:
      id: azure.container_apps.revisions
      name: revisions
      title: revisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsRevisions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RevisionCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsRevisions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Revision
        activate_revision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1activate?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsRevisions_ActivateRevision
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate_revision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1deactivate?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsRevisions_DeactivateRevision
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart_revision:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1restart?api-version=2024-02-02-preview/post'
            operationId: ContainerAppsRevisions_RestartRevision
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revisions/methods/get'
          - $ref: '#/components/x-stackQL-resources/revisions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    revision_replicas:
      id: azure.container_apps.revision_replicas
      name: revision_replicas
      title: revision_replicas
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1replicas~1{replicaName}?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsRevisionReplicas_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Replica
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1revisions~1{revisionName}~1replicas?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsRevisionReplicas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReplicaCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/revision_replicas/methods/get'
          - $ref: '#/components/x-stackQL-resources/revision_replicas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    app_resiliencies:
      id: azure.container_apps.app_resiliencies
      name: app_resiliencies
      title: app_resiliencies
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{appName}~1resiliencyPolicies~1{name}?api-version=2024-02-02-preview/put'
            operationId: AppResiliency_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppResiliency
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{appName}~1resiliencyPolicies~1{name}?api-version=2024-02-02-preview/patch'
            operationId: AppResiliency_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppResiliency
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{appName}~1resiliencyPolicies~1{name}?api-version=2024-02-02-preview/delete'
            operationId: AppResiliency_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{appName}~1resiliencyPolicies~1{name}?api-version=2024-02-02-preview/get'
            operationId: AppResiliency_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppResiliency
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{appName}~1resiliencyPolicies?api-version=2024-02-02-preview/get'
            operationId: AppResiliency_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AppResiliencyCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_resiliencies/methods/get'
          - $ref: '#/components/x-stackQL-resources/app_resiliencies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/app_resiliencies/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/app_resiliencies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/app_resiliencies/methods/delete'
    connected_environments:
      id: azure.container_apps.connected_environments
      name: connected_environments
      title: connected_environments
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1connectedEnvironments?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironments_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironmentCollection
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironments_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironmentCollection
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}?api-version=2024-02-02-preview/get'
            operationId: ConnectedEnvironments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironment
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}?api-version=2024-02-02-preview/put'
            operationId: ConnectedEnvironments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}?api-version=2024-02-02-preview/delete'
            operationId: ConnectedEnvironments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}?api-version=2024-02-02-preview/patch'
            operationId: ConnectedEnvironments_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ConnectedEnvironment
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1connectedEnvironments~1{connectedEnvironmentName}~1checkNameAvailability?api-version=2024-02-02-preview/post'
            operationId: ConnectedEnvironments_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/connected_environments/methods/delete'
    usages:
      id: azure.container_apps.usages
      name: usages
      title: usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.App~1locations~1{location}~1usages?api-version=2024-02-02-preview/get'
            operationId: Usages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListUsagesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managed_environment_usages:
      id: azure.container_apps.managed_environment_usages
      name: managed_environment_usages
      title: managed_environment_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1managedEnvironments~1{environmentName}~1usages?api-version=2024-02-02-preview/get'
            operationId: ManagedEnvironmentUsages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListUsagesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_environment_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    builds_by_container_apps:
      id: azure.container_apps.builds_by_container_apps
      name: builds_by_container_apps
      title: builds_by_container_apps
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.App~1containerApps~1{containerAppName}~1builds?api-version=2024-02-02-preview/get'
            operationId: ContainerAppsBuildsByContainerApp_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ContainerAppsBuildCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/builds_by_container_apps/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_builds:
      id: azure.container_apps.vw_builds
      name: vw_builds
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.buildStatus') as "build_status",
              JSON_EXTRACT(properties, '$.destinationContainerRegistry') as "destination_container_registry",
              JSON_EXTRACT(properties, '$.configuration') as "configuration",
              JSON_EXTRACT(properties, '$.logStreamEndpoint') as "log_stream_endpoint",
              subscriptionId,
              resourceGroupName,
              containerAppName,
              buildName
              FROM azure.container_apps.builds
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND containerAppName = 'replace-me' AND buildName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.buildStatus') as "build_status",
                json_extract_path_text(properties, '$.destinationContainerRegistry') as "destination_container_registry",
                json_extract_path_text(properties, '$.configuration') as "configuration",
                json_extract_path_text(properties, '$.logStreamEndpoint') as "log_stream_endpoint",
                subscriptionId,
                resourceGroupName,
                containerAppName,
                buildName
                FROM azure.container_apps.builds
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND containerAppName = 'replace-me' AND buildName = 'replace-me';
    vw_builders:
      id: azure.container_apps.vw_builders
      name: vw_builders
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.environmentId') as "environment_id",
              JSON_EXTRACT(properties, '$.containerRegistries') as "container_registries",
              subscriptionId,
              resourceGroupName,
              builderName
              FROM azure.container_apps.builders
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.environmentId') as "environment_id",
                json_extract_path_text(properties, '$.containerRegistries') as "container_registries",
                subscriptionId,
                resourceGroupName,
                builderName
                FROM azure.container_apps.builders
                WHERE subscriptionId = 'replace-me';
    vw_managed_environment_private_endpoint_connections:
      id: azure.container_apps.vw_managed_environment_private_endpoint_connections
      name: vw_managed_environment_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              environmentName,
              privateEndpointConnectionName
              FROM azure.container_apps.managed_environment_private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                environmentName,
                privateEndpointConnectionName
                FROM azure.container_apps.managed_environment_private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
    vw_java_components:
      id: azure.container_apps.vw_java_components
      name: vw_java_components
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.componentType') as "component_type",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.configurations') as "configurations",
              JSON_EXTRACT(properties, '$.serviceBinds') as "service_binds",
              subscriptionId,
              resourceGroupName,
              environmentName,
              name
              FROM azure.container_apps.java_components
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.componentType') as "component_type",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.configurations') as "configurations",
                json_extract_path_text(properties, '$.serviceBinds') as "service_binds",
                subscriptionId,
                resourceGroupName,
                environmentName,
                name
                FROM azure.container_apps.java_components
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
    vw_patches:
      id: azure.container_apps.vw_patches
      name: vw_patches
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.targetEnvironmentId') as "target_environment_id",
              JSON_EXTRACT(properties, '$.targetContainerAppId') as "target_container_app_id",
              JSON_EXTRACT(properties, '$.targetRevisionId') as "target_revision_id",
              JSON_EXTRACT(properties, '$.patchApplyStatus') as "patch_apply_status",
              JSON_EXTRACT(properties, '$.createdAt') as "created_at",
              JSON_EXTRACT(properties, '$.lastModifiedAt') as "last_modified_at",
              JSON_EXTRACT(properties, '$.patchDetails') as "patch_details",
              subscriptionId,
              resourceGroupName,
              containerAppName,
              patchName
              FROM azure.container_apps.patches
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND containerAppName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.targetEnvironmentId') as "target_environment_id",
                json_extract_path_text(properties, '$.targetContainerAppId') as "target_container_app_id",
                json_extract_path_text(properties, '$.targetRevisionId') as "target_revision_id",
                json_extract_path_text(properties, '$.patchApplyStatus') as "patch_apply_status",
                json_extract_path_text(properties, '$.createdAt') as "created_at",
                json_extract_path_text(properties, '$.lastModifiedAt') as "last_modified_at",
                json_extract_path_text(properties, '$.patchDetails') as "patch_details",
                subscriptionId,
                resourceGroupName,
                containerAppName,
                patchName
                FROM azure.container_apps.patches
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND containerAppName = 'replace-me';
    vw_logic_apps:
      id: azure.container_apps.vw_logic_apps
      name: vw_logic_apps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              subscriptionId,
              resourceGroupName,
              containerAppName,
              logicAppName
              FROM azure.container_apps.logic_apps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND containerAppName = 'replace-me' AND logicAppName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                subscriptionId,
                resourceGroupName,
                containerAppName,
                logicAppName
                FROM azure.container_apps.logic_apps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND containerAppName = 'replace-me' AND logicAppName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprComponents
      summary: Get the Dapr Components for a connected environment.
      operationId: ConnectedEnvironmentsDaprComponents_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprComponents
      summary: Get a dapr component.
      operationId: ConnectedEnvironmentsDaprComponents_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - DaprComponents
      summary: Creates or updates a Dapr Component.
      description: Creates or updates a Dapr Component in a connected environment.
      operationId: ConnectedEnvironmentsDaprComponents_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Dapr Component.
        required: true
        x-ms-requestBody-name: daprComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DaprComponent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
    delete:
      tags:
        - DaprComponents
      summary: Delete a Dapr Component.
      description: Delete a Dapr Component from a connected environment.
      operationId: ConnectedEnvironmentsDaprComponents_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Environment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}/listSecrets?api-version=2024-02-02-preview:
    post:
      tags:
        - DaprComponents
      summary: List secrets for a dapr component
      operationId: ConnectedEnvironmentsDaprComponentsSecrets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connected environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ConnectedEnvironmentsDaprComponents_ListSecrets
  /subscriptions/{subscriptionId}/providers/Microsoft.App/getCustomDomainVerificationId?api-version=2024-02-02-preview:
    post:
      tags:
        - Subscriptions
      description: Get the verification id of a subscription used for verifying custom domains
      operationId: CustomDomainVerificationId_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The custom domain verification id has been returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDomainVerificationId'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: GetCustomDomainVerificationId
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsSourceControls
      summary: Get the Container App SourceControls in a given resource group.
      operationId: ContainerAppsSourceControls_ListByContainerApp
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControlCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{sourceControlName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsSourceControls
      summary: Get a SourceControl of a Container App.
      operationId: ContainerAppsSourceControls_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: sourceControlName
          in: path
          description: Name of the Container App SourceControl.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ContainerAppsSourceControls
      summary: Create or update the SourceControl for a Container App.
      description: Create or update the SourceControl for a Container App.
      operationId: ContainerAppsSourceControls_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: sourceControlName
          in: path
          description: Name of the Container App SourceControl.
          required: true
          schema:
            type: string
        - name: x-ms-github-auxiliary
          in: header
          description: Github personal access token used for SourceControl.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties used to create a Container App SourceControl
        required: true
        x-ms-requestBody-name: sourceControlEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceControl'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceControl'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - ContainerAppsSourceControls
      summary: Delete a Container App SourceControl.
      description: Delete a Container App SourceControl.
      operationId: ContainerAppsSourceControls_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: sourceControlName
          in: path
          description: Name of the Container App SourceControl.
          required: true
          schema:
            type: string
        - name: x-ms-github-auxiliary
          in: header
          description: Github personal access token used for SourceControl.
          required: true
          schema:
            type: string
        - name: ignoreWorkflowDeletionFailure
          in: query
          description: Ignore Workflow Deletion Failure.
          required: false
          schema:
            type: boolean
        - name: deleteWorkflow
          in: query
          description: Delete workflow.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Container App SourceControl deleted successfully.
        '202':
          description: Delete operation is in progress.
        '204':
          description: Container App SourceControl does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/providers/Microsoft.App/functions/{functionAppName}/invoke?api-version=2024-02-02-preview:
    post:
      tags:
        - FunctionsExtension
      summary: Proxies a Functions host call to the function app backed by the container app.
      operationId: FunctionsExtension_InvokeFunctionsHost
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision, the parent resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: functionAppName
          in: path
          description: Name of the Function App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Functions host call response.
          content:
            application/json:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/billingMeters?api-version=2024-02-02-preview:
    get:
      tags:
        - BillingMeters
      summary: Get billing meters by location.
      description: Get all billingMeters for a location.
      operationId: BillingMeters_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingMeterCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/jobs?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
      summary: Get the Container Apps Jobs in a given subscription.
      operationId: Jobs_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
      summary: Get the Container Apps Jobs in a given resource group.
      operationId: Jobs_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
      summary: Get the properties of a Container Apps Job.
      operationId: Jobs_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - Jobs
      summary: Create or Update a Container Apps Job.
      description: Create or Update a Container Apps Job.
      operationId: Jobs_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      requestBody:
        description: Properties used to create a container apps job
        required: true
        x-ms-requestBody-name: JobEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: No change performed on the Container Apps Job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '201':
          description: Container Apps Job create has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - Jobs
      summary: Delete a Container Apps Job.
      description: Delete a Container Apps Job.
      operationId: Jobs_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: Container Apps Job deleted successfully.
        '202':
          description: Delete operation is in progress.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Container Apps Job does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - Jobs
      summary: Update properties of a Container Apps Job
      description: Patches a Container Apps Job using JSON Merge Patch
      operationId: Jobs_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      requestBody:
        description: Properties used to create a container apps job
        required: true
        x-ms-requestBody-name: JobEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPatchProperties'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '202':
          description: Patch operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/start?api-version=2024-02-02-preview:
    post:
      tags:
        - Jobs
      summary: Start a Container Apps Job
      operationId: Jobs_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      requestBody:
        description: Properties used to start a job execution.
        required: false
        x-ms-requestBody-name: template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobExecutionTemplate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionBase'
        '202':
          description: OK
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}/stop?api-version=2024-02-02-preview:
    post:
      tags:
        - Jobs
      summary: Terminates execution of a running container apps job
      operationId: Jobs_StopExecution
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - $ref: '#/components/parameters/JobExecutionNameParameter'
      responses:
        '200':
          description: Container Apps Jobs terminated successfully.
        '202':
          description: OK
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/stop?api-version=2024-02-02-preview:
    post:
      tags:
        - Jobs
      summary: Terminates execution of a running container apps job
      operationId: Jobs_StopMultipleExecutions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: List of all the job executions that were requested to be stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppJobExecutions'
        '202':
          description: OK
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
      summary: Get a Container Apps Job's executions
      operationId: JobsExecutions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppJobExecutions'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
      summary: Get details of a single job execution
      operationId: Operations_JobExecution
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - $ref: '#/components/parameters/JobExecutionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: JobExecution
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/listSecrets?api-version=2024-02-02-preview:
    post:
      tags:
        - Jobs
      summary: List secrets for a container apps job
      operationId: JobsSecrets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobSecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: Jobs_ListSecrets
  /providers/Microsoft.App/operations?api-version=2024-02-02-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available RP operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableOperations'
        default:
          description: Resource Provider error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/resiliencyPolicies?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprComponentResiliencyPolicies
      summary: Get the resiliency policies for a Dapr component.
      operationId: DaprComponentResiliencyPolicies_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentResiliencyPoliciesCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/resiliencyPolicies/{name}?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprComponentResiliencyPolicies
      summary: Get a Dapr component resiliency policy.
      operationId: DaprComponentResiliencyPolicies_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Dapr Component Resiliency Policy.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentResiliencyPolicy'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - DaprComponentResiliencyPolicies
      summary: Creates or updates a Dapr component resiliency policy.
      description: Creates or updates a resiliency policy for a Dapr component.
      operationId: DaprComponentResiliencyPolicies_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Dapr Component Resiliency Policy.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Dapr Component Resiliency Policy.
        required: true
        x-ms-requestBody-name: daprComponentResiliencyPolicyEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DaprComponentResiliencyPolicy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentResiliencyPolicy'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentResiliencyPolicy'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
    delete:
      tags:
        - DaprComponentResiliencyPolicies
      summary: Delete a Dapr component resiliency policy.
      description: Delete a resiliency policy for a Dapr component.
      operationId: DaprComponentResiliencyPolicies_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Dapr Component Resiliency Policy.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Dapr component does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/builders/{builderName}/builds?api-version=2024-02-02-preview:
    get:
      tags:
        - Builds
      operationId: BuildsByBuilderResource_List
      description: List BuildResource resources by BuilderResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/builders/{builderName}/builds/{buildName}?api-version=2024-02-02-preview:
    get:
      tags:
        - Builds
      operationId: Builds_Get
      description: Get a BuildResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
        - $ref: '#/components/parameters/BuildNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildResource'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Builds
      operationId: Builds_CreateOrUpdate
      description: Create a BuildResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
        - $ref: '#/components/parameters/BuildNameParameter'
      requestBody:
        description: Resource create or update parameters.
        required: true
        x-ms-requestBody-name: buildEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildResource'
      responses:
        '200':
          description: ARM create or update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildResource'
        '201':
          description: ARM create or update operation has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      tags:
        - Builds
      operationId: Builds_Delete
      description: Delete a BuildResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
        - $ref: '#/components/parameters/BuildNameParameter'
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource deleted successfully.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/builders/{builderName}/builds/{buildName}/listAuthToken?api-version=2024-02-02-preview:
    post:
      tags:
        - Builds
      operationId: BuildAuthToken_List
      description: Gets the token used to connect to the endpoint where source code can be uploaded for a build.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
        - $ref: '#/components/parameters/BuildNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildToken'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprComponents
      summary: Get the Dapr Components for a managed environment.
      operationId: DaprComponents_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprComponents
      summary: Get a dapr component.
      operationId: DaprComponents_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - DaprComponents
      summary: Creates or updates a Dapr Component.
      description: Creates or updates a Dapr Component in a Managed Environment.
      operationId: DaprComponents_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Dapr Component.
        required: true
        x-ms-requestBody-name: daprComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DaprComponent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
    delete:
      tags:
        - DaprComponents
      summary: Delete a Dapr Component.
      description: Delete a Dapr Component from a Managed Environment.
      operationId: DaprComponents_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Environment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/listSecrets?api-version=2024-02-02-preview:
    post:
      tags:
        - DaprComponents
      summary: List secrets for a dapr component
      operationId: DaprComponentsSecrets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: componentName
          in: path
          description: Name of the Dapr Component.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: DaprComponents_ListSecrets
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironmentsStorages
      summary: Get all storages for a managedEnvironment.
      description: Get all storages for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentStoragesCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages/{storageName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironmentsStorages
      summary: Get storage for a managedEnvironment.
      description: Get storage for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironmentsStorages
      summary: Create or update storage for a managedEnvironment.
      description: Create or update storage for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of storage.
        required: true
        x-ms-requestBody-name: storageEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedEnvironmentStorage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ManagedEnvironmentsStorages
      summary: Delete storage for a managedEnvironment.
      description: Delete storage for a managedEnvironment.
      operationId: ManagedEnvironmentsStorages_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: Storage does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/dotNetComponents?api-version=2024-02-02-preview:
    get:
      tags:
        - DotNetComponents
      summary: Get the .NET Components for a managed environment.
      operationId: DotNetComponents_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DotNetComponentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/dotNetComponents/{name}?api-version=2024-02-02-preview:
    get:
      tags:
        - DotNetComponents
      summary: Get a .NET Component.
      operationId: DotNetComponents_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the .NET Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DotNetComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - DotNetComponents
      summary: Creates or updates a .NET Component.
      description: Creates or updates a .NET Component in a Managed Environment.
      operationId: DotNetComponents_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the .NET Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: Configuration details of the .NET Component.
        required: true
        x-ms-requestBody-name: dotNetComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DotNetComponent'
      responses:
        '200':
          description: No change performed on the .NET Component.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DotNetComponent'
        '201':
          description: .NET Component create or update has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DotNetComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - DotNetComponents
      summary: Update properties of a .NET Component
      description: Patches a .NET Component using JSON Merge Patch
      operationId: DotNetComponents_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the .NET Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: Configuration details of the .NET Component.
        required: true
        x-ms-requestBody-name: dotNetComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DotNetComponent'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DotNetComponent'
        '202':
          description: Patch operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - DotNetComponents
      summary: Delete a .NET Component.
      description: Delete a .NET Component.
      operationId: DotNetComponents_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the .NET Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '202':
          description: Delete operation is in progress.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: .NET Component does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/availableManagedEnvironmentsWorkloadProfileTypes?api-version=2024-02-02-preview:
    get:
      tags:
        - AvailableWorkloadProfiles
      summary: Get available workload profiles by location.
      description: Get all available workload profiles for a location.
      operationId: AvailableWorkloadProfiles_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableWorkloadProfilesCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get the list of diagnostics for a given Container App.
      operationId: ContainerAppsDiagnosticsDetectors_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App for which detector info is needed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ContainerAppsDiagnostics_ListDetectors
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors/{detectorName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get a diagnostics result of a Container App.
      operationId: ContainerAppsDiagnosticsDetector_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: detectorName
          in: path
          description: Name of the Container App Detector.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostics'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerAppsDiagnostics_GetDetector
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get the Revisions for a given Container App.
      operationId: ContainerAppsDiagnosticsRevisions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App for which Revisions are needed.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Revision'
      x-ms-original-operationId: ContainerAppsDiagnostics_ListRevisions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/{revisionName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get a revision of a Container App.
      operationId: ContainerAppsDiagnosticsRevision_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerAppsDiagnostics_GetRevision
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/rootApi/?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
        - Diagnostics
      summary: Get the properties of a Container App.
      operationId: ContainerAppsDiagnosticsRoot_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '404':
          description: Not found.
          x-ms-error-response: true
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerAppsDiagnostics_GetRoot
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - Diagnostics
      summary: Get the list of diagnostics for a given Managed Environment.
      description: Get the list of diagnostics for a Managed Environment used to host container apps.
      operationId: ManagedEnvironmentDiagnosticsDetectors_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ManagedEnvironmentDiagnostics_ListDetectors
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors/{detectorName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - Diagnostics
      summary: Get the diagnostics data for a given Managed Environment.
      description: Get the diagnostics data for a Managed Environment used to host container apps.
      operationId: ManagedEnvironmentDiagnosticsDetector_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: detectorName
          in: path
          description: Name of the Managed Environment detector.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostics'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ManagedEnvironmentDiagnostics_GetDetector
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectorProperties/rootApi/?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - Diagnostics
      summary: Get the properties of a Managed Environment.
      description: Get the properties of a Managed Environment used to host container apps.
      operationId: ManagedEnvironmentsDiagnosticsRoot_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ManagedEnvironmentsDiagnostics_GetRoot
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
        - Diagnostics
      summary: Get the list of diagnostics for a given Container App Job.
      description: Get the list of diagnostics for a Container App Job.
      operationId: JobsDetectors_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Jobs_ListDetectors
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors/{detectorName}?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
        - Diagnostics
      summary: Get the diagnostics data for a given Container App Job.
      description: Get the diagnostics data for a Container App Job.
      operationId: JobsDetector_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - name: detectorName
          in: path
          description: Name of the Container App Job detector.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diagnostics'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: Jobs_GetDetector
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectorProperties/{apiName}?api-version=2024-02-02-preview:
    get:
      tags:
        - Jobs
        - Diagnostics
      summary: Get the properties for a given Container App Job.
      description: Get the properties of a Container App Job.
      operationId: Jobs_ProxyGet
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
        - name: apiName
          in: path
          description: Proxy API Name for Container App Job.
          required: true
          schema:
            enum:
              - rootApi
            pattern: ^[-\w\._]+$
            x-ms-enum:
              name: ApiName
              modelAsString: false
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprSubscriptions?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprSubscriptions
      summary: Get the Dapr subscriptions for a managed environment.
      operationId: DaprSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSubscriptionsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprSubscriptions/{name}?api-version=2024-02-02-preview:
    get:
      tags:
        - DaprSubscriptions
      summary: Get a dapr subscription.
      operationId: DaprSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Dapr subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSubscription'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - DaprSubscriptions
      summary: Creates or updates a Dapr subscription.
      description: Creates or updates a Dapr subscription in a Managed Environment.
      operationId: DaprSubscriptions_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Dapr subscription.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Dapr subscription.
        required: true
        x-ms-requestBody-name: daprSubscriptionEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DaprSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSubscription'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DaprSubscription'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
    delete:
      tags:
        - DaprSubscriptions
      summary: Delete a Dapr subscription.
      description: Delete a Dapr subscription from a Managed Environment.
      operationId: DaprSubscriptions_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Dapr subscription.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Environment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/providers/Microsoft.App/builders?api-version=2024-02-02-preview:
    get:
      tags:
        - Builders
      operationId: Builders_ListBySubscription
      description: List BuilderResource resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/builders?api-version=2024-02-02-preview:
    get:
      tags:
        - Builders
      operationId: Builders_ListByResourceGroup
      description: List BuilderResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/builders/{builderName}?api-version=2024-02-02-preview:
    get:
      tags:
        - Builders
      operationId: Builders_Get
      description: Get a BuilderResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderResource'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Builders
      operationId: Builders_CreateOrUpdate
      description: Create or update a BuilderResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: builderEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuilderResource'
      responses:
        '200':
          description: ARM create or update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderResource'
        '201':
          description: ARM create or update operation has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      tags:
        - Builders
      operationId: Builders_Update
      description: Update a BuilderResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: builderEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuilderResourceUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuilderResource'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      tags:
        - Builders
      operationId: Builders_Delete
      description: Delete a BuilderResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/BuilderNameParameter'
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource deleted successfully.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
      summary: Get all Environments for a subscription.
      description: Get all Managed Environments for a subscription.
      operationId: ManagedEnvironments_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
      summary: Get all the Environments in a resource group.
      description: Get all the Managed Environments in a resource group.
      operationId: ManagedEnvironments_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironmentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
      summary: Get the properties of a Managed Environment.
      description: Get the properties of a Managed Environment used to host container apps.
      operationId: ManagedEnvironments_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironments
      summary: Creates or updates a Managed Environment.
      description: Creates or updates a Managed Environment used to host container apps.
      operationId: ManagedEnvironments_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Environment.
        required: true
        x-ms-requestBody-name: environmentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - ManagedEnvironments
      summary: Delete a Managed Environment.
      description: Delete a Managed Environment if it does not have any container apps.
      operationId: ManagedEnvironments_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '202':
          description: Delete operation is in progress
        '204':
          description: Environment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - ManagedEnvironments
      summary: Update Managed Environment's properties.
      description: Patches a Managed Environment using JSON Merge Patch
      operationId: ManagedEnvironments_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the Environment.
        required: true
        x-ms-requestBody-name: environmentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedEnvironment'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedEnvironment'
        '202':
          description: Patch operation is in progress.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Get the Certificates in a given managed environment.
      operationId: Certificates_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates/{certificateName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Get the specified Certificate.
      operationId: Certificates_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Create or Update a Certificate.
      operationId: Certificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Certificate to be created or updated
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Deletes the specified Certificate.
      operationId: Certificates_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Certificate does not exist
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ManagedEnvironments
        - Certificates
      summary: Update properties of a certificate
      description: Patches a certificate. Currently only patching of tags is supported
      operationId: Certificates_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a certificate that need to be updated
        required: true
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePatch'
      responses:
        '200':
          description: Certificate updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates/{managedCertificateName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Get the specified Managed Certificate.
      operationId: ManagedCertificates_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Create or Update a Managed Certificate.
      operationId: ManagedCertificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Managed Certificate to be created or updated
        x-ms-requestBody-name: managedCertificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedCertificate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        '400':
          description: Bad Request.
          x-ms-error-response: true
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Deletes the specified Managed Certificate.
      operationId: ManagedCertificates_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Certificate does not exist
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Update tags of a managed certificate
      description: Patches a managed certificate. Oly patching of tags is supported
      operationId: ManagedCertificates_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
        - name: managedCertificateName
          in: path
          description: Name of the Managed Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a managed certificate that need to be updated
        required: true
        x-ms-requestBody-name: managedCertificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedCertificatePatch'
      responses:
        '200':
          description: Managed Certificate updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificate'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - ManagedCertificates
      summary: Get the Managed Certificates in a given managed environment.
      operationId: ManagedCertificates_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCertificateCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/checkNameAvailability?api-version=2024-02-02-preview:
    post:
      tags:
        - ManagedEnvironments
      summary: Checks the resource name availability.
      description: Checks if resource name is available.
      operationId: Namespaces_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: The check name availability request.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/getAuthtoken?api-version=2024-02-02-preview:
    post:
      tags:
        - ManagedEnvironments
      summary: Get auth token for a managed environment
      description: Checks if resource name is available.
      operationId: ManagedEnvironmentsAuthToken_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentAuthToken'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ManagedEnvironments_GetAuthToken
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/workloadProfileStates?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
      summary: Get all workload Profile States for a Managed Environment..
      description: Get all workload Profile States for a Managed Environment.
      operationId: ManagedEnvironmentsWorkloadProfileStates_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workloadProfileStatesCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ManagedEnvironments_ListWorkloadProfileStates
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/privateEndpointConnections?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - PrivateEndpointConnections
      summary: List private endpoint connections for a given managed environment.
      operationId: ManagedEnvironmentPrivateEndpointConnections_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - PrivateEndpointConnections
      summary: Get a private endpoint connection for a given managed environment.
      operationId: ManagedEnvironmentPrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - ManagedEnvironments
        - PrivateEndpointConnections
      summary: Update the state of a private endpoint connection for a given managed environment.
      operationId: ManagedEnvironmentPrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      requestBody:
        description: The resource of private endpoint and its properties
        required: true
        x-ms-requestBody-name: privateEndpointConnectionEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - ManagedEnvironments
        - PrivateEndpointConnections
      summary: Delete a private endpoint connection for a given managed environment.
      operationId: ManagedEnvironmentPrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - $ref: '#/components/parameters/PrivateEndpointConnectionName'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: No content. Already deleted.
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/privateLinkResources?api-version=2024-02-02-preview:
    get:
      tags:
        - ManagedEnvironments
        - PrivateLinkResources
      summary: List private link resources for a given managed environment.
      operationId: ManagedEnvironmentPrivateLinkResources_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsAuthConfigs
      summary: Get the Container App AuthConfigs in a given resource group.
      operationId: ContainerAppsAuthConfigs_ListByContainerApp
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfigCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{authConfigName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsAuthConfigs
      summary: Get a AuthConfig of a Container App.
      operationId: ContainerAppsAuthConfigs_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: authConfigName
          in: path
          description: Name of the Container App AuthConfig.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfig'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ContainerAppsAuthConfigs
      summary: Create or update the AuthConfig for a Container App.
      description: Create or update the AuthConfig for a Container App.
      operationId: ContainerAppsAuthConfigs_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: authConfigName
          in: path
          description: Name of the Container App AuthConfig.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties used to create a Container App AuthConfig
        required: true
        x-ms-requestBody-name: authConfigEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthConfig'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthConfig'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ContainerAppsAuthConfigs
      summary: Delete a Container App AuthConfig.
      description: Delete a Container App AuthConfig.
      operationId: ContainerAppsAuthConfigs_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: authConfigName
          in: path
          description: Name of the Container App AuthConfig.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App deleted successfully.
        '204':
          description: Container App AuthConfig does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/sessionPools?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsSessionPools
      summary: Get the session pools in a given subscription.
      operationId: ContainerAppsSessionPools_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPoolCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/sessionPools?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsSessionPools
      summary: Get the session pools in a given resource group of a subscription.
      operationId: ContainerAppsSessionPools_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPoolCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/sessionPools/{sessionPoolName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsSessionPools
      summary: Get the properties of a session pool.
      operationId: ContainerAppsSessionPools_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SessionPoolNameParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPool'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ContainerAppsSessionPools
      summary: Create or update a session pool.
      description: Create or update a session pool with the given properties.
      operationId: ContainerAppsSessionPools_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SessionPoolNameParameter'
      requestBody:
        description: Properties used to create a session pool
        required: true
        x-ms-requestBody-name: sessionPoolEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionPool'
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPool'
        '201':
          description: Session pool creation has started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPool'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - ContainerAppsSessionPools
      summary: Update properties of a session pool
      description: Patches a session pool using JSON merge patch
      operationId: ContainerAppsSessionPools_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SessionPoolNameParameter'
      requestBody:
        description: Properties used to create a session pool
        required: true
        x-ms-requestBody-name: sessionPoolEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionPoolUpdatableProperties'
      responses:
        '200':
          description: Update succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPool'
        '202':
          description: Session pool update has been started.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ContainerAppsSessionPools
      summary: Delete a session pool.
      description: Delete the session pool with the given name.
      operationId: ContainerAppsSessionPools_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SessionPoolNameParameter'
      responses:
        '202':
          description: Session pool delete has been started.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Session pool does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages?api-version=2024-02-02-preview:
    get:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Get all storages for a connectedEnvironment.
      description: Get all storages for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentStoragesCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages/{storageName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Get storage for a connectedEnvironment.
      description: Get storage for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Create or update storage for a connectedEnvironment.
      description: Create or update storage for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of storage.
        required: true
        x-ms-requestBody-name: storageEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedEnvironmentStorage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentStorage'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ConnectedEnvironmentsStorages
      summary: Delete storage for a connectedEnvironment.
      description: Delete storage for a connectedEnvironment.
      operationId: ConnectedEnvironmentsStorages_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            type: string
        - name: storageName
          in: path
          description: Name of the storage.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '204':
          description: Storage does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/javaComponents?api-version=2024-02-02-preview:
    get:
      tags:
        - JavaComponents
      summary: Get the Java Components for a managed environment.
      operationId: JavaComponents_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JavaComponentsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/javaComponents/{name}?api-version=2024-02-02-preview:
    get:
      tags:
        - JavaComponents
      summary: Get a Java Component.
      operationId: JavaComponents_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Java Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JavaComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - JavaComponents
      summary: Creates or updates a Java Component.
      description: Creates or updates a Java Component in a Managed Environment.
      operationId: JavaComponents_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Java Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: Configuration details of the Java Component.
        required: true
        x-ms-requestBody-name: javaComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JavaComponent'
      responses:
        '200':
          description: No change performed on the Java Component.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JavaComponent'
        '201':
          description: Java Component create or update has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JavaComponent'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    patch:
      tags:
        - JavaComponents
      summary: Update properties of a Java Component
      description: Patches a Java Component using JSON Merge Patch
      operationId: JavaComponents_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Java Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: Configuration details of the Java Component.
        required: true
        x-ms-requestBody-name: javaComponentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JavaComponent'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JavaComponent'
        '202':
          description: Patch operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - JavaComponents
      summary: Delete a Java Component.
      description: Delete a Java Component.
      operationId: JavaComponents_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the Java Component.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '202':
          description: Delete operation is in progress.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Java Component does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
      summary: Get the Container Apps in a given subscription.
      operationId: ContainerApps_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
      summary: Get the Container Apps in a given resource group.
      operationId: ContainerApps_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerApps
      summary: Get the properties of a Container App.
      operationId: ContainerApps_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '404':
          description: Not found.
          x-ms-error-response: true
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ContainerApps
      summary: Create or update a Container App.
      description: Create or update a Container App.
      operationId: ContainerApps_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties used to create a container app
        required: true
        x-ms-requestBody-name: containerAppEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerApp'
      responses:
        '200':
          description: No change performed on the Container App.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '201':
          description: Container App create or update has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - ContainerApps
      summary: Delete a Container App.
      description: Delete a Container App.
      operationId: ContainerApps_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App deleted successfully.
        '202':
          description: Delete operation is in progress.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Container App does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    patch:
      tags:
        - ContainerApps
      summary: Update properties of a Container App
      description: Patches a Container App using JSON Merge Patch
      operationId: ContainerApps_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a Container App that need to be updated
        required: true
        x-ms-requestBody-name: containerAppEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerApp'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '202':
          description: Patch operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listCustomHostNameAnalysis?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerApps
      summary: Analyzes a custom hostname for a Container App
      operationId: ContainerAppsCustomHostNameAnalysis_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: customHostname
          in: query
          description: Custom hostname.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomHostnameAnalysisResult'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerApps_ListCustomHostNameAnalysis
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listSecrets?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerApps
      summary: List secrets for a container app
      operationId: ContainerAppsSecrets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerApps_ListSecrets
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/getAuthtoken?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerApps
      summary: Get auth token for a container app
      operationId: ContainerAppsAuthToken_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppAuthToken'
        '404':
          description: Not found.
          x-ms-error-response: true
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerApps_GetAuthToken
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/start?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerApps
      summary: Start a container app
      operationId: ContainerApps_Start
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Container App started successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '202':
          description: Start operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/stop?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerApps
      summary: Stop a container app
      operationId: ContainerApps_Stop
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Container App stopped successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerApp'
        '202':
          description: Stop operation is in progress.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/patches?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsPatches
      operationId: ContainerAppsPatches_ListByContainerApp
      description: List Container Apps Patch resources by ContainerApp.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation. For example, $filter=properties/patchApplyStatus eq 'Succeeded'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/ContainerAppsContainerAppsPatchResource'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/patches/{patchName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsPatches
      operationId: ContainerAppsPatches_Get
      description: Get details for specific Container Apps Patch by patch name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
        - $ref: '#/components/parameters/ContainerAppsPatchNameParameter'
      responses:
        '200':
          description: Patch information retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppsPatchResource'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ContainerAppsPatches
      operationId: ContainerAppsPatches_Delete
      description: Delete specific Container Apps Patch by patch name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
        - $ref: '#/components/parameters/ContainerAppsPatchNameParameter'
      responses:
        '202':
          description: Patch deletion has been started.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Patch does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/patches/{patchName}/skipConfig?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerAppsPatches
      operationId: ContainerAppsPatches_SkipConfigure
      description: Configure the Container Apps Patch skip option by patch name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
        - $ref: '#/components/parameters/ContainerAppsPatchNameParameter'
      requestBody:
        description: Configure patcher to skip a patch or not.
        required: true
        x-ms-requestBody-name: patchSkipConfig
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchSkipConfig'
      responses:
        '202':
          description: Updating patch skipping detail. Updating status tracked by location header.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/patches/{patchName}/apply?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerAppsPatches
      operationId: ContainerAppsPatches_Apply
      description: Apply a Container Apps Patch resource with patch name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
        - $ref: '#/components/parameters/ContainerAppsPatchNameParameter'
      responses:
        '200':
          description: Patching operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppsPatchResource'
        '202':
          description: Patching operation has been started.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
            Location:
              schema:
                type: string
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates?api-version=2024-02-02-preview:
    get:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Get the Certificates in a given connected environment.
      operationId: ConnectedEnvironmentsCertificates_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCollection'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates/{certificateName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Get the specified Certificate.
      operationId: ConnectedEnvironmentsCertificates_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Create or Update a Certificate.
      operationId: ConnectedEnvironmentsCertificates_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Certificate to be created or updated
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Deletes the specified Certificate.
      operationId: ConnectedEnvironmentsCertificates_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Certificate does not exist
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ConnectedEnvironments
        - Certificates
      summary: Update properties of a certificate
      description: Patches a certificate. Currently only patching of tags is supported
      operationId: ConnectedEnvironmentsCertificates_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Connected Environment.
          required: true
          schema:
            type: string
        - name: certificateName
          in: path
          description: Name of the Certificate.
          required: true
          schema:
            type: string
      requestBody:
        description: Properties of a certificate that need to be updated
        required: true
        x-ms-requestBody-name: certificateEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificatePatch'
      responses:
        '200':
          description: Certificate updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}?api-version=2024-02-02-preview:
    get:
      tags:
        - LogicApps
      summary: Gets a logic app extension resource.
      operationId: LogicApps_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the Logic App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicApp'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      operationId: LogicApps_CreateOrUpdate
      tags:
        - LogicApps
      description: Create or update a Logic App extension resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the Logic App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: Logic app resource properties.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogicApp'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicApp'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicApp'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      operationId: LogicApps_Delete
      tags:
        - LogicApps
      description: Deletes a Logic App extension resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the Logic App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Delete operation completed
        '204':
          description: Extension resource does not exist
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/workflows?api-version=2024-02-02-preview:
    get:
      tags:
        - LogicApps
      summary: List the workflows for a logic app.
      operationId: LogicAppsWorkflows_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the Logic App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Workflow information returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowEnvelopeCollection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: LogicApps_ListWorkflows
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/workflows/{workflowName}?api-version=2024-02-02-preview:
    get:
      tags:
        - LogicApps
      summary: Get workflow information by its name
      operationId: LogicAppsWorkflow_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the Logic App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: workflowName
          in: path
          description: Workflow name.
          required: true
          schema:
            pattern: ^[a-z][a-z0-9]*$
            minLength: 3
            maxLength: 63
            type: string
      responses:
        '200':
          description: Workflow information returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowEnvelope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: LogicApps_GetWorkflow
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/deployWorkflowArtifacts?api-version=2024-02-02-preview:
    post:
      tags:
        - LogicApps
      description: Creates or updates the artifacts for the logic app
      operationId: LogicApps_DeployWorkflowArtifacts
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the Logic App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: Application settings and files of the workflow.
        required: false
        x-ms-requestBody-name: workflowArtifacts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowArtifacts'
        x-ms-secret: true
      responses:
        '200':
          description: Artifacts deployed.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/listWorkflowsConnections?api-version=2024-02-02-preview:
    post:
      tags:
        - LogicApps
      summary: Gets logic app's connections.
      operationId: LogicAppsWorkflowsConnections_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the Logic App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Connections information returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowEnvelope'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: LogicApps_ListWorkflowsConnections
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/invoke?api-version=2024-02-02-preview:
    post:
      tags:
        - LogicApps
      summary: Proxies a the API call to the logic app backed by the container app.
      operationId: LogicApps_Invoke
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: logicAppName
          in: path
          description: Name of the LogicApp App, the extension resource.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: x-ms-logicApps-proxy-path
          in: header
          description: The proxy path for the API call
          required: true
          schema:
            type: string
        - name: x-ms-logicApps-proxy-method
          in: header
          description: The proxy method for the API call
          required: true
          schema:
            enum:
              - GET
              - POST
            x-ms-enum:
              name: LogicAppsProxyMethod
              modelAsString: true
            type: string
      responses:
        '200':
          description: Logic App call response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsRevisions
      summary: Get the Revisions for a given Container App.
      operationId: ContainerAppsRevisions_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App for which Revisions are needed.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevisionCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Revision'
      x-ms-original-operationId: ContainerAppsRevisions_ListRevisions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsRevisions
      summary: Get a revision of a Container App.
      operationId: ContainerAppsRevisions_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerAppsRevisions_GetRevision
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/activate?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerAppsRevisions
      summary: Activates a revision for a Container App
      operationId: ContainerAppsRevisions_ActivateRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App revision was activated
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/deactivate?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerAppsRevisions
      summary: Deactivates a revision for a Container App
      operationId: ContainerAppsRevisions_DeactivateRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App revision was deactivated
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{replicaName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsRevisionReplicas
      summary: Get a replica for a Container App Revision.
      operationId: ContainerAppsRevisionReplicas_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
        - name: replicaName
          in: path
          description: Name of the Container App Revision Replica.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Replica'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerAppsRevisionReplicas_GetReplica
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsRevisionReplicas
      summary: List replicas for a Container App Revision.
      operationId: ContainerAppsRevisionReplicas_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplicaCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-original-operationId: ContainerAppsRevisionReplicas_ListReplicas
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/restart?api-version=2024-02-02-preview:
    post:
      tags:
        - ContainerAppsRevisions
      summary: Restarts a revision for a Container App
      operationId: ContainerAppsRevisions_RestartRevision
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: containerAppName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            type: string
        - name: revisionName
          in: path
          description: Name of the Container App Revision.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container App revision was restarted
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{appName}/resiliencyPolicies/{name}?api-version=2024-02-02-preview:
    put:
      tags:
        - AppResiliency
      summary: Create or update an application's resiliency policy.
      description: Create or update container app resiliency policy.
      operationId: AppResiliency_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: appName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the resiliency policy.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: The resiliency policy to create or update.
        required: true
        x-ms-requestBody-name: resiliencyEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppResiliency'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResiliency'
        '201':
          description: App Resiliency create or update has been started.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResiliency'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - AppResiliency
      summary: Update an application's resiliency policy.
      description: Update container app resiliency policy.
      operationId: AppResiliency_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: appName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the resiliency policy.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      requestBody:
        description: The resiliency policy to update.
        required: true
        x-ms-requestBody-name: resiliencyEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppResiliency'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResiliency'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - AppResiliency
      summary: Delete an application's resiliency policy.
      description: Delete container app resiliency policy.
      operationId: AppResiliency_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: appName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the resiliency policy.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: Resiliency policy deleted successfully.
        '204':
          description: Resiliency policy does not exist.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    get:
      tags:
        - AppResiliency
      summary: Get an application's resiliency policy.
      description: Get container app resiliency policy.
      operationId: AppResiliency_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: appName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
        - name: name
          in: path
          description: Name of the resiliency policy.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResiliency'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{appName}/resiliencyPolicies?api-version=2024-02-02-preview:
    get:
      tags:
        - AppResiliency
      summary: List an application's resiliency policies.
      description: List container app resiliency policies.
      operationId: AppResiliency_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: appName
          in: path
          description: Name of the Container App.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResiliencyCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.App/connectedEnvironments?api-version=2024-02-02-preview:
    get:
      tags:
        - ConnectedEnvironments
      summary: Get all connectedEnvironments for a subscription.
      description: Get all connectedEnvironments for a subscription.
      operationId: ConnectedEnvironments_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments?api-version=2024-02-02-preview:
    get:
      tags:
        - ConnectedEnvironments
      operationId: ConnectedEnvironments_ListByResourceGroup
      description: Get all connectedEnvironments in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironmentCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ConnectedEnvironments
      operationId: ConnectedEnvironments_Get
      description: Get the properties of an connectedEnvironment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    put:
      tags:
        - ConnectedEnvironments
      description: Creates or updates an connectedEnvironment.
      operationId: ConnectedEnvironments_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      requestBody:
        description: Configuration details of the connectedEnvironment.
        required: true
        x-ms-requestBody-name: environmentEnvelope
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectedEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    delete:
      tags:
        - ConnectedEnvironments
      summary: Delete an connectedEnvironment.
      description: Delete an connectedEnvironment.
      operationId: ConnectedEnvironments_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delete operation completed
        '202':
          description: Delete operation is accepted
          headers:
            Location:
              schema:
                type: string
        '204':
          description: ConnectedEnvironment does not exist
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
    patch:
      tags:
        - ConnectedEnvironments
      summary: Update connected Environment's properties.
      description: Patches a Managed Environment. Only patching of tags is supported currently
      operationId: ConnectedEnvironments_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the connectedEnvironment.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectedEnvironment'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/checkNameAvailability?api-version=2024-02-02-preview:
    post:
      tags:
        - ConnectedEnvironments
      summary: Checks the resource connectedEnvironmentName availability.
      description: Checks if resource connectedEnvironmentName is available.
      operationId: ConnectedEnvironments_CheckNameAvailability
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: connectedEnvironmentName
          in: path
          description: Name of the Managed Environment.
          required: true
          schema:
            type: string
      requestBody:
        description: The check connectedEnvironmentName availability request.
        required: true
        x-ms-requestBody-name: checkNameAvailabilityRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/usages?api-version=2024-02-02-preview:
    get:
      tags:
        - Usages
      operationId: Usages_List
      description: Gets, for the specified location, the current resource usage information as well as the limits under the subscription.
      parameters:
        - name: location
          in: path
          description: The location for which resource usage is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/usages?api-version=2024-02-02-preview:
    get:
      tags:
        - Usages
      operationId: ManagedEnvironmentUsages_List
      description: Gets the current usage information as well as the limits for environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the Environment.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/builds?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsBuilds
      operationId: ContainerAppsBuildsByContainerApp_List
      description: List Container Apps Build resources by Container App
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppsBuildCollection'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/builds/{buildName}?api-version=2024-02-02-preview:
    get:
      tags:
        - ContainerAppsBuilds
      operationId: ContainerAppsBuilds_Get
      description: Get a Container Apps Build resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
        - $ref: '#/components/parameters/ContainerAppsBuildNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerAppsBuildResource'
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ContainerAppsBuilds
      operationId: ContainerAppsBuilds_Delete
      description: Delete a Container Apps Build resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ContainerAppsNameParameter'
        - $ref: '#/components/parameters/ContainerAppsBuildNameParameter'
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
        '204':
          description: Resource deleted successfully.
        default:
          description: Common error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
