openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Migrate
  description: Azure Migrate helps you to migrate to Azure. Azure Migrate provides a centralized hub to track discovery, assessment, and migration of on-premises infrastructure, applications, and data to Azure. The hub provides Azure tools for assessment and migration, as well as third-party independent software vendor (ISV) offerings.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Application:
      type: object
      description: Application in the guest virtual machine.
      properties:
        name:
          type: string
          description: Gets or sets Name of the Application.
          readOnly: true
        version:
          type: string
          description: Gets or sets Version of the Application.
          readOnly: true
        provider:
          type: string
          description: Gets or sets Provider of the Application.
          readOnly: true
    ApplicationDiscovery:
      type: object
      description: Contains data related application and roles discovery scope.
      properties:
        discoveryScopeStatus:
          $ref: '#/components/schemas/ApplicationDiscoveryScopeStatus'
          description: Gets discovery scope status.
          readOnly: true
        errors:
          type: array
          description: Gets errors for discovery scope.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        hydratedRunAsAccountId:
          type: string
          description: |-
            Gets the run as account ID with which feature worked successfully.
                       
            It is discovered by the agent from the list of credentials.
          readOnly: true
    ApplicationDiscoveryScopeStatus:
      type: string
      description: Application Discovery Scope Status
      enum:
        - DiscoverySucceededAtleastOnce
        - DiscoveryFailed
        - RunAsAccountNotAssociated
        - DiscoveryNotStarted
        - DiscoveryInProgress
        - Disabled
        - DiscoveryPartiallySucceded
        - DiscoverySucceeded
      x-ms-enum:
        name: ApplicationDiscoveryScopeStatus
        modelAsString: true
        values:
          - name: DiscoverySucceededAtleastOnce
            value: DiscoverySucceededAtleastOnce
            description: DiscoverySucceededAtleastOnce value.
          - name: DiscoveryFailed
            value: DiscoveryFailed
            description: DiscoveryFailed value.
          - name: RunAsAccountNotAssociated
            value: RunAsAccountNotAssociated
            description: RunAsAccountNotAssociated value.
          - name: DiscoveryNotStarted
            value: DiscoveryNotStarted
            description: DiscoveryNotStarted value.
          - name: DiscoveryInProgress
            value: DiscoveryInProgress
            description: DiscoveryInProgress value.
          - name: Disabled
            value: Disabled
            description: Disabled value.
          - name: DiscoveryPartiallySucceded
            value: DiscoveryPartiallySucceded
            description: DiscoveryPartiallySucceded value.
          - name: DiscoverySucceeded
            value: DiscoverySucceeded
            description: DiscoverySucceeded value.
    AppsAndRoles:
      type: object
      description: AppsAndRoles in the guest virtual machine.
      properties:
        applications:
          type: array
          description: Gets or sets Applications of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/Application'
          readOnly: true
          x-ms-identifiers: []
        webApplications:
          type: array
          description: Gets or sets WebApplications of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/WebApplicationAppsAndRolesModel'
          readOnly: true
          x-ms-identifiers: []
        features:
          type: array
          description: Gets or sets Features of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/Feature'
          readOnly: true
          x-ms-identifiers: []
        sqlServers:
          type: array
          description: Gets or sets SQLServers of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/SqlServerApplication'
          readOnly: true
          x-ms-identifiers: []
        sharePointServers:
          type: array
          description: Gets or sets SharePointServers of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/SharePointServer'
          readOnly: true
          x-ms-identifiers: []
        systemCenters:
          type: array
          description: Gets or sets SystemCenters of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/SystemCenter'
          readOnly: true
          x-ms-identifiers: []
        bizTalkServers:
          type: array
          description: Gets or sets BizTalkServers of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/BizTalkServer'
          readOnly: true
          x-ms-identifiers: []
        exchangeServers:
          type: array
          description: Gets or sets ExchangeServers of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/ExchangeServer'
          readOnly: true
          x-ms-identifiers: []
        otherDatabases:
          type: array
          description: Gets or sets OtherDatabaseServers of the AppsAndRoles.
          items:
            $ref: '#/components/schemas/OtherDatabase'
          readOnly: true
          x-ms-identifiers: []
    Azure.ResourceManager.Object:
      description: object model
      properties: {}
      type: object
    BizTalkServer:
      type: object
      description: BizTalkServer in the guest virtual machine.
      properties:
        productName:
          type: string
          description: Gets or sets ProductName of the BizTalkServer.
          readOnly: true
        status:
          type: string
          description: Gets or sets Status of the BizTalkServer.
          readOnly: true
    ConnectorUnit:
      type: object
      description: The connectors of the web server.
      properties:
        bindings:
          type: array
          description: Gets or sets the bindings for the connector.
          items:
            $ref: '#/components/schemas/FrontEndBinding'
          x-ms-identifiers: []
    Default:
      type: string
      description: HealthError Details Source
      enum:
        - default
      x-ms-enum:
        name: Default
        modelAsString: true
        values:
          - name: default
            value: default
            description: default value.
    DefaultValues:
      type: string
      description: HealthError Details Source
      enum:
        - default
      x-ms-enum:
        name: DefaultValues
        modelAsString: true
        values:
          - name: default
            value: default
            description: default value.
    DeleteImportMachinesJob:
      description: A host resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/DeleteImportedMachinesJobProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    DeleteImportMachinesJobCollection:
      type: object
      description: Delete import machines job collection.
      properties:
        value:
          type: array
          description: Gets the list of jobs.
          items:
            $ref: '#/components/schemas/DeleteImportMachinesJob'
        nextLink:
          type: string
          description: Gets the value of next link.
          readOnly: true
      required:
        - value
    DeleteImportedMachinesJobProperties:
      type: object
      description: Delete Imported Machines Job Properties
      properties:
        blobName:
          type: string
          description: blob name
        errorSasUri:
          type: string
          description: error Sas Uri
        jobState:
          $ref: '#/components/schemas/DeleteImportedMachinesJobPropertiesJobState'
          description: job State
        numberOfMachinesDeleted:
          type: integer
          format: int32
          description: number Of Machines Deleted
        deletionConfirmation:
          type: boolean
          description: deletion Confirmation
        errors:
          type: array
          description: errors list
          items:
            type: string
          readOnly: true
        status:
          type: string
          description: Gets or sets the Job status.
        startTime:
          type: string
          description: Gets or sets the Job start time.
        endTime:
          type: string
          description: Gets or sets the Job end time.
        displayName:
          type: string
          description: Gets or sets the Display name.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    DeleteImportedMachinesJobPropertiesJobState:
      type: string
      description: Cosmos db Imported Machines JobEntity
      enum:
        - Unknown
        - Verified
        - VerifiedWithErrors
        - Completed
        - Failed
      x-ms-enum:
        name: DeleteImportedMachinesJobPropertiesJobState
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Verified
            value: Verified
            description: Verified value.
          - name: VerifiedWithErrors
            value: VerifiedWithErrors
            description: VerifiedWithErrors value.
          - name: Completed
            value: Completed
            description: Completed value.
          - name: Failed
            value: Failed
            description: Failed value.
    DependencyMapDiscovery:
      type: object
      description: Contains data related dependency map discovery scope.
      properties:
        discoveryScopeStatus:
          $ref: '#/components/schemas/DependencyMapDiscoveryScopeStatus'
          description: Gets discovery scope status.
          readOnly: true
        errors:
          type: array
          description: Gets errors for discovery scope.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        hydratedRunAsAccountId:
          type: string
          description: |-
            Gets the run as account ID with which feature worked successfully.
                       
            It is discovered by the agent from the list of credentials.
          readOnly: true
    DependencyMapDiscoveryScopeStatus:
      type: string
      description: DependencyMap DiscoveryScope Status
      enum:
        - DiscoverySucceededAtleastOnce
        - DiscoveryFailed
        - RunAsAccountNotAssociated
        - DiscoveryNotStarted
        - DiscoveryInProgress
        - Disabled
        - DiscoveryPartiallySucceded
        - DiscoverySucceeded
      x-ms-enum:
        name: DependencyMapDiscoveryScopeStatus
        modelAsString: true
        values:
          - name: DiscoverySucceededAtleastOnce
            value: DiscoverySucceededAtleastOnce
            description: DiscoverySucceededAtleastOnce value.
          - name: DiscoveryFailed
            value: DiscoveryFailed
            description: DiscoveryFailed value.
          - name: RunAsAccountNotAssociated
            value: RunAsAccountNotAssociated
            description: RunAsAccountNotAssociated value.
          - name: DiscoveryNotStarted
            value: DiscoveryNotStarted
            description: DiscoveryNotStarted value.
          - name: DiscoveryInProgress
            value: DiscoveryInProgress
            description: DiscoveryInProgress value.
          - name: Disabled
            value: Disabled
            description: Disabled value.
          - name: DiscoveryPartiallySucceded
            value: DiscoveryPartiallySucceded
            description: DiscoveryPartiallySucceded value.
          - name: DiscoverySucceeded
            value: DiscoverySucceeded
            description: DiscoverySucceeded value.
    DependencyMapMachineInput:
      type: object
      description: Machine class.
      properties:
        machineId:
          type: string
          description: Gets or sets the ARM id of the machine.
        isDependencyMapToBeEnabled:
          type: boolean
          description: |-
            Gets or sets a value indicating whether
                        dependency mapping is to
            be enabled or not.
    DependencyMapServiceMapextensionsClientGroupMembersRequest:
      type: object
      description: DependencyMap ServiceMap extensions Client GroupMembers Request
      properties:
        machineId:
          type: string
          description: id of machine
        processGroupName:
          type: string
          description: 'process group name '
        processName:
          type: string
          description: name of process
        startTime:
          type: string
          format: date-time
          description: start time
        endTime:
          type: string
          format: date-time
          description: end time
        filters:
          $ref: '#/components/schemas/DependencyMapServiceMapextensionsDependencyMapRequestFilters'
          description: optional filters
    DependencyMapServiceMapextensionsDependencyMapRequestFilters:
      type: object
      description: DependencyMap Service Map extensions Dependency Map Request Filters
      properties:
        machineIds:
          type: array
          description: array of machine ids
          items:
            type: string
        processIds:
          type: array
          description: array of process Ids
          items:
            type: string
    DependencyMapServiceMapextensionsExportDependenciesRequest:
      type: object
      description: DependencyMap ServiceMap extensions ExportDependencies Request
      properties:
        startTime:
          type: string
          format: date-time
          description: start time
        endTime:
          type: string
          format: date-time
          description: end time
    DependencyMapServiceMapextensionsScopeMapRequest:
      type: object
      description: DependencyMap ServiceMapextensions Scope MapRequest
      properties:
        startTime:
          type: string
          format: date-time
          description: start time
        endTime:
          type: string
          format: date-time
          description: end time
        filters:
          $ref: '#/components/schemas/DependencyMapServiceMapextensionsDependencyMapRequestFilters'
          description: optional filters
    DependencyMapServiceMapextensionsServerGroupMembersRequest:
      type: object
      description: DependencyMap ServiceMap extensions ServerGroup Members Request
      properties:
        serverPort:
          type: integer
          format: int32
          description: port of server
        startTime:
          type: string
          format: date-time
          description: start time
        endTime:
          type: string
          format: date-time
          description: end time
        filters:
          $ref: '#/components/schemas/DependencyMapServiceMapextensionsDependencyMapRequestFilters'
          description: optional filters
    DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest:
      type: object
      description: DependencyMap ServiceMap extensions SingleMachine DetailedMap Request
      properties:
        machineId:
          type: string
          description: id of machine
        startTime:
          type: string
          format: date-time
          description: start time
        endTime:
          type: string
          format: date-time
          description: end time
        filters:
          $ref: '#/components/schemas/DependencyMapServiceMapextensionsDependencyMapRequestFilters'
          description: optional filters
    DirectoryPath:
      type: object
      description: Second level entity for virtual directories.
      properties:
        virtual:
          type: string
          description: Gets or sets the virtual path for the directory.
        physical:
          type: string
          description: Gets or sets the physical path of the directory on the web server.
    DiscoveryScopeErrorSummary:
      type: object
      description: The site error summary model.
      properties:
        affectedResourceType:
          type: string
          description: Gets or sets the affected resource type.
        affectedObjectsCount:
          type: integer
          format: int64
          description: Count of affected objects.
        discoveryScope:
          $ref: '#/components/schemas/DiscoveryScopes'
          description: Gets or sets the count of affected objects.
      required:
        - affectedResourceType
        - affectedObjectsCount
        - discoveryScope
    DiscoveryScopeStatus:
      type: string
      description: Discovery Scope.
      enum:
        - DiscoverySucceededAtleastOnce
        - DiscoveryFailed
        - RunAsAccountNotAssociated
        - DiscoveryNotStarted
        - DiscoveryInProgress
        - Disabled
        - DiscoveryPartiallySucceded
        - DiscoverySucceeded
      x-ms-enum:
        name: DiscoveryScopeStatus
        modelAsString: true
        values:
          - name: DiscoverySucceededAtleastOnce
            value: DiscoverySucceededAtleastOnce
            description: DiscoverySucceededAtleastOnce value.
          - name: DiscoveryFailed
            value: DiscoveryFailed
            description: DiscoveryFailed value.
          - name: RunAsAccountNotAssociated
            value: RunAsAccountNotAssociated
            description: RunAsAccountNotAssociated value.
          - name: DiscoveryNotStarted
            value: DiscoveryNotStarted
            description: DiscoveryNotStarted value.
          - name: DiscoveryInProgress
            value: DiscoveryInProgress
            description: DiscoveryInProgress value.
          - name: Disabled
            value: Disabled
            description: Disabled value.
          - name: DiscoveryPartiallySucceded
            value: DiscoveryPartiallySucceded
            description: DiscoveryPartiallySucceded value.
          - name: DiscoverySucceeded
            value: DiscoverySucceeded
            description: DiscoverySucceeded value.
    DiscoveryScopes:
      type: string
      description: Discovery scopes
      enum:
        - AppsAndRoles
        - DependencyMap
        - StaticData
        - SQLServerConnectionInfo
      x-ms-enum:
        name: DiscoveryScopes
        modelAsString: true
        values:
          - name: AppsAndRoles
            value: AppsAndRoles
            description: AppsAndRoles value.
          - name: DependencyMap
            value: DependencyMap
            description: DependencyMap value.
          - name: StaticData
            value: StaticData
            description: StaticData value.
          - name: SQLServerConnectionInfo
            value: SQLServerConnectionInfo
            description: SQLServerConnectionInfo value.
    DiscoverySiteDataSource:
      description: Web app data source web model.
      properties:
        properties:
          $ref: '#/components/schemas/DiscoverySiteDataSourceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    DiscoverySiteDataSourceListResult:
      type: object
      description: The response of a DiscoverySiteDataSource list operation.
      properties:
        value:
          type: array
          description: The DiscoverySiteDataSource items on this page
          items:
            $ref: '#/components/schemas/DiscoverySiteDataSource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    DiscoverySiteDataSourceProperties:
      type: object
      description: Discovery site data source properties class.
      properties:
        discoverySiteId:
          type: string
          description: Gets or sets the discovery site Id.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    ErrorDetails:
      type: object
      description: Error contract returned when some exception occurs in Rest API.
      properties:
        code:
          type: string
          description: Gets the error code.
          readOnly: true
        message:
          type: string
          description: Gets the error message.
          readOnly: true
        possibleCauses:
          type: string
          description: Gets the possible causes of error.
          readOnly: true
        recommendedAction:
          type: string
          description: Gets the recommended action to resolve error.
          readOnly: true
        severity:
          type: string
          description: Gets the error severity.
          readOnly: true
        isAgentReportedError:
          type: boolean
          description: Gets a value indicating whether the error originated from a agent or not.
          readOnly: true
        agentErrorCode:
          type: string
          description: Gets the agent error code.
          readOnly: true
        agentErrorMessage:
          type: string
          description: Gets the error message from the agent.
          readOnly: true
        agentErrorPossibleCauses:
          type: string
          description: Gets possible causes for the agent error.
          readOnly: true
        agentErrorRecommendedAction:
          type: string
          description: Gets the recommended action for the agent error.
          readOnly: true
    ErrorSummaryRequest:
      type: object
      description: ErrorSummaryRequest body
      properties:
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
    Errors:
      type: object
      description: The properties of a server machine tracked resource
      properties:
        message:
          type: string
          description: Gets the error message.
          readOnly: true
        messageParameters:
          type: object
          description: Gets the message parameters.
          additionalProperties:
            type: string
          readOnly: true
        applianceName:
          type: string
          description: Gets the appliance name.
          readOnly: true
        id:
          type: integer
          format: int32
          description: Gets the error ID.
          readOnly: true
        code:
          type: string
          description: Gets the error name.
          readOnly: true
        possibleCauses:
          type: string
          description: Gets the possible causes of error.
          readOnly: true
        recommendedAction:
          type: string
          description: Gets the recommended action to resolve error.
          readOnly: true
        severity:
          type: string
          description: Gets the error severity.
          readOnly: true
        summaryMessage:
          type: string
          description: Gets the error summary message.
          readOnly: true
        source:
          $ref: '#/components/schemas/MicrosoftAzureFDSWebRoleHealthErrorDetailsSource'
          description: Gets the error source.
          readOnly: true
        updatedTimeStamp:
          type: string
          format: date-time
          description: Gets the time stamp when the error was updated.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets run as account id used while performing discovery             of entity.
          readOnly: true
        discoveryScope:
          $ref: '#/components/schemas/HealthErrorDetailsDiscoveryScope'
          description: Gets discovery scope for which             error is encountered.
          readOnly: true
    ExchangeServer:
      type: object
      description: ExchangeServer in the guest virtual machine.
      properties:
        productName:
          type: string
          description: Gets or sets ProductName of the ExchangeServer.
          readOnly: true
        edition:
          type: string
          description: Gets or sets Edition of the ExchangeServer.
          readOnly: true
        roles:
          type: string
          description: Gets or sets Roles of the ExchangeServer.
          readOnly: true
        servicePack:
          type: string
          description: Gets or sets ServicePack of the ExchangeServer.
          readOnly: true
        version:
          type: string
          description: Gets or sets Version of the ExchangeServer.
          readOnly: true
    ExportImportedMachinesJob:
      description: Export machines job REST resource.
      properties:
        type:
          type: string
          description: Type name for export job.
          readOnly: true
        properties:
          $ref: '#/components/schemas/ExportImportedMachinesJobEntityProperties'
          description: Gets or sets the export machines job properties.
        id:
          type: string
          description: Gets or sets the relative ARM name to get job.
        name:
          type: string
          description: Gets or sets the Job ID.
        status:
          type: string
          description: Gets or sets the Job status.
        startTime:
          type: string
          description: Gets or sets the Job start time.
        endTime:
          type: string
          description: Gets or sets the Job end time.
        displayName:
          type: string
          description: Gets or sets the Display name.
      type: object
    ExportImportedMachinesJobEntityProperties:
      type: object
      description: ' Export Imported Machines JobEntity Properties '
      properties:
        blobName:
          type: string
          description: blob name
        sasUri:
          type: string
          description: sas uri
    ExportMachineErrorsProperties:
      type: string
      description: Export Machine Errors Properties
      enum:
        - AppsAndRoles
        - DependencyMap
        - StaticData
        - SQLServerConnectionInfo
      x-ms-enum:
        name: ExportMachineErrorsProperties
        modelAsString: true
        values:
          - name: AppsAndRoles
            value: AppsAndRoles
            description: AppsAndRoles value.
          - name: DependencyMap
            value: DependencyMap
            description: DependencyMap value.
          - name: StaticData
            value: StaticData
            description: StaticData value.
          - name: SQLServerConnectionInfo
            value: SQLServerConnectionInfo
            description: SQLServerConnectionInfo value.
    ExportMachineErrorsRequest:
      description: The body of export machine errors request.
      properties:
        properties:
          $ref: '#/components/schemas/RequestExportMachineErrorsProperties'
          description: Gets or sets the properties.
      type: object
    ExportMachinesRequest:
      type: object
      description: ExportMachinesRequest body
      properties:
        filter:
          type: string
          description: filter options.
    ExportSqlServersRequest:
      type: object
      description: ExportSqlServerRequest body
      properties:
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
        filter:
          type: string
          description: filter options.
    ExportWebAppsRequest:
      type: object
      description: ExportWebAppsRequest body
      properties:
        filter:
          type: string
          description: filter options.
    FCIInstanceState:
      type: string
      description: 'fci instance state '
      enum:
        - Unknown
        - Inherited
        - Initializing
        - Online
        - Offline
        - Failed
        - Pending
        - OnlinePending
        - OfflinePending
      x-ms-enum:
        name: FCIInstanceState
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Inherited
            value: Inherited
            description: Inherited value.
          - name: Initializing
            value: Initializing
            description: Initializing value.
          - name: Online
            value: Online
            description: Online value.
          - name: Offline
            value: Offline
            description: Offline value.
          - name: Failed
            value: Failed
            description: Failed value.
          - name: Pending
            value: Pending
            description: Pending value.
          - name: OnlinePending
            value: OnlinePending
            description: OnlinePending value.
          - name: OfflinePending
            value: OfflinePending
            description: OfflinePending value.
    Feature:
      type: object
      description: Feature in the guest virtual machine.
      properties:
        name:
          type: string
          description: Gets or sets Name of the Feature.
          readOnly: true
        featureType:
          type: string
          description: Gets or sets FeatureType of the Feature.
          readOnly: true
        parent:
          type: string
          description: Gets or sets Parent of the Feature.
          readOnly: true
        status:
          type: string
          description: Gets or sets Status of the Feature.
          readOnly: true
    FileMetaData:
      type: object
      description: File Metadata web model.
      properties:
        logicalName:
          type: string
          description: Gets or sets the logical name of the file.
        physicalFullName:
          type: string
          description: Gets or sets the operating-system full path of the file.
        fileType:
          $ref: '#/components/schemas/FileType'
          description: Gets or sets the database file type.
        sizeInMb:
          type: number
          format: float
          description: Gets or sets the size of the file in MB.
        isMemoryOptimizedDataOptionEnabled:
          type: boolean
          description: Gets or sets a value indicating whether memory optimized data option is enabled.
    FileType:
      type: string
      description: file type
      enum:
        - Rows
        - Log
        - Filestream
        - NotSupported
        - Fulltext
      x-ms-enum:
        name: FileType
        modelAsString: true
        values:
          - name: Rows
            value: Rows
            description: Rows value.
          - name: Log
            value: Log
            description: Log value.
          - name: Filestream
            value: Filestream
            description: Filestream value.
          - name: NotSupported
            value: NotSupported
            description: NotSpecified value.
          - name: Fulltext
            value: Fulltext
            description: Fulltext value.
    FrontEndBinding:
      type: object
      description: Frontend bindings for a web application.
      properties:
        protocol:
          type: string
          description: Gets or sets the Binding protocol.
        hostName:
          type: string
          description: Gets or sets the Host name.
        port:
          type: string
          description: Gets or sets the Port number.
        ipAddress:
          type: string
          description: Gets or sets the IP Address.
    GuestOsDetails:
      type: object
      description: 'Second level object.  Data related to a machine''s operating system.             Serialized and stored as part of Machine Rest object. '
      properties:
        osType:
          type: string
          description: Gets or sets the type of the operating system.
        osName:
          type: string
          description: Gets or sets the Name of the operating system.
        osVersion:
          type: string
          description: Gets or sets the Version of the operating system.
        osArchitecture:
          type: string
          description: Gets or sets the Architecture of the operating system.
    HealthErrorDetails:
      type: object
      description: Error contract returned when some exception occurs in Rest API.
      properties:
        message:
          type: string
          description: Gets the error message.
          readOnly: true
        messageParameters:
          type: object
          description: Gets the message parameters.
          additionalProperties:
            type: string
          readOnly: true
        applianceName:
          type: string
          description: Gets the appliance name.
          readOnly: true
        id:
          type: integer
          format: int64
          description: Gets the error ID.
          readOnly: true
        code:
          type: string
          description: Gets the error name.
          readOnly: true
        possibleCauses:
          type: string
          description: Gets the possible causes of error.
          readOnly: true
        recommendedAction:
          type: string
          description: Gets the recommended action to resolve error.
          readOnly: true
        severity:
          type: string
          description: Gets the error severity.
          readOnly: true
        summaryMessage:
          type: string
          description: Gets the error summary message.
          readOnly: true
        source:
          $ref: '#/components/schemas/HealthErrorDetailsSource'
          description: Gets the error source.
          readOnly: true
        updatedTimeStamp:
          type: string
          format: date-time
          description: Gets the time stamp when the error was updated.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets run as account id used while performing discovery             of entity.
          readOnly: true
        discoveryScope:
          $ref: '#/components/schemas/HealthErrorDetailsDiscoveryScope'
          description: Gets discovery scope for which             error is encountered.
          readOnly: true
    HealthErrorDetailsDiscoveryScope:
      type: string
      description: Gets discovery scope for which             error is encountered.
      enum:
        - AppsAndRoles
        - DependencyMap
        - StaticData
        - SQLServerConnectionInfo
        - DiscoveryTargets
      x-ms-enum:
        name: HealthErrorDetailsDiscoveryScope
        modelAsString: true
        values:
          - name: AppsAndRoles
            value: AppsAndRoles
            description: AppsAndRoles value.
          - name: DependencyMap
            value: DependencyMap
            description: DependencyMap value.
          - name: StaticData
            value: StaticData
            description: StaticData value.
          - name: SQLServerConnectionInfo
            value: SQLServerConnectionInfo
            description: SQLServerConnectionInfo value.
          - name: DiscoveryTargets
            value: DiscoveryTargets
            description: DiscoveryTargets value.
    HealthErrorDetailsSource:
      type: string
      description: HealthError Details Source
      enum:
        - RefreshFabricLayout
        - RefreshFabricLayoutGuest
        - RefreshFabricLayoutDependencyMap
      x-ms-enum:
        name: HealthErrorDetailsSource
        modelAsString: true
        values:
          - name: RefreshFabricLayout
            value: RefreshFabricLayout
            description: RefreshFabricLayout value.
          - name: RefreshFabricLayoutGuest
            value: RefreshFabricLayoutGuest
            description: RefreshFabricLayoutGuest value.
          - name: RefreshFabricLayoutDependencyMap
            value: RefreshFabricLayoutDependencyMap
            description: RefreshFabricLayoutDependencyMap value.
    HighAvailability:
      type: string
      description: Value indicating whether the VM is highly available
      enum:
        - Unknown
        - 'No'
        - 'Yes'
      x-ms-enum:
        name: HighAvailability
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: 'No'
            value: 'No'
            description: No value.
          - name: 'Yes'
            value: 'Yes'
            description: Yes value.
    HighAvailabilityValues:
      type: string
      description: Value indicating whether the VM is highly available
      enum:
        - Unknown
        - 'No'
        - 'Yes'
      x-ms-enum:
        name: HighAvailabilityValues
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: 'No'
            value: 'No'
            description: No value.
          - name: 'Yes'
            value: 'Yes'
            description: Yes value.
    HypervCluster:
      description: A cluster resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/HypervClusterProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    HypervClusterListResult:
      type: object
      description: The response of a HypervCluster list operation.
      properties:
        value:
          type: array
          description: The HypervCluster items on this page
          items:
            $ref: '#/components/schemas/HypervCluster'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    HypervClusterProperties:
      type: object
      description: The properties of Hyperv Cluster
      properties:
        createdTimestamp:
          type: string
          description: Gets the timestamp marking Hyper-V cluster creation.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the Hyper-V cluster.
          readOnly: true
        fqdn:
          type: string
          description: Gets or sets the FQDN/IPAddress of the Hyper-V cluster.
        functionalLevel:
          type: integer
          format: int32
          description: Gets the functional level of the Hyper-V cluster.
          readOnly: true
        status:
          type: string
          description: Gets the status of the Hyper-V cluster.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets or sets Run as account ID of the Hyper-V cluster.
        hostFqdnList:
          type: array
          description: Gets or sets list of hosts (FQDN) currently being tracked by the cluster.
          items:
            type: string
        errors:
          type: array
          description: Gets the errors.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    HypervDisk:
      type: object
      description: Second level object returned as part of Machine REST resource.
      properties:
        instanceId:
          type: string
          description: Id of the disk.
          readOnly: true
        vhdId:
          type: string
          description: VHD Id of the disk.
          readOnly: true
        maxSizeInBytes:
          type: integer
          format: int64
          description: Gets or sets Bytes allocated for the disk.
        name:
          type: string
          description: Gets or sets Name of the disk.
        diskType:
          type: string
          description: Gets or sets Type of the disk.
        lun:
          type: integer
          format: int32
          description: Gets or sets LUN of the disk.
        path:
          type: string
          description: Gets or sets Path of the disk.
    HypervHost:
      description: A host resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/HypervHostProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    HypervHostListResult:
      type: object
      description: The response of a HypervHost list operation.
      properties:
        value:
          type: array
          description: The HypervHost items on this page
          items:
            $ref: '#/components/schemas/HypervHost'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    HypervHostProperties:
      type: object
      description: The properties of Hyperv Host
      properties:
        createdTimestamp:
          type: string
          description: Gets the timestamp marking Hyper-V host creation.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the Hyper-V host.
          readOnly: true
        fqdn:
          type: string
          description: Gets or sets the FQDN/IPAddress of the Hyper-V host.
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the Hyper-V host.
        version:
          type: string
          description: Gets the version of the Hyper-V host.
          readOnly: true
        errors:
          type: array
          description: Gets the errors.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    HypervJob:
      description: A job resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    HypervJobListResult:
      type: object
      description: The response of a HypervJob list operation.
      properties:
        value:
          type: array
          description: The HypervJob items on this page
          items:
            $ref: '#/components/schemas/HypervJob'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    HypervMachine:
      description: A machine resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/HypervMachineProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    HypervMachineListResult:
      type: object
      description: The response of a HypervMachine list operation.
      properties:
        value:
          type: array
          description: The HypervMachine items on this page
          items:
            $ref: '#/components/schemas/HypervMachine'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    HypervMachineProperties:
      type: object
      description: The properties of AddressResource
      properties:
        instanceUuid:
          type: string
          description: On-premise Instance UUID of the machine.
          readOnly: true
        hostFqdn:
          type: string
          description: Host FQDN/IPAddress.
          readOnly: true
        hostId:
          type: string
          description: Host ARM ID.
          readOnly: true
        generation:
          type: integer
          format: int32
          description: Generation of the virtual machine.
          readOnly: true
        version:
          type: string
          description: VM version.
          readOnly: true
        highAvailability:
          $ref: '#/components/schemas/HighAvailability'
          description: Value indicating whether the VM is highly available.
          readOnly: true
        clusterFqdn:
          type: string
          description: Cluster FQDN/IPAddress.
          readOnly: true
        clusterId:
          type: string
          description: Cluster ARM ID.
          readOnly: true
        maxMemoryMb:
          type: integer
          format: int32
          description: Max memory of the virtual machine in MB.
          readOnly: true
        isDynamicMemoryEnabled:
          type: boolean
          description: Value indicating whether dynamic memory is enabled for the VM.
          readOnly: true
        disks:
          type: array
          description: Disks attached to the machine.
          items:
            $ref: '#/components/schemas/HypervDisk'
          readOnly: true
          x-ms-identifiers: []
        networkAdapters:
          type: array
          description: Network adapters attached to the machine.
          items:
            $ref: '#/components/schemas/HypervNetworkAdapter'
          readOnly: true
          x-ms-identifiers: []
        managementServerType:
          type: string
          description: |-
            Management server type captured as a string representation of the
                       
            {Microsoft.Azure.FDS.WebRole.HyperVMachineBase.HyperVMachineBaseProperties.ManagementServerType}
            enumeration.
          readOnly: true
        secureBootTemplateId:
          type: string
          description: Gets or sets the SecureBootTemplateId setting of the VM.
          readOnly: true
        secureBootEnabled:
          type: boolean
          description: Gets or sets a value indicating whether Secure boot is enabled for the VM.
          readOnly: true
        secureBootTemplate:
          type: string
          description: Gets or sets the SecureBootTemplateId setting of the VM.
          readOnly: true
        tpmEnabled:
          type: boolean
          description: |-
            Gets or sets a value indicating whether trusted platform module is enabled on
            the VM.
          readOnly: true
        ksdEnabled:
          type: boolean
          description: Gets or sets a value indicating whether key storage device is enabled on the VM.
          readOnly: true
        shieldingRequested:
          type: boolean
          description: Gets or sets a value indicating whether shielding is enabled for the VM.
          readOnly: true
        dataProtectionRequested:
          type: boolean
          description: Gets or sets a value indicating whether data protection is requested for a VM.
          readOnly: true
        encryptStateAndVmMigrationTraffic:
          type: boolean
          description: |-
            Gets or sets a value indicating whether encryption of state and migration
            traffic is enabled for the VM.
          readOnly: true
        virtualizationBasedSecurityOptOut:
          type: boolean
          description: |-
            Gets or sets a value indicating whether VM virtualization based security is
            enabled for the VM.
          readOnly: true
        powerStatus:
          type: string
          description: Gets the Machine power status.
          readOnly: true
        vmFqdn:
          type: string
          description: Gets the VM FQDN.
          readOnly: true
        vmConfigurationFileLocation:
          type: string
          description: Gets the Root location of the VM configuration file.
          readOnly: true
        firmware:
          type: string
          description: Gets or sets the firmware.
        guestOsDetails:
          $ref: '#/components/schemas/GuestOsDetails'
          description: 'Operating System Details extracted from the guest             bu executing script inside the guest VM. '
          readOnly: true
        numberOfApplications:
          type: integer
          format: int32
          description: Number of applications installed in the guest VM.
          readOnly: true
        guestDetailsDiscoveryTimestamp:
          type: string
          format: date-time
          description: |-
            The last time at which the Guest Details was discovered
                        or the
            error while discovering guest details based discovery
                        of the
            machine.
          readOnly: true
        isGuestDetailsDiscoveryInProgress:
          type: boolean
          description: |-
            Whether Refresh Fabric Layout Guest Details has been completed once.
                     
              Portal will show discovery in progress, if this value is true.
          readOnly: true
        dependencyMapping:
          type: string
          description: |-
            Gets or sets if dependency mapping feature is enabled or not
                        for
            the VM.
          readOnly: true
        dependencyMappingStartTime:
          type: string
          format: date-time
          description: Gets or sets when dependency mapping collection is last started.
          readOnly: true
        dependencyMappingEndTime:
          type: string
          description: Gets or sets when dependency mapping collection was last disabled.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the machine.
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        errors:
          type: array
          description: Errors for machine.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applicationDiscovery:
          $ref: '#/components/schemas/ApplicationDiscovery'
          description: Gets the data related to application discovery.
          readOnly: true
        dependencyMapDiscovery:
          $ref: '#/components/schemas/DependencyMapDiscovery'
          description: Gets the data related to dependency map discovery.
          readOnly: true
        staticDiscovery:
          $ref: '#/components/schemas/StaticDiscovery'
          description: Gets the data related to static discovery.
          readOnly: true
        sqlDiscovery:
          $ref: '#/components/schemas/SqlDiscovery'
          description: Gets the data related to SQL discovery.
          readOnly: true
        webAppDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to Web application discovery.
          readOnly: true
        oracleDiscovery:
          $ref: '#/components/schemas/OracleDiscovery'
          description: Gets the data related to Oracle discovery.
          readOnly: true
        springBootDiscovery:
          $ref: '#/components/schemas/SpringBootDiscovery'
          description: Gets the data related to SpringBoot discovery.
          readOnly: true
        iisDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to iis discovery.
          readOnly: true
        tomcatDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to tomcat discovery.
          readOnly: true
        appsAndRoles:
          $ref: '#/components/schemas/AppsAndRoles'
          description: Apps And Roles of the Server.
          readOnly: true
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        numberOfProcessorCore:
          type: integer
          format: int32
          description: |-
            Gets or sets the Number of Processor Cores 
                        allocated for the
            machine.
        allocatedMemoryInMb:
          type: number
          format: double
          description: Gets or sets the allocated Memory in MB.
        operatingSystemDetails:
          $ref: '#/components/schemas/OperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        biosSerialNumber:
          type: string
          description: Gets or sets the Machine BIOS serial number.
        biosGuid:
          type: string
          description: Gets or sets the BIOS GUID.
        displayName:
          type: string
          description: Gets the Display name of the machine.
          readOnly: true
        isDeleted:
          type: boolean
          description: Value indicating whether VM is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the marking machine creation.
          readOnly: true
        tags:
          type: object
          description: Gets or sets tags on the resource.
          additionalProperties:
            type: string
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the machine.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    HypervMachineUpdate:
      description: The type used for update operations of the HypervMachine.
      properties:
        properties:
          $ref: '#/components/schemas/HypervMachineUpdateProperties'
          x-ms-client-flatten: true
      type: object
    HypervMachineUpdateProperties:
      type: object
      description: The updatable properties of the HypervMachine.
      properties:
        firmware:
          type: string
          description: Gets or sets the firmware.
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the machine.
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        numberOfProcessorCore:
          type: integer
          format: int32
          description: |-
            Gets or sets the Number of Processor Cores 
                        allocated for the
            machine.
        allocatedMemoryInMb:
          type: number
          format: double
          description: Gets or sets the allocated Memory in MB.
        operatingSystemDetails:
          $ref: '#/components/schemas/OperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        biosSerialNumber:
          type: string
          description: Gets or sets the Machine BIOS serial number.
        biosGuid:
          type: string
          description: Gets or sets the BIOS GUID.
        tags:
          type: object
          description: Gets or sets tags on the resource.
          additionalProperties:
            type: string
    HypervNetworkAdapter:
      type: object
      description: Second level object represented in responses as part of Machine REST resource.
      properties:
        networkId:
          type: string
          description: Network Id.
          readOnly: true
        subnetName:
          type: string
          description: Name of the VM subnet within the virtual network the NIC is attached to.
          readOnly: true
        staticIpAddress:
          type: string
          description: Static IP address.
          readOnly: true
        nicType:
          type: string
          description: Mac address of the NIC.
          readOnly: true
        nicId:
          type: string
          description: Gets or sets the NIC Id.
        macAddress:
          type: string
          description: Gets or sets Mac address of the NIC.
        ipAddressList:
          type: array
          description: Gets IP addresses for the machine.
          items:
            type: string
          readOnly: true
        networkName:
          type: string
          description: Gets or sets Network Name.
        ipAddressType:
          type: string
          description: Gets or sets Type of the IP address.
    HypervOperationsStatusResource:
      description: A cluster resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/HypervClusterProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    HypervRunAsAccountResource:
      description: A machine resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/RunAsAccountProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    HypervRunAsAccountResourceListResult:
      type: object
      description: The response of a HypervRunAsAccountResource list operation.
      properties:
        value:
          type: array
          description: The HypervRunAsAccountResource items on this page
          items:
            $ref: '#/components/schemas/HypervRunAsAccountResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    HypervSite:
      description: A HyperV SiteResource
      properties:
        properties:
          $ref: '#/components/schemas/SiteProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    HypervSiteListResult:
      type: object
      description: The response of a HypervSite list operation.
      properties:
        value:
          type: array
          description: The HypervSite items on this page
          items:
            $ref: '#/components/schemas/HypervSite'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    HypervSiteUpdate:
      description: The type used for update operations of the HypervSite.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/HypervSiteUpdateProperties'
          x-ms-client-flatten: true
      type: object
    HypervSiteUpdateProperties:
      type: object
      description: The updatable properties of the HypervSite.
      properties:
        servicePrincipalIdentityDetails:
          $ref: '#/components/schemas/SiteSpnProperties'
          description: |-
            Gets or sets the service principal identity details used by agent for
            communication
                        to the service.
        agentDetails:
          $ref: '#/components/schemas/SiteAgentProperties'
          description: Gets or sets the on-premises agent details.
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
        discoverySolutionId:
          type: string
          description: Gets or sets the ARM ID of migration hub solution for SDS.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    HypervSiteUsage:
      type: object
      description: Hyper-V site usage.
      properties:
        machineCount:
          type: integer
          format: int32
          description: Gets or sets the number of machines discovered in the site.
        runAsAccountCount:
          type: integer
          format: int32
          description: Gets or sets the number of run as accounts in the site.
        hostCount:
          type: integer
          format: int32
          description: Gets or sets the number of hosts part of the site.
        clusterCount:
          type: integer
          format: int32
          description: Gets or sets the number of clusters part of the site.
    HypervVmSoftwareInventory:
      description: HyperV VM software inventory REST resource.
      properties:
        properties:
          $ref: '#/components/schemas/MachineSoftwareInventoryProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    HypervVmSoftwareInventoryListResult:
      type: object
      description: The response of a HypervVmSoftwareInventory list operation.
      properties:
        value:
          type: array
          description: The HypervVmSoftwareInventory items on this page
          items:
            $ref: '#/components/schemas/HypervVmSoftwareInventory'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    IisApplicationUnit:
      type: object
      description: |-
        Second-level object for identification of application units in a web site
        hosted on IIS.
      properties:
        applicationPoolName:
          type: string
          description: Gets or sets the path of the directory.
        managedPipelineMode:
          type: string
          description: Gets or sets the managed pipeline mode.
        runtimeVersion:
          type: string
          description: Gets or sets the runtime version.
        enable32BitApiOnWin64:
          type: boolean
          description: |-
            Gets or sets a value indicating whether 32 bit applications are allowed to run
            on 64 bit.
        path:
          $ref: '#/components/schemas/DirectoryPath'
          description: Gets or sets the path of the directory.
        directories:
          type: array
          description: Gets or sets the list of directories.
          items:
            $ref: '#/components/schemas/DirectoryPath'
          x-ms-identifiers: []
    IisVirtualApplicationUnit:
      type: object
      description: |-
        Second-level object for identification of virtual applications in a web site
        hosted on IIS.
      properties:
        isVirtualDirectory:
          type: boolean
          description: Gets a value indicating whether the application corresponds to a directory.
          readOnly: true
        path:
          $ref: '#/components/schemas/DirectoryPath'
          description: Gets or sets the path of the directory.
        directories:
          type: array
          description: Gets or sets the list of directories.
          items:
            $ref: '#/components/schemas/DirectoryPath'
          x-ms-identifiers: []
    IisWebApplicationProperties:
      type: object
      description: Class for web application properties.
      properties:
        applications:
          type: array
          description: Gets the list of application units for the web site.
          items:
            $ref: '#/components/schemas/IisApplicationUnit'
          readOnly: true
          x-ms-identifiers: []
        virtualApplications:
          type: array
          description: Gets the list of application units for the web site.
          items:
            $ref: '#/components/schemas/IisVirtualApplicationUnit'
          readOnly: true
          x-ms-identifiers: []
        webServerId:
          type: string
          description: Gets the web server id.
          readOnly: true
        webServerName:
          type: string
          description: Gets the web server name.
          readOnly: true
        machineArmIds:
          type: array
          description: Gets the list of machine ARM Ids on which the SQL server is deployed.
          items:
            type: string
          readOnly: true
        virtualPath:
          type: string
          description: Gets the virtual path of the application.
          readOnly: true
        physicalPath:
          type: string
          description: Gets the physical path of the application.
          readOnly: true
        bindings:
          type: array
          description: Gets the front end bindings for the application.
          items:
            $ref: '#/components/schemas/FrontEndBinding'
          readOnly: true
          x-ms-identifiers: []
        frameworks:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/WebApplicationFramework'
          readOnly: true
          x-ms-identifiers: []
        configurations:
          type: array
          description: Gets the configuration.
          items:
            $ref: '#/components/schemas/WebApplicationConfigurationUnit'
          readOnly: true
          x-ms-identifiers: []
        directories:
          type: array
          description: Gets the directories.
          items:
            $ref: '#/components/schemas/WebApplicationDirectoryUnit'
          readOnly: true
          x-ms-identifiers: []
        displayName:
          type: string
          description: Gets the display name.
          readOnly: true
        tags:
          type: object
          description: Gets or sets tags on the resource.
          additionalProperties:
            type: string
        staticFolders:
          type: array
          description: Static folders.
          items:
            type: string
          readOnly: true
        machineDisplayName:
          type: string
          description: Machine display name
          readOnly: true
        isDeleted:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking creation of the entity.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last update operation.
          readOnly: true
        serverType:
          type: string
          description: Gets the server type.
          readOnly: true
        errors:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets a value indicating whether the WebApp has errors or not.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    IisWebApplications:
      description: Web application REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/IisWebApplicationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    IisWebApplicationsListResult:
      type: object
      description: The response of a IisWebApplications list operation.
      properties:
        value:
          type: array
          description: The IisWebApplications items on this page
          items:
            $ref: '#/components/schemas/IisWebApplications'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    IisWebApplicationsUpdate:
      description: The type used for update operations of the IisWebApplications.
      properties:
        properties:
          $ref: '#/components/schemas/IisWebApplicationsUpdateProperties'
          x-ms-client-flatten: true
      type: object
    IisWebApplicationsUpdateProperties:
      type: object
      description: The updatable properties of the IisWebApplications.
      properties:
        tags:
          type: object
          description: Gets or sets tags on the resource.
          additionalProperties:
            type: string
    IisWebServerProperties:
      type: object
      description: Class for web server properties.
      properties:
        configurationLocation:
          type: string
          description: Gets the configuration location.
          readOnly: true
        version:
          type: string
          description: Gets the configuration location.
          readOnly: true
        machineIds:
          type: array
          description: Gets the list of machines.
          items:
            type: string
          readOnly: true
        webApplications:
          type: array
          description: Gets the list of web applications.
          items:
            type: string
          readOnly: true
        displayName:
          type: string
          description: Gets the display name.
          readOnly: true
        serverFqdn:
          type: string
          description: Gets the server FQDN.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets the run as account id.
          readOnly: true
        isDeleted:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking creation of the entity.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last update operation.
          readOnly: true
        serverType:
          type: string
          description: Gets the server type.
          readOnly: true
        errors:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets a value indicating whether the WebApp has errors or not.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    IisWebServers:
      description: Web server REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/IisWebServerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    IisWebServersListResult:
      type: object
      description: The response of a IisWebServers list operation.
      properties:
        value:
          type: array
          description: The IisWebServers items on this page
          items:
            $ref: '#/components/schemas/IisWebServers'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ImportJob:
      description: A host resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    ImportJobListResult:
      type: object
      description: The response of a ImportJob list operation.
      properties:
        value:
          type: array
          description: The ImportJob items on this page
          items:
            $ref: '#/components/schemas/ImportJob'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ImportMachine:
      description: An machine resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/ImportMachineProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    ImportMachineListResult:
      type: object
      description: The response of a ImportMachine list operation.
      properties:
        value:
          type: array
          description: The ImportMachine items on this page
          items:
            $ref: '#/components/schemas/ImportMachine'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ImportMachineProperties:
      type: object
      description: Class for machine properties.
      properties:
        firmware:
          type: string
          description: Firmware of the machine.
          readOnly: true
        percentageCpuUtilization:
          type: number
          format: float
          description: CPU utilization.
          readOnly: true
        percentageMemoryUtilization:
          type: number
          format: float
          description: Memory utilization.
          readOnly: true
        numberOfDisks:
          type: integer
          format: int32
          description: Number of disks.
          readOnly: true
        totalDiskReadOperationsPerSecond:
          type: number
          format: float
          description: Total disk read operations per second.
          readOnly: true
        totalDiskWriteOperationsPerSecond:
          type: number
          format: float
          description: Total disk write operations per second.
          readOnly: true
        totalDiskWriteThroughput:
          type: number
          format: float
          description: Total disk write throughput.
          readOnly: true
        totalDiskReadThroughput:
          type: number
          format: float
          description: Total disk read throughput.
          readOnly: true
        macAddress:
          type: string
          description: MAC Address.
          readOnly: true
        ipAddresses:
          type: array
          description: IP Addresses.
          items:
            type: string
          readOnly: true
        machineId:
          type: string
          description: Machine ID.
          readOnly: true
        machineManagerId:
          type: string
          description: Machine manager ID.
          readOnly: true
        numberOfNetworkAdapters:
          type: integer
          format: int32
          description: Number of network adapters.
          readOnly: true
        networkInThroughput:
          type: number
          format: float
          description: Network in throughput.
          readOnly: true
        networkOutThroughput:
          type: number
          format: float
          description: Network out throughput.
          readOnly: true
        serverType:
          type: string
          description: Server type.
          readOnly: true
        hypervisor:
          type: string
          description: Fabric type.
          readOnly: true
        hypervisorVersionNumber:
          type: string
          description: Hypervisor version number.
          readOnly: true
        disks:
          type: array
          description: Disks attached to the machine.
          items:
            $ref: '#/components/schemas/WebRoleImportDisk'
          readOnly: true
          x-ms-identifiers:
            - name
        vmFqdn:
          type: string
          description: Server FQDN.
          readOnly: true
        storageInUseGb:
          type: number
          format: float
          description: Total storage in use.
          readOnly: true
        numberOfProcessorCore:
          type: integer
          format: int32
          description: |-
            Gets or sets the Number of Processor Cores 
                        allocated for the
            machine.
        allocatedMemoryInMb:
          type: number
          format: double
          description: Gets or sets the allocated Memory in MB.
        operatingSystemDetails:
          $ref: '#/components/schemas/WebRoleOperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        biosSerialNumber:
          type: string
          description: Gets or sets the Machine BIOS serial number.
        biosGuid:
          type: string
          description: Gets or sets the BIOS GUID.
        displayName:
          type: string
          description: Gets the Display name of the machine.
          readOnly: true
        isDeleted:
          type: boolean
          description: Value indicating whether VM is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the marking machine creation.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the machine.
          readOnly: true
        tags:
          type: object
          description: machine tags
          additionalProperties:
            type: string
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
      required:
        - tags
    ImportMachinesJob:
      description: Import machines Job REST Resource.
      properties:
        type:
          type: string
          description: |-
            Handled by resource provider. Type =
            Microsoft.OffAzure/ImportSites/jobs/importJobs.
          readOnly: true
        properties:
          $ref: '#/components/schemas/ImportMachinesJobProperties'
          description: Gets or sets the import job properties.
        id:
          type: string
          description: Gets or sets the relative ARM name to get job.
        name:
          type: string
          description: Gets or sets the Job ID.
        status:
          type: string
          description: Gets or sets the Job status.
        startTime:
          type: string
          description: Gets or sets the Job start time.
        endTime:
          type: string
          description: Gets or sets the Job end time.
        displayName:
          type: string
          description: Gets or sets the Display name.
      type: object
    ImportMachinesJobProperties:
      type: object
      description: ImportMachines JobProperties
      properties:
        blobName:
          type: string
          description: blob name
        blobSasUri:
          type: string
          description: blob sasUri
        jobResult:
          $ref: '#/components/schemas/JobResult'
          description: job Result
        numberOfMachinesImported:
          type: integer
          format: int32
          description: number Of Machines Imported
        blobCreationTimeStamp:
          type: string
          format: date-time
          description: blob Creation TimeStamp
        errorSummary:
          $ref: '#/components/schemas/JobErrorSummary'
          description: error summary
    ImportSite:
      description: A ImportSite
      properties:
        properties:
          $ref: '#/components/schemas/ImportSiteProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ImportSiteListResult:
      type: object
      description: The response of a ImportSite list operation.
      properties:
        value:
          type: array
          description: The ImportSite items on this page
          items:
            $ref: '#/components/schemas/ImportSite'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ImportSiteProperties:
      type: object
      description: The properties of ImportSiteResource
      properties:
        discoverySolutionId:
          type: string
          description: Gets or sets the ARM ID of migration hub solution for SDS.
        masterSiteId:
          type: string
          description: Gets the Master Site this site is linked to.
          readOnly: true
        serviceEndpoint:
          type: string
          description: Gets the service endpoint.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    ImportSiteUpdate:
      description: The type used for update operations of the ImportSite.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ImportSiteUpdateProperties'
          x-ms-client-flatten: true
      type: object
    ImportSiteUpdateProperties:
      type: object
      description: The updatable properties of the ImportSite.
      properties:
        discoverySolutionId:
          type: string
          description: Gets or sets the ARM ID of migration hub solution for SDS.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    ImportTypeValues:
      type: string
      description: ImportTypeValues enum.
      enum:
        - AzureMigrateCSV
        - RVToolsXlsx
      x-ms-enum:
        name: ImportTypeValues
        modelAsString: true
        values:
          - name: AzureMigrateCSV
            value: AzureMigrateCSV
            description: AzureMigrateCSV value.
          - name: RVToolsXlsx
            value: RVToolsXlsx
            description: RVToolsXlsx value.
    JobErrorSummary:
      type: object
      description: Job Error Summary
      properties:
        errors:
          type: array
          description: errors list
          items:
            type: string
        errorCount:
          type: integer
          format: int32
          description: error count
        warningCount:
          type: integer
          format: int32
          description: warning Count
    JobProperties:
      type: object
      description: Job REST Resource.
      properties:
        status:
          type: string
          description: Gets operation status.
          readOnly: true
        startTime:
          type: string
          description: Gets operation start time.
          readOnly: true
        endTime:
          type: string
          description: Gets operation end time.
          readOnly: true
        displayName:
          type: string
          description: Gets or sets the display name of the Job.
          readOnly: true
        clientRequestId:
          type: string
          description: Gets the client request Id used in the operation execution context.
          readOnly: true
        activityId:
          type: string
          description: Gets the activity Id used in the operation execution context.
          readOnly: true
        errors:
          type: array
          description: Gets the errors.
          items:
            $ref: '#/components/schemas/ErrorDetails'
          readOnly: true
          x-ms-identifiers: []
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    JobResult:
      type: string
      description: JobResultValues
      enum:
        - Unknown
        - Completed
        - CompletedWithWarnings
        - CompletedWithErrors
        - Failed
        - WaitingForBlobUpload
        - InProgress
      x-ms-enum:
        name: JobResult
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Completed
            value: Completed
            description: Completed value.
          - name: CompletedWithWarnings
            value: CompletedWithWarnings
            description: CompletedWithWarnings value.
          - name: CompletedWithErrors
            value: CompletedWithErrors
            description: CompletedWithErrors value.
          - name: Failed
            value: Failed
            description: Failed value.
          - name: WaitingForBlobUpload
            value: WaitingForBlobUpload
            description: WaitingForBlobUpload value.
          - name: InProgress
            value: InProgress
            description: InProgress value.
    MachineMetadata:
      type: object
      description: The properties of Machine MetaData
      properties:
        machineArmId:
          type: string
          description: arm id of the machine.
        dependencyMapping:
          type: string
          description: value representing state of dependency mapping (enabled/disabled).
        tags:
          type: object
          description: machine tags
          additionalProperties:
            type: string
      required:
        - machineArmId
        - dependencyMapping
        - tags
    MachineMetadataCollection:
      type: object
      description: The list of Machine MetaData.
      properties:
        value:
          type: array
          description: The list of Machine MetaData.
          items:
            $ref: '#/components/schemas/MachineMetadata'
          x-ms-identifiers: []
      required:
        - value
    MachineResource:
      description: An machine resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/VmwareMachineProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    MachineResourceListResult:
      type: object
      description: The response of a MachineResource list operation.
      properties:
        value:
          type: array
          description: The MachineResource items on this page
          items:
            $ref: '#/components/schemas/MachineResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    MachineResourceUpdate:
      description: The type used for update operations of the MachineResource.
      properties:
        properties:
          $ref: '#/components/schemas/MachineResourceUpdateProperties'
          x-ms-client-flatten: true
      type: object
    MachineResourceUpdateProperties:
      type: object
      description: The updatable properties of the MachineResource.
      properties:
        firmware:
          type: string
          description: Gets or sets the firmware.
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the machine.
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        numberOfProcessorCore:
          type: integer
          format: int32
          description: |-
            Gets or sets the Number of Processor Cores 
                        allocated for the
            machine.
        allocatedMemoryInMb:
          type: number
          format: double
          description: Gets or sets the allocated Memory in MB.
        operatingSystemDetails:
          $ref: '#/components/schemas/OperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        biosSerialNumber:
          type: string
          description: Gets or sets the Machine BIOS serial number.
        biosGuid:
          type: string
          description: Gets or sets the BIOS GUID.
        tags:
          type: object
          description: Gets or sets tags on the VMware machine.
          additionalProperties:
            type: string
    MachineSoftwareInventoryProperties:
      type: object
      description: Class for machine software inventory properties.
      properties:
        appsAndRoles:
          $ref: '#/components/schemas/AppsAndRoles'
          description: Apps And Roles of the machine entity.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    MasterSite:
      description: A MasterSite
      properties:
        properties:
          $ref: '#/components/schemas/MasterSiteProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MasterSiteListResult:
      type: object
      description: The response of a MasterSite list operation.
      properties:
        value:
          type: array
          description: The MasterSite items on this page
          items:
            $ref: '#/components/schemas/MasterSite'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    MasterSiteProperties:
      type: object
      description: Class for site properties.
      properties:
        publicNetworkAccess:
          $ref: '#/components/schemas/MasterSitePropertiesPublicNetworkAccess'
          description: Gets or sets the state of public network access.
        allowMultipleSites:
          type: boolean
          description: |-
            Gets or sets a value indicating whether multiple sites per site type are
            allowed.
        sites:
          type: array
          description: |-
            Gets or sets the sites that are a part of Master Site.
                        The key
            should contain the Site ARM name.
          items:
            type: string
        customerStorageAccountArmId:
          type: string
          description: Gets or sets a value for customer storage account ARM id.
        privateEndpointConnections:
          type: array
          description: Gets the private endpoint connections.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          readOnly: true
        nestedSites:
          type: array
          description: Gets the nested sites under Master Site.
          items:
            type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    MasterSitePropertiesPublicNetworkAccess:
      type: string
      description: PublicNetworkAccess
      enum:
        - NotSpecified
        - Enabled
        - Disabled
      x-ms-enum:
        name: MasterSitePropertiesPublicNetworkAccess
        modelAsString: true
        values:
          - name: NotSpecified
            value: NotSpecified
            description: NotSpecified value.
          - name: Enabled
            value: Enabled
            description: Enabled value.
          - name: Disabled
            value: Disabled
            description: Disabled value.
    MasterSiteUpdate:
      description: The type used for update operations of the MasterSite.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/MasterSiteUpdateProperties'
          x-ms-client-flatten: true
      type: object
    MasterSiteUpdateProperties:
      type: object
      description: The updatable properties of the MasterSite.
      properties:
        publicNetworkAccess:
          $ref: '#/components/schemas/MasterSitePropertiesPublicNetworkAccess'
          description: Gets or sets the state of public network access.
        allowMultipleSites:
          type: boolean
          description: |-
            Gets or sets a value indicating whether multiple sites per site type are
            allowed.
        sites:
          type: array
          description: |-
            Gets or sets the sites that are a part of Master Site.
                        The key
            should contain the Site ARM name.
          items:
            type: string
        customerStorageAccountArmId:
          type: string
          description: Gets or sets a value for customer storage account ARM id.
    MicrosoftAzureFDSWebRoleHealthErrorDetailsSource:
      type: string
      description: HealthError Details Source
      enum:
        - RefreshFabricLayout
        - RefreshFabricLayoutGuest
        - RefreshFabricLayoutDependencyMap
      x-ms-enum:
        name: MicrosoftAzureFDSWebRoleHealthErrorDetailsSource
        modelAsString: true
        values:
          - name: RefreshFabricLayout
            value: RefreshFabricLayout
            description: RefreshFabricLayout value.
          - name: RefreshFabricLayoutGuest
            value: RefreshFabricLayoutGuest
            description: RefreshFabricLayoutGuest value.
          - name: RefreshFabricLayoutDependencyMap
            value: RefreshFabricLayoutDependencyMap
            description: RefreshFabricLayoutDependencyMap value.
    Object:
      description: object model
      properties: {}
      type: object
    OperatingSystem:
      type: object
      description: Second level object returned as part of Machine REST resource.
      properties:
        osType:
          type: string
          description: Gets or sets the type of the operating system.
        osName:
          type: string
          description: Gets or sets the Name of the operating system.
        osVersion:
          type: string
          description: Gets or sets the Version of the operating system.
        osArchitecture:
          type: string
          description: Gets or sets the Architecture of the operating system.
    OperationStatus:
      description: Operation status REST resource.
      properties:
        id:
          type: string
          description: Gets the Id.
          readOnly: true
        name:
          type: string
          description: Gets the operation name.
          readOnly: true
        status:
          type: string
          description: |-
            Gets the status of the operation. ARM expects the terminal status to be one
            of
                        Succeeded/ Failed/ Canceled. All other values imply that the
            operation is still running.
          readOnly: true
        startTime:
          type: string
          description: Gets the start time.
          readOnly: true
        endTime:
          type: string
          description: Gets the start time.
          readOnly: true
        error:
          $ref: '#/components/schemas/OperationStatusError'
          description: Gets the error.
          readOnly: true
        properties:
          $ref: '#/components/schemas/OperationStatusProperties'
          description: Operation status properties
          readOnly: true
      type: object
    OperationStatusError:
      type: object
      description: Class for operation status errors.
      properties:
        code:
          type: string
          description: Gets the error code.
          readOnly: true
        message:
          type: string
          description: Gets the error message.
          readOnly: true
    OperationStatusProperties:
      type: object
      description: Class for operation result properties.
      properties:
        result:
          type: string
          description: Gets or sets the result or output of the workflow.
    OracleDiscovery:
      type: object
      description: Data related to a machine's Oracle discovery.
      properties:
        totalInstanceCount:
          type: integer
          format: int64
          description: Gets or sets number of successfully discovered instances.
        totalDatabaseCount:
          type: integer
          format: int64
          description: Gets or sets number of successfully discovered databases.
        shallowDiscoveryStatus:
          $ref: '#/components/schemas/ShallowDiscoveryStatus'
          description: Gets or sets status of partner shallow discovery.
        discoveryScopeStatus:
          $ref: '#/components/schemas/DiscoveryScopeStatus'
          description: Gets or sets status of partner discovery.
    OtherDatabase:
      type: object
      description: OtherDatabase in the guest virtual machine.
      properties:
        databaseType:
          type: string
          description: Gets or sets DatabaseType of the OtherDatabase.
          readOnly: true
        instance:
          type: string
          description: Gets or sets Instance of the OtherDatabase.
          readOnly: true
        version:
          type: string
          description: Gets or sets Version of the OtherDatabase.
          readOnly: true
    PagedDeleteImportMachinesJob:
      type: object
      description: Paged collection of DeleteImportMachinesJob items
      properties:
        value:
          type: array
          description: The DeleteImportMachinesJob items on this page
          items:
            $ref: '#/components/schemas/DeleteImportMachinesJob'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          type: string
          description: The link to the next page of items
          readOnly: true
    PagedExportImportedMachinesJob:
      type: object
      description: Paged collection of ExportImportedMachinesJob items
      properties:
        value:
          type: array
          description: The ExportImportedMachinesJob items on this page
          items:
            $ref: '#/components/schemas/ExportImportedMachinesJob'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          type: string
          description: The link to the next page of items
          readOnly: true
    PagedImportMachinesJob:
      type: object
      description: Paged collection of ImportMachinesJob items
      properties:
        value:
          type: array
          description: The ImportMachinesJob items on this page
          items:
            $ref: '#/components/schemas/ImportMachinesJob'
          readOnly: true
          x-ms-identifiers: []
        nextLink:
          type: string
          description: The link to the next page of items
          readOnly: true
    PrivateEndpointConnection:
      description: REST model used to encapsulate Private Link properties for tracked resources.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionPropertiesV2'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    PrivateEndpointConnectionListResult:
      type: object
      description: The response of a PrivateEndpointConnection list operation.
      properties:
        value:
          type: array
          description: The PrivateEndpointConnection items on this page
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    PrivateEndpointConnectionPropertiesV2:
      type: object
      description: PrivateEndpointConnectionProperties V2
      properties:
        groupIds:
          type: array
          description: array of group ids
          items:
            type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
        privateEndpoint:
          $ref: '#/components/schemas/ResourceId'
          description: private endpoints
          readOnly: true
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: private endpoints connection state
    PrivateLinkResource:
      description: REST model used to encapsulate Private Link properties for tracked resources.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    PrivateLinkResourceListResult:
      type: object
      description: The response of a PrivateLinkResource list operation.
      properties:
        value:
          type: array
          description: The PrivateLinkResource items on this page
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    PrivateLinkResourceProperties:
      type: object
      description: private link resource properties model
      properties:
        requiredMembers:
          type: array
          description: required members
          items:
            type: string
        requiredZoneNames:
          type: array
          description: required zone names
          items:
            type: string
        groupId:
          type: string
          description: group id
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    PrivateLinkServiceConnectionState:
      type: object
      description: Service Connection State
      properties:
        status:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionStateStatus'
          description: state status
        description:
          type: string
          description: description string
        actionsRequired:
          type: string
          description: actions required
    PrivateLinkServiceConnectionStateStatus:
      type: string
      description: PrivateLinkServiceConnectionState
      enum:
        - Approved
        - Pending
        - Rejected
        - Disconnected
      x-ms-enum:
        name: PrivateLinkServiceConnectionStateStatus
        modelAsString: true
        values:
          - name: Approved
            value: Approved
            description: Approved value.
          - name: Pending
            value: Pending
            description: Pending value.
          - name: Rejected
            value: Rejected
            description: Rejected value.
          - name: Disconnected
            value: Disconnected
            description: Disconnected value.
    ProcessorInfo:
      type: object
      description: Processor Information.
      properties:
        name:
          type: string
          description: Gets or sets the name\model of a processor.
        numberOfSockets:
          type: integer
          format: int32
          description: Gets or sets the number of sockets.
        numberOfCoresPerSocket:
          type: integer
          format: int32
          description: Gets or sets the total number of cores in a socket.
    ProductSupportStatus:
      type: object
      description: product support status.
      properties:
        currentVersion:
          type: string
          description: current version.
        esuStatus:
          $ref: '#/components/schemas/esuStatus'
          description: esu status.
        supportStatus:
          $ref: '#/components/schemas/supportStatus'
          description: support status.
        supportEndDate:
          type: string
          format: date-time
          description: support end date.
        esuYear:
          $ref: '#/components/schemas/esuYear'
          description: esu year.
    ProvisioningState:
      type: string
      description: The status of the current operation.
      enum:
        - Created
        - Updated
        - Running
        - Completed
        - Failed
        - Succeeded
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Created
            value: Created
            description: Created value.
          - name: Updated
            value: Updated
            description: Updated value.
          - name: Running
            value: Running
            description: Running value.
          - name: Completed
            value: Completed
            description: Completed value.
          - name: Failed
            value: Failed
            description: Failed value.
          - name: Succeeded
            value: Succeeded
            description: Succeeded value.
          - name: Canceled
            value: Canceled
            description: Canceled value.
    ProxySiteRefreshBody:
      type: object
      description: Request body for Proxy site refresh action.
      properties:
        applianceName:
          type: string
          description: Gets or sets the appliance name of the agent in the site.
    RequestExportMachineErrorsProperties:
      type: object
      description: The Properties class for export machine errors request body.
      properties:
        discoveryScope:
          $ref: '#/components/schemas/ExportMachineErrorsProperties'
          description: Gets or sets the discovery scope.
    ResourceId:
      type: object
      description: PrivateEndpointModelsResourceId
      properties:
        id:
          type: string
          description: id name
          readOnly: true
    RunAsAccountMachineInput:
      type: object
      description: Machine class.
      properties:
        machineId:
          type: string
          description: Gets or sets the ARM id of the machine.
        runAsAccountId:
          type: string
          description: run as AccountId
    RunAsAccountProperties:
      type: object
      description: Class for run as account properties.
      properties:
        displayName:
          type: string
          description: Display name of the run as account.
          readOnly: true
        credentialType:
          type: string
          description: Gets the credential type of the run as account.
          readOnly: true
        createdTimestamp:
          type: string
          description: Timestamp marking run as account creation.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Timestamp marking last updated on the run as account.
          readOnly: true
        applianceName:
          type: string
          description: Gets the appliance name of the run as account.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    SQLDiscoveryScopeStatus:
      type: string
      description: SQLDiscoveryScope Status
      enum:
        - DiscoverySucceededAtleastOnce
        - DiscoveryFailed
        - RunAsAccountNotAssociated
        - DiscoveryNotStarted
        - DiscoveryInProgress
        - Disabled
        - DiscoveryPartiallySucceded
        - DiscoverySucceeded
      x-ms-enum:
        name: SQLDiscoveryScopeStatus
        modelAsString: true
        values:
          - name: DiscoverySucceededAtleastOnce
            value: DiscoverySucceededAtleastOnce
            description: DiscoverySucceededAtleastOnce value.
          - name: DiscoveryFailed
            value: DiscoveryFailed
            description: DiscoveryFailed value.
          - name: RunAsAccountNotAssociated
            value: RunAsAccountNotAssociated
            description: RunAsAccountNotAssociated value.
          - name: DiscoveryNotStarted
            value: DiscoveryNotStarted
            description: DiscoveryNotStarted value.
          - name: DiscoveryInProgress
            value: DiscoveryInProgress
            description: DiscoveryInProgress value.
          - name: Disabled
            value: Disabled
            description: Disabled value.
          - name: DiscoveryPartiallySucceded
            value: DiscoveryPartiallySucceded
            description: DiscoveryPartiallySucceded value.
          - name: DiscoverySucceeded
            value: DiscoverySucceeded
            description: DiscoverySucceeded value.
    SasUriResponse:
      type: object
      description: Import URI response class.
      properties:
        jobArmId:
          type: string
          description: Gets or sets the job ARM ID.
        uri:
          type: string
          description: Gets or sets the SAS URI.
        importType:
          $ref: '#/components/schemas/ImportTypeValues'
          description: Gets or sets the import type.
          default: AzureMigrateCSV
    Server:
      description: A machine resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/ServerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    ServerDisk:
      type: object
      description: Server disk details.
      properties:
        id:
          type: string
          description: Gets or sets Id of the disk.
        generatedId:
          type: string
          description: Gets or sets generated Id of the disk.
        maxSizeInBytes:
          type: integer
          format: int32
          description: Gets or sets Bytes allocated for the disk.
        name:
          type: string
          description: Gets or sets Name of the disk.
        diskType:
          type: string
          description: Gets or sets Type of the disk.
        lun:
          type: integer
          format: int32
          description: Gets or sets LUN of the disk.
        path:
          type: string
          description: Gets or sets Path of the disk.
    ServerJob:
      description: A host resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    ServerJobListResult:
      type: object
      description: The response of a ServerJob list operation.
      properties:
        value:
          type: array
          description: The ServerJob items on this page
          items:
            $ref: '#/components/schemas/ServerJob'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ServerListResult:
      type: object
      description: The response of a Server list operation.
      properties:
        value:
          type: array
          description: The Server items on this page
          items:
            $ref: '#/components/schemas/Server'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ServerNetworkAdapter:
      type: object
      description: Second level object represented in responses as part of Machine REST resource.
      properties:
        nicId:
          type: string
          description: Gets or sets the NIC Id.
        macAddress:
          type: string
          description: Gets or sets Mac address of the NIC.
        ipAddressList:
          type: array
          description: Gets IP addresses for the machine.
          items:
            type: string
          readOnly: true
        networkName:
          type: string
          description: Gets or sets Network Name.
        ipAddressType:
          type: string
          description: Gets or sets Type of the IP address.
    ServerProperties:
      type: object
      description: Server REST resource.
      properties:
        displayName:
          type: string
          description: |-
            Gets the Display name of the machine.
                        For server entity hydrated
            FQDN is set as display name
                        as the server id and server name are
            same.
          readOnly: true
        fqdn:
          type: string
          description: Gets or sets the FQDN/IPAddress of the server.
        networkAdapters:
          type: array
          description: Gets or sets the network adapters of the server.
          items:
            $ref: '#/components/schemas/ServerNetworkAdapter'
          x-ms-identifiers: []
        hydratedFqdn:
          type: string
          description: Gets or sets the FQDN of machine which can be changed.
        disks:
          type: array
          description: Gets or sets the disk details of server.
          items:
            $ref: '#/components/schemas/ServerDisk'
        validationRequired:
          type: string
          description: Gets or sets the validation required for the machine.
        processorInfo:
          $ref: '#/components/schemas/ProcessorInfo'
          description: Processor Info of the Server machine.
          readOnly: true
        firmware:
          type: string
          description: Gets or sets the firmware.
        guestOsDetails:
          $ref: '#/components/schemas/GuestOsDetails'
          description: |-
            Operating System Details extracted from the guest
                        bu executing
            script inside the guest VM.
          readOnly: true
        numberOfApplications:
          type: integer
          format: int32
          description: Number of applications installed in the guest VM.
          readOnly: true
        guestDetailsDiscoveryTimestamp:
          type: string
          format: date-time
          description: |-
            The last time at which the Guest Details was discovered
                        or the
            error while discovering guest details based discovery
                        of the
            machine.
          readOnly: true
        isGuestDetailsDiscoveryInProgress:
          type: boolean
          description: |-
            Whether Refresh Fabric Layout Guest Details has been completed once.
                     
              Portal will show discovery in progress, if this value is true.
          readOnly: true
        dependencyMapping:
          type: string
          description: |-
            Gets or sets if dependency mapping feature is enabled or not
                        for
            the VM.
          readOnly: true
        dependencyMappingStartTime:
          type: string
          format: date-time
          description: Gets or sets when dependency mapping collection is last started.
          readOnly: true
        dependencyMappingEndTime:
          type: string
          description: Gets or sets when dependency mapping collection was last disabled.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the machine.
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        errors:
          type: array
          description: Errors for machine.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applicationDiscovery:
          $ref: '#/components/schemas/ApplicationDiscovery'
          description: Gets the data related to application discovery.
          readOnly: true
        dependencyMapDiscovery:
          $ref: '#/components/schemas/DependencyMapDiscovery'
          description: Gets the data related to dependency map discovery.
          readOnly: true
        staticDiscovery:
          $ref: '#/components/schemas/StaticDiscovery'
          description: Gets the data related to static discovery.
          readOnly: true
        sqlDiscovery:
          $ref: '#/components/schemas/SqlDiscovery'
          description: Gets the data related to SQL discovery.
          readOnly: true
        webAppDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to Web application discovery.
          readOnly: true
        oracleDiscovery:
          $ref: '#/components/schemas/OracleDiscovery'
          description: Gets the data related to Oracle discovery.
          readOnly: true
        springBootDiscovery:
          $ref: '#/components/schemas/SpringBootDiscovery'
          description: Gets the data related to SpringBoot discovery.
          readOnly: true
        iisDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to iis discovery.
          readOnly: true
        tomcatDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to tomcat discovery.
          readOnly: true
        appsAndRoles:
          $ref: '#/components/schemas/AppsAndRoles'
          description: Apps And Roles of the Server.
          readOnly: true
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        numberOfProcessorCore:
          type: integer
          format: int32
          description: |-
            Gets or sets the Number of Processor Cores 
                        allocated for the
            machine.
        allocatedMemoryInMb:
          type: number
          format: float
          description: Gets or sets the allocated Memory in MB.
        operatingSystemDetails:
          $ref: '#/components/schemas/OperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        biosSerialNumber:
          type: string
          description: Gets or sets the Machine BIOS serial number.
        biosGuid:
          type: string
          description: Gets or sets the BIOS GUID.
        isDeleted:
          type: boolean
          description: Value indicating whether VM is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the marking machine creation.
          readOnly: true
        tags:
          type: object
          description: Gets or sets tags on the Server machine.
          additionalProperties:
            $ref: '#/components/schemas/Azure.ResourceManager.Object'
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the machine.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the server resource.
    ServerRunAsAccount:
      description: A run as account resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/RunAsAccountProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    ServerRunAsAccountListResult:
      type: object
      description: The response of a ServerRunAsAccount list operation.
      properties:
        value:
          type: array
          description: The ServerRunAsAccount items on this page
          items:
            $ref: '#/components/schemas/ServerRunAsAccount'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ServerSiteResource:
      description: A ServerSiteResource
      properties:
        properties:
          $ref: '#/components/schemas/SitesProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ServerSiteResourceListResult:
      type: object
      description: The response of a ServerSiteResource list operation.
      properties:
        value:
          type: array
          description: The ServerSiteResource items on this page
          items:
            $ref: '#/components/schemas/ServerSiteResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ServerSiteResourceUpdate:
      description: The type used for update operations of the ServerSiteResource.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ServerSiteResourceUpdateProperties'
          x-ms-client-flatten: true
      type: object
    ServerSiteResourceUpdateProperties:
      type: object
      description: The updatable properties of the ServerSiteResource.
      properties:
        servicePrincipalIdentityDetails:
          $ref: '#/components/schemas/SiteSpnProperties'
          description: |-
            Gets or sets the service principal identity details used by agent for
            communication
                        to the service.
        agentDetails:
          $ref: '#/components/schemas/SiteAgentProperties'
          description: Gets or sets the on-premises agent details.
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
        discoverySolutionId:
          type: string
          description: Gets or sets the ARM ID of migration hub solution for SDS.
    ServerSiteUsage:
      type: object
      description: Server site usage.
      properties:
        runAsAccountCount:
          type: integer
          format: int32
          description: Gets or sets the number of run as accounts in the site.
        serverCount:
          type: integer
          format: int32
          description: Gets or sets the number of servers part of the site.
    ServerSiteUsageResponse:
      type: object
      description: The properties of ServerSiteUsageResponse.
      properties:
        runAsAccounts:
          type: integer
          format: int32
          description: Gets or sets the number of run as accounts in the site.
        serverCount:
          type: integer
          format: int32
          description: Gets or sets the number of servers part of the site.
      required:
        - runAsAccounts
        - serverCount
    ServerSoftwareInventory:
      description: An software inventory resource belonging to a server resource.
      properties:
        properties:
          $ref: '#/components/schemas/MachineSoftwareInventoryProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    ServerSoftwareInventoryListResult:
      type: object
      description: The response of a ServerSoftwareInventory list operation.
      properties:
        value:
          type: array
          description: The ServerSoftwareInventory items on this page
          items:
            $ref: '#/components/schemas/ServerSoftwareInventory'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    ServerUpdate:
      description: The type used for update operations of the Server.
      properties:
        properties:
          $ref: '#/components/schemas/ServerUpdateProperties'
          x-ms-client-flatten: true
      type: object
    ServerUpdateProperties:
      type: object
      description: The updatable properties of the Server.
      properties:
        fqdn:
          type: string
          description: Gets or sets the FQDN/IPAddress of the server.
        networkAdapters:
          type: array
          description: Gets or sets the network adapters of the server.
          items:
            $ref: '#/components/schemas/ServerNetworkAdapter'
          x-ms-identifiers: []
        hydratedFqdn:
          type: string
          description: Gets or sets the FQDN of machine which can be changed.
        disks:
          type: array
          description: Gets or sets the disk details of server.
          items:
            $ref: '#/components/schemas/ServerDisk'
        validationRequired:
          type: string
          description: Gets or sets the validation required for the machine.
        firmware:
          type: string
          description: Gets or sets the firmware.
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the machine.
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        numberOfProcessorCore:
          type: integer
          format: int32
          description: |-
            Gets or sets the Number of Processor Cores 
                        allocated for the
            machine.
        allocatedMemoryInMb:
          type: number
          format: float
          description: Gets or sets the allocated Memory in MB.
        operatingSystemDetails:
          $ref: '#/components/schemas/OperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        biosSerialNumber:
          type: string
          description: Gets or sets the Machine BIOS serial number.
        biosGuid:
          type: string
          description: Gets or sets the BIOS GUID.
        tags:
          type: object
          description: Gets or sets tags on the Server machine.
          additionalProperties:
            $ref: '#/components/schemas/Azure.ResourceManager.Object'
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the server resource.
    ShallowDiscoveryStatus:
      type: string
      description: Shallow Discovery Status.
      enum:
        - DiscoverySucceededAtleastOnce
        - DiscoveryFailed
        - RunAsAccountNotAssociated
        - DiscoveryNotStarted
        - DiscoveryInProgress
        - Disabled
        - DiscoveryPartiallySucceded
        - DiscoverySucceeded
      x-ms-enum:
        name: ShallowDiscoveryStatus
        modelAsString: true
        values:
          - name: DiscoverySucceededAtleastOnce
            value: DiscoverySucceededAtleastOnce
            description: DiscoverySucceededAtleastOnce value.
          - name: DiscoveryFailed
            value: DiscoveryFailed
            description: DiscoveryFailed value.
          - name: RunAsAccountNotAssociated
            value: RunAsAccountNotAssociated
            description: RunAsAccountNotAssociated value.
          - name: DiscoveryNotStarted
            value: DiscoveryNotStarted
            description: DiscoveryNotStarted value.
          - name: DiscoveryInProgress
            value: DiscoveryInProgress
            description: DiscoveryInProgress value.
          - name: Disabled
            value: Disabled
            description: Disabled value.
          - name: DiscoveryPartiallySucceded
            value: DiscoveryPartiallySucceded
            description: DiscoveryPartiallySucceded value.
          - name: DiscoverySucceeded
            value: DiscoverySucceeded
            description: DiscoverySucceeded value.
    SharePointServer:
      type: object
      description: SharePointServer in the guest virtual machine.
      properties:
        productName:
          type: string
          description: Gets or sets ProductName of the SharePointServer.
          readOnly: true
        isEnterprise:
          type: boolean
          description: Gets or sets a value indicating whether the SharePointServer is Enterprise.
          readOnly: true
        status:
          type: string
          description: Gets or sets Status of the SharePointServer.
          readOnly: true
        version:
          type: string
          description: Gets or sets Version of the SharePointServer.
          readOnly: true
    SiteAgentProperties:
      type: object
      description: Class for site agent properties.
      properties:
        id:
          type: string
          description: Gets the ID of the agent.
          readOnly: true
        version:
          type: string
          description: Gets the version of the agent.
          readOnly: true
        lastHeartBeatUtc:
          type: string
          format: date-time
          description: Gets the last heartbeat time of the agent in UTC.
          readOnly: true
        keyVaultUri:
          type: string
          description: Gets or sets the key vault URI.
        keyVaultId:
          type: string
          description: Gets or sets the key vault ARM Id.
    SiteApplianceProperties:
      type: object
      description: Class for site appliance properties.
      properties:
        servicePrincipalIdentityDetails:
          $ref: '#/components/schemas/SiteSpnProperties'
          description: ' Gets or sets the service principal identity details used by agent for  communication              to the service.  '
        agentDetails:
          $ref: '#/components/schemas/SiteAgentProperties'
          description: Gets or sets the on-premises agent details.
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
    SiteErrorSummary:
      type: object
      description: Site error summary.
      properties:
        applianceName:
          type: string
          description: Appliance Name.
        discoveryScopeErrorSummaries:
          $ref: '#/components/schemas/DiscoveryScopeErrorSummary'
          description: Gets the error message.
        nextLink:
          type: string
          description: The link to fetch more models.
      required:
        - applianceName
        - discoveryScopeErrorSummaries
    SiteHealthSummary:
      type: object
      description: The properties of ServerSiteResource.
      properties:
        applianceName:
          type: string
          description: Gets the appliance name.
          readOnly: true
        errorMessage:
          type: string
          description: Gets the error message.
          readOnly: true
        summaryMessage:
          type: string
          description: Gets the summary message.
          readOnly: true
        errorId:
          type: integer
          format: int64
          description: Gets the error Id.
          readOnly: true
        errorCode:
          type: string
          description: Gets the error code.
          readOnly: true
        affectedObjectsCount:
          type: integer
          format: int64
          description: Gets or sets the count of affected objects.
        hitCount:
          type: integer
          format: int64
          description: Gets or sets the hit count of the error.
        severity:
          type: string
          description: Gets the severity of error.
          readOnly: true
        remediationGuidance:
          type: string
          description: Gets the remediation guidance.
          readOnly: true
        affectedResourceType:
          type: string
          description: Gets the affected resource type.
          readOnly: true
        affectedResources:
          type: array
          description: Gets or sets the affected resources.
          items:
            type: string
        fabricLayoutUpdateSources:
          type: array
          description: Gets or sets sources of the exception.
          items:
            $ref: '#/components/schemas/SiteHealthSummaryFabricLayoutUpdateSourcesItem'
    SiteHealthSummaryCollection:
      type: object
      description: Collection of SiteHealthSummary.
      properties:
        value:
          type: array
          description: Gets the list of SiteHealthSummary.
          items:
            $ref: '#/components/schemas/SiteHealthSummary'
          x-ms-identifiers:
            - applianceName
        nextLink:
          type: string
          description: Gets the value of next link.
          readOnly: true
      required:
        - value
    SiteHealthSummaryFabricLayoutUpdateSourcesItem:
      type: string
      description: SiteHealthSummary FabricLayout UpdateSources
      enum:
        - RefreshFabricLayout
        - RefreshFabricLayoutGuest
        - RefreshFabricLayoutDependencyMap
      x-ms-enum:
        name: SiteHealthSummaryFabricLayoutUpdateSourcesItem
        modelAsString: true
        values:
          - name: RefreshFabricLayout
            value: RefreshFabricLayout
            description: RefreshFabricLayout value.
          - name: RefreshFabricLayoutGuest
            value: RefreshFabricLayoutGuest
            description: RefreshFabricLayoutGuest value.
          - name: RefreshFabricLayoutDependencyMap
            value: RefreshFabricLayoutDependencyMap
            description: RefreshFabricLayoutDependencyMap value.
    SiteProperties:
      type: object
      description: The properties of VMwareSiteResource
      properties:
        masterSiteId:
          type: string
          description: Gets the Master Site this site is linked to.
          readOnly: true
        servicePrincipalIdentityDetails:
          $ref: '#/components/schemas/SiteSpnProperties'
          description: |-
            Gets or sets the service principal identity details used by agent for
            communication
                        to the service.
        agentDetails:
          $ref: '#/components/schemas/SiteAgentProperties'
          description: Gets or sets the on-premises agent details.
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
        discoverySolutionId:
          type: string
          description: Gets or sets the ARM ID of migration hub solution for SDS.
        serviceEndpoint:
          type: string
          description: Gets the service endpoint.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    SiteSpnProperties:
      type: object
      description: Class for site properties.
      properties:
        tenantId:
          type: string
          description: |-
            Gets or sets the tenant Id for the service principal with which the
            on-premise
                        management/data plane components would communicate with
            our Azure services.
        applicationId:
          type: string
          description: |-
            Gets or sets the application/client Id for the service principal with which
            the
                        on-premise management/data plane components would communicate
            with our Azure 
                        services.
        objectId:
          type: string
          description: |-
            Gets or sets the object Id of the service principal with which the on-premise

                       management/data plane components would communicate with our Azure
            services.
        audience:
          type: string
          description: Gets or sets the intended audience for the service principal.
        aadAuthority:
          type: string
          description: |-
            Gets or sets the AAD Authority URL which was used to request the token for
            the
                        service principal.
        rawCertData:
          type: string
          description: Gets or sets the raw certificate data for building certificate expiry flows.
    SitesProperties:
      type: object
      description: The properties of SiteResource
      properties:
        masterSiteId:
          type: string
          description: Gets the Master Site this site is linked to.
          readOnly: true
        servicePrincipalIdentityDetails:
          $ref: '#/components/schemas/SiteSpnProperties'
          description: |-
            Gets or sets the service principal identity details used by agent for
            communication
                        to the service.
        agentDetails:
          $ref: '#/components/schemas/SiteAgentProperties'
          description: Gets or sets the on-premises agent details.
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
        discoverySolutionId:
          type: string
          description: Gets or sets the ARM ID of migration hub solution for SDS.
        serviceEndpoint:
          type: string
          description: Gets the service endpoint.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    SpringBootDiscovery:
      type: object
      description: Data related to a machine's spring boot discovery.
      properties:
        totalInstanceCount:
          type: integer
          format: int64
          description: Gets or sets number of successfully discovered instances.
        totalApplicationCount:
          type: integer
          format: int64
          description: Gets or sets number of successfully discovered applications.
        shallowDiscoveryStatus:
          $ref: '#/components/schemas/ShallowDiscoveryStatus'
          description: Gets or sets status of partner shallow discovery.
        discoveryScopeStatus:
          $ref: '#/components/schemas/DiscoveryScopeStatus'
          description: Gets or sets status of partner discovery.
    SqlAvailabilityGroup:
      description: Class representing the web model of SQL Availability Group.
      properties:
        properties:
          $ref: '#/components/schemas/SqlAvailabilityGroupProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SqlAvailabilityGroupListResult:
      type: object
      description: The response of a SqlAvailabilityGroup list operation.
      properties:
        value:
          type: array
          description: The SqlAvailabilityGroup items on this page
          items:
            $ref: '#/components/schemas/SqlAvailabilityGroup'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SqlAvailabilityGroupProperties:
      type: object
      description: Class for SQL Server availability group properties.
      properties:
        availabilityGroupName:
          type: string
          description: Gets or sets the SQL Availability Group Name.
        availabilityGroupType:
          $ref: '#/components/schemas/SqlAvailabilityGroupPropertiesAvailabilityGroupType'
          description: 'Gets or sets the type of availability group.             Currently there are two types of AGs Traditional and Distributed. '
        isMultiSubNet:
          type: boolean
          description: Gets or sets a value indicating whether AG is multi subnet or not.
        clusterName:
          type: string
          description: Gets or sets the Cluster name where AG is hosted.
        availabilityReplicas:
          type: array
          description: Gets the list of availability replica properties which together forms this availability group.
          items:
            $ref: '#/components/schemas/SqlAvailabilityReplicaProperties'
          readOnly: true
          x-ms-identifiers: []
        parentReplicaOverviewList:
          type: array
          description: |-
            Gets the parent availability replica overview if any.
                        This would be
            set with details of parent AG and AR for cases where this availability group is
            a part of a distributed AG.
                        Currently, we do not populate this
            since discovery and linking of DAG(Distributed Availability Group) is not
            implemented.
          items:
            $ref: '#/components/schemas/SqlAvailabilityReplicaOverview'
          readOnly: true
          x-ms-identifiers: []
        isPartOfDistributedAvailabilityGroup:
          type: boolean
          description: |-
            Gets or sets a value indicating whether this Availability group is part of a
            distributed AG.
        isDeleted:
          type: boolean
          description: Gets or sets a value indicating whether the entity is deleted.
        createdTimestamp:
          type: string
          description: Gets or sets the marking machine creation.
        updatedTimestamp:
          type: string
          description: Gets or sets the timestamp marking last updated on the machine.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    SqlAvailabilityGroupPropertiesAvailabilityGroupType:
      type: string
      description: AvailabilityGroupType
      enum:
        - Unknown
        - Traditional
        - Distributed
      x-ms-enum:
        name: SqlAvailabilityGroupPropertiesAvailabilityGroupType
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Traditional
            value: Traditional
            description: Traditional value.
          - name: Distributed
            value: Distributed
            description: Distributed value.
    SqlAvailabilityGroupReplicaInfo:
      type: object
      description: Class which represents the SQL availability replica properties of type AG.
      properties:
        clusterName:
          type: string
          description: Gets or sets the name of the cluster on which this replica is hosted.
        availabilityGroupName:
          type: string
          description: Gets or sets the name of the availability replica.
        availabilityGroupArmId:
          type: string
          description: Gets or sets the AG ARM ID which are part of this Replica.
    SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode:
      type: string
      description: ReplicaCommitMode
      enum:
        - Unknown
        - Synchronous
        - Asynchronous
      x-ms-enum:
        name: SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Synchronous
            value: Synchronous
            description: Synchronous value.
          - name: Asynchronous
            value: Asynchronous
            description: Asynchronous value.
    SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode:
      type: string
      description: ReplicaReadMode
      enum:
        - Unknown
        - None
        - ReadOnly
        - ReadWrite
      x-ms-enum:
        name: SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: None
            value: None
            description: None value.
          - name: ReadOnly
            value: ReadOnly
            description: ReadOnly value.
          - name: ReadWrite
            value: ReadWrite
            description: ReadWrite value.
    SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode:
      type: string
      description: ReplicaSeedMode
      enum:
        - Unknown
        - Manual
        - Automatic
      x-ms-enum:
        name: SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Manual
            value: Manual
            description: Manual value.
          - name: Automatic
            value: Automatic
            description: Automatic value.
    SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState:
      type: string
      description: ReplicaState
      enum:
        - Unknown
        - Primary
        - Secondary
      x-ms-enum:
        name: SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Primary
            value: Primary
            description: Primary value.
          - name: Secondary
            value: Secondary
            description: Secondary value.
    SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus:
      type: string
      description: ReplicaSyncStatus
      enum:
        - Unknown
        - Synchronized
        - Unsynchronized
      x-ms-enum:
        name: SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Synchronized
            value: Synchronized
            description: Synchronized value.
          - name: Unsynchronized
            value: Unsynchronized
            description: Unsynchronized value.
    SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType:
      type: string
      description: ReplicaType
      enum:
        - Unknown
        - DatabaseReplica
        - AvailabilityGroupReplica
      x-ms-enum:
        name: SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: DatabaseReplica
            value: DatabaseReplica
            description: DatabaseReplica value.
          - name: AvailabilityGroupReplica
            value: AvailabilityGroupReplica
            description: AvailabilityGroupReplica value.
    SqlAvailabilityReplicaOverview:
      type: object
      description: Web model for SQL replica overview.
      properties:
        replicaState:
          $ref: '#/components/schemas/SqlAvailabilityReplicaOverviewReplicaState'
          description: Gets or sets the state of the availability replica.
        availabilityReplicaId:
          type: string
          description: |-
            Gets or sets the SQL Availability Replica Id within the Availability Group this
            database is a part of.
        availabilityGroupArmId:
          type: string
          description: |-
            Gets or sets the Availability Group Id in which this database participates if
            any. It would be set if the database has
            {Microsoft.Azure.FDS.CosmosDB.SqlDatabaseEntity.IsDatabaseHighlyAvailable} has
            a value "true".
        availabilityGroupName:
          type: string
          description: Gets or sets the SQL Availability group name.
    SqlAvailabilityReplicaOverviewReplicaState:
      type: string
      description: Overview Replica State
      enum:
        - Unknown
        - Primary
        - Secondary
      x-ms-enum:
        name: SqlAvailabilityReplicaOverviewReplicaState
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Primary
            value: Primary
            description: Primary value.
          - name: Secondary
            value: Secondary
            description: Secondary value.
    SqlAvailabilityReplicaProperties:
      type: object
      description: Class for SQL Server availability replica properties.
      properties:
        availabilityReplicaName:
          type: string
          description: Gets or sets the SQL Availability Replica Name.
        availabilityReplicaId:
          type: string
          description: Gets or sets the SQL Availability Replica Id.
        replicaType:
          $ref: '#/components/schemas/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaType'
          description: Gets or sets the replica type of the availability group.
        replicaState:
          $ref: '#/components/schemas/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaState'
          description: Gets or sets the state of the availability replica.
        replicaSyncStatus:
          $ref: '#/components/schemas/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSyncStatus'
          description: Gets or sets the synchronization status of the replica.
        replicaCommitMode:
          $ref: '#/components/schemas/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaCommitMode'
          description: Gets or sets the commit mode of the replica.
        replicaReadMode:
          $ref: '#/components/schemas/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaReadMode'
          description: Gets or sets the read mode of the replica.
        replicaSeedMode:
          $ref: '#/components/schemas/SqlAvailabilityGroupSqlAvailabilityReplicaPropertiesReplicaSeedMode'
          description: Gets or sets the seed mode of the replica.
        sqlDatabaseReplicaInfo:
          $ref: '#/components/schemas/SqlDatabaseReplicaInfo'
          description: |-
            Gets or sets the Availability Replica object if Replica is of type database.
            This is null in case Replica is
                        of type AG. This is to be populated
            in case of normal AG.
        sqlAvailabilityGroupReplicaInfo:
          $ref: '#/components/schemas/SqlAvailabilityGroupReplicaInfo'
          description: |-
            Gets or sets the Availability Replica object if Replica is of type AG. This is
            null in case Replica is
                        of type database. This is to be populated
            in case AG is of type DAG.
    SqlDatabasePropertiesV2:
      type: object
      description: Class for SQL Server database properties.
      properties:
        parentReplicaOverview:
          $ref: '#/components/schemas/SqlAvailabilityReplicaOverview'
          description: Gets or sets the Replica overview.
        isDatabaseHighlyAvailable:
          type: boolean
          description: Gets or sets a value indicating whether this database is a part of an HA setup.
        fileMetadataList:
          type: array
          description: Gets the file metadata list.
          items:
            $ref: '#/components/schemas/FileMetaData'
          readOnly: true
          x-ms-identifiers: []
        hostname:
          type: string
          description: Gets or sets the hostname.
        sqlServerName:
          type: string
          description: Gets or sets the SQL Server Id in which the database resides.
        status:
          type: string
          description: Gets or sets the status.
        sizeMb:
          type: number
          format: float
          description: Gets or sets the size in Mb.
        databaseName:
          type: string
          description: Gets or sets the SQL database name.
        sqlServerArmId:
          type: string
          description: Gets or sets the SQL Server ARM Id in which the database resides.
        compatibilityLevel:
          type: string
          description: Gets or sets the database compatibility level.
        isDeleted:
          type: boolean
          description: Gets or sets a value indicating whether the entity is deleted.
        errors:
          type: array
          description: Gets the errors.
          items:
            $ref: '#/components/schemas/Errors'
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets or sets the marking machine creation.
        updatedTimestamp:
          type: string
          description: Gets or sets the timestamp marking last updated on the machine.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    SqlDatabaseReplicaInfo:
      type: object
      description: |-
        Class which represents the SQL availability replica properties of type
        databases.
      properties:
        hostName:
          type: string
          description: Gets or sets the host name of the availability replica.
        sqlServerName:
          type: string
          description: Gets or sets the SQL Server name of the availability replica.
        sqlServerArmId:
          type: string
          description: Gets or sets the SQL Server name of the availability replica.
    SqlDatabaseV2:
      description: Class representing the web model of SQL Database.
      properties:
        properties:
          $ref: '#/components/schemas/SqlDatabasePropertiesV2'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SqlDatabaseV2ListResult:
      type: object
      description: The response of a SqlDatabaseV2 list operation.
      properties:
        value:
          type: array
          description: The SqlDatabaseV2 items on this page
          items:
            $ref: '#/components/schemas/SqlDatabaseV2'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SqlDiscovery:
      type: object
      description: Contains data related SQL discovery.
      properties:
        successfullyDiscoveredServerCount:
          type: integer
          format: int32
          description: ' successfully Discovered ServerCount'
        totalServerCount:
          type: integer
          format: int32
          description: total Server Count
        sqlMetadataHydratedRunAsAccountId:
          type: string
          description: sql Metadata Hydrated RunAsAccountId
        sqlMetadataDiscoveryPipe:
          $ref: '#/components/schemas/SqlMetadataDiscoveryPipe'
          description: sql Metadata DiscoveryPipe
        discoveryScopeStatus:
          $ref: '#/components/schemas/SQLDiscoveryScopeStatus'
          description: discovery Scope Status
    SqlDiscoverySiteDataSource:
      description: A SQL discovery site data source resource.
      properties:
        properties:
          $ref: '#/components/schemas/SqlDiscoverySiteDataSourceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SqlDiscoverySiteDataSourceListResult:
      type: object
      description: The response of a SqlDiscoverySiteDataSource list operation.
      properties:
        value:
          type: array
          description: The SqlDiscoverySiteDataSource items on this page
          items:
            $ref: '#/components/schemas/SqlDiscoverySiteDataSource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SqlDiscoverySiteDataSourceProperties:
      type: object
      description: Discovery site data source properties class.
      properties:
        discoverySiteId:
          type: string
          description: Gets or sets the discovery site Id.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    SqlFciProperties:
      type: object
      description: The class representing the properties for an FCI instance.
      properties:
        state:
          $ref: '#/components/schemas/FCIInstanceState'
          description: Gets or sets the state of the FCI instance.
        networkName:
          type: string
          description: Gets or sets the FCI Network Name used to connect to this FCI instance.
        isMultiSubnet:
          type: boolean
          description: |-
            Gets or sets a value indicating whether the FCI is hosted on possible owners
            which are in multiple subnets.
        sharedDiskCount:
          type: integer
          format: int32
          description: Gets or sets the count of Shared Disks for SQL FCI.
    SqlJob:
      description: Class representing the web model of SQL Database.
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SqlJobListResult:
      type: object
      description: The response of a SqlJob list operation.
      properties:
        value:
          type: array
          description: The SqlJob items on this page
          items:
            $ref: '#/components/schemas/SqlJob'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SqlMachineOverview:
      type: object
      description: Gets or sets SQL machine overview data.
      properties:
        machineArmId:
          type: string
          description: Gets or sets SQL machine ARM ID.
        displayName:
          type: string
          description: Gets or sets SQL machine display name.
        fciRole:
          $ref: '#/components/schemas/SqlMachineOverviewFciRole'
          description: Gets or sets SQL machine FCI role.
    SqlMachineOverviewFciRole:
      type: string
      description: 'sql fci role '
      enum:
        - Unknown
        - NotApplicable
        - ActiveNode
        - PossibleOwnerNode
      x-ms-enum:
        name: SqlMachineOverviewFciRole
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: NotApplicable
            value: NotApplicable
            description: NotApplicable value.
          - name: ActiveNode
            value: ActiveNode
            description: ActiveNode value.
          - name: PossibleOwnerNode
            value: PossibleOwnerNode
            description: PossibleOwnerNode value.
    SqlMetadataDiscoveryPipe:
      type: string
      description: SQL metadata discovery pipe
      enum:
        - Unknown
        - VMware
        - PowerShell
        - SSH
        - CIM
        - Other
      x-ms-enum:
        name: SqlMetadataDiscoveryPipe
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: VMware
            value: VMware
            description: VMware value.
          - name: PowerShell
            value: PowerShell
            description: PowerShell value.
          - name: SSH
            value: SSH
            description: SSH value.
          - name: CIM
            value: CIM
            description: CIM value.
          - name: Other
            value: Other
            description: Other value.
    SqlRunAsAccount:
      description: A runasaccount resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/RunAsAccountProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SqlRunAsAccountListResult:
      type: object
      description: The response of a SqlRunAsAccount list operation.
      properties:
        value:
          type: array
          description: The SqlRunAsAccount items on this page
          items:
            $ref: '#/components/schemas/SqlRunAsAccount'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SqlServerApplication:
      type: object
      description: SQLServer in the guest virtual machine.
      properties:
        name:
          type: string
          description: Gets or sets Name of the SQLServer.
          readOnly: true
        edition:
          type: string
          description: Gets or sets Edition of the SQLServer.
          readOnly: true
        servicePack:
          type: string
          description: Gets or sets ServicePack of the SQLServer.
          readOnly: true
        version:
          type: string
          description: Gets or sets Version of the SQLServer.
          readOnly: true
        clustered:
          type: string
          description: Gets or sets Clustered of the SQLServer.
          readOnly: true
        clusterName:
          type: string
          description: Gets or sets ClusterName of the SQLServer.
          readOnly: true
        dnsHostName:
          type: string
          description: Gets or sets the DNS host name of SQLServer.
          readOnly: true
        port:
          type: string
          description: Gets or sets the port of the SQLServer.
          readOnly: true
        commaSeparatedIps:
          type: string
          description: Gets or sets the comma separated IPs of the SQLServer.
          readOnly: true
        status:
          type: string
          description: Gets the status.
          readOnly: true
        isNamedPipeEnabled:
          type: boolean
          description: Gets or sets the value which reflects if Named Pipe is enabled or not.
          readOnly: true
        isTcpIpEnabled:
          type: boolean
          description: Gets or sets the value which reflects if Named Pipe is enabled or not.
          readOnly: true
        namedPipeName:
          type: string
          description: Gets the status.
          readOnly: true
    SqlServerProperties:
      type: object
      description: Class for SQL Server properties.
      properties:
        machineOverviewList:
          type: array
          description: Gets the Machine Overview properties of all machines on which the SQL server is deployed.
          items:
            $ref: '#/components/schemas/SqlMachineOverview'
          readOnly: true
          x-ms-identifiers: []
        numberOfAgDatabases:
          type: integer
          format: int32
          description: Gets or sets the number of databases part of availability group on this SQL instance.
        sqlFciProperties:
          $ref: '#/components/schemas/SqlFciProperties'
          description: Gets or sets the FCI properties if the instance is an FCI instance. This would be populated if IsClustered is true.
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        version:
          type: string
          description: Gets or sets the SQL server version.
        numberOfUserDatabases:
          type: integer
          format: int32
          description: Gets or sets total number of users databases.
        sumOfUserDatabasesSizeInMb:
          type: number
          format: float
          description: Gets or sets total size of all user databases.
        tempDbSizeInMb:
          type: number
          format: float
          description: Gets or sets size of temp database.
        maxServerMemoryInUseInMb:
          type: number
          format: float
          description: Gets or sets maximum server memory in use.
        visibleOnlineCoreCount:
          type: integer
          format: int32
          description: Gets or sets the SQL server number of cores that have visible online status.
        numOfLogins:
          type: integer
          format: int32
          description: Gets or sets number of logins.
        physicalCpuCount:
          type: number
          format: float
          description: Gets or sets physical CPU count.
        logicalCpuCount:
          type: integer
          format: int32
          description: Gets or sets logical CPU count.
        engineEdition:
          type: string
          description: Gets or sets the SQL server engine edition.
        edition:
          type: string
          description: Gets or sets the SQL server edition.
        isHighAvailabilityEnabled:
          type: boolean
          description: Gets or sets a value indicating whether High Availability is enabled or not.
        isClustered:
          type: boolean
          description: Gets or sets a value indicating whether failover cluster is configured or not.
        hyperthreadRatio:
          type: integer
          format: int32
          description: Gets or sets the Hyper thread ratio.
        sqlStartTime:
          type: string
          format: date-time
          description: Gets or sets the SQL start time.
        machineArmIds:
          type: array
          description: Gets the list of machine ARM Ids on which the SQL server is deployed.
          items:
            type: string
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the SQL server.
        hydratedRunAsAccountId:
          type: string
          description: Gets or sets the hydrated run as account ID of the SQL server.
        hostName:
          type: string
          description: Gets or sets hostname.
        sqlServerName:
          type: string
          description: Gets or sets the SQL server instance name.
        portNumber:
          type: integer
          format: int32
          description: Gets or sets the Preferred Port Number.
        errors:
          type: array
          description: Gets the errors.
          items:
            $ref: '#/components/schemas/Errors'
          readOnly: true
        tags:
          type: object
          description: Gets or sets tags on the resource.
          additionalProperties:
            $ref: '#/components/schemas/Azure.ResourceManager.Object'
        isDeleted:
          type: boolean
          description: Gets or sets a value indicating whether the entity is deleted.
        createdTimestamp:
          type: string
          description: Gets or sets the marking machine creation.
        updatedTimestamp:
          type: string
          description: Gets or sets the timestamp marking last updated on the machine.
        status:
          $ref: '#/components/schemas/SqlServerStatus'
          description: Gets or sets the powered on status.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    SqlServerStatus:
      type: string
      description: sql server status
      enum:
        - Unknown
        - ContinuePending
        - Paused
        - PausePending
        - Running
        - StartPending
        - Stopped
        - StopPending
      x-ms-enum:
        name: SqlServerStatus
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: ContinuePending
            value: ContinuePending
            description: ContinuePending value.
          - name: Paused
            value: Paused
            description: Paused value.
          - name: PausePending
            value: PausePending
            description: PausePending value.
          - name: Running
            value: Running
            description: Running value.
          - name: StartPending
            value: StartPending
            description: StartPending value.
          - name: Stopped
            value: Stopped
            description: Stopped value.
          - name: StopPending
            value: StopPending
            description: StopPending value.
    SqlServerV2:
      description: Class representing the web model of SQL Server.
      properties:
        properties:
          $ref: '#/components/schemas/SqlServerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SqlServerV2ListResult:
      type: object
      description: The response of a SqlServerV2 list operation.
      properties:
        value:
          type: array
          description: The SqlServerV2 items on this page
          items:
            $ref: '#/components/schemas/SqlServerV2'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SqlServerV2Update:
      description: The type used for update operations of the SqlServerV2.
      properties:
        properties:
          $ref: '#/components/schemas/SqlServerV2UpdateProperties'
          x-ms-client-flatten: true
      type: object
    SqlServerV2UpdateProperties:
      type: object
      description: The updatable properties of the SqlServerV2.
      properties:
        numberOfAgDatabases:
          type: integer
          format: int32
          description: Gets or sets the number of databases part of availability group on this SQL instance.
        sqlFciProperties:
          $ref: '#/components/schemas/SqlFciProperties'
          description: Gets or sets the FCI properties if the instance is an FCI instance. This would be populated if IsClustered is true.
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        version:
          type: string
          description: Gets or sets the SQL server version.
        numberOfUserDatabases:
          type: integer
          format: int32
          description: Gets or sets total number of users databases.
        sumOfUserDatabasesSizeInMb:
          type: number
          format: float
          description: Gets or sets total size of all user databases.
        tempDbSizeInMb:
          type: number
          format: float
          description: Gets or sets size of temp database.
        maxServerMemoryInUseInMb:
          type: number
          format: float
          description: Gets or sets maximum server memory in use.
        visibleOnlineCoreCount:
          type: integer
          format: int32
          description: Gets or sets the SQL server number of cores that have visible online status.
        numOfLogins:
          type: integer
          format: int32
          description: Gets or sets number of logins.
        physicalCpuCount:
          type: number
          format: float
          description: Gets or sets physical CPU count.
        logicalCpuCount:
          type: integer
          format: int32
          description: Gets or sets logical CPU count.
        engineEdition:
          type: string
          description: Gets or sets the SQL server engine edition.
        edition:
          type: string
          description: Gets or sets the SQL server edition.
        isHighAvailabilityEnabled:
          type: boolean
          description: Gets or sets a value indicating whether High Availability is enabled or not.
        isClustered:
          type: boolean
          description: Gets or sets a value indicating whether failover cluster is configured or not.
        hyperthreadRatio:
          type: integer
          format: int32
          description: Gets or sets the Hyper thread ratio.
        sqlStartTime:
          type: string
          format: date-time
          description: Gets or sets the SQL start time.
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the SQL server.
        hydratedRunAsAccountId:
          type: string
          description: Gets or sets the hydrated run as account ID of the SQL server.
        hostName:
          type: string
          description: Gets or sets hostname.
        sqlServerName:
          type: string
          description: Gets or sets the SQL server instance name.
        portNumber:
          type: integer
          format: int32
          description: Gets or sets the Preferred Port Number.
        tags:
          type: object
          description: Gets or sets tags on the resource.
          additionalProperties:
            $ref: '#/components/schemas/Azure.ResourceManager.Object'
        isDeleted:
          type: boolean
          description: Gets or sets a value indicating whether the entity is deleted.
        createdTimestamp:
          type: string
          description: Gets or sets the marking machine creation.
        updatedTimestamp:
          type: string
          description: Gets or sets the timestamp marking last updated on the machine.
        status:
          $ref: '#/components/schemas/SqlServerStatus'
          description: Gets or sets the powered on status.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    SqlSite:
      description: SQL site web model.
      properties:
        properties:
          $ref: '#/components/schemas/SqlSiteProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    SqlSiteListResult:
      type: object
      description: The response of a SqlSite list operation.
      properties:
        value:
          type: array
          description: The SqlSite items on this page
          items:
            $ref: '#/components/schemas/SqlSite'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SqlSiteProperties:
      type: object
      description: Class for SQL site properties.
      properties:
        siteAppliancePropertiesCollection:
          type: array
          description: |-
            Gets or sets the appliance details used by service to communicate
                       
            to the appliance.
          items:
            $ref: '#/components/schemas/SiteApplianceProperties'
          x-ms-identifiers: []
        discoveryScenario:
          $ref: '#/components/schemas/SqlSitePropertiesDiscoveryScenario'
          description: Gets or sets the discovery scenario.
        serviceEndpoint:
          type: string
          description: Gets the service endpoint.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    SqlSitePropertiesDiscoveryScenario:
      type: string
      description: SqlSiteProperties DiscoveryScenario
      enum:
        - Migrate
        - DR
      x-ms-enum:
        name: SqlSitePropertiesDiscoveryScenario
        modelAsString: true
        values:
          - name: Migrate
            value: Migrate
            description: Migrate value.
          - name: DR
            value: DR
            description: DR value.
    SqlSiteRefreshBody:
      type: object
      description: SQL site refresh.
      properties:
        applianceName:
          type: string
          description: Gets or sets the appliance name of the agent in the site.
    SqlSiteUpdate:
      description: The type used for update operations of the SqlSite.
      properties:
        properties:
          $ref: '#/components/schemas/SqlSiteUpdateProperties'
          x-ms-client-flatten: true
      type: object
    SqlSiteUpdateProperties:
      type: object
      description: The updatable properties of the SqlSite.
      properties:
        siteAppliancePropertiesCollection:
          type: array
          description: |-
            Gets or sets the appliance details used by service to communicate
                       
            to the appliance.
          items:
            $ref: '#/components/schemas/SiteApplianceProperties'
          x-ms-identifiers: []
        discoveryScenario:
          $ref: '#/components/schemas/SqlSitePropertiesDiscoveryScenario'
          description: Gets or sets the discovery scenario.
    SqlSiteUsage:
      type: object
      description: SQL site usage.
      properties:
        serverCount:
          type: integer
          format: int32
          description: Gets or sets the number of servers discovered in the site.
        databaseCount:
          type: integer
          format: int32
          description: Gets or sets the number of databases discovered in the site.
        runAsAccountCount:
          type: integer
          format: int32
          description: Gets or sets the number of run as accounts in the site.
    StaticDiscovery:
      type: object
      description: Contains data related static data discovery scope.
      properties:
        discoveryScopeStatus:
          $ref: '#/components/schemas/StaticDiscoveryScopeStatus'
          description: Gets discovery scope status.
          readOnly: true
        errors:
          type: array
          description: Gets errors for discovery scope.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        hydratedRunAsAccountId:
          type: string
          description: |-
            Gets the run as account ID with which feature worked successfully.
                       
            It is discovered by the agent from the list of credentials.
          readOnly: true
    StaticDiscoveryScopeStatus:
      type: string
      description: Static DiscoveryScopeStatus
      enum:
        - DiscoverySucceededAtleastOnce
        - DiscoveryFailed
        - RunAsAccountNotAssociated
        - DiscoveryNotStarted
        - DiscoveryInProgress
        - Disabled
        - DiscoveryPartiallySucceded
        - DiscoverySucceeded
      x-ms-enum:
        name: StaticDiscoveryScopeStatus
        modelAsString: true
        values:
          - name: DiscoverySucceededAtleastOnce
            value: DiscoverySucceededAtleastOnce
            description: DiscoverySucceededAtleastOnce value.
          - name: DiscoveryFailed
            value: DiscoveryFailed
            description: DiscoveryFailed value.
          - name: RunAsAccountNotAssociated
            value: RunAsAccountNotAssociated
            description: RunAsAccountNotAssociated value.
          - name: DiscoveryNotStarted
            value: DiscoveryNotStarted
            description: DiscoveryNotStarted value.
          - name: DiscoveryInProgress
            value: DiscoveryInProgress
            description: DiscoveryInProgress value.
          - name: Disabled
            value: Disabled
            description: Disabled value.
          - name: DiscoveryPartiallySucceded
            value: DiscoveryPartiallySucceded
            description: DiscoveryPartiallySucceded value.
          - name: DiscoverySucceeded
            value: DiscoverySucceeded
            description: DiscoverySucceeded value.
    SystemCenter:
      type: object
      description: SystemCenter in the guest virtual machine.
      properties:
        productName:
          type: string
          description: Gets or sets ProductName of the SystemCenter.
          readOnly: true
        status:
          type: string
          description: Gets or sets Status of the SystemCenter.
          readOnly: true
        version:
          type: string
          description: Gets or sets Version of the SystemCenter.
          readOnly: true
    TagsMachineInput:
      type: object
      description: Machine class.
      properties:
        machineId:
          type: string
          description: Gets or sets the ARM id of the machine.
        tags:
          type: object
          description: run as AccountId
          additionalProperties:
            type: string
    TomcatEngineUnit:
      type: object
      description: Tomcat engine data.
      properties:
        name:
          type: string
          description: Gets or sets the name of the engine.
        hosts:
          type: array
          description: Gets or sets the hosts defined for the engine.
          items:
            $ref: '#/components/schemas/TomcatHostUnit'
          x-ms-identifiers: []
    TomcatHostUnit:
      type: object
      description: Tomcat host data.
      properties:
        name:
          type: string
          description: Gets or sets the name of the host.
        appBasePath:
          type: string
          description: Gets or sets the app base path for the host.
        appBase:
          type: string
          description: Gets or sets the app base value configured for the host.
    TomcatServiceUnit:
      type: object
      description: Tomcat service data.
      properties:
        name:
          type: string
          description: Gets or sets the name of the service.
        connectors:
          type: array
          description: Gets or sets the connectors defined for the service component.
          items:
            $ref: '#/components/schemas/ConnectorUnit'
          x-ms-identifiers: []
        engine:
          $ref: '#/components/schemas/TomcatEngineUnit'
          description: Gets or sets the engine defined for the service component.
    TomcatWebApplicationProperties:
      type: object
      description: Class for web application properties.
      properties:
        hasDatabaseDependency:
          type: boolean
          description: Boolean value having true if the application has database dependency.
          readOnly: true
        isExternalLoggingConfigured:
          type: boolean
          description: Boolean value having true if the application has file dependency.
          readOnly: true
        webServerId:
          type: string
          description: Gets the web server id.
          readOnly: true
        webServerName:
          type: string
          description: Gets the web server name.
          readOnly: true
        machineArmIds:
          type: array
          description: Gets the list of machine ARM Ids on which the web application is deployed.
          items:
            type: string
          readOnly: true
        virtualPath:
          type: string
          description: Gets the virtual path of the application.
          readOnly: true
        physicalPath:
          type: string
          description: Gets the physical path of the application.
          readOnly: true
        bindings:
          type: array
          description: Gets the front end bindings for the application.
          items:
            $ref: '#/components/schemas/FrontEndBinding'
          readOnly: true
          x-ms-identifiers: []
        frameworks:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/WebApplicationFramework'
          readOnly: true
          x-ms-identifiers: []
        configurations:
          type: array
          description: Gets the configuration.
          items:
            $ref: '#/components/schemas/WebApplicationConfigurationUnit'
          readOnly: true
          x-ms-identifiers: []
        directories:
          type: array
          description: Gets the directories.
          items:
            $ref: '#/components/schemas/WebApplicationDirectoryUnit'
          readOnly: true
        displayName:
          type: string
          description: Gets the display name.
          readOnly: true
        tags:
          type: object
          description: Gets tags that can be used with ODATA.
          additionalProperties:
            type: string
          readOnly: true
        staticFolders:
          type: array
          description: Static folders.
          items:
            type: string
          readOnly: true
        machineDisplayName:
          type: string
          description: Machine display name
          readOnly: true
        isDeleted:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking creation of the entity.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last update operation.
          readOnly: true
        serverType:
          type: string
          description: Gets the server type.
          readOnly: true
        errors:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets a value indicating whether the WebApp has errors or not.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    TomcatWebApplications:
      description: Web application REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/TomcatWebApplicationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    TomcatWebApplicationsListResult:
      type: object
      description: The response of a TomcatWebApplications list operation.
      properties:
        value:
          type: array
          description: The TomcatWebApplications items on this page
          items:
            $ref: '#/components/schemas/TomcatWebApplications'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    TomcatWebApplicationsUpdate:
      description: The type used for update operations of the TomcatWebApplications.
      properties: {}
      type: object
    TomcatWebServerProperties:
      type: object
      description: Class for web server properties.
      properties:
        services:
          type: array
          description: Gets or sets the services defined in the server.
          items:
            $ref: '#/components/schemas/TomcatServiceUnit'
          x-ms-identifiers: []
        catalinaHome:
          type: string
          description: Catalina Home
          readOnly: true
        jvmVersion:
          type: string
          description: Version  of the JVM
          readOnly: true
        sessionPersistenceMechanism:
          type: string
          description: session persistence mechanism
          readOnly: true
        isClusteringPresent:
          type: boolean
          description: Gets a value indicating whether application is deleted.
        isMemoryRealmPresent:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        isSessionTrackingPresent:
          type: boolean
          description: is session tracking present
          readOnly: true
        isAccessLogValvePresent:
          type: boolean
          description: is access log valve present
          readOnly: true
        maxMemoryUsageInMb:
          type: string
          description: max memory usage in mb
          readOnly: true
        configurationLocation:
          type: string
          description: Gets the configuration location.
          readOnly: true
        version:
          type: string
          description: Gets the configuration location.
          readOnly: true
        machineIds:
          type: array
          description: Gets the list of machines.
          items:
            type: string
          readOnly: true
        webApplications:
          type: array
          description: Gets the list of web applications.
          items:
            type: string
          readOnly: true
        displayName:
          type: string
          description: Gets the display name.
          readOnly: true
        serverFqdn:
          type: string
          description: Gets the server FQDN.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets the run as account id.
          readOnly: true
        operatingSystemDetails:
          $ref: '#/components/schemas/OperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        isDeleted:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking creation of the entity.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last update operation.
          readOnly: true
        serverType:
          type: string
          description: Gets the server type.
          readOnly: true
        errors:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets a value indicating whether the WebApp has errors or not.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    TomcatWebServers:
      description: Web server REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/TomcatWebServerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    TomcatWebServersListResult:
      type: object
      description: The response of a TomcatWebServers list operation.
      properties:
        value:
          type: array
          description: The TomcatWebServers items on this page
          items:
            $ref: '#/components/schemas/TomcatWebServers'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    UpdateMachineDepMapStatus:
      type: object
      description: |-
        Defines class that represents input to enable or disable DMP on machine
              
              for cosmos entity operation.
      properties:
        machines:
          type: array
          description: Gets or sets the machine collection.
          items:
            $ref: '#/components/schemas/DependencyMapMachineInput'
          x-ms-identifiers: []
    UpdateMachineRunAsAccount:
      type: object
      description: |-
        Defines class that represents input to update RunAsAccount on machine
              
              for cosmos entity operation.
      properties:
        machines:
          type: array
          description: Gets or sets the machine collection.
          items:
            $ref: '#/components/schemas/RunAsAccountMachineInput'
          x-ms-identifiers: []
    UpdateMachineTags:
      type: object
      description: |-
        Defines class that represents input to update Tags on machine
              
              for cosmos entity operation.
      properties:
        machines:
          type: array
          description: Gets or sets the machine collection.
          items:
            $ref: '#/components/schemas/TagsMachineInput'
          x-ms-identifiers: []
    V20180501PreviewVmwareRunAsAccount:
      description: Run as account REST Resource.
      properties:
        id:
          type: string
          description: Relative URL to get this run as account.
          readOnly: true
        name:
          type: string
          description: Gets the Name of the Run as account.
          readOnly: true
        type:
          type: string
          description: |-
            Handled by resource provider. Type =
            Microsoft.OffAzure/VMWareSites/RunAsAccounts.
          readOnly: true
        properties:
          $ref: '#/components/schemas/RunAsAccountProperties'
          description: Gets nested properties.
          readOnly: true
      type: object
    V20180501PreviewVmwareRunAsAccountVmwareRunAsAccountCollection:
      type: object
      description: Collection of VMware run as accounts.
      properties:
        value:
          type: array
          description: Gets the list of run as accounts.
          items:
            $ref: '#/components/schemas/V20180501PreviewVmwareRunAsAccount'
        nextLink:
          type: string
          description: Gets the value of next link.
          readOnly: true
    VMwareDatastoreType:
      type: string
      description: vmware datastore type
      enum:
        - Unknown
        - CIFS
        - NFS
        - NFS41
        - PMEM
        - VFFS
        - VMFS
        - VSAN
        - VVOL
      x-ms-enum:
        name: VMwareDatastoreType
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Cifs
            value: CIFS
            description: CIFS value.
          - name: NFS
            value: NFS
            description: NFS value.
          - name: NFS41
            value: NFS41
            description: NFS41 value.
          - name: Pmem
            value: PMEM
            description: PMEM value.
          - name: Vffs
            value: VFFS
            description: VFFS value.
          - name: Vmfs
            value: VMFS
            description: VMFS value.
          - name: Vsan
            value: VSAN
            description: VSAN value.
          - name: Vvol
            value: VVOL
            description: VVOL value.
    Vcenter:
      description: A vcenter resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/VcenterProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    VcenterListResult:
      type: object
      description: The response of a Vcenter list operation.
      properties:
        value:
          type: array
          description: The Vcenter items on this page
          items:
            $ref: '#/components/schemas/Vcenter'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VcenterProperties:
      type: object
      description: The properties of VMwareSiteResource
      properties:
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the vCenter.
        errors:
          type: array
          description: Gets the errors.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking vCenter creation.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the vCenter.
          readOnly: true
        fqdn:
          type: string
          description: Gets or sets the FQDN/IPAddress of the vCenter.
        port:
          type: string
          description: Gets or sets the port of the vCenter.
        version:
          type: string
          description: Gets the version of the vCenter.
          readOnly: true
        perfStatisticsLevel:
          type: string
          description: Gets the performance statistics enabled on the vCenter.
          readOnly: true
        instanceUuid:
          type: string
          description: Gets the instance UUID of the vCenter.
          readOnly: true
        friendlyName:
          type: string
          description: Gets or sets the friendly name of the vCenter.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    Versions:
      type: string
      description: service api versions
      enum:
        - 2018-05-01-preview
        - 2019-05-01-preview
        - '2020-01-01'
        - 2020-01-01-preview
        - '2020-02-01'
        - '2020-07-07'
        - '2020-07-10'
        - 2020-08-01-preview
        - 2020-11-11-preview
        - '2022-10-27'
        - '2023-06-06'
        - 2023-10-01-preview
      x-ms-enum:
        name: Versions
        modelAsString: true
        values:
          - name: v2018_05_01_preview
            value: 2018-05-01-preview
            description: Api version 2018-05-01-preview.
          - name: v2019_05_01_preview
            value: 2019-05-01-preview
            description: Api version 2019-05-01-preview.
          - name: v2020_01_01
            value: '2020-01-01'
            description: Api version 2020-01-01.
          - name: v2020_01_01_preview
            value: 2020-01-01-preview
            description: Api version 2020-01-01-preview.
          - name: v2020_02_01
            value: '2020-02-01'
            description: Api version 2020-02-01.
          - name: v2020_07_07
            value: '2020-07-07'
            description: Api version 2020-07-07.
          - name: v2020_07_10
            value: '2020-07-10'
            description: Api version 2020-07-10.
          - name: v2020_08_01_preview
            value: 2020-08-01-preview
            description: Api version 2020-08-01-preview.
          - name: v2020_11_11_preview
            value: 2020-11-11-preview
            description: Api version 2020-11-11-preview.
          - name: v2022_10_27
            value: '2022-10-27'
            description: Api version 2022-10-27.
          - name: v2023_06_06
            value: '2023-06-06'
            description: Api version 2023-06-06.
          - name: v2023_10_01_preview
            value: 2023-10-01-preview
            description: Api version 2023-10-01-preview.
    VmwareDatastore:
      type: object
      description: Second level object returned as part of VMware host REST resource.
      properties:
        uuid:
          type: string
          description: Data store UUID.
          readOnly: true
        capacityInGb:
          type: number
          format: float
          description: Capacity of the data store.
          readOnly: true
        freeSpaceInGb:
          type: number
          format: float
          description: Free space of the data store.
          readOnly: true
        type:
          $ref: '#/components/schemas/VMwareDatastoreType'
          description: Type of the data store.
          readOnly: true
        symbolicName:
          type: string
          description: Symbolic name of the data store.
          readOnly: true
    VmwareDisk:
      type: object
      description: Second level object returned as part of Machine REST resource.
      properties:
        uuid:
          type: string
          description: Disk UUID.
          readOnly: true
        label:
          type: string
          description: Label of the disk.
          readOnly: true
        diskProvisioningPolicy:
          type: string
          description: |-
            The provisioning policy of the disk.
                        It is Thin or Thick or
            Unknown for the VMWare VMDK.
          readOnly: true
        diskScrubbingPolicy:
          type: string
          description: |-
            The scrubbing policy of disks which can be
                        eagerly zeroed or
            lazily zeroed.
          readOnly: true
        diskMode:
          type: string
          description: Disk mode property used for identifying independent disks.
          readOnly: true
        controllerType:
          type: string
          description: Gets or sets a value indicating the type of the disk controller type.
          readOnly: true
        maxSizeInBytes:
          type: integer
          format: int64
          description: Gets or sets Bytes allocated for the disk.
        name:
          type: string
          description: Gets or sets Name of the disk.
        diskType:
          type: string
          description: Gets or sets Type of the disk.
        lun:
          type: integer
          format: int32
          description: Gets or sets LUN of the disk.
        path:
          type: string
          description: Gets or sets Path of the disk.
    VmwareHost:
      description: A host resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/VmwareHostProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    VmwareHostListResult:
      type: object
      description: The response of a VmwareHost list operation.
      properties:
        value:
          type: array
          description: The VmwareHost items on this page
          items:
            $ref: '#/components/schemas/VmwareHost'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VmwareHostProperties:
      type: object
      description: Class for host properties.
      properties:
        createdTimestamp:
          type: string
          description: Gets the timestamp marking VMware host creation.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the VMware host.
          readOnly: true
        datastores:
          type: array
          description: Gets the data stores.
          items:
            $ref: '#/components/schemas/VmwareDatastore'
          readOnly: true
          x-ms-identifiers: []
        vcenterId:
          type: string
          description: Gets the V-center ID.
          readOnly: true
        uuid:
          type: string
          description: Gets the instance UUID of the vmware host.
          readOnly: true
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    VmwareJob:
      description: A host resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    VmwareJobListResult:
      type: object
      description: The response of a VmwareJob list operation.
      properties:
        value:
          type: array
          description: The VmwareJob items on this page
          items:
            $ref: '#/components/schemas/VmwareJob'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VmwareMachineProperties:
      type: object
      description: Class for machine properties.
      properties:
        vCenterFqdn:
          type: string
          description: VCenter FQDN/IPAddress.
          readOnly: true
        vCenterId:
          type: string
          description: VCenter ARM ID.
          readOnly: true
        instanceUuid:
          type: string
          description: On-premise Instance UUID of the machine.
          readOnly: true
        dataCenterScope:
          type: string
          description: Scope of the data center.
          readOnly: true
        description:
          type: string
          description: User description of the machine.
          readOnly: true
        disks:
          type: array
          description: Disks attached to the machine.
          items:
            $ref: '#/components/schemas/VmwareDisk'
          readOnly: true
          x-ms-identifiers: []
        hostInMaintenanceMode:
          type: boolean
          description: Indicates whether the host is in maintenance mode.
          readOnly: true
        hostName:
          type: string
          description: The host name.
          readOnly: true
        hostPowerState:
          type: string
          description: The host power state.
          readOnly: true
        hostVersion:
          type: string
          description: The host version.
          readOnly: true
        networkAdapters:
          type: array
          description: Network adapters attached to the machine.
          items:
            $ref: '#/components/schemas/VmwareNetworkAdapter'
          readOnly: true
          x-ms-identifiers: []
        vMwareToolsStatus:
          type: string
          description: VMware tools status.
          readOnly: true
        vMwareToolsVersion:
          type: string
          description: VMware tools version.
          readOnly: true
        changeTrackingSupported:
          type: boolean
          description: Value indicating whether change tracking is supported.
          readOnly: true
        changeTrackingEnabled:
          type: boolean
          description: Value indicating whether change tracking is enabled.
          readOnly: true
        maxSnapshots:
          type: integer
          format: int32
          description: Maximum number of snapshots for the VM.            Default value is -1.
          readOnly: true
        diskEnabledUuid:
          type: string
          description: Gets or sets whether Disk Enabled UUID is set or not.
          readOnly: true
        numberOfSnapshots:
          type: integer
          format: int32
          description: Number of snapshots for the VM.             Default value is -1.
          readOnly: true
        altGuestName:
          type: string
          description: Gets or sets the machine alt guest name.
          readOnly: true
        powerStatus:
          type: string
          description: Gets the Machine power status.
          readOnly: true
        vmFqdn:
          type: string
          description: Gets the VM FQDN.
          readOnly: true
        vmConfigurationFileLocation:
          type: string
          description: Gets the Root location of the VM configuration file.
          readOnly: true
        firmware:
          type: string
          description: Gets or sets the firmware.
        guestOsDetails:
          $ref: '#/components/schemas/GuestOsDetails'
          description: |-
            Operating System Details extracted from the guest
                        bu executing
            script inside the guest VM.
          readOnly: true
        numberOfApplications:
          type: integer
          format: int32
          description: Number of applications installed in the guest VM.
          readOnly: true
        guestDetailsDiscoveryTimestamp:
          type: string
          format: date-time
          description: |-
            The last time at which the Guest Details was discovered
                        or the
            error while discovering guest details based discovery
                        of the
            machine.
          readOnly: true
        isGuestDetailsDiscoveryInProgress:
          type: boolean
          description: |-
            Whether Refresh Fabric Layout Guest Details has been completed once.
                     
              Portal will show discovery in progress, if this value is true.
          readOnly: true
        dependencyMapping:
          type: string
          description: |-
            Gets or sets if dependency mapping feature is enabled or not
                        for
            the VM.
          readOnly: true
        dependencyMappingStartTime:
          type: string
          format: date-time
          description: Gets or sets when dependency mapping collection is last started.
          readOnly: true
        dependencyMappingEndTime:
          type: string
          description: Gets or sets when dependency mapping collection was last disabled.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets or sets the run as account ID of the machine.
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        errors:
          type: array
          description: Errors for machine.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applicationDiscovery:
          $ref: '#/components/schemas/ApplicationDiscovery'
          description: Gets the data related to application discovery.
          readOnly: true
        dependencyMapDiscovery:
          $ref: '#/components/schemas/DependencyMapDiscovery'
          description: Gets the data related to dependency map discovery.
          readOnly: true
        staticDiscovery:
          $ref: '#/components/schemas/StaticDiscovery'
          description: Gets the data related to static discovery.
          readOnly: true
        sqlDiscovery:
          $ref: '#/components/schemas/SqlDiscovery'
          description: Gets the data related to SQL discovery.
          readOnly: true
        webAppDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to Web application discovery.
          readOnly: true
        oracleDiscovery:
          $ref: '#/components/schemas/OracleDiscovery'
          description: Gets the data related to Oracle discovery.
          readOnly: true
        springBootDiscovery:
          $ref: '#/components/schemas/SpringBootDiscovery'
          description: Gets the data related to SpringBoot discovery.
          readOnly: true
        iisDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to iis discovery.
          readOnly: true
        tomcatDiscovery:
          $ref: '#/components/schemas/WebAppDiscovery'
          description: Gets the data related to tomcat discovery.
          readOnly: true
        appsAndRoles:
          $ref: '#/components/schemas/AppsAndRoles'
          description: Apps And Roles of the Server.
          readOnly: true
        productSupportStatus:
          $ref: '#/components/schemas/ProductSupportStatus'
          description: product support status.
        numberOfProcessorCore:
          type: integer
          format: int32
          description: |-
            Gets or sets the Number of Processor Cores 
                        allocated for the
            machine.
        allocatedMemoryInMb:
          type: number
          format: double
          description: Gets or sets the allocated Memory in MB.
        operatingSystemDetails:
          $ref: '#/components/schemas/OperatingSystem'
          description: Gets or sets the Operating System Details installed on the machine.
        biosSerialNumber:
          type: string
          description: Gets or sets the Machine BIOS serial number.
        biosGuid:
          type: string
          description: Gets or sets the BIOS GUID.
        displayName:
          type: string
          description: Gets the Display name of the machine.
          readOnly: true
        isDeleted:
          type: boolean
          description: Value indicating whether VM is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the marking machine creation.
          readOnly: true
        tags:
          type: object
          description: Gets or sets tags on the VMware machine.
          additionalProperties:
            type: string
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last updated on the machine.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    VmwareMachineSoftwareInventory:
      description: An software inventory resource belonging to a machine resource.
      properties:
        properties:
          $ref: '#/components/schemas/MachineSoftwareInventoryProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    VmwareMachineSoftwareInventoryListResult:
      type: object
      description: The response of a VmwareMachineSoftwareInventory list operation.
      properties:
        value:
          type: array
          description: The VmwareMachineSoftwareInventory items on this page
          items:
            $ref: '#/components/schemas/VmwareMachineSoftwareInventory'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VmwareNetworkAdapter:
      type: object
      description: Second level object represented in responses as part of Machine REST resource.
      properties:
        label:
          type: string
          description: Label of the NIC.
          readOnly: true
        adapterType:
          type: string
          description: Gets or sets the adapter type.
          readOnly: true
        nicId:
          type: string
          description: Gets or sets the NIC Id.
        macAddress:
          type: string
          description: Gets or sets Mac address of the NIC.
        ipAddressList:
          type: array
          description: Gets IP addresses for the machine.
          items:
            type: string
          readOnly: true
        networkName:
          type: string
          description: Gets or sets Network Name.
        ipAddressType:
          type: string
          description: Gets or sets Type of the IP address.
    VmwareRunAsAccountResource:
      description: A runasaccount resource belonging to a site resource.
      properties:
        properties:
          $ref: '#/components/schemas/RunAsAccountProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    VmwareRunAsAccountResourceListResult:
      type: object
      description: The response of a VmwareRunAsAccountResource list operation.
      properties:
        value:
          type: array
          description: The VmwareRunAsAccountResource items on this page
          items:
            $ref: '#/components/schemas/VmwareRunAsAccountResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VmwareSite:
      description: A VmwareSite
      properties:
        properties:
          $ref: '#/components/schemas/SitesProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
        eTag:
          type: string
          description: If eTag is provided in the response body, it may also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    VmwareSiteListResult:
      type: object
      description: The response of a VmwareSite list operation.
      properties:
        value:
          type: array
          description: The VmwareSite items on this page
          items:
            $ref: '#/components/schemas/VmwareSite'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    VmwareSiteUpdate:
      description: The type used for update operations of the VmwareSite.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/VmwareSiteUpdateProperties'
          x-ms-client-flatten: true
      type: object
    VmwareSiteUpdateProperties:
      type: object
      description: The updatable properties of the VmwareSite.
      properties:
        servicePrincipalIdentityDetails:
          $ref: '#/components/schemas/SiteSpnProperties'
          description: |-
            Gets or sets the service principal identity details used by agent for
            communication
                        to the service.
        agentDetails:
          $ref: '#/components/schemas/SiteAgentProperties'
          description: Gets or sets the on-premises agent details.
        applianceName:
          type: string
          description: Gets or sets the Appliance Name.
        discoverySolutionId:
          type: string
          description: Gets or sets the ARM ID of migration hub solution for SDS.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
    VmwareSiteUsage:
      type: object
      description: VMware site usage.
      properties:
        machineCount:
          type: integer
          format: int32
          description: Gets or sets the number of machines discovered in the site.
        runAsAccountCount:
          type: integer
          format: int32
          description: Gets or sets the number of run as accounts in the site.
        vCenterCount:
          type: integer
          format: int32
          description: Gets or sets the number of vCenters part of the site.
    WebAppDiscovery:
      type: object
      description: Data related to a machine's WebApps discovery.
      properties:
        totalWebServerCount:
          type: integer
          format: int64
          description: Gets or sets number of successfully discovered web servers..
        totalWebApplicationCount:
          type: integer
          format: int64
          description: Gets or sets number of successfully discovered web applications.
        discoveryScopeStatus:
          $ref: '#/components/schemas/DiscoveryScopeStatus'
          description: Gets or sets status of partner discovery.
    WebAppExtendedMachine:
      description: Web app extended machine REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/WebAppExtendedMachineProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    WebAppExtendedMachineListResult:
      type: object
      description: The response of a WebAppExtendedMachine list operation.
      properties:
        value:
          type: array
          description: The WebAppExtendedMachine items on this page
          items:
            $ref: '#/components/schemas/WebAppExtendedMachine'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    WebAppExtendedMachineProperties:
      type: object
      description: Class for web extended machine properties.
      properties:
        isDeleted:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking creation of the entity.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last update operation.
          readOnly: true
        errors:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        hostName:
          type: string
          description: Gets the hydrated host name.
          readOnly: true
        machineDisplayName:
          type: string
          description: Gets the Name of the extended machine.
          readOnly: true
        machineId:
          type: string
          description: Gets the machine ARM id.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets the run as account ID of the machine used for web app discovery.
          readOnly: true
        hydratedRunAsAccountId:
          type: string
          description: Gets the agent hydrated run as account.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    WebAppProperties:
      type: object
      description: Class representing web app properties web model.
      properties:
        webAppArmId:
          type: string
          description: Gets or sets the arm id of the web app.
        tags:
          type: object
          description: Gets or sets Tags.
          additionalProperties:
            type: string
    WebAppPropertiesCollection:
      type: object
      description: Collection of web app properties.
      properties:
        webApps:
          type: array
          description: Gets or sets the list of web app properties.
          items:
            $ref: '#/components/schemas/WebAppProperties'
          x-ms-identifiers: []
    WebAppRunAsAccount:
      description: Run as account REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/RunAsAccountProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    WebAppRunAsAccountListResult:
      type: object
      description: The response of a WebAppRunAsAccount list operation.
      properties:
        value:
          type: array
          description: The WebAppRunAsAccount items on this page
          items:
            $ref: '#/components/schemas/WebAppRunAsAccount'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    WebAppSite:
      description: WebApp site web model.
      properties:
        properties:
          $ref: '#/components/schemas/WebAppSiteProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    WebAppSiteListResult:
      type: object
      description: The response of a WebAppSite list operation.
      properties:
        value:
          type: array
          description: The WebAppSite items on this page
          items:
            $ref: '#/components/schemas/WebAppSite'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    WebAppSiteProperties:
      type: object
      description: Class for Web app site properties.
      properties:
        siteAppliancePropertiesCollection:
          type: array
          description: |-
            Gets or sets the appliance details used by service to communicate
                       
            to the appliance.
          items:
            $ref: '#/components/schemas/SiteApplianceProperties'
          x-ms-identifiers: []
        discoveryScenario:
          $ref: '#/components/schemas/WebAppSitePropertiesDiscoveryScenario'
          description: Gets or sets the discovery scenario.
        serviceEndpoint:
          type: string
          description: Gets the service endpoint.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    WebAppSitePropertiesDiscoveryScenario:
      type: string
      description: Discovery Scenario
      enum:
        - Migrate
        - DR
      x-ms-enum:
        name: WebAppSitePropertiesDiscoveryScenario
        modelAsString: true
        values:
          - name: Migrate
            value: Migrate
            description: Migrate value.
          - name: DR
            value: DR
            description: DR value.
    WebAppSiteUpdate:
      description: The type used for update operations of the WebAppSite.
      properties:
        properties:
          $ref: '#/components/schemas/WebAppSiteUpdateProperties'
          x-ms-client-flatten: true
      type: object
    WebAppSiteUpdateProperties:
      type: object
      description: The updatable properties of the WebAppSite.
      properties:
        siteAppliancePropertiesCollection:
          type: array
          description: |-
            Gets or sets the appliance details used by service to communicate
                       
            to the appliance.
          items:
            $ref: '#/components/schemas/SiteApplianceProperties'
          x-ms-identifiers: []
        discoveryScenario:
          $ref: '#/components/schemas/WebAppSitePropertiesDiscoveryScenario'
          description: Gets or sets the discovery scenario.
    WebAppSiteUsage:
      type: object
      description: Web app site usage.
      properties:
        webServerCount:
          type: integer
          format: int32
          description: Gets or sets the number of web servers discovered in the site.
        webApplicationCount:
          type: integer
          format: int32
          description: Gets or sets the number of web applications discovered in the site.
        runAsAccountCount:
          type: integer
          format: int32
          description: Gets or sets the number of run as accounts in the site.
    WebApplication:
      description: Web application REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/WebApplicationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    WebApplicationAppsAndRolesModel:
      type: object
      description: WebApplication in the guest virtual machine.
      properties:
        name:
          type: string
          description: Gets or sets Name of the WebApplication.
          readOnly: true
        status:
          type: string
          description: Gets or sets Status of the WebApplication.
          readOnly: true
        platform:
          type: string
          description: Gets or sets Platform of the WebApplication.
          readOnly: true
        groupName:
          type: string
          description: Gets or sets GroupName of the WebApplication.
          readOnly: true
        webServer:
          type: string
          description: Gets or sets WebServer of the WebApplication.
          readOnly: true
        applicationPool:
          type: string
          description: Gets or sets ApplicationPool of the WebApplication.
          readOnly: true
    WebApplicationConfigurationUnit:
      type: object
      description: Web Application configuration unit.
      properties:
        name:
          type: string
          description: Gets or sets the configuration name.
        filePath:
          type: string
          description: Gets or sets the configuration file path.
        localFilePath:
          type: string
          description: Gets or sets the configuration local file path.
        targetFilePath:
          type: string
          description: Gets or sets the configuration target file path.
        section:
          type: string
          description: Gets or sets the configuration section in the file.
        type:
          type: string
          description: Gets or sets the configuration type.
        isDeploymentTimeEditable:
          type: boolean
          description: |-
            Gets or sets a value indicating whether the configuration is edited or not by
            the user.
        identifier:
          type: string
          description: Gets or sets the identifier for the configuration.
    WebApplicationDirectoryUnit:
      type: object
      description: Web Application directory unit.
      properties:
        id:
          type: string
          description: Gets or sets the unique id corresponding to the application directory.
        isEditable:
          type: boolean
          description: |-
            Gets or sets a value indicating whether the directory object is editable.
                 
                  True when the directory is added as an optional directory, false when
            discovery is done
                        manually.
        sourcePaths:
          type: array
          description: Gets or sets the paths of the directory on the source machine.
          items:
            type: string
        localScratchPath:
          type: string
          description: Gets or sets the local scratch path at which the directories has been copied.
        mountPath:
          type: string
          description: Gets or sets the mount path of the application directory.
        sourceSize:
          type: string
          description: Gets or sets the size of the directory on the source machine.
    WebApplicationFramework:
      type: object
      description: Framework specific data for a web application.
      properties:
        name:
          type: string
          description: Gets or sets Name of the framework.
        version:
          type: string
          description: Gets or sets Version of the framework.
    WebApplicationListResult:
      type: object
      description: The response of a WebApplication list operation.
      properties:
        value:
          type: array
          description: The WebApplication items on this page
          items:
            $ref: '#/components/schemas/WebApplication'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    WebApplicationProperties:
      type: object
      description: Class for web application properties.
      properties:
        webServerId:
          type: string
          description: Gets the web server id.
          readOnly: true
        webServerName:
          type: string
          description: Gets the web server name.
          readOnly: true
        machineArmIds:
          type: array
          description: Gets the list of machine ARM Ids on which the SQL server is deployed.
          items:
            type: string
          readOnly: true
        virtualPath:
          type: string
          description: Gets the virtual path of the application.
          readOnly: true
        physicalPath:
          type: string
          description: Gets the physical path of the application.
          readOnly: true
        bindings:
          type: array
          description: Gets the front end bindings for the application.
          items:
            $ref: '#/components/schemas/FrontEndBinding'
          readOnly: true
          x-ms-identifiers: []
        frameworks:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/WebApplicationFramework'
          readOnly: true
          x-ms-identifiers: []
        configurations:
          type: array
          description: Gets the configuration.
          items:
            $ref: '#/components/schemas/WebApplicationConfigurationUnit'
          readOnly: true
          x-ms-identifiers: []
        directories:
          type: array
          description: Gets the directories.
          items:
            $ref: '#/components/schemas/WebApplicationDirectoryUnit'
          readOnly: true
          x-ms-identifiers: []
        displayName:
          type: string
          description: Gets the display name.
          readOnly: true
        tags:
          type: object
          description: Gets tags that can be used with ODATA.
          additionalProperties:
            type: string
          readOnly: true
        staticFolders:
          type: array
          description: Static folders.
          items:
            type: string
          readOnly: true
        machineDisplayName:
          type: string
          description: Machine display name
          readOnly: true
        isDeleted:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking creation of the entity.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last update operation.
          readOnly: true
        serverType:
          type: string
          description: Gets the server type.
          readOnly: true
        errors:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets a value indicating whether the WebApp has errors or not.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    WebRoleImportDisk:
      type: object
      description: Class representing the imported machine web model.
      properties:
        megabytesPerSecondOfRead:
          type: number
          format: float
          description: Disk read throughput.
          readOnly: true
        megabytesPerSecondOfWrite:
          type: number
          format: float
          description: Disk write throughput.
          readOnly: true
        numberOfReadOperationsPerSecond:
          type: number
          format: float
          description: Disk read IOPS.
          readOnly: true
        numberOfWriteOperationsPerSecond:
          type: number
          format: float
          description: Disk write IOPS.
          readOnly: true
        maxSizeInBytes:
          type: integer
          format: int64
          description: Gets or sets Bytes allocated for the disk.
        name:
          type: string
          description: Gets or sets Name of the disk.
        diskType:
          type: string
          description: Gets or sets Type of the disk.
        lun:
          type: integer
          format: int32
          description: Gets or sets LUN of the disk.
        path:
          type: string
          description: Gets or sets Path of the disk.
    WebRoleOperatingSystem:
      type: object
      description: Second level object returned as part of Machine REST resource.
      properties:
        osType:
          type: string
          description: Gets or sets the type of the operating system.
        osName:
          type: string
          description: Gets or sets the Name of the operating system.
        osVersion:
          type: string
          description: Gets or sets the Version of the operating system.
        osArchitecture:
          type: string
          description: Gets or sets the Architecture of the operating system.
    WebServer:
      description: Web application REST Resource.
      properties:
        properties:
          $ref: '#/components/schemas/WebServerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
          x-ms-mutability:
            - read
            - create
      type: object
    WebServerListResult:
      type: object
      description: The response of a WebServer list operation.
      properties:
        value:
          type: array
          description: The WebServer items on this page
          items:
            $ref: '#/components/schemas/WebServer'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    WebServerProperties:
      type: object
      description: Class for web server properties.
      properties:
        configurationLocation:
          type: string
          description: Gets the configuration location.
          readOnly: true
        version:
          type: string
          description: Gets the configuration location.
          readOnly: true
        machineIds:
          type: array
          description: Gets the list of machines.
          items:
            type: string
          readOnly: true
        webApplications:
          type: array
          description: Gets the list of web applications.
          items:
            type: string
          readOnly: true
        displayName:
          type: string
          description: Gets the display name.
          readOnly: true
        serverFqdn:
          type: string
          description: Gets the server FQDN.
          readOnly: true
        runAsAccountId:
          type: string
          description: Gets the run as account id.
          readOnly: true
        isDeleted:
          type: boolean
          description: Gets a value indicating whether application is deleted.
          readOnly: true
        createdTimestamp:
          type: string
          description: Gets the timestamp marking creation of the entity.
          readOnly: true
        updatedTimestamp:
          type: string
          description: Gets the timestamp marking last update operation.
          readOnly: true
        serverType:
          type: string
          description: Gets the server type.
          readOnly: true
        errors:
          type: array
          description: Gets the Error details.
          items:
            $ref: '#/components/schemas/HealthErrorDetails'
          readOnly: true
        applianceNames:
          type: array
          description: Gets the appliance names.
          items:
            type: string
          readOnly: true
        hasErrors:
          type: boolean
          description: Gets a value indicating whether the WebApp has errors or not.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: provisioning state enum
          readOnly: true
    esuStatus:
      type: string
      description: esu Status
      enum:
        - Unknown
        - Active
        - InActive
      x-ms-enum:
        name: esuStatus
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Active
            value: Active
            description: Active value.
          - name: InActive
            value: InActive
            description: InActive value.
    esuYear:
      type: string
      description: esu year
      enum:
        - Unknown
        - FirstYear
        - SecondYear
        - ThirdYear
        - UpgradeYear
      x-ms-enum:
        name: esuYear
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: FirstYear
            value: FirstYear
            description: FirstYear value.
          - name: SecondYear
            value: SecondYear
            description: SecondYear value.
          - name: ThirdYear
            value: ThirdYear
            description: ThirdYear value.
          - name: UpgradeYear
            value: UpgradeYear
            description: UpgradeYear value.
    supportStatus:
      type: string
      description: support status
      enum:
        - Unknown
        - Mainstream
        - Extended
      x-ms-enum:
        name: supportStatus
        modelAsString: true
        values:
          - name: Unknown
            value: Unknown
            description: Unknown value.
          - name: Mainstream
            value: Mainstream
            description: Mainstream value.
          - name: Extended
            value: Extended
            description: Extended value.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.migrate.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.OffAzure~1operations?api-version=2023-10-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_sites:
      id: azure.migrate.hyperv_sites
      name: hyperv_sites
      title: hyperv_sites
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OffAzure~1hypervSites?api-version=2023-10-01-preview/get'
            operationId: HypervSites_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervSiteListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites?api-version=2023-10-01-preview/get'
            operationId: HypervSites_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervSiteListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_sites/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/hyperv_sites/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    import_sites_controllers:
      id: azure.migrate.import_sites_controllers
      name: import_sites_controllers
      title: import_sites_controllers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OffAzure~1importSites?api-version=2023-10-01-preview/get'
            operationId: ImportSitesController_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportSiteListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites?api-version=2023-10-01-preview/get'
            operationId: ImportSitesController_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportSiteListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}?api-version=2023-10-01-preview/get'
            operationId: ImportSitesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportSite
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}?api-version=2023-10-01-preview/put'
            operationId: ImportSitesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportSite
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}?api-version=2023-10-01-preview/patch'
            operationId: ImportSitesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportSite
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}?api-version=2023-10-01-preview/delete'
            operationId: ImportSitesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_uri:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1exportUri?api-version=2023-10-01-preview/post'
            operationId: ImportSitesController_ExportUri
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SasUriResponse
        import_uri:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1importUri?api-version=2023-10-01-preview/post'
            operationId: ImportSitesController_ImportUri
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SasUriResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_sites_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_sites_controllers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/import_sites_controllers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/import_sites_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/import_sites_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_sites_controllers/methods/delete'
    master_sites_controllers:
      id: azure.migrate.master_sites_controllers
      name: master_sites_controllers
      title: master_sites_controllers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OffAzure~1masterSites?api-version=2023-10-01-preview/get'
            operationId: MasterSitesController_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MasterSiteListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites?api-version=2023-10-01-preview/get'
            operationId: MasterSitesController_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MasterSiteListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}?api-version=2023-10-01-preview/get'
            operationId: MasterSitesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MasterSite
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}?api-version=2023-10-01-preview/put'
            operationId: MasterSitesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MasterSite
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}?api-version=2023-10-01-preview/patch'
            operationId: MasterSitesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MasterSite
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}?api-version=2023-10-01-preview/delete'
            operationId: MasterSitesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        error_summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1errorSummary?api-version=2023-10-01-preview/post'
            operationId: MasterSitesController_ErrorSummary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteErrorSummary
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/master_sites_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/master_sites_controllers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/master_sites_controllers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/master_sites_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/master_sites_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/master_sites_controllers/methods/delete'
    server_sites_controllers:
      id: azure.migrate.server_sites_controllers
      name: server_sites_controllers
      title: server_sites_controllers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OffAzure~1serverSites?api-version=2023-10-01-preview/get'
            operationId: ServerSitesController_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSiteResourceListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites?api-version=2023-10-01-preview/get'
            operationId: ServerSitesController_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSiteResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}?api-version=2023-10-01-preview/get'
            operationId: ServerSitesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSiteResource
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}?api-version=2023-10-01-preview/put'
            operationId: ServerSitesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSiteResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}?api-version=2023-10-01-preview/patch'
            operationId: ServerSitesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSiteResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}?api-version=2023-10-01-preview/delete'
            operationId: ServerSitesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        compute_error_summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1computeErrorSummary?api-version=2023-10-01-preview/post'
            operationId: ServerSitesController_ComputeErrorSummary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteErrorSummary
        computeusage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1computeusage?api-version=2023-10-01-preview/post'
            operationId: ServerSitesController_Computeusage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSiteUsageResponse
        export_applications:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1exportApplications?api-version=2023-10-01-preview/post'
            operationId: ServerSitesController_ExportApplications
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_machine_errors:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1exportMachineErrors?api-version=2023-10-01-preview/post'
            operationId: ServerSitesController_ExportMachineErrors
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1refreshSite?api-version=2023-10-01-preview/post'
            operationId: ServerSitesController_RefreshSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1summary?api-version=2023-10-01-preview/post'
            operationId: ServerSitesController_Summary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSiteUsage
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_sites_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/server_sites_controllers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/server_sites_controllers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/server_sites_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/server_sites_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/server_sites_controllers/methods/delete'
    sites_controllers:
      id: azure.migrate.sites_controllers
      name: sites_controllers
      title: sites_controllers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.OffAzure~1vmwareSites?api-version=2023-10-01-preview/get'
            operationId: SitesController_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareSiteListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites?api-version=2023-10-01-preview/get'
            operationId: SitesController_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareSiteListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}?api-version=2023-10-01-preview/get'
            operationId: SitesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareSite
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}?api-version=2023-10-01-preview/put'
            operationId: SitesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareSite
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}?api-version=2023-10-01-preview/patch'
            operationId: SitesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareSite
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}?api-version=2023-10-01-preview/delete'
            operationId: SitesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        compute_error_summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1computeErrorSummary?api-version=2023-10-01-preview/post'
            operationId: SitesController_ComputeErrorSummary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteErrorSummary
        computeusage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1computeusage?api-version=2023-10-01-preview/post'
            operationId: SitesController_Computeusage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareSiteUsage
        export_applications:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1exportApplications?api-version=2023-10-01-preview/post'
            operationId: SitesController_ExportApplications
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_machine_errors:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1exportMachineErrors?api-version=2023-10-01-preview/post'
            operationId: SitesController_ExportMachineErrors
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_machines:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1exportMachines?api-version=2023-10-01-preview/post'
            operationId: SitesController_ExportMachines
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1summary?api-version=2023-10-01-preview/post'
            operationId: SitesController_Summary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareSiteUsage
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sites_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sites_controllers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/sites_controllers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/sites_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/sites_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sites_controllers/methods/delete'
    hyperv_sites_controllers:
      id: azure.migrate.hyperv_sites_controllers
      name: hyperv_sites_controllers
      title: hyperv_sites_controllers
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}?api-version=2023-10-01-preview/get'
            operationId: HypervSitesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervSite
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}?api-version=2023-10-01-preview/put'
            operationId: HypervSitesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervSite
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}?api-version=2023-10-01-preview/patch'
            operationId: HypervSitesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervSite
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}?api-version=2023-10-01-preview/delete'
            operationId: HypervSitesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        compute_error_summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1computeErrorSummary?api-version=2023-10-01-preview/post'
            operationId: HypervSitesController_ComputeErrorSummary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteErrorSummary
        computeusage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1computeusage?api-version=2023-10-01-preview/post'
            operationId: HypervSitesController_Computeusage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervSiteUsage
        export_applications:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1exportApplications?api-version=2023-10-01-preview/post'
            operationId: HypervSitesController_ExportApplications
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_machine_errors:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1exportMachineErrors?api-version=2023-10-01-preview/post'
            operationId: HypervSitesController_ExportMachineErrors
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1summary?api-version=2023-10-01-preview/post'
            operationId: HypervSitesController_Summary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervSiteUsage
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_sites_controllers/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/hyperv_sites_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/hyperv_sites_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hyperv_sites_controllers/methods/delete'
    hyperv_dependency_map_controllers:
      id: azure.migrate.hyperv_dependency_map_controllers
      name: hyperv_dependency_map_controllers
      title: hyperv_dependency_map_controllers
      methods:
        client_group_members:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1clientGroupMembers?api-version=2023-10-01-preview/post'
            operationId: HypervDependencyMapController_ClientGroupMembers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_dependencies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1exportDependencies?api-version=2023-10-01-preview/post'
            operationId: HypervDependencyMapController_ExportDependencies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_coarse_map:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1generateCoarseMap?api-version=2023-10-01-preview/post'
            operationId: HypervDependencyMapController_GenerateCoarseMap
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_detailed_map:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1generateDetailedMap?api-version=2023-10-01-preview/post'
            operationId: HypervDependencyMapController_GenerateDetailedMap
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        server_group_members:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1serverGroupMembers?api-version=2023-10-01-preview/post'
            operationId: HypervDependencyMapController_ServerGroupMembers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_cluster_controllers:
      id: azure.migrate.hyperv_cluster_controllers
      name: hyperv_cluster_controllers
      title: hyperv_cluster_controllers
      methods:
        list_by_hyperv_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1clusters?api-version=2023-10-01-preview/get'
            operationId: HypervClusterController_ListByHypervSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervClusterListResult
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1clusters~1{clusterName}?api-version=2023-10-01-preview/delete'
            operationId: HypervClusterController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_cluster_controllers/methods/list_by_hyperv_site'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hyperv_cluster_controllers/methods/delete'
    hyperv_cluster_controller_clusters:
      id: azure.migrate.hyperv_cluster_controller_clusters
      name: hyperv_cluster_controller_clusters
      title: hyperv_cluster_controller_clusters
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1clusters~1{clusterName}?api-version=2023-10-01-preview/get'
            operationId: HypervClusterControllerCluster_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervCluster
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1clusters~1{clusterName}?api-version=2023-10-01-preview/put'
            operationId: HypervClusterControllerCluster_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervCluster
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_cluster_controller_clusters/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/hyperv_cluster_controller_clusters/methods/create'
        update: []
        replace: []
        delete: []
    hyperv_host_controllers:
      id: azure.migrate.hyperv_host_controllers
      name: hyperv_host_controllers
      title: hyperv_host_controllers
      methods:
        list_by_hyperv_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1hosts?api-version=2023-10-01-preview/get'
            operationId: HypervHostController_ListByHypervSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervHostListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1hosts~1{hostName}?api-version=2023-10-01-preview/get'
            operationId: HypervHostController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervHost
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1hosts~1{hostName}?api-version=2023-10-01-preview/put'
            operationId: HypervHostController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervHost
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1hosts~1{hostName}?api-version=2023-10-01-preview/delete'
            operationId: HypervHostController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_host_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/hyperv_host_controllers/methods/list_by_hyperv_site'
        insert:
          - $ref: '#/components/x-stackQL-resources/hyperv_host_controllers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hyperv_host_controllers/methods/delete'
    hyperv_jobs:
      id: azure.migrate.hyperv_jobs
      name: hyperv_jobs
      title: hyperv_jobs
      methods:
        list_by_hyperv_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1jobs?api-version=2023-10-01-preview/get'
            operationId: HypervJobs_ListByHypervSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervJobListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1jobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: HypervJobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/hyperv_jobs/methods/list_by_hyperv_site'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_sites_controller_health_summaries:
      id: azure.migrate.hyperv_sites_controller_health_summaries
      name: hyperv_sites_controller_health_summaries
      title: hyperv_sites_controller_health_summaries
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1listHealthSummary?api-version=2023-10-01-preview/post'
            operationId: HypervSitesControllerHealthSummary_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteHealthSummaryCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_sites_controller_health_summaries/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_machines_controllers:
      id: azure.migrate.hyperv_machines_controllers
      name: hyperv_machines_controllers
      title: hyperv_machines_controllers
      methods:
        list_by_hyperv_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1machines?api-version=2023-10-01-preview/get'
            operationId: HypervMachinesController_ListByHypervSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervMachineListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/get'
            operationId: HypervMachinesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervMachine
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/patch'
            operationId: HypervMachinesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervMachine
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_machines_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/hyperv_machines_controllers/methods/list_by_hyperv_site'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/hyperv_machines_controllers/methods/update'
        replace: []
        delete: []
    hyperv_software_inventories_controller_machine_software_inventories:
      id: azure.migrate.hyperv_software_inventories_controller_machine_software_inventories
      name: hyperv_software_inventories_controller_machine_software_inventories
      title: hyperv_software_inventories_controller_machine_software_inventories
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1machines~1{machineName}~1softwareInventories~1{default}?api-version=2023-10-01-preview/get'
            operationId: HypervSoftwareInventoriesControllerMachineSoftwareInventory_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervVmSoftwareInventory
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_software_inventories_controller_machine_software_inventories/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_software_inventories_controllers:
      id: azure.migrate.hyperv_software_inventories_controllers
      name: hyperv_software_inventories_controllers
      title: hyperv_software_inventories_controllers
      methods:
        list_by_hyperv_machine:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1machines~1{machineName}~1softwareinventories?api-version=2023-10-01-preview/get'
            operationId: HypervSoftwareInventoriesController_ListByHypervMachine
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervVmSoftwareInventoryListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_software_inventories_controllers/methods/list_by_hyperv_machine'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_operations_status_controller_hyperv_operations_status:
      id: azure.migrate.hyperv_operations_status_controller_hyperv_operations_status
      name: hyperv_operations_status_controller_hyperv_operations_status
      title: hyperv_operations_status_controller_hyperv_operations_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1operationsStatus~1{operationStatusName}?api-version=2023-10-01-preview/get'
            operationId: HypervOperationsStatusControllerHypervOperationsStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_operations_status_controller_hyperv_operations_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_run_as_accounts_controllers:
      id: azure.migrate.hyperv_run_as_accounts_controllers
      name: hyperv_run_as_accounts_controllers
      title: hyperv_run_as_accounts_controllers
      methods:
        list_by_hyperv_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1runAsAccounts?api-version=2023-10-01-preview/get'
            operationId: HypervRunAsAccountsController_ListByHypervSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervRunAsAccountResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1runAsAccounts~1{accountName}?api-version=2023-10-01-preview/get'
            operationId: HypervRunAsAccountsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HypervRunAsAccountResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_run_as_accounts_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/hyperv_run_as_accounts_controllers/methods/list_by_hyperv_site'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_dependency_map_controller_dependency_map_status:
      id: azure.migrate.hyperv_dependency_map_controller_dependency_map_status
      name: hyperv_dependency_map_controller_dependency_map_status
      title: hyperv_dependency_map_controller_dependency_map_status
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1updateDependencyMapStatus?api-version=2023-10-01-preview/post'
            operationId: HypervDependencyMapControllerDependencyMapStatus_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_machines_controller_properties:
      id: azure.migrate.hyperv_machines_controller_properties
      name: hyperv_machines_controller_properties
      title: hyperv_machines_controller_properties
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1hypervSites~1{siteName}~1updateProperties?api-version=2023-10-01-preview/post'
            operationId: HypervMachinesControllerProperties_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    import_sites_controller_imported_machines:
      id: azure.migrate.import_sites_controller_imported_machines
      name: import_sites_controller_imported_machines
      title: import_sites_controller_imported_machines
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1deleteImportedMachines?api-version=2023-10-01-preview/post'
            operationId: ImportSitesControllerImportedMachines_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SasUriResponse
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    import_jobs_controller_deletejobs:
      id: azure.migrate.import_jobs_controller_deletejobs
      name: import_jobs_controller_deletejobs
      title: import_jobs_controller_deletejobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1deleteJobs?api-version=2023-10-01-preview/get'
            operationId: ImportJobsControllerDeletejobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedDeleteImportMachinesJob
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1deleteJobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: ImportJobsControllerDeletejob_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeleteImportMachinesJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs_controller_deletejobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_jobs_controller_deletejobs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    import_jobs_controller_exportjobs:
      id: azure.migrate.import_jobs_controller_exportjobs
      name: import_jobs_controller_exportjobs
      title: import_jobs_controller_exportjobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1exportJobs?api-version=2023-10-01-preview/get'
            operationId: ImportJobsControllerExportjobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedExportImportedMachinesJob
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1exportJobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: ImportJobsControllerExportjob_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExportImportedMachinesJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs_controller_exportjobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_jobs_controller_exportjobs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    import_jobs_controller_importjobs:
      id: azure.migrate.import_jobs_controller_importjobs
      name: import_jobs_controller_importjobs
      title: import_jobs_controller_importjobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1importJobs?api-version=2023-10-01-preview/get'
            operationId: ImportJobsControllerImportjobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PagedImportMachinesJob
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1importJobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: ImportJobsControllerImportjob_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportMachinesJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs_controller_importjobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_jobs_controller_importjobs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    import_jobs_controllers:
      id: azure.migrate.import_jobs_controllers
      name: import_jobs_controllers
      title: import_jobs_controllers
      methods:
        list_by_import_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1jobs?api-version=2023-10-01-preview/get'
            operationId: ImportJobsController_ListByImportSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportJobListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1jobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: ImportJobsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_jobs_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_jobs_controllers/methods/list_by_import_site'
        insert: []
        update: []
        replace: []
        delete: []
    import_machines_controllers:
      id: azure.migrate.import_machines_controllers
      name: import_machines_controllers
      title: import_machines_controllers
      methods:
        list_by_import_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1machines?api-version=2023-10-01-preview/get'
            operationId: ImportMachinesController_ListByImportSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportMachineListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/get'
            operationId: ImportMachinesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ImportMachine
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1importSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/delete'
            operationId: ImportMachinesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/import_machines_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/import_machines_controllers/methods/list_by_import_site'
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/import_machines_controllers/methods/delete'
    master_sites_operations_status_controller_vmware_operation_status:
      id: azure.migrate.master_sites_operations_status_controller_vmware_operation_status
      name: master_sites_operations_status_controller_vmware_operation_status
      title: master_sites_operations_status_controller_vmware_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1operationsStatus~1{operationStatusName}?api-version=2023-10-01-preview/get'
            operationId: MasterSitesOperationsStatusControllerVmwareOperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/master_sites_operations_status_controller_vmware_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoint_connection_controllers:
      id: azure.migrate.private_endpoint_connection_controllers
      name: private_endpoint_connection_controllers
      title: private_endpoint_connection_controllers
      methods:
        list_by_master_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1privateEndpointConnections?api-version=2023-10-01-preview/get'
            operationId: PrivateEndpointConnectionController_ListByMasterSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1privateEndpointConnections~1{peConnectionName}?api-version=2023-10-01-preview/get'
            operationId: PrivateEndpointConnectionController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1privateEndpointConnections~1{peConnectionName}?api-version=2023-10-01-preview/put'
            operationId: PrivateEndpointConnectionController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1privateEndpointConnections~1{peConnectionName}?api-version=2023-10-01-preview/delete'
            operationId: PrivateEndpointConnectionController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection_controllers/methods/list_by_master_site'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection_controllers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connection_controllers/methods/delete'
    private_link_resources_controllers:
      id: azure.migrate.private_link_resources_controllers
      name: private_link_resources_controllers
      title: private_link_resources_controllers
      methods:
        list_by_master_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1privateLinkResources?api-version=2023-10-01-preview/get'
            operationId: PrivateLinkResourcesController_ListByMasterSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1privateLinkResources~1{privateLinkResourceName}?api-version=2023-10-01-preview/get'
            operationId: PrivateLinkResourcesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources_controllers/methods/list_by_master_site'
        insert: []
        update: []
        replace: []
        delete: []
    sql_sites_controllers:
      id: azure.migrate.sql_sites_controllers
      name: sql_sites_controllers
      title: sql_sites_controllers
      methods:
        list_by_master_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites?api-version=2023-10-01-preview/get'
            operationId: SqlSitesController_ListByMasterSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlSiteListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}?api-version=2023-10-01-preview/get'
            operationId: SqlSitesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlSite
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}?api-version=2023-10-01-preview/put'
            operationId: SqlSitesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlSite
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}?api-version=2023-10-01-preview/patch'
            operationId: SqlSitesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlSite
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}?api-version=2023-10-01-preview/delete'
            operationId: SqlSitesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        error_summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1errorSummary?api-version=2023-10-01-preview/post'
            operationId: SqlSitesController_ErrorSummary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteErrorSummary
        export_sql_server_errors:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1exportSqlServerErrors?api-version=2023-10-01-preview/post'
            operationId: SqlSitesController_ExportSqlServerErrors
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_sql_servers:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1exportSqlServers?api-version=2023-10-01-preview/post'
            operationId: SqlSitesController_ExportSqlServers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1refresh?api-version=2023-10-01-preview/post'
            operationId: SqlSitesController_Refresh
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1summary?api-version=2023-10-01-preview/post'
            operationId: SqlSitesController_Summary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlSiteUsage
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_sites_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_sites_controllers/methods/list_by_master_site'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_sites_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/sql_sites_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_sites_controllers/methods/delete'
    sql_discovery_site_data_source_controllers:
      id: azure.migrate.sql_discovery_site_data_source_controllers
      name: sql_discovery_site_data_source_controllers
      title: sql_discovery_site_data_source_controllers
      methods:
        list_by_sql_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1discoverySiteDataSources?api-version=2023-10-01-preview/get'
            operationId: SqlDiscoverySiteDataSourceController_ListBySqlSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDiscoverySiteDataSourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1discoverySiteDataSources~1{discoverySiteDataSourceName}?api-version=2023-10-01-preview/get'
            operationId: SqlDiscoverySiteDataSourceController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDiscoverySiteDataSource
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1discoverySiteDataSources~1{discoverySiteDataSourceName}?api-version=2023-10-01-preview/put'
            operationId: SqlDiscoverySiteDataSourceController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDiscoverySiteDataSource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1discoverySiteDataSources~1{discoverySiteDataSourceName}?api-version=2023-10-01-preview/delete'
            operationId: SqlDiscoverySiteDataSourceController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_discovery_site_data_source_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_discovery_site_data_source_controllers/methods/list_by_sql_site'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_discovery_site_data_source_controllers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_discovery_site_data_source_controllers/methods/delete'
    sql_jobs_controllers:
      id: azure.migrate.sql_jobs_controllers
      name: sql_jobs_controllers
      title: sql_jobs_controllers
      methods:
        list_by_sql_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1jobs?api-version=2023-10-01-preview/get'
            operationId: SqlJobsController_ListBySqlSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlJobListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1jobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: SqlJobsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_jobs_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_jobs_controllers/methods/list_by_sql_site'
        insert: []
        update: []
        replace: []
        delete: []
    sql_operations_status_controller_sql_operation_status:
      id: azure.migrate.sql_operations_status_controller_sql_operation_status
      name: sql_operations_status_controller_sql_operation_status
      title: sql_operations_status_controller_sql_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1operationsStatus~1{operationStatusName}?api-version=2023-10-01-preview/get'
            operationId: SqlOperationsStatusControllerSqlOperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_operations_status_controller_sql_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    sql_run_as_accounts_controllers:
      id: azure.migrate.sql_run_as_accounts_controllers
      name: sql_run_as_accounts_controllers
      title: sql_run_as_accounts_controllers
      methods:
        list_by_sql_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1runAsAccounts?api-version=2023-10-01-preview/get'
            operationId: SqlRunAsAccountsController_ListBySqlSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRunAsAccountListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1runAsAccounts~1{accountName}?api-version=2023-10-01-preview/get'
            operationId: SqlRunAsAccountsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRunAsAccount
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_run_as_accounts_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_run_as_accounts_controllers/methods/list_by_sql_site'
        insert: []
        update: []
        replace: []
        delete: []
    sql_availability_groups_controllers:
      id: azure.migrate.sql_availability_groups_controllers
      name: sql_availability_groups_controllers
      title: sql_availability_groups_controllers
      methods:
        list_by_sql_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1sqlAvailabilityGroups?api-version=2023-10-01-preview/get'
            operationId: SqlAvailabilityGroupsController_ListBySqlSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlAvailabilityGroupListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1sqlAvailabilityGroups~1{sqlAvailabilityGroupName}?api-version=2023-10-01-preview/get'
            operationId: SqlAvailabilityGroupsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlAvailabilityGroup
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_availability_groups_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_availability_groups_controllers/methods/list_by_sql_site'
        insert: []
        update: []
        replace: []
        delete: []
    sql_databases_controllers:
      id: azure.migrate.sql_databases_controllers
      name: sql_databases_controllers
      title: sql_databases_controllers
      methods:
        list_by_sql_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1sqlDatabases?api-version=2023-10-01-preview/get'
            operationId: SqlDatabasesController_ListBySqlSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDatabaseV2ListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1sqlDatabases~1{sqlDatabaseName}?api-version=2023-10-01-preview/get'
            operationId: SqlDatabasesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDatabaseV2
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_databases_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_databases_controllers/methods/list_by_sql_site'
        insert: []
        update: []
        replace: []
        delete: []
    sql_servers_controllers:
      id: azure.migrate.sql_servers_controllers
      name: sql_servers_controllers
      title: sql_servers_controllers
      methods:
        list_by_sql_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1sqlServers?api-version=2023-10-01-preview/get'
            operationId: SqlServersController_ListBySqlSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlServerV2ListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1sqlServers~1{sqlServerName}?api-version=2023-10-01-preview/get'
            operationId: SqlServersController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlServerV2
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1sqlSites~1{sqlSiteName}~1sqlServers~1{sqlServerName}?api-version=2023-10-01-preview/patch'
            operationId: SqlServersController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlServerV2
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_servers_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_servers_controllers/methods/list_by_sql_site'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/sql_servers_controllers/methods/update'
        replace: []
        delete: []
    web_app_sites_controllers:
      id: azure.migrate.web_app_sites_controllers
      name: web_app_sites_controllers
      title: web_app_sites_controllers
      methods:
        list_by_master_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites?api-version=2023-10-01-preview/get'
            operationId: WebAppSitesController_ListByMasterSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppSiteListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}?api-version=2023-10-01-preview/get'
            operationId: WebAppSitesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppSite
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}?api-version=2023-10-01-preview/put'
            operationId: WebAppSitesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppSite
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}?api-version=2023-10-01-preview/patch'
            operationId: WebAppSitesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppSite
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}?api-version=2023-10-01-preview/delete'
            operationId: WebAppSitesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        error_summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1errorSummary?api-version=2023-10-01-preview/post'
            operationId: WebAppSitesController_ErrorSummary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteErrorSummary
        export_inventory:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1exportInventory?api-version=2023-10-01-preview/post'
            operationId: WebAppSitesController_ExportInventory
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1refresh?api-version=2023-10-01-preview/post'
            operationId: WebAppSitesController_Refresh
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        summary:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1summary?api-version=2023-10-01-preview/post'
            operationId: WebAppSitesController_Summary
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppSiteUsage
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_app_sites_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/web_app_sites_controllers/methods/list_by_master_site'
        insert:
          - $ref: '#/components/x-stackQL-resources/web_app_sites_controllers/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/web_app_sites_controllers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/web_app_sites_controllers/methods/delete'
    web_app_discovery_site_data_sources_controllers:
      id: azure.migrate.web_app_discovery_site_data_sources_controllers
      name: web_app_discovery_site_data_sources_controllers
      title: web_app_discovery_site_data_sources_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1discoverySiteDataSources?api-version=2023-10-01-preview/get'
            operationId: WebAppDiscoverySiteDataSourcesController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiscoverySiteDataSourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1discoverySiteDataSources~1{discoverySiteDataSourceName}?api-version=2023-10-01-preview/get'
            operationId: WebAppDiscoverySiteDataSourcesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiscoverySiteDataSource
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1discoverySiteDataSources~1{discoverySiteDataSourceName}?api-version=2023-10-01-preview/put'
            operationId: WebAppDiscoverySiteDataSourcesController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DiscoverySiteDataSource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1discoverySiteDataSources~1{discoverySiteDataSourceName}?api-version=2023-10-01-preview/delete'
            operationId: WebAppDiscoverySiteDataSourcesController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_app_discovery_site_data_sources_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/web_app_discovery_site_data_sources_controllers/methods/list_by_web_app_site'
        insert:
          - $ref: '#/components/x-stackQL-resources/web_app_discovery_site_data_sources_controllers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/web_app_discovery_site_data_sources_controllers/methods/delete'
    web_app_extended_machines_controllers:
      id: azure.migrate.web_app_extended_machines_controllers
      name: web_app_extended_machines_controllers
      title: web_app_extended_machines_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1extendedMachines?api-version=2023-10-01-preview/get'
            operationId: WebAppExtendedMachinesController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppExtendedMachineListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1extendedMachines~1{extendedMachineName}?api-version=2023-10-01-preview/get'
            operationId: WebAppExtendedMachinesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppExtendedMachine
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_app_extended_machines_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/web_app_extended_machines_controllers/methods/list_by_web_app_site'
        insert: []
        update: []
        replace: []
        delete: []
    iis_web_applications_controllers:
      id: azure.migrate.iis_web_applications_controllers
      name: iis_web_applications_controllers
      title: iis_web_applications_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1iisWebApplications?api-version=2023-10-01-preview/get'
            operationId: IisWebApplicationsController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IisWebApplicationsListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1iisWebApplications~1{webApplicationName}?api-version=2023-10-01-preview/get'
            operationId: IisWebApplicationsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IisWebApplications
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1iisWebApplications~1{webApplicationName}?api-version=2023-10-01-preview/patch'
            operationId: IisWebApplicationsController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IisWebApplications
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iis_web_applications_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/iis_web_applications_controllers/methods/list_by_web_app_site'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/iis_web_applications_controllers/methods/update'
        replace: []
        delete: []
    iis_web_servers_controllers:
      id: azure.migrate.iis_web_servers_controllers
      name: iis_web_servers_controllers
      title: iis_web_servers_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1iisWebServers?api-version=2023-10-01-preview/get'
            operationId: IisWebServersController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IisWebServersListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1iisWebServers~1{webServerName}?api-version=2023-10-01-preview/get'
            operationId: IisWebServersController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: IisWebServers
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/iis_web_servers_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/iis_web_servers_controllers/methods/list_by_web_app_site'
        insert: []
        update: []
        replace: []
        delete: []
    web_app_run_as_accounts_controllers:
      id: azure.migrate.web_app_run_as_accounts_controllers
      name: web_app_run_as_accounts_controllers
      title: web_app_run_as_accounts_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1runasaccounts?api-version=2023-10-01-preview/get'
            operationId: WebAppRunAsAccountsController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppRunAsAccountListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1runasaccounts~1{accountName}?api-version=2023-10-01-preview/get'
            operationId: WebAppRunAsAccountsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebAppRunAsAccount
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_app_run_as_accounts_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/web_app_run_as_accounts_controllers/methods/list_by_web_app_site'
        insert: []
        update: []
        replace: []
        delete: []
    tomcat_web_applications_controllers:
      id: azure.migrate.tomcat_web_applications_controllers
      name: tomcat_web_applications_controllers
      title: tomcat_web_applications_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1tomcatWebApplications?api-version=2023-10-01-preview/get'
            operationId: TomcatWebApplicationsController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TomcatWebApplicationsListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1tomcatWebApplications~1{webApplicationName}?api-version=2023-10-01-preview/get'
            operationId: TomcatWebApplicationsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TomcatWebApplications
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1tomcatWebApplications~1{webApplicationName}?api-version=2023-10-01-preview/patch'
            operationId: TomcatWebApplicationsController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TomcatWebApplications
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tomcat_web_applications_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/tomcat_web_applications_controllers/methods/list_by_web_app_site'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/tomcat_web_applications_controllers/methods/update'
        replace: []
        delete: []
    tomcat_web_servers_controllers:
      id: azure.migrate.tomcat_web_servers_controllers
      name: tomcat_web_servers_controllers
      title: tomcat_web_servers_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1tomcatWebServers?api-version=2023-10-01-preview/get'
            operationId: TomcatWebServersController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TomcatWebServersListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1tomcatWebServers~1{webServerName}?api-version=2023-10-01-preview/get'
            operationId: TomcatWebServersController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TomcatWebServers
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tomcat_web_servers_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/tomcat_web_servers_controllers/methods/list_by_web_app_site'
        insert: []
        update: []
        replace: []
        delete: []
    web_app_properties_controller_properties:
      id: azure.migrate.web_app_properties_controller_properties
      name: web_app_properties_controller_properties
      title: web_app_properties_controller_properties
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1updateProperties?api-version=2023-10-01-preview/post'
            operationId: WebAppPropertiesControllerProperties_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    web_applications_controllers:
      id: azure.migrate.web_applications_controllers
      name: web_applications_controllers
      title: web_applications_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1webApplications?api-version=2023-10-01-preview/get'
            operationId: WebApplicationsController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebApplicationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_applications_controllers/methods/list_by_web_app_site'
        insert: []
        update: []
        replace: []
        delete: []
    web_servers_controllers:
      id: azure.migrate.web_servers_controllers
      name: web_servers_controllers
      title: web_servers_controllers
      methods:
        list_by_web_app_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1masterSites~1{siteName}~1webAppSites~1{webAppSiteName}~1webServers?api-version=2023-10-01-preview/get'
            operationId: WebServersController_ListByWebAppSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebServerListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/web_servers_controllers/methods/list_by_web_app_site'
        insert: []
        update: []
        replace: []
        delete: []
    server_dependency_map_controllers:
      id: azure.migrate.server_dependency_map_controllers
      name: server_dependency_map_controllers
      title: server_dependency_map_controllers
      methods:
        client_group_members:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1clientGroupMembers?api-version=2023-10-01-preview/post'
            operationId: ServerDependencyMapController_ClientGroupMembers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_dependencies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1exportDependencies?api-version=2023-10-01-preview/post'
            operationId: ServerDependencyMapController_ExportDependencies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_coarse_map:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1generateCoarseMap?api-version=2023-10-01-preview/post'
            operationId: ServerDependencyMapController_GenerateCoarseMap
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_detailed_map:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1generateDetailedMap?api-version=2023-10-01-preview/post'
            operationId: ServerDependencyMapController_GenerateDetailedMap
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        server_group_members:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1serverGroupMembers?api-version=2023-10-01-preview/post'
            operationId: ServerDependencyMapController_ServerGroupMembers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    server_jobs_controllers:
      id: azure.migrate.server_jobs_controllers
      name: server_jobs_controllers
      title: server_jobs_controllers
      methods:
        list_by_server_site_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1jobs?api-version=2023-10-01-preview/get'
            operationId: ServerJobsController_ListByServerSiteResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerJobListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1jobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: ServerJobsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_jobs_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/server_jobs_controllers/methods/list_by_server_site_resource'
        insert: []
        update: []
        replace: []
        delete: []
    server_sites_controller_health_summaries:
      id: azure.migrate.server_sites_controller_health_summaries
      name: server_sites_controller_health_summaries
      title: server_sites_controller_health_summaries
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1listHealthSummary?api-version=2023-10-01-preview/post'
            operationId: ServerSitesControllerHealthSummary_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteHealthSummaryCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_sites_controller_health_summaries/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    servers_controllers:
      id: azure.migrate.servers_controllers
      name: servers_controllers
      title: servers_controllers
      methods:
        list_by_server_site_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1machines?api-version=2023-10-01-preview/get'
            operationId: ServersController_ListByServerSiteResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers_controllers/methods/list_by_server_site_resource'
        insert: []
        update: []
        replace: []
        delete: []
    servers_controller_machines:
      id: azure.migrate.servers_controller_machines
      name: servers_controller_machines
      title: servers_controller_machines
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/get'
            operationId: ServersControllerMachine_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/patch'
            operationId: ServersControllerMachine_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Server
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/delete'
            operationId: ServersControllerMachine_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/servers_controller_machines/methods/get'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/servers_controller_machines/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/servers_controller_machines/methods/delete'
    server_software_inventories_controller_machine_software_inventories:
      id: azure.migrate.server_software_inventories_controller_machine_software_inventories
      name: server_software_inventories_controller_machine_software_inventories
      title: server_software_inventories_controller_machine_software_inventories
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1machines~1{machineName}~1softwareInventories~1{default}?api-version=2023-10-01-preview/get'
            operationId: ServerSoftwareInventoriesControllerMachineSoftwareInventory_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSoftwareInventory
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_software_inventories_controller_machine_software_inventories/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    server_software_inventories_controllers:
      id: azure.migrate.server_software_inventories_controllers
      name: server_software_inventories_controllers
      title: server_software_inventories_controllers
      methods:
        list_by_server:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1machines~1{machineName}~1softwareinventories?api-version=2023-10-01-preview/get'
            operationId: ServerSoftwareInventoriesController_ListByServer
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerSoftwareInventoryListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_software_inventories_controllers/methods/list_by_server'
        insert: []
        update: []
        replace: []
        delete: []
    server_operations_status_controller_server_site_operations_status:
      id: azure.migrate.server_operations_status_controller_server_site_operations_status
      name: server_operations_status_controller_server_site_operations_status
      title: server_operations_status_controller_server_site_operations_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1operationsStatus~1{operationStatusName}?api-version=2023-10-01-preview/get'
            operationId: ServerOperationsStatusControllerServerSiteOperationsStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_operations_status_controller_server_site_operations_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    server_run_as_accounts_controllers:
      id: azure.migrate.server_run_as_accounts_controllers
      name: server_run_as_accounts_controllers
      title: server_run_as_accounts_controllers
      methods:
        list_by_server_site_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1runAsAccounts?api-version=2023-10-01-preview/get'
            operationId: ServerRunAsAccountsController_ListByServerSiteResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerRunAsAccountListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1runAsAccounts~1{accountName}?api-version=2023-10-01-preview/get'
            operationId: ServerRunAsAccountsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServerRunAsAccount
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/server_run_as_accounts_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/server_run_as_accounts_controllers/methods/list_by_server_site_resource'
        insert: []
        update: []
        replace: []
        delete: []
    server_sites_controller_dependency_map_status:
      id: azure.migrate.server_sites_controller_dependency_map_status
      name: server_sites_controller_dependency_map_status
      title: server_sites_controller_dependency_map_status
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1updateDependencyMapStatus?api-version=2023-10-01-preview/post'
            operationId: ServerSitesControllerDependencyMapStatus_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    server_sites_controller_properties:
      id: azure.migrate.server_sites_controller_properties
      name: server_sites_controller_properties
      title: server_sites_controller_properties
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1serverSites~1{siteName}~1updateProperties?api-version=2023-10-01-preview/post'
            operationId: ServerSitesControllerProperties_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    dependency_map_controllers:
      id: azure.migrate.dependency_map_controllers
      name: dependency_map_controllers
      title: dependency_map_controllers
      methods:
        client_group_members:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1clientGroupMembers?api-version=2023-10-01-preview/post'
            operationId: DependencyMapController_ClientGroupMembers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_dependencies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1exportDependencies?api-version=2023-10-01-preview/post'
            operationId: DependencyMapController_ExportDependencies
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_coarse_map:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1generateCoarseMap?api-version=2023-10-01-preview/post'
            operationId: DependencyMapController_GenerateCoarseMap
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_detailed_map:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1generateDetailedMap?api-version=2023-10-01-preview/post'
            operationId: DependencyMapController_GenerateDetailedMap
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        server_group_members:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1serverGroupMembers?api-version=2023-10-01-preview/post'
            operationId: DependencyMapController_ServerGroupMembers
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vmware_host_controllers:
      id: azure.migrate.vmware_host_controllers
      name: vmware_host_controllers
      title: vmware_host_controllers
      methods:
        list_by_vmware_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1hosts?api-version=2023-10-01-preview/get'
            operationId: VmwareHostController_ListByVmwareSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareHostListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1hosts~1{hostName}?api-version=2023-10-01-preview/get'
            operationId: VmwareHostController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareHost
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_host_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/vmware_host_controllers/methods/list_by_vmware_site'
        insert: []
        update: []
        replace: []
        delete: []
    hyperv_jobs_controllers:
      id: azure.migrate.hyperv_jobs_controllers
      name: hyperv_jobs_controllers
      title: hyperv_jobs_controllers
      methods:
        list_by_vmware_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1jobs?api-version=2023-10-01-preview/get'
            operationId: HypervJobsController_ListByVmwareSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareJobListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1jobs~1{jobName}?api-version=2023-10-01-preview/get'
            operationId: HypervJobsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareJob
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hyperv_jobs_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/hyperv_jobs_controllers/methods/list_by_vmware_site'
        insert: []
        update: []
        replace: []
        delete: []
    sites_controller_health_summaries:
      id: azure.migrate.sites_controller_health_summaries
      name: sites_controller_health_summaries
      title: sites_controller_health_summaries
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1listHealthSummary?api-version=2023-10-01-preview/post'
            operationId: SitesControllerHealthSummary_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SiteHealthSummaryCollection
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sites_controller_health_summaries/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    machines_controllers:
      id: azure.migrate.machines_controllers
      name: machines_controllers
      title: machines_controllers
      methods:
        list_by_vmware_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1machines?api-version=2023-10-01-preview/get'
            operationId: MachinesController_ListByVmwareSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MachineResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/get'
            operationId: MachinesController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MachineResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1machines~1{machineName}?api-version=2023-10-01-preview/patch'
            operationId: MachinesController_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MachineResource
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1machines~1{machineName}~1start?api-version=2023-10-01-preview/post'
            operationId: MachinesController_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1machines~1{machineName}~1stop?api-version=2023-10-01-preview/post'
            operationId: MachinesController_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/machines_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/machines_controllers/methods/list_by_vmware_site'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/machines_controllers/methods/update'
        replace: []
        delete: []
    vmware_software_inventories_controller_machine_software_inventories:
      id: azure.migrate.vmware_software_inventories_controller_machine_software_inventories
      name: vmware_software_inventories_controller_machine_software_inventories
      title: vmware_software_inventories_controller_machine_software_inventories
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1machines~1{machineName}~1softwareInventories~1{default}?api-version=2023-10-01-preview/get'
            operationId: VmwareSoftwareInventoriesControllerMachineSoftwareInventory_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareMachineSoftwareInventory
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_software_inventories_controller_machine_software_inventories/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vmware_software_inventories_controllers:
      id: azure.migrate.vmware_software_inventories_controllers
      name: vmware_software_inventories_controllers
      title: vmware_software_inventories_controllers
      methods:
        list_by_machine_resource:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1machines~1{machineName}~1softwareinventories?api-version=2023-10-01-preview/get'
            operationId: VmwareSoftwareInventoriesController_ListByMachineResource
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareMachineSoftwareInventoryListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_software_inventories_controllers/methods/list_by_machine_resource'
        insert: []
        update: []
        replace: []
        delete: []
    vmware_operations_status_vmware_operation_status:
      id: azure.migrate.vmware_operations_status_vmware_operation_status
      name: vmware_operations_status_vmware_operation_status
      title: vmware_operations_status_vmware_operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1operationsStatus~1{operationStatusName}?api-version=2023-10-01-preview/get'
            operationId: VmwareOperationsStatusVmwareOperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vmware_operations_status_vmware_operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    run_as_accounts_controllers:
      id: azure.migrate.run_as_accounts_controllers
      name: run_as_accounts_controllers
      title: run_as_accounts_controllers
      methods:
        list_by_vmware_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1runAsAccounts?api-version=2023-10-01-preview/get'
            operationId: RunAsAccountsController_ListByVmwareSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareRunAsAccountResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1runAsAccounts~1{accountName}?api-version=2023-10-01-preview/get'
            operationId: RunAsAccountsController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VmwareRunAsAccountResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/run_as_accounts_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/run_as_accounts_controllers/methods/list_by_vmware_site'
        insert: []
        update: []
        replace: []
        delete: []
    vmware_properties_controller_dependency_map_status:
      id: azure.migrate.vmware_properties_controller_dependency_map_status
      name: vmware_properties_controller_dependency_map_status
      title: vmware_properties_controller_dependency_map_status
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1updateDependencyMapStatus?api-version=2023-10-01-preview/post'
            operationId: VmwarePropertiesControllerDependencyMapStatus_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vmware_properties_controller_properties:
      id: azure.migrate.vmware_properties_controller_properties
      name: vmware_properties_controller_properties
      title: vmware_properties_controller_properties
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1updateProperties?api-version=2023-10-01-preview/post'
            operationId: VmwarePropertiesControllerProperties_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vmware_properties_controller_run_as_accounts:
      id: azure.migrate.vmware_properties_controller_run_as_accounts
      name: vmware_properties_controller_run_as_accounts
      title: vmware_properties_controller_run_as_accounts
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1updateRunAsAccount?api-version=2023-10-01-preview/post'
            operationId: VmwarePropertiesControllerRunAsAccount_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vmware_properties_controllers:
      id: azure.migrate.vmware_properties_controllers
      name: vmware_properties_controllers
      title: vmware_properties_controllers
      methods:
        update_tags:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1updateTags?api-version=2023-10-01-preview/post'
            operationId: VmwarePropertiesController_UpdateTags
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    vcenter_controllers:
      id: azure.migrate.vcenter_controllers
      name: vcenter_controllers
      title: vcenter_controllers
      methods:
        list_by_vmware_site:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1vcenters?api-version=2023-10-01-preview/get'
            operationId: VcenterController_ListByVmwareSite
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VcenterListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1vcenters~1{vcenterName}?api-version=2023-10-01-preview/get'
            operationId: VcenterController_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Vcenter
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1vcenters~1{vcenterName}?api-version=2023-10-01-preview/put'
            operationId: VcenterController_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Vcenter
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.OffAzure~1vmwareSites~1{siteName}~1vcenters~1{vcenterName}?api-version=2023-10-01-preview/delete'
            operationId: VcenterController_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/vcenter_controllers/methods/get'
          - $ref: '#/components/x-stackQL-resources/vcenter_controllers/methods/list_by_vmware_site'
        insert:
          - $ref: '#/components/x-stackQL-resources/vcenter_controllers/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/vcenter_controllers/methods/delete'
    vw_import_sites_controllers:
      id: azure.migrate.vw_import_sites_controllers
      name: vw_import_sites_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.discoverySolutionId') as "discovery_solution_id",
              JSON_EXTRACT(properties, '$.masterSiteId') as "master_site_id",
              JSON_EXTRACT(properties, '$.serviceEndpoint') as "service_endpoint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName
              FROM azure.migrate.import_sites_controllers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.discoverySolutionId') as "discovery_solution_id",
                json_extract_path_text(properties, '$.masterSiteId') as "master_site_id",
                json_extract_path_text(properties, '$.serviceEndpoint') as "service_endpoint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName
                FROM azure.migrate.import_sites_controllers
                WHERE subscriptionId = 'replace-me';
    vw_master_sites_controllers:
      id: azure.migrate.vw_master_sites_controllers
      name: vw_master_sites_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.allowMultipleSites') as "allow_multiple_sites",
              JSON_EXTRACT(properties, '$.sites') as "sites",
              JSON_EXTRACT(properties, '$.customerStorageAccountArmId') as "customer_storage_account_arm_id",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.nestedSites') as "nested_sites",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName
              FROM azure.migrate.master_sites_controllers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.allowMultipleSites') as "allow_multiple_sites",
                json_extract_path_text(properties, '$.sites') as "sites",
                json_extract_path_text(properties, '$.customerStorageAccountArmId') as "customer_storage_account_arm_id",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.nestedSites') as "nested_sites",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName
                FROM azure.migrate.master_sites_controllers
                WHERE subscriptionId = 'replace-me';
    vw_server_sites_controllers:
      id: azure.migrate.vw_server_sites_controllers
      name: vw_server_sites_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.masterSiteId') as "master_site_id",
              JSON_EXTRACT(properties, '$.servicePrincipalIdentityDetails') as "service_principal_identity_details",
              JSON_EXTRACT(properties, '$.agentDetails') as "agent_details",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.discoverySolutionId') as "discovery_solution_id",
              JSON_EXTRACT(properties, '$.serviceEndpoint') as "service_endpoint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName
              FROM azure.migrate.server_sites_controllers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.masterSiteId') as "master_site_id",
                json_extract_path_text(properties, '$.servicePrincipalIdentityDetails') as "service_principal_identity_details",
                json_extract_path_text(properties, '$.agentDetails') as "agent_details",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.discoverySolutionId') as "discovery_solution_id",
                json_extract_path_text(properties, '$.serviceEndpoint') as "service_endpoint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName
                FROM azure.migrate.server_sites_controllers
                WHERE subscriptionId = 'replace-me';
    vw_sites_controllers:
      id: azure.migrate.vw_sites_controllers
      name: vw_sites_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              eTag as e_tag,
              tags as tags,
              JSON_EXTRACT(properties, '$.masterSiteId') as "master_site_id",
              JSON_EXTRACT(properties, '$.servicePrincipalIdentityDetails') as "service_principal_identity_details",
              JSON_EXTRACT(properties, '$.agentDetails') as "agent_details",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.discoverySolutionId') as "discovery_solution_id",
              JSON_EXTRACT(properties, '$.serviceEndpoint') as "service_endpoint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName
              FROM azure.migrate.sites_controllers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                eTag as e_tag,
                tags as tags,
                json_extract_path_text(properties, '$.masterSiteId') as "master_site_id",
                json_extract_path_text(properties, '$.servicePrincipalIdentityDetails') as "service_principal_identity_details",
                json_extract_path_text(properties, '$.agentDetails') as "agent_details",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.discoverySolutionId') as "discovery_solution_id",
                json_extract_path_text(properties, '$.serviceEndpoint') as "service_endpoint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName
                FROM azure.migrate.sites_controllers
                WHERE subscriptionId = 'replace-me';
    vw_hyperv_sites_controllers:
      id: azure.migrate.vw_hyperv_sites_controllers
      name: vw_hyperv_sites_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.masterSiteId') as "master_site_id",
              JSON_EXTRACT(properties, '$.servicePrincipalIdentityDetails') as "service_principal_identity_details",
              JSON_EXTRACT(properties, '$.agentDetails') as "agent_details",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.discoverySolutionId') as "discovery_solution_id",
              JSON_EXTRACT(properties, '$.serviceEndpoint') as "service_endpoint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName
              FROM azure.migrate.hyperv_sites_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.masterSiteId') as "master_site_id",
                json_extract_path_text(properties, '$.servicePrincipalIdentityDetails') as "service_principal_identity_details",
                json_extract_path_text(properties, '$.agentDetails') as "agent_details",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.discoverySolutionId') as "discovery_solution_id",
                json_extract_path_text(properties, '$.serviceEndpoint') as "service_endpoint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName
                FROM azure.migrate.hyperv_sites_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_hyperv_cluster_controller_clusters:
      id: azure.migrate.vw_hyperv_cluster_controller_clusters
      name: vw_hyperv_cluster_controller_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.fqdn') as "fqdn",
              JSON_EXTRACT(properties, '$.functionalLevel') as "functional_level",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.hostFqdnList') as "host_fqdn_list",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              clusterName
              FROM azure.migrate.hyperv_cluster_controller_clusters
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.fqdn') as "fqdn",
                json_extract_path_text(properties, '$.functionalLevel') as "functional_level",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.hostFqdnList') as "host_fqdn_list",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                clusterName
                FROM azure.migrate.hyperv_cluster_controller_clusters
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND clusterName = 'replace-me';
    vw_hyperv_host_controllers:
      id: azure.migrate.vw_hyperv_host_controllers
      name: vw_hyperv_host_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.fqdn') as "fqdn",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              hostName
              FROM azure.migrate.hyperv_host_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.fqdn') as "fqdn",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                hostName
                FROM azure.migrate.hyperv_host_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_hyperv_jobs:
      id: azure.migrate.vw_hyperv_jobs
      name: vw_hyperv_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.clientRequestId') as "client_request_id",
              JSON_EXTRACT(properties, '$.activityId') as "activity_id",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              jobName
              FROM azure.migrate.hyperv_jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.clientRequestId') as "client_request_id",
                json_extract_path_text(properties, '$.activityId') as "activity_id",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                jobName
                FROM azure.migrate.hyperv_jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_hyperv_machines_controllers:
      id: azure.migrate.vw_hyperv_machines_controllers
      name: vw_hyperv_machines_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.instanceUuid') as "instance_uuid",
              JSON_EXTRACT(properties, '$.hostFqdn') as "host_fqdn",
              JSON_EXTRACT(properties, '$.hostId') as "host_id",
              JSON_EXTRACT(properties, '$.generation') as "generation",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.highAvailability') as "high_availability",
              JSON_EXTRACT(properties, '$.clusterFqdn') as "cluster_fqdn",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.maxMemoryMb') as "max_memory_mb",
              JSON_EXTRACT(properties, '$.isDynamicMemoryEnabled') as "is_dynamic_memory_enabled",
              JSON_EXTRACT(properties, '$.disks') as "disks",
              JSON_EXTRACT(properties, '$.networkAdapters') as "network_adapters",
              JSON_EXTRACT(properties, '$.managementServerType') as "management_server_type",
              JSON_EXTRACT(properties, '$.secureBootTemplateId') as "secure_boot_template_id",
              JSON_EXTRACT(properties, '$.secureBootEnabled') as "secure_boot_enabled",
              JSON_EXTRACT(properties, '$.secureBootTemplate') as "secure_boot_template",
              JSON_EXTRACT(properties, '$.tpmEnabled') as "tpm_enabled",
              JSON_EXTRACT(properties, '$.ksdEnabled') as "ksd_enabled",
              JSON_EXTRACT(properties, '$.shieldingRequested') as "shielding_requested",
              JSON_EXTRACT(properties, '$.dataProtectionRequested') as "data_protection_requested",
              JSON_EXTRACT(properties, '$.encryptStateAndVmMigrationTraffic') as "encrypt_state_and_vm_migration_traffic",
              JSON_EXTRACT(properties, '$.virtualizationBasedSecurityOptOut') as "virtualization_based_security_opt_out",
              JSON_EXTRACT(properties, '$.powerStatus') as "power_status",
              JSON_EXTRACT(properties, '$.vmFqdn') as "vm_fqdn",
              JSON_EXTRACT(properties, '$.vmConfigurationFileLocation') as "vm_configuration_file_location",
              JSON_EXTRACT(properties, '$.firmware') as "firmware",
              JSON_EXTRACT(properties, '$.guestOsDetails') as "guest_os_details",
              JSON_EXTRACT(properties, '$.numberOfApplications') as "number_of_applications",
              JSON_EXTRACT(properties, '$.guestDetailsDiscoveryTimestamp') as "guest_details_discovery_timestamp",
              JSON_EXTRACT(properties, '$.isGuestDetailsDiscoveryInProgress') as "is_guest_details_discovery_in_progress",
              JSON_EXTRACT(properties, '$.dependencyMapping') as "dependency_mapping",
              JSON_EXTRACT(properties, '$.dependencyMappingStartTime') as "dependency_mapping_start_time",
              JSON_EXTRACT(properties, '$.dependencyMappingEndTime') as "dependency_mapping_end_time",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.applicationDiscovery') as "application_discovery",
              JSON_EXTRACT(properties, '$.dependencyMapDiscovery') as "dependency_map_discovery",
              JSON_EXTRACT(properties, '$.staticDiscovery') as "static_discovery",
              JSON_EXTRACT(properties, '$.sqlDiscovery') as "sql_discovery",
              JSON_EXTRACT(properties, '$.webAppDiscovery') as "web_app_discovery",
              JSON_EXTRACT(properties, '$.oracleDiscovery') as "oracle_discovery",
              JSON_EXTRACT(properties, '$.springBootDiscovery') as "spring_boot_discovery",
              JSON_EXTRACT(properties, '$.iisDiscovery') as "iis_discovery",
              JSON_EXTRACT(properties, '$.tomcatDiscovery') as "tomcat_discovery",
              JSON_EXTRACT(properties, '$.appsAndRoles') as "apps_and_roles",
              JSON_EXTRACT(properties, '$.productSupportStatus') as "product_support_status",
              JSON_EXTRACT(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
              JSON_EXTRACT(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
              JSON_EXTRACT(properties, '$.operatingSystemDetails') as "operating_system_details",
              JSON_EXTRACT(properties, '$.biosSerialNumber') as "bios_serial_number",
              JSON_EXTRACT(properties, '$.biosGuid') as "bios_guid",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.tags') as "tags",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              machineName
              FROM azure.migrate.hyperv_machines_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.instanceUuid') as "instance_uuid",
                json_extract_path_text(properties, '$.hostFqdn') as "host_fqdn",
                json_extract_path_text(properties, '$.hostId') as "host_id",
                json_extract_path_text(properties, '$.generation') as "generation",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.highAvailability') as "high_availability",
                json_extract_path_text(properties, '$.clusterFqdn') as "cluster_fqdn",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.maxMemoryMb') as "max_memory_mb",
                json_extract_path_text(properties, '$.isDynamicMemoryEnabled') as "is_dynamic_memory_enabled",
                json_extract_path_text(properties, '$.disks') as "disks",
                json_extract_path_text(properties, '$.networkAdapters') as "network_adapters",
                json_extract_path_text(properties, '$.managementServerType') as "management_server_type",
                json_extract_path_text(properties, '$.secureBootTemplateId') as "secure_boot_template_id",
                json_extract_path_text(properties, '$.secureBootEnabled') as "secure_boot_enabled",
                json_extract_path_text(properties, '$.secureBootTemplate') as "secure_boot_template",
                json_extract_path_text(properties, '$.tpmEnabled') as "tpm_enabled",
                json_extract_path_text(properties, '$.ksdEnabled') as "ksd_enabled",
                json_extract_path_text(properties, '$.shieldingRequested') as "shielding_requested",
                json_extract_path_text(properties, '$.dataProtectionRequested') as "data_protection_requested",
                json_extract_path_text(properties, '$.encryptStateAndVmMigrationTraffic') as "encrypt_state_and_vm_migration_traffic",
                json_extract_path_text(properties, '$.virtualizationBasedSecurityOptOut') as "virtualization_based_security_opt_out",
                json_extract_path_text(properties, '$.powerStatus') as "power_status",
                json_extract_path_text(properties, '$.vmFqdn') as "vm_fqdn",
                json_extract_path_text(properties, '$.vmConfigurationFileLocation') as "vm_configuration_file_location",
                json_extract_path_text(properties, '$.firmware') as "firmware",
                json_extract_path_text(properties, '$.guestOsDetails') as "guest_os_details",
                json_extract_path_text(properties, '$.numberOfApplications') as "number_of_applications",
                json_extract_path_text(properties, '$.guestDetailsDiscoveryTimestamp') as "guest_details_discovery_timestamp",
                json_extract_path_text(properties, '$.isGuestDetailsDiscoveryInProgress') as "is_guest_details_discovery_in_progress",
                json_extract_path_text(properties, '$.dependencyMapping') as "dependency_mapping",
                json_extract_path_text(properties, '$.dependencyMappingStartTime') as "dependency_mapping_start_time",
                json_extract_path_text(properties, '$.dependencyMappingEndTime') as "dependency_mapping_end_time",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.applicationDiscovery') as "application_discovery",
                json_extract_path_text(properties, '$.dependencyMapDiscovery') as "dependency_map_discovery",
                json_extract_path_text(properties, '$.staticDiscovery') as "static_discovery",
                json_extract_path_text(properties, '$.sqlDiscovery') as "sql_discovery",
                json_extract_path_text(properties, '$.webAppDiscovery') as "web_app_discovery",
                json_extract_path_text(properties, '$.oracleDiscovery') as "oracle_discovery",
                json_extract_path_text(properties, '$.springBootDiscovery') as "spring_boot_discovery",
                json_extract_path_text(properties, '$.iisDiscovery') as "iis_discovery",
                json_extract_path_text(properties, '$.tomcatDiscovery') as "tomcat_discovery",
                json_extract_path_text(properties, '$.appsAndRoles') as "apps_and_roles",
                json_extract_path_text(properties, '$.productSupportStatus') as "product_support_status",
                json_extract_path_text(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
                json_extract_path_text(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
                json_extract_path_text(properties, '$.operatingSystemDetails') as "operating_system_details",
                json_extract_path_text(properties, '$.biosSerialNumber') as "bios_serial_number",
                json_extract_path_text(properties, '$.biosGuid') as "bios_guid",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.tags') as "tags",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                machineName
                FROM azure.migrate.hyperv_machines_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_hyperv_software_inventories_controller_machine_software_inventories:
      id: azure.migrate.vw_hyperv_software_inventories_controller_machine_software_inventories
      name: vw_hyperv_software_inventories_controller_machine_software_inventories
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.appsAndRoles') as "apps_and_roles",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              machineName,
              default
              FROM azure.migrate.hyperv_software_inventories_controller_machine_software_inventories
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me' AND default = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.appsAndRoles') as "apps_and_roles",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                machineName,
                default
                FROM azure.migrate.hyperv_software_inventories_controller_machine_software_inventories
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me' AND default = 'replace-me';
    vw_hyperv_operations_status_controller_hyperv_operations_status:
      id: azure.migrate.vw_hyperv_operations_status_controller_hyperv_operations_status
      name: vw_hyperv_operations_status_controller_hyperv_operations_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              status as status,
              startTime as start_time,
              endTime as end_time,
              error as error,
              JSON_EXTRACT(properties, '$.result') as "result",
              subscriptionId,
              resourceGroupName,
              siteName,
              operationStatusName
              FROM azure.migrate.hyperv_operations_status_controller_hyperv_operations_status
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                status as status,
                startTime as start_time,
                endTime as end_time,
                error as error,
                json_extract_path_text(properties, '$.result') as "result",
                subscriptionId,
                resourceGroupName,
                siteName,
                operationStatusName
                FROM azure.migrate.hyperv_operations_status_controller_hyperv_operations_status
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
    vw_hyperv_run_as_accounts_controllers:
      id: azure.migrate.vw_hyperv_run_as_accounts_controllers
      name: vw_hyperv_run_as_accounts_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.credentialType') as "credential_type",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              accountName
              FROM azure.migrate.hyperv_run_as_accounts_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.credentialType') as "credential_type",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                accountName
                FROM azure.migrate.hyperv_run_as_accounts_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_import_jobs_controller_deletejobs:
      id: azure.migrate.vw_import_jobs_controller_deletejobs
      name: vw_import_jobs_controller_deletejobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.blobName') as "blob_name",
              JSON_EXTRACT(properties, '$.errorSasUri') as "error_sas_uri",
              JSON_EXTRACT(properties, '$.jobState') as "job_state",
              JSON_EXTRACT(properties, '$.numberOfMachinesDeleted') as "number_of_machines_deleted",
              JSON_EXTRACT(properties, '$.deletionConfirmation') as "deletion_confirmation",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              jobName
              FROM azure.migrate.import_jobs_controller_deletejobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.blobName') as "blob_name",
                json_extract_path_text(properties, '$.errorSasUri') as "error_sas_uri",
                json_extract_path_text(properties, '$.jobState') as "job_state",
                json_extract_path_text(properties, '$.numberOfMachinesDeleted') as "number_of_machines_deleted",
                json_extract_path_text(properties, '$.deletionConfirmation') as "deletion_confirmation",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                jobName
                FROM azure.migrate.import_jobs_controller_deletejobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_import_jobs_controller_exportjobs:
      id: azure.migrate.vw_import_jobs_controller_exportjobs
      name: vw_import_jobs_controller_exportjobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              status as status,
              startTime as start_time,
              endTime as end_time,
              displayName as display_name,
              JSON_EXTRACT(properties, '$.blobName') as "blob_name",
              JSON_EXTRACT(properties, '$.sasUri') as "sas_uri",
              subscriptionId,
              resourceGroupName,
              siteName,
              jobName
              FROM azure.migrate.import_jobs_controller_exportjobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                status as status,
                startTime as start_time,
                endTime as end_time,
                displayName as display_name,
                json_extract_path_text(properties, '$.blobName') as "blob_name",
                json_extract_path_text(properties, '$.sasUri') as "sas_uri",
                subscriptionId,
                resourceGroupName,
                siteName,
                jobName
                FROM azure.migrate.import_jobs_controller_exportjobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_import_jobs_controller_importjobs:
      id: azure.migrate.vw_import_jobs_controller_importjobs
      name: vw_import_jobs_controller_importjobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              status as status,
              startTime as start_time,
              endTime as end_time,
              displayName as display_name,
              JSON_EXTRACT(properties, '$.blobName') as "blob_name",
              JSON_EXTRACT(properties, '$.blobSasUri') as "blob_sas_uri",
              JSON_EXTRACT(properties, '$.jobResult') as "job_result",
              JSON_EXTRACT(properties, '$.numberOfMachinesImported') as "number_of_machines_imported",
              JSON_EXTRACT(properties, '$.blobCreationTimeStamp') as "blob_creation_time_stamp",
              JSON_EXTRACT(properties, '$.errorSummary') as "error_summary",
              subscriptionId,
              resourceGroupName,
              siteName,
              jobName
              FROM azure.migrate.import_jobs_controller_importjobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                status as status,
                startTime as start_time,
                endTime as end_time,
                displayName as display_name,
                json_extract_path_text(properties, '$.blobName') as "blob_name",
                json_extract_path_text(properties, '$.blobSasUri') as "blob_sas_uri",
                json_extract_path_text(properties, '$.jobResult') as "job_result",
                json_extract_path_text(properties, '$.numberOfMachinesImported') as "number_of_machines_imported",
                json_extract_path_text(properties, '$.blobCreationTimeStamp') as "blob_creation_time_stamp",
                json_extract_path_text(properties, '$.errorSummary') as "error_summary",
                subscriptionId,
                resourceGroupName,
                siteName,
                jobName
                FROM azure.migrate.import_jobs_controller_importjobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_import_jobs_controllers:
      id: azure.migrate.vw_import_jobs_controllers
      name: vw_import_jobs_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.clientRequestId') as "client_request_id",
              JSON_EXTRACT(properties, '$.activityId') as "activity_id",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              jobName
              FROM azure.migrate.import_jobs_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.clientRequestId') as "client_request_id",
                json_extract_path_text(properties, '$.activityId') as "activity_id",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                jobName
                FROM azure.migrate.import_jobs_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_import_machines_controllers:
      id: azure.migrate.vw_import_machines_controllers
      name: vw_import_machines_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.firmware') as "firmware",
              JSON_EXTRACT(properties, '$.percentageCpuUtilization') as "percentage_cpu_utilization",
              JSON_EXTRACT(properties, '$.percentageMemoryUtilization') as "percentage_memory_utilization",
              JSON_EXTRACT(properties, '$.numberOfDisks') as "number_of_disks",
              JSON_EXTRACT(properties, '$.totalDiskReadOperationsPerSecond') as "total_disk_read_operations_per_second",
              JSON_EXTRACT(properties, '$.totalDiskWriteOperationsPerSecond') as "total_disk_write_operations_per_second",
              JSON_EXTRACT(properties, '$.totalDiskWriteThroughput') as "total_disk_write_throughput",
              JSON_EXTRACT(properties, '$.totalDiskReadThroughput') as "total_disk_read_throughput",
              JSON_EXTRACT(properties, '$.macAddress') as "mac_address",
              JSON_EXTRACT(properties, '$.ipAddresses') as "ip_addresses",
              JSON_EXTRACT(properties, '$.machineId') as "machine_id",
              JSON_EXTRACT(properties, '$.machineManagerId') as "machine_manager_id",
              JSON_EXTRACT(properties, '$.numberOfNetworkAdapters') as "number_of_network_adapters",
              JSON_EXTRACT(properties, '$.networkInThroughput') as "network_in_throughput",
              JSON_EXTRACT(properties, '$.networkOutThroughput') as "network_out_throughput",
              JSON_EXTRACT(properties, '$.serverType') as "server_type",
              JSON_EXTRACT(properties, '$.hypervisor') as "hypervisor",
              JSON_EXTRACT(properties, '$.hypervisorVersionNumber') as "hypervisor_version_number",
              JSON_EXTRACT(properties, '$.disks') as "disks",
              JSON_EXTRACT(properties, '$.vmFqdn') as "vm_fqdn",
              JSON_EXTRACT(properties, '$.storageInUseGb') as "storage_in_use_gb",
              JSON_EXTRACT(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
              JSON_EXTRACT(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
              JSON_EXTRACT(properties, '$.operatingSystemDetails') as "operating_system_details",
              JSON_EXTRACT(properties, '$.biosSerialNumber') as "bios_serial_number",
              JSON_EXTRACT(properties, '$.biosGuid') as "bios_guid",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.tags') as "tags",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              machineName
              FROM azure.migrate.import_machines_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.firmware') as "firmware",
                json_extract_path_text(properties, '$.percentageCpuUtilization') as "percentage_cpu_utilization",
                json_extract_path_text(properties, '$.percentageMemoryUtilization') as "percentage_memory_utilization",
                json_extract_path_text(properties, '$.numberOfDisks') as "number_of_disks",
                json_extract_path_text(properties, '$.totalDiskReadOperationsPerSecond') as "total_disk_read_operations_per_second",
                json_extract_path_text(properties, '$.totalDiskWriteOperationsPerSecond') as "total_disk_write_operations_per_second",
                json_extract_path_text(properties, '$.totalDiskWriteThroughput') as "total_disk_write_throughput",
                json_extract_path_text(properties, '$.totalDiskReadThroughput') as "total_disk_read_throughput",
                json_extract_path_text(properties, '$.macAddress') as "mac_address",
                json_extract_path_text(properties, '$.ipAddresses') as "ip_addresses",
                json_extract_path_text(properties, '$.machineId') as "machine_id",
                json_extract_path_text(properties, '$.machineManagerId') as "machine_manager_id",
                json_extract_path_text(properties, '$.numberOfNetworkAdapters') as "number_of_network_adapters",
                json_extract_path_text(properties, '$.networkInThroughput') as "network_in_throughput",
                json_extract_path_text(properties, '$.networkOutThroughput') as "network_out_throughput",
                json_extract_path_text(properties, '$.serverType') as "server_type",
                json_extract_path_text(properties, '$.hypervisor') as "hypervisor",
                json_extract_path_text(properties, '$.hypervisorVersionNumber') as "hypervisor_version_number",
                json_extract_path_text(properties, '$.disks') as "disks",
                json_extract_path_text(properties, '$.vmFqdn') as "vm_fqdn",
                json_extract_path_text(properties, '$.storageInUseGb') as "storage_in_use_gb",
                json_extract_path_text(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
                json_extract_path_text(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
                json_extract_path_text(properties, '$.operatingSystemDetails') as "operating_system_details",
                json_extract_path_text(properties, '$.biosSerialNumber') as "bios_serial_number",
                json_extract_path_text(properties, '$.biosGuid') as "bios_guid",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.tags') as "tags",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                machineName
                FROM azure.migrate.import_machines_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_master_sites_operations_status_controller_vmware_operation_status:
      id: azure.migrate.vw_master_sites_operations_status_controller_vmware_operation_status
      name: vw_master_sites_operations_status_controller_vmware_operation_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              status as status,
              startTime as start_time,
              endTime as end_time,
              error as error,
              JSON_EXTRACT(properties, '$.result') as "result",
              subscriptionId,
              resourceGroupName,
              siteName,
              operationStatusName
              FROM azure.migrate.master_sites_operations_status_controller_vmware_operation_status
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                status as status,
                startTime as start_time,
                endTime as end_time,
                error as error,
                json_extract_path_text(properties, '$.result') as "result",
                subscriptionId,
                resourceGroupName,
                siteName,
                operationStatusName
                FROM azure.migrate.master_sites_operations_status_controller_vmware_operation_status
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
    vw_private_endpoint_connection_controllers:
      id: azure.migrate.vw_private_endpoint_connection_controllers
      name: vw_private_endpoint_connection_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              peConnectionName
              FROM azure.migrate.private_endpoint_connection_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                peConnectionName
                FROM azure.migrate.private_endpoint_connection_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_private_link_resources_controllers:
      id: azure.migrate.vw_private_link_resources_controllers
      name: vw_private_link_resources_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              privateLinkResourceName
              FROM azure.migrate.private_link_resources_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                privateLinkResourceName
                FROM azure.migrate.private_link_resources_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_sql_sites_controllers:
      id: azure.migrate.vw_sql_sites_controllers
      name: vw_sql_sites_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.siteAppliancePropertiesCollection') as "site_appliance_properties_collection",
              JSON_EXTRACT(properties, '$.discoveryScenario') as "discovery_scenario",
              JSON_EXTRACT(properties, '$.serviceEndpoint') as "service_endpoint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName
              FROM azure.migrate.sql_sites_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.siteAppliancePropertiesCollection') as "site_appliance_properties_collection",
                json_extract_path_text(properties, '$.discoveryScenario') as "discovery_scenario",
                json_extract_path_text(properties, '$.serviceEndpoint') as "service_endpoint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName
                FROM azure.migrate.sql_sites_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_sql_discovery_site_data_source_controllers:
      id: azure.migrate.vw_sql_discovery_site_data_source_controllers
      name: vw_sql_discovery_site_data_source_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.discoverySiteId') as "discovery_site_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName,
              discoverySiteDataSourceName
              FROM azure.migrate.sql_discovery_site_data_source_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.discoverySiteId') as "discovery_site_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName,
                discoverySiteDataSourceName
                FROM azure.migrate.sql_discovery_site_data_source_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
    vw_sql_jobs_controllers:
      id: azure.migrate.vw_sql_jobs_controllers
      name: vw_sql_jobs_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.clientRequestId') as "client_request_id",
              JSON_EXTRACT(properties, '$.activityId') as "activity_id",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName,
              jobName
              FROM azure.migrate.sql_jobs_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.clientRequestId') as "client_request_id",
                json_extract_path_text(properties, '$.activityId') as "activity_id",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName,
                jobName
                FROM azure.migrate.sql_jobs_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
    vw_sql_operations_status_controller_sql_operation_status:
      id: azure.migrate.vw_sql_operations_status_controller_sql_operation_status
      name: vw_sql_operations_status_controller_sql_operation_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              status as status,
              startTime as start_time,
              endTime as end_time,
              error as error,
              JSON_EXTRACT(properties, '$.result') as "result",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName,
              operationStatusName
              FROM azure.migrate.sql_operations_status_controller_sql_operation_status
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me' AND operationStatusName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                status as status,
                startTime as start_time,
                endTime as end_time,
                error as error,
                json_extract_path_text(properties, '$.result') as "result",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName,
                operationStatusName
                FROM azure.migrate.sql_operations_status_controller_sql_operation_status
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me' AND operationStatusName = 'replace-me';
    vw_sql_run_as_accounts_controllers:
      id: azure.migrate.vw_sql_run_as_accounts_controllers
      name: vw_sql_run_as_accounts_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.credentialType') as "credential_type",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName,
              accountName
              FROM azure.migrate.sql_run_as_accounts_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.credentialType') as "credential_type",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName,
                accountName
                FROM azure.migrate.sql_run_as_accounts_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
    vw_sql_availability_groups_controllers:
      id: azure.migrate.vw_sql_availability_groups_controllers
      name: vw_sql_availability_groups_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.availabilityGroupName') as "availability_group_name",
              JSON_EXTRACT(properties, '$.availabilityGroupType') as "availability_group_type",
              JSON_EXTRACT(properties, '$.isMultiSubNet') as "is_multi_sub_net",
              JSON_EXTRACT(properties, '$.clusterName') as "cluster_name",
              JSON_EXTRACT(properties, '$.availabilityReplicas') as "availability_replicas",
              JSON_EXTRACT(properties, '$.parentReplicaOverviewList') as "parent_replica_overview_list",
              JSON_EXTRACT(properties, '$.isPartOfDistributedAvailabilityGroup') as "is_part_of_distributed_availability_group",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName,
              sqlAvailabilityGroupName
              FROM azure.migrate.sql_availability_groups_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.availabilityGroupName') as "availability_group_name",
                json_extract_path_text(properties, '$.availabilityGroupType') as "availability_group_type",
                json_extract_path_text(properties, '$.isMultiSubNet') as "is_multi_sub_net",
                json_extract_path_text(properties, '$.clusterName') as "cluster_name",
                json_extract_path_text(properties, '$.availabilityReplicas') as "availability_replicas",
                json_extract_path_text(properties, '$.parentReplicaOverviewList') as "parent_replica_overview_list",
                json_extract_path_text(properties, '$.isPartOfDistributedAvailabilityGroup') as "is_part_of_distributed_availability_group",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName,
                sqlAvailabilityGroupName
                FROM azure.migrate.sql_availability_groups_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
    vw_sql_databases_controllers:
      id: azure.migrate.vw_sql_databases_controllers
      name: vw_sql_databases_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.parentReplicaOverview') as "parent_replica_overview",
              JSON_EXTRACT(properties, '$.isDatabaseHighlyAvailable') as "is_database_highly_available",
              JSON_EXTRACT(properties, '$.fileMetadataList') as "file_metadata_list",
              JSON_EXTRACT(properties, '$.hostname') as "hostname",
              JSON_EXTRACT(properties, '$.sqlServerName') as "sql_server_name",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.sizeMb') as "size_mb",
              JSON_EXTRACT(properties, '$.databaseName') as "database_name",
              JSON_EXTRACT(properties, '$.sqlServerArmId') as "sql_server_arm_id",
              JSON_EXTRACT(properties, '$.compatibilityLevel') as "compatibility_level",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName,
              sqlDatabaseName
              FROM azure.migrate.sql_databases_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.parentReplicaOverview') as "parent_replica_overview",
                json_extract_path_text(properties, '$.isDatabaseHighlyAvailable') as "is_database_highly_available",
                json_extract_path_text(properties, '$.fileMetadataList') as "file_metadata_list",
                json_extract_path_text(properties, '$.hostname') as "hostname",
                json_extract_path_text(properties, '$.sqlServerName') as "sql_server_name",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.sizeMb') as "size_mb",
                json_extract_path_text(properties, '$.databaseName') as "database_name",
                json_extract_path_text(properties, '$.sqlServerArmId') as "sql_server_arm_id",
                json_extract_path_text(properties, '$.compatibilityLevel') as "compatibility_level",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName,
                sqlDatabaseName
                FROM azure.migrate.sql_databases_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
    vw_sql_servers_controllers:
      id: azure.migrate.vw_sql_servers_controllers
      name: vw_sql_servers_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.machineOverviewList') as "machine_overview_list",
              JSON_EXTRACT(properties, '$.numberOfAgDatabases') as "number_of_ag_databases",
              JSON_EXTRACT(properties, '$.sqlFciProperties') as "sql_fci_properties",
              JSON_EXTRACT(properties, '$.productSupportStatus') as "product_support_status",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.numberOfUserDatabases') as "number_of_user_databases",
              JSON_EXTRACT(properties, '$.sumOfUserDatabasesSizeInMb') as "sum_of_user_databases_size_in_mb",
              JSON_EXTRACT(properties, '$.tempDbSizeInMb') as "temp_db_size_in_mb",
              JSON_EXTRACT(properties, '$.maxServerMemoryInUseInMb') as "max_server_memory_in_use_in_mb",
              JSON_EXTRACT(properties, '$.visibleOnlineCoreCount') as "visible_online_core_count",
              JSON_EXTRACT(properties, '$.numOfLogins') as "num_of_logins",
              JSON_EXTRACT(properties, '$.physicalCpuCount') as "physical_cpu_count",
              JSON_EXTRACT(properties, '$.logicalCpuCount') as "logical_cpu_count",
              JSON_EXTRACT(properties, '$.engineEdition') as "engine_edition",
              JSON_EXTRACT(properties, '$.edition') as "edition",
              JSON_EXTRACT(properties, '$.isHighAvailabilityEnabled') as "is_high_availability_enabled",
              JSON_EXTRACT(properties, '$.isClustered') as "is_clustered",
              JSON_EXTRACT(properties, '$.hyperthreadRatio') as "hyperthread_ratio",
              JSON_EXTRACT(properties, '$.sqlStartTime') as "sql_start_time",
              JSON_EXTRACT(properties, '$.machineArmIds') as "machine_arm_ids",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.hydratedRunAsAccountId') as "hydrated_run_as_account_id",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.sqlServerName') as "sql_server_name",
              JSON_EXTRACT(properties, '$.portNumber') as "port_number",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.tags') as "tags",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              sqlSiteName,
              sqlServerName
              FROM azure.migrate.sql_servers_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.machineOverviewList') as "machine_overview_list",
                json_extract_path_text(properties, '$.numberOfAgDatabases') as "number_of_ag_databases",
                json_extract_path_text(properties, '$.sqlFciProperties') as "sql_fci_properties",
                json_extract_path_text(properties, '$.productSupportStatus') as "product_support_status",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.numberOfUserDatabases') as "number_of_user_databases",
                json_extract_path_text(properties, '$.sumOfUserDatabasesSizeInMb') as "sum_of_user_databases_size_in_mb",
                json_extract_path_text(properties, '$.tempDbSizeInMb') as "temp_db_size_in_mb",
                json_extract_path_text(properties, '$.maxServerMemoryInUseInMb') as "max_server_memory_in_use_in_mb",
                json_extract_path_text(properties, '$.visibleOnlineCoreCount') as "visible_online_core_count",
                json_extract_path_text(properties, '$.numOfLogins') as "num_of_logins",
                json_extract_path_text(properties, '$.physicalCpuCount') as "physical_cpu_count",
                json_extract_path_text(properties, '$.logicalCpuCount') as "logical_cpu_count",
                json_extract_path_text(properties, '$.engineEdition') as "engine_edition",
                json_extract_path_text(properties, '$.edition') as "edition",
                json_extract_path_text(properties, '$.isHighAvailabilityEnabled') as "is_high_availability_enabled",
                json_extract_path_text(properties, '$.isClustered') as "is_clustered",
                json_extract_path_text(properties, '$.hyperthreadRatio') as "hyperthread_ratio",
                json_extract_path_text(properties, '$.sqlStartTime') as "sql_start_time",
                json_extract_path_text(properties, '$.machineArmIds') as "machine_arm_ids",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.hydratedRunAsAccountId') as "hydrated_run_as_account_id",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.sqlServerName') as "sql_server_name",
                json_extract_path_text(properties, '$.portNumber') as "port_number",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.tags') as "tags",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                sqlSiteName,
                sqlServerName
                FROM azure.migrate.sql_servers_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND sqlSiteName = 'replace-me';
    vw_web_app_sites_controllers:
      id: azure.migrate.vw_web_app_sites_controllers
      name: vw_web_app_sites_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.siteAppliancePropertiesCollection') as "site_appliance_properties_collection",
              JSON_EXTRACT(properties, '$.discoveryScenario') as "discovery_scenario",
              JSON_EXTRACT(properties, '$.serviceEndpoint') as "service_endpoint",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName
              FROM azure.migrate.web_app_sites_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.siteAppliancePropertiesCollection') as "site_appliance_properties_collection",
                json_extract_path_text(properties, '$.discoveryScenario') as "discovery_scenario",
                json_extract_path_text(properties, '$.serviceEndpoint') as "service_endpoint",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName
                FROM azure.migrate.web_app_sites_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_web_app_discovery_site_data_sources_controllers:
      id: azure.migrate.vw_web_app_discovery_site_data_sources_controllers
      name: vw_web_app_discovery_site_data_sources_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.discoverySiteId') as "discovery_site_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName,
              discoverySiteDataSourceName
              FROM azure.migrate.web_app_discovery_site_data_sources_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.discoverySiteId') as "discovery_site_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName,
                discoverySiteDataSourceName
                FROM azure.migrate.web_app_discovery_site_data_sources_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
    vw_web_app_extended_machines_controllers:
      id: azure.migrate.vw_web_app_extended_machines_controllers
      name: vw_web_app_extended_machines_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.machineDisplayName') as "machine_display_name",
              JSON_EXTRACT(properties, '$.machineId') as "machine_id",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.hydratedRunAsAccountId') as "hydrated_run_as_account_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName,
              extendedMachineName
              FROM azure.migrate.web_app_extended_machines_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.machineDisplayName') as "machine_display_name",
                json_extract_path_text(properties, '$.machineId') as "machine_id",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.hydratedRunAsAccountId') as "hydrated_run_as_account_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName,
                extendedMachineName
                FROM azure.migrate.web_app_extended_machines_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
    vw_iis_web_applications_controllers:
      id: azure.migrate.vw_iis_web_applications_controllers
      name: vw_iis_web_applications_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.applications') as "applications",
              JSON_EXTRACT(properties, '$.virtualApplications') as "virtual_applications",
              JSON_EXTRACT(properties, '$.webServerId') as "web_server_id",
              JSON_EXTRACT(properties, '$.webServerName') as "web_server_name",
              JSON_EXTRACT(properties, '$.machineArmIds') as "machine_arm_ids",
              JSON_EXTRACT(properties, '$.virtualPath') as "virtual_path",
              JSON_EXTRACT(properties, '$.physicalPath') as "physical_path",
              JSON_EXTRACT(properties, '$.bindings') as "bindings",
              JSON_EXTRACT(properties, '$.frameworks') as "frameworks",
              JSON_EXTRACT(properties, '$.configurations') as "configurations",
              JSON_EXTRACT(properties, '$.directories') as "directories",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.tags') as "tags",
              JSON_EXTRACT(properties, '$.staticFolders') as "static_folders",
              JSON_EXTRACT(properties, '$.machineDisplayName') as "machine_display_name",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.serverType') as "server_type",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.hasErrors') as "has_errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName,
              webApplicationName
              FROM azure.migrate.iis_web_applications_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.applications') as "applications",
                json_extract_path_text(properties, '$.virtualApplications') as "virtual_applications",
                json_extract_path_text(properties, '$.webServerId') as "web_server_id",
                json_extract_path_text(properties, '$.webServerName') as "web_server_name",
                json_extract_path_text(properties, '$.machineArmIds') as "machine_arm_ids",
                json_extract_path_text(properties, '$.virtualPath') as "virtual_path",
                json_extract_path_text(properties, '$.physicalPath') as "physical_path",
                json_extract_path_text(properties, '$.bindings') as "bindings",
                json_extract_path_text(properties, '$.frameworks') as "frameworks",
                json_extract_path_text(properties, '$.configurations') as "configurations",
                json_extract_path_text(properties, '$.directories') as "directories",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.tags') as "tags",
                json_extract_path_text(properties, '$.staticFolders') as "static_folders",
                json_extract_path_text(properties, '$.machineDisplayName') as "machine_display_name",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.serverType') as "server_type",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.hasErrors') as "has_errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName,
                webApplicationName
                FROM azure.migrate.iis_web_applications_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
    vw_iis_web_servers_controllers:
      id: azure.migrate.vw_iis_web_servers_controllers
      name: vw_iis_web_servers_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.configurationLocation') as "configuration_location",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.machineIds') as "machine_ids",
              JSON_EXTRACT(properties, '$.webApplications') as "web_applications",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.serverFqdn') as "server_fqdn",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.serverType') as "server_type",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.hasErrors') as "has_errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName,
              webServerName
              FROM azure.migrate.iis_web_servers_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.configurationLocation') as "configuration_location",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.machineIds') as "machine_ids",
                json_extract_path_text(properties, '$.webApplications') as "web_applications",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.serverFqdn') as "server_fqdn",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.serverType') as "server_type",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.hasErrors') as "has_errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName,
                webServerName
                FROM azure.migrate.iis_web_servers_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
    vw_web_app_run_as_accounts_controllers:
      id: azure.migrate.vw_web_app_run_as_accounts_controllers
      name: vw_web_app_run_as_accounts_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.credentialType') as "credential_type",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName,
              accountName
              FROM azure.migrate.web_app_run_as_accounts_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.credentialType') as "credential_type",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName,
                accountName
                FROM azure.migrate.web_app_run_as_accounts_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
    vw_tomcat_web_applications_controllers:
      id: azure.migrate.vw_tomcat_web_applications_controllers
      name: vw_tomcat_web_applications_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.hasDatabaseDependency') as "has_database_dependency",
              JSON_EXTRACT(properties, '$.isExternalLoggingConfigured') as "is_external_logging_configured",
              JSON_EXTRACT(properties, '$.webServerId') as "web_server_id",
              JSON_EXTRACT(properties, '$.webServerName') as "web_server_name",
              JSON_EXTRACT(properties, '$.machineArmIds') as "machine_arm_ids",
              JSON_EXTRACT(properties, '$.virtualPath') as "virtual_path",
              JSON_EXTRACT(properties, '$.physicalPath') as "physical_path",
              JSON_EXTRACT(properties, '$.bindings') as "bindings",
              JSON_EXTRACT(properties, '$.frameworks') as "frameworks",
              JSON_EXTRACT(properties, '$.configurations') as "configurations",
              JSON_EXTRACT(properties, '$.directories') as "directories",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.tags') as "tags",
              JSON_EXTRACT(properties, '$.staticFolders') as "static_folders",
              JSON_EXTRACT(properties, '$.machineDisplayName') as "machine_display_name",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.serverType') as "server_type",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.hasErrors') as "has_errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName,
              webApplicationName
              FROM azure.migrate.tomcat_web_applications_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.hasDatabaseDependency') as "has_database_dependency",
                json_extract_path_text(properties, '$.isExternalLoggingConfigured') as "is_external_logging_configured",
                json_extract_path_text(properties, '$.webServerId') as "web_server_id",
                json_extract_path_text(properties, '$.webServerName') as "web_server_name",
                json_extract_path_text(properties, '$.machineArmIds') as "machine_arm_ids",
                json_extract_path_text(properties, '$.virtualPath') as "virtual_path",
                json_extract_path_text(properties, '$.physicalPath') as "physical_path",
                json_extract_path_text(properties, '$.bindings') as "bindings",
                json_extract_path_text(properties, '$.frameworks') as "frameworks",
                json_extract_path_text(properties, '$.configurations') as "configurations",
                json_extract_path_text(properties, '$.directories') as "directories",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.tags') as "tags",
                json_extract_path_text(properties, '$.staticFolders') as "static_folders",
                json_extract_path_text(properties, '$.machineDisplayName') as "machine_display_name",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.serverType') as "server_type",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.hasErrors') as "has_errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName,
                webApplicationName
                FROM azure.migrate.tomcat_web_applications_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
    vw_tomcat_web_servers_controllers:
      id: azure.migrate.vw_tomcat_web_servers_controllers
      name: vw_tomcat_web_servers_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.services') as "services",
              JSON_EXTRACT(properties, '$.catalinaHome') as "catalina_home",
              JSON_EXTRACT(properties, '$.jvmVersion') as "jvm_version",
              JSON_EXTRACT(properties, '$.sessionPersistenceMechanism') as "session_persistence_mechanism",
              JSON_EXTRACT(properties, '$.isClusteringPresent') as "is_clustering_present",
              JSON_EXTRACT(properties, '$.isMemoryRealmPresent') as "is_memory_realm_present",
              JSON_EXTRACT(properties, '$.isSessionTrackingPresent') as "is_session_tracking_present",
              JSON_EXTRACT(properties, '$.isAccessLogValvePresent') as "is_access_log_valve_present",
              JSON_EXTRACT(properties, '$.maxMemoryUsageInMb') as "max_memory_usage_in_mb",
              JSON_EXTRACT(properties, '$.configurationLocation') as "configuration_location",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.machineIds') as "machine_ids",
              JSON_EXTRACT(properties, '$.webApplications') as "web_applications",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.serverFqdn') as "server_fqdn",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.operatingSystemDetails') as "operating_system_details",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.serverType') as "server_type",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.hasErrors') as "has_errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              webAppSiteName,
              webServerName
              FROM azure.migrate.tomcat_web_servers_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.services') as "services",
                json_extract_path_text(properties, '$.catalinaHome') as "catalina_home",
                json_extract_path_text(properties, '$.jvmVersion') as "jvm_version",
                json_extract_path_text(properties, '$.sessionPersistenceMechanism') as "session_persistence_mechanism",
                json_extract_path_text(properties, '$.isClusteringPresent') as "is_clustering_present",
                json_extract_path_text(properties, '$.isMemoryRealmPresent') as "is_memory_realm_present",
                json_extract_path_text(properties, '$.isSessionTrackingPresent') as "is_session_tracking_present",
                json_extract_path_text(properties, '$.isAccessLogValvePresent') as "is_access_log_valve_present",
                json_extract_path_text(properties, '$.maxMemoryUsageInMb') as "max_memory_usage_in_mb",
                json_extract_path_text(properties, '$.configurationLocation') as "configuration_location",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.machineIds') as "machine_ids",
                json_extract_path_text(properties, '$.webApplications') as "web_applications",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.serverFqdn') as "server_fqdn",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.operatingSystemDetails') as "operating_system_details",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.serverType') as "server_type",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.hasErrors') as "has_errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                webAppSiteName,
                webServerName
                FROM azure.migrate.tomcat_web_servers_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND webAppSiteName = 'replace-me';
    vw_server_jobs_controllers:
      id: azure.migrate.vw_server_jobs_controllers
      name: vw_server_jobs_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.clientRequestId') as "client_request_id",
              JSON_EXTRACT(properties, '$.activityId') as "activity_id",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              jobName
              FROM azure.migrate.server_jobs_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.clientRequestId') as "client_request_id",
                json_extract_path_text(properties, '$.activityId') as "activity_id",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                jobName
                FROM azure.migrate.server_jobs_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_servers_controller_machines:
      id: azure.migrate.vw_servers_controller_machines
      name: vw_servers_controller_machines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.fqdn') as "fqdn",
              JSON_EXTRACT(properties, '$.networkAdapters') as "network_adapters",
              JSON_EXTRACT(properties, '$.hydratedFqdn') as "hydrated_fqdn",
              JSON_EXTRACT(properties, '$.disks') as "disks",
              JSON_EXTRACT(properties, '$.validationRequired') as "validation_required",
              JSON_EXTRACT(properties, '$.processorInfo') as "processor_info",
              JSON_EXTRACT(properties, '$.firmware') as "firmware",
              JSON_EXTRACT(properties, '$.guestOsDetails') as "guest_os_details",
              JSON_EXTRACT(properties, '$.numberOfApplications') as "number_of_applications",
              JSON_EXTRACT(properties, '$.guestDetailsDiscoveryTimestamp') as "guest_details_discovery_timestamp",
              JSON_EXTRACT(properties, '$.isGuestDetailsDiscoveryInProgress') as "is_guest_details_discovery_in_progress",
              JSON_EXTRACT(properties, '$.dependencyMapping') as "dependency_mapping",
              JSON_EXTRACT(properties, '$.dependencyMappingStartTime') as "dependency_mapping_start_time",
              JSON_EXTRACT(properties, '$.dependencyMappingEndTime') as "dependency_mapping_end_time",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.applicationDiscovery') as "application_discovery",
              JSON_EXTRACT(properties, '$.dependencyMapDiscovery') as "dependency_map_discovery",
              JSON_EXTRACT(properties, '$.staticDiscovery') as "static_discovery",
              JSON_EXTRACT(properties, '$.sqlDiscovery') as "sql_discovery",
              JSON_EXTRACT(properties, '$.webAppDiscovery') as "web_app_discovery",
              JSON_EXTRACT(properties, '$.oracleDiscovery') as "oracle_discovery",
              JSON_EXTRACT(properties, '$.springBootDiscovery') as "spring_boot_discovery",
              JSON_EXTRACT(properties, '$.iisDiscovery') as "iis_discovery",
              JSON_EXTRACT(properties, '$.tomcatDiscovery') as "tomcat_discovery",
              JSON_EXTRACT(properties, '$.appsAndRoles') as "apps_and_roles",
              JSON_EXTRACT(properties, '$.productSupportStatus') as "product_support_status",
              JSON_EXTRACT(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
              JSON_EXTRACT(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
              JSON_EXTRACT(properties, '$.operatingSystemDetails') as "operating_system_details",
              JSON_EXTRACT(properties, '$.biosSerialNumber') as "bios_serial_number",
              JSON_EXTRACT(properties, '$.biosGuid') as "bios_guid",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.tags') as "tags",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              machineName
              FROM azure.migrate.servers_controller_machines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.fqdn') as "fqdn",
                json_extract_path_text(properties, '$.networkAdapters') as "network_adapters",
                json_extract_path_text(properties, '$.hydratedFqdn') as "hydrated_fqdn",
                json_extract_path_text(properties, '$.disks') as "disks",
                json_extract_path_text(properties, '$.validationRequired') as "validation_required",
                json_extract_path_text(properties, '$.processorInfo') as "processor_info",
                json_extract_path_text(properties, '$.firmware') as "firmware",
                json_extract_path_text(properties, '$.guestOsDetails') as "guest_os_details",
                json_extract_path_text(properties, '$.numberOfApplications') as "number_of_applications",
                json_extract_path_text(properties, '$.guestDetailsDiscoveryTimestamp') as "guest_details_discovery_timestamp",
                json_extract_path_text(properties, '$.isGuestDetailsDiscoveryInProgress') as "is_guest_details_discovery_in_progress",
                json_extract_path_text(properties, '$.dependencyMapping') as "dependency_mapping",
                json_extract_path_text(properties, '$.dependencyMappingStartTime') as "dependency_mapping_start_time",
                json_extract_path_text(properties, '$.dependencyMappingEndTime') as "dependency_mapping_end_time",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.applicationDiscovery') as "application_discovery",
                json_extract_path_text(properties, '$.dependencyMapDiscovery') as "dependency_map_discovery",
                json_extract_path_text(properties, '$.staticDiscovery') as "static_discovery",
                json_extract_path_text(properties, '$.sqlDiscovery') as "sql_discovery",
                json_extract_path_text(properties, '$.webAppDiscovery') as "web_app_discovery",
                json_extract_path_text(properties, '$.oracleDiscovery') as "oracle_discovery",
                json_extract_path_text(properties, '$.springBootDiscovery') as "spring_boot_discovery",
                json_extract_path_text(properties, '$.iisDiscovery') as "iis_discovery",
                json_extract_path_text(properties, '$.tomcatDiscovery') as "tomcat_discovery",
                json_extract_path_text(properties, '$.appsAndRoles') as "apps_and_roles",
                json_extract_path_text(properties, '$.productSupportStatus') as "product_support_status",
                json_extract_path_text(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
                json_extract_path_text(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
                json_extract_path_text(properties, '$.operatingSystemDetails') as "operating_system_details",
                json_extract_path_text(properties, '$.biosSerialNumber') as "bios_serial_number",
                json_extract_path_text(properties, '$.biosGuid') as "bios_guid",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.tags') as "tags",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                machineName
                FROM azure.migrate.servers_controller_machines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me';
    vw_server_software_inventories_controller_machine_software_inventories:
      id: azure.migrate.vw_server_software_inventories_controller_machine_software_inventories
      name: vw_server_software_inventories_controller_machine_software_inventories
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.appsAndRoles') as "apps_and_roles",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              machineName,
              default
              FROM azure.migrate.server_software_inventories_controller_machine_software_inventories
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me' AND default = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.appsAndRoles') as "apps_and_roles",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                machineName,
                default
                FROM azure.migrate.server_software_inventories_controller_machine_software_inventories
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me' AND default = 'replace-me';
    vw_server_operations_status_controller_server_site_operations_status:
      id: azure.migrate.vw_server_operations_status_controller_server_site_operations_status
      name: vw_server_operations_status_controller_server_site_operations_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              status as status,
              startTime as start_time,
              endTime as end_time,
              error as error,
              JSON_EXTRACT(properties, '$.result') as "result",
              subscriptionId,
              resourceGroupName,
              siteName,
              operationStatusName
              FROM azure.migrate.server_operations_status_controller_server_site_operations_status
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                status as status,
                startTime as start_time,
                endTime as end_time,
                error as error,
                json_extract_path_text(properties, '$.result') as "result",
                subscriptionId,
                resourceGroupName,
                siteName,
                operationStatusName
                FROM azure.migrate.server_operations_status_controller_server_site_operations_status
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
    vw_server_run_as_accounts_controllers:
      id: azure.migrate.vw_server_run_as_accounts_controllers
      name: vw_server_run_as_accounts_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.credentialType') as "credential_type",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              accountName
              FROM azure.migrate.server_run_as_accounts_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.credentialType') as "credential_type",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                accountName
                FROM azure.migrate.server_run_as_accounts_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_vmware_host_controllers:
      id: azure.migrate.vw_vmware_host_controllers
      name: vw_vmware_host_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.datastores') as "datastores",
              JSON_EXTRACT(properties, '$.vcenterId') as "vcenter_id",
              JSON_EXTRACT(properties, '$.uuid') as "uuid",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              hostName
              FROM azure.migrate.vmware_host_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.datastores') as "datastores",
                json_extract_path_text(properties, '$.vcenterId') as "vcenter_id",
                json_extract_path_text(properties, '$.uuid') as "uuid",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                hostName
                FROM azure.migrate.vmware_host_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_hyperv_jobs_controllers:
      id: azure.migrate.vw_hyperv_jobs_controllers
      name: vw_hyperv_jobs_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.clientRequestId') as "client_request_id",
              JSON_EXTRACT(properties, '$.activityId') as "activity_id",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              jobName
              FROM azure.migrate.hyperv_jobs_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.clientRequestId') as "client_request_id",
                json_extract_path_text(properties, '$.activityId') as "activity_id",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                jobName
                FROM azure.migrate.hyperv_jobs_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_machines_controllers:
      id: azure.migrate.vw_machines_controllers
      name: vw_machines_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.vCenterFqdn') as "v_center_fqdn",
              JSON_EXTRACT(properties, '$.vCenterId') as "v_center_id",
              JSON_EXTRACT(properties, '$.instanceUuid') as "instance_uuid",
              JSON_EXTRACT(properties, '$.dataCenterScope') as "data_center_scope",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.disks') as "disks",
              JSON_EXTRACT(properties, '$.hostInMaintenanceMode') as "host_in_maintenance_mode",
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.hostPowerState') as "host_power_state",
              JSON_EXTRACT(properties, '$.hostVersion') as "host_version",
              JSON_EXTRACT(properties, '$.networkAdapters') as "network_adapters",
              JSON_EXTRACT(properties, '$.vMwareToolsStatus') as "v_mware_tools_status",
              JSON_EXTRACT(properties, '$.vMwareToolsVersion') as "v_mware_tools_version",
              JSON_EXTRACT(properties, '$.changeTrackingSupported') as "change_tracking_supported",
              JSON_EXTRACT(properties, '$.changeTrackingEnabled') as "change_tracking_enabled",
              JSON_EXTRACT(properties, '$.maxSnapshots') as "max_snapshots",
              JSON_EXTRACT(properties, '$.diskEnabledUuid') as "disk_enabled_uuid",
              JSON_EXTRACT(properties, '$.numberOfSnapshots') as "number_of_snapshots",
              JSON_EXTRACT(properties, '$.altGuestName') as "alt_guest_name",
              JSON_EXTRACT(properties, '$.powerStatus') as "power_status",
              JSON_EXTRACT(properties, '$.vmFqdn') as "vm_fqdn",
              JSON_EXTRACT(properties, '$.vmConfigurationFileLocation') as "vm_configuration_file_location",
              JSON_EXTRACT(properties, '$.firmware') as "firmware",
              JSON_EXTRACT(properties, '$.guestOsDetails') as "guest_os_details",
              JSON_EXTRACT(properties, '$.numberOfApplications') as "number_of_applications",
              JSON_EXTRACT(properties, '$.guestDetailsDiscoveryTimestamp') as "guest_details_discovery_timestamp",
              JSON_EXTRACT(properties, '$.isGuestDetailsDiscoveryInProgress') as "is_guest_details_discovery_in_progress",
              JSON_EXTRACT(properties, '$.dependencyMapping') as "dependency_mapping",
              JSON_EXTRACT(properties, '$.dependencyMappingStartTime') as "dependency_mapping_start_time",
              JSON_EXTRACT(properties, '$.dependencyMappingEndTime') as "dependency_mapping_end_time",
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.applianceNames') as "appliance_names",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.applicationDiscovery') as "application_discovery",
              JSON_EXTRACT(properties, '$.dependencyMapDiscovery') as "dependency_map_discovery",
              JSON_EXTRACT(properties, '$.staticDiscovery') as "static_discovery",
              JSON_EXTRACT(properties, '$.sqlDiscovery') as "sql_discovery",
              JSON_EXTRACT(properties, '$.webAppDiscovery') as "web_app_discovery",
              JSON_EXTRACT(properties, '$.oracleDiscovery') as "oracle_discovery",
              JSON_EXTRACT(properties, '$.springBootDiscovery') as "spring_boot_discovery",
              JSON_EXTRACT(properties, '$.iisDiscovery') as "iis_discovery",
              JSON_EXTRACT(properties, '$.tomcatDiscovery') as "tomcat_discovery",
              JSON_EXTRACT(properties, '$.appsAndRoles') as "apps_and_roles",
              JSON_EXTRACT(properties, '$.productSupportStatus') as "product_support_status",
              JSON_EXTRACT(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
              JSON_EXTRACT(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
              JSON_EXTRACT(properties, '$.operatingSystemDetails') as "operating_system_details",
              JSON_EXTRACT(properties, '$.biosSerialNumber') as "bios_serial_number",
              JSON_EXTRACT(properties, '$.biosGuid') as "bios_guid",
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.isDeleted') as "is_deleted",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.tags') as "tags",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              machineName
              FROM azure.migrate.machines_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.vCenterFqdn') as "v_center_fqdn",
                json_extract_path_text(properties, '$.vCenterId') as "v_center_id",
                json_extract_path_text(properties, '$.instanceUuid') as "instance_uuid",
                json_extract_path_text(properties, '$.dataCenterScope') as "data_center_scope",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.disks') as "disks",
                json_extract_path_text(properties, '$.hostInMaintenanceMode') as "host_in_maintenance_mode",
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.hostPowerState') as "host_power_state",
                json_extract_path_text(properties, '$.hostVersion') as "host_version",
                json_extract_path_text(properties, '$.networkAdapters') as "network_adapters",
                json_extract_path_text(properties, '$.vMwareToolsStatus') as "v_mware_tools_status",
                json_extract_path_text(properties, '$.vMwareToolsVersion') as "v_mware_tools_version",
                json_extract_path_text(properties, '$.changeTrackingSupported') as "change_tracking_supported",
                json_extract_path_text(properties, '$.changeTrackingEnabled') as "change_tracking_enabled",
                json_extract_path_text(properties, '$.maxSnapshots') as "max_snapshots",
                json_extract_path_text(properties, '$.diskEnabledUuid') as "disk_enabled_uuid",
                json_extract_path_text(properties, '$.numberOfSnapshots') as "number_of_snapshots",
                json_extract_path_text(properties, '$.altGuestName') as "alt_guest_name",
                json_extract_path_text(properties, '$.powerStatus') as "power_status",
                json_extract_path_text(properties, '$.vmFqdn') as "vm_fqdn",
                json_extract_path_text(properties, '$.vmConfigurationFileLocation') as "vm_configuration_file_location",
                json_extract_path_text(properties, '$.firmware') as "firmware",
                json_extract_path_text(properties, '$.guestOsDetails') as "guest_os_details",
                json_extract_path_text(properties, '$.numberOfApplications') as "number_of_applications",
                json_extract_path_text(properties, '$.guestDetailsDiscoveryTimestamp') as "guest_details_discovery_timestamp",
                json_extract_path_text(properties, '$.isGuestDetailsDiscoveryInProgress') as "is_guest_details_discovery_in_progress",
                json_extract_path_text(properties, '$.dependencyMapping') as "dependency_mapping",
                json_extract_path_text(properties, '$.dependencyMappingStartTime') as "dependency_mapping_start_time",
                json_extract_path_text(properties, '$.dependencyMappingEndTime') as "dependency_mapping_end_time",
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.applianceNames') as "appliance_names",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.applicationDiscovery') as "application_discovery",
                json_extract_path_text(properties, '$.dependencyMapDiscovery') as "dependency_map_discovery",
                json_extract_path_text(properties, '$.staticDiscovery') as "static_discovery",
                json_extract_path_text(properties, '$.sqlDiscovery') as "sql_discovery",
                json_extract_path_text(properties, '$.webAppDiscovery') as "web_app_discovery",
                json_extract_path_text(properties, '$.oracleDiscovery') as "oracle_discovery",
                json_extract_path_text(properties, '$.springBootDiscovery') as "spring_boot_discovery",
                json_extract_path_text(properties, '$.iisDiscovery') as "iis_discovery",
                json_extract_path_text(properties, '$.tomcatDiscovery') as "tomcat_discovery",
                json_extract_path_text(properties, '$.appsAndRoles') as "apps_and_roles",
                json_extract_path_text(properties, '$.productSupportStatus') as "product_support_status",
                json_extract_path_text(properties, '$.numberOfProcessorCore') as "number_of_processor_core",
                json_extract_path_text(properties, '$.allocatedMemoryInMb') as "allocated_memory_in_mb",
                json_extract_path_text(properties, '$.operatingSystemDetails') as "operating_system_details",
                json_extract_path_text(properties, '$.biosSerialNumber') as "bios_serial_number",
                json_extract_path_text(properties, '$.biosGuid') as "bios_guid",
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.isDeleted') as "is_deleted",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.tags') as "tags",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                machineName
                FROM azure.migrate.machines_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_vmware_software_inventories_controller_machine_software_inventories:
      id: azure.migrate.vw_vmware_software_inventories_controller_machine_software_inventories
      name: vw_vmware_software_inventories_controller_machine_software_inventories
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.appsAndRoles') as "apps_and_roles",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              machineName,
              default
              FROM azure.migrate.vmware_software_inventories_controller_machine_software_inventories
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me' AND default = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.appsAndRoles') as "apps_and_roles",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                machineName,
                default
                FROM azure.migrate.vmware_software_inventories_controller_machine_software_inventories
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND machineName = 'replace-me' AND default = 'replace-me';
    vw_vmware_operations_status_vmware_operation_status:
      id: azure.migrate.vw_vmware_operations_status_vmware_operation_status
      name: vw_vmware_operations_status_vmware_operation_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              status as status,
              startTime as start_time,
              endTime as end_time,
              error as error,
              JSON_EXTRACT(properties, '$.result') as "result",
              subscriptionId,
              resourceGroupName,
              siteName,
              operationStatusName
              FROM azure.migrate.vmware_operations_status_vmware_operation_status
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                status as status,
                startTime as start_time,
                endTime as end_time,
                error as error,
                json_extract_path_text(properties, '$.result') as "result",
                subscriptionId,
                resourceGroupName,
                siteName,
                operationStatusName
                FROM azure.migrate.vmware_operations_status_vmware_operation_status
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me' AND operationStatusName = 'replace-me';
    vw_run_as_accounts_controllers:
      id: azure.migrate.vw_run_as_accounts_controllers
      name: vw_run_as_accounts_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.credentialType') as "credential_type",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.applianceName') as "appliance_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              accountName
              FROM azure.migrate.run_as_accounts_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.credentialType') as "credential_type",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.applianceName') as "appliance_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                accountName
                FROM azure.migrate.run_as_accounts_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
    vw_vcenter_controllers:
      id: azure.migrate.vw_vcenter_controllers
      name: vw_vcenter_controllers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.runAsAccountId') as "run_as_account_id",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              JSON_EXTRACT(properties, '$.createdTimestamp') as "created_timestamp",
              JSON_EXTRACT(properties, '$.updatedTimestamp') as "updated_timestamp",
              JSON_EXTRACT(properties, '$.fqdn') as "fqdn",
              JSON_EXTRACT(properties, '$.port') as "port",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.perfStatisticsLevel') as "perf_statistics_level",
              JSON_EXTRACT(properties, '$.instanceUuid') as "instance_uuid",
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              siteName,
              vcenterName
              FROM azure.migrate.vcenter_controllers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.runAsAccountId') as "run_as_account_id",
                json_extract_path_text(properties, '$.errors') as "errors",
                json_extract_path_text(properties, '$.createdTimestamp') as "created_timestamp",
                json_extract_path_text(properties, '$.updatedTimestamp') as "updated_timestamp",
                json_extract_path_text(properties, '$.fqdn') as "fqdn",
                json_extract_path_text(properties, '$.port') as "port",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.perfStatisticsLevel') as "perf_statistics_level",
                json_extract_path_text(properties, '$.instanceUuid') as "instance_uuid",
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                siteName,
                vcenterName
                FROM azure.migrate.vcenter_controllers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND siteName = 'replace-me';
paths:
  /providers/Microsoft.OffAzure/operations?api-version=2023-10-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/hypervSites?api-version=2023-10-01-preview:
    get:
      operationId: HypervSites_ListBySubscription
      tags:
        - HypervSites
      summary: Get all hyperv  sites.
      description: Get all the hyperv  sites in the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/importSites?api-version=2023-10-01-preview:
    get:
      operationId: ImportSitesController_ListBySubscription
      tags:
        - ImportSitesController
      description: List ImportSite resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/masterSites?api-version=2023-10-01-preview:
    get:
      operationId: MasterSitesController_ListBySubscription
      tags:
        - MasterSitesController
      summary: Get all the sites in the subscription.
      description: List MasterSite resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/serverSites?api-version=2023-10-01-preview:
    get:
      operationId: ServerSitesController_ListBySubscription
      tags:
        - ServerSitesController
      description: List ServerSiteResource resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.OffAzure/vmwareSites?api-version=2023-10-01-preview:
    get:
      operationId: SitesController_ListBySubscription
      tags:
        - SitesController
      summary: Get all vmware sites.
      description: Get all the vmware sites in the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites?api-version=2023-10-01-preview:
    get:
      operationId: HypervSites_ListByResourceGroup
      tags:
        - HypervSites
      summary: Get all hyperv sites.
      description: Get all the hyperv sites in the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervSitesController_Get
      tags:
        - HypervSitesController
      description: Get a HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: HypervSitesController_Create
      tags:
        - HypervSitesController
      description: Create a HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervSite'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSite'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSite'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: HypervSitesController_Update
      tags:
        - HypervSitesController
      description: Update a HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervSiteUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: HypervSitesController_Delete
      tags:
        - HypervSitesController
      description: Delete a HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/clientGroupMembers?api-version=2023-10-01-preview:
    post:
      operationId: HypervDependencyMapController_ClientGroupMembers
      tags:
        - HypervDependencyMapController
      description: API to list client group members for the selected client group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsClientGroupMembersRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/clusters?api-version=2023-10-01-preview:
    get:
      operationId: HypervClusterController_ListByHypervSite
      tags:
        - HypervClusterController
      description: List HypervCluster resources by HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervClusterListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/clusters/{clusterName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervClusterControllerCluster_Get
      tags:
        - HypervClusterController
      description: Method to get a Hyper-V cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: clusterName
          in: path
          description: ' Cluster ARM name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervCluster'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: HypervClusterController_GetCluster
    put:
      operationId: HypervClusterControllerCluster_Create
      tags:
        - HypervClusterController
      description: Method to create or update a Hyper-V cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: clusterName
          in: path
          description: ' Cluster ARM name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervCluster'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervCluster'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervCluster'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: HypervClusterController_CreateCluster
    delete:
      operationId: HypervClusterController_Delete
      tags:
        - HypervClusterController
      description: Delete a HypervCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: clusterName
          in: path
          description: ' Cluster ARM name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/computeErrorSummary?api-version=2023-10-01-preview:
    post:
      operationId: HypervSitesController_ComputeErrorSummary
      tags:
        - HypervSitesController
      description: Method to get site error summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteErrorSummary'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/computeusage?api-version=2023-10-01-preview:
    post:
      operationId: HypervSitesController_Computeusage
      tags:
        - HypervSitesController
      description: Get a hyperv site usage.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSiteUsage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/exportApplications?api-version=2023-10-01-preview:
    post:
      operationId: HypervSitesController_ExportApplications
      tags:
        - HypervSitesController
      description: "Method to generate report containing\r\n            machine and the deep discovery of the application installed in the machine."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/exportDependencies?api-version=2023-10-01-preview:
    post:
      operationId: HypervDependencyMapController_ExportDependencies
      tags:
        - HypervDependencyMapController
      description: API to generate report containing agentless dependencies.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: requestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsExportDependenciesRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/exportMachineErrors?api-version=2023-10-01-preview:
    post:
      operationId: HypervSitesController_ExportMachineErrors
      tags:
        - HypervSitesController
      description: "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportMachineErrorsRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/generateCoarseMap?api-version=2023-10-01-preview:
    post:
      operationId: HypervDependencyMapController_GenerateCoarseMap
      tags:
        - HypervDependencyMapController
      description: API to generate coarse map for the list of machines.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsScopeMapRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/generateDetailedMap?api-version=2023-10-01-preview:
    post:
      operationId: HypervDependencyMapController_GenerateDetailedMap
      tags:
        - HypervDependencyMapController
      description: API to generate detailed map for a selected machine.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/hosts?api-version=2023-10-01-preview:
    get:
      operationId: HypervHostController_ListByHypervSite
      tags:
        - HypervHostController
      description: List HypervHost resources by HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervHostListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/hosts/{hostName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervHostController_Get
      tags:
        - HypervHostController
      description: Get a HypervHost
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: hostName
          in: path
          description: ' Host name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervHost'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: HypervHostController_Create
      tags:
        - HypervHostController
      description: Create a HypervHost
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: hostName
          in: path
          description: ' Host name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervHost'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervHost'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervHost'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: HypervHostController_Delete
      tags:
        - HypervHostController
      description: Delete a HypervHost
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: hostName
          in: path
          description: ' Host name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/jobs?api-version=2023-10-01-preview:
    get:
      operationId: HypervJobs_ListByHypervSite
      tags:
        - HypervJobs
      description: List HypervJob resources by HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervJobListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/jobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervJobs_Get
      tags:
        - HypervJobs
      description: Get a HypervJob
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: ' Job name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/listHealthSummary?api-version=2023-10-01-preview:
    post:
      operationId: HypervSitesControllerHealthSummary_List
      tags:
        - HypervSitesController
      description: Method to get site health summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteHealthSummaryCollection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: HypervSitesController_ListHealthSummary
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines?api-version=2023-10-01-preview:
    get:
      operationId: HypervMachinesController_ListByHypervSite
      tags:
        - HypervMachinesController
      description: List HypervMachine resources by HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            format: int32
            type: integer
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervMachineListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines/{machineName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervMachinesController_Get
      tags:
        - HypervMachinesController
      description: Get a HypervMachine
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' HypervMachine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervMachine'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: HypervMachinesController_Update
      tags:
        - HypervMachinesController
      description: Update a HypervMachine
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' HypervMachine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HypervMachineUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervMachine'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines/{machineName}/softwareInventories/{default}?api-version=2023-10-01-preview:
    get:
      operationId: HypervSoftwareInventoriesControllerMachineSoftwareInventory_Get
      tags:
        - HypervSoftwareInventoriesController
      description: Method to get a machines software inventory like applications and roles.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' HypervMachine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: default
          in: path
          description: Default value.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: Default
              modelAsString: true
              values:
                - name: default
                  value: default
                  description: default value.
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervVmSoftwareInventory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: HypervSoftwareInventoriesController_GetMachineSoftwareInventory
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/machines/{machineName}/softwareinventories?api-version=2023-10-01-preview:
    get:
      operationId: HypervSoftwareInventoriesController_ListByHypervMachine
      tags:
        - HypervSoftwareInventoriesController
      description: List HypervVmSoftwareInventory resources by HypervMachine
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' HypervMachine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervVmSoftwareInventoryListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/operationsStatus/{operationStatusName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervOperationsStatusControllerHypervOperationsStatus_Get
      tags:
        - HypervOperationsStatusController
      description: Method to get operation status.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: operationStatusName
          in: path
          description: Operation status  Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: HypervOperationsStatusController_GetHypervOperationsStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/runAsAccounts?api-version=2023-10-01-preview:
    get:
      operationId: HypervRunAsAccountsController_ListByHypervSite
      tags:
        - HypervRunAsAccountsController
      description: List HypervRunAsAccountResource resources by HypervSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervRunAsAccountResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/runAsAccounts/{accountName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervRunAsAccountsController_Get
      tags:
        - HypervRunAsAccountsController
      description: Get a HypervRunAsAccountResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: accountName
          in: path
          description: ' RunAsAccounts name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervRunAsAccountResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/serverGroupMembers?api-version=2023-10-01-preview:
    post:
      operationId: HypervDependencyMapController_ServerGroupMembers
      tags:
        - HypervDependencyMapController
      description: API to list server group members for the selected server group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsServerGroupMembersRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/summary?api-version=2023-10-01-preview:
    post:
      operationId: HypervSitesController_Summary
      tags:
        - HypervSitesController
      description: Method to get site usage.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HypervSiteUsage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/updateDependencyMapStatus?api-version=2023-10-01-preview:
    post:
      operationId: HypervDependencyMapControllerDependencyMapStatus_Update
      tags:
        - HypervDependencyMapController
      description: "Method to enable disable dependency map status for machines\r\n            in a site."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineDepMapStatus'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: HypervDependencyMapController_UpdateDependencyMapStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/hypervSites/{siteName}/updateProperties?api-version=2023-10-01-preview:
    post:
      operationId: HypervMachinesControllerProperties_Update
      tags:
        - HypervMachinesController
      description: "Method to update custom properties for HYPERV machines\r\n            in a site."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: metaData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineMetadataCollection'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: HypervMachinesController_UpdateProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites?api-version=2023-10-01-preview:
    get:
      operationId: ImportSitesController_ListByResourceGroup
      tags:
        - ImportSitesController
      description: Get all import sites.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}?api-version=2023-10-01-preview:
    get:
      operationId: ImportSitesController_Get
      tags:
        - ImportSitesController
      description: Get a ImportSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ImportSitesController_Create
      tags:
        - ImportSitesController
      description: Create a ImportSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportSite'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSite'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSite'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: ImportSitesController_Update
      tags:
        - ImportSitesController
      description: Update a ImportSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportSiteUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ImportSitesController_Delete
      tags:
        - ImportSitesController
      description: Delete a ImportSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deleteImportedMachines?api-version=2023-10-01-preview:
    post:
      operationId: ImportSitesControllerImportedMachines_Delete
      tags:
        - ImportSitesController
      description: Deletes the imported machines for site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasUriResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ImportSitesController_DeleteImportedMachines
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deleteJobs?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsControllerDeletejobs_List
      tags:
        - ImportJobsController
      description: Method to get all delete import machines job for the given site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDeleteImportMachinesJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ImportJobsController_ListDeletejobs
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/deleteJobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsControllerDeletejob_Get
      tags:
        - ImportJobsController
      description: Gets the delete imported machines job with the given job name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: Job Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteImportMachinesJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ImportJobsController_GetDeletejob
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/exportJobs?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsControllerExportjobs_List
      tags:
        - ImportJobsController
      description: Method to get all export import machines job for the given site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedExportImportedMachinesJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ImportJobsController_ListExportjobs
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/exportJobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsControllerExportjob_Get
      tags:
        - ImportJobsController
      description: Gets the export imported machines job with the given job name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: Job Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportImportedMachinesJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ImportJobsController_GetExportjob
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/exportUri?api-version=2023-10-01-preview:
    post:
      operationId: ImportSitesController_ExportUri
      tags:
        - ImportSitesController
      description: Method to export  a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasUriResponse'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasUriResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importJobs?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsControllerImportjobs_List
      tags:
        - ImportJobsController
      description: Method to get all import machines job for the given site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedImportMachinesJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: ImportJobsController_ListImportjobs
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importJobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsControllerImportjob_Get
      tags:
        - ImportJobsController
      description: Gets the import job with the given job name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: Job Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMachinesJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ImportJobsController_GetImportjob
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/importUri?api-version=2023-10-01-preview:
    post:
      operationId: ImportSitesController_ImportUri
      tags:
        - ImportSitesController
      description: Method to import a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SasUriResponse'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasUriResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/jobs?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsController_ListByImportSite
      tags:
        - ImportJobsController
      description: List ImportJob resources by ImportSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJobListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/jobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: ImportJobsController_Get
      tags:
        - ImportJobsController
      description: Get a ImportJob
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: ' Jobs name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/machines?api-version=2023-10-01-preview:
    get:
      operationId: ImportMachinesController_ListByImportSite
      tags:
        - ImportMachinesController
      description: List ImportMachine resources by ImportSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMachineListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/importSites/{siteName}/machines/{machineName}?api-version=2023-10-01-preview:
    get:
      operationId: ImportMachinesController_Get
      tags:
        - ImportMachinesController
      description: Get a ImportMachine
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportMachine'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ImportMachinesController_Delete
      tags:
        - ImportMachinesController
      description: Delete a ImportMachine
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites?api-version=2023-10-01-preview:
    get:
      operationId: MasterSitesController_ListByResourceGroup
      tags:
        - MasterSitesController
      summary: Get all sites.
      description: Get all the sites in the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}?api-version=2023-10-01-preview:
    get:
      operationId: MasterSitesController_Get
      tags:
        - MasterSitesController
      summary: Method to get a master site.
      description: Get a MasterSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: MasterSitesController_Create
      tags:
        - MasterSitesController
      description: Method to create or update a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterSite'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterSite'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterSite'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    patch:
      operationId: MasterSitesController_Update
      tags:
        - MasterSitesController
      description: Method to update an existing site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MasterSiteUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MasterSite'
        '202':
          description: Resource update request accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: MasterSitesController_Delete
      tags:
        - MasterSitesController
      description: Method to delete a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/errorSummary?api-version=2023-10-01-preview:
    post:
      operationId: MasterSitesController_ErrorSummary
      tags:
        - MasterSitesController
      description: Method to get error summary from master site for an appliance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorSummaryRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteErrorSummary'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/operationsStatus/{operationStatusName}?api-version=2023-10-01-preview:
    get:
      operationId: MasterSitesOperationsStatusControllerVmwareOperationStatus_Get
      tags:
        - MasterSitesOperationsStatusController
      description: A operation status resource belonging to a master site resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: operationStatusName
          in: path
          description: Operation status  Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: MasterSitesOperationsStatusController_GetVmwareOperationStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnections?api-version=2023-10-01-preview:
    get:
      operationId: PrivateEndpointConnectionController_ListByMasterSite
      tags:
        - PrivateEndpointConnectionController
      description: Gets the private link resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateEndpointConnections/{peConnectionName}?api-version=2023-10-01-preview:
    get:
      operationId: PrivateEndpointConnectionController_Get
      tags:
        - PrivateEndpointConnectionController
      description: Gets the private link resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: peConnectionName
          in: path
          description: ' Private link resource name.'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: PrivateEndpointConnectionController_Create
      tags:
        - PrivateEndpointConnectionController
      description: Gets the private link resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: peConnectionName
          in: path
          description: ' Private link resource name.'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: PrivateEndpointConnectionController_Delete
      tags:
        - PrivateEndpointConnectionController
      description: Deletes the private link resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: peConnectionName
          in: path
          description: ' Private link resource name.'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateLinkResources?api-version=2023-10-01-preview:
    get:
      operationId: PrivateLinkResourcesController_ListByMasterSite
      tags:
        - PrivateLinkResourcesController
      description: Gets the private link resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/privateLinkResources/{privateLinkResourceName}?api-version=2023-10-01-preview:
    get:
      operationId: PrivateLinkResourcesController_Get
      tags:
        - PrivateLinkResourcesController
      description: Gets the private link resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: privateLinkResourceName
          in: path
          description: Private link resource name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites?api-version=2023-10-01-preview:
    get:
      operationId: SqlSitesController_ListByMasterSite
      tags:
        - SqlSitesController
      description: Method to get all sites.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlSitesController_Get
      tags:
        - SqlSitesController
      description: Method to get a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: SqlSitesController_Create
      tags:
        - SqlSitesController
      description: Method to create a SQL site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlSite'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlSite'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlSite'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: SqlSitesController_Update
      tags:
        - SqlSitesController
      description: Method to update an existing site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlSiteUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlSite'
        '202':
          description: Resource update request accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: SqlSitesController_Delete
      tags:
        - SqlSitesController
      description: Deletes the SQL site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/discoverySiteDataSources?api-version=2023-10-01-preview:
    get:
      operationId: SqlDiscoverySiteDataSourceController_ListBySqlSite
      tags:
        - SqlDiscoverySiteDataSourceController
      description: List SqlDiscoverySiteDataSource resources by SqlSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDiscoverySiteDataSourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/discoverySiteDataSources/{discoverySiteDataSourceName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlDiscoverySiteDataSourceController_Get
      tags:
        - SqlDiscoverySiteDataSourceController
      description: Get a SqlDiscoverySiteDataSource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: discoverySiteDataSourceName
          in: path
          description: SQL Discovery site data source name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDiscoverySiteDataSource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: SqlDiscoverySiteDataSourceController_Create
      tags:
        - SqlDiscoverySiteDataSourceController
      description: Create a SqlDiscoverySiteDataSource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: discoverySiteDataSourceName
          in: path
          description: SQL Discovery site data source name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlDiscoverySiteDataSource'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDiscoverySiteDataSource'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDiscoverySiteDataSource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: SqlDiscoverySiteDataSourceController_Delete
      tags:
        - SqlDiscoverySiteDataSourceController
      description: Delete a SqlDiscoverySiteDataSource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: discoverySiteDataSourceName
          in: path
          description: SQL Discovery site data source name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/errorSummary?api-version=2023-10-01-preview:
    post:
      operationId: SqlSitesController_ErrorSummary
      tags:
        - SqlSitesController
      description: Method to get error summary from SQL site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorSummaryRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteErrorSummary'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/exportSqlServerErrors?api-version=2023-10-01-preview:
    post:
      operationId: SqlSitesController_ExportSqlServerErrors
      tags:
        - SqlSitesController
      description: Method to generate report containing SQL servers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/exportSqlServers?api-version=2023-10-01-preview:
    post:
      operationId: SqlSitesController_ExportSqlServers
      tags:
        - SqlSitesController
      description: Method to generate report containing SQL servers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportSqlServersRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/jobs?api-version=2023-10-01-preview:
    get:
      operationId: SqlJobsController_ListBySqlSite
      tags:
        - SqlJobsController
      summary: Gets the sql Jobs.
      description: List SqlJob resources by SqlSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlJobListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/jobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlJobsController_Get
      tags:
        - SqlJobsController
      summary: Gets the sql Job.
      description: Get a SqlJob
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: SQL Job name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/operationsStatus/{operationStatusName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlOperationsStatusControllerSqlOperationStatus_Get
      tags:
        - SqlOperationsStatusController
      description: Method to get operation status.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: operationStatusName
          in: path
          description: Operation status  Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: SqlOperationsStatusController_GetSqlOperationStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/refresh?api-version=2023-10-01-preview:
    post:
      operationId: SqlSitesController_Refresh
      tags:
        - SqlSitesController
      description: Method to refresh a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlSiteRefreshBody'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/runAsAccounts?api-version=2023-10-01-preview:
    get:
      operationId: SqlRunAsAccountsController_ListBySqlSite
      tags:
        - SqlRunAsAccountsController
      description: List SqlRunAsAccount resources by SqlSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRunAsAccountListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/runAsAccounts/{accountName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlRunAsAccountsController_Get
      tags:
        - SqlRunAsAccountsController
      description: Get a SqlRunAsAccount
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: accountName
          in: path
          description: SQL RunAsAccounts name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRunAsAccount'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlAvailabilityGroups?api-version=2023-10-01-preview:
    get:
      operationId: SqlAvailabilityGroupsController_ListBySqlSite
      tags:
        - SqlAvailabilityGroupsController
      description: Gets the sql availability groups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlAvailabilityGroupListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlAvailabilityGroups/{sqlAvailabilityGroupName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlAvailabilityGroupsController_Get
      tags:
        - SqlAvailabilityGroupsController
      description: Gets the sql availability group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlAvailabilityGroupName
          in: path
          description: SQL availability group name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlAvailabilityGroup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlDatabases?api-version=2023-10-01-preview:
    get:
      operationId: SqlDatabasesController_ListBySqlSite
      tags:
        - SqlDatabasesController
      description: Gets the sql Databases.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabaseV2ListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlDatabases/{sqlDatabaseName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlDatabasesController_Get
      tags:
        - SqlDatabasesController
      description: Gets the sql Database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlDatabaseName
          in: path
          description: SQL Database name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabaseV2'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlServers?api-version=2023-10-01-preview:
    get:
      operationId: SqlServersController_ListBySqlSite
      tags:
        - SqlServersController
      description: Gets the sql servers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerV2ListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/sqlServers/{sqlServerName}?api-version=2023-10-01-preview:
    get:
      operationId: SqlServersController_Get
      tags:
        - SqlServersController
      description: Gets the sql server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlServerName
          in: path
          description: SQL server name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerV2'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: SqlServersController_Update
      tags:
        - SqlServersController
      description: Updates the sql server tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlServerName
          in: path
          description: SQL server name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerV2Update'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlServerV2'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/sqlSites/{sqlSiteName}/summary?api-version=2023-10-01-preview:
    post:
      operationId: SqlSitesController_Summary
      tags:
        - SqlSitesController
      description: Method to get site usage/summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: sqlSiteName
          in: path
          description: SQL site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlSiteUsage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites?api-version=2023-10-01-preview:
    get:
      operationId: WebAppSitesController_ListByMasterSite
      tags:
        - WebAppSitesController
      description: Method to get all sites.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}?api-version=2023-10-01-preview:
    get:
      operationId: WebAppSitesController_Get
      tags:
        - WebAppSitesController
      description: Method to get a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: WebAppSitesController_Create
      tags:
        - WebAppSitesController
      description: Method to create a WebApp site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebAppSite'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppSite'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppSite'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: WebAppSitesController_Update
      tags:
        - WebAppSitesController
      description: Method to update an existing site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebAppSiteUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppSite'
        '202':
          description: Resource update request accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: WebAppSitesController_Delete
      tags:
        - WebAppSitesController
      description: Deletes the WebApp site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/discoverySiteDataSources?api-version=2023-10-01-preview:
    get:
      operationId: WebAppDiscoverySiteDataSourcesController_ListByWebAppSite
      tags:
        - WebAppDiscoverySiteDataSourcesController
      description: Method to get all Web app data sources in site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverySiteDataSourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/discoverySiteDataSources/{discoverySiteDataSourceName}?api-version=2023-10-01-preview:
    get:
      operationId: WebAppDiscoverySiteDataSourcesController_Get
      tags:
        - WebAppDiscoverySiteDataSourcesController
      description: Method to get a Web app data source in site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: discoverySiteDataSourceName
          in: path
          description: Data Source ARM name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverySiteDataSource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: WebAppDiscoverySiteDataSourcesController_Create
      tags:
        - WebAppDiscoverySiteDataSourcesController
      description: Method to create or update a Web app data source in site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: discoverySiteDataSourceName
          in: path
          description: Data Source ARM name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverySiteDataSource'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverySiteDataSource'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoverySiteDataSource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: WebAppDiscoverySiteDataSourcesController_Delete
      tags:
        - WebAppDiscoverySiteDataSourcesController
      description: Method to delete a Web app data source in site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: discoverySiteDataSourceName
          in: path
          description: Data Source ARM name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '202':
          description: Resource deletion accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/errorSummary?api-version=2023-10-01-preview:
    post:
      operationId: WebAppSitesController_ErrorSummary
      tags:
        - WebAppSitesController
      description: MMethod to get error summary from web app  site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorSummaryRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteErrorSummary'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/exportInventory?api-version=2023-10-01-preview:
    post:
      operationId: WebAppSitesController_ExportInventory
      tags:
        - WebAppSitesController
      description: Method to generate report containing web app inventory.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportWebAppsRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/extendedMachines?api-version=2023-10-01-preview:
    get:
      operationId: WebAppExtendedMachinesController_ListByWebAppSite
      tags:
        - WebAppExtendedMachinesController
      description: Method to get all extended machines.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppExtendedMachineListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/extendedMachines/{extendedMachineName}?api-version=2023-10-01-preview:
    get:
      operationId: WebAppExtendedMachinesController_Get
      tags:
        - WebAppExtendedMachinesController
      description: Method to get a extended machine.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: extendedMachineName
          in: path
          description: Extended machine name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppExtendedMachine'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebApplications?api-version=2023-10-01-preview:
    get:
      operationId: IisWebApplicationsController_ListByWebAppSite
      tags:
        - IisWebApplicationsController
      description: Method to get all IIS web application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IisWebApplicationsListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebApplications/{webApplicationName}?api-version=2023-10-01-preview:
    get:
      operationId: IisWebApplicationsController_Get
      tags:
        - IisWebApplicationsController
      description: Method to get an IIS web application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webApplicationName
          in: path
          description: Web application name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IisWebApplications'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: IisWebApplicationsController_Update
      tags:
        - IisWebApplicationsController
      description: Method to update tags on IIS web application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webApplicationName
          in: path
          description: Web application name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IisWebApplicationsUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IisWebApplications'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebServers?api-version=2023-10-01-preview:
    get:
      operationId: IisWebServersController_ListByWebAppSite
      tags:
        - IisWebServersController
      description: Method to get all IIS web servers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IisWebServersListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/iisWebServers/{webServerName}?api-version=2023-10-01-preview:
    get:
      operationId: IisWebServersController_Get
      tags:
        - IisWebServersController
      description: Method to get an IIS web server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webServerName
          in: path
          description: Web server name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IisWebServers'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/refresh?api-version=2023-10-01-preview:
    post:
      operationId: WebAppSitesController_Refresh
      tags:
        - WebAppSitesController
      description: Method to refresh a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxySiteRefreshBody'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/runasaccounts?api-version=2023-10-01-preview:
    get:
      operationId: WebAppRunAsAccountsController_ListByWebAppSite
      tags:
        - WebAppRunAsAccountsController
      description: Method to get all run as accounts.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppRunAsAccountListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/runasaccounts/{accountName}?api-version=2023-10-01-preview:
    get:
      operationId: WebAppRunAsAccountsController_Get
      tags:
        - WebAppRunAsAccountsController
      description: Method to get run as account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: accountName
          in: path
          description: Run as account ARM name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppRunAsAccount'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/summary?api-version=2023-10-01-preview:
    post:
      operationId: WebAppSitesController_Summary
      tags:
        - WebAppSitesController
      description: Method to get site usage/summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebAppSiteUsage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebApplications?api-version=2023-10-01-preview:
    get:
      operationId: TomcatWebApplicationsController_ListByWebAppSite
      tags:
        - TomcatWebApplicationsController
      description: Method to get all Tomcat web application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TomcatWebApplicationsListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebApplications/{webApplicationName}?api-version=2023-10-01-preview:
    get:
      operationId: TomcatWebApplicationsController_Get
      tags:
        - TomcatWebApplicationsController
      description: Method to get an Tomcat web application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webApplicationName
          in: path
          description: Web application name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TomcatWebApplications'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: TomcatWebApplicationsController_Update
      tags:
        - TomcatWebApplicationsController
      description: Updates the Tomcat web application tags.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webApplicationName
          in: path
          description: Web application name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TomcatWebApplicationsUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TomcatWebApplications'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebServers?api-version=2023-10-01-preview:
    get:
      operationId: TomcatWebServersController_ListByWebAppSite
      tags:
        - TomcatWebServersController
      description: Method to get all Tomcat web servers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TomcatWebServersListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/tomcatWebServers/{webServerName}?api-version=2023-10-01-preview:
    get:
      operationId: TomcatWebServersController_Get
      tags:
        - TomcatWebServersController
      description: Method to get an Tomcat web server.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webServerName
          in: path
          description: Web server name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TomcatWebServers'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/updateProperties?api-version=2023-10-01-preview:
    post:
      operationId: WebAppPropertiesControllerProperties_Update
      tags:
        - WebAppPropertiesController
      description: |-
        Method to update properties for web applications.
                    in a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebAppPropertiesCollection'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: WebAppPropertiesController_UpdateProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/webApplications?api-version=2023-10-01-preview:
    get:
      operationId: WebApplicationsController_ListByWebAppSite
      tags:
        - WebApplicationsController
      description: Method to get all IIS web applications.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/masterSites/{siteName}/webAppSites/{webAppSiteName}/webServers?api-version=2023-10-01-preview:
    get:
      operationId: WebServersController_ListByWebAppSite
      tags:
        - WebServersController
      description: Method to get all web servers.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: webAppSiteName
          in: path
          description: Web app site name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebServerListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites?api-version=2023-10-01-preview:
    get:
      operationId: ServerSitesController_ListByResourceGroup
      tags:
        - ServerSitesController
      description: List ServerSiteResource resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}?api-version=2023-10-01-preview:
    get:
      operationId: ServerSitesController_Get
      tags:
        - ServerSitesController
      description: Get a ServerSiteResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ServerSitesController_Create
      tags:
        - ServerSitesController
      description: Create a ServerSiteResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerSiteResource'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteResource'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    patch:
      operationId: ServerSitesController_Update
      tags:
        - ServerSitesController
      description: Update a ServerSiteResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerSiteResourceUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ServerSitesController_Delete
      tags:
        - ServerSitesController
      description: Delete a ServerSiteResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/clientGroupMembers?api-version=2023-10-01-preview:
    post:
      operationId: ServerDependencyMapController_ClientGroupMembers
      tags:
        - ServerDependencyMapController
      description: API to list client group members for the selected client group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsClientGroupMembersRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/computeErrorSummary?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesController_ComputeErrorSummary
      tags:
        - ServerSitesController
      description: Get the error summary for a server site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteErrorSummary'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/computeusage?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesController_Computeusage
      tags:
        - ServerSitesController
      description: Get a serve site usage.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteUsageResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/exportApplications?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesController_ExportApplications
      tags:
        - ServerSitesController
      description: "Method to generate report containing\r\n            machine and the deep discovery of the application installed in the machine."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/exportDependencies?api-version=2023-10-01-preview:
    post:
      operationId: ServerDependencyMapController_ExportDependencies
      tags:
        - ServerDependencyMapController
      description: API to generate report containing agentless dependencies.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: requestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsExportDependenciesRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/exportMachineErrors?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesController_ExportMachineErrors
      tags:
        - ServerSitesController
      description: "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportMachineErrorsRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/generateCoarseMap?api-version=2023-10-01-preview:
    post:
      operationId: ServerDependencyMapController_GenerateCoarseMap
      tags:
        - ServerDependencyMapController
      description: API to generate coarse map for the list of machines.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsScopeMapRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/generateDetailedMap?api-version=2023-10-01-preview:
    post:
      operationId: ServerDependencyMapController_GenerateDetailedMap
      tags:
        - ServerDependencyMapController
      description: API to generate detailed map for a selected machine.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/jobs?api-version=2023-10-01-preview:
    get:
      operationId: ServerJobsController_ListByServerSiteResource
      tags:
        - ServerJobsController
      description: List ServerJob resources by ServerSiteResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerJobListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/jobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: ServerJobsController_Get
      tags:
        - ServerJobsController
      description: Get a ServerJob
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: ' Jobs name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/listHealthSummary?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesControllerHealthSummary_List
      tags:
        - ServerSitesController
      description: Method to get site health summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteHealthSummaryCollection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ServerSitesController_ListHealthSummary
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines?api-version=2023-10-01-preview:
    get:
      operationId: ServersController_ListByServerSiteResource
      tags:
        - ServersController
      description: Get all machines in a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            type: string
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines/{machineName}?api-version=2023-10-01-preview:
    get:
      operationId: ServersControllerMachine_Get
      tags:
        - ServersController
      description: Get a Server
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' A server machine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ServersController_GetMachine
    patch:
      operationId: ServersControllerMachine_Update
      tags:
        - ServersController
      description: Update a Server machine
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' A server machine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ServersController_UpdateMachine
    delete:
      operationId: ServersControllerMachine_Delete
      tags:
        - ServersController
      description: Delete a Server
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' A server machine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ServersController_DeleteMachine
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines/{machineName}/softwareInventories/{default}?api-version=2023-10-01-preview:
    get:
      operationId: ServerSoftwareInventoriesControllerMachineSoftwareInventory_Get
      tags:
        - ServerSoftwareInventoriesController
      description: Method to get a machines software inventory like applications and roles.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' A server machine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: default
          in: path
          description: Default value.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: Default
              modelAsString: true
              values:
                - name: default
                  value: default
                  description: default value.
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSoftwareInventory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ServerSoftwareInventoriesController_GetMachineSoftwareInventory
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/machines/{machineName}/softwareinventories?api-version=2023-10-01-preview:
    get:
      operationId: ServerSoftwareInventoriesController_ListByServer
      tags:
        - ServerSoftwareInventoriesController
      description: List ServerSoftwareInventory resources by Server
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: ' A server machine name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSoftwareInventoryListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/operationsStatus/{operationStatusName}?api-version=2023-10-01-preview:
    get:
      operationId: ServerOperationsStatusControllerServerSiteOperationsStatus_Get
      tags:
        - ServerOperationsStatusController
      description: A operation status resource belonging to a site resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: operationStatusName
          in: path
          description: Operation status  Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: ServerOperationsStatusController_GetServerSiteOperationsStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/refreshSite?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesController_RefreshSite
      tags:
        - ServerSitesController
      description: Operation to refresh a site
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/runAsAccounts?api-version=2023-10-01-preview:
    get:
      operationId: ServerRunAsAccountsController_ListByServerSiteResource
      tags:
        - ServerRunAsAccountsController
      description: List ServerRunAsAccount resources by ServerSiteResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerRunAsAccountListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/runAsAccounts/{accountName}?api-version=2023-10-01-preview:
    get:
      operationId: ServerRunAsAccountsController_Get
      tags:
        - ServerRunAsAccountsController
      description: Get a ServerRunAsAccount
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: accountName
          in: path
          description: ' RunAsAccounts name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerRunAsAccount'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/serverGroupMembers?api-version=2023-10-01-preview:
    post:
      operationId: ServerDependencyMapController_ServerGroupMembers
      tags:
        - ServerDependencyMapController
      description: API to list server group members for the selected server group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsServerGroupMembersRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/summary?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesController_Summary
      tags:
        - ServerSitesController
      description: Method to get site usage.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerSiteUsage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/updateDependencyMapStatus?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesControllerDependencyMapStatus_Update
      tags:
        - ServerSitesController
      description: "Method to enable disable dependency map status for machines\r\n            in a site."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineDepMapStatus'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: ServerSitesController_UpdateDependencyMapStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/serverSites/{siteName}/updateProperties?api-version=2023-10-01-preview:
    post:
      operationId: ServerSitesControllerProperties_Update
      tags:
        - ServerSitesController
      description: Operation to update custom properties for servers
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: metaData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineMetadataCollection'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: ServerSitesController_UpdateProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites?api-version=2023-10-01-preview:
    get:
      operationId: SitesController_ListByResourceGroup
      tags:
        - SitesController
      summary: Get all vmware sites.
      description: Get all the vmware sites in the resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSiteListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}?api-version=2023-10-01-preview:
    get:
      operationId: SitesController_Get
      tags:
        - SitesController
      description: Get a VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: SitesController_Create
      tags:
        - SitesController
      description: Create a VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareSite'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSite'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSite'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: SitesController_Update
      tags:
        - SitesController
      description: Update a VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VmwareSiteUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSite'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: SitesController_Delete
      tags:
        - SitesController
      description: Delete a VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/clientGroupMembers?api-version=2023-10-01-preview:
    post:
      operationId: DependencyMapController_ClientGroupMembers
      tags:
        - DependencyMapController
      description: API to list client group members for the selected client group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsClientGroupMembersRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/computeErrorSummary?api-version=2023-10-01-preview:
    post:
      operationId: SitesController_ComputeErrorSummary
      tags:
        - SitesController
      description: Method to get site error summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteErrorSummary'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/computeusage?api-version=2023-10-01-preview:
    post:
      operationId: SitesController_Computeusage
      tags:
        - SitesController
      description: Method to get site error summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSiteUsage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportApplications?api-version=2023-10-01-preview:
    post:
      operationId: SitesController_ExportApplications
      tags:
        - SitesController
      description: "Method to generate report containing\r\n            machine and the deep discovery of the application installed in the machine."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportDependencies?api-version=2023-10-01-preview:
    post:
      operationId: DependencyMapController_ExportDependencies
      tags:
        - DependencyMapController
      description: API to generate report containing agentless dependencies.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: requestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsExportDependenciesRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportMachineErrors?api-version=2023-10-01-preview:
    post:
      operationId: SitesController_ExportMachineErrors
      tags:
        - SitesController
      description: "Method to generate report containing \r\n            machine and the errors encountered during guest discovery of the machine."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportMachineErrorsRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/exportMachines?api-version=2023-10-01-preview:
    post:
      operationId: SitesController_ExportMachines
      tags:
        - SitesController
      description: "Method to generate report containing \r\n            machine and the deep discovery of the application installed in the machine."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportMachinesRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/generateCoarseMap?api-version=2023-10-01-preview:
    post:
      operationId: DependencyMapController_GenerateCoarseMap
      tags:
        - DependencyMapController
      description: API to generate coarse map for the list of machines.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsScopeMapRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/generateDetailedMap?api-version=2023-10-01-preview:
    post:
      operationId: DependencyMapController_GenerateDetailedMap
      tags:
        - DependencyMapController
      description: API to generate detailed map for a selected machine.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsSingleMachineDetailedMapRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/hosts?api-version=2023-10-01-preview:
    get:
      operationId: VmwareHostController_ListByVmwareSite
      tags:
        - VmwareHostController
      description: List VmwareHost resources by VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareHostListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/hosts/{hostName}?api-version=2023-10-01-preview:
    get:
      operationId: VmwareHostController_Get
      tags:
        - VmwareHostController
      description: Get a VmwareHost
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: hostName
          in: path
          description: ' Hosts name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareHost'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/jobs?api-version=2023-10-01-preview:
    get:
      operationId: HypervJobsController_ListByVmwareSite
      tags:
        - HypervJobsController
      description: List VmwareJob resources by VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareJobListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/jobs/{jobName}?api-version=2023-10-01-preview:
    get:
      operationId: HypervJobsController_Get
      tags:
        - HypervJobsController
      description: Get a VmwareJob
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: jobName
          in: path
          description: ' Jobs name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareJob'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/listHealthSummary?api-version=2023-10-01-preview:
    post:
      operationId: SitesControllerHealthSummary_List
      tags:
        - SitesController
      description: Method to get site health summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteHealthSummaryCollection'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: SitesController_ListHealthSummary
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines?api-version=2023-10-01-preview:
    get:
      operationId: MachinesController_ListByVmwareSite
      tags:
        - MachinesController
      description: List MachineResource resources by VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: top
          in: query
          description: page size  query
          required: false
          schema:
            format: int32
            type: integer
        - name: continuationToken
          in: query
          description: Optional parameter for continuation token.
          required: false
          schema:
            type: string
        - name: totalRecordCount
          in: query
          description: Total count of machines in the given site.
          required: false
          schema:
            format: int32
            type: integer
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}?api-version=2023-10-01-preview:
    get:
      operationId: MachinesController_Get
      tags:
        - MachinesController
      description: Get a MachineResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: MachinesController_Update
      tags:
        - MachinesController
      description: Update a MachineResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineResourceUpdate'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MachineResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/softwareInventories/{default}?api-version=2023-10-01-preview:
    get:
      operationId: VmwareSoftwareInventoriesControllerMachineSoftwareInventory_Get
      tags:
        - VmwareSoftwareInventoriesController
      description: Method to get a machines software inventory like applications and roles.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: default
          in: path
          description: Default value.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: Default
              modelAsString: true
              values:
                - name: default
                  value: default
                  description: default value.
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareMachineSoftwareInventory'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: VmwareSoftwareInventoriesController_GetMachineSoftwareInventory
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/softwareinventories?api-version=2023-10-01-preview:
    get:
      operationId: VmwareSoftwareInventoriesController_ListByMachineResource
      tags:
        - VmwareSoftwareInventoriesController
      description: List VmwareMachineSoftwareInventory resources by MachineResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareMachineSoftwareInventoryListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/start?api-version=2023-10-01-preview:
    post:
      operationId: MachinesController_Start
      tags:
        - MachinesController
      description: Method to start a machine.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/machines/{machineName}/stop?api-version=2023-10-01-preview:
    post:
      operationId: MachinesController_Stop
      tags:
        - MachinesController
      description: Method to stop a machine.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: machineName
          in: path
          description: Machine name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/operationsStatus/{operationStatusName}?api-version=2023-10-01-preview:
    get:
      operationId: VmwareOperationsStatusVmwareOperationStatus_Get
      tags:
        - VmwareOperationsStatus
      description: A operation status resource belonging to a site resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: operationStatusName
          in: path
          description: Operation status  Arm Name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: VmwareOperationsStatus_GetVmwareOperationStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/runAsAccounts?api-version=2023-10-01-preview:
    get:
      operationId: RunAsAccountsController_ListByVmwareSite
      tags:
        - RunAsAccountsController
      description: List VmwareRunAsAccountResource resources by VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareRunAsAccountResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/runAsAccounts/{accountName}?api-version=2023-10-01-preview:
    get:
      operationId: RunAsAccountsController_Get
      tags:
        - RunAsAccountsController
      description: Get a VmwareRunAsAccountResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: accountName
          in: path
          description: ' RunAsAccounts name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareRunAsAccountResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/serverGroupMembers?api-version=2023-10-01-preview:
    post:
      operationId: DependencyMapController_ServerGroupMembers
      tags:
        - DependencyMapController
      description: API to list server group members for the selected server group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: mapRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencyMapServiceMapextensionsServerGroupMembersRequest'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/summary?api-version=2023-10-01-preview:
    post:
      operationId: SitesController_Summary
      tags:
        - SitesController
      description: Method to get site usage/summary.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmwareSiteUsage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateDependencyMapStatus?api-version=2023-10-01-preview:
    post:
      operationId: VmwarePropertiesControllerDependencyMapStatus_Update
      tags:
        - VmwarePropertiesController
      description: |-
        Method to enable disable dependency map status for machines
                    in a
        site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: updateMachineDepMapStatus
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineDepMapStatus'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: VmwarePropertiesController_UpdateDependencyMapStatus
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateProperties?api-version=2023-10-01-preview:
    post:
      operationId: VmwarePropertiesControllerProperties_Update
      tags:
        - VmwarePropertiesController
      description: Method to update properties for machines   in a site.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: metaData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineMetadataCollection'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: Resource operation accepted.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: VmwarePropertiesController_UpdateProperties
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateRunAsAccount?api-version=2023-10-01-preview:
    post:
      operationId: VmwarePropertiesControllerRunAsAccount_Update
      tags:
        - VmwarePropertiesController
      description: "Method to associate Run as account to machine\r\n            in a site."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: updateMachineRunAsAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineRunAsAccount'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
      x-ms-original-operationId: VmwarePropertiesController_UpdateRunAsAccount
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/updateTags?api-version=2023-10-01-preview:
    post:
      operationId: VmwarePropertiesController_UpdateTags
      tags:
        - VmwarePropertiesController
      description: "Method to associate Run as account to machine\r\n            in a site."
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: The content of the action request
        required: true
        x-ms-requestBody-name: updateMachineTags
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMachineTags'
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                type: object
        '202':
          description: The request has been accepted for processing, but processing has not yet completed.
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
            location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/vcenters?api-version=2023-10-01-preview:
    get:
      operationId: VcenterController_ListByVmwareSite
      tags:
        - VcenterController
      description: List Vcenter resources by VmwareSite
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: filter
          in: query
          description: filter query
          required: false
          schema:
            type: string
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VcenterListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzure/vmwareSites/{siteName}/vcenters/{vcenterName}?api-version=2023-10-01-preview:
    get:
      operationId: VcenterController_Get
      tags:
        - VcenterController
      description: Get a Vcenter
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: vcenterName
          in: path
          description: ' VCenters name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: ARM operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcenter'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: VcenterController_Create
      tags:
        - VcenterController
      description: Create a Vcenter
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: vcenterName
          in: path
          description: ' VCenters name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vcenter'
      responses:
        '200':
          description: ARM update operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcenter'
        '201':
          description: ARM create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vcenter'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: VcenterController_Delete
      tags:
        - VcenterController
      description: Delete a Vcenter
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: siteName
          in: path
          description: Site name
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
        - name: vcenterName
          in: path
          description: ' VCenters name'
          required: true
          schema:
            pattern: ^[a-zA-Z0-9-]{3,24}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
