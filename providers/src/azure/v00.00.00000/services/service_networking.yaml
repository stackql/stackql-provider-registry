openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Service Networking (Application Gateway for Containers)
  description: Application Gateway for Containers is an application (layer 7) load balancing and dynamic traffic management product for workloads running in a Kubernetes cluster. It extends Azures Application Load Balancing portfolio and is an offering under the Application Gateway product family.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Association:
      description: Association Subresource of Traffic Controller
      properties:
        properties:
          $ref: '#/components/schemas/AssociationProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    AssociationListResult:
      type: object
      description: The response of a Association list operation.
      properties:
        value:
          type: array
          description: The Association items on this page
          items:
            $ref: '#/components/schemas/Association'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    AssociationProperties:
      type: object
      description: Association Properties.
      properties:
        associationType:
          $ref: '#/components/schemas/AssociationType'
          description: Association Type
        subnet:
          $ref: '#/components/schemas/AssociationSubnet'
          description: Association Subnet
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of Traffic Controller Association Resource
          readOnly: true
      required:
        - associationType
    AssociationSubnet:
      type: object
      description: Association Subnet.
      properties:
        id:
          type: string
          description: Association ID.
      required:
        - id
    AssociationSubnetUpdate:
      type: object
      description: Association Subnet.
      properties:
        id:
          type: string
          description: Association ID.
    AssociationType:
      type: string
      description: Association Type Enum
      enum:
        - subnets
      x-ms-enum:
        name: AssociationType
        modelAsString: true
        values:
          - name: subnets
            value: subnets
            description: Association of Type Subnet
    AssociationUpdate:
      description: The type used for update operations of the Association.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/AssociationUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    AssociationUpdateProperties:
      type: object
      description: The updatable properties of the Association.
      properties:
        associationType:
          $ref: '#/components/schemas/AssociationType'
          description: Association Type
        subnet:
          $ref: '#/components/schemas/AssociationSubnetUpdate'
          description: Association Subnet
    Frontend:
      description: Frontend Sub Resource of Traffic Controller.
      properties:
        properties:
          $ref: '#/components/schemas/FrontendProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    FrontendListResult:
      type: object
      description: The response of a Frontend list operation.
      properties:
        value:
          type: array
          description: The Frontend items on this page
          items:
            $ref: '#/components/schemas/Frontend'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    FrontendProperties:
      type: object
      description: Frontend Properties.
      properties:
        fqdn:
          type: string
          description: The Fully Qualified Domain Name of the DNS record associated to a Traffic Controller frontend.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of Traffic Controller Frontend Resource
          readOnly: true
    FrontendUpdate:
      type: object
      description: The type used for update operations of the Frontend.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
    PolicyType:
      type: string
      description: Policy Type of the Security Policy
      enum:
        - waf
      x-ms-enum:
        name: PolicyType
        modelAsString: true
        values:
          - name: WAF
            value: waf
            description: Policy of Type WAF
    ProvisioningState:
      type: string
      description: Resource Provisioning State Enum
      enum:
        - Provisioning
        - Updating
        - Deleting
        - Accepted
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
        values:
          - name: Provisioning
            value: Provisioning
            description: Resource in Provisioning State
          - name: Updating
            value: Updating
            description: Resource in Updating State
          - name: Deleting
            value: Deleting
            description: Resource in Deleting State
          - name: Accepted
            value: Accepted
            description: Resource in Accepted State
          - name: Succeeded
            value: Succeeded
            description: Resource in Succeeded State
          - name: Failed
            value: Failed
            description: Resource in Failed State
          - name: Canceled
            value: Canceled
            description: Resource in Canceled State
      readOnly: true
    ResourceId:
      type: object
      description: Resource ID definition used by parent to reference child resources.
      properties:
        id:
          type: string
          description: Resource ID of child resource.
      required:
        - id
    SecurityPolicy:
      description: SecurityPolicy Subresource of Traffic Controller.
      properties:
        properties:
          $ref: '#/components/schemas/SecurityPolicyProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SecurityPolicyConfigurations:
      type: object
      description: SecurityPolicyConfigurations Subresource of Traffic Controller.
      properties:
        wafSecurityPolicy:
          $ref: '#/components/schemas/WafSecurityPolicy'
          description: Contains reference to a WAF-type security policy that is applied at the Traffic Controller level.
    SecurityPolicyConfigurationsUpdate:
      type: object
      description: SecurityPolicyConfigurations Subresource of Traffic Controller.
      properties:
        wafSecurityPolicy:
          $ref: '#/components/schemas/WafSecurityPolicyUpdate'
          description: Contains reference to a WAF-type security policy that is applied at the Traffic Controller level.
    SecurityPolicyListResult:
      type: object
      description: The response of a SecurityPolicy list operation.
      properties:
        value:
          type: array
          description: The SecurityPolicy items on this page
          items:
            $ref: '#/components/schemas/SecurityPolicy'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SecurityPolicyProperties:
      type: object
      description: SecurityPolicy Properties.
      properties:
        policyType:
          $ref: '#/components/schemas/PolicyType'
          description: Type of the Traffic Controller Security Policy
          readOnly: true
        wafPolicy:
          $ref: '#/components/schemas/WafPolicy'
          description: Web Application Firewall Policy of the Traffic Controller Security Policy
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning State of Traffic Controller SecurityPolicy Resource
          readOnly: true
    SecurityPolicyUpdate:
      description: The type used for update operations of the SecurityPolicy.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/SecurityPolicyUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    SecurityPolicyUpdateProperties:
      type: object
      description: The updatable properties of the SecurityPolicy.
      properties:
        wafPolicy:
          $ref: '#/components/schemas/WafPolicyUpdate'
          description: Web Application Firewall Policy of the Traffic Controller Security Policy
    TrafficController:
      description: Concrete tracked resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/TrafficControllerProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    TrafficControllerListResult:
      type: object
      description: The response of a TrafficController list operation.
      properties:
        value:
          type: array
          description: The TrafficController items on this page
          items:
            $ref: '#/components/schemas/TrafficController'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    TrafficControllerProperties:
      type: object
      description: Traffic Controller Properties.
      properties:
        configurationEndpoints:
          type: array
          description: Configuration Endpoints.
          items:
            type: string
          readOnly: true
        frontends:
          type: array
          description: Frontends References List
          items:
            $ref: '#/components/schemas/ResourceId'
          readOnly: true
        associations:
          type: array
          description: Associations References List
          items:
            $ref: '#/components/schemas/ResourceId'
          readOnly: true
        securityPolicies:
          type: array
          description: Security Policies References List
          items:
            $ref: '#/components/schemas/ResourceId'
          readOnly: true
        securityPolicyConfigurations:
          $ref: '#/components/schemas/SecurityPolicyConfigurations'
          description: Security Policy Configuration
          x-ms-identifiers: []
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: The status of the last operation.
          readOnly: true
    TrafficControllerUpdate:
      description: The type used for update operations of the TrafficController.
      properties:
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/TrafficControllerUpdateProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    TrafficControllerUpdateProperties:
      type: object
      description: The updatable properties of the TrafficController.
      properties:
        securityPolicyConfigurations:
          $ref: '#/components/schemas/SecurityPolicyConfigurationsUpdate'
          description: Security Policy Configuration
          x-ms-identifiers: []
    WafPolicy:
      type: object
      description: Web Application Firewall Policy
      properties:
        id:
          type: string
          description: Resource ID of the WAF
      required:
        - id
    WafPolicyUpdate:
      type: object
      description: Web Application Firewall Policy
      properties:
        id:
          type: string
          description: Resource ID of the WAF
    WafSecurityPolicy:
      type: object
      description: Web Application Firewall Security Policy
      properties:
        id:
          type: string
          description: Resource ID of the Waf Security Policy
      required:
        - id
    WafSecurityPolicyUpdate:
      type: object
      description: Web Application Firewall Security Policy
      properties:
        id:
          type: string
          description: Resource ID of the Waf Security Policy
  x-stackQL-resources:
    operations:
      id: azure.service_networking.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ServiceNetworking~1operations?api-version=2024-05-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    traffic_controller_interfaces:
      id: azure.service_networking.traffic_controller_interfaces
      name: traffic_controller_interfaces
      title: traffic_controller_interfaces
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceNetworking~1trafficControllers?api-version=2024-05-01-preview/get'
            operationId: TrafficControllerInterface_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficControllerListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers?api-version=2024-05-01-preview/get'
            operationId: TrafficControllerInterface_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficControllerListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}?api-version=2024-05-01-preview/get'
            operationId: TrafficControllerInterface_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficController
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}?api-version=2024-05-01-preview/put'
            operationId: TrafficControllerInterface_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficController
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}?api-version=2024-05-01-preview/patch'
            operationId: TrafficControllerInterface_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficController
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}?api-version=2024-05-01-preview/delete'
            operationId: TrafficControllerInterface_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/traffic_controller_interfaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/traffic_controller_interfaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/traffic_controller_interfaces/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/traffic_controller_interfaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/traffic_controller_interfaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/traffic_controller_interfaces/methods/delete'
    associations_interfaces:
      id: azure.service_networking.associations_interfaces
      name: associations_interfaces
      title: associations_interfaces
      methods:
        list_by_traffic_controller:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1associations?api-version=2024-05-01-preview/get'
            operationId: AssociationsInterface_ListByTrafficController
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AssociationListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1associations~1{associationName}?api-version=2024-05-01-preview/get'
            operationId: AssociationsInterface_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Association
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1associations~1{associationName}?api-version=2024-05-01-preview/put'
            operationId: AssociationsInterface_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Association
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1associations~1{associationName}?api-version=2024-05-01-preview/patch'
            operationId: AssociationsInterface_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Association
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1associations~1{associationName}?api-version=2024-05-01-preview/delete'
            operationId: AssociationsInterface_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/associations_interfaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/associations_interfaces/methods/list_by_traffic_controller'
        insert:
          - $ref: '#/components/x-stackQL-resources/associations_interfaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/associations_interfaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/associations_interfaces/methods/delete'
    frontends_interfaces:
      id: azure.service_networking.frontends_interfaces
      name: frontends_interfaces
      title: frontends_interfaces
      methods:
        list_by_traffic_controller:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1frontends?api-version=2024-05-01-preview/get'
            operationId: FrontendsInterface_ListByTrafficController
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FrontendListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1frontends~1{frontendName}?api-version=2024-05-01-preview/get'
            operationId: FrontendsInterface_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Frontend
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1frontends~1{frontendName}?api-version=2024-05-01-preview/put'
            operationId: FrontendsInterface_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Frontend
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1frontends~1{frontendName}?api-version=2024-05-01-preview/patch'
            operationId: FrontendsInterface_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Frontend
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1frontends~1{frontendName}?api-version=2024-05-01-preview/delete'
            operationId: FrontendsInterface_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/frontends_interfaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/frontends_interfaces/methods/list_by_traffic_controller'
        insert:
          - $ref: '#/components/x-stackQL-resources/frontends_interfaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/frontends_interfaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/frontends_interfaces/methods/delete'
    security_policies_interfaces:
      id: azure.service_networking.security_policies_interfaces
      name: security_policies_interfaces
      title: security_policies_interfaces
      methods:
        list_by_traffic_controller:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1securityPolicies?api-version=2024-05-01-preview/get'
            operationId: SecurityPoliciesInterface_ListByTrafficController
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicyListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1securityPolicies~1{securityPolicyName}?api-version=2024-05-01-preview/get'
            operationId: SecurityPoliciesInterface_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1securityPolicies~1{securityPolicyName}?api-version=2024-05-01-preview/put'
            operationId: SecurityPoliciesInterface_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicy
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1securityPolicies~1{securityPolicyName}?api-version=2024-05-01-preview/patch'
            operationId: SecurityPoliciesInterface_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SecurityPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceNetworking~1trafficControllers~1{trafficControllerName}~1securityPolicies~1{securityPolicyName}?api-version=2024-05-01-preview/delete'
            operationId: SecurityPoliciesInterface_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/security_policies_interfaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/security_policies_interfaces/methods/list_by_traffic_controller'
        insert:
          - $ref: '#/components/x-stackQL-resources/security_policies_interfaces/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/security_policies_interfaces/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/security_policies_interfaces/methods/delete'
    vw_traffic_controller_interfaces:
      id: azure.service_networking.vw_traffic_controller_interfaces
      name: vw_traffic_controller_interfaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.configurationEndpoints') as "configuration_endpoints",
              JSON_EXTRACT(properties, '$.frontends') as "frontends",
              JSON_EXTRACT(properties, '$.associations') as "associations",
              JSON_EXTRACT(properties, '$.securityPolicies') as "security_policies",
              JSON_EXTRACT(properties, '$.securityPolicyConfigurations') as "security_policy_configurations",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              trafficControllerName
              FROM azure.service_networking.traffic_controller_interfaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.configurationEndpoints') as "configuration_endpoints",
                json_extract_path_text(properties, '$.frontends') as "frontends",
                json_extract_path_text(properties, '$.associations') as "associations",
                json_extract_path_text(properties, '$.securityPolicies') as "security_policies",
                json_extract_path_text(properties, '$.securityPolicyConfigurations') as "security_policy_configurations",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                trafficControllerName
                FROM azure.service_networking.traffic_controller_interfaces
                WHERE subscriptionId = 'replace-me';
    vw_associations_interfaces:
      id: azure.service_networking.vw_associations_interfaces
      name: vw_associations_interfaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.associationType') as "association_type",
              JSON_EXTRACT(properties, '$.subnet') as "subnet",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              trafficControllerName,
              associationName
              FROM azure.service_networking.associations_interfaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND trafficControllerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.associationType') as "association_type",
                json_extract_path_text(properties, '$.subnet') as "subnet",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                trafficControllerName,
                associationName
                FROM azure.service_networking.associations_interfaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND trafficControllerName = 'replace-me';
    vw_frontends_interfaces:
      id: azure.service_networking.vw_frontends_interfaces
      name: vw_frontends_interfaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.fqdn') as "fqdn",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              trafficControllerName,
              frontendName
              FROM azure.service_networking.frontends_interfaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND trafficControllerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.fqdn') as "fqdn",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                trafficControllerName,
                frontendName
                FROM azure.service_networking.frontends_interfaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND trafficControllerName = 'replace-me';
    vw_security_policies_interfaces:
      id: azure.service_networking.vw_security_policies_interfaces
      name: vw_security_policies_interfaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.policyType') as "policy_type",
              JSON_EXTRACT(properties, '$.wafPolicy') as "waf_policy",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              trafficControllerName,
              securityPolicyName
              FROM azure.service_networking.security_policies_interfaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND trafficControllerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.policyType') as "policy_type",
                json_extract_path_text(properties, '$.wafPolicy') as "waf_policy",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                trafficControllerName,
                securityPolicyName
                FROM azure.service_networking.security_policies_interfaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND trafficControllerName = 'replace-me';
paths:
  /providers/Microsoft.ServiceNetworking/operations?api-version=2024-05-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceNetworking/trafficControllers?api-version=2024-05-01-preview:
    get:
      operationId: TrafficControllerInterface_ListBySubscription
      tags:
        - TrafficControllerInterface
      description: List TrafficController resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficControllerListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers?api-version=2024-05-01-preview:
    get:
      operationId: TrafficControllerInterface_ListByResourceGroup
      tags:
        - TrafficControllerInterface
      description: List TrafficController resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficControllerListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}?api-version=2024-05-01-preview:
    get:
      operationId: TrafficControllerInterface_Get
      tags:
        - TrafficControllerInterface
      description: Get a TrafficController
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficController'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: TrafficControllerInterface_CreateOrUpdate
      tags:
        - TrafficControllerInterface
      description: Create a TrafficController
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficController'
      responses:
        '200':
          description: Resource 'TrafficController' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficController'
        '201':
          description: Resource 'TrafficController' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficController'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: TrafficControllerInterface_Update
      tags:
        - TrafficControllerInterface
      description: Update a TrafficController
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrafficControllerUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficController'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: TrafficControllerInterface_Delete
      tags:
        - TrafficControllerInterface
      description: Delete a TrafficController
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/associations?api-version=2024-05-01-preview:
    get:
      operationId: AssociationsInterface_ListByTrafficController
      tags:
        - AssociationsInterface
      description: List Association resources by TrafficController
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/associations/{associationName}?api-version=2024-05-01-preview:
    get:
      operationId: AssociationsInterface_Get
      tags:
        - AssociationsInterface
      description: Get a Association
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: associationName
          in: path
          description: Name of Association
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: AssociationsInterface_CreateOrUpdate
      tags:
        - AssociationsInterface
      description: Create a Association
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: associationName
          in: path
          description: Name of Association
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Association'
      responses:
        '200':
          description: Resource 'Association' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
        '201':
          description: Resource 'Association' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: AssociationsInterface_Update
      tags:
        - AssociationsInterface
      description: Update a Association
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: associationName
          in: path
          description: Name of Association
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociationUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: AssociationsInterface_Delete
      tags:
        - AssociationsInterface
      description: Delete a Association
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: associationName
          in: path
          description: Name of Association
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/frontends?api-version=2024-05-01-preview:
    get:
      operationId: FrontendsInterface_ListByTrafficController
      tags:
        - FrontendsInterface
      description: List Frontend resources by TrafficController
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontendListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/frontends/{frontendName}?api-version=2024-05-01-preview:
    get:
      operationId: FrontendsInterface_Get
      tags:
        - FrontendsInterface
      description: Get a Frontend
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: frontendName
          in: path
          description: Frontends
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frontend'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: FrontendsInterface_CreateOrUpdate
      tags:
        - FrontendsInterface
      description: Create a Frontend
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: frontendName
          in: path
          description: Frontends
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frontend'
      responses:
        '200':
          description: Resource 'Frontend' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frontend'
        '201':
          description: Resource 'Frontend' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frontend'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: FrontendsInterface_Update
      tags:
        - FrontendsInterface
      description: Update a Frontend
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: frontendName
          in: path
          description: Frontends
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrontendUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Frontend'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: FrontendsInterface_Delete
      tags:
        - FrontendsInterface
      description: Delete a Frontend
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: frontendName
          in: path
          description: Frontends
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/securityPolicies?api-version=2024-05-01-preview:
    get:
      operationId: SecurityPoliciesInterface_ListByTrafficController
      tags:
        - SecurityPoliciesInterface
      description: List SecurityPolicy resources by TrafficController
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicyListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceNetworking/trafficControllers/{trafficControllerName}/securityPolicies/{securityPolicyName}?api-version=2024-05-01-preview:
    get:
      operationId: SecurityPoliciesInterface_Get
      tags:
        - SecurityPoliciesInterface
      description: Get a SecurityPolicy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: securityPolicyName
          in: path
          description: SecurityPolicy
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: SecurityPoliciesInterface_CreateOrUpdate
      tags:
        - SecurityPoliciesInterface
      description: Create a SecurityPolicy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: securityPolicyName
          in: path
          description: SecurityPolicy
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityPolicy'
      responses:
        '200':
          description: Resource 'SecurityPolicy' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
        '201':
          description: Resource 'SecurityPolicy' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: SecurityPoliciesInterface_Update
      tags:
        - SecurityPoliciesInterface
      description: Update a SecurityPolicy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: securityPolicyName
          in: path
          description: SecurityPolicy
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityPolicyUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: SecurityPoliciesInterface_Delete
      tags:
        - SecurityPoliciesInterface
      description: Delete a SecurityPolicy
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: trafficControllerName
          in: path
          description: traffic controller name for path
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
        - name: securityPolicyName
          in: path
          description: SecurityPolicy
          required: true
          schema:
            pattern: ^[A-Za-z0-9]([A-Za-z0-9-_.]{0,62}[A-Za-z0-9])?$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
