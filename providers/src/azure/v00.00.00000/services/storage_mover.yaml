openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Storage Mover (Microsoft.StorageMover)
  description: Storage Mover
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2022-09-22-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    AgentNameParameter:
      name: agentName
      in: path
      description: The name of the Agent resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    StorageMoverNameParameter:
      name: storageMoverName
      in: path
      description: The name of the Storage Mover resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    EndpointNameParameter:
      name: endpointName
      in: path
      description: The name of the Endpoint resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    JobDefinitionNameParameter:
      name: jobDefinitionName
      in: path
      description: The name of the Job Definition resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    JobRunNameParameter:
      name: jobRunName
      in: path
      description: The name of the Job Run resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ProjectNameParameter:
      name: projectName
      in: path
      description: The name of the Project resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    AgentProperties:
      type: object
      properties:
        description:
          type: string
          description: A description for the Agent.
        agentVersion:
          type: string
          description: The Agent version.
          readOnly: true
        arcResourceId:
          type: string
          description: The fully qualified resource ID of the Hybrid Compute resource for the Agent.
          x-ms-mutability:
            - read
            - create
        arcVmUuid:
          type: string
          description: The VM UUID of the Hybrid Compute resource for the Agent.
          x-ms-mutability:
            - read
            - create
        agentStatus:
          description: The Agent status.
          enum:
            - Registering
            - Offline
            - Online
            - Executing
            - RequiresAttention
            - Unregistering
          type: string
          x-ms-enum:
            name: AgentStatus
            modelAsString: true
          readOnly: true
        lastStatusUpdate:
          type: string
          format: date-time
          description: The last updated time of the Agent status.
          readOnly: true
        localIPAddress:
          type: string
          description: Local IP address reported by the Agent.
          readOnly: true
        memoryInMB:
          type: integer
          format: int64
          description: Available memory reported by the Agent, in MB.
          readOnly: true
        numberOfCores:
          type: integer
          format: int64
          description: Available compute cores reported by the Agent.
          readOnly: true
        uptimeInSeconds:
          type: integer
          format: int64
          description: Uptime of the Agent in seconds.
          readOnly: true
        errorDetails:
          type: object
          properties:
            code:
              type: string
              description: Error code reported by Agent
            message:
              type: string
              description: Expanded description of reported error code
          readOnly: true
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
      required:
        - arcResourceId
        - arcVmUuid
    Agent:
      description: The Agent resource.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AgentProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    AgentUpdateProperties:
      type: object
      properties:
        description:
          type: string
          description: A description for the Agent.
    AgentUpdateParameters:
      description: The Agent resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AgentUpdateProperties'
      type: object
    AgentList:
      description: List of Agents.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    StorageMoverProperties:
      description: The resource specific properties for the Storage Mover resource.
      type: object
      properties:
        description:
          type: string
          description: A description for the Storage Mover.
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
    StorageMover:
      description: The Storage Mover resource, which is a container for a group of Agents, Projects, and Endpoints.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageMoverProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StorageMoverUpdateProperties:
      description: The resource specific properties for the Storage Mover resource.
      type: object
      properties:
        description:
          type: string
          description: A description for the Storage Mover.
    StorageMoverUpdateParameters:
      description: The Storage Mover resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageMoverUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    StorageMoverList:
      description: List of Storage Movers.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StorageMover'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    EndpointBaseProperties:
      description: The resource specific properties for the Storage Mover resource.
      type: object
      discriminator:
        propertyName: endpointType
      properties:
        endpointType:
          description: The Endpoint resource type.
          enum:
            - AzureStorageBlobContainer
            - NfsMount
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
      required:
        - endpointType
    Endpoint:
      description: The Endpoint resource, which contains information about file sources and targets.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/EndpointBaseProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    EndpointBaseUpdateProperties:
      description: The Endpoint resource, which contains information about file sources and targets.
      type: object
      properties:
        description:
          type: string
          description: A description for the Endpoint.
    EndpointBaseUpdateParameters:
      description: The Endpoint resource.
      properties:
        properties:
          $ref: '#/components/schemas/EndpointBaseUpdateProperties'
      type: object
    EndpointList:
      description: List of Endpoints.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    AzureStorageBlobContainerEndpointProperties:
      x-ms-discriminator-value: AzureStorageBlobContainer
      required:
        - storageAccountResourceId
        - blobContainerName
      properties:
        storageAccountResourceId:
          description: The Azure Resource ID of the storage account that is the target destination.
          type: string
        blobContainerName:
          description: The name of the Storage blob container that is the target destination.
          type: string
          x-ms-mutability:
            - read
            - create
        endpointType:
          description: The Endpoint resource type.
          enum:
            - AzureStorageBlobContainer
            - NfsMount
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
      type: object
    AzureStorageBlobContainerEndpointUpdateProperties:
      properties:
        description:
          type: string
          description: A description for the Endpoint.
      type: object
    NfsMountEndpointProperties:
      x-ms-discriminator-value: NfsMount
      required:
        - host
        - export
      properties:
        host:
          description: The host name or IP address of the server exporting the file system.
          type: string
          x-ms-mutability:
            - read
            - create
        nfsVersion:
          description: The NFS protocol version.
          enum:
            - NFSauto
            - NFSv3
            - NFSv4
          type: string
          x-ms-enum:
            name: NfsVersion
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        export:
          description: The directory being exported from the server.
          type: string
          x-ms-mutability:
            - read
            - create
        endpointType:
          description: The Endpoint resource type.
          enum:
            - AzureStorageBlobContainer
            - NfsMount
          type: string
          x-ms-enum:
            name: EndpointType
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
      type: object
    NfsMountEndpointUpdateProperties:
      properties:
        description:
          type: string
          description: A description for the Endpoint.
      type: object
    JobDefinitionProperties:
      description: Job definition properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Job Definition.
        copyMode:
          type: string
          description: Strategy to use for copy.
          x-ms-enum:
            name: CopyMode
            modelAsString: true
          enum:
            - Additive
            - Mirror
        sourceName:
          type: string
          description: The name of the source Endpoint.
          x-ms-mutability:
            - read
            - create
        sourceResourceId:
          type: string
          description: Fully qualified resource ID of the source Endpoint.
          readOnly: true
        sourceSubpath:
          type: string
          description: The subpath to use when reading from the source Endpoint.
          x-ms-mutability:
            - read
            - create
        targetName:
          type: string
          description: The name of the target Endpoint.
          x-ms-mutability:
            - read
            - create
        targetResourceId:
          type: string
          description: Fully qualified resource ID of the target Endpoint.
          readOnly: true
        targetSubpath:
          type: string
          description: The subpath to use when writing to the target Endpoint.
          x-ms-mutability:
            - read
            - create
        latestJobRunName:
          type: string
          description: The name of the Job Run in a non-terminal state, if exists.
          readOnly: true
        latestJobRunResourceId:
          type: string
          description: The fully qualified resource ID of the Job Run in a non-terminal state, if exists.
          readOnly: true
        latestJobRunStatus:
          enum:
            - Queued
            - Started
            - Running
            - CancelRequested
            - Canceling
            - Canceled
            - Failed
            - Succeeded
          type: string
          x-ms-enum:
            name: JobRunStatus
            modelAsString: true
          description: The current status of the Job Run in a non-terminal state, if exists.
          readOnly: true
        agentName:
          type: string
          description: Name of the Agent to assign for new Job Runs of this Job Definition.
        agentResourceId:
          type: string
          description: Fully qualified resource id of the Agent to assign for new Job Runs of this Job Definition.
          readOnly: true
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
      required:
        - copyMode
        - sourceName
        - targetName
    JobDefinition:
      description: The Job Definition resource.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JobDefinitionProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    JobDefinitionUpdateProperties:
      description: Job definition properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Job Definition.
        copyMode:
          type: string
          description: Strategy to use for copy.
          x-ms-enum:
            name: CopyMode
            modelAsString: true
          enum:
            - Additive
            - Mirror
        agentName:
          type: string
          description: Name of the Agent to assign for new Job Runs of this Job Definition.
    JobDefinitionUpdateParameters:
      description: The Job Definition resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JobDefinitionUpdateProperties'
      type: object
    JobDefinitionList:
      description: List of Job Definitions.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobDefinition'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    JobRunError:
      type: object
      description: Error type
      properties:
        code:
          type: string
          description: Error code of the given entry.
        message:
          type: string
          description: Error message of the given entry.
        target:
          type: string
          description: Target of the given error entry.
    JobRunProperties:
      description: Job run properties.
      type: object
      properties:
        status:
          readOnly: true
          enum:
            - Queued
            - Started
            - Running
            - CancelRequested
            - Canceling
            - Canceled
            - Failed
            - Succeeded
          type: string
          x-ms-enum:
            name: JobRunStatus
            modelAsString: true
          description: The state of the job execution.
        scanStatus:
          readOnly: true
          enum:
            - NotStarted
            - Scanning
            - Completed
          type: string
          x-ms-enum:
            name: JobRunScanStatus
            modelAsString: true
          description: The status of Agent's scanning of source.
        agentName:
          readOnly: true
          type: string
          description: Name of the Agent assigned to this run.
        agentResourceId:
          readOnly: true
          type: string
          description: Fully qualified resource id of the Agent assigned to this run.
        executionStartTime:
          readOnly: true
          type: string
          format: date-time
          description: Start time of the run. Null if no Agent reported that the job has started.
        executionEndTime:
          readOnly: true
          type: string
          format: date-time
          description: End time of the run. Null if Agent has not reported that the job has ended.
        lastStatusUpdate:
          type: string
          format: date-time
          description: The last updated time of the Job Run.
          readOnly: true
        itemsScanned:
          type: integer
          format: int64
          description: Number of items scanned so far in source.
          readOnly: true
        itemsExcluded:
          type: integer
          format: int64
          description: Number of items that will not be transferred, as they are excluded by user configuration.
          readOnly: true
        itemsUnsupported:
          type: integer
          format: int64
          description: Number of items that will not be transferred, as they are unsupported on target.
          readOnly: true
        itemsNoTransferNeeded:
          type: integer
          format: int64
          description: Number of items that will not be transferred, as they are already found on target (e.g. mirror mode).
          readOnly: true
        itemsFailed:
          type: integer
          format: int64
          description: Number of items that were attempted to transfer and failed.
          readOnly: true
        itemsTransferred:
          type: integer
          format: int64
          description: Number of items successfully transferred to target.
          readOnly: true
        bytesScanned:
          type: integer
          format: int64
          description: Bytes of data scanned so far in source.
          readOnly: true
        bytesExcluded:
          type: integer
          format: int64
          description: Bytes of data that will not be transferred, as they are excluded by user configuration.
          readOnly: true
        bytesUnsupported:
          type: integer
          format: int64
          description: Bytes of data that will not be transferred, as they are unsupported on target.
          readOnly: true
        bytesNoTransferNeeded:
          type: integer
          format: int64
          description: Bytes of data that will not be transferred, as they are already found on target (e.g. mirror mode).
          readOnly: true
        bytesFailed:
          type: integer
          format: int64
          description: Bytes of data that were attempted to transfer and failed.
          readOnly: true
        bytesTransferred:
          type: integer
          format: int64
          description: Bytes of data successfully transferred to target.
          readOnly: true
        sourceName:
          type: string
          description: Name of source Endpoint resource. This resource may no longer exist.
          readOnly: true
        sourceResourceId:
          type: string
          description: Fully qualified resource id of source Endpoint. This id may no longer exist.
          readOnly: true
        sourceProperties:
          type: object
          description: Copy of source Endpoint resource's properties at time of Job Run creation.
          readOnly: true
        targetName:
          type: string
          description: Name of target Endpoint resource. This resource may no longer exist.
          readOnly: true
        targetResourceId:
          type: string
          description: Fully qualified resource id of of Endpoint. This id may no longer exist.
          readOnly: true
        targetProperties:
          type: object
          description: Copy of Endpoint resource's properties at time of Job Run creation.
          readOnly: true
        jobDefinitionProperties:
          type: object
          description: Copy of parent Job Definition's properties at time of Job Run creation.
          readOnly: true
        error:
          readOnly: true
          $ref: '#/components/schemas/JobRunError'
          description: Error details.
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
    JobRun:
      description: The Job Run resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JobRunProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    JobRunResourceId:
      description: Response that identifies a Job Run.
      type: object
      properties:
        jobRunResourceId:
          readOnly: true
          type: string
          description: Fully qualified resource id of the Job Run.
    JobRunList:
      description: List of Job Runs.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobRun'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    ProjectProperties:
      description: Project properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Project.
        provisioningState:
          description: The provisioning state of this resource.
          enum:
            - Succeeded
          type: string
          x-ms-enum:
            name: ProvisioningState
            modelAsString: true
          readOnly: true
    Project:
      description: The Project resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    ProjectUpdateProperties:
      description: Project properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Project.
    ProjectUpdateParameters:
      description: The Project resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectUpdateProperties'
      type: object
    ProjectList:
      description: List of Project resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
  x-stackQL-resources:
    operations:
      id: azure.storage_mover.operations
      name: operations
      title: Operations
      methods:
        Operations_List:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StorageMover~1operations~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'
        insert: []
        update: []
        delete: []
    storage_mover:
      id: azure.storage_mover.storage_mover
      name: storage_mover
      title: Storage_mover
      methods:
        StorageMovers_ListBySubscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageMover~1storageMovers~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        StorageMovers_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        StorageMovers_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        StorageMovers_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1?api-version=2022-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        StorageMovers_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1?api-version=2022-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        StorageMovers_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1?api-version=2022-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_mover/methods/StorageMovers_Get'
          - $ref: '#/components/x-stackQL-resources/storage_mover/methods/StorageMovers_List'
          - $ref: '#/components/x-stackQL-resources/storage_mover/methods/StorageMovers_ListBySubscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_mover/methods/StorageMovers_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_mover/methods/StorageMovers_Delete'
    agents:
      id: azure.storage_mover.agents
      name: agents
      title: Agents
      methods:
        Agents_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Agents_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Agents_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}~1?api-version=2022-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Agents_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}~1?api-version=2022-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Agents_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}~1?api-version=2022-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/agents/methods/Agents_Get'
          - $ref: '#/components/x-stackQL-resources/agents/methods/Agents_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/agents/methods/Agents_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/agents/methods/Agents_Delete'
    endpoints:
      id: azure.storage_mover.endpoints
      name: endpoints
      title: Endpoints
      methods:
        Endpoints_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Endpoints_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Endpoints_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}~1?api-version=2022-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Endpoints_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}~1?api-version=2022-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Endpoints_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}~1?api-version=2022-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/Endpoints_Get'
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/Endpoints_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/Endpoints_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/Endpoints_Delete'
    projects:
      id: azure.storage_mover.projects
      name: projects
      title: Projects
      methods:
        Projects_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        Projects_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Projects_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1?api-version=2022-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Projects_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1?api-version=2022-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        Projects_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1?api-version=2022-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_Get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/Projects_Delete'
    job_definitions:
      id: azure.storage_mover.job_definitions
      name: job_definitions
      title: Job_definitions
      methods:
        JobDefinitions_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        JobDefinitions_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobDefinitions_CreateOrUpdate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2022-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobDefinitions_Update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2022-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobDefinitions_Delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1?api-version=2022-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobDefinitions_StartJob:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1startJob~1?api-version=2022-07-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        JobDefinitions_StopJob:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1stopJob~1?api-version=2022-07-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_Get'
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_List'
        insert:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_CreateOrUpdate'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/JobDefinitions_Delete'
    job_runs:
      id: azure.storage_mover.job_runs
      name: job_runs
      title: Job_runs
      methods:
        JobRuns_List:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1jobRuns~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        JobRuns_Get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1jobRuns~1{jobRunName}~1?api-version=2022-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/JobRuns_Get'
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/JobRuns_List'
        insert: []
        update: []
        delete: []
paths:
  /providers/Microsoft.StorageMover/operations/?api-version=2022-07-01-preview:
    get:
      tags:
        - Operations
      summary: Lists all the supported operations for the Azure Storage Mover REST API.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: List of supported operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: operations
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageMover/storageMovers/?api-version=2022-07-01-preview:
    get:
      tags:
        - StorageMovers
      operationId: StorageMovers_ListBySubscription
      description: Lists all Storage Movers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Storage Movers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMoverList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ''
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/?api-version=2022-07-01-preview:
    get:
      tags:
        - StorageMovers
      operationId: StorageMovers_List
      description: Lists all Storage Movers in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The list of Storage Movers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMoverList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: ''
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/?api-version=2022-07-01-preview:
    get:
      tags:
        - StorageMovers
      operationId: StorageMovers_Get
      description: Gets a Storage Mover resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The Storage Mover resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMover'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: ''
      x-stackQL-verb: select
    put:
      tags:
        - StorageMovers
      operationId: StorageMovers_CreateOrUpdate
      description: Creates or updates a top-level Storage Mover resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: storageMover
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageMover'
      responses:
        '200':
          description: Successfully PUT Storage Mover resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMover'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: ''
      x-stackQL-verb: insert
    patch:
      tags:
        - StorageMovers
      operationId: StorageMovers_Update
      description: Updates properties for a Storage Mover resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: storageMover
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageMoverUpdateParameters'
      responses:
        '200':
          description: The Storage Mover resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMover'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: ''
      x-stackQL-verb: exec
    delete:
      tags:
        - StorageMovers
      operationId: StorageMovers_Delete
      description: Deletes a Storage Mover resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: Successfully deleted Storage Mover.
        '202':
          description: Accepted. Storage Mover delete operation is ongoing.
        '204':
          description: NoContent -- Storage Mover does not exist in the subscription.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: ''
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/agents/?api-version=2022-07-01-preview:
    get:
      tags:
        - Agents
      operationId: Agents_List
      description: Lists all Agents in a Storage Mover.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The list of Agents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: agents
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/agents/{agentName}/?api-version=2022-07-01-preview:
    get:
      tags:
        - Agents
      operationId: Agents_Get
      description: Gets an Agent resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      responses:
        '200':
          description: The Agent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: agents
      x-stackQL-verb: select
    put:
      tags:
        - Agents
      operationId: Agents_CreateOrUpdate
      description: Creates or updates an Agent resource, which references a hybrid compute machine that can run jobs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: agent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
      responses:
        '200':
          description: Successfully PUT Agent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: agents
      x-stackQL-verb: insert
    patch:
      tags:
        - Agents
      operationId: Agents_Update
      description: Creates or updates an Agent resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: agent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentUpdateParameters'
      responses:
        '200':
          description: The Agent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: agents
      x-stackQL-verb: exec
    delete:
      tags:
        - Agents
      operationId: Agents_Delete
      description: Deletes an Agent resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      responses:
        '200':
          description: Successfully deleted Agent.
        '202':
          description: Accepted. Agent delete operation is ongoing.
        '204':
          description: NoContent -- Agent does not exist for this Storage Mover.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: agents
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/endpoints/?api-version=2022-07-01-preview:
    get:
      tags:
        - Endpoints
      operationId: Endpoints_List
      description: Lists all Endpoints in a Storage Mover.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The list of Endpoints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: endpoints
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/endpoints/{endpointName}/?api-version=2022-07-01-preview:
    get:
      tags:
        - Endpoints
      operationId: Endpoints_Get
      description: Gets an Endpoint resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      responses:
        '200':
          description: The Endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: endpoints
      x-stackQL-verb: select
    put:
      tags:
        - Endpoints
      operationId: Endpoints_CreateOrUpdate
      description: Creates or updates an Endpoint resource, which represents a data transfer source or destination.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '200':
          description: Successfully PUT Endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: endpoints
      x-stackQL-verb: insert
    patch:
      tags:
        - Endpoints
      operationId: Endpoints_Update
      description: Updates properties for an Endpoint resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointBaseUpdateParameters'
      responses:
        '200':
          description: The Endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: endpoints
      x-stackQL-verb: exec
    delete:
      tags:
        - Endpoints
      operationId: Endpoints_Delete
      description: Deletes an Endpoint resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      responses:
        '200':
          description: Successfully deleted Endpoint.
        '202':
          description: Accepted. Endpoint delete operation is ongoing.
        '204':
          description: NoContent -- Endpoint does not exist for this Storage Mover.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: endpoints
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/?api-version=2022-07-01-preview:
    get:
      tags:
        - Projects
      operationId: Projects_List
      description: Lists all Projects in a Storage Mover.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The list of Projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: projects
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/?api-version=2022-07-01-preview:
    get:
      tags:
        - Projects
      operationId: Projects_Get
      description: Gets a Project resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      responses:
        '200':
          description: The Project resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: projects
      x-stackQL-verb: select
    put:
      tags:
        - Projects
      operationId: Projects_CreateOrUpdate
      description: Creates or updates a Project resource, which is a logical grouping of related jobs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Successfully PUT Project resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: projects
      x-stackQL-verb: insert
    patch:
      tags:
        - Projects
      operationId: Projects_Update
      description: Updates properties for a Project resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateParameters'
      responses:
        '200':
          description: The Project resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: projects
      x-stackQL-verb: exec
    delete:
      tags:
        - Projects
      operationId: Projects_Delete
      description: Deletes a Project resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      responses:
        '200':
          description: Successfully deleted Project.
        '202':
          description: Accepted. Project delete operation is ongoing.
        '204':
          description: NoContent -- Project does not exist for this Storage Mover.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: projects
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/?api-version=2022-07-01-preview:
    get:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_List
      description: Lists all Job Definitions in a Project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      responses:
        '200':
          description: The list of Job Definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinitionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: job_definitions
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/?api-version=2022-07-01-preview:
    get:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_Get
      description: Gets a Job Definition resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: The Job Definition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: job_definitions
      x-stackQL-verb: select
    put:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_CreateOrUpdate
      description: Creates or updates a Job Definition resource, which contains configuration for a single unit of managed data transfer.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: jobDefinition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
      responses:
        '200':
          description: Successfully PUT Job Definition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: job_definitions
      x-stackQL-verb: insert
    patch:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_Update
      description: Updates properties for a Job Definition resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: jobDefinition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinitionUpdateParameters'
      responses:
        '200':
          description: The Job Definition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: job_definitions
      x-stackQL-verb: exec
    delete:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_Delete
      description: Deletes a Job Definition resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: Successfully deleted Job Definition.
        '202':
          description: Accepted. Job Definition delete operation is ongoing.
        '204':
          description: NoContent -- Job Definition does not exist for this Project.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      x-stackQL-resource: job_definitions
      x-stackQL-verb: delete
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/startJob/?api-version=2022-07-01-preview:
    post:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_StartJob
      description: Requests an Agent to start a new instance of this Job Definition, generating a new Job Run resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: Successfully requested job to start.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRunResourceId'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: job_definitions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/stopJob/?api-version=2022-07-01-preview:
    post:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_StopJob
      description: Requests the Agent of any active instance of this Job Definition to stop.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: Successfully requested running job to stop, if any.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRunResourceId'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: job_definitions
      x-stackQL-verb: exec
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/jobRuns/?api-version=2022-07-01-preview:
    get:
      tags:
        - JobRuns
      operationId: JobRuns_List
      description: Lists all Job Runs in a Job Definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: The list of Job Runs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRunList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-stackQL-resource: job_runs
      x-stackQL-verb: select
      x-stackQL-objectKey: $.value
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/jobRuns/{jobRunName}/?api-version=2022-07-01-preview:
    get:
      tags:
        - JobRuns
      operationId: JobRuns_Get
      description: Gets a Job Run resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
        - $ref: '#/components/parameters/JobRunNameParameter'
      responses:
        '200':
          description: The Job Run resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-stackQL-resource: job_runs
      x-stackQL-verb: select
