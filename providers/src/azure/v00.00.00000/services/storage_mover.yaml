openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Storage Mover
  description: Azure Storage Mover is a fully managed migration service that enables you to migrate your files and folders to Azure Storage while minimizing downtime for your workload. You can use Storage Mover for different migration scenarios such as lift-and-shift, and for cloud migrations that youll have to repeat occasionally. Azure Storage Mover also helps maintain oversight and manage the migration of all your globally distributed file shares from a single storage mover resource. The Storage Mover API allows you to create, list, update and delete your migration projects and jobs associated with them.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    AgentNameParameter:
      name: agentName
      in: path
      description: The name of the Agent resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    StorageMoverNameParameter:
      name: storageMoverName
      in: path
      description: The name of the Storage Mover resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    EndpointNameParameter:
      name: endpointName
      in: path
      description: The name of the Endpoint resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    JobDefinitionNameParameter:
      name: jobDefinitionName
      in: path
      description: The name of the Job Definition resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    JobRunNameParameter:
      name: jobRunName
      in: path
      description: The name of the Job Run resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ProjectNameParameter:
      name: projectName
      in: path
      description: The name of the Project resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    AgentProperties:
      type: object
      properties:
        description:
          type: string
          description: A description for the Agent.
        agentVersion:
          type: string
          description: The Agent version.
          readOnly: true
        arcResourceId:
          type: string
          description: The fully qualified resource ID of the Hybrid Compute resource for the Agent.
          x-ms-mutability:
            - read
            - create
        arcVmUuid:
          type: string
          description: The VM UUID of the Hybrid Compute resource for the Agent.
          x-ms-mutability:
            - read
            - create
        agentStatus:
          description: The Agent status.
          enum:
            - Registering
            - Offline
            - Online
            - Executing
            - RequiresAttention
            - Unregistering
          type: string
          x-ms-enum:
            name: AgentStatus
            modelAsString: true
          readOnly: true
        lastStatusUpdate:
          type: string
          format: date-time
          description: The last updated time of the Agent status.
          readOnly: true
        localIPAddress:
          type: string
          description: Local IP address reported by the Agent.
          readOnly: true
        memoryInMB:
          type: integer
          format: int64
          description: Available memory reported by the Agent, in MB.
          readOnly: true
        numberOfCores:
          type: integer
          format: int64
          description: Available compute cores reported by the Agent.
          readOnly: true
        uptimeInSeconds:
          type: integer
          format: int64
          description: Uptime of the Agent in seconds.
          readOnly: true
        timeZone:
          description: The agent's local time zone represented in Windows format.
          type: string
          readOnly: true
        uploadLimitSchedule:
          description: The WAN-link upload limit schedule that applies to any Job Run the agent executes. Data plane operations (migrating files) are affected. Control plane operations ensure seamless migration functionality and are not limited by this schedule. The schedule is interpreted with the agent's local time.
          $ref: '#/components/schemas/UploadLimitSchedule'
        errorDetails:
          type: object
          properties:
            code:
              type: string
              description: Error code reported by Agent
            message:
              type: string
              description: Expanded description of reported error code
          readOnly: true
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      required:
        - arcResourceId
        - arcVmUuid
    Agent:
      description: The Agent resource.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AgentProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    AgentUpdateProperties:
      type: object
      properties:
        description:
          type: string
          description: A description for the Agent.
        uploadLimitSchedule:
          description: The WAN-link upload limit schedule that applies to any Job Run the agent executes. Data plane operations (migrating files) are affected. Control plane operations ensure seamless migration functionality and are not limited by this schedule. The schedule is interpreted with the agent's local time.
          $ref: '#/components/schemas/UploadLimitSchedule'
    AgentUpdateParameters:
      description: The Agent resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AgentUpdateProperties'
      type: object
    AgentList:
      description: List of Agents.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    UploadLimitSchedule:
      description: The WAN-link upload limit schedule. Overlapping recurrences are not allowed.
      type: object
      properties:
        weeklyRecurrences:
          description: The set of weekly repeating recurrences of the WAN-link upload limit schedule.
          type: array
          items:
            $ref: '#/components/schemas/UploadLimitWeeklyRecurrence'
          x-ms-identifiers: []
    Recurrence:
      description: The schedule recurrence.
      type: object
      properties:
        startTime:
          description: The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
          $ref: '#/components/schemas/Time'
        endTime:
          description: The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
          $ref: '#/components/schemas/Time'
      required:
        - startTime
        - endTime
    WeeklyRecurrence:
      description: The weekly recurrence of the schedule.
      required:
        - days
      properties:
        days:
          description: The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
        startTime:
          description: The start time of the schedule recurrence. Full hour and 30-minute intervals are supported.
          $ref: '#/components/schemas/Time'
        endTime:
          description: The end time of the schedule recurrence. Full hour and 30-minute intervals are supported.
          $ref: '#/components/schemas/Time'
      type: object
    DayOfWeek:
      description: The day of week.
      enum:
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
        - Sunday
      type: string
      x-ms-enum:
        name: DayOfWeek
        modelAsString: false
    UploadLimit:
      description: The WAN-link upload limit.
      type: object
      properties:
        limitInMbps:
          description: The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
      required:
        - limitInMbps
    UploadLimitWeeklyRecurrence:
      description: The weekly recurrence of the WAN-link upload limit schedule. The start time must be earlier in the day than the end time. The recurrence must not span across multiple days.
      properties:
        days:
          description: The set of days of week for the schedule recurrence. A day must not be specified more than once in a recurrence.
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
        limitInMbps:
          description: The WAN-link upload bandwidth (maximum data transfer rate) in megabits per second. Value of 0 indicates no throughput is allowed and any running migration job is effectively paused for the duration of this recurrence. Only data plane operations are governed by this limit. Control plane operations ensure seamless functionality. The agent may exceed this limit with control messages, if necessary.
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
      type: object
    Time:
      description: The time of day.
      type: object
      properties:
        hour:
          description: The hour element of the time. Allowed values range from 0 (start of the selected day) to 24 (end of the selected day). Hour value 24 cannot be combined with any other minute value but 0.
          type: integer
          format: int32
          minimum: 0
          maximum: 24
        minute:
          description: The minute element of the time. Allowed values are 0 and 30. If not specified, its value defaults to 0.
          type: integer
          format: int32
          enum:
            - 0
            - 30
          default: 0
          x-ms-enum:
            name: Minute
            modelAsString: true
      required:
        - hour
    StorageMoverProperties:
      description: The resource specific properties for the Storage Mover resource.
      type: object
      properties:
        description:
          type: string
          description: A description for the Storage Mover.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    StorageMover:
      description: The Storage Mover resource, which is a container for a group of Agents, Projects, and Endpoints.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageMoverProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    StorageMoverUpdateProperties:
      description: The resource specific properties for the Storage Mover resource.
      type: object
      properties:
        description:
          type: string
          description: A description for the Storage Mover.
    StorageMoverUpdateParameters:
      description: The Storage Mover resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageMoverUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    StorageMoverList:
      description: List of Storage Movers.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StorageMover'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    EndpointBaseProperties:
      description: The resource specific properties for the Storage Mover resource.
      type: object
      discriminator:
        propertyName: endpointType
      properties:
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      required:
        - endpointType
    Endpoint:
      description: The Endpoint resource, which contains information about file sources and targets.
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/EndpointBaseProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    EndpointBaseUpdateProperties:
      description: The Endpoint resource, which contains information about file sources and targets.
      type: object
      discriminator:
        propertyName: endpointType
      properties:
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
      required:
        - endpointType
    EndpointBaseUpdateParameters:
      description: The Endpoint resource.
      properties:
        properties:
          $ref: '#/components/schemas/EndpointBaseUpdateProperties'
      type: object
    EndpointList:
      description: List of Endpoints.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    AzureStorageBlobContainerEndpointProperties:
      description: The properties of Azure Storage blob container endpoint.
      x-ms-discriminator-value: AzureStorageBlobContainer
      required:
        - storageAccountResourceId
        - blobContainerName
      properties:
        storageAccountResourceId:
          description: The Azure Resource ID of the storage account that is the target destination.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
          x-ms-mutability:
            - read
            - create
        blobContainerName:
          description: The name of the Storage blob container that is the target destination.
          type: string
          x-ms-mutability:
            - read
            - create
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    AzureStorageBlobContainerEndpointUpdateProperties:
      x-ms-discriminator-value: AzureStorageBlobContainer
      properties:
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
      type: object
    NfsMountEndpointProperties:
      description: The properties of NFS share endpoint.
      x-ms-discriminator-value: NfsMount
      required:
        - host
        - export
      properties:
        host:
          description: The host name or IP address of the server exporting the file system.
          type: string
          x-ms-mutability:
            - read
            - create
        nfsVersion:
          description: The NFS protocol version.
          enum:
            - NFSauto
            - NFSv3
            - NFSv4
          type: string
          x-ms-enum:
            name: NfsVersion
            modelAsString: true
          x-ms-mutability:
            - read
            - create
        export:
          description: The directory being exported from the server.
          type: string
          x-ms-mutability:
            - read
            - create
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    NfsMountEndpointUpdateProperties:
      x-ms-discriminator-value: NfsMount
      properties:
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
      type: object
    AzureStorageSmbFileShareEndpointProperties:
      description: The properties of Azure Storage SMB file share endpoint.
      x-ms-discriminator-value: AzureStorageSmbFileShare
      required:
        - storageAccountResourceId
        - fileShareName
      properties:
        storageAccountResourceId:
          description: The Azure Resource ID of the storage account.
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Storage/storageAccounts
          x-ms-mutability:
            - read
            - create
        fileShareName:
          description: The name of the Azure Storage file share.
          type: string
          x-ms-mutability:
            - read
            - create
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    AzureStorageSmbFileShareEndpointUpdateProperties:
      x-ms-discriminator-value: AzureStorageSmbFileShare
      description: The properties of Azure Storage SMB file share endpoint to update.
      properties:
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
      type: object
    SmbMountEndpointProperties:
      description: The properties of SMB share endpoint.
      x-ms-discriminator-value: SmbMount
      required:
        - host
        - shareName
      properties:
        host:
          description: The host name or IP address of the server exporting the file system.
          type: string
          x-ms-mutability:
            - read
            - create
        shareName:
          description: The name of the SMB share being exported from the server.
          type: string
          x-ms-mutability:
            - read
            - create
        credentials:
          description: The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
          $ref: '#/components/schemas/AzureKeyVaultSmbCredentials'
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      type: object
    SmbMountEndpointUpdateProperties:
      x-ms-discriminator-value: SmbMount
      description: The properties of SMB share endpoint to update.
      properties:
        credentials:
          description: The Azure Key Vault secret URIs which store the required credentials to access the SMB share.
          $ref: '#/components/schemas/AzureKeyVaultSmbCredentials'
        endpointType:
          description: The Endpoint resource type.
          $ref: '#/components/schemas/EndpointType'
          x-ms-mutability:
            - read
            - create
        description:
          type: string
          description: A description for the Endpoint.
      type: object
    EndpointType:
      description: The Endpoint resource type.
      enum:
        - AzureStorageBlobContainer
        - NfsMount
        - AzureStorageSmbFileShare
        - SmbMount
      type: string
      x-ms-enum:
        name: EndpointType
        modelAsString: true
    CredentialType:
      description: The Credentials type.
      enum:
        - AzureKeyVaultSmb
      type: string
      x-ms-enum:
        name: CredentialType
        modelAsString: true
    Credentials:
      description: The Credentials.
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          description: The Credentials type.
          $ref: '#/components/schemas/CredentialType'
          x-ms-mutability:
            - read
            - create
      required:
        - type
    AzureKeyVaultSmbCredentials:
      description: The Azure Key Vault secret URIs which store the credentials.
      x-ms-discriminator-value: AzureKeyVaultSmb
      properties:
        usernameUri:
          description: The Azure Key Vault secret URI which stores the username. Use empty string to clean-up existing value.
          type: string
        passwordUri:
          description: The Azure Key Vault secret URI which stores the password. Use empty string to clean-up existing value.
          type: string
        type:
          description: The Credentials type.
          $ref: '#/components/schemas/CredentialType'
          x-ms-mutability:
            - read
            - create
      type: object
    JobDefinitionProperties:
      description: Job definition properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Job Definition.
        copyMode:
          type: string
          description: Strategy to use for copy.
          x-ms-enum:
            name: CopyMode
            modelAsString: true
          enum:
            - Additive
            - Mirror
        sourceName:
          type: string
          description: The name of the source Endpoint.
          x-ms-mutability:
            - read
            - create
        sourceResourceId:
          type: string
          description: Fully qualified resource ID of the source Endpoint.
          readOnly: true
        sourceSubpath:
          type: string
          description: The subpath to use when reading from the source Endpoint.
          x-ms-mutability:
            - read
            - create
        targetName:
          type: string
          description: The name of the target Endpoint.
          x-ms-mutability:
            - read
            - create
        targetResourceId:
          type: string
          description: Fully qualified resource ID of the target Endpoint.
          readOnly: true
        targetSubpath:
          type: string
          description: The subpath to use when writing to the target Endpoint.
          x-ms-mutability:
            - read
            - create
        latestJobRunName:
          type: string
          description: The name of the Job Run in a non-terminal state, if exists.
          readOnly: true
        latestJobRunResourceId:
          type: string
          description: The fully qualified resource ID of the Job Run in a non-terminal state, if exists.
          readOnly: true
        latestJobRunStatus:
          enum:
            - Queued
            - Started
            - Running
            - CancelRequested
            - Canceling
            - Canceled
            - Failed
            - Succeeded
          type: string
          x-ms-enum:
            name: JobRunStatus
            modelAsString: true
          description: The current status of the Job Run in a non-terminal state, if exists.
          readOnly: true
        agentName:
          type: string
          description: Name of the Agent to assign for new Job Runs of this Job Definition.
        agentResourceId:
          type: string
          description: Fully qualified resource id of the Agent to assign for new Job Runs of this Job Definition.
          readOnly: true
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
      required:
        - copyMode
        - sourceName
        - targetName
    JobDefinition:
      description: The Job Definition resource.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JobDefinitionProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    JobDefinitionUpdateProperties:
      description: Job definition properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Job Definition.
        copyMode:
          type: string
          description: Strategy to use for copy.
          x-ms-enum:
            name: CopyMode
            modelAsString: true
          enum:
            - Additive
            - Mirror
        agentName:
          type: string
          description: Name of the Agent to assign for new Job Runs of this Job Definition.
    JobDefinitionUpdateParameters:
      description: The Job Definition resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JobDefinitionUpdateProperties'
      type: object
    JobDefinitionList:
      description: List of Job Definitions.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobDefinition'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    JobRunError:
      type: object
      description: Error type
      properties:
        code:
          type: string
          description: Error code of the given entry.
        message:
          type: string
          description: Error message of the given entry.
        target:
          type: string
          description: Target of the given error entry.
    JobRunProperties:
      description: Job run properties.
      type: object
      properties:
        status:
          readOnly: true
          enum:
            - Queued
            - Started
            - Running
            - CancelRequested
            - Canceling
            - Canceled
            - Failed
            - Succeeded
            - PausedByBandwidthManagement
          type: string
          x-ms-enum:
            name: JobRunStatus
            modelAsString: true
          description: The state of the job execution.
        scanStatus:
          readOnly: true
          enum:
            - NotStarted
            - Scanning
            - Completed
          type: string
          x-ms-enum:
            name: JobRunScanStatus
            modelAsString: true
          description: The status of Agent's scanning of source.
        agentName:
          readOnly: true
          type: string
          description: Name of the Agent assigned to this run.
        agentResourceId:
          readOnly: true
          type: string
          description: Fully qualified resource id of the Agent assigned to this run.
        executionStartTime:
          readOnly: true
          type: string
          format: date-time
          description: Start time of the run. Null if no Agent reported that the job has started.
        executionEndTime:
          readOnly: true
          type: string
          format: date-time
          description: End time of the run. Null if Agent has not reported that the job has ended.
        lastStatusUpdate:
          type: string
          format: date-time
          description: The last updated time of the Job Run.
          readOnly: true
        itemsScanned:
          type: integer
          format: int64
          description: Number of items scanned so far in source.
          readOnly: true
        itemsExcluded:
          type: integer
          format: int64
          description: Number of items that will not be transferred, as they are excluded by user configuration.
          readOnly: true
        itemsUnsupported:
          type: integer
          format: int64
          description: Number of items that will not be transferred, as they are unsupported on target.
          readOnly: true
        itemsNoTransferNeeded:
          type: integer
          format: int64
          description: Number of items that will not be transferred, as they are already found on target (e.g. mirror mode).
          readOnly: true
        itemsFailed:
          type: integer
          format: int64
          description: Number of items that were attempted to transfer and failed.
          readOnly: true
        itemsTransferred:
          type: integer
          format: int64
          description: Number of items successfully transferred to target.
          readOnly: true
        bytesScanned:
          type: integer
          format: int64
          description: Bytes of data scanned so far in source.
          readOnly: true
        bytesExcluded:
          type: integer
          format: int64
          description: Bytes of data that will not be transferred, as they are excluded by user configuration.
          readOnly: true
        bytesUnsupported:
          type: integer
          format: int64
          description: Bytes of data that will not be transferred, as they are unsupported on target.
          readOnly: true
        bytesNoTransferNeeded:
          type: integer
          format: int64
          description: Bytes of data that will not be transferred, as they are already found on target (e.g. mirror mode).
          readOnly: true
        bytesFailed:
          type: integer
          format: int64
          description: Bytes of data that were attempted to transfer and failed.
          readOnly: true
        bytesTransferred:
          type: integer
          format: int64
          description: Bytes of data successfully transferred to target.
          readOnly: true
        sourceName:
          type: string
          description: Name of source Endpoint resource. This resource may no longer exist.
          readOnly: true
        sourceResourceId:
          type: string
          description: Fully qualified resource id of source Endpoint. This id may no longer exist.
          readOnly: true
        sourceProperties:
          type: object
          description: Copy of source Endpoint resource's properties at time of Job Run creation.
          readOnly: true
        targetName:
          type: string
          description: Name of target Endpoint resource. This resource may no longer exist.
          readOnly: true
        targetResourceId:
          type: string
          description: Fully qualified resource id of of Endpoint. This id may no longer exist.
          readOnly: true
        targetProperties:
          type: object
          description: Copy of Endpoint resource's properties at time of Job Run creation.
          readOnly: true
        jobDefinitionProperties:
          type: object
          description: Copy of parent Job Definition's properties at time of Job Run creation.
          readOnly: true
        error:
          readOnly: true
          $ref: '#/components/schemas/JobRunError'
          description: Error details.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    JobRun:
      description: The Job Run resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/JobRunProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    JobRunResourceId:
      description: Response that identifies a Job Run.
      type: object
      properties:
        jobRunResourceId:
          readOnly: true
          type: string
          description: Fully qualified resource id of the Job Run.
    JobRunList:
      description: List of Job Runs.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/JobRun'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    ProjectProperties:
      description: Project properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Project.
        provisioningState:
          description: The provisioning state of this resource.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    Project:
      description: The Project resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectProperties'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Resource system metadata.
      type: object
    ProjectUpdateProperties:
      description: Project properties.
      type: object
      properties:
        description:
          type: string
          description: A description for the Project.
    ProjectUpdateParameters:
      description: The Project resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProjectUpdateProperties'
      type: object
    ProjectList:
      description: List of Project resources.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.
          readOnly: true
    ProvisioningState:
      description: The provisioning state of a resource.
      enum:
        - Succeeded
        - Canceled
        - Failed
        - Deleting
      type: string
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
      readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.storage_mover.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StorageMover~1operations?api-version=2024-07-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    storage_movers:
      id: azure.storage_mover.storage_movers
      name: storage_movers
      title: storage_movers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StorageMover~1storageMovers?api-version=2024-07-01/get'
            operationId: StorageMovers_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageMoverList
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers?api-version=2024-07-01/get'
            operationId: StorageMovers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageMoverList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}?api-version=2024-07-01/get'
            operationId: StorageMovers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageMover
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}?api-version=2024-07-01/put'
            operationId: StorageMovers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageMover
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}?api-version=2024-07-01/patch'
            operationId: StorageMovers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StorageMover
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}?api-version=2024-07-01/delete'
            operationId: StorageMovers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_movers/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_movers/methods/list'
          - $ref: '#/components/x-stackQL-resources/storage_movers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_movers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/storage_movers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_movers/methods/delete'
    agents:
      id: azure.storage_mover.agents
      name: agents
      title: agents
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents?api-version=2024-07-01/get'
            operationId: Agents_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AgentList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}?api-version=2024-07-01/get'
            operationId: Agents_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Agent
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}?api-version=2024-07-01/put'
            operationId: Agents_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Agent
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}?api-version=2024-07-01/patch'
            operationId: Agents_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Agent
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1agents~1{agentName}?api-version=2024-07-01/delete'
            operationId: Agents_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/agents/methods/get'
          - $ref: '#/components/x-stackQL-resources/agents/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/agents/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/agents/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/agents/methods/delete'
    endpoints:
      id: azure.storage_mover.endpoints
      name: endpoints
      title: endpoints
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints?api-version=2024-07-01/get'
            operationId: Endpoints_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EndpointList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}?api-version=2024-07-01/get'
            operationId: Endpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}?api-version=2024-07-01/put'
            operationId: Endpoints_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}?api-version=2024-07-01/patch'
            operationId: Endpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1endpoints~1{endpointName}?api-version=2024-07-01/delete'
            operationId: Endpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete'
    projects:
      id: azure.storage_mover.projects
      name: projects
      title: projects
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects?api-version=2024-07-01/get'
            operationId: Projects_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProjectList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}?api-version=2024-07-01/get'
            operationId: Projects_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Project
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}?api-version=2024-07-01/put'
            operationId: Projects_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Project
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}?api-version=2024-07-01/patch'
            operationId: Projects_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Project
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}?api-version=2024-07-01/delete'
            operationId: Projects_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projects/methods/get'
          - $ref: '#/components/x-stackQL-resources/projects/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/projects/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete'
    job_definitions:
      id: azure.storage_mover.job_definitions
      name: job_definitions
      title: job_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions?api-version=2024-07-01/get'
            operationId: JobDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobDefinitionList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}?api-version=2024-07-01/get'
            operationId: JobDefinitions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobDefinition
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}?api-version=2024-07-01/put'
            operationId: JobDefinitions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobDefinition
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}?api-version=2024-07-01/patch'
            operationId: JobDefinitions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobDefinition
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}?api-version=2024-07-01/delete'
            operationId: JobDefinitions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1startJob?api-version=2024-07-01/post'
            operationId: JobDefinitions_StartJob
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobRunResourceId
        stop_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1stopJob?api-version=2024-07-01/post'
            operationId: JobDefinitions_StopJob
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobRunResourceId
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/job_definitions/methods/delete'
    job_runs:
      id: azure.storage_mover.job_runs
      name: job_runs
      title: job_runs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1jobRuns?api-version=2024-07-01/get'
            operationId: JobRuns_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobRunList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StorageMover~1storageMovers~1{storageMoverName}~1projects~1{projectName}~1jobDefinitions~1{jobDefinitionName}~1jobRuns~1{jobRunName}?api-version=2024-07-01/get'
            operationId: JobRuns_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: JobRun
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/get'
          - $ref: '#/components/x-stackQL-resources/job_runs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_storage_movers:
      id: azure.storage_mover.vw_storage_movers
      name: vw_storage_movers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              storageMoverName
              FROM azure.storage_mover.storage_movers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                storageMoverName
                FROM azure.storage_mover.storage_movers
                WHERE subscriptionId = 'replace-me';
    vw_agents:
      id: azure.storage_mover.vw_agents
      name: vw_agents
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.agentVersion') as "agent_version",
              JSON_EXTRACT(properties, '$.arcResourceId') as "arc_resource_id",
              JSON_EXTRACT(properties, '$.arcVmUuid') as "arc_vm_uuid",
              JSON_EXTRACT(properties, '$.agentStatus') as "agent_status",
              JSON_EXTRACT(properties, '$.lastStatusUpdate') as "last_status_update",
              JSON_EXTRACT(properties, '$.localIPAddress') as "local_ip_address",
              JSON_EXTRACT(properties, '$.memoryInMB') as "memory_in_mb",
              JSON_EXTRACT(properties, '$.numberOfCores') as "number_of_cores",
              JSON_EXTRACT(properties, '$.uptimeInSeconds') as "uptime_in_seconds",
              JSON_EXTRACT(properties, '$.timeZone') as "time_zone",
              JSON_EXTRACT(properties, '$.uploadLimitSchedule') as "upload_limit_schedule",
              JSON_EXTRACT(properties, '$.errorDetails') as "error_details",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              storageMoverName,
              agentName
              FROM azure.storage_mover.agents
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.agentVersion') as "agent_version",
                json_extract_path_text(properties, '$.arcResourceId') as "arc_resource_id",
                json_extract_path_text(properties, '$.arcVmUuid') as "arc_vm_uuid",
                json_extract_path_text(properties, '$.agentStatus') as "agent_status",
                json_extract_path_text(properties, '$.lastStatusUpdate') as "last_status_update",
                json_extract_path_text(properties, '$.localIPAddress') as "local_ip_address",
                json_extract_path_text(properties, '$.memoryInMB') as "memory_in_mb",
                json_extract_path_text(properties, '$.numberOfCores') as "number_of_cores",
                json_extract_path_text(properties, '$.uptimeInSeconds') as "uptime_in_seconds",
                json_extract_path_text(properties, '$.timeZone') as "time_zone",
                json_extract_path_text(properties, '$.uploadLimitSchedule') as "upload_limit_schedule",
                json_extract_path_text(properties, '$.errorDetails') as "error_details",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                storageMoverName,
                agentName
                FROM azure.storage_mover.agents
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me';
    vw_endpoints:
      id: azure.storage_mover.vw_endpoints
      name: vw_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.endpointType') as "endpoint_type",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              storageMoverName,
              endpointName
              FROM azure.storage_mover.endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.endpointType') as "endpoint_type",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                storageMoverName,
                endpointName
                FROM azure.storage_mover.endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me';
    vw_projects:
      id: azure.storage_mover.vw_projects
      name: vw_projects
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              storageMoverName,
              projectName
              FROM azure.storage_mover.projects
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                storageMoverName,
                projectName
                FROM azure.storage_mover.projects
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me';
    vw_job_definitions:
      id: azure.storage_mover.vw_job_definitions
      name: vw_job_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.copyMode') as "copy_mode",
              JSON_EXTRACT(properties, '$.sourceName') as "source_name",
              JSON_EXTRACT(properties, '$.sourceResourceId') as "source_resource_id",
              JSON_EXTRACT(properties, '$.sourceSubpath') as "source_subpath",
              JSON_EXTRACT(properties, '$.targetName') as "target_name",
              JSON_EXTRACT(properties, '$.targetResourceId') as "target_resource_id",
              JSON_EXTRACT(properties, '$.targetSubpath') as "target_subpath",
              JSON_EXTRACT(properties, '$.latestJobRunName') as "latest_job_run_name",
              JSON_EXTRACT(properties, '$.latestJobRunResourceId') as "latest_job_run_resource_id",
              JSON_EXTRACT(properties, '$.latestJobRunStatus') as "latest_job_run_status",
              JSON_EXTRACT(properties, '$.agentName') as "agent_name",
              JSON_EXTRACT(properties, '$.agentResourceId') as "agent_resource_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              storageMoverName,
              projectName,
              jobDefinitionName
              FROM azure.storage_mover.job_definitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me' AND projectName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.copyMode') as "copy_mode",
                json_extract_path_text(properties, '$.sourceName') as "source_name",
                json_extract_path_text(properties, '$.sourceResourceId') as "source_resource_id",
                json_extract_path_text(properties, '$.sourceSubpath') as "source_subpath",
                json_extract_path_text(properties, '$.targetName') as "target_name",
                json_extract_path_text(properties, '$.targetResourceId') as "target_resource_id",
                json_extract_path_text(properties, '$.targetSubpath') as "target_subpath",
                json_extract_path_text(properties, '$.latestJobRunName') as "latest_job_run_name",
                json_extract_path_text(properties, '$.latestJobRunResourceId') as "latest_job_run_resource_id",
                json_extract_path_text(properties, '$.latestJobRunStatus') as "latest_job_run_status",
                json_extract_path_text(properties, '$.agentName') as "agent_name",
                json_extract_path_text(properties, '$.agentResourceId') as "agent_resource_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                storageMoverName,
                projectName,
                jobDefinitionName
                FROM azure.storage_mover.job_definitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me' AND projectName = 'replace-me';
    vw_job_runs:
      id: azure.storage_mover.vw_job_runs
      name: vw_job_runs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              systemData as system_data,
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.scanStatus') as "scan_status",
              JSON_EXTRACT(properties, '$.agentName') as "agent_name",
              JSON_EXTRACT(properties, '$.agentResourceId') as "agent_resource_id",
              JSON_EXTRACT(properties, '$.executionStartTime') as "execution_start_time",
              JSON_EXTRACT(properties, '$.executionEndTime') as "execution_end_time",
              JSON_EXTRACT(properties, '$.lastStatusUpdate') as "last_status_update",
              JSON_EXTRACT(properties, '$.itemsScanned') as "items_scanned",
              JSON_EXTRACT(properties, '$.itemsExcluded') as "items_excluded",
              JSON_EXTRACT(properties, '$.itemsUnsupported') as "items_unsupported",
              JSON_EXTRACT(properties, '$.itemsNoTransferNeeded') as "items_no_transfer_needed",
              JSON_EXTRACT(properties, '$.itemsFailed') as "items_failed",
              JSON_EXTRACT(properties, '$.itemsTransferred') as "items_transferred",
              JSON_EXTRACT(properties, '$.bytesScanned') as "bytes_scanned",
              JSON_EXTRACT(properties, '$.bytesExcluded') as "bytes_excluded",
              JSON_EXTRACT(properties, '$.bytesUnsupported') as "bytes_unsupported",
              JSON_EXTRACT(properties, '$.bytesNoTransferNeeded') as "bytes_no_transfer_needed",
              JSON_EXTRACT(properties, '$.bytesFailed') as "bytes_failed",
              JSON_EXTRACT(properties, '$.bytesTransferred') as "bytes_transferred",
              JSON_EXTRACT(properties, '$.sourceName') as "source_name",
              JSON_EXTRACT(properties, '$.sourceResourceId') as "source_resource_id",
              JSON_EXTRACT(properties, '$.sourceProperties') as "source_properties",
              JSON_EXTRACT(properties, '$.targetName') as "target_name",
              JSON_EXTRACT(properties, '$.targetResourceId') as "target_resource_id",
              JSON_EXTRACT(properties, '$.targetProperties') as "target_properties",
              JSON_EXTRACT(properties, '$.jobDefinitionProperties') as "job_definition_properties",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              storageMoverName,
              projectName,
              jobDefinitionName,
              jobRunName
              FROM azure.storage_mover.job_runs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me' AND projectName = 'replace-me' AND jobDefinitionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                systemData as system_data,
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.scanStatus') as "scan_status",
                json_extract_path_text(properties, '$.agentName') as "agent_name",
                json_extract_path_text(properties, '$.agentResourceId') as "agent_resource_id",
                json_extract_path_text(properties, '$.executionStartTime') as "execution_start_time",
                json_extract_path_text(properties, '$.executionEndTime') as "execution_end_time",
                json_extract_path_text(properties, '$.lastStatusUpdate') as "last_status_update",
                json_extract_path_text(properties, '$.itemsScanned') as "items_scanned",
                json_extract_path_text(properties, '$.itemsExcluded') as "items_excluded",
                json_extract_path_text(properties, '$.itemsUnsupported') as "items_unsupported",
                json_extract_path_text(properties, '$.itemsNoTransferNeeded') as "items_no_transfer_needed",
                json_extract_path_text(properties, '$.itemsFailed') as "items_failed",
                json_extract_path_text(properties, '$.itemsTransferred') as "items_transferred",
                json_extract_path_text(properties, '$.bytesScanned') as "bytes_scanned",
                json_extract_path_text(properties, '$.bytesExcluded') as "bytes_excluded",
                json_extract_path_text(properties, '$.bytesUnsupported') as "bytes_unsupported",
                json_extract_path_text(properties, '$.bytesNoTransferNeeded') as "bytes_no_transfer_needed",
                json_extract_path_text(properties, '$.bytesFailed') as "bytes_failed",
                json_extract_path_text(properties, '$.bytesTransferred') as "bytes_transferred",
                json_extract_path_text(properties, '$.sourceName') as "source_name",
                json_extract_path_text(properties, '$.sourceResourceId') as "source_resource_id",
                json_extract_path_text(properties, '$.sourceProperties') as "source_properties",
                json_extract_path_text(properties, '$.targetName') as "target_name",
                json_extract_path_text(properties, '$.targetResourceId') as "target_resource_id",
                json_extract_path_text(properties, '$.targetProperties') as "target_properties",
                json_extract_path_text(properties, '$.jobDefinitionProperties') as "job_definition_properties",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                storageMoverName,
                projectName,
                jobDefinitionName,
                jobRunName
                FROM azure.storage_mover.job_runs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND storageMoverName = 'replace-me' AND projectName = 'replace-me' AND jobDefinitionName = 'replace-me';
paths:
  /providers/Microsoft.StorageMover/operations?api-version=2024-07-01:
    get:
      tags:
        - Operations
      summary: Lists all the supported operations for the Azure Storage Mover REST API.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: List of supported operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StorageMover/storageMovers?api-version=2024-07-01:
    get:
      tags:
        - StorageMovers
      operationId: StorageMovers_ListBySubscription
      description: Lists all Storage Movers in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Storage Movers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMoverList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers?api-version=2024-07-01:
    get:
      tags:
        - StorageMovers
      operationId: StorageMovers_List
      description: Lists all Storage Movers in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The list of Storage Movers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMoverList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}?api-version=2024-07-01:
    get:
      tags:
        - StorageMovers
      operationId: StorageMovers_Get
      description: Gets a Storage Mover resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The Storage Mover resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMover'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - StorageMovers
      operationId: StorageMovers_CreateOrUpdate
      description: Creates or updates a top-level Storage Mover resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: storageMover
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageMover'
      responses:
        '200':
          description: Successfully PUT Storage Mover resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMover'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - StorageMovers
      operationId: StorageMovers_Update
      description: Updates properties for a Storage Mover resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: storageMover
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageMoverUpdateParameters'
      responses:
        '200':
          description: The Storage Mover resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageMover'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - StorageMovers
      operationId: StorageMovers_Delete
      description: Deletes a Storage Mover resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: Successfully deleted Storage Mover.
        '202':
          description: Accepted. Storage Mover delete operation is ongoing.
        '204':
          description: NoContent -- Storage Mover does not exist in the subscription.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/agents?api-version=2024-07-01:
    get:
      tags:
        - Agents
      operationId: Agents_List
      description: Lists all Agents in a Storage Mover.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The list of Agents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/agents/{agentName}?api-version=2024-07-01:
    get:
      tags:
        - Agents
      operationId: Agents_Get
      description: Gets an Agent resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      responses:
        '200':
          description: The Agent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Agents
      operationId: Agents_CreateOrUpdate
      description: Creates or updates an Agent resource, which references a hybrid compute machine that can run jobs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: agent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
      responses:
        '200':
          description: Successfully PUT Agent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Agents
      operationId: Agents_Update
      description: Creates or updates an Agent resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: agent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentUpdateParameters'
      responses:
        '200':
          description: The Agent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Agents
      operationId: Agents_Delete
      description: Deletes an Agent resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/AgentNameParameter'
      responses:
        '200':
          description: Successfully deleted Agent.
        '202':
          description: Accepted. Agent delete operation is ongoing.
        '204':
          description: NoContent -- Agent does not exist for this Storage Mover.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/endpoints?api-version=2024-07-01:
    get:
      tags:
        - Endpoints
      operationId: Endpoints_List
      description: Lists all Endpoints in a Storage Mover.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The list of Endpoints.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/endpoints/{endpointName}?api-version=2024-07-01:
    get:
      tags:
        - Endpoints
      operationId: Endpoints_Get
      description: Gets an Endpoint resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      responses:
        '200':
          description: The Endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Endpoints
      operationId: Endpoints_CreateOrUpdate
      description: Creates or updates an Endpoint resource, which represents a data transfer source or destination.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '200':
          description: Successfully PUT Endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Endpoints
      operationId: Endpoints_Update
      description: Updates properties for an Endpoint resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: endpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointBaseUpdateParameters'
      responses:
        '200':
          description: The Endpoint resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Endpoints
      operationId: Endpoints_Delete
      description: Deletes an Endpoint resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/EndpointNameParameter'
      responses:
        '200':
          description: Successfully deleted Endpoint.
        '202':
          description: Accepted. Endpoint delete operation is ongoing.
        '204':
          description: NoContent -- Endpoint does not exist for this Storage Mover.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects?api-version=2024-07-01:
    get:
      tags:
        - Projects
      operationId: Projects_List
      description: Lists all Projects in a Storage Mover.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
      responses:
        '200':
          description: The list of Projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}?api-version=2024-07-01:
    get:
      tags:
        - Projects
      operationId: Projects_Get
      description: Gets a Project resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      responses:
        '200':
          description: The Project resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Projects
      operationId: Projects_CreateOrUpdate
      description: Creates or updates a Project resource, which is a logical grouping of related jobs.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Successfully PUT Project resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Projects
      operationId: Projects_Update
      description: Updates properties for a Project resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: project
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdateParameters'
      responses:
        '200':
          description: The Project resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Projects
      operationId: Projects_Delete
      description: Deletes a Project resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      responses:
        '200':
          description: Successfully deleted Project.
        '202':
          description: Accepted. Project delete operation is ongoing.
        '204':
          description: NoContent -- Project does not exist for this Storage Mover.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions?api-version=2024-07-01:
    get:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_List
      description: Lists all Job Definitions in a Project.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
      responses:
        '200':
          description: The list of Job Definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinitionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}?api-version=2024-07-01:
    get:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_Get
      description: Gets a Job Definition resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: The Job Definition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_CreateOrUpdate
      description: Creates or updates a Job Definition resource, which contains configuration for a single unit of managed data transfer.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: jobDefinition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
      responses:
        '200':
          description: Successfully PUT Job Definition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_Update
      description: Updates properties for a Job Definition resource. Properties not specified in the request body will be unchanged.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: jobDefinition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinitionUpdateParameters'
      responses:
        '200':
          description: The Job Definition resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_Delete
      description: Deletes a Job Definition resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: Successfully deleted Job Definition.
        '202':
          description: Accepted. Job Definition delete operation is ongoing.
        '204':
          description: NoContent -- Job Definition does not exist for this Project.
        default:
          description: Error response describing why delete operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/startJob?api-version=2024-07-01:
    post:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_StartJob
      description: Creates a new Job Run resource for the specified Job Definition and passes it to the Agent for execution.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: Successfully requested job to start.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRunResourceId'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/stopJob?api-version=2024-07-01:
    post:
      tags:
        - JobDefinitions
      operationId: JobDefinitions_StopJob
      description: Requests the Agent of any active instance of this Job Definition to stop.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: Successfully requested running job to stop, if any.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRunResourceId'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/jobRuns?api-version=2024-07-01:
    get:
      tags:
        - JobRuns
      operationId: JobRuns_List
      description: Lists all Job Runs in a Job Definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
      responses:
        '200':
          description: The list of Job Runs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRunList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageMover/storageMovers/{storageMoverName}/projects/{projectName}/jobDefinitions/{jobDefinitionName}/jobRuns/{jobRunName}?api-version=2024-07-01:
    get:
      tags:
        - JobRuns
      operationId: JobRuns_Get
      description: Gets a Job Run resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StorageMoverNameParameter'
        - $ref: '#/components/parameters/ProjectNameParameter'
        - $ref: '#/components/parameters/JobDefinitionNameParameter'
        - $ref: '#/components/parameters/JobRunNameParameter'
      responses:
        '200':
          description: The Job Run resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
