openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Stream Analytics
  description: Use the operations described in this REST API to manage Azure Stream Analytics resources through Azure Resource Manager.  All task operations in this REST API conform to the HTTP/1.1 protocol specification, and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    InputNameParameter:
      name: inputName
      in: path
      description: The name of the input.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    FunctionNameParameter:
      name: functionName
      in: path
      description: The name of the function.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ClusterNameParameter:
      name: clusterName
      in: path
      description: The name of the cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OutputNameParameter:
      name: outputName
      in: path
      description: The name of the output.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    IfMatchHeader:
      name: If-Match
      in: header
      description: The ETag of the resource. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    IfNoneMatchHeader:
      name: If-None-Match
      in: header
      description: Set to '*' to allow a new resource to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    StreamingJobNameParameter:
      name: jobName
      in: path
      description: The name of the streaming job.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    LocationParameter:
      name: location
      in: path
      description: 'The region to which the request is sent. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/'
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TransformationNameParameter:
      name: transformationName
      in: path
      description: The name of the transformation.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointNameParameter:
      name: privateEndpointName
      in: path
      description: The name of the private endpoint.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Input:
      description: An input object, containing all information associated with the named input. All inputs are contained under a streaming job.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          $ref: '#/components/schemas/InputProperties'
          description: The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
      type: object
    InputProperties:
      type: object
      description: The properties that are associated with an input.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
        serialization:
          $ref: '#/components/schemas/Serialization'
          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
        diagnostics:
          readOnly: true
          $ref: '#/components/schemas/Diagnostics'
          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        compression:
          $ref: '#/components/schemas/Compression'
          description: Describes how input data is compressed
        partitionKey:
          type: string
          description: partitionKey Describes a key in the input data which is used for partitioning the input data
      required:
        - type
    StreamInputProperties:
      description: The properties that are associated with an input containing stream data.
      x-ms-discriminator-value: Stream
      properties:
        type:
          type: string
          description: Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
        serialization:
          $ref: '#/components/schemas/Serialization'
          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
        diagnostics:
          readOnly: true
          $ref: '#/components/schemas/Diagnostics'
          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        compression:
          $ref: '#/components/schemas/Compression'
          description: Describes how input data is compressed
        partitionKey:
          type: string
          description: partitionKey Describes a key in the input data which is used for partitioning the input data
        datasource:
          $ref: '#/components/schemas/StreamInputDataSource'
          description: Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests.
      type: object
    ReferenceInputProperties:
      description: The properties that are associated with an input containing reference data.
      x-ms-discriminator-value: Reference
      properties:
        type:
          type: string
          description: Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.
        serialization:
          $ref: '#/components/schemas/Serialization'
          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
        diagnostics:
          readOnly: true
          $ref: '#/components/schemas/Diagnostics'
          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        compression:
          $ref: '#/components/schemas/Compression'
          description: Describes how input data is compressed
        partitionKey:
          type: string
          description: partitionKey Describes a key in the input data which is used for partitioning the input data
        datasource:
          $ref: '#/components/schemas/ReferenceInputDataSource'
          description: Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests.
      type: object
    StreamInputDataSource:
      type: object
      description: Describes an input data source that contains stream data.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
      required:
        - type
    BlobStreamInputDataSource:
      description: Describes a blob input data source that contains stream data.
      x-ms-discriminator-value: Microsoft.Storage/Blob
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/BlobStreamInputDataSourceProperties'
          description: The properties that are associated with a blob input containing stream data. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    BlobStreamInputDataSourceProperties:
      description: The properties that are associated with a blob input containing stream data.
      properties:
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          x-ms-identifiers:
            - accountName
          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
        container:
          type: string
          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
        pathPattern:
          type: string
          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
        dateFormat:
          type: string
          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
        timeFormat:
          type: string
          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
        sourcePartitionCount:
          type: integer
          format: int32
          description: The partition count of the blob input data source. Range 1 - 1024.
      type: object
    EventHubStreamInputDataSource:
      description: Describes an Event Hub input data source that contains stream data.
      x-ms-discriminator-value: Microsoft.ServiceBus/EventHub
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/EventHubStreamInputDataSourceProperties'
          description: The properties that are associated with an Event Hub input containing stream data. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    EventHubV2StreamInputDataSource:
      description: Describes an Event Hub input data source that contains stream data.
      x-ms-discriminator-value: Microsoft.EventHub/EventHub
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/EventHubStreamInputDataSourceProperties'
          description: The properties that are associated with an Event Hub input containing stream data. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    EventHubStreamInputDataSourceProperties:
      description: The properties that are associated with a Event Hub input containing stream data.
      properties:
        eventHubName:
          type: string
          description: The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
        consumerGroupName:
          type: string
          description: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s default consumer group.
      type: object
    IoTHubStreamInputDataSource:
      description: Describes an IoT Hub input data source that contains stream data.
      x-ms-discriminator-value: Microsoft.Devices/IotHubs
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/IoTHubStreamInputDataSourceProperties'
          description: The properties that are associated with an IoT Hub input containing stream data. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    IoTHubStreamInputDataSourceProperties:
      type: object
      description: The properties that are associated with a IoT Hub input containing stream data.
      properties:
        iotHubNamespace:
          type: string
          description: The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyName:
          type: string
          description: The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyKey:
          type: string
          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        consumerGroupName:
          type: string
          description: The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub’s default consumer group.
        endpoint:
          type: string
          description: The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).
    ReferenceInputDataSource:
      type: object
      description: Describes an input data source that contains reference data.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
      required:
        - type
    FileReferenceInputDataSource:
      description: Describes a file input data source that contains reference data.
      x-ms-discriminator-value: File
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/FileReferenceInputDataSourceProperties'
          description: The properties that are associated with a file input containing reference data. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    FileReferenceInputDataSourceProperties:
      type: object
      description: The properties that are associated with a file input containing reference data.
      properties:
        path:
          type: string
          description: The path of the file.
    BlobReferenceInputDataSource:
      description: Describes a blob input data source that contains reference data.
      x-ms-discriminator-value: Microsoft.Storage/Blob
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/BlobReferenceInputDataSourceProperties'
          description: The properties that are associated with a blob input containing reference data. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    BlobReferenceInputDataSourceProperties:
      description: The properties that are associated with a blob input containing reference data.
      properties:
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          x-ms-identifiers:
            - accountName
          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
        container:
          type: string
          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
        pathPattern:
          type: string
          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
        dateFormat:
          type: string
          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
        timeFormat:
          type: string
          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
      type: object
    BlobDataSourceProperties:
      type: object
      description: The properties that are associated with a blob data source.
      properties:
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          x-ms-identifiers:
            - accountName
          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
        container:
          type: string
          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
        pathPattern:
          type: string
          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
        dateFormat:
          type: string
          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
        timeFormat:
          type: string
          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
    StorageAccount:
      type: object
      description: The properties that are associated with an Azure Storage account
      properties:
        accountName:
          type: string
          description: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
        accountKey:
          type: string
          description: The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
    ServiceBusDataSourceProperties:
      type: object
      description: The common properties that are associated with Service Bus data sources (Queues, Topics, Event Hubs, etc.).
      properties:
        serviceBusNamespace:
          type: string
          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyName:
          type: string
          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyKey:
          type: string
          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
    EventHubDataSourceProperties:
      description: The common properties that are associated with Event Hub data sources.
      properties:
        serviceBusNamespace:
          type: string
          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyName:
          type: string
          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyKey:
          type: string
          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
        eventHubName:
          type: string
          description: The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
      type: object
    Diagnostics:
      type: object
      description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
      properties:
        conditions:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticCondition'
          x-ms-identifiers: []
          description: A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.
    DiagnosticCondition:
      type: object
      description: Condition applicable to the resource, or to the job overall, that warrant customer attention.
      properties:
        since:
          readOnly: true
          type: string
          description: The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.
        code:
          readOnly: true
          type: string
          description: The opaque diagnostic code.
        message:
          readOnly: true
          type: string
          description: The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.
    InputListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Input'
          readOnly: true
          description: A list of inputs under a streaming job. Populated by a 'List' operation.
        nextLink:
          type: string
          readOnly: true
          description: The link (url) to the next page of results.
      description: Object containing a list of inputs under a streaming job.
    Serialization:
      type: object
      description: Describes how data from an input is serialized or how data is serialized when written to an output.
      discriminator:
        propertyName: type
      properties:
        type:
          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/EventSerializationType'
      required:
        - type
    EventSerializationType:
      type: string
      description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
      enum:
        - Csv
        - Avro
        - Json
        - Parquet
      x-ms-enum:
        name: EventSerializationType
        modelAsString: true
    ParquetSerialization:
      description: Describes how data from an input is serialized or how data is serialized when written to an output in Parquet format.
      x-ms-discriminator-value: Parquet
      properties:
        type:
          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/EventSerializationType'
        properties:
          $ref: '#/components/schemas/ParquetSerializationProperties'
          description: The properties that are associated with the Parquet serialization type. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    ParquetSerializationProperties:
      type: object
      description: The properties that are associated with the Parquet serialization type.
      properties: {}
    CsvSerialization:
      description: Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.
      x-ms-discriminator-value: Csv
      properties:
        type:
          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/EventSerializationType'
        properties:
          $ref: '#/components/schemas/CsvSerializationProperties'
          description: The properties that are associated with the CSV serialization type. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    CsvSerializationProperties:
      type: object
      description: The properties that are associated with the CSV serialization type.
      properties:
        fieldDelimiter:
          type: string
          description: Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.
        encoding:
          $ref: '#/components/schemas/Encoding'
          description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
    JsonSerialization:
      description: Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.
      x-ms-discriminator-value: Json
      properties:
        type:
          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/EventSerializationType'
        properties:
          $ref: '#/components/schemas/JsonSerializationProperties'
          description: The properties that are associated with the JSON serialization type. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    JsonSerializationProperties:
      type: object
      description: The properties that are associated with the JSON serialization type.
      properties:
        encoding:
          $ref: '#/components/schemas/Encoding'
          description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests.
        format:
          $ref: '#/components/schemas/JsonOutputSerializationFormat'
          description: This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null.
    AvroSerialization:
      description: Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.
      x-ms-discriminator-value: Avro
      properties:
        type:
          description: Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/EventSerializationType'
        properties:
          $ref: '#/components/schemas/AvroSerializationProperties'
          description: The properties that are associated with the Avro serialization type. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    AvroSerializationProperties:
      type: object
      description: The properties that are associated with the Avro serialization type.
      properties: {}
    Encoding:
      type: string
      description: Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output.
      enum:
        - UTF8
      x-ms-enum:
        name: Encoding
        modelAsString: true
    JsonOutputSerializationFormat:
      type: string
      description: Specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects.
      enum:
        - LineSeparated
        - Array
      x-ms-enum:
        name: JsonOutputSerializationFormat
        modelAsString: true
    ResourceTestStatus:
      type: object
      description: Describes the status of the test operation along with error information, if applicable.
      properties:
        status:
          readOnly: true
          type: string
          description: The status of the test operation.
        error:
          readOnly: true
          $ref: '#/components/schemas/ErrorResponse'
          description: Describes the error that occurred.
    ErrorResponse:
      type: object
      description: Describes the error that occurred.
      properties:
        code:
          readOnly: true
          type: string
          description: Error code associated with the error that occurred.
        message:
          readOnly: true
          type: string
          description: Describes the error in detail.
    SubResource:
      type: object
      description: The base sub-resource model definition.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
      x-ms-azure-resource: true
    Compression:
      type: object
      description: Describes how input data is compressed
      properties:
        type:
          description: Indicates the type of compression that the input uses. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/CompressionType'
      required:
        - type
    CompressionType:
      type: string
      description: Indicates the type of compression that the input uses. Required on PUT (CreateOrReplace) requests.
      enum:
        - None
        - GZip
        - Deflate
      x-ms-enum:
        name: CompressionType
        modelAsString: true
      default: None
    AzureSqlReferenceInputDataSource:
      description: Describes an Azure SQL database reference input data source.
      x-ms-discriminator-value: Microsoft.Sql/Server/Database
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.
        properties:
          description: The properties that are associated with SQL DB input containing reference data. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/AzureSqlReferenceInputDataSourceProperties'
          x-ms-client-flatten: true
      type: object
    AzureSqlReferenceInputDataSourceProperties:
      description: The properties that are associated with SQL DB input containing reference data. Required on PUT (CreateOrReplace) requests.
      type: object
      properties:
        server:
          description: This element is associated with the datasource element. This is the name of the server that contains the database that will be written to.
          type: string
        database:
          description: This element is associated with the datasource element. This is the name of the database that output will be written to.
          type: string
        user:
          description: This element is associated with the datasource element. This is the user name that will be used to connect to the SQL Database instance.
          type: string
        password:
          description: This element is associated with the datasource element. This is the password that will be used to connect to the SQL Database instance.
          type: string
          x-ms-secret: true
        table:
          description: This element is associated with the datasource element. The name of the table in the Azure SQL database..
          type: string
        refreshType:
          type: object
          description: Indicates the type of data refresh option.
          $ref: '#/components/schemas/RefreshType'
        refreshRate:
          description: This element is associated with the datasource element. This indicates how frequently the data will be fetched from the database. It is of DateTime format.
          type: string
        fullSnapshotQuery:
          description: This element is associated with the datasource element. This query is used to fetch data from the sql database.
          type: string
        deltaSnapshotQuery:
          description: This element is associated with the datasource element. This query is used to fetch incremental changes from the SQL database. To use this option, we recommend using temporal tables in Azure SQL Database.
          type: string
    GatewayMessageBusStreamInputDataSource:
      description: Describes a blob input data source that contains stream data.
      x-ms-discriminator-value: GatewayMessageBus
      properties:
        type:
          type: string
          description: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/GatewayMessageBusStreamInputDataSourceProperties'
          description: The properties that are associated with a gateway message bus input containing stream data.
          x-ms-client-flatten: true
      type: object
    GatewayMessageBusStreamInputDataSourceProperties:
      description: The properties that are associated with a gateway message bus input containing stream data.
      properties:
        topic:
          type: string
          description: The name of the Service Bus topic.
      type: object
    GatewayMessageBusSourceProperties:
      description: The properties that are associated with a gateway message bus datasource.
      type: object
      properties:
        topic:
          type: string
          description: The name of the Service Bus topic.
    RefreshType:
      type: string
      description: Indicates the type of data refresh option.
      enum:
        - Static
        - RefreshPeriodicallyWithFull
        - RefreshPeriodicallyWithDelta
      x-ms-enum:
        name: RefreshType
        modelAsString: true
    OperationListResult:
      type: object
      description: Result of the request to list Stream Analytics operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          description: List of Stream Analytics operations supported by the Microsoft.StreamAnalytics resource provider.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          type: string
          readOnly: true
    Operation:
      description: A Stream Analytics REST API operation
      type: object
      properties:
        name:
          description: The name of the operation being performed on this particular object.
          type: string
          readOnly: true
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          type: object
          description: Contains the localized display information for this particular operation / action.
          readOnly: true
          properties:
            provider:
              description: The localized friendly form of the resource provider name.
              type: string
              readOnly: true
            resource:
              description: The localized friendly form of the resource type related to this action/operation.
              type: string
              readOnly: true
            operation:
              description: The localized friendly name for the operation.
              type: string
              readOnly: true
            description:
              description: The localized friendly description for the operation.
              type: string
              readOnly: true
    StreamingJob:
      description: A streaming job object, containing all information associated with the named streaming job.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/StreamingJobProperties'
          description: The properties that are associated with a streaming job.  Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/Identity'
          description: Describes the system-assigned managed identity assigned to this job that can be used to authenticate with inputs and outputs.
      type: object
    StreamingJobProperties:
      type: object
      description: The properties that are associated with a streaming job.
      properties:
        sku:
          description: Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
          $ref: '#/components/schemas/Sku'
        jobId:
          readOnly: true
          type: string
          description: A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the streaming job.
        provisioningState:
          readOnly: true
          type: string
          description: Describes the provisioning status of the streaming job.
        jobState:
          readOnly: true
          type: string
          description: Describes the state of the streaming job.
        jobType:
          type: string
          description: Describes the type of the job. Valid modes are `Cloud` and 'Edge'.
          enum:
            - Cloud
            - Edge
          x-ms-enum:
            name: JobType
            modelAsString: true
        outputStartMode:
          $ref: '#/components/schemas/OutputStartMode'
          description: This property should only be utilized when it is desired that the job be started immediately upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
        outputStartTime:
          type: string
          format: date-time
          description: Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
        lastOutputEventTime:
          readOnly: true
          type: string
          format: date-time
          description: Value is either an ISO-8601 formatted timestamp indicating the last output event time of the streaming job or null indicating that output has not yet been produced. In case of multiple outputs or multiple streams, this shows the latest value in that set.
        eventsOutOfOrderPolicy:
          $ref: '#/components/schemas/EventsOutOfOrderPolicy'
          description: Indicates the policy to apply to events that arrive out of order in the input event stream.
        outputErrorPolicy:
          $ref: '#/components/schemas/OutputErrorPolicy'
          description: Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
        eventsOutOfOrderMaxDelayInSeconds:
          type: integer
          format: int32
          description: The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
        eventsLateArrivalMaxDelayInSeconds:
          type: integer
          format: int32
          description: The maximum tolerable delay in seconds where events arriving late could be included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait indefinitely. If the property is absent, it is interpreted to have a value of -1.
        dataLocale:
          type: string
          description: The data locale of the stream analytics job. Value should be the name of a supported .NET Culture from the set https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx. Defaults to 'en-US' if none specified.
        compatibilityLevel:
          $ref: '#/components/schemas/CompatibilityLevel'
          description: Controls certain runtime behaviors of the streaming job.
        createdDate:
          readOnly: true
          type: string
          format: date-time
          description: Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/Input'
          description: A list of one or more inputs to the streaming job. The name property for each input is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual input.
        transformation:
          $ref: '#/components/schemas/Transformation'
          description: Indicates the query and the number of streaming units to use for the streaming job. The name property of the transformation is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
          description: A list of one or more outputs for the streaming job. The name property for each output is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual output.
        functions:
          type: array
          items:
            $ref: '#/components/schemas/Function'
          description: A list of one or more functions for the streaming job. The name property for each function is required when specifying this property in a PUT request. This property cannot be modify via a PATCH operation. You must use the PATCH API available for the individual transformation.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        jobStorageAccount:
          description: The properties that are associated with an Azure Storage account with MSI
          $ref: '#/components/schemas/JobStorageAccount'
        contentStoragePolicy:
          readOnly: false
          type: string
          description: Valid values are JobStorageAccount and SystemAccount. If set to JobStorageAccount, this requires the user to also specify jobStorageAccount property. .
          enum:
            - SystemAccount
            - JobStorageAccount
          x-ms-enum:
            name: ContentStoragePolicy
            modelAsString: true
        cluster:
          $ref: '#/components/schemas/ClusterInfo'
          description: The cluster which streaming jobs will run on.
    ClusterInfo:
      type: object
      description: The properties associated with a Stream Analytics cluster.
      properties:
        id:
          description: The resource id of cluster.
          type: string
    Sku:
      type: object
      description: The properties that are associated with a SKU.
      properties:
        name:
          type: string
          description: The name of the SKU. Required on PUT (CreateOrReplace) requests.
          enum:
            - Standard
          x-ms-enum:
            name: SkuName
            modelAsString: true
    StreamingJobListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/StreamingJob'
          readOnly: true
          description: A list of streaming jobs. Populated by a 'List' operation.
        nextLink:
          type: string
          readOnly: true
          description: The link (url) to the next page of results.
      description: Object containing a list of streaming jobs.
    StartStreamingJobParameters:
      type: object
      description: Parameters supplied to the Start Streaming Job operation.
      properties:
        outputStartMode:
          $ref: '#/components/schemas/OutputStartMode'
          description: Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
        outputStartTime:
          type: string
          format: date-time
          description: Value is either an ISO-8601 formatted time stamp that indicates the starting point of the output event stream, or null to indicate that the output event stream will start whenever the streaming job is started. This property must have a value if outputStartMode is set to CustomTime.
    OutputStartMode:
      type: string
      description: Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting point of the output event stream should start whenever the job is started, start at a custom user time stamp specified via the outputStartTime property, or start from the last event output time.
      enum:
        - JobStartTime
        - CustomTime
        - LastOutputEventTime
      x-ms-enum:
        name: OutputStartMode
        modelAsString: true
    ScaleStreamingJobParameters:
      type: object
      description: Parameters supplied to the Scale Streaming Job operation.
      properties:
        streamingUnits:
          type: integer
          format: int32
          description: Specifies the number of streaming units that the streaming job will scale to.
    EventsOutOfOrderPolicy:
      type: string
      description: Indicates the policy to apply to events that arrive out of order in the input event stream.
      enum:
        - Adjust
        - Drop
      x-ms-enum:
        name: EventsOutOfOrderPolicy
        modelAsString: true
    OutputErrorPolicy:
      type: string
      description: Indicates the policy to apply to events that arrive at the output and cannot be written to the external storage due to being malformed (missing column values, column values of wrong type or size).
      enum:
        - Stop
        - Drop
      x-ms-enum:
        name: OutputErrorPolicy
        modelAsString: true
    CompatibilityLevel:
      type: string
      description: Controls certain runtime behaviors of the streaming job.
      enum:
        - '1.0'
        - '1.2'
      x-ms-enum:
        name: CompatibilityLevel
        modelAsString: true
    JobStorageAccount:
      description: The properties that are associated with an Azure Storage account with MSI
      properties:
        accountName:
          type: string
          description: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
        accountKey:
          type: string
          description: The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
      type: object
    Identity:
      type: object
      description: Describes how identity is verified
      properties:
        tenantId:
          type: string
          description: The identity tenantId
          readOnly: true
        principalId:
          type: string
          description: The identity principal ID
          readOnly: true
        type:
          type: string
          description: The identity type
    Function:
      description: A function object, containing all information associated with the named function. All functions are contained under a streaming job.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          $ref: '#/components/schemas/FunctionProperties'
          description: The properties that are associated with a function.
      type: object
    FunctionProperties:
      description: The properties that are associated with a function.
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          description: Indicates the type of function.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        properties:
          $ref: '#/components/schemas/FunctionConfiguration'
          x-ms-client-flatten: true
      type: object
    FunctionConfiguration:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/FunctionInput'
        output:
          $ref: '#/components/schemas/FunctionOutput'
        binding:
          $ref: '#/components/schemas/FunctionBinding'
    ScalarFunctionProperties:
      description: The properties that are associated with a scalar function.
      x-ms-discriminator-value: Scalar
      properties:
        type:
          type: string
          description: Indicates the type of function.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        properties:
          $ref: '#/components/schemas/FunctionConfiguration'
          x-ms-client-flatten: true
      type: object
    FunctionInput:
      type: object
      description: Describes one input parameter of a function.
      properties:
        dataType:
          type: string
          description: The (Azure Stream Analytics supported) data type of the function input parameter. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
        isConfigurationParameter:
          type: boolean
          description: A flag indicating if the parameter is a configuration parameter. True if this input parameter is expected to be a constant. Default is false.
    FunctionOutput:
      type: object
      description: Describes the output of a function.
      properties:
        dataType:
          type: string
          description: The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure Stream Analytics data types are described at https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
    FunctionBinding:
      type: object
      description: The physical binding of the function. For example, in the Azure Machine Learning web service’s case, this describes the endpoint.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Indicates the function binding type.
      required:
        - type
    AzureMachineLearningWebServiceFunctionBinding:
      description: The binding to an Azure Machine Learning web service.
      x-ms-discriminator-value: Microsoft.MachineLearning/WebService
      properties:
        type:
          type: string
          description: Indicates the function binding type.
        properties:
          $ref: '#/components/schemas/AzureMachineLearningWebServiceFunctionBindingProperties'
          description: The binding properties associated with an Azure Machine learning web service.
          x-ms-client-flatten: true
      type: object
    AzureMachineLearningWebServiceFunctionBindingProperties:
      type: object
      description: The binding properties associated with an Azure Machine learning web service.
      properties:
        endpoint:
          type: string
          description: 'The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs'
        apiKey:
          type: string
          description: The API key used to authenticate with Request-Response endpoint.
        inputs:
          $ref: '#/components/schemas/AzureMachineLearningWebServiceInputs'
          description: The inputs for the Azure Machine Learning web service endpoint.
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/AzureMachineLearningWebServiceOutputColumn'
          x-ms-identifiers:
            - name
          description: A list of outputs from the Azure Machine Learning web service endpoint execution.
        batchSize:
          type: integer
          format: int32
          description: Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute request. Default is 1000.
    AzureMachineLearningWebServiceInputs:
      type: object
      description: The inputs for the Azure Machine Learning web service endpoint.
      properties:
        name:
          type: string
          description: The name of the input. This is the name provided while authoring the endpoint.
        columnNames:
          type: array
          items:
            $ref: '#/components/schemas/AzureMachineLearningWebServiceInputColumn'
          x-ms-identifiers:
            - name
          description: A list of input columns for the Azure Machine Learning web service endpoint.
    AzureMachineLearningWebServiceInputColumn:
      type: object
      description: Describes an input column for the Azure Machine Learning web service endpoint.
      properties:
        name:
          type: string
          description: The name of the input column.
        dataType:
          type: string
          description: The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
        mapTo:
          type: integer
          format: int32
          description: The zero based index of the function parameter this input maps to.
    AzureMachineLearningWebServiceOutputColumn:
      type: object
      description: Describes an output column for the Azure Machine Learning web service endpoint.
      properties:
        name:
          type: string
          description: The name of the output column.
        dataType:
          type: string
          description: The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure Machine Learning data types are described at https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
    JavaScriptFunctionBinding:
      description: The binding to a JavaScript function.
      x-ms-discriminator-value: Microsoft.StreamAnalytics/JavascriptUdf
      properties:
        type:
          type: string
          description: Indicates the function binding type.
        properties:
          $ref: '#/components/schemas/JavaScriptFunctionBindingProperties'
          description: The binding properties associated with a JavaScript function.
          x-ms-client-flatten: true
      type: object
    JavaScriptFunctionBindingProperties:
      type: object
      description: The binding properties associated with a JavaScript function.
      properties:
        script:
          type: string
          description: 'The JavaScript code containing a single function definition. For example: ''function (x, y) { return x + y; }'''
    FunctionRetrieveDefaultDefinitionParameters:
      type: object
      description: Parameters used to specify the type of function to retrieve the default definition for.
      discriminator:
        propertyName: bindingType
      properties:
        bindingType:
          type: string
          description: Indicates the function binding type.
      required:
        - bindingType
    AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters:
      description: The parameters needed to retrieve the default function definition for an Azure Machine Learning web service function.
      x-ms-discriminator-value: Microsoft.MachineLearning/WebService
      properties:
        bindingType:
          type: string
          description: Indicates the function binding type.
        bindingRetrievalProperties:
          $ref: '#/components/schemas/AzureMachineLearningWebServiceFunctionBindingRetrievalProperties'
          description: The binding retrieval properties associated with an Azure Machine learning web service.
          x-ms-client-flatten: true
      type: object
    AzureMachineLearningWebServiceFunctionBindingRetrievalProperties:
      type: object
      description: The binding retrieval properties associated with an Azure Machine learning web service.
      properties:
        executeEndpoint:
          type: string
          description: 'The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more here: https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs'
        udfType:
          $ref: '#/components/schemas/UdfType'
          description: The function type.
    JavaScriptFunctionRetrieveDefaultDefinitionParameters:
      description: The parameters needed to retrieve the default function definition for a JavaScript function.
      x-ms-discriminator-value: Microsoft.StreamAnalytics/JavascriptUdf
      properties:
        bindingType:
          type: string
          description: Indicates the function binding type.
        bindingRetrievalProperties:
          $ref: '#/components/schemas/JavaScriptFunctionBindingRetrievalProperties'
          description: The binding retrieval properties associated with a JavaScript function.
          x-ms-client-flatten: true
      type: object
    JavaScriptFunctionBindingRetrievalProperties:
      type: object
      description: The binding retrieval properties associated with a JavaScript function.
      properties:
        script:
          type: string
          description: 'The JavaScript code containing a single function definition. For example: ''function (x, y) { return x + y; }''.'
        udfType:
          $ref: '#/components/schemas/UdfType'
          description: The function type.
    FunctionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Function'
          readOnly: true
          description: A list of functions under a streaming job. Populated by a 'List' operation.
        nextLink:
          type: string
          readOnly: true
          description: The link (url) to the next page of results.
      description: Object containing a list of functions under a streaming job.
    UdfType:
      type: string
      description: The function type.
      enum:
        - Scalar
      x-ms-enum:
        name: UdfType
        modelAsString: false
    AggregateFunctionProperties:
      description: The properties that are associated with an aggregate function.
      x-ms-discriminator-value: Aggregate
      properties:
        type:
          type: string
          description: Indicates the type of function.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        properties:
          $ref: '#/components/schemas/FunctionConfiguration'
          x-ms-client-flatten: true
      type: object
    Cluster:
      description: A Stream Analytics Cluster object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        sku:
          $ref: '#/components/schemas/ClusterSku'
        etag:
          description: The current entity tag for the cluster. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
          type: string
          readOnly: true
        properties:
          x-ms-client-flatten: true
          description: The properties associated with a Stream Analytics cluster.
          $ref: '#/components/schemas/ClusterProperties'
      type: object
    ClusterProperties:
      type: object
      description: The properties associated with a Stream Analytics cluster.
      properties:
        createdDate:
          description: The date this cluster was created.
          type: string
          format: date-time
          readOnly: true
        clusterId:
          description: Unique identifier for the cluster.
          type: string
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/ClusterProvisioningState'
        capacityAllocated:
          description: Represents the number of streaming units currently being used on the cluster.
          type: integer
          format: int32
          readOnly: true
        capacityAssigned:
          description: Represents the sum of the SUs of all streaming jobs associated with the cluster. If all of the jobs were running, this would be the capacity allocated.
          type: integer
          format: int32
          readOnly: true
    ClusterListResult:
      type: object
      description: A list of clusters populated by a 'list' operation.
      properties:
        value:
          description: A list of clusters.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
          readOnly: true
        nextLink:
          description: The URL to fetch the next set of clusters.
          type: string
          readOnly: true
    ClusterJob:
      type: object
      description: A streaming job.
      properties:
        id:
          description: Resource ID of the streaming job.
          type: string
          readOnly: true
        streamingUnits:
          description: The number of streaming units that are used by the streaming job.
          type: integer
          format: int32
          readOnly: true
        jobState:
          $ref: '#/components/schemas/JobState'
    ClusterJobListResult:
      type: object
      description: A list of streaming jobs. Populated by a List operation.
      properties:
        value:
          description: A list of streaming jobs.
          type: array
          items:
            $ref: '#/components/schemas/ClusterJob'
          readOnly: true
        nextLink:
          type: string
          description: The URL to fetch the next set of streaming jobs.
          readOnly: true
    ClusterSku:
      type: object
      description: The SKU of the cluster. This determines the size/capacity of the cluster. Required on PUT (CreateOrUpdate) requests.
      properties:
        name:
          description: Specifies the SKU name of the cluster. Required on PUT (CreateOrUpdate) requests.
          type: string
          enum:
            - Default
          x-ms-enum:
            name: ClusterSkuName
            modelAsString: true
            values:
              - value: Default
                description: The default SKU.
        capacity:
          description: Denotes the number of streaming units the cluster can support. Valid values for this property are multiples of 36 with a minimum value of 36 and maximum value of 216. Required on PUT (CreateOrUpdate) requests.
          type: integer
          format: int32
          minimum: 36
          maximum: 396
    ClusterProvisioningState:
      description: 'The status of the cluster provisioning. The three terminal states are: Succeeded, Failed and Canceled'
      readOnly: true
      type: string
      enum:
        - Succeeded
        - Failed
        - Canceled
        - InProgress
      x-ms-enum:
        name: ClusterProvisioningState
        modelAsString: true
        values:
          - value: Succeeded
            description: The cluster provisioning succeeded.
          - value: Failed
            description: The cluster provisioning failed.
          - value: Canceled
            description: The cluster provisioning was canceled.
          - value: InProgress
            description: The cluster provisioning was inprogress.
    JobState:
      description: The current execution state of the streaming job.
      type: string
      readOnly: true
      enum:
        - Created
        - Starting
        - Running
        - Stopping
        - Stopped
        - Deleting
        - Failed
        - Degraded
        - Restarting
        - Scaling
      x-ms-enum:
        name: JobState
        modelAsString: true
        values:
          - value: Created
            description: The job is currently in the Created state.
          - value: Starting
            description: The job is currently in the Starting state.
          - value: Running
            description: The job is currently in the Running state.
          - value: Stopping
            description: The job is currently in the Stopping state.
          - value: Stopped
            description: The job is currently in the Stopped state.
          - value: Deleting
            description: The job is currently in the Deleting state.
          - value: Failed
            description: The job is currently in the Failed state.
          - value: Degraded
            description: The job is currently in the Degraded state.
          - value: Restarting
            description: The job is currently in the Restarting state.
          - value: Scaling
            description: The job is currently in the Scaling state.
    Output:
      description: An output object, containing all information associated with the named output. All outputs are contained under a streaming job.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          $ref: '#/components/schemas/OutputProperties'
          description: The properties that are associated with an output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    OutputProperties:
      type: object
      description: The properties that are associated with an output.
      properties:
        datasource:
          $ref: '#/components/schemas/OutputDataSource'
          description: Describes the data source that output will be written to. Required on PUT (CreateOrReplace) requests.
        timeWindow:
          type: string
          description: The time frame for filtering Stream Analytics job outputs.
        sizeWindow:
          type: integer
          format: int32
          description: The size window to constrain a Stream Analytics output to.
        serialization:
          $ref: '#/components/schemas/Serialization'
          description: Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests.
        diagnostics:
          readOnly: true
          $ref: '#/components/schemas/Diagnostics'
          description: Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
    OutputDataSource:
      type: object
      description: Describes the data source that output will be written to.
      discriminator:
        propertyName: type
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
      required:
        - type
    BlobOutputDataSource:
      description: Describes a blob output data source.
      x-ms-discriminator-value: Microsoft.Storage/Blob
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/BlobOutputDataSourceProperties'
          description: The properties that are associated with a blob output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    BlobOutputDataSourceProperties:
      description: The properties that are associated with a blob output.
      properties:
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/StorageAccount'
          x-ms-identifiers:
            - accountName
          description: A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
        container:
          type: string
          description: The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
        pathPattern:
          type: string
          description: The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.
        dateFormat:
          type: string
          description: The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.
        timeFormat:
          type: string
          description: The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
        blobPathPrefix:
          type: string
          description: Blob path prefix.
      type: object
    AzureTableOutputDataSource:
      description: Describes an Azure Table output data source.
      x-ms-discriminator-value: Microsoft.Storage/Table
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/AzureTableOutputDataSourceProperties'
          description: The properties that are associated with an Azure Table output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    AzureTableOutputDataSourceProperties:
      type: object
      description: The properties that are associated with an Azure Table output.
      properties:
        accountName:
          type: string
          description: The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
        accountKey:
          type: string
          description: The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
          x-ms-secret: true
        table:
          type: string
          description: The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
        partitionKey:
          type: string
          description: This element indicates the name of a column from the SELECT statement in the query that will be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
        rowKey:
          type: string
          description: This element indicates the name of a column from the SELECT statement in the query that will be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
        columnsToRemove:
          type: array
          items:
            type: string
          description: If specified, each item in the array is the name of a column to remove (if present) from output event entities.
        batchSize:
          type: integer
          format: int32
          description: The number of rows to write to the Azure Table at a time.
    EventHubOutputDataSource:
      description: Describes an Event Hub output data source.
      x-ms-discriminator-value: Microsoft.ServiceBus/EventHub
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/EventHubOutputDataSourceProperties'
          description: The properties that are associated with an Event Hub output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    EventHubV2OutputDataSource:
      description: Describes an Event Hub output data source.
      x-ms-discriminator-value: Microsoft.EventHub/EventHub
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/EventHubOutputDataSourceProperties'
          description: The properties that are associated with an Event Hub output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    EventHubOutputDataSourceProperties:
      description: The properties that are associated with an Event Hub output.
      properties:
        eventHubName:
          type: string
          description: The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
        partitionKey:
          type: string
          description: The key/column that is used to determine to which partition to send event data.
        propertyColumns:
          type: array
          description: The properties associated with this Event Hub output.
          items:
            type: string
      type: object
    AzureSqlDatabaseOutputDataSource:
      description: Describes an Azure SQL database output data source.
      x-ms-discriminator-value: Microsoft.Sql/Server/Database
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/AzureSqlDatabaseOutputDataSourceProperties'
          description: The properties that are associated with an Azure SQL database output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    AzureSqlDatabaseOutputDataSourceProperties:
      description: The properties that are associated with an Azure SQL database output.
      properties:
        server:
          type: string
          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        database:
          type: string
          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        user:
          type: string
          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        password:
          type: string
          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        table:
          type: string
          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        maxBatchCount:
          type: number
          description: Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
        maxWriterCount:
          type: number
          description: Max Writer count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
      type: object
    AzureSynapseOutputDataSource:
      description: Describes an Azure Synapse output data source.
      x-ms-discriminator-value: Microsoft.Sql/Server/DataWarehouse
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/AzureSynapseOutputDataSourceProperties'
          description: The properties that are associated with an Azure Synapse output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    AzureSynapseOutputDataSourceProperties:
      description: The properties that are associated with an Azure Synapse output.
      properties:
        server:
          type: string
          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        database:
          type: string
          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        table:
          type: string
          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        user:
          type: string
          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        password:
          type: string
          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
          x-ms-secret: true
      type: object
    AzureSynapseDataSourceProperties:
      type: object
      description: The properties that are associated with an Azure SQL database data source.
      properties:
        server:
          type: string
          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        database:
          type: string
          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        table:
          type: string
          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        user:
          type: string
          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        password:
          type: string
          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
          x-ms-secret: true
    DocumentDbOutputDataSource:
      description: Describes a DocumentDB output data source.
      x-ms-discriminator-value: Microsoft.Storage/DocumentDB
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/DocumentDbOutputDataSourceProperties'
          description: The properties that are associated with a DocumentDB output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    DocumentDbOutputDataSourceProperties:
      type: object
      description: The properties that are associated with a DocumentDB output.
      properties:
        accountId:
          type: string
          description: The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
        accountKey:
          type: string
          description: The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
        database:
          type: string
          description: The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
        collectionNamePattern:
          type: string
          description: The collection name pattern for the collections to be used. The collection name format can be constructed using the optional {partition} token, where partitions start from 0. See the DocumentDB section of https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more information. Required on PUT (CreateOrReplace) requests.
        partitionKey:
          type: string
          description: The name of the field in output events used to specify the key for partitioning output across collections. If 'collectionNamePattern' contains the {partition} token, this property is required to be specified.
        documentId:
          type: string
          description: The name of the field in output events used to specify the primary key which insert or update operations are based on.
    AzureFunctionOutputDataSource:
      description: Defines the metadata of AzureFunctionOutputDataSource
      x-ms-discriminator-value: Microsoft.AzureFunction
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/AzureFunctionOutputDataSourceProperties'
          description: The properties that are associated with a Azure Function output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    AzureFunctionOutputDataSourceProperties:
      description: The properties that are associated with an Azure Function output.
      type: object
      properties:
        functionAppName:
          description: The name of your Azure Functions app.
          type: string
        functionName:
          description: The name of the function in your Azure Functions app.
          type: string
        apiKey:
          description: If you want to use an Azure Function from another subscription, you can do so by providing the key to access your function.
          type: string
        maxBatchSize:
          description: A property that lets you set the maximum size for each output batch that's sent to your Azure function. The input unit is in bytes. By default, this value is 262,144 bytes (256 KB).
          type: number
        maxBatchCount:
          description: A property that lets you specify the maximum number of events in each batch that's sent to Azure Functions. The default value is 100.
          type: number
    ServiceBusQueueOutputDataSource:
      description: Describes a Service Bus Queue output data source.
      x-ms-discriminator-value: Microsoft.ServiceBus/Queue
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/ServiceBusQueueOutputDataSourceProperties'
          description: The properties that are associated with a Service Bus Queue output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    ServiceBusQueueOutputDataSourceProperties:
      description: The properties that are associated with a Service Bus Queue output.
      properties:
        serviceBusNamespace:
          type: string
          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyName:
          type: string
          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyKey:
          type: string
          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
        queueName:
          type: string
          description: The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
        propertyColumns:
          type: array
          items:
            type: string
          description: A string array of the names of output columns to be attached to Service Bus messages as custom properties.
        systemPropertyColumns:
          type: object
          description: 'The system properties associated with the Service Bus Queue. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.'
      type: object
    ServiceBusTopicOutputDataSource:
      description: Describes a Service Bus Topic output data source.
      x-ms-discriminator-value: Microsoft.ServiceBus/Topic
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/ServiceBusTopicOutputDataSourceProperties'
          description: The properties that are associated with a Service Bus Topic output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    ServiceBusTopicOutputDataSourceProperties:
      description: The properties that are associated with a Service Bus Topic output.
      properties:
        serviceBusNamespace:
          type: string
          description: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyName:
          type: string
          description: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.
        sharedAccessPolicyKey:
          type: string
          description: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
        topicName:
          type: string
          description: The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
        propertyColumns:
          type: array
          items:
            type: string
          description: A string array of the names of output columns to be attached to Service Bus messages as custom properties.
        systemPropertyColumns:
          type: object
          description: 'The system properties associated with the Service Bus Topic Output. The following system properties are supported: ReplyToSessionId, ContentType, To, Subject, CorrelationId, TimeToLive, PartitionKey, SessionId, ScheduledEnqueueTime, MessageId, ReplyTo, Label, ScheduledEnqueueTimeUtc.'
          additionalProperties:
            type: string
      type: object
    PowerBIOutputDataSource:
      description: Describes a Power BI output data source.
      x-ms-discriminator-value: PowerBI
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/PowerBIOutputDataSourceProperties'
          description: The properties that are associated with a Power BI output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    PowerBIOutputDataSourceProperties:
      description: The properties that are associated with a Power BI output.
      properties:
        refreshToken:
          type: string
          description: A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
        tokenUserPrincipalName:
          type: string
          description: The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
        tokenUserDisplayName:
          type: string
          description: The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
        dataset:
          type: string
          description: The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
        table:
          type: string
          description: The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace) requests.
        groupId:
          type: string
          description: The ID of the Power BI group.
        groupName:
          type: string
          description: The name of the Power BI group. Use this property to help remember which specific Power BI group id was used.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
      type: object
    AzureDataLakeStoreOutputDataSource:
      description: Describes an Azure Data Lake Store output data source.
      x-ms-discriminator-value: Microsoft.DataLake/Accounts
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/AzureDataLakeStoreOutputDataSourceProperties'
          description: The properties that are associated with an Azure Data Lake Store output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    AzureDataLakeStoreOutputDataSourceProperties:
      description: The properties that are associated with an Azure Data Lake Store.
      properties:
        refreshToken:
          type: string
          description: A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
        tokenUserPrincipalName:
          type: string
          description: The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
        tokenUserDisplayName:
          type: string
          description: The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
        accountName:
          type: string
          description: The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
        tenantId:
          type: string
          description: The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace) requests.
        filePathPrefix:
          type: string
          description: The location of the file to which the output should be written to. Required on PUT (CreateOrReplace) requests.
        dateFormat:
          type: string
          description: The date format. Wherever {date} appears in filePathPrefix, the value of this property is used as the date format instead.
        timeFormat:
          type: string
          description: The time format. Wherever {time} appears in filePathPrefix, the value of this property is used as the time format instead.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
      type: object
    GatewayMessageBusOutputDataSource:
      description: Describes a Gateway Message Bus output data source.
      x-ms-discriminator-value: GatewayMessageBus
      properties:
        type:
          type: string
          description: Indicates the type of data source output will be written to. Required on PUT (CreateOrReplace) requests.
        properties:
          $ref: '#/components/schemas/GatewayMessageBusOutputDataSourceProperties'
          description: The properties that are associated with a Gateway Message Bus output. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    GatewayMessageBusOutputDataSourceProperties:
      description: The properties that are associated with a Gateway Message Bus.
      properties:
        topic:
          type: string
          description: The name of the Service Bus topic.
      type: object
    OutputListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Output'
          readOnly: true
          description: A list of outputs under a streaming job. Populated by a 'List' operation.
        nextLink:
          type: string
          readOnly: true
          description: The link (url) to the next page of results.
      description: Object containing a list of outputs under a streaming job.
    AzureSqlDatabaseDataSourceProperties:
      type: object
      description: The properties that are associated with an Azure SQL database data source.
      properties:
        server:
          type: string
          description: The name of the SQL server containing the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        database:
          type: string
          description: The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        user:
          type: string
          description: The user name that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        password:
          type: string
          description: The password that will be used to connect to the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        table:
          type: string
          description: The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
        maxBatchCount:
          type: number
          description: Max Batch count for write to Sql database, the default value is 10,000. Optional on PUT requests.
        maxWriterCount:
          type: number
          description: Max Writer count, currently only 1(single writer) and 0(based on query partition) are available. Optional on PUT requests.
        authenticationMode:
          $ref: '#/components/schemas/AuthenticationMode'
          description: Authentication Mode.
    OAuthBasedDataSourceProperties:
      type: object
      description: The properties that are associated with data sources that use OAuth as their authentication model.
      properties:
        refreshToken:
          type: string
          description: A refresh token that can be used to obtain a valid access token that can then be used to authenticate with the data source. A valid refresh token is currently only obtainable via the Azure Portal. It is recommended to put a dummy string value here when creating the data source and then going to the Azure Portal to authenticate the data source which will update this property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
        tokenUserPrincipalName:
          type: string
          description: The user principal name (UPN) of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
        tokenUserDisplayName:
          type: string
          description: The user display name of the user that was used to obtain the refresh token. Use this property to help remember which user was used to obtain the refresh token.
    AuthenticationMode:
      type: string
      description: Authentication Mode. Valid modes are `ConnectionString`, `Msi` and 'UserToken'.
      enum:
        - Msi
        - UserToken
        - ConnectionString
      x-ms-enum:
        name: AuthenticationMode
        modelAsString: true
      default: ConnectionString
    Resource:
      type: object
      description: The base resource definition
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      x-ms-azure-resource: true
    TrackedResource:
      description: The resource model definition for a ARM tracked top level resource
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
      type: object
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code.
            message:
              type: string
              description: Error message.
            target:
              type: string
              description: Error target.
            details:
              type: array
              items:
                $ref: '#/components/schemas/ErrorDetails'
              x-ms-identifiers: []
              description: Error details.
          description: Error definition properties.
      description: Common error representation.
    ErrorDetails:
      type: object
      properties:
        code:
          type: string
          description: Error code.
        target:
          type: string
          description: Error target.
        message:
          type: string
          description: Error message.
      description: Common error details representation.
    Transformation:
      description: A transformation object, containing all information associated with the named transformation. All transformations are contained under a streaming job.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          $ref: '#/components/schemas/TransformationProperties'
          description: The properties that are associated with a transformation. Required on PUT (CreateOrReplace) requests.
          x-ms-client-flatten: true
      type: object
    TransformationProperties:
      type: object
      description: The properties that are associated with a transformation.
      properties:
        streamingUnits:
          type: integer
          format: int32
          description: Specifies the number of streaming units that the streaming job uses.
          default: 3
        validStreamingUnits:
          type: array
          items:
            type: integer
            format: int32
            description: Specifies the number of streaming units that the streaming job can use.
          description: Specifies the valid streaming units a streaming job can scale to.
        query:
          type: string
          description: 'Specifies the query that will be run in the streaming job. You can learn more about the Stream Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT (CreateOrReplace) requests.'
        etag:
          readOnly: true
          type: string
          description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
    SubscriptionQuotasListResult:
      type: object
      description: Result of the GetQuotas operation. It contains a list of quotas for the subscription in a particular region.
      properties:
        value:
          description: List of quotas for the subscription in a particular region.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SubscriptionQuota'
    SubscriptionQuota:
      description: Describes the current quota for the subscription.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          description: Describes the properties of the quota.
          readOnly: true
          properties:
            maxCount:
              description: The max permitted usage of this resource.
              type: integer
              format: int32
              readOnly: true
            currentCount:
              description: The current usage of this resource.
              type: integer
              format: int32
              readOnly: true
          x-ms-client-flatten: true
      type: object
    PrivateEndpoint:
      description: Complete information about the private endpoint.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties associated with a private endpoint.
          $ref: '#/components/schemas/PrivateEndpointProperties'
        etag:
          description: Unique opaque string (generally a GUID) that represents the metadata state of the resource (private endpoint) and changes whenever the resource is updated. Required on PUT (CreateOrUpdate) requests.
          type: string
          readOnly: true
      type: object
    PrivateEndpointProperties:
      type: object
      description: The properties associated with a private endpoint.
      properties:
        createdDate:
          description: The date when this private endpoint was created.
          type: string
          readOnly: true
        manualPrivateLinkServiceConnections:
          description: A list of connections to the remote resource. Immutable after it is set.
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkServiceConnection'
          x-ms-identifiers:
            - /properties/privateLinkServiceId
    PrivateLinkServiceConnection:
      description: A grouping of information about the connection to the remote resource.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Bag of properties defining a privatelinkServiceConnection.
          $ref: '#/components/schemas/PrivateLinkServiceConnectionProperties'
      type: object
    PrivateLinkServiceConnectionProperties:
      type: object
      description: Bag of properties defining a privatelinkServiceConnection.
      properties:
        privateLinkServiceId:
          description: The resource id of the private link service. Required on PUT (CreateOrUpdate) requests.
          type: string
        groupIds:
          description: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to. Required on PUT (CreateOrUpdate) requests.
          type: array
          items:
            type: string
        requestMessage:
          description: A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
          type: string
          readOnly: true
        privateLinkServiceConnectionState:
          description: A collection of read-only information about the state of the connection to the private remote resource.
          $ref: '#/components/schemas/PrivateLinkConnectionState'
    PrivateLinkConnectionState:
      type: object
      description: A collection of read-only information about the state of the connection to the private remote resource.
      properties:
        status:
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the remote resource/service.
          type: string
          readOnly: true
        description:
          description: The reason for approval/rejection of the connection.
          type: string
          readOnly: true
        actionsRequired:
          description: A message indicating if changes on the service provider require any updates on the consumer.
          type: string
          readOnly: true
    PrivateEndpointListResult:
      type: object
      description: A list of private endpoints.
      properties:
        value:
          description: A list of private endpoints.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpoint'
          readOnly: true
        nextLink:
          description: The URL to fetch the next set of private endpoints.
          type: string
          readOnly: true
  x-stackQL-resources:
    inputs:
      id: azure.stream_analytics.inputs
      name: inputs
      title: inputs
      methods:
        create_or_replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}?api-version=2020-03-01/put'
            operationId: Inputs_CreateOrReplace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Input
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}?api-version=2020-03-01/patch'
            operationId: Inputs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Input
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}?api-version=2020-03-01/delete'
            operationId: Inputs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}?api-version=2020-03-01/get'
            operationId: Inputs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Input
        list_by_streaming_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs?api-version=2020-03-01/get'
            operationId: Inputs_ListByStreamingJob
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InputListResult
            objectKey: $.value
        test:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1inputs~1{inputName}~1test?api-version=2020-03-01/post'
            operationId: Inputs_Test
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceTestStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inputs/methods/get'
          - $ref: '#/components/x-stackQL-resources/inputs/methods/list_by_streaming_job'
        insert:
          - $ref: '#/components/x-stackQL-resources/inputs/methods/create_or_replace'
        update:
          - $ref: '#/components/x-stackQL-resources/inputs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/inputs/methods/delete'
    operations:
      id: azure.stream_analytics.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.StreamAnalytics~1operations?api-version=2020-03-01/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    streaming_jobs:
      id: azure.stream_analytics.streaming_jobs
      name: streaming_jobs
      title: streaming_jobs
      methods:
        create_or_replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}?api-version=2020-03-01/put'
            operationId: StreamingJobs_CreateOrReplace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingJob
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}?api-version=2020-03-01/patch'
            operationId: StreamingJobs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingJob
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}?api-version=2020-03-01/delete'
            operationId: StreamingJobs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}?api-version=2020-03-01/get'
            operationId: StreamingJobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingJob
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs?api-version=2020-03-01/get'
            operationId: StreamingJobs_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingJobListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StreamAnalytics~1streamingjobs?api-version=2020-03-01/get'
            operationId: StreamingJobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: StreamingJobListResult
            objectKey: $.value
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1start?api-version=2020-03-01/post'
            operationId: StreamingJobs_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1stop?api-version=2020-03-01/post'
            operationId: StreamingJobs_Stop
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        scale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1scale?api-version=2020-03-01/post'
            operationId: StreamingJobs_Scale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/create_or_replace'
        update:
          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/streaming_jobs/methods/delete'
    functions:
      id: azure.stream_analytics.functions
      name: functions
      title: functions
      methods:
        create_or_replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}?api-version=2020-03-01/put'
            operationId: Functions_CreateOrReplace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Function
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}?api-version=2020-03-01/patch'
            operationId: Functions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Function
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}?api-version=2020-03-01/delete'
            operationId: Functions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}?api-version=2020-03-01/get'
            operationId: Functions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Function
        list_by_streaming_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions?api-version=2020-03-01/get'
            operationId: Functions_ListByStreamingJob
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FunctionListResult
            objectKey: $.value
        test:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1test?api-version=2020-03-01/post'
            operationId: Functions_Test
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceTestStatus
        retrieve_default_definition:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1functions~1{functionName}~1retrieveDefaultDefinition?api-version=2020-03-01/post'
            operationId: Functions_RetrieveDefaultDefinition
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Function
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/functions/methods/get'
          - $ref: '#/components/x-stackQL-resources/functions/methods/list_by_streaming_job'
        insert:
          - $ref: '#/components/x-stackQL-resources/functions/methods/create_or_replace'
        update:
          - $ref: '#/components/x-stackQL-resources/functions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/functions/methods/delete'
    clusters:
      id: azure.stream_analytics.clusters
      name: clusters
      title: clusters
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}?api-version=2020-03-01/put'
            operationId: Clusters_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}?api-version=2020-03-01/patch'
            operationId: Clusters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}?api-version=2020-03-01/get'
            operationId: Clusters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Cluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}?api-version=2020-03-01/delete'
            operationId: Clusters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StreamAnalytics~1clusters?api-version=2020-03-01/get'
            operationId: Clusters_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters?api-version=2020-03-01/get'
            operationId: Clusters_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete'
    clusters_streaming_jobs:
      id: azure.stream_analytics.clusters_streaming_jobs
      name: clusters_streaming_jobs
      title: clusters_streaming_jobs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1listStreamingJobs?api-version=2020-03-01/post'
            operationId: ClustersStreamingJobs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterJobListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/clusters_streaming_jobs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    outputs:
      id: azure.stream_analytics.outputs
      name: outputs
      title: outputs
      methods:
        create_or_replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}?api-version=2020-03-01/put'
            operationId: Outputs_CreateOrReplace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Output
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}?api-version=2020-03-01/patch'
            operationId: Outputs_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Output
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}?api-version=2020-03-01/delete'
            operationId: Outputs_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}?api-version=2020-03-01/get'
            operationId: Outputs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Output
        list_by_streaming_job:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs?api-version=2020-03-01/get'
            operationId: Outputs_ListByStreamingJob
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OutputListResult
            objectKey: $.value
        test:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1outputs~1{outputName}~1test?api-version=2020-03-01/post'
            operationId: Outputs_Test
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceTestStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/outputs/methods/get'
          - $ref: '#/components/x-stackQL-resources/outputs/methods/list_by_streaming_job'
        insert:
          - $ref: '#/components/x-stackQL-resources/outputs/methods/create_or_replace'
        update:
          - $ref: '#/components/x-stackQL-resources/outputs/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/outputs/methods/delete'
    transformations:
      id: azure.stream_analytics.transformations
      name: transformations
      title: transformations
      methods:
        create_or_replace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1transformations~1{transformationName}?api-version=2020-03-01/put'
            operationId: Transformations_CreateOrReplace
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Transformation
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1transformations~1{transformationName}?api-version=2020-03-01/patch'
            operationId: Transformations_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Transformation
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1streamingjobs~1{jobName}~1transformations~1{transformationName}?api-version=2020-03-01/get'
            operationId: Transformations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Transformation
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/transformations/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/transformations/methods/create_or_replace'
        update:
          - $ref: '#/components/x-stackQL-resources/transformations/methods/update'
        replace: []
        delete: []
    subscriptions_quotas:
      id: azure.stream_analytics.subscriptions_quotas
      name: subscriptions_quotas
      title: subscriptions_quotas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.StreamAnalytics~1locations~1{location}~1quotas?api-version=2020-03-01/get'
            operationId: SubscriptionsQuotas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionQuotasListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/subscriptions_quotas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    private_endpoints:
      id: azure.stream_analytics.private_endpoints
      name: private_endpoints
      title: private_endpoints
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints~1{privateEndpointName}?api-version=2020-03-01/put'
            operationId: PrivateEndpoints_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpoint
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints~1{privateEndpointName}?api-version=2020-03-01/get'
            operationId: PrivateEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints~1{privateEndpointName}?api-version=2020-03-01/delete'
            operationId: PrivateEndpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_cluster:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.StreamAnalytics~1clusters~1{clusterName}~1privateEndpoints?api-version=2020-03-01/get'
            operationId: PrivateEndpoints_ListByCluster
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/list_by_cluster'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoints/methods/delete'
    vw_inputs:
      id: azure.stream_analytics.vw_inputs
      name: vw_inputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.serialization') as "serialization",
              JSON_EXTRACT(properties, '$.diagnostics') as "diagnostics",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              JSON_EXTRACT(properties, '$.compression') as "compression",
              JSON_EXTRACT(properties, '$.partitionKey') as "partition_key",
              subscriptionId,
              resourceGroupName,
              jobName,
              inputName
              FROM azure.stream_analytics.inputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.serialization') as "serialization",
                json_extract_path_text(properties, '$.diagnostics') as "diagnostics",
                json_extract_path_text(properties, '$.etag') as "etag",
                json_extract_path_text(properties, '$.compression') as "compression",
                json_extract_path_text(properties, '$.partitionKey') as "partition_key",
                subscriptionId,
                resourceGroupName,
                jobName,
                inputName
                FROM azure.stream_analytics.inputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me';
    vw_streaming_jobs:
      id: azure.stream_analytics.vw_streaming_jobs
      name: vw_streaming_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.sku') as "sku",
              JSON_EXTRACT(properties, '$.jobId') as "job_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.jobState') as "job_state",
              JSON_EXTRACT(properties, '$.jobType') as "job_type",
              JSON_EXTRACT(properties, '$.outputStartMode') as "output_start_mode",
              JSON_EXTRACT(properties, '$.outputStartTime') as "output_start_time",
              JSON_EXTRACT(properties, '$.lastOutputEventTime') as "last_output_event_time",
              JSON_EXTRACT(properties, '$.eventsOutOfOrderPolicy') as "events_out_of_order_policy",
              JSON_EXTRACT(properties, '$.outputErrorPolicy') as "output_error_policy",
              JSON_EXTRACT(properties, '$.eventsOutOfOrderMaxDelayInSeconds') as "events_out_of_order_max_delay_in_seconds",
              JSON_EXTRACT(properties, '$.eventsLateArrivalMaxDelayInSeconds') as "events_late_arrival_max_delay_in_seconds",
              JSON_EXTRACT(properties, '$.dataLocale') as "data_locale",
              JSON_EXTRACT(properties, '$.compatibilityLevel') as "compatibility_level",
              JSON_EXTRACT(properties, '$.createdDate') as "created_date",
              JSON_EXTRACT(properties, '$.inputs') as "inputs",
              JSON_EXTRACT(properties, '$.transformation') as "transformation",
              JSON_EXTRACT(properties, '$.outputs') as "outputs",
              JSON_EXTRACT(properties, '$.functions') as "functions",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              JSON_EXTRACT(properties, '$.jobStorageAccount') as "job_storage_account",
              JSON_EXTRACT(properties, '$.contentStoragePolicy') as "content_storage_policy",
              JSON_EXTRACT(properties, '$.cluster') as "cluster",
              subscriptionId,
              resourceGroupName,
              jobName
              FROM azure.stream_analytics.streaming_jobs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.sku') as "sku",
                json_extract_path_text(properties, '$.jobId') as "job_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.jobState') as "job_state",
                json_extract_path_text(properties, '$.jobType') as "job_type",
                json_extract_path_text(properties, '$.outputStartMode') as "output_start_mode",
                json_extract_path_text(properties, '$.outputStartTime') as "output_start_time",
                json_extract_path_text(properties, '$.lastOutputEventTime') as "last_output_event_time",
                json_extract_path_text(properties, '$.eventsOutOfOrderPolicy') as "events_out_of_order_policy",
                json_extract_path_text(properties, '$.outputErrorPolicy') as "output_error_policy",
                json_extract_path_text(properties, '$.eventsOutOfOrderMaxDelayInSeconds') as "events_out_of_order_max_delay_in_seconds",
                json_extract_path_text(properties, '$.eventsLateArrivalMaxDelayInSeconds') as "events_late_arrival_max_delay_in_seconds",
                json_extract_path_text(properties, '$.dataLocale') as "data_locale",
                json_extract_path_text(properties, '$.compatibilityLevel') as "compatibility_level",
                json_extract_path_text(properties, '$.createdDate') as "created_date",
                json_extract_path_text(properties, '$.inputs') as "inputs",
                json_extract_path_text(properties, '$.transformation') as "transformation",
                json_extract_path_text(properties, '$.outputs') as "outputs",
                json_extract_path_text(properties, '$.functions') as "functions",
                json_extract_path_text(properties, '$.etag') as "etag",
                json_extract_path_text(properties, '$.jobStorageAccount') as "job_storage_account",
                json_extract_path_text(properties, '$.contentStoragePolicy') as "content_storage_policy",
                json_extract_path_text(properties, '$.cluster') as "cluster",
                subscriptionId,
                resourceGroupName,
                jobName
                FROM azure.stream_analytics.streaming_jobs
                WHERE subscriptionId = 'replace-me';
    vw_functions:
      id: azure.stream_analytics.vw_functions
      name: vw_functions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              JSON_EXTRACT(properties, '$.properties') as "properties",
              subscriptionId,
              resourceGroupName,
              jobName,
              functionName
              FROM azure.stream_analytics.functions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.etag') as "etag",
                json_extract_path_text(properties, '$.properties') as "properties",
                subscriptionId,
                resourceGroupName,
                jobName,
                functionName
                FROM azure.stream_analytics.functions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me';
    vw_clusters:
      id: azure.stream_analytics.vw_clusters
      name: vw_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              sku as sku,
              etag as etag,
              JSON_EXTRACT(properties, '$.createdDate') as "created_date",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.capacityAllocated') as "capacity_allocated",
              JSON_EXTRACT(properties, '$.capacityAssigned') as "capacity_assigned",
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure.stream_analytics.clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                sku as sku,
                etag as etag,
                json_extract_path_text(properties, '$.createdDate') as "created_date",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.capacityAllocated') as "capacity_allocated",
                json_extract_path_text(properties, '$.capacityAssigned') as "capacity_assigned",
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure.stream_analytics.clusters
                WHERE subscriptionId = 'replace-me';
    vw_outputs:
      id: azure.stream_analytics.vw_outputs
      name: vw_outputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.datasource') as "datasource",
              JSON_EXTRACT(properties, '$.timeWindow') as "time_window",
              JSON_EXTRACT(properties, '$.sizeWindow') as "size_window",
              JSON_EXTRACT(properties, '$.serialization') as "serialization",
              JSON_EXTRACT(properties, '$.diagnostics') as "diagnostics",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              subscriptionId,
              resourceGroupName,
              jobName,
              outputName
              FROM azure.stream_analytics.outputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.datasource') as "datasource",
                json_extract_path_text(properties, '$.timeWindow') as "time_window",
                json_extract_path_text(properties, '$.sizeWindow') as "size_window",
                json_extract_path_text(properties, '$.serialization') as "serialization",
                json_extract_path_text(properties, '$.diagnostics') as "diagnostics",
                json_extract_path_text(properties, '$.etag') as "etag",
                subscriptionId,
                resourceGroupName,
                jobName,
                outputName
                FROM azure.stream_analytics.outputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me';
    vw_transformations:
      id: azure.stream_analytics.vw_transformations
      name: vw_transformations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.streamingUnits') as "streaming_units",
              JSON_EXTRACT(properties, '$.validStreamingUnits') as "valid_streaming_units",
              JSON_EXTRACT(properties, '$.query') as "query",
              JSON_EXTRACT(properties, '$.etag') as "etag",
              subscriptionId,
              resourceGroupName,
              jobName,
              transformationName
              FROM azure.stream_analytics.transformations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me' AND transformationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.streamingUnits') as "streaming_units",
                json_extract_path_text(properties, '$.validStreamingUnits') as "valid_streaming_units",
                json_extract_path_text(properties, '$.query') as "query",
                json_extract_path_text(properties, '$.etag') as "etag",
                subscriptionId,
                resourceGroupName,
                jobName,
                transformationName
                FROM azure.stream_analytics.transformations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND jobName = 'replace-me' AND transformationName = 'replace-me';
    vw_private_endpoints:
      id: azure.stream_analytics.vw_private_endpoints
      name: vw_private_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              etag as etag,
              JSON_EXTRACT(properties, '$.createdDate') as "created_date",
              JSON_EXTRACT(properties, '$.manualPrivateLinkServiceConnections') as "manual_private_link_service_connections",
              subscriptionId,
              resourceGroupName,
              clusterName,
              privateEndpointName
              FROM azure.stream_analytics.private_endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                etag as etag,
                json_extract_path_text(properties, '$.createdDate') as "created_date",
                json_extract_path_text(properties, '$.manualPrivateLinkServiceConnections') as "manual_private_link_service_connections",
                subscriptionId,
                resourceGroupName,
                clusterName,
                privateEndpointName
                FROM azure.stream_analytics.private_endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}?api-version=2020-03-01:
    put:
      tags:
        - Inputs
      operationId: Inputs_CreateOrReplace
      description: Creates an input or replaces an already existing input under an existing streaming job.
      requestBody:
        description: The definition of the input that will be used to create a new input or replace the existing one under the streaming job.
        required: true
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new input to be created, but to prevent updating an existing input. Other values will result in a 412 Pre-condition Failed response.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/InputNameParameter'
      responses:
        '200':
          description: The input was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        '201':
          description: The input was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Inputs
      operationId: Inputs_Update
      description: Updates an existing input under an existing streaming job. This can be used to partially update (ie. update one or two properties) an input without affecting the rest the job or input definition.
      requestBody:
        description: An Input object. The properties specified here will overwrite the corresponding properties in the existing input (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing input will remain the same and not change as a result of this PATCH operation.
        required: true
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/InputNameParameter'
      responses:
        '200':
          description: The input was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Inputs
      operationId: Inputs_Delete
      description: Deletes an input from the streaming job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/InputNameParameter'
      responses:
        '200':
          description: The input was successfully deleted.
        '204':
          description: The input does not exist.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Inputs
      operationId: Inputs_Get
      description: Gets details about the specified input.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/InputNameParameter'
      responses:
        '200':
          description: Successfully retrieved the specified input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs?api-version=2020-03-01:
    get:
      tags:
        - Inputs
      operationId: Inputs_ListByStreamingJob
      description: Lists all of the inputs under the specified streaming job.
      parameters:
        - name: $select
          in: query
          description: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or "*" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: Successfully listed the inputs under the specified streaming job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InputListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}/test?api-version=2020-03-01:
    post:
      tags:
        - Inputs
      operationId: Inputs_Test
      description: Tests whether an input’s datasource is reachable and usable by the Azure Stream Analytics service.
      requestBody:
        description: If the input specified does not already exist, this parameter must contain the full input definition intended to be tested. If the input specified already exists, this parameter can be left null to test the existing input as is or if specified, the properties specified will overwrite the corresponding properties in the existing input (exactly like a PATCH operation) and the resulting input will be tested.
        required: false
        x-ms-requestBody-name: input
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/InputNameParameter'
      responses:
        '200':
          description: The test operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTestStatus'
        '202':
          description: The test request was successfully initiated.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /providers/Microsoft.StreamAnalytics/operations?api-version=2020-03-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Stream Analytics related operations.
      parameters: []
      responses:
        '200':
          description: Successfully listed the available operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}?api-version=2020-03-01:
    put:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_CreateOrReplace
      description: Creates a streaming job or replaces an already existing streaming job.
      requestBody:
        description: The definition of the streaming job that will be used to create a new streaming job or replace the existing one.
        required: true
        x-ms-requestBody-name: streamingJob
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingJob'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new streaming job to be created, but to prevent updating an existing record set. Other values will result in a 412 Pre-condition Failed response.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: The streaming job was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingJob'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        '201':
          description: The streaming job was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingJob'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
    patch:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_Update
      description: Updates an existing streaming job. This can be used to partially update (ie. update one or two properties) a streaming job without affecting the rest the job definition.
      requestBody:
        description: A streaming job object. The properties specified here will overwrite the corresponding properties in the existing streaming job (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing input will remain the same and not change as a result of this PATCH operation.
        required: true
        x-ms-requestBody-name: streamingJob
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamingJob'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the streaming job. Omit this value to always overwrite the current record set. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: The streaming job was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingJob'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_Delete
      description: Deletes a streaming job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: The streaming job was successfully deleted.
        '202':
          description: The delete request was successfully initiated.
        '204':
          description: The streaming job does not exist.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
    get:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_Get
      description: Gets details about the specified streaming job.
      parameters:
        - name: $expand
          in: query
          description: The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: Successfully retrieved the specified streaming job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingJob'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the streaming job. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs?api-version=2020-03-01:
    get:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_ListByResourceGroup
      description: Lists all of the streaming jobs in the specified resource group.
      parameters:
        - name: $expand
          in: query
          description: The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Successfully listed the streaming jobs under the specified resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingJobListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/streamingjobs?api-version=2020-03-01:
    get:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_List
      description: Lists all of the streaming jobs in the given subscription.
      parameters:
        - name: $expand
          in: query
          description: The $expand OData query parameter. This is a comma-separated list of additional streaming job properties to include in the response, beyond the default set returned when this parameter is absent. The default set is all streaming job properties other than 'inputs', 'transformation', 'outputs', and 'functions'.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully listed the streaming jobs under the given subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamingJobListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/start?api-version=2020-03-01:
    post:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_Start
      description: Starts a streaming job. Once a job is started it will start processing input events and produce output.
      requestBody:
        description: Parameters applicable to a start streaming job operation.
        required: false
        x-ms-requestBody-name: startJobParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartStreamingJobParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: The streaming job was successfully started.
        '202':
          description: The start streaming job request was successfully initiated.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/stop?api-version=2020-03-01:
    post:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_Stop
      description: Stops a running streaming job. This will cause a running streaming job to stop processing input events and producing output.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: The streaming job was successfully stopped.
        '202':
          description: The stop streaming job request was successfully initiated.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/scale?api-version=2020-03-01:
    post:
      tags:
        - StreamingJobs
      operationId: StreamingJobs_Scale
      description: Scales a streaming job when the job is running.
      requestBody:
        description: Parameters applicable to a scale streaming job operation.
        required: false
        x-ms-requestBody-name: scaleJobParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScaleStreamingJobParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: The scale streaming job request succeeded.
        '202':
          description: The scale streaming job request was successfully initiated.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}?api-version=2020-03-01:
    put:
      tags:
        - Functions
      operationId: Functions_CreateOrReplace
      description: Creates a function or replaces an already existing function under an existing streaming job.
      requestBody:
        description: The definition of the function that will be used to create a new function or replace the existing one under the streaming job.
        required: true
        x-ms-requestBody-name: function
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Function'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the function. Omit this value to always overwrite the current function. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new function to be created, but to prevent updating an existing function. Other values will result in a 412 Pre-condition Failed response.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/FunctionNameParameter'
      responses:
        '200':
          description: The function was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        '201':
          description: The function was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Functions
      operationId: Functions_Update
      description: Updates an existing function under an existing streaming job. This can be used to partially update (ie. update one or two properties) a function without affecting the rest the job or function definition.
      requestBody:
        description: A function object. The properties specified here will overwrite the corresponding properties in the existing function (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing function will remain the same and not change as a result of this PATCH operation.
        required: true
        x-ms-requestBody-name: function
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Function'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the function. Omit this value to always overwrite the current function. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/FunctionNameParameter'
      responses:
        '200':
          description: The function was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Functions
      operationId: Functions_Delete
      description: Deletes a function from the streaming job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/FunctionNameParameter'
      responses:
        '200':
          description: The function was successfully deleted.
        '204':
          description: The function does not exist.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Functions
      operationId: Functions_Get
      description: Gets details about the specified function.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/FunctionNameParameter'
      responses:
        '200':
          description: Successfully retrieved the specified function.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the function. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions?api-version=2020-03-01:
    get:
      tags:
        - Functions
      operationId: Functions_ListByStreamingJob
      description: Lists all of the functions under the specified streaming job.
      parameters:
        - name: $select
          in: query
          description: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or "*" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: Successfully listed the functions under the specified streaming job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}/test?api-version=2020-03-01:
    post:
      tags:
        - Functions
      operationId: Functions_Test
      description: Tests if the information provided for a function is valid. This can range from testing the connection to the underlying web service behind the function or making sure the function code provided is syntactically correct.
      requestBody:
        description: If the function specified does not already exist, this parameter must contain the full function definition intended to be tested. If the function specified already exists, this parameter can be left null to test the existing function as is or if specified, the properties specified will overwrite the corresponding properties in the existing function (exactly like a PATCH operation) and the resulting function will be tested.
        required: false
        x-ms-requestBody-name: function
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Function'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/FunctionNameParameter'
      responses:
        '200':
          description: The test operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTestStatus'
        '202':
          description: The test request was successfully initiated.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/functions/{functionName}/retrieveDefaultDefinition?api-version=2020-03-01:
    post:
      tags:
        - Functions
      operationId: Functions_RetrieveDefaultDefinition
      description: Retrieves the default definition of a function based on the parameters specified.
      requestBody:
        description: Parameters used to specify the type of function to retrieve the default definition for.
        required: false
        x-ms-requestBody-name: functionRetrieveDefaultDefinitionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionRetrieveDefaultDefinitionParameters'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/FunctionNameParameter'
      responses:
        '200':
          description: Successfully retrieved the function's default definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}?api-version=2020-03-01:
    put:
      tags:
        - Clusters
      description: Creates a Stream Analytics Cluster or replaces an already existing cluster.
      operationId: Clusters_CreateOrUpdate
      requestBody:
        description: The definition of the cluster that will be used to create a new cluster or replace the existing one.
        required: true
        x-ms-requestBody-name: cluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/IfMatchHeader'
        - $ref: '#/components/parameters/IfNoneMatchHeader'
      responses:
        '200':
          description: The cluster was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '201':
          description: The cluster was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Clusters
      description: Updates an existing cluster. This can be used to partially update (ie. update one or two properties) a cluster without affecting the rest of the cluster definition.
      operationId: Clusters_Update
      requestBody:
        description: The properties specified here will overwrite the corresponding properties in the existing cluster (ie. Those properties will be updated).
        required: true
        x-ms-requestBody-name: cluster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/IfMatchHeader'
      responses:
        '200':
          description: The cluster was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        '202':
          description: The update request was successfully initiated.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
    get:
      tags:
        - Clusters
      description: Gets information about the specified cluster.
      operationId: Clusters_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Successfully retrieved the specified cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Clusters
      description: Deletes the specified cluster.
      operationId: Clusters_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: The cluster was successfully deleted.
        '202':
          description: The delete request was successfully initiated.
        '204':
          description: The cluster does not exist.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/clusters?api-version=2020-03-01:
    get:
      tags:
        - Clusters
      description: Lists all of the clusters in the given subscription.
      operationId: Clusters_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully listed the clusters under the specified subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters?api-version=2020-03-01:
    get:
      tags:
        - Clusters
      description: Lists all of the clusters in the given resource group.
      operationId: Clusters_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Successfully listed the clusters under the specified resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/listStreamingJobs?api-version=2020-03-01:
    post:
      tags:
        - Clusters
      description: Lists all of the streaming jobs in the given cluster.
      operationId: ClustersStreamingJobs_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Successfully listed the streaming jobs in the specified cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterJobListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-original-operationId: Clusters_ListStreamingJobs
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}?api-version=2020-03-01:
    put:
      tags:
        - Outputs
      operationId: Outputs_CreateOrReplace
      description: Creates an output or replaces an already existing output under an existing streaming job.
      requestBody:
        description: The definition of the output that will be used to create a new output or replace the existing one under the streaming job.
        required: true
        x-ms-requestBody-name: output
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Output'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/OutputNameParameter'
      responses:
        '200':
          description: The output was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        '201':
          description: The output was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Outputs
      operationId: Outputs_Update
      description: Updates an existing output under an existing streaming job. This can be used to partially update (ie. update one or two properties) an output without affecting the rest the job or output definition.
      requestBody:
        description: An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation.
        required: true
        x-ms-requestBody-name: output
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Output'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/OutputNameParameter'
      responses:
        '200':
          description: The output was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Outputs
      operationId: Outputs_Delete
      description: Deletes an output from the streaming job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/OutputNameParameter'
      responses:
        '200':
          description: The output was successfully deleted.
        '204':
          description: The output does not exist.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Outputs
      operationId: Outputs_Get
      description: Gets details about the specified output.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/OutputNameParameter'
      responses:
        '200':
          description: Successfully retrieved the specified output.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the output. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs?api-version=2020-03-01:
    get:
      tags:
        - Outputs
      operationId: Outputs_ListByStreamingJob
      description: Lists all of the outputs under the specified streaming job.
      parameters:
        - name: $select
          in: query
          description: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or "*" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
      responses:
        '200':
          description: Successfully listed the outputs under the specified streaming job.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}/test?api-version=2020-03-01:
    post:
      tags:
        - Outputs
      operationId: Outputs_Test
      description: Tests whether an output’s datasource is reachable and usable by the Azure Stream Analytics service.
      requestBody:
        description: If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.
        required: false
        x-ms-requestBody-name: output
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Output'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/OutputNameParameter'
      responses:
        '200':
          description: The test operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTestStatus'
        '202':
          description: The test request was successfully initiated.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/transformations/{transformationName}?api-version=2020-03-01:
    put:
      tags:
        - Transformations
      operationId: Transformations_CreateOrReplace
      description: Creates a transformation or replaces an already existing transformation under an existing streaming job.
      requestBody:
        description: The definition of the transformation that will be used to create a new transformation or replace the existing one under the streaming job.
        required: true
        x-ms-requestBody-name: transformation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transformation'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current transformation. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new transformation to be created, but to prevent updating an existing transformation. Other values will result in a 412 Pre-condition Failed response.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/TransformationNameParameter'
      responses:
        '200':
          description: The transformation was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transformation'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        '201':
          description: The transformation was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transformation'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Transformations
      operationId: Transformations_Update
      description: Updates an existing transformation under an existing streaming job. This can be used to partially update (ie. update one or two properties) a transformation without affecting the rest the job or transformation definition.
      requestBody:
        description: A Transformation object. The properties specified here will overwrite the corresponding properties in the existing transformation (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing transformation will remain the same and not change as a result of this PATCH operation.
        required: true
        x-ms-requestBody-name: transformation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transformation'
      parameters:
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current transformation. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/TransformationNameParameter'
      responses:
        '200':
          description: The transformation was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transformation'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Transformations
      operationId: Transformations_Get
      description: Gets details about the specified transformation.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/StreamingJobNameParameter'
        - $ref: '#/components/parameters/TransformationNameParameter'
      responses:
        '200':
          description: Successfully retrieved the specified transformation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transformation'
          headers:
            ETag:
              schema:
                type: string
              description: The current entity tag for the transformation. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.StreamAnalytics/locations/{location}/quotas?api-version=2020-03-01:
    get:
      tags:
        - Subscriptions
      operationId: SubscriptionsQuotas_List
      description: Retrieves the subscription's current quota information in a particular region.
      parameters:
        - name: location
          in: path
          description: 'The region in which to retrieve the subscription''s quota information. You can find out which regions Azure Stream Analytics is supported in here: https://azure.microsoft.com/en-us/regions/'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the subscription's quota information in the specified region.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionQuotasListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-original-operationId: Subscriptions_ListQuotas
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints/{privateEndpointName}?api-version=2020-03-01:
    put:
      tags:
        - PrivateEndpoints
      description: Creates a Stream Analytics Private Endpoint or replaces an already existing Private Endpoint.
      operationId: PrivateEndpoints_CreateOrUpdate
      requestBody:
        description: The definition of the private endpoint that will be used to create a new cluster or replace the existing one.
        required: true
        x-ms-requestBody-name: privateEndpoint
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpoint'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointNameParameter'
        - $ref: '#/components/parameters/IfMatchHeader'
        - $ref: '#/components/parameters/IfNoneMatchHeader'
      responses:
        '200':
          description: The private endpoint was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpoint'
        '201':
          description: The private endpoint was successfully created or replaced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpoint'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - PrivateEndpoints
      description: Gets information about the specified Private Endpoint.
      operationId: PrivateEndpoints_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointNameParameter'
      responses:
        '200':
          description: Successfully retrieved the specified private endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpoint'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - PrivateEndpoints
      description: Delete the specified private endpoint.
      operationId: PrivateEndpoints_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointNameParameter'
      responses:
        '200':
          description: The private endpoint was successfully deleted.
        '202':
          description: The delete request was successfully initiated.
        '204':
          description: The private endpoint does not exist.
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/clusters/{clusterName}/privateEndpoints?api-version=2020-03-01:
    get:
      tags:
        - PrivateEndpoints
      description: Lists the private endpoints in the cluster.
      operationId: PrivateEndpoints_ListByCluster
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ClusterNameParameter'
      responses:
        '200':
          description: Successfully listed the private endpoints under the specified cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointListResult'
        default:
          description: Error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-ms-pageable:
        nextLinkName: nextLink
