openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Maps
  description: Azure Maps is a set of mapping and geospatial services that enable developers and organizations to build intelligent location-based experiences for applications across many different industries and use cases. Use Azure Maps to bring maps, geocoding, location search, routing, real-time traffic, geolocation, time zone information and weather data into your web, mobile and server-side solutions.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    AccountNameParameter:
      name: accountName
      in: path
      description: The name of the Maps Account.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[^%&:\\/#?]+$
        type: string
    CreatorNameParameter:
      name: creatorName
      in: path
      description: The name of the Maps Creator instance.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        pattern: ^[^%&:\\/#?]+$
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Creator:
      description: An Azure resource which represents Maps Creator product and provides ability to manage private location data.
      required:
        - properties
      x-ms-azure-resource: true
      properties:
        properties:
          description: The Creator resource properties.
          $ref: '#/components/schemas/CreatorProperties'
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MapsAccount:
      description: An Azure resource which represents access to a suite of Maps REST APIs.
      required:
        - sku
      x-ms-azure-resource: true
      properties:
        sku:
          description: The SKU of this account.
          $ref: '#/components/schemas/Sku'
        kind:
          description: Get or Set Kind property.
          $ref: '#/components/schemas/Kind'
        systemData:
          $ref: '#/components/schemas/systemData'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          description: The map account properties.
          $ref: '#/components/schemas/MapsAccountProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    MapsAccountUpdateParameters:
      description: Parameters used to update an existing Maps Account.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
        kind:
          description: Get or Set Kind property.
          $ref: '#/components/schemas/Kind'
        sku:
          description: The SKU of this account.
          $ref: '#/components/schemas/Sku'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          description: The map account properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MapsAccountProperties'
      type: object
    CreatorUpdateParameters:
      description: Parameters used to update an existing Creator resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
        properties:
          description: Creator resource properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreatorProperties'
      type: object
    MapsAccounts:
      description: A list of Maps Accounts.
      type: object
      properties:
        value:
          description: a Maps Account.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MapsAccount'
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    CreatorList:
      description: A list of Creator resources.
      type: object
      properties:
        value:
          description: a Creator account.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Creator'
        nextLink:
          description: "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use."
          type: string
    Kind:
      description: The Kind of the Maps Account.
      type: string
      enum:
        - Gen2
      x-ms-enum:
        name: kind
        modelAsString: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    MapsKeySpecification:
      description: Whether the operation refers to the primary or secondary key.
      type: object
      required:
        - keyType
      properties:
        keyType:
          type: string
          enum:
            - primary
            - secondary
          x-ms-enum:
            name: KeyType
            modelAsString: true
          description: Whether the operation refers to the primary or secondary key.
    MapsAccountKeys:
      description: The set of keys which can be used to access the Maps REST APIs. Two keys are provided for key rotation without interruption.
      type: object
      properties:
        primaryKeyLastUpdated:
          type: string
          readOnly: true
          description: The last updated date and time of the primary key.
        primaryKey:
          type: string
          readOnly: true
          description: The primary key for accessing the Maps REST APIs.
        secondaryKey:
          type: string
          readOnly: true
          description: The secondary key for accessing the Maps REST APIs.
        secondaryKeyLastUpdated:
          type: string
          readOnly: true
          description: The last updated date and time of the secondary key.
    AccountSasParameters:
      description: Parameters used to create an account Shared Access Signature (SAS) token. The REST API access control is provided by Azure Maps Role Based Access (RBAC) identity and access.
      type: object
      properties:
        signingKey:
          type: string
          description: The Maps account key to use for signing. Picking `primaryKey` or `secondaryKey` will use the Maps account Shared Keys, and using `managedIdentity` will use the auto-renewed private key to sign the SAS.
          enum:
            - primaryKey
            - secondaryKey
            - managedIdentity
          x-ms-enum:
            name: SigningKey
            modelAsString: true
        principalId:
          description: The principal Id also known as the object Id of a User Assigned Managed Identity currently assigned to the Maps Account. To assign a Managed Identity of the account, use operation Create or Update an assign a User Assigned Identity resource Id.
          type: string
        regions:
          type: array
          items:
            type: string
          description: 'Optional, allows control of which region locations are permitted access to Azure Maps REST APIs with the SAS token. Example: "eastus", "westus2". Omitting this parameter will allow all region locations to be accessible.'
        maxRatePerSecond:
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          format: int32
          exclusiveMinimum: true
          description: Required parameter which represents the desired maximum request per second to allowed for the given SAS token. This does not guarantee perfect accuracy in measurements but provides application safe guards of abuse with eventual enforcement.
        start:
          description: The date time offset of when the token validity begins. For example "2017-05-24T10:42:03.1567373Z". Maximum duration allowed is 24 hours between `start` and `expiry`.
          type: string
        expiry:
          description: The date time offset of when the token validity expires. For example "2017-05-24T10:42:03.1567373Z". Maximum duration allowed is 24 hours between `start` and `expiry`.
          type: string
      required:
        - signingKey
        - principalId
        - maxRatePerSecond
        - start
        - expiry
    MapsAccountSasToken:
      description: A new Sas token which can be used to access the Maps REST APIs and is controlled by the specified Managed identity permissions on Azure (IAM) Role Based Access Control.
      type: object
      properties:
        accountSasToken:
          type: string
          readOnly: true
          description: The shared access signature access token.
    MapsAccountProperties:
      description: Additional Maps account properties
      type: object
      properties:
        uniqueId:
          description: A unique identifier for the Maps Account
          type: string
          readOnly: true
        disableLocalAuth:
          description: Allows toggle functionality on Azure Policy to disable Azure Maps local authentication support. This will disable Shared Keys and Shared Access Signature Token authentication from any usage.
          type: boolean
          default: false
        provisioningState:
          type: string
          description: 'The provisioning state of the Maps account resource, Account updates can only be performed on terminal states. Terminal states: `Succeeded` and `Failed`'
          readOnly: true
        linkedResources:
          $ref: '#/components/schemas/LinkedResources'
        cors:
          $ref: '#/components/schemas/CorsRules'
          description: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
        encryption:
          $ref: '#/components/schemas/encryption'
        locations:
          $ref: '#/components/schemas/Locations'
          description: List of additional data processing regions for the Maps Account, which may result in requests being processed in another geography. Some features or results may be restricted to specific regions. By default, Maps REST APIs process requests according to the account location or the [geographic scope](https://learn.microsoft.com/azure/azure-maps/geographic-scope).
    LinkedResources:
      type: array
      maxItems: 10
      items:
        $ref: '#/components/schemas/LinkedResource'
      description: The array of associated resources to the Maps account. Linked resource in the array cannot individually update, you must update all linked resources in the array together. These resources may be used on operations on the Azure Maps REST API. Access is controlled by the Maps Account Managed Identity(s) permissions to those resource(s).
    LinkedResource:
      type: object
      properties:
        uniqueName:
          type: string
          description: A provided name which uniquely identifies the linked resource.
        id:
          type: string
          description: 'ARM resource id in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/accounts/{storageName}''.'
      required:
        - uniqueName
        - id
      description: Linked resource is reference to a resource deployed in an Azure subscription, add the linked resource `uniqueName` value as an optional parameter for operations on Azure Maps Geospatial REST APIs.
    CorsRules:
      type: object
      properties:
        corsRules:
          type: array
          maxItems: 5
          items:
            description: Specifies a CORS rule for the Maps Account.
            $ref: '#/components/schemas/CorsRule'
          x-ms-identifiers: []
          description: 'The list of CORS rules. You can include up to five CorsRule elements in the request. '
      description: 'Sets the CORS rules. You can include up to five CorsRule elements in the request. '
    CorsRule:
      type: object
      properties:
        allowedOrigins:
          type: array
          items:
            type: string
          description: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
      required:
        - allowedOrigins
      description: Specifies a CORS rule for the Map Account.
    Locations:
      description: The list of data processing locations for the Maps Account.
      type: array
      items:
        description: Data processing location.
        type: object
        properties:
          locationName:
            type: string
            description: The location name.
        required:
          - locationName
      x-ms-identifiers:
        - locationName
    CreatorProperties:
      description: Creator resource properties
      type: object
      properties:
        provisioningState:
          description: 'The state of the resource provisioning, terminal states: Succeeded, Failed, Canceled'
          type: string
          readOnly: true
        storageUnits:
          description: The storage units to be allocated. Integer values from 1 to 100, inclusive.
          type: integer
          format: int32
          minimum: 1
          maximum: 100
        totalStorageUnitSizeInBytes:
          description: The total allocated storage unit size in bytes for the creator resource.
          type: integer
          format: int32
        consumedStorageUnitSizeInBytes:
          description: The consumed storage unit size in bytes for the creator resource.
          type: integer
          format: int32
      required:
        - storageUnits
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
        nullable: true
        x-nullable: true
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned,UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
    encryption:
      type: object
      description: All encryption configuration for a resource.
      properties:
        infrastructureEncryption:
          type: string
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: InfrastructureEncryption
            modelAsString: true
          description: (Optional) Discouraged to include in resource definition. Only needed where it is possible to disable platform (AKA infrastructure) encryption. Azure SQL TDE is an example of this. Values are enabled and disabled.
        customerManagedKeyEncryption:
          type: object
          description: All Customer-managed key encryption properties for the resource.
          properties:
            keyEncryptionKeyIdentity:
              type: object
              description: All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.
              properties:
                identityType:
                  type: string
                  enum:
                    - systemAssignedIdentity
                    - userAssignedIdentity
                    - delegatedResourceIdentity
                  description: The type of identity to use. Values can be systemAssignedIdentity, userAssignedIdentity, or delegatedResourceIdentity.
                userAssignedIdentityResourceId:
                  type: string
                  format: arm-id
                  description: 'User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.'
                federatedClientId:
                  type: string
                  format: uuid
                  description: 'application client identity to use for accessing key encryption key Url in a different tenant. Ex: f83c6b1b-4d34-47e4-bb34-9d83df58b540'
                delegatedIdentityClientId:
                  type: string
                  format: uuid
                  description: 'delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.'
            keyEncryptionKeyUrl:
              type: string
              description: 'key encryption key Url, versioned or unversioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.'
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    accounts:
      id: azure.maps.accounts
      name: accounts
      title: accounts
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1?api-version=2024-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1?api-version=2024-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1?api-version=2024-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1?api-version=2024-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1?api-version=2024-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Maps~1accounts~1?api-version=2024-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1regenerateKey~1?api-version=2024-07-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    accounts_sas:
      id: azure.maps.accounts_sas
      name: accounts_sas
      title: accounts_sas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1listSas~1?api-version=2024-07-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_sas/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    accounts_keys:
      id: azure.maps.accounts_keys
      name: accounts_keys
      title: accounts_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1listKeys~1?api-version=2024-07-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.maps.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Maps~1operations~1?api-version=2024-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    creators:
      id: azure.maps.creators
      name: creators
      title: creators
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1creators~1?api-version=2024-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1creators~1{creatorName}~1?api-version=2024-07-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1creators~1{creatorName}~1?api-version=2024-07-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1creators~1{creatorName}~1?api-version=2024-07-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Maps~1accounts~1{accountName}~1creators~1{creatorName}~1?api-version=2024-07-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/creators/methods/get'
          - $ref: '#/components/x-stackQL-resources/creators/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/creators/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/creators/methods/delete'
    vw_accounts:
      id: azure.maps.vw_accounts
      name: vw_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              sku as sku,
              kind as kind,
              systemData as system_data,
              identity as identity,
              tags as tags,
              JSON_EXTRACT(properties, '$.uniqueId') as unique_id,
              JSON_EXTRACT(properties, '$.disableLocalAuth') as disable_local_auth,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.linkedResources') as linked_resources,
              JSON_EXTRACT(properties, '$.cors') as cors,
              JSON_EXTRACT(properties, '$.encryption') as encryption,
              JSON_EXTRACT(properties, '$.locations') as locations,
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.maps.accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                sku as sku,
                kind as kind,
                systemData as system_data,
                identity as identity,
                tags as tags,
                json_extract_path_text(properties, '$.uniqueId') as unique_id,
                JSON_EXTRACT(properties, '$.disableLocalAuth') as disable_local_auth,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.linkedResources') as linked_resources,
                JSON_EXTRACT(properties, '$.cors') as cors,
                JSON_EXTRACT(properties, '$.encryption') as encryption,
                JSON_EXTRACT(properties, '$.locations') as locations,
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.maps.accounts
                WHERE subscriptionId = 'replace-me';
    vw_creators:
      id: azure.maps.vw_creators
      name: vw_creators
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.storageUnits') as storage_units,
              JSON_EXTRACT(properties, '$.totalStorageUnitSizeInBytes') as total_storage_unit_size_in_bytes,
              JSON_EXTRACT(properties, '$.consumedStorageUnitSizeInBytes') as consumed_storage_unit_size_in_bytes,
              subscriptionId,
              resourceGroupName,
              accountName,
              creatorName
              FROM azure.maps.creators
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.storageUnits') as storage_units,
                JSON_EXTRACT(properties, '$.totalStorageUnitSizeInBytes') as total_storage_unit_size_in_bytes,
                JSON_EXTRACT(properties, '$.consumedStorageUnitSizeInBytes') as consumed_storage_unit_size_in_bytes,
                subscriptionId,
                resourceGroupName,
                accountName,
                creatorName
                FROM azure.maps.creators
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/?api-version=2024-07-01-preview:
    put:
      tags:
        - Accounts
      description: Create or update a Maps Account. A Maps Account holds the keys which allow access to the Maps REST APIs.
      operationId: Accounts_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: The new or updated parameters for the Maps Account.
        required: true
        x-ms-requestBody-name: MapsAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapsAccount'
      responses:
        '200':
          description: The Account was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccount'
        '201':
          description: The Account was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccount'
        default:
          description: An error occurred during creating or updating the Account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Accounts
      description: Updates a Maps Account. Only a subset of the parameters may be updated after creation, such as Sku, Tags, Properties.
      operationId: Accounts_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: The updated parameters for the Maps Account.
        required: true
        x-ms-requestBody-name: MapsAccountUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapsAccountUpdateParameters'
      responses:
        '200':
          description: The Account was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccount'
        default:
          description: An error occurred during creating or updating the Account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Accounts
      description: Delete a Maps Account.
      operationId: Accounts_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: The Account was deleted successfully.
        '204':
          description: The specified Account was not found. Nothing was deleted.
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Accounts
      description: Get a Maps Account.
      operationId: Accounts_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccount'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/?api-version=2024-07-01-preview:
    get:
      tags:
        - Accounts
      description: Get all Maps Accounts in a Resource Group
      operationId: Accounts_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccounts'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Maps/accounts/?api-version=2024-07-01-preview:
    get:
      tags:
        - Accounts
      description: Get all Maps Accounts in a Subscription
      operationId: Accounts_ListBySubscription
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccounts'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/listSas/?api-version=2024-07-01-preview:
    post:
      tags:
        - Accounts
      description: |-
        Create and list an account shared access signature token. Use this SAS token for authentication to Azure Maps REST APIs through various Azure Maps SDKs. As prerequisite to create a SAS Token. 

        Prerequisites:
        1. Create or have an existing User Assigned Managed Identity in the same Azure region as the account. 
        2. Create or update an Azure Maps account with the same Azure region as the User Assigned Managed Identity is placed.
      operationId: Accounts_ListSas
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: The updated parameters for the Maps Account.
        required: true
        x-ms-requestBody-name: MapsAccountSasParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountSasParameters'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccountSasToken'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/listKeys/?api-version=2024-07-01-preview:
    post:
      tags:
        - Accounts
      description: Get the keys to use with the Maps APIs. A key is used to authenticate and authorize access to the Maps REST APIs. Only one key is needed at a time; two are given to provide seamless key regeneration.
      operationId: Accounts_ListKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccountKeys'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/regenerateKey/?api-version=2024-07-01-preview:
    post:
      tags:
        - Accounts
      description: Regenerate either the primary or secondary key for use with the Maps APIs. The old key will stop working immediately.
      operationId: Accounts_RegenerateKeys
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: 'Which key to regenerate:  primary or secondary.'
        required: true
        x-ms-requestBody-name: keySpecification
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapsKeySpecification'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapsAccountKeys'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Maps/operations/?api-version=2024-07-01-preview:
    get:
      tags:
        - Operations
      description: List operations available for the Maps Resource Provider
      operationId: Maps_ListOperations
      x-ms-pageable:
        nextLinkName: nextLink
      parameters: []
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators/?api-version=2024-07-01-preview:
    get:
      tags:
        - Creators
      description: Get all Creator instances for an Azure Maps Account
      operationId: Creators_ListByAccount
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatorList'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Maps/accounts/{accountName}/creators/{creatorName}/?api-version=2024-07-01-preview:
    put:
      tags:
        - Creators
      description: Create or update a Maps Creator resource. Creator resource will manage Azure resources required to populate a custom set of mapping data. It requires an account to exist before it can be created.
      operationId: Creators_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CreatorNameParameter'
      requestBody:
        description: The new or updated parameters for the Creator resource.
        required: true
        x-ms-requestBody-name: CreatorResource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Creator'
      responses:
        '200':
          description: The Creator is updated with the provided properties.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
        '201':
          description: The Creator will be created asynchronously. The Creator will be ready to use once the provisioningState property changed to 'Succeeded' through creators Get API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Creators
      description: Updates the Maps Creator resource. Only a subset of the parameters may be updated after creation, such as Tags.
      operationId: Creators_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CreatorNameParameter'
      requestBody:
        description: The update parameters for Maps Creator.
        required: true
        x-ms-requestBody-name: CreatorUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatorUpdateParameters'
      responses:
        '200':
          description: The Maps Creator was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Creators
      description: Delete a Maps Creator resource.
      operationId: Creators_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CreatorNameParameter'
      responses:
        '200':
          description: The Maps Creator will be deleted.
        '204':
          description: The specified Maps Creator resource was not found. Nothing was deleted.
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Creators
      description: Get a Maps Creator resource.
      operationId: Creators_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/CreatorNameParameter'
      responses:
        '200':
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Creator'
        default:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
