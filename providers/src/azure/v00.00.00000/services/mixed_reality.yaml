openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Mixed Reality
  description: 'The Azure Mixed Reality REST API provides programmatic access to create, query, and delete Azure Mixed Reality resources. To perform operations on Azure Mixed Reality resources, you send HTTPS requests with a supported method: GET, POST, PUT, PATCH or DELETE to an endpoint that targets a resource collection or a specific resource. This section explains how to work with resources by using the REST API.'
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    accountNameParameter:
      name: accountName
      in: path
      description: Name of an Mixed Reality Account.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    apiVersionParameter:
      name: api-version
      in: query
      description: The API version to be used with the HTTP request.
      required: false
      schema:
        type: string
    locationParameter:
      name: location
      in: path
      description: The location in which uniqueness will be verified.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of an Azure resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      schema:
        type: string
  schemas:
    RemoteRenderingAccount:
      description: RemoteRenderingAccount Response.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Property bag.
          $ref: '#/components/schemas/MixedRealityAccountProperties'
        identity:
          description: The identity associated with this account
          $ref: '#/components/schemas/Identity'
        plan:
          description: The plan associated with this account
          $ref: '#/components/schemas/Identity'
        sku:
          description: The sku associated with this account
          $ref: '#/components/schemas/Sku'
        kind:
          description: The kind of account, if supported
          $ref: '#/components/schemas/Sku'
        systemData:
          description: System metadata for this account
          $ref: '#/components/schemas/systemData'
      type: object
    RemoteRenderingAccountPage:
      description: Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RemoteRenderingAccount'
          description: List of resources supported by the Resource Provider.
        nextLink:
          type: string
          description: URL to get the next set of resource list results if there are any.
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error Response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.)
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponse'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: REST API operation
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that represents the operation.
          $ref: '#/components/schemas/OperationDisplay'
        isDataAction:
          description: Whether or not this is a data plane operation
          type: boolean
        origin:
          description: The origin
          type: string
        properties:
          $ref: '#/components/schemas/OperationProperties'
          description: Properties of the operation
      type: object
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: Check Name Availability Request
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Resource Name To Verify
          type: string
        type:
          description: Fully qualified resource type which includes provider namespace
          type: string
    CheckNameAvailabilityResponse:
      description: Check Name Availability Response
      type: object
      required:
        - nameAvailable
      properties:
        nameAvailable:
          description: if name Available
          type: boolean
        reason:
          description: Resource Name To Verify
          $ref: '#/components/schemas/NameUnavailableReason'
        message:
          description: detail message
          type: string
    OperationProperties:
      description: Operation properties.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: Service specification.
    ServiceSpecification:
      description: Service specification payload
      type: object
      properties:
        logSpecifications:
          description: Specifications of the Log for Azure Monitoring
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
          x-ms-identifiers:
            - name
        metricSpecifications:
          description: Specifications of the Metrics for Azure Monitoring
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
          x-ms-identifiers:
            - name
    LogSpecification:
      description: Specifications of the Log for Azure Monitoring
      type: object
      properties:
        name:
          description: Name of the log
          type: string
        displayName:
          description: Localized friendly display name of the log
          type: string
        blobDuration:
          description: Blob duration of the log
          type: string
    MetricSpecification:
      description: Specifications of the Metrics for Azure Monitoring
      type: object
      properties:
        name:
          description: Name of the metric
          type: string
        displayName:
          description: Localized friendly display name of the metric
          type: string
        displayDescription:
          description: Localized friendly description of the metric
          type: string
        unit:
          description: Unit that makes sense for the metric
          type: string
        aggregationType:
          description: 'Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.'
          type: string
        supportedAggregationTypes:
          description: 'Supported aggregation types. Valid values: Average, Minimum, Maximum, Total, Count.'
          type: array
          items:
            $ref: '#/components/schemas/AggregationType'
        supportedTimeGrainTypes:
          description: 'Supported time grains. Valid values: PT1M, PT5M, PT15M, PT30M, PT1H, PT6H, PT12H, P1D'
          type: array
          items:
            $ref: '#/components/schemas/TimeGrainType'
        enableRegionalMdmAccount:
          description: Flag to indicate use of regional Mdm accounts
          type: boolean
        sourceMdmAccount:
          description: Source mdm account
          type: string
        sourceMdmNamespace:
          description: Source mdm namespace
          type: string
        metricFilterPattern:
          description: Metric filter regex pattern
          type: string
        fillGapWithZero:
          description: Flag to determine is Zero is returned for time duration where no metric is emitted
          type: boolean
        category:
          description: Metric category
          type: string
        internalMetricName:
          description: Internal metric name.
          type: string
        dimensions:
          description: Dimensions of the metric
          uniqueItems: false
          type: array
          items:
            $ref: '#/components/schemas/MetricDimension'
          x-ms-identifiers:
            - name
        lockedAggregationType:
          description: Locked aggregation type of the metric
          type: string
    AggregationType:
      description: 'Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count.'
      type: string
    TimeGrainType:
      description: The time grain of the metric
      type: string
    MetricDimension:
      description: Specifications of the Dimension of metrics
      type: object
      properties:
        name:
          description: Name of the dimension
          type: string
        displayName:
          description: Localized friendly display name of the dimension
          type: string
        internalName:
          description: Internal name of the dimension.
          type: string
        toBeExportedForShoebox:
          description: Flag to indicate export for Shoebox
          type: boolean
    OperationDisplay:
      description: The object that represents the operation.
      type: object
      required:
        - provider
        - resource
        - operation
        - description
      properties:
        provider:
          description: 'Service provider: Microsoft.ResourceProvider'
          type: string
        resource:
          description: 'Resource on which the operation is performed: Profile, endpoint, etc.'
          type: string
        operation:
          description: 'Operation type: Read, write, delete, etc.'
          type: string
        description:
          description: Description of operation
          type: string
    NameUnavailableReason:
      description: reason of name unavailable.
      type: string
      enum:
        - Invalid
        - AlreadyExists
      x-ms-enum:
        name: NameUnavailableReason
        modelAsString: true
    OperationPage:
      description: Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the Resource Provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    AccountKeys:
      description: Developer Keys of account
      type: object
      properties:
        primaryKey:
          x-ms-secret: true
          description: value of primary key.
          readOnly: true
          type: string
        secondaryKey:
          x-ms-secret: true
          description: value of secondary key.
          readOnly: true
          type: string
    AccountKeyRegenerateRequest:
      description: Request for account key regeneration
      type: object
      properties:
        serial:
          type: integer
          format: int32
          enum:
            - 1
            - 2
          default: 1
          x-ms-enum:
            name: Serial
            values:
              - value: 1
                description: The Primary Key
                name: Primary
              - value: 2
                description: The Secondary Key
                name: Secondary
          description: Serial of key to be regenerated
    CloudError:
      x-ms-external: true
      properties:
        error:
          description: An Error response.
          $ref: '#/components/schemas/CloudErrorBody'
      description: An Error response.
      type: object
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for displaying in a user interface.
        target:
          type: string
          description: The target of the particular error. For example, the name of the property in error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers:
            - code
          description: A list of additional details about the error.
      description: An error response from Azure.
      type: object
    MixedRealityAccountProperties:
      description: Common Properties shared by Mixed Reality Accounts
      type: object
      properties:
        storageAccountName:
          description: The name of the storage account associated with this accountId
          type: string
        accountId:
          description: unique id of certain account.
          readOnly: true
          type: string
        accountDomain:
          description: Correspond domain name of certain Spatial Anchors Account
          readOnly: true
          type: string
    ObjectAnchorsAccount:
      description: ObjectAnchorsAccount Response.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        properties:
          x-ms-client-flatten: true
          description: Property bag.
          $ref: '#/components/schemas/MixedRealityAccountProperties'
        plan:
          description: The plan associated with this account
          $ref: '#/components/schemas/Identity'
        sku:
          description: The sku associated with this account
          $ref: '#/components/schemas/Sku'
        kind:
          description: The kind of account, if supported
          $ref: '#/components/schemas/Sku'
        systemData:
          $ref: '#/components/schemas/systemData'
          description: The system metadata related to an object anchors account.
          readOnly: true
      type: object
    ObjectAnchorsAccountPage:
      description: Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ObjectAnchorsAccount'
          description: List of resources supported by the Resource Provider.
        nextLink:
          type: string
          description: URL to get the next set of resource list results if there are any.
    SpatialAnchorsAccount:
      description: SpatialAnchorsAccount Response.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        properties:
          x-ms-client-flatten: true
          description: Property bag.
          $ref: '#/components/schemas/MixedRealityAccountProperties'
        identity:
          description: The identity associated with this account
          $ref: '#/components/schemas/Identity'
        plan:
          description: The plan associated with this account
          $ref: '#/components/schemas/Identity'
        sku:
          description: The sku associated with this account
          $ref: '#/components/schemas/Sku'
        kind:
          description: The kind of account, if supported
          $ref: '#/components/schemas/Sku'
        systemData:
          description: System metadata for this account
          $ref: '#/components/schemas/systemData'
      type: object
    SpatialAnchorsAccountPage:
      description: Result of the request to get resource collection. It contains a list of resources and a URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SpatialAnchorsAccount'
          description: List of resources supported by the Resource Provider.
        nextLink:
          type: string
          description: URL to get the next set of resource list results if there are any.
  x-stackQL-resources:
    remote_rendering_accounts:
      id: azure.mixed_reality.remote_rendering_accounts
      name: remote_rendering_accounts
      title: remote_rendering_accounts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts?api-version=2021-03-01-preview/get'
            operationId: RemoteRenderingAccounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RemoteRenderingAccountPage
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts?api-version=2021-03-01-preview/get'
            operationId: RemoteRenderingAccounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RemoteRenderingAccountPage
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts~1{accountName}?api-version=2021-03-01-preview/delete'
            operationId: RemoteRenderingAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts~1{accountName}?api-version=2021-03-01-preview/get'
            operationId: RemoteRenderingAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RemoteRenderingAccount
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts~1{accountName}?api-version=2021-03-01-preview/patch'
            operationId: RemoteRenderingAccounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RemoteRenderingAccount
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts~1{accountName}?api-version=2021-03-01-preview/put'
            operationId: RemoteRenderingAccounts_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RemoteRenderingAccount
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts~1{accountName}~1regenerateKeys?api-version=2021-03-01-preview/post'
            operationId: RemoteRenderingAccounts_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/remote_rendering_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/remote_rendering_accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/remote_rendering_accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/remote_rendering_accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/remote_rendering_accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/remote_rendering_accounts/methods/delete'
    remote_rendering_accounts_keys:
      id: azure.mixed_reality.remote_rendering_accounts_keys
      name: remote_rendering_accounts_keys
      title: remote_rendering_accounts_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1remoteRenderingAccounts~1{accountName}~1listKeys?api-version=2021-03-01-preview/post'
            operationId: RemoteRenderingAccountsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/remote_rendering_accounts_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.mixed_reality.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.MixedReality~1operations?api-version=2021-03-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationPage
            objectKey: $.value
        check_name_availability_local:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MixedReality~1locations~1{location}~1checkNameAvailability?api-version=2021-03-01-preview/post'
            operationId: Operations_CheckNameAvailabilityLocal
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityResponse
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    object_anchors_accounts:
      id: azure.mixed_reality.object_anchors_accounts
      name: object_anchors_accounts
      title: object_anchors_accounts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts?api-version=2021-03-01-preview/get'
            operationId: ObjectAnchorsAccounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectAnchorsAccountPage
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts?api-version=2021-03-01-preview/get'
            operationId: ObjectAnchorsAccounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectAnchorsAccountPage
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/delete'
            operationId: ObjectAnchorsAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/get'
            operationId: ObjectAnchorsAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectAnchorsAccount
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/patch'
            operationId: ObjectAnchorsAccounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectAnchorsAccount
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/put'
            operationId: ObjectAnchorsAccounts_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ObjectAnchorsAccount
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts~1{accountName}~1regenerateKeys?api-version=2021-03-01-preview/post'
            operationId: ObjectAnchorsAccounts_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/object_anchors_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/object_anchors_accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/object_anchors_accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/object_anchors_accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/object_anchors_accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/object_anchors_accounts/methods/delete'
    object_anchors_accounts_keys:
      id: azure.mixed_reality.object_anchors_accounts_keys
      name: object_anchors_accounts_keys
      title: object_anchors_accounts_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1objectAnchorsAccounts~1{accountName}~1listKeys?api-version=2021-03-01-preview/post'
            operationId: ObjectAnchorsAccountsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/object_anchors_accounts_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    spatial_anchors_accounts:
      id: azure.mixed_reality.spatial_anchors_accounts
      name: spatial_anchors_accounts
      title: spatial_anchors_accounts
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts?api-version=2021-03-01-preview/get'
            operationId: SpatialAnchorsAccounts_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SpatialAnchorsAccountPage
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts?api-version=2021-03-01-preview/get'
            operationId: SpatialAnchorsAccounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SpatialAnchorsAccountPage
            objectKey: $.value
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/delete'
            operationId: SpatialAnchorsAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/get'
            operationId: SpatialAnchorsAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SpatialAnchorsAccount
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/patch'
            operationId: SpatialAnchorsAccounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SpatialAnchorsAccount
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts~1{accountName}?api-version=2021-03-01-preview/put'
            operationId: SpatialAnchorsAccounts_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SpatialAnchorsAccount
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts~1{accountName}~1regenerateKeys?api-version=2021-03-01-preview/post'
            operationId: SpatialAnchorsAccounts_RegenerateKeys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/spatial_anchors_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/spatial_anchors_accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/spatial_anchors_accounts/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/spatial_anchors_accounts/methods/create'
        update:
          - $ref: '#/components/x-stackQL-resources/spatial_anchors_accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/spatial_anchors_accounts/methods/delete'
    spatial_anchors_accounts_keys:
      id: azure.mixed_reality.spatial_anchors_accounts_keys
      name: spatial_anchors_accounts_keys
      title: spatial_anchors_accounts_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.MixedReality~1spatialAnchorsAccounts~1{accountName}~1listKeys?api-version=2021-03-01-preview/post'
            operationId: SpatialAnchorsAccountsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccountKeys
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/spatial_anchors_accounts_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_remote_rendering_accounts:
      id: azure.mixed_reality.vw_remote_rendering_accounts
      name: vw_remote_rendering_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              plan as plan,
              sku as sku,
              kind as kind,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.storageAccountName') as "storage_account_name",
              JSON_EXTRACT(properties, '$.accountId') as "account_id",
              JSON_EXTRACT(properties, '$.accountDomain') as "account_domain",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.mixed_reality.remote_rendering_accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                plan as plan,
                sku as sku,
                kind as kind,
                systemData as system_data,
                json_extract_path_text(properties, '$.storageAccountName') as "storage_account_name",
                json_extract_path_text(properties, '$.accountId') as "account_id",
                json_extract_path_text(properties, '$.accountDomain') as "account_domain",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.mixed_reality.remote_rendering_accounts
                WHERE subscriptionId = 'replace-me';
    vw_object_anchors_accounts:
      id: azure.mixed_reality.vw_object_anchors_accounts
      name: vw_object_anchors_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              plan as plan,
              sku as sku,
              kind as kind,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.storageAccountName') as "storage_account_name",
              JSON_EXTRACT(properties, '$.accountId') as "account_id",
              JSON_EXTRACT(properties, '$.accountDomain') as "account_domain",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.mixed_reality.object_anchors_accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                plan as plan,
                sku as sku,
                kind as kind,
                systemData as system_data,
                json_extract_path_text(properties, '$.storageAccountName') as "storage_account_name",
                json_extract_path_text(properties, '$.accountId') as "account_id",
                json_extract_path_text(properties, '$.accountDomain') as "account_domain",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.mixed_reality.object_anchors_accounts
                WHERE subscriptionId = 'replace-me';
    vw_spatial_anchors_accounts:
      id: azure.mixed_reality.vw_spatial_anchors_accounts
      name: vw_spatial_anchors_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              identity as identity,
              plan as plan,
              sku as sku,
              kind as kind,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.storageAccountName') as "storage_account_name",
              JSON_EXTRACT(properties, '$.accountId') as "account_id",
              JSON_EXTRACT(properties, '$.accountDomain') as "account_domain",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.mixed_reality.spatial_anchors_accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                identity as identity,
                plan as plan,
                sku as sku,
                kind as kind,
                systemData as system_data,
                json_extract_path_text(properties, '$.storageAccountName') as "storage_account_name",
                json_extract_path_text(properties, '$.accountId') as "account_id",
                json_extract_path_text(properties, '$.accountDomain') as "account_domain",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.mixed_reality.spatial_anchors_accounts
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/remoteRenderingAccounts?api-version=2021-03-01-preview:
    get:
      operationId: RemoteRenderingAccounts_ListBySubscription
      tags:
        - Resource
        - Proxy
      description: List Remote Rendering Accounts by Subscription
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRenderingAccountPage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts?api-version=2021-03-01-preview:
    get:
      operationId: RemoteRenderingAccounts_ListByResourceGroup
      tags:
        - Resource
      description: List Resources by Resource Group
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRenderingAccountPage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts/{accountName}?api-version=2021-03-01-preview:
    delete:
      operationId: RemoteRenderingAccounts_Delete
      tags:
        - Resource
      description: Delete a Remote Rendering Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      operationId: RemoteRenderingAccounts_Get
      tags:
        - Resource
      description: Retrieve a Remote Rendering Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRenderingAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      operationId: RemoteRenderingAccounts_Update
      tags:
        - Resource
      description: Updating a Remote Rendering Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Remote Rendering Account parameter.
        required: true
        x-ms-requestBody-name: remoteRenderingAccount
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteRenderingAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRenderingAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      operationId: RemoteRenderingAccounts_Create
      tags:
        - Resource
      description: Creating or Updating a Remote Rendering Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Remote Rendering Account parameter.
        required: true
        x-ms-requestBody-name: remoteRenderingAccount
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteRenderingAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRenderingAccount'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteRenderingAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts/{accountName}/listKeys?api-version=2021-03-01-preview:
    post:
      operationId: RemoteRenderingAccountsKeys_List
      tags:
        - Key
      description: List Both of the 2 Keys of a Remote Rendering Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: RemoteRenderingAccounts_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/remoteRenderingAccounts/{accountName}/regenerateKeys?api-version=2021-03-01-preview:
    post:
      operationId: RemoteRenderingAccounts_RegenerateKeys
      tags:
        - Key
      description: Regenerate specified Key of a Remote Rendering Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Required information for key regeneration.
        required: true
        x-ms-requestBody-name: regenerate
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountKeyRegenerateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.MixedReality/operations?api-version=2021-03-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Proxy
      description: Exposing Available Operations
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationPage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/locations/{location}/checkNameAvailability?api-version=2021-03-01-preview:
    post:
      operationId: Operations_CheckNameAvailabilityLocal
      tags:
        - Proxy
      description: Check Name Availability for local uniqueness
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
      requestBody:
        description: Check Name Availability Request.
        required: true
        x-ms-requestBody-name: checkNameAvailability
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: CheckNameAvailabilityLocal
  /subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/objectAnchorsAccounts?api-version=2021-03-01-preview:
    get:
      operationId: ObjectAnchorsAccounts_ListBySubscription
      tags:
        - Resource
        - Proxy
      description: List Object Anchors Accounts by Subscription
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAnchorsAccountPage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/objectAnchorsAccounts?api-version=2021-03-01-preview:
    get:
      operationId: ObjectAnchorsAccounts_ListByResourceGroup
      tags:
        - Resource
      description: List Resources by Resource Group
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAnchorsAccountPage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/objectAnchorsAccounts/{accountName}?api-version=2021-03-01-preview:
    delete:
      operationId: ObjectAnchorsAccounts_Delete
      tags:
        - Resource
      description: Delete an Object Anchors Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      operationId: ObjectAnchorsAccounts_Get
      tags:
        - Resource
      description: Retrieve an Object Anchors Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAnchorsAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      operationId: ObjectAnchorsAccounts_Update
      tags:
        - Resource
      description: Updating an Object Anchors Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Object Anchors Account parameter.
        required: true
        x-ms-requestBody-name: objectAnchorsAccount
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAnchorsAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAnchorsAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      operationId: ObjectAnchorsAccounts_Create
      tags:
        - Resource
      description: Creating or Updating an object anchors Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Object Anchors Account parameter.
        required: true
        x-ms-requestBody-name: objectAnchorsAccount
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectAnchorsAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAnchorsAccount'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectAnchorsAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/objectAnchorsAccounts/{accountName}/listKeys?api-version=2021-03-01-preview:
    post:
      operationId: ObjectAnchorsAccountsKeys_List
      tags:
        - Key
      description: List Both of the 2 Keys of an object anchors Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: ObjectAnchorsAccounts_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/objectAnchorsAccounts/{accountName}/regenerateKeys?api-version=2021-03-01-preview:
    post:
      operationId: ObjectAnchorsAccounts_RegenerateKeys
      tags:
        - Key
      description: Regenerate specified Key of an object anchors Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Required information for key regeneration.
        required: true
        x-ms-requestBody-name: regenerate
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountKeyRegenerateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.MixedReality/spatialAnchorsAccounts?api-version=2021-03-01-preview:
    get:
      operationId: SpatialAnchorsAccounts_ListBySubscription
      tags:
        - Resource
        - Proxy
      description: List Spatial Anchors Accounts by Subscription
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialAnchorsAccountPage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts?api-version=2021-03-01-preview:
    get:
      operationId: SpatialAnchorsAccounts_ListByResourceGroup
      tags:
        - Resource
      description: List Resources by Resource Group
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialAnchorsAccountPage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{accountName}?api-version=2021-03-01-preview:
    delete:
      operationId: SpatialAnchorsAccounts_Delete
      tags:
        - Resource
      description: Delete a Spatial Anchors Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      operationId: SpatialAnchorsAccounts_Get
      tags:
        - Resource
      description: Retrieve a Spatial Anchors Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialAnchorsAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      operationId: SpatialAnchorsAccounts_Update
      tags:
        - Resource
      description: Updating a Spatial Anchors Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Spatial Anchors Account parameter.
        required: true
        x-ms-requestBody-name: spatialAnchorsAccount
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialAnchorsAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialAnchorsAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      operationId: SpatialAnchorsAccounts_Create
      tags:
        - Resource
      description: Creating or Updating a Spatial Anchors Account.
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Spatial Anchors Account parameter.
        required: true
        x-ms-requestBody-name: spatialAnchorsAccount
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialAnchorsAccount'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialAnchorsAccount'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialAnchorsAccount'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{accountName}/listKeys?api-version=2021-03-01-preview:
    post:
      operationId: SpatialAnchorsAccountsKeys_List
      tags:
        - Key
      description: List Both of the 2 Keys of a Spatial Anchors Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SpatialAnchorsAccounts_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MixedReality/spatialAnchorsAccounts/{accountName}/regenerateKeys?api-version=2021-03-01-preview:
    post:
      operationId: SpatialAnchorsAccounts_RegenerateKeys
      tags:
        - Key
      description: Regenerate specified Key of a Spatial Anchors Account
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Required information for key regeneration.
        required: true
        x-ms-requestBody-name: regenerate
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountKeyRegenerateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountKeys'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
