openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Reserved Virtual Machine Instances
  description: Lower your total cost of ownership by combining Azure Reserved VM Instances rates with a pay-as-you-go subscription to manage costs across predictable and variable workloads.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ReservationIdParameter:
      name: reservationId
      in: path
      description: Id of the reservation item
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ExpandRenewPropertiesParameter:
      name: $expand
      in: query
      description: Supported value of this query is renewProperties
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ReservedResourceTypeIdParameter:
      name: reservedResourceType
      in: query
      description: The type of the resource for which the skus should be provided.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    LocationIdParameter:
      name: location
      in: query
      description: Filters the skus based on the location specified in this parameter. This can be an Azure region or global
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ReservationOrderIdParameter:
      name: reservationOrderId
      in: path
      description: Order Id of the reservation
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdInParameters:
      name: subscriptionId
      in: path
      description: Azure subscription ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LocationIdInParameters:
      name: location
      in: path
      description: Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ProviderIdInParameters:
      name: providerId
      in: path
      description: Azure resource provider ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceNameInParameters:
      name: resourceName
      in: path
      description: The resource name for a resource provider, such as SKU name for Microsoft.Compute, Sku or TotalLowPriorityCores for Microsoft.MachineLearningServices
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RequestIdInParameters:
      name: id
      in: path
      description: Quota Request ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TopQueryParameter:
      name: $top
      in: query
      description: Number of records to return.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        minimum: 1
        type: integer
    SkipTokenParameter:
      name: $skiptoken
      in: query
      description: Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element includes a skiptoken parameter that specifies a starting point to use for subsequent calls.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    ErrorResponseCode:
      type: string
      description: Error code describing the reason that service is not able to process the incoming request
      enum:
        - NotSpecified
        - InternalServerError
        - ServerTimeout
        - AuthorizationFailed
        - BadRequest
        - ClientCertificateThumbprintNotSet
        - InvalidRequestContent
        - OperationFailed
        - HttpMethodNotSupported
        - InvalidRequestUri
        - MissingTenantId
        - InvalidTenantId
        - InvalidReservationOrderId
        - InvalidReservationId
        - ReservationIdNotInReservationOrder
        - ReservationOrderNotFound
        - InvalidSubscriptionId
        - InvalidAccessToken
        - InvalidLocationId
        - UnauthenticatedRequestsThrottled
        - InvalidHealthCheckType
        - Forbidden
        - BillingScopeIdCannotBeChanged
        - AppliedScopesNotAssociatedWithCommerceAccount
        - PatchValuesSameAsExisting
        - RoleAssignmentCreationFailed
        - ReservationOrderCreationFailed
        - ReservationOrderNotEnabled
        - CapacityUpdateScopesFailed
        - UnsupportedReservationTerm
        - ReservationOrderIdAlreadyExists
        - RiskCheckFailed
        - CreateQuoteFailed
        - ActivateQuoteFailed
        - NonsupportedAccountId
        - PaymentInstrumentNotFound
        - MissingAppliedScopesForSingle
        - NoValidReservationsToReRate
        - ReRateOnlyAllowedForEA
        - OperationCannotBePerformedInCurrentState
        - InvalidSingleAppliedScopesCount
        - InvalidFulfillmentRequestParameters
        - NotSupportedCountry
        - InvalidRefundQuantity
        - PurchaseError
        - BillingCustomerInputError
        - BillingPaymentInstrumentSoftError
        - BillingPaymentInstrumentHardError
        - BillingTransientError
        - BillingError
        - FulfillmentConfigurationError
        - FulfillmentOutOfStockError
        - FulfillmentTransientError
        - FulfillmentError
        - CalculatePriceFailed
        - AppliedScopesSameAsExisting
        - SelfServiceRefundNotSupported
        - RefundLimitExceeded
      x-ms-enum:
        name: ErrorResponseCode
        modelAsString: true
    ProvisioningState:
      type: string
      description: Represent the current state of the Reservation.
      enum:
        - Creating
        - PendingResourceHold
        - ConfirmedResourceHold
        - PendingBilling
        - ConfirmedBilling
        - Created
        - Succeeded
        - Cancelled
        - Expired
        - BillingFailed
        - Failed
        - Split
        - Merged
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    ReservedResourceType:
      type: string
      description: The type of the resource that is being reserved.
      enum:
        - VirtualMachines
        - SqlDatabases
        - SuseLinux
        - CosmosDb
        - RedHat
        - SqlDataWarehouse
        - VMwareCloudSimple
        - RedHatOsa
        - Databricks
        - AppService
        - ManagedDisk
        - BlockBlob
        - RedisCache
        - AzureDataExplorer
        - MySql
        - MariaDb
        - PostgreSql
        - DedicatedHost
        - SapHana
        - SqlAzureHybridBenefit
        - AVS
        - DataFactory
        - NetAppStorage
        - AzureFiles
        - SqlEdge
        - VirtualMachineSoftware
      x-ms-enum:
        name: ReservedResourceType
        modelAsString: true
    Location:
      type: string
      description: Location in which the Resources needs to be reserved. It cannot be changed after the resource has been created.
      enum:
        - westus
        - eastus
        - eastus2
        - northcentralus
        - westus2
        - southcentralus
        - centralus
        - westeurope
        - northeurope
        - eastasia
        - southeastasia
        - japaneast
        - japanwest
        - brazilsouth
        - australiaeast
        - australiasoutheast
        - southindia
        - westindia
        - centralindia
        - canadacentral
        - canadaeast
        - uksouth
        - westcentralus
        - ukwest
      x-ms-enum:
        name: Location
        modelAsString: true
    AvailableScopeRequest:
      description: Available scope
      properties:
        properties:
          $ref: '#/components/schemas/AvailableScopeRequestProperties'
      type: object
    AvailableScopeRequestProperties:
      type: object
      description: Available scope request properties
      properties:
        scopes:
          type: array
          items:
            type: string
    CalculateRefundRequest:
      description: Request containing information needed for calculating refund.
      properties:
        id:
          type: string
          description: Fully qualified identifier of the reservation order being returned
        properties:
          $ref: '#/components/schemas/CalculateRefundRequestProperties'
      type: object
    RefundRequest:
      description: Request containing information needed for returning reservation.
      properties:
        properties:
          $ref: '#/components/schemas/RefundRequestProperties'
      type: object
    CalculateRefundRequestProperties:
      type: object
      description: Properties needed for calculate refund including the scope and the reservation to be returned.
      properties:
        scope:
          type: string
          description: The scope of the refund, e.g. Reservation
        reservationToReturn:
          $ref: '#/components/schemas/ReservationToReturn'
    RefundRequestProperties:
      type: object
      description: Properties needed for refund request including the session id from calculate refund, the scope, the reservation to be returned and the return reason.
      properties:
        sessionId:
          type: string
          description: SessionId that was returned by CalculateRefund API.
        scope:
          type: string
          description: The scope of the refund, e.g. Reservation
        reservationToReturn:
          $ref: '#/components/schemas/ReservationToReturn'
        returnReason:
          type: string
          description: The reason of returning the reservation
    CalculateExchangeRequest:
      description: Calculate exchange request
      properties:
        properties:
          $ref: '#/components/schemas/CalculateExchangeRequestProperties'
      type: object
    ExchangeRequest:
      description: Exchange request
      properties:
        properties:
          $ref: '#/components/schemas/ExchangeRequestProperties'
      type: object
    CalculateExchangeRequestProperties:
      type: object
      description: Calculate exchange request properties
      properties:
        reservationsToPurchase:
          type: array
          description: List of reservations that are being purchased in this exchange.
          items:
            $ref: '#/components/schemas/PurchaseRequest'
          x-ms-identifiers: []
        savingsPlansToPurchase:
          type: array
          description: List of savings plans that are being purchased in this exchange.
          items:
            $ref: '#/components/schemas/SavingsPlanPurchaseRequest'
          x-ms-identifiers: []
        reservationsToExchange:
          type: array
          description: List of reservations that are being returned in this exchange.
          items:
            $ref: '#/components/schemas/ReservationToReturn'
          x-ms-identifiers:
            - reservationId
    ExchangeRequestProperties:
      type: object
      description: Exchange request properties
      properties:
        sessionId:
          type: string
          description: SessionId that was returned by CalculateExchange API.
    ReservationToReturn:
      type: object
      description: Reservation to return
      properties:
        reservationId:
          type: string
          description: Fully qualified identifier of the reservation being returned
        quantity:
          type: integer
          format: int32
          description: Quantity to be returned. Must be greater than zero.
    ReservationToReturnForExchange:
      type: object
      description: Reservation refund details
      properties:
        reservationId:
          type: string
          description: Fully qualified id of the reservation being returned.
        quantity:
          type: integer
          format: int32
          description: Quantity to be returned
        billingRefundAmount:
          $ref: '#/components/schemas/Price'
        billingInformation:
          $ref: '#/components/schemas/BillingInformation'
        status:
          $ref: '#/components/schemas/OperationStatus'
    BillingInformation:
      type: object
      description: billing information
      properties:
        billingCurrencyTotalPaidAmount:
          $ref: '#/components/schemas/Price'
        billingCurrencyProratedAmount:
          $ref: '#/components/schemas/Price'
        billingCurrencyRemainingCommitmentAmount:
          $ref: '#/components/schemas/Price'
    RefundBillingInformation:
      type: object
      description: billing information
      properties:
        billingPlan:
          $ref: '#/components/schemas/ReservationBillingPlan'
        completedTransactions:
          type: integer
          format: int32
          description: The number of completed transactions in this reservation's payment
        totalTransactions:
          type: integer
          format: int32
          description: The number of total transactions in this reservation's payment
        billingCurrencyTotalPaidAmount:
          $ref: '#/components/schemas/Price'
        billingCurrencyProratedAmount:
          $ref: '#/components/schemas/Price'
        billingCurrencyRemainingCommitmentAmount:
          $ref: '#/components/schemas/Price'
    CatalogsResult:
      type: object
      description: The list of catalogs and pagination information.
      properties:
        value:
          description: The list of catalogs.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Catalog'
          x-ms-identifiers: []
        nextLink:
          description: The link (url) to the next page of results.
          type: string
          readOnly: true
        totalItems:
          description: The total amount of catalog items.
          type: integer
          format: int64
    Catalog:
      type: object
      description: Product details of a type of resource.
      properties:
        resourceType:
          type: string
          description: The type of resource the sku applies to.
          readOnly: true
        name:
          type: string
          description: The name of sku
          readOnly: true
        billingPlans:
          type: object
          description: The billing plan options available for this sku.
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ReservationBillingPlan'
        terms:
          type: array
          readOnly: true
          description: Available reservation terms for this resource
          items:
            $ref: '#/components/schemas/ReservationTerm'
        locations:
          type: array
          readOnly: true
          items:
            type: string
            description: The set of locations that the sku is available. If not specified, the sku is available in all locations.
        skuProperties:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SkuProperty'
          x-ms-identifiers:
            - name
        msrp:
          type: object
          readOnly: true
          description: Pricing information about the sku
          properties:
            p1Y:
              type: object
              $ref: '#/components/schemas/Price'
              description: Amount in pricing currency. Tax not included.
            p3Y:
              type: object
              $ref: '#/components/schemas/Price'
              description: Amount in pricing currency. Tax not included.
            p5Y:
              type: object
              $ref: '#/components/schemas/Price'
              description: Amount in pricing currency. Tax not included.
        restrictions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SkuRestriction'
          x-ms-identifiers: []
        tier:
          type: string
          description: The tier of this sku
          readOnly: true
        size:
          type: string
          description: The size of this sku
          readOnly: true
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SkuCapability'
          x-ms-identifiers:
            - name
    SkuCapability:
      type: object
      description: Capability of a sku.
      properties:
        name:
          type: string
          description: An invariant to describe the feature.
        value:
          type: string
          description: An invariant if the feature is measured by quantity.
    SkuProperty:
      type: object
      description: Property of a sku.
      properties:
        name:
          type: string
          description: An invariant to describe the feature.
        value:
          type: string
          description: An invariant if the feature is measured by quantity.
    SkuRestriction:
      type: object
      description: Restriction of a sku.
      properties:
        type:
          type: string
          description: The type of restrictions.
        values:
          type: array
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the sku is restricted.
        reasonCode:
          type: string
          description: The reason for restriction.
    ReservationOrderResponse:
      description: Details of a reservation order being returned.
      x-ms-azure-resource: true
      properties:
        etag:
          type: integer
          format: int32
        id:
          type: string
          readOnly: true
          description: Identifier of the reservation
        name:
          type: string
          readOnly: true
          description: Name of the reservation
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ReservationOrderProperties'
        type:
          type: string
          readOnly: true
          description: Type of resource. "Microsoft.Capacity/reservations"
        systemData:
          $ref: '#/components/schemas/systemData'
          readOnly: true
      type: object
    PaymentStatus:
      type: string
      description: Describes whether the payment is completed, failed, cancelled or scheduled in the future.
      enum:
        - Succeeded
        - Failed
        - Scheduled
        - Cancelled
      x-ms-enum:
        name: PaymentStatus
        modelAsString: true
    PaymentDetail:
      type: object
      description: Information about payment related to a reservation order.
      properties:
        dueDate:
          type: string
          format: date
          description: Date when the payment needs to be done.
        paymentDate:
          type: string
          format: date
          description: Date when the transaction is completed. Is null when it is scheduled.
        pricingCurrencyTotal:
          $ref: '#/components/schemas/Price'
          description: Amount in pricing currency. Tax not included.
        billingCurrencyTotal:
          $ref: '#/components/schemas/Price'
          description: Amount charged in Billing currency. Tax not included. Is null for future payments
        billingAccount:
          type: string
          description: Shows the Account that is charged for this payment.
        status:
          $ref: '#/components/schemas/PaymentStatus'
        extendedStatusInfo:
          $ref: '#/components/schemas/ExtendedStatusInfo'
    ReservationOrderBillingPlanInformation:
      type: object
      description: Information describing the type of billing plan for this reservation.
      properties:
        pricingCurrencyTotal:
          $ref: '#/components/schemas/Price'
          description: Amount of money to be paid for the Order. Tax is not included.
        startDate:
          type: string
          format: date
          description: Date when the billing plan has started.
        nextPaymentDueDate:
          type: string
          format: date
          description: For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetail'
          x-ms-identifiers: []
    ReservationOrderProperties:
      type: object
      description: Properties of a reservation order.
      properties:
        displayName:
          type: string
          description: Friendly name for user to easily identified the reservation.
        requestDateTime:
          type: string
          format: date-time
          description: This is the DateTime when the reservation was initially requested for purchase.
        createdDateTime:
          type: string
          format: date-time
          description: This is the DateTime when the reservation was created.
        expiryDate:
          type: string
          format: date
          description: This is the date when the reservation will expire.
        expiryDateTime:
          type: string
          format: date-time
          description: This is the date-time when the reservation will expire.
        benefitStartTime:
          type: string
          format: date-time
          description: This is the DateTime when the reservation benefit started.
        originalQuantity:
          type: integer
          format: int32
          description: Total Quantity of the skus purchased in the reservation.
        term:
          $ref: '#/components/schemas/ReservationTerm'
        provisioningState:
          description: Current state of the reservation.
          $ref: '#/components/schemas/ProvisioningState'
        billingPlan:
          $ref: '#/components/schemas/ReservationBillingPlan'
        planInformation:
          $ref: '#/components/schemas/ReservationOrderBillingPlanInformation'
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationResponse'
        reviewDateTime:
          type: string
          format: date-time
          description: This is the date-time when the Azure Hybrid Benefit needs to be reviewed.
    DisplayProvisioningState:
      type: string
      description: Represent the current display state of the reservation.
      enum:
        - Succeeded
        - Expiring
        - Expired
        - Pending
        - Processing
        - Cancelled
        - Failed
        - Warning
        - NoBenefit
      x-ms-enum:
        name: DisplayProvisioningState
        modelAsString: true
    UserFriendlyAppliedScopeType:
      type: string
      description: The applied scope type
      enum:
        - None
        - Shared
        - Single
        - ResourceGroup
        - ManagementGroup
      x-ms-enum:
        name: UserFriendlyAppliedScopeType
        modelAsString: true
    UserFriendlyRenewState:
      type: string
      description: The renew state of the reservation
      enum:
        - 'On'
        - 'Off'
        - Renewed
        - NotRenewed
        - NotApplicable
      x-ms-enum:
        name: UserFriendlyRenewState
        modelAsString: true
    ReservationTerm:
      type: string
      description: Represent the term of reservation.
      enum:
        - P1Y
        - P3Y
        - P5Y
      x-ms-enum:
        name: ReservationTerm
        modelAsString: true
    ReservationsListResult:
      type: object
      description: The list of reservations and summary of roll out count of reservations in each state.
      properties:
        value:
          description: The list of reservations.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ReservationResponse'
        nextLink:
          description: The link (url) to the next page of results.
          type: string
          readOnly: true
        summary:
          description: The roll out count summary of the reservations
          type: object
          $ref: '#/components/schemas/ReservationSummary'
    ReservationResponse:
      description: The definition of the reservation.
      x-ms-azure-resource: true
      properties:
        location:
          type: string
          description: The Azure region where the reserved resource lives.
          x-ms-mutability:
            - create
            - read
        etag:
          type: integer
          format: int32
        sku:
          description: 'The sku information associated to this reservation '
          $ref: '#/components/schemas/SkuName'
        properties:
          description: 'The properties associated to this reservation '
          $ref: '#/components/schemas/ReservationsProperties'
        kind:
          type: string
          description: Resource Provider type to be reserved.
          enum:
            - Microsoft.Compute
          x-ms-enum:
            name: Kind
            modelAsString: false
      type: object
    ReservationQuantity:
      type: integer
      format: int32
      description: Quantity of the skus that are part of the reservation. Must be greater than zero.
    AvailableScopeProperties:
      description: The response of available scope api containing scopes and their eligibilities.
      properties:
        properties:
          $ref: '#/components/schemas/SubscriptionScopeProperties'
      type: object
    SubscriptionScopeProperties:
      type: object
      description: The scopes checked by the available scope api.
      properties:
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/ScopeProperties'
          x-ms-identifiers: []
    ScopeProperties:
      type: object
      description: The scope and whether it is valid.
      properties:
        scope:
          type: string
        valid:
          type: boolean
    InstanceFlexibility:
      type: string
      description: Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.
      enum:
        - 'On'
        - 'Off'
      x-ms-enum:
        name: InstanceFlexibility
        modelAsString: true
    ReservationStatusCode:
      type: string
      enum:
        - None
        - Pending
        - Processing
        - Active
        - PurchaseError
        - PaymentInstrumentError
        - Split
        - Merged
        - Expired
        - Succeeded
      x-ms-enum:
        name: ReservationStatusCode
        modelAsString: true
    ExtendedStatusInfo:
      type: object
      properties:
        statusCode:
          $ref: '#/components/schemas/ReservationStatusCode'
        message:
          type: string
          description: The message giving detailed information about the status code.
    ReservationBillingPlan:
      type: string
      description: Represent the billing plans.
      enum:
        - Upfront
        - Monthly
      x-ms-enum:
        name: ReservationBillingPlan
        modelAsString: true
    Renew:
      type: boolean
      default: false
      description: Setting this to true will automatically purchase a new reservation on the expiration date time.
    RenewPropertiesResponse:
      type: object
      description: The renew properties for a reservation.
      properties:
        purchaseProperties:
          $ref: '#/components/schemas/PurchaseRequest'
        pricingCurrencyTotal:
          type: object
          description: Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.
          properties:
            currencyCode:
              type: string
              description: The ISO 4217 3-letter currency code for the currency used by this purchase record.
            amount:
              type: number
        billingCurrencyTotal:
          type: object
          description: Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.
          properties:
            currencyCode:
              type: string
              description: The ISO 4217 3-letter currency code for the currency used by this purchase record.
            amount:
              type: number
    SkuName:
      type: object
      description: The name of sku
      properties:
        name:
          type: string
    CalculateRefundResponse:
      description: The response of calculate refund containing refund information of reservation
      properties:
        id:
          type: string
          description: Fully qualified identifier of the reservation being returned
        properties:
          $ref: '#/components/schemas/RefundResponseProperties'
      type: object
    RefundResponse:
      description: The response of refund request containing refund information of reservation
      properties:
        id:
          type: string
          description: Fully qualified identifier of the reservation being returned
        properties:
          $ref: '#/components/schemas/RefundResponseProperties'
      type: object
    RefundResponseProperties:
      type: object
      description: The refund properties of reservation
      properties:
        sessionId:
          type: string
          description: Refund session identifier
        quantity:
          type: integer
          format: int32
          description: Quantity to be returned
        billingRefundAmount:
          $ref: '#/components/schemas/Price'
        pricingRefundAmount:
          $ref: '#/components/schemas/Price'
        policyResult:
          $ref: '#/components/schemas/RefundPolicyResult'
        billingInformation:
          $ref: '#/components/schemas/RefundBillingInformation'
    CalculateExchangeOperationResultResponse:
      description: CalculateExchange operation result
      properties:
        id:
          type: string
          description: It should match what is used to GET the operation result.
        name:
          type: string
          description: It must match the last segment of the id field, and will typically be a GUID / system generated value.
        status:
          type: string
          description: Status of the operation.
          enum:
            - Succeeded
            - Failed
            - Cancelled
            - Pending
          x-ms-enum:
            name: CalculateExchangeOperationResultStatus
            modelAsString: true
        properties:
          $ref: '#/components/schemas/CalculateExchangeResponseProperties'
        error:
          $ref: '#/components/schemas/OperationResultError'
      type: object
    ExchangeOperationResultResponse:
      description: Exchange operation result
      properties:
        id:
          type: string
          description: It should match what is used to GET the operation result.
        name:
          type: string
          description: It must match the last segment of the id field, and will typically be a GUID / system generated value.
        status:
          type: string
          description: Status of the operation.
          enum:
            - Succeeded
            - Failed
            - Cancelled
            - PendingRefunds
            - PendingPurchases
          x-ms-enum:
            name: ExchangeOperationResultStatus
            modelAsString: true
        properties:
          $ref: '#/components/schemas/ExchangeResponseProperties'
        error:
          $ref: '#/components/schemas/OperationResultError'
      type: object
    OperationResultError:
      type: object
      description: Required if status == failed or status == canceled.
      properties:
        code:
          type: string
          description: Required if status == failed or status == cancelled. If status == failed, provide an invariant error code used for error troubleshooting, aggregation, and analysis.
        message:
          type: string
          description: Required if status == failed. Localized. If status == failed, provide an actionable error message indicating what error occurred, and what the user can do to address the issue.
    CalculateExchangeResponseProperties:
      type: object
      description: CalculateExchange response properties
      properties:
        sessionId:
          type: string
          description: Exchange session identifier
        netPayable:
          $ref: '#/components/schemas/Price'
        refundsTotal:
          $ref: '#/components/schemas/Price'
        purchasesTotal:
          $ref: '#/components/schemas/Price'
        reservationsToPurchase:
          type: array
          description: Details of the reservations being purchased
          items:
            $ref: '#/components/schemas/ReservationToPurchaseCalculateExchange'
          x-ms-identifiers: []
        savingsPlansToPurchase:
          type: array
          description: Details of the savings plans being purchased
          items:
            $ref: '#/components/schemas/SavingsPlanToPurchaseCalculateExchange'
          x-ms-identifiers: []
        reservationsToExchange:
          type: array
          description: Details of the reservations being returned
          items:
            $ref: '#/components/schemas/ReservationToExchange'
          x-ms-identifiers:
            - reservationId
        policyResult:
          $ref: '#/components/schemas/ExchangePolicyErrors'
    ExchangeResponseProperties:
      type: object
      description: Exchange response properties
      properties:
        sessionId:
          type: string
          description: Exchange session identifier
        netPayable:
          $ref: '#/components/schemas/Price'
        refundsTotal:
          $ref: '#/components/schemas/Price'
        purchasesTotal:
          $ref: '#/components/schemas/Price'
        reservationsToPurchase:
          type: array
          description: Details of the reservations being purchased
          items:
            $ref: '#/components/schemas/ReservationToPurchaseExchange'
          x-ms-identifiers:
            - reservationId
        savingsPlansToPurchase:
          type: array
          description: Details of the savings plans being purchased
          items:
            $ref: '#/components/schemas/SavingsPlanToPurchaseExchange'
          x-ms-identifiers:
            - savingsPlanId
        reservationsToExchange:
          type: array
          description: Details of the reservations being returned
          items:
            $ref: '#/components/schemas/ReservationToReturnForExchange'
          x-ms-identifiers:
            - reservationId
        policyResult:
          $ref: '#/components/schemas/ExchangePolicyErrors'
    RefundPolicyResult:
      description: Refund policy result
      properties:
        properties:
          $ref: '#/components/schemas/RefundPolicyResultProperty'
      type: object
    RefundPolicyResultProperty:
      type: object
      description: Refund policy result property
      properties:
        consumedRefundsTotal:
          $ref: '#/components/schemas/Price'
        maxRefundLimit:
          $ref: '#/components/schemas/Price'
        policyErrors:
          type: array
          description: Refund Policy errors
          items:
            $ref: '#/components/schemas/RefundPolicyError'
          x-ms-identifiers: []
    RefundPolicyError:
      type: object
      description: error details
      properties:
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
        message:
          type: string
    ExchangePolicyErrors:
      type: object
      description: Exchange policy errors
      properties:
        policyErrors:
          type: array
          description: Exchange Policy errors
          items:
            $ref: '#/components/schemas/ExchangePolicyError'
          x-ms-identifiers: []
    ExchangePolicyError:
      type: object
      description: error details
      properties:
        code:
          type: string
        message:
          type: string
    ReservationToExchange:
      type: object
      description: Reservation refund details
      properties:
        reservationId:
          type: string
          description: Fully qualified id of the reservation being returned.
        quantity:
          type: integer
          format: int32
          description: Quantity to be returned
        billingRefundAmount:
          $ref: '#/components/schemas/Price'
        billingInformation:
          $ref: '#/components/schemas/BillingInformation'
    ReservationToPurchaseCalculateExchange:
      description: Reservation purchase details
      properties:
        properties:
          $ref: '#/components/schemas/PurchaseRequest'
        billingCurrencyTotal:
          $ref: '#/components/schemas/Price'
      type: object
    SavingsPlanToPurchaseCalculateExchange:
      description: Savings plan purchase details
      properties:
        properties:
          $ref: '#/components/schemas/SavingsPlanPurchaseRequest'
        billingCurrencyTotal:
          $ref: '#/components/schemas/Price'
      type: object
    ReservationToPurchaseExchange:
      description: Reservation purchase details
      properties:
        reservationOrderId:
          type: string
          description: Fully qualified id of the reservationOrder being purchased
        reservationId:
          type: string
          description: Fully qualified id of the reservation being purchased. This value is only guaranteed to be non-null if the purchase is successful.
        properties:
          $ref: '#/components/schemas/PurchaseRequest'
        billingCurrencyTotal:
          $ref: '#/components/schemas/Price'
        status:
          $ref: '#/components/schemas/OperationStatus'
      type: object
    SavingsPlanToPurchaseExchange:
      description: Savings plan purchase details
      properties:
        savingsPlanOrderId:
          type: string
          description: Fully qualified id of the savings plan order being purchased
        savingsPlanId:
          type: string
          description: Fully qualified id of the savings plan being purchased. This value is only guaranteed to be non-null if the purchase is successful.
        properties:
          $ref: '#/components/schemas/SavingsPlanPurchaseRequest'
        billingCurrencyTotal:
          $ref: '#/components/schemas/Price'
        status:
          $ref: '#/components/schemas/OperationStatus'
      type: object
    BenefitTerm:
      type: string
      description: Represent savings plan term in ISO 8601 format.
      enum:
        - P1Y
        - P3Y
      x-ms-enum:
        name: SavingsPlanTerm
        modelAsString: true
    BillingPlan:
      type: string
      description: Represents the billing plan in ISO 8601 format. Required only for monthly billing plans.
      enum:
        - P1M
      x-ms-enum:
        name: BillingPlan
        modelAsString: true
    ReservationsProperties:
      type: object
      description: The properties of the reservations
      properties:
        reservedResourceType:
          description: The type of the resource that is being reserved.
          $ref: '#/components/schemas/ReservedResourceType'
        instanceFlexibility:
          description: Allows reservation discount to be applied across skus within the same auto fit group. Not all skus support instance size flexibility.
          $ref: '#/components/schemas/InstanceFlexibility'
        displayName:
          type: string
          description: Friendly name for user to easily identify the reservation
        appliedScopes:
          description: The list of applied scopes
          $ref: '#/components/schemas/AppliedScopes'
        appliedScopeType:
          description: The applied scope type
          $ref: '#/components/schemas/AppliedScopeType'
        archived:
          description: Indicates if the reservation is archived
          type: boolean
        capabilities:
          description: Capabilities of the reservation
          type: string
        quantity:
          description: Quantity of the skus that are part of the reservation.
          $ref: '#/components/schemas/ReservationQuantity'
        provisioningState:
          description: Current state of the reservation.
          $ref: '#/components/schemas/ProvisioningState'
        effectiveDateTime:
          type: string
          format: date-time
          description: DateTime of the reservation starting when this version is effective from.
        benefitStartTime:
          type: string
          format: date-time
          description: This is the DateTime when the reservation benefit started.
        lastUpdatedDateTime:
          type: string
          format: date-time
          description: DateTime of the last time the reservation was updated.
          readOnly: true
        expiryDate:
          type: string
          format: date
          description: This is the date when the reservation will expire.
        expiryDateTime:
          type: string
          format: date-time
          description: This is the date-time when the reservation will expire.
        reviewDateTime:
          type: string
          format: date-time
          description: This is the date-time when the Azure Hybrid Benefit needs to be reviewed.
        skuDescription:
          type: string
          description: Description of the sku in english.
        extendedStatusInfo:
          description: The message giving detailed information about the status code.
          $ref: '#/components/schemas/ExtendedStatusInfo'
        billingPlan:
          description: The billing plan options available for this sku.
          $ref: '#/components/schemas/ReservationBillingPlan'
        displayProvisioningState:
          description: The provisioning state of the reservation for display, e.g. Succeeded
          type: string
          readOnly: true
        provisioningSubState:
          description: The provisioning sub-state of the reservation, e.g. Succeeded
          type: string
          readOnly: true
        purchaseDate:
          type: string
          format: date
          description: This is the date when the reservation was purchased.
        purchaseDateTime:
          type: string
          format: date-time
          description: This is the date-time when the reservation was purchased.
        splitProperties:
          $ref: '#/components/schemas/ReservationSplitProperties'
        mergeProperties:
          $ref: '#/components/schemas/ReservationMergeProperties'
        swapProperties:
          $ref: '#/components/schemas/ReservationSwapProperties'
        appliedScopeProperties:
          $ref: '#/components/schemas/AppliedScopeProperties'
        billingScopeId:
          $ref: '#/components/schemas/BillingScopeId'
        renew:
          description: Setting this to true will automatically purchase a new reservation on the expiration date time.
          $ref: '#/components/schemas/Renew'
        renewSource:
          type: string
          description: Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        renewDestination:
          type: string
          description: Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.
        renewProperties:
          $ref: '#/components/schemas/RenewPropertiesResponse'
        term:
          description: Represent the term of reservation.
          $ref: '#/components/schemas/ReservationTerm'
        userFriendlyAppliedScopeType:
          description: The applied scope type of the reservation for display, e.g. Shared
          type: string
          readOnly: true
        userFriendlyRenewState:
          description: The renew state of the reservation for display, e.g. On
          type: string
          readOnly: true
        utilization:
          readOnly: true
          type: object
          description: Reservation utilization
          properties:
            trend:
              description: last 7 day utilization trend for a reservation
              readOnly: true
              type: string
            aggregates:
              description: The array of aggregates of a reservation's utilization
              type: array
              items:
                $ref: '#/components/schemas/ReservationUtilizationAggregates'
              x-ms-identifiers: []
    ReservationSplitProperties:
      type: object
      description: Properties of reservation split
      properties:
        splitDestinations:
          type: array
          items:
            type: string
          description: List of destination resource id that are created due to split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        splitSource:
          type: string
          description: Resource id of the reservation from which this is split. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
    ReservationMergeProperties:
      type: object
      description: Properties of reservation merge
      properties:
        mergeDestination:
          type: string
          description: Reservation resource id Created due to the merge. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        mergeSources:
          type: array
          items:
            type: string
          description: Resource ids of the source reservation's merged to form this reservation. Format of the resource id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
    ReservationSwapProperties:
      type: object
      description: Properties of reservation swap
      properties:
        swapSource:
          type: string
          description: Resource id of the source reservation that gets swapped. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
        swapDestination:
          type: string
          description: Reservation resource id that the original resource gets swapped to. Format of the resource id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
    PurchaseRequestProperties:
      type: object
      description: Properties of reservation purchase request
      properties:
        reservedResourceType:
          $ref: '#/components/schemas/ReservedResourceType'
        billingScopeId:
          $ref: '#/components/schemas/BillingScopeId'
        term:
          $ref: '#/components/schemas/ReservationTerm'
        billingPlan:
          $ref: '#/components/schemas/ReservationBillingPlan'
        quantity:
          description: Quantity of the skus that are part of the reservation.
          $ref: '#/components/schemas/ReservationQuantity'
        displayName:
          type: string
          description: Friendly name of the reservation
        appliedScopeType:
          $ref: '#/components/schemas/AppliedScopeType'
        appliedScopes:
          $ref: '#/components/schemas/AppliedScopes'
        appliedScopeProperties:
          $ref: '#/components/schemas/AppliedScopeProperties'
        renew:
          $ref: '#/components/schemas/Renew'
        reservedResourceProperties:
          type: object
          description: Properties specific to each reserved resource type. Not required if not applicable.
          properties:
            instanceFlexibility:
              $ref: '#/components/schemas/InstanceFlexibility'
        reviewDateTime:
          type: string
          format: date-time
          description: This is the date-time when the Azure hybrid benefit needs to be reviewed.
    SavingsPlanPurchaseRequestProperties:
      type: object
      description: Properties of a savings plan purchase
      properties:
        displayName:
          type: string
          description: Friendly name of the savings plan
        billingScopeId:
          $ref: '#/components/schemas/BillingScopeId'
        term:
          $ref: '#/components/schemas/BenefitTerm'
        billingPlan:
          $ref: '#/components/schemas/BillingPlan'
        appliedScopeType:
          $ref: '#/components/schemas/AppliedScopeType'
        appliedScopeProperties:
          $ref: '#/components/schemas/AppliedScopeProperties'
        commitment:
          $ref: '#/components/schemas/Commitment'
    ReservationUtilizationAggregates:
      description: The aggregate values of reservation utilization
      type: object
      properties:
        grain:
          description: The grain of the aggregate
          readOnly: true
          type: number
        grainUnit:
          description: The grain unit of the aggregate
          readOnly: true
          type: string
        value:
          description: The aggregate value
          readOnly: true
          type: number
        valueUnit:
          description: The aggregate value unit
          readOnly: true
          type: string
    ReservationSummary:
      description: The roll up count summary of reservations in each state
      type: object
      properties:
        succeededCount:
          description: The number of reservation in Succeeded state
          readOnly: true
          type: number
        failedCount:
          description: The number of reservation in Failed state
          readOnly: true
          type: number
        expiringCount:
          description: The number of reservation in Expiring state
          readOnly: true
          type: number
        expiredCount:
          description: The number of reservation in Expired state
          readOnly: true
          type: number
        pendingCount:
          description: The number of reservation in Pending state
          readOnly: true
          type: number
        cancelledCount:
          description: The number of reservation in Cancelled state
          readOnly: true
          type: number
        processingCount:
          description: The number of reservation in Processing state
          readOnly: true
          type: number
        warningCount:
          description: The number of reservation in Warning state
          readOnly: true
          type: number
        noBenefitCount:
          description: The number of reservation in NoBenefit state
          readOnly: true
          type: number
    PatchProperties:
      type: object
      description: Properties for reservation patch
      properties:
        appliedScopeType:
          $ref: '#/components/schemas/AppliedScopeType'
        appliedScopes:
          $ref: '#/components/schemas/AppliedScopes'
        appliedScopeProperties:
          $ref: '#/components/schemas/AppliedScopeProperties'
        instanceFlexibility:
          $ref: '#/components/schemas/InstanceFlexibility'
        name:
          type: string
          description: Display name of the reservation
        renew:
          $ref: '#/components/schemas/Renew'
        renewProperties:
          type: object
          properties:
            purchaseProperties:
              $ref: '#/components/schemas/PurchaseRequest'
        reviewDateTime:
          type: string
          format: date-time
          description: This is the date-time when the Azure hybrid benefit needs to be reviewed.
    SplitProperties:
      type: object
      description: Properties for reservation split
      properties:
        quantities:
          type: array
          description: List of the quantities in the new reservations to create.
          items:
            type: integer
            format: int32
            minItems: 2
            maxItems: 2
        reservationId:
          type: string
          description: Resource id of the reservation to be split. Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
    MergeProperties:
      type: object
      description: Properties for reservation merge
      properties:
        sources:
          type: array
          description: Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
          items:
            type: string
    MergeRequest:
      description: The request for reservation merge
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MergeProperties'
      type: object
    PurchaseRequest:
      description: The request for reservation purchase
      properties:
        sku:
          $ref: '#/components/schemas/SkuName'
        location:
          type: string
          description: The Azure region where the reserved resource lives.
          x-ms-mutability:
            - create
            - read
            - update
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PurchaseRequestProperties'
      type: object
    SavingsPlanPurchaseRequest:
      description: Request body for savings plan purchase
      properties:
        sku:
          $ref: '#/components/schemas/SkuName'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SavingsPlanPurchaseRequestProperties'
      type: object
    Patch:
      description: The request for reservation patch
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/PatchProperties'
      type: object
    SplitRequest:
      description: The request for reservation split
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SplitProperties'
      type: object
    Error:
      type: object
      description: Error information
      properties:
        error:
          $ref: '#/components/schemas/ExtendedErrorInfo'
    ExtendedErrorInfo:
      type: object
      description: Extended error information including error code and error message
      properties:
        code:
          $ref: '#/components/schemas/ErrorResponseCode'
        message:
          type: string
    ErrorDetails:
      type: object
      description: The details of the error.
      properties:
        code:
          description: Error code.
          type: string
          readOnly: true
        message:
          description: Error message indicating why the operation failed.
          type: string
          readOnly: true
        target:
          description: The target of the particular error.
          type: string
          readOnly: true
    AppliedReservations:
      description: The response for applied reservations api
      properties:
        id:
          type: string
          description: Identifier of the applied reservations
          readOnly: true
        name:
          type: string
          description: Name of resource
          readOnly: true
        type:
          type: string
          description: Type of resource. "Microsoft.Capacity/AppliedReservations"
          readOnly: true
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AppliedReservationsProperties'
      type: object
    AppliedReservationsProperties:
      type: object
      description: Properties for applied reservations returned
      properties:
        reservationOrderIds:
          $ref: '#/components/schemas/AppliedReservationList'
    AppliedReservationList:
      type: object
      description: Paginated list of applied reservations
      properties:
        value:
          type: array
          items:
            type: string
            description: Reservation resource id. "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}"
          x-ms-identifiers: []
        nextLink:
          type: string
          description: Url to get the next page of reservations
    OperationList:
      type: object
      description: Paginated list of operations
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OperationResponse'
          x-ms-identifiers:
            - name
        nextLink:
          type: string
          description: Url to get the next page of items.
    OperationResponse:
      description: The response containing operation information
      properties:
        name:
          description: Name of the operation
          type: string
        isDataAction:
          description: Indicates whether the operation is a data action
          type: boolean
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: Display of the operation
        origin:
          description: Origin of the operation
          type: string
        properties:
          $ref: '#/components/schemas/OperationProperties'
          description: Properties of the operation
      type: object
    OperationDisplay:
      type: object
      description: Information about an operation
      properties:
        provider:
          type: string
        resource:
          type: string
        operation:
          type: string
        description:
          type: string
    OperationProperties:
      description: Additional details about an operation.
      x-ms-client-flatten: true
      properties: {}
      type: object
    ReservationList:
      type: object
      description: List of `Reservation`s
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ReservationResponse'
        nextLink:
          type: string
          description: Url to get the next page of reservations.
    ReservationOrderList:
      type: object
      description: List of `ReservationOrder`s
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOrderResponse'
        nextLink:
          type: string
          description: Url to get the next page of reservationOrders.
    AppliedScopeType:
      type: string
      description: Type of the Applied Scope.
      enum:
        - Single
        - Shared
        - ManagementGroup
      x-ms-enum:
        name: AppliedScopeType
        modelAsString: true
    AppliedScopes:
      type: array
      description: List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared. This property will be deprecated and replaced by appliedScopeProperties instead for Single AppliedScopeType.
      items:
        type: string
        minItems: 1
        maxItems: 1
      x-ms-identifiers: []
    AppliedScopeProperties:
      type: object
      description: Properties specific to applied scope type. Not required if not applicable. Required and need to provide tenantId and managementGroupId if AppliedScopeType is ManagementGroup
      properties:
        tenantId:
          $ref: '#/components/schemas/TenantId'
        managementGroupId:
          $ref: '#/components/schemas/ManagementGroupId'
        subscriptionId:
          $ref: '#/components/schemas/SubscriptionId'
        resourceGroupId:
          $ref: '#/components/schemas/ResourceGroupId'
        displayName:
          type: string
          description: Display name
    TenantId:
      type: string
      description: Tenant ID where the savings plan should apply benefit.
    ManagementGroupId:
      type: string
      description: Fully-qualified identifier of the management group where the benefit must be applied.
    SubscriptionId:
      type: string
      description: Fully-qualified identifier of the subscription.
    ResourceGroupId:
      type: string
      description: Fully-qualified identifier of the resource group.
    Commitment:
      description: Commitment towards the benefit.
      properties:
        currencyCode:
          type: string
          description: The ISO 4217 3-letter currency code for the currency used by this purchase record.
        amount:
          type: number
          format: double
        grain:
          type: string
          description: Commitment grain.
          enum:
            - Hourly
          x-ms-enum:
            name: CommitmentGrain
            modelAsString: true
      type: object
    BillingScopeId:
      type: string
      description: Subscription that will be charged for purchasing reservation or savings plan
    Price:
      type: object
      description: Pricing information containing the amount and the currency code
      properties:
        currencyCode:
          type: string
          description: The ISO 4217 3-letter currency code for the currency used by this purchase record.
        amount:
          type: number
          format: double
    OperationStatus:
      type: string
      description: Status of the individual operation.
      enum:
        - Succeeded
        - Failed
        - Cancelled
        - Pending
      x-ms-enum:
        name: OperationStatus
        modelAsString: true
    CalculatePriceResponse:
      description: The response of calculate price for reservation.
      properties:
        properties:
          $ref: '#/components/schemas/CalculatePriceResponseProperties'
      type: object
    CalculatePriceResponseProperties:
      type: object
      description: Properties for calculate price response
      properties:
        billingCurrencyTotal:
          type: object
          description: Currency and amount that customer will be charged in customer's local currency. Tax is not included.
          properties:
            currencyCode:
              type: string
              description: The ISO 4217 3-letter currency code for the currency used by this purchase record.
            amount:
              type: number
              description: Amount in pricing currency. Tax is not included.
              format: double
        netTotal:
          type: number
          description: Net total amount in pricing currency.
          format: double
        taxTotal:
          type: number
          description: Tax amount in pricing currency.
          format: double
        grandTotal:
          type: number
          description: Total amount in pricing currency.
          format: double
        isTaxIncluded:
          type: boolean
          description: Whether or not tax is included in grand total
        isBillingPartnerManaged:
          description: True if billing is managed by Microsoft Partner. Used only for CSP accounts.
          type: boolean
        reservationOrderId:
          description: GUID that represents reservation order that can be placed after calculating price.
          type: string
        skuTitle:
          description: Title of sku that is being purchased.
          type: string
        skuDescription:
          description: Description of sku that is being purchased.
          type: string
        pricingCurrencyTotal:
          type: object
          description: Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.
          properties:
            currencyCode:
              type: string
              description: The ISO 4217 3-letter currency code for the currency used by this purchase record.
            amount:
              type: number
        paymentSchedule:
          type: array
          items:
            $ref: '#/components/schemas/PaymentDetail'
          x-ms-identifiers: []
    ChangeDirectoryRequest:
      type: object
      description: Request body for change directory of a reservation.
      properties:
        destinationTenantId:
          description: Tenant id GUID that reservation order is to be transferred to
          type: string
    ChangeDirectoryResponse:
      type: object
      description: Change directory response
      properties:
        reservationOrder:
          $ref: '#/components/schemas/ChangeDirectoryResult'
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/ChangeDirectoryResult'
    ChangeDirectoryResult:
      type: object
      description: Change directory result for reservation order or reservation
      properties:
        id:
          type: string
          description: Identifier of the reservation order or reservation
        name:
          type: string
          description: Name of the reservation order or reservation
        isSucceeded:
          description: True if change directory operation succeeded on this reservation order or reservation
          type: boolean
        error:
          type: string
          description: Error reason if operation failed. Null otherwise
    CurrentQuotaLimit:
      description: Current quota limits.
      x-ms-azure-resource: true
      properties:
        quotaInformation:
          description: Quota details.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CurrentQuotaLimitBase'
        properties:
          description: Additional properties for the quota status for the resource.
          $ref: '#/components/schemas/QuotaRequestStatusDetails'
          x-ms-client-flatten: true
      type: object
    CurrentQuotaLimitBase:
      description: Quota properties.
      x-ms-azure-resource: true
      properties:
        id:
          description: The quota request ID.
          type: string
          readOnly: true
        name:
          description: The name of the quota request.
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
          description: Type of resource. "Microsoft.Capacity/ServiceLimits"
        properties:
          description: Quota properties for the resource.
          $ref: '#/components/schemas/QuotaProperties'
      type: object
    QuotaProperties:
      description: Quota properties for the resource.
      properties:
        limit:
          description: Quota properties.
          type: integer
          format: int32
        currentValue:
          description: Current usage value for the resource.
          type: integer
          format: int32
          readOnly: true
        unit:
          description: ' The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.'
          type: string
          readOnly: false
        name:
          description: Name of the resource provide by the resource provider. Use this property for quotaRequests resource operations.
          $ref: '#/components/schemas/ResourceName'
        resourceType:
          description: The name of the resource type.
          $ref: '#/components/schemas/ResourceTypesName'
          readOnly: false
        quotaPeriod:
          description: The time period over which the quota usage values are summarized. For example, P1D (per one day), PT1M (per one minute), and PT1S (per one second). This parameter is optional because, for some resources such as compute, the time period is irrelevant.
          type: string
          readOnly: true
        properties:
          description: Additional properties for the specified resource provider.
          type: object
      type: object
    ResourceName:
      description: Resource name provided by the resource provider. Use this property for quotaRequest parameter.
      properties:
        value:
          description: Resource name.
          type: string
          readOnly: false
        localizedValue:
          description: Resource display localized name.
          type: string
          readOnly: true
      type: object
    QuotaLimits:
      description: Quota limits.
      properties:
        value:
          description: List of quotas (service limits).
          type: array
          items:
            $ref: '#/components/schemas/CurrentQuotaLimitBase'
        nextLink:
          description: The URI for fetching the next page of quotas (service limits). When no more pages exist, the value is null.
          type: string
      type: object
    QuotaLimitsResponse:
      description: Quotas (service limits) in the request response.
      properties:
        value:
          description: List of quotas with the quota request status.
          type: array
          items:
            $ref: '#/components/schemas/CurrentQuotaLimit'
        nextLink:
          description: The URI for fetching the next page of quota limits. When no more pages exist, the value is null.
          type: string
      type: object
    CreateGenericQuotaRequestParameters:
      type: object
      description: Quota change requests information.
      properties:
        value:
          description: Quota change requests.
          type: array
          items:
            $ref: '#/components/schemas/CurrentQuotaLimitBase'
    SubRequest:
      type: object
      description: The sub-request submitted with the quota request.
      properties:
        limit:
          description: Quota (resource limit).
          type: integer
          format: int32
          readOnly: true
        name:
          description: The resource name.
          $ref: '#/components/schemas/ResourceName'
        resourceType:
          description: Resource type for which the quota check was made.
          type: string
          readOnly: true
        unit:
          description: ' The limit units, such as **count** and **bytes**. Use the unit field provided in the response of the GET quota operation.'
          type: string
        provisioningState:
          description: The quota request status.
          $ref: '#/components/schemas/QuotaRequestState'
        message:
          description: User-friendly status message.
          type: string
          readOnly: true
        subRequestId:
          description: Sub request ID for individual request.
          type: string
          readOnly: true
    QuotaRequestOneResourceSubmitResponse:
      description: Response for the quota submission request.
      x-ms-azure-resource: true
      properties:
        id:
          description: The quota request ID.
          type: string
          readOnly: true
        name:
          description: The name of the quota request.
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
          description: Type of resource. "Microsoft.Capacity/ServiceLimits"
        properties:
          description: The details for quota request.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/quotaRequestOneResourceProperties'
      type: object
    QuotaRequestSubmitResponse:
      description: Response for the quota submission request.
      x-ms-azure-resource: true
      properties:
        id:
          description: The quota request ID.
          type: string
          readOnly: true
        name:
          description: The name of the quota request.
          type: string
          readOnly: true
        properties:
          description: The quota request details.
          type: object
          $ref: '#/components/schemas/QuotaRequestProperties'
        type:
          type: string
          readOnly: true
          description: Type of resource. "Microsoft.Capacity/serviceLimits"
      type: object
    QuotaRequestSubmitResponse201:
      description: Response with request ID that the quota request was accepted.
      properties:
        id:
          description: The quota request ID. Use the requestId parameter to check the request status.
          type: string
          readOnly: true
        name:
          description: Operation ID
          type: string
          readOnly: true
        type:
          description: Resource type
          type: string
          readOnly: true
        properties:
          description: Quota request status.
          $ref: '#/components/schemas/QuotaRequestStatusDetails'
          x-ms-client-flatten: true
      type: object
    QuotaRequestStatusDetails:
      description: Quota request status details.
      type: object
      properties:
        provisioningState:
          description: The details of the quota request status.
          $ref: '#/components/schemas/QuotaRequestState'
          readOnly: true
        message:
          description: A user friendly message.
          type: string
          readOnly: true
    QuotaRequestDetails:
      description: Quota request details.
      x-ms-azure-resource: true
      properties:
        id:
          description: Quota request ID.
          type: string
          readOnly: true
        name:
          description: Quota request name.
          type: string
          readOnly: true
        properties:
          description: Quota request details.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuotaRequestProperties'
        type:
          type: string
          readOnly: true
          description: Resource type
      type: object
    QuotaRequestDetailsList:
      description: Quota request details.
      type: object
      properties:
        value:
          description: The quota requests.
          type: array
          items:
            $ref: '#/components/schemas/QuotaRequestDetails'
        nextLink:
          description: The URI to fetch the next page of quota limits. When there are no more pages, this is null.
          type: string
    QuotaRequestProperties:
      type: object
      description: The details of quota request.
      properties:
        provisioningState:
          description: The quota request status.
          $ref: '#/components/schemas/QuotaRequestState'
        message:
          description: User friendly status message.
          type: string
          readOnly: true
        requestSubmitTime:
          description: 'The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
          type: string
          readOnly: true
          format: date-time
        value:
          description: The quotaRequests.
          type: array
          items:
            $ref: '#/components/schemas/SubRequest'
    quotaRequestOneResourceProperties:
      description: The details of quota request.
      properties:
        provisioningState:
          description: The quota request status.
          readOnly: true
          $ref: '#/components/schemas/QuotaRequestState'
        message:
          description: User friendly status message.
          type: string
          readOnly: true
        requestSubmitTime:
          description: 'The time when the quota request was submitted using format: yyyy-MM-ddTHH:mm:ssZ as specified by the ISO 8601 standard.'
          type: string
          readOnly: true
          format: date-time
        properties:
          description: The quota request addition properties.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CurrentQuotaLimitBase'
      type: object
    QuotaRequestState:
      description: The quota request status.
      enum:
        - Accepted
        - Invalid
        - Succeeded
        - Failed
        - InProgress
      type: string
      x-ms-enum:
        name: QuotaRequestState
        modelAsString: true
    ResourceTypesName:
      description: The resource types.
      enum:
        - standard
        - dedicated
        - lowPriority
        - shared
        - serviceSpecific
      type: string
      x-ms-enum:
        name: ResourceType
        modelAsString: true
    ExceptionResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ServiceError'
          description: The API error details.
      description: The API error.
    ServiceError:
      description: The API error details.
      type: object
      properties:
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message text.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ServiceErrorDetail'
          description: The list of error details.
          readOnly: true
    ServiceErrorDetail:
      description: The error details.
      type: object
      properties:
        code:
          type: string
          readOnly: true
          description: The error code.
        message:
          type: string
          readOnly: true
          description: The error message.
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    reservation:
      id: azure.reservations.reservation
      name: reservation
      title: reservation
      methods:
        available_scopes:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1reservations~1{reservationId}~1availableScopes~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        split:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1split~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        merge:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1merge~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1reservations~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1reservations~1{reservationId}~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1reservations~1{reservationId}~1?api-version=2022-11-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        archive:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1reservations~1{reservationId}~1archive~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unarchive:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1reservations~1{reservationId}~1unarchive~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reservation/methods/get'
          - $ref: '#/components/x-stackQL-resources/reservation/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    catalog:
      id: azure.reservations.catalog
      name: catalog
      title: catalog
      methods:
        catalog:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1catalogs~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    applied_reservation:
      id: azure.reservations.applied_reservation
      name: applied_reservation
      title: applied_reservation
      methods:
        applied_reservation:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1appliedReservations~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    reservation_order:
      id: azure.reservations.reservation_order
      name: reservation_order
      title: reservation_order
      methods:
        calculate:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1calculatePrice~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        purchase:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1?api-version=2022-11-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        change_directory:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1changeDirectory~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reservation_order/methods/get'
          - $ref: '#/components/x-stackQL-resources/reservation_order/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    reservation_revisions:
      id: azure.reservations.reservation_revisions
      name: reservation_revisions
      title: reservation_revisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1reservations~1{reservationId}~1revisions~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reservation_revisions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operation:
      id: azure.reservations.operation
      name: operation
      title: operation
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1operations~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    calculate_refund:
      id: azure.reservations.calculate_refund
      name: calculate_refund
      title: calculate_refund
      methods:
        post:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1calculateRefund~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    return:
      id: azure.reservations.return
      name: return
      title: return
      methods:
        post:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservationOrders~1{reservationOrderId}~1return~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    calculate_exchange:
      id: azure.reservations.calculate_exchange
      name: calculate_exchange
      title: calculate_exchange
      methods:
        post:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1calculateExchange~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    exchange:
      id: azure.reservations.exchange
      name: exchange
      title: exchange
      methods:
        post:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1exchange~1?api-version=2022-11-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    reservation_all:
      id: azure.reservations.reservation_all
      name: reservation_all
      title: reservation_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Capacity~1reservations~1?api-version=2022-11-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reservation_all/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    quota:
      id: azure.reservations.quota
      name: quota
      title: quota
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1resourceProviders~1{providerId}~1locations~1{location}~1serviceLimits~1{resourceName}~1?api-version=2020-10-25/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1resourceProviders~1{providerId}~1locations~1{location}~1serviceLimits~1{resourceName}~1?api-version=2020-10-25/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1resourceProviders~1{providerId}~1locations~1{location}~1serviceLimits~1{resourceName}~1?api-version=2020-10-25/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1resourceProviders~1{providerId}~1locations~1{location}~1serviceLimits~1?api-version=2020-10-25/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quota/methods/get'
          - $ref: '#/components/x-stackQL-resources/quota/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/quota/methods/create_or_update'
        update: []
        replace: []
        delete: []
    quota_request_status:
      id: azure.reservations.quota_request_status
      name: quota_request_status
      title: quota_request_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1resourceProviders~1{providerId}~1locations~1{location}~1serviceLimitsRequests~1{id}~1?api-version=2020-10-25/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Capacity~1resourceProviders~1{providerId}~1locations~1{location}~1serviceLimitsRequests~1?api-version=2020-10-25/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quota_request_status/methods/get'
          - $ref: '#/components/x-stackQL-resources/quota_request_status/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_reservation:
      id: azure.reservations.vw_reservation
      name: vw_reservation
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              sku as sku,
              kind as kind,
              JSON_EXTRACT(properties, '$.reservedResourceType') as reserved_resource_type,
              JSON_EXTRACT(properties, '$.instanceFlexibility') as instance_flexibility,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.appliedScopes') as applied_scopes,
              JSON_EXTRACT(properties, '$.appliedScopeType') as applied_scope_type,
              JSON_EXTRACT(properties, '$.archived') as archived,
              JSON_EXTRACT(properties, '$.capabilities') as capabilities,
              JSON_EXTRACT(properties, '$.quantity') as quantity,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.effectiveDateTime') as effective_date_time,
              JSON_EXTRACT(properties, '$.benefitStartTime') as benefit_start_time,
              JSON_EXTRACT(properties, '$.lastUpdatedDateTime') as last_updated_date_time,
              JSON_EXTRACT(properties, '$.expiryDate') as expiry_date,
              JSON_EXTRACT(properties, '$.expiryDateTime') as expiry_date_time,
              JSON_EXTRACT(properties, '$.reviewDateTime') as review_date_time,
              JSON_EXTRACT(properties, '$.skuDescription') as sku_description,
              JSON_EXTRACT(properties, '$.extendedStatusInfo') as extended_status_info,
              JSON_EXTRACT(properties, '$.billingPlan') as billing_plan,
              JSON_EXTRACT(properties, '$.displayProvisioningState') as display_provisioning_state,
              JSON_EXTRACT(properties, '$.provisioningSubState') as provisioning_sub_state,
              JSON_EXTRACT(properties, '$.purchaseDate') as purchase_date,
              JSON_EXTRACT(properties, '$.purchaseDateTime') as purchase_date_time,
              JSON_EXTRACT(properties, '$.splitProperties') as split_properties,
              JSON_EXTRACT(properties, '$.mergeProperties') as merge_properties,
              JSON_EXTRACT(properties, '$.swapProperties') as swap_properties,
              JSON_EXTRACT(properties, '$.appliedScopeProperties') as applied_scope_properties,
              JSON_EXTRACT(properties, '$.billingScopeId') as billing_scope_id,
              JSON_EXTRACT(properties, '$.renew') as renew,
              JSON_EXTRACT(properties, '$.renewSource') as renew_source,
              JSON_EXTRACT(properties, '$.renewDestination') as renew_destination,
              JSON_EXTRACT(properties, '$.renewProperties') as renew_properties,
              JSON_EXTRACT(properties, '$.term') as term,
              JSON_EXTRACT(properties, '$.userFriendlyAppliedScopeType') as user_friendly_applied_scope_type,
              JSON_EXTRACT(properties, '$.userFriendlyRenewState') as user_friendly_renew_state,
              JSON_EXTRACT(properties, '$.utilization') as utilization,
              reservationOrderId,
              reservationId
              FROM azure.reservations.reservation
              WHERE reservationOrderId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                sku as sku,
                kind as kind,
                json_extract_path_text(properties, '$.reservedResourceType') as reserved_resource_type,
                JSON_EXTRACT(properties, '$.instanceFlexibility') as instance_flexibility,
                JSON_EXTRACT(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.appliedScopes') as applied_scopes,
                JSON_EXTRACT(properties, '$.appliedScopeType') as applied_scope_type,
                JSON_EXTRACT(properties, '$.archived') as archived,
                JSON_EXTRACT(properties, '$.capabilities') as capabilities,
                JSON_EXTRACT(properties, '$.quantity') as quantity,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.effectiveDateTime') as effective_date_time,
                JSON_EXTRACT(properties, '$.benefitStartTime') as benefit_start_time,
                JSON_EXTRACT(properties, '$.lastUpdatedDateTime') as last_updated_date_time,
                JSON_EXTRACT(properties, '$.expiryDate') as expiry_date,
                JSON_EXTRACT(properties, '$.expiryDateTime') as expiry_date_time,
                JSON_EXTRACT(properties, '$.reviewDateTime') as review_date_time,
                JSON_EXTRACT(properties, '$.skuDescription') as sku_description,
                JSON_EXTRACT(properties, '$.extendedStatusInfo') as extended_status_info,
                JSON_EXTRACT(properties, '$.billingPlan') as billing_plan,
                JSON_EXTRACT(properties, '$.displayProvisioningState') as display_provisioning_state,
                JSON_EXTRACT(properties, '$.provisioningSubState') as provisioning_sub_state,
                JSON_EXTRACT(properties, '$.purchaseDate') as purchase_date,
                JSON_EXTRACT(properties, '$.purchaseDateTime') as purchase_date_time,
                JSON_EXTRACT(properties, '$.splitProperties') as split_properties,
                JSON_EXTRACT(properties, '$.mergeProperties') as merge_properties,
                JSON_EXTRACT(properties, '$.swapProperties') as swap_properties,
                JSON_EXTRACT(properties, '$.appliedScopeProperties') as applied_scope_properties,
                JSON_EXTRACT(properties, '$.billingScopeId') as billing_scope_id,
                JSON_EXTRACT(properties, '$.renew') as renew,
                JSON_EXTRACT(properties, '$.renewSource') as renew_source,
                JSON_EXTRACT(properties, '$.renewDestination') as renew_destination,
                JSON_EXTRACT(properties, '$.renewProperties') as renew_properties,
                JSON_EXTRACT(properties, '$.term') as term,
                JSON_EXTRACT(properties, '$.userFriendlyAppliedScopeType') as user_friendly_applied_scope_type,
                JSON_EXTRACT(properties, '$.userFriendlyRenewState') as user_friendly_renew_state,
                JSON_EXTRACT(properties, '$.utilization') as utilization,
                reservationOrderId,
                reservationId
                FROM azure.reservations.reservation
                WHERE reservationOrderId = 'replace-me';
    vw_reservation_order:
      id: azure.reservations.vw_reservation_order
      name: vw_reservation_order
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              etag as etag,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.requestDateTime') as request_date_time,
              JSON_EXTRACT(properties, '$.createdDateTime') as created_date_time,
              JSON_EXTRACT(properties, '$.expiryDate') as expiry_date,
              JSON_EXTRACT(properties, '$.expiryDateTime') as expiry_date_time,
              JSON_EXTRACT(properties, '$.benefitStartTime') as benefit_start_time,
              JSON_EXTRACT(properties, '$.originalQuantity') as original_quantity,
              JSON_EXTRACT(properties, '$.term') as term,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.billingPlan') as billing_plan,
              JSON_EXTRACT(properties, '$.planInformation') as plan_information,
              JSON_EXTRACT(properties, '$.reservations') as reservations,
              JSON_EXTRACT(properties, '$.reviewDateTime') as review_date_time,
              reservationOrderId
              FROM azure.reservations.reservation_order
              WHERE ;
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                etag as etag,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.requestDateTime') as request_date_time,
                JSON_EXTRACT(properties, '$.createdDateTime') as created_date_time,
                JSON_EXTRACT(properties, '$.expiryDate') as expiry_date,
                JSON_EXTRACT(properties, '$.expiryDateTime') as expiry_date_time,
                JSON_EXTRACT(properties, '$.benefitStartTime') as benefit_start_time,
                JSON_EXTRACT(properties, '$.originalQuantity') as original_quantity,
                JSON_EXTRACT(properties, '$.term') as term,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.billingPlan') as billing_plan,
                JSON_EXTRACT(properties, '$.planInformation') as plan_information,
                JSON_EXTRACT(properties, '$.reservations') as reservations,
                JSON_EXTRACT(properties, '$.reviewDateTime') as review_date_time,
                reservationOrderId
                FROM azure.reservations.reservation_order
                WHERE ;
    vw_quota:
      id: azure.reservations.vw_quota
      name: vw_quota
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.limit') as limit,
              JSON_EXTRACT(properties, '$.currentValue') as current_value,
              JSON_EXTRACT(properties, '$.unit') as unit,
              JSON_EXTRACT(properties, '$.name') as name,
              JSON_EXTRACT(properties, '$.resourceType') as resource_type,
              JSON_EXTRACT(properties, '$.quotaPeriod') as quota_period,
              JSON_EXTRACT(properties, '$.properties') as properties,
              subscriptionId,
              providerId,
              location,
              resourceName
              FROM azure.reservations.quota
              WHERE subscriptionId = 'replace-me' AND providerId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.limit') as limit,
                JSON_EXTRACT(properties, '$.currentValue') as current_value,
                JSON_EXTRACT(properties, '$.unit') as unit,
                JSON_EXTRACT(properties, '$.name') as name,
                JSON_EXTRACT(properties, '$.resourceType') as resource_type,
                JSON_EXTRACT(properties, '$.quotaPeriod') as quota_period,
                JSON_EXTRACT(properties, '$.properties') as properties,
                subscriptionId,
                providerId,
                location,
                resourceName
                FROM azure.reservations.quota
                WHERE subscriptionId = 'replace-me' AND providerId = 'replace-me' AND location = 'replace-me';
    vw_quota_request_status:
      id: azure.reservations.vw_quota_request_status
      name: vw_quota_request_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.message') as message,
              JSON_EXTRACT(properties, '$.requestSubmitTime') as request_submit_time,
              JSON_EXTRACT(properties, '$.value') as value,
              subscriptionId,
              providerId,
              location,
              id
              FROM azure.reservations.quota_request_status
              WHERE subscriptionId = 'replace-me' AND providerId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.message') as message,
                JSON_EXTRACT(properties, '$.requestSubmitTime') as request_submit_time,
                JSON_EXTRACT(properties, '$.value') as value,
                subscriptionId,
                providerId,
                location,
                id
                FROM azure.reservations.quota_request_status
                WHERE subscriptionId = 'replace-me' AND providerId = 'replace-me' AND location = 'replace-me';
paths:
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/availableScopes/?api-version=2022-11-01:
    post:
      summary: Get Available Scopes for `Reservation`.
      description: |
        Check whether the scopes from request is valid for `Reservation`.
      operationId: Reservation_AvailableScopes
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
        - $ref: '#/components/parameters/ReservationIdParameter'
      requestBody:
        description: Scopes to be checked for eligibility.
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailableScopeRequest'
      tags:
        - Reservation, AvailableScopes
      responses:
        '200':
          description: List of `Subscription`s created after the filter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableScopeProperties'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs/?api-version=2022-11-01:
    get:
      summary: Get the regions and skus that are available for RI purchase for the specified Azure subscription.
      operationId: GetCatalog
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ReservedResourceTypeIdParameter'
        - $ref: '#/components/parameters/LocationIdParameter'
        - name: publisherId
          in: query
          description: Publisher id used to get the third party products
          required: false
          schema:
            type: string
        - name: offerId
          in: query
          description: Offer id used to get the third party products
          required: false
          schema:
            type: string
        - name: planId
          in: query
          description: Plan id used to get the third party products
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: May be used to filter by Catalog properties. The filter supports 'eq', 'or', and 'and'.
          required: false
          schema:
            type: string
        - name: $skip
          in: query
          description: The number of reservations to skip from the list before returning results
          required: false
          schema:
            type: number
        - name: $take
          in: query
          description: To number of reservations to return
          required: false
          schema:
            type: number
      tags:
        - Catalog
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogsResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations/?api-version=2022-11-01:
    get:
      summary: Get list of applicable `Reservation`s.
      description: Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.
      operationId: GetAppliedReservationList
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      tags:
        - AppliedReservation
      responses:
        '200':
          description: Applicable `Reservation`s.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedReservations'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/calculatePrice/?api-version=2022-11-01:
    post:
      summary: Calculate price for a `ReservationOrder`.
      description: Calculate price for placing a `ReservationOrder`.
      operationId: ReservationOrder_Calculate
      parameters: []
      requestBody:
        description: Information needed for calculate or purchase reservation
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
      tags:
        - Reservation, Calculate
      responses:
        '200':
          description: Detailed price info for purchasing `ReservationOrder`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatePriceResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/?api-version=2022-11-01:
    get:
      summary: Get all `ReservationOrder`s.
      description: List of all the `ReservationOrder`s that the user has access to in the current tenant.
      operationId: ReservationOrder_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters: []
      tags:
        - Reservation
      responses:
        '200':
          description: List of `ReservationOrder`s
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationOrderList'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/?api-version=2022-11-01:
    put:
      summary: Purchase `ReservationOrder`
      description: Purchase `ReservationOrder` and create resource under the specified URI.
      operationId: ReservationOrder_Purchase
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
      requestBody:
        description: Information needed for calculate or purchase reservation
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
      tags:
        - Reservation, Purchase
      responses:
        '200':
          description: The resource has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationOrderResponse'
        '202':
          description: The request is accepted and is being processed. Operation result link is in location header.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationOrderResponse'
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Clients should wait for the Retry-After interval before polling again
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get a specific `ReservationOrder`.
      description: Get the details of the `ReservationOrder`.
      operationId: ReservationOrder_Get
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
        - name: $expand
          in: query
          description: May be used to expand the planInformation.
          required: false
          schema:
            type: string
      tags:
        - Reservation
      responses:
        '200':
          description: Get the details of the `ReservationOrder`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationOrderResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split/?api-version=2022-11-01:
    post:
      summary: Split the `Reservation`.
      description: Split a `Reservation` into two `Reservation`s with specified quantity distribution.
      operationId: Reservation_Split
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
      requestBody:
        description: Information needed to Split a reservation item
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitRequest'
      tags:
        - Reservation, Split
      responses:
        '200':
          description: List of `Reservation`s created after the split operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationResponse'
        '202':
          description: The request is accepted and is being processed
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Clients should wait for the Retry-After interval before polling again
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge/?api-version=2022-11-01:
    post:
      summary: Merges two `Reservation`s.
      description: Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged must have same properties.
      operationId: Reservation_Merge
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
      requestBody:
        description: Information needed for commercial request for a reservation
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeRequest'
      tags:
        - Reservation, Merge
      responses:
        '200':
          description: Returns the `Reservation` created after the merge.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReservationResponse'
        '202':
          description: The request is accepted and is being processed
          headers:
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Clients should wait for the Retry-After interval before polling again
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/?api-version=2022-11-01:
    get:
      summary: Get `Reservation`s in a given reservation Order
      description: List `Reservation`s within a single `ReservationOrder`.
      operationId: Reservation_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
      tags:
        - Reservation
      responses:
        '200':
          description: List `Reservation`s within a single `ReservationOrder`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationList'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/?api-version=2022-11-01:
    get:
      summary: Get `Reservation` details.
      description: Get specific `Reservation` details.
      operationId: Reservation_Get
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
        - $ref: '#/components/parameters/ReservationIdParameter'
        - $ref: '#/components/parameters/ExpandRenewPropertiesParameter'
      tags:
        - Reservation
      responses:
        '200':
          description: Get `Reservation` details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Updates a `Reservation`.
      description: Updates the applied scopes of the `Reservation`.
      operationId: Reservation_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
        - $ref: '#/components/parameters/ReservationIdParameter'
      requestBody:
        description: Information needed to patch a reservation item
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patch'
      tags:
        - Reservation
        - ApplyScope
      responses:
        '200':
          description: Returns the updated `Reservation`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResponse'
        '202':
          description: The request is accepted and is being processed
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL for checking the ongoing status of the operation.
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Clients should wait for the Retry-After interval before polling again
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/archive/?api-version=2022-11-01:
    post:
      summary: Archive a `Reservation`.
      description: Archiving a `Reservation` moves it to `Archived` state.
      operationId: Reservation_Archive
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
        - $ref: '#/components/parameters/ReservationIdParameter'
      tags:
        - Reservation, Archive
      responses:
        '200':
          description: Archived a reservation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/unarchive/?api-version=2022-11-01:
    post:
      summary: Unarchive a `Reservation`.
      description: |
        Restores a `Reservation` to the state it was before archiving.
      operationId: Reservation_Unarchive
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
        - $ref: '#/components/parameters/ReservationIdParameter'
      tags:
        - Reservation, Unarchive
      responses:
        '200':
          description: Unarchive complete for the reservation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/revisions/?api-version=2022-11-01:
    get:
      summary: Get `Reservation` revisions.
      description: List of all the revisions for the `Reservation`.
      operationId: Reservation_ListRevisions
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
        - $ref: '#/components/parameters/ReservationIdParameter'
      tags:
        - Reservation
      responses:
        '200':
          description: List of all the revisions for the `Reservation`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationList'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/operations/?api-version=2022-11-01:
    get:
      summary: Get operations.
      description: List all the operations.
      operationId: Operation_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters: []
      tags:
        - Operation
      responses:
        '200':
          description: List all the operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/calculateRefund/?api-version=2022-11-01:
    post:
      summary: Calculate the refund amount of a reservation order.
      description: |
        Calculate price for returning `Reservations` if there are no policy errors.
      operationId: CalculateRefund_Post
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
      requestBody:
        description: Information needed for calculating refund of a reservation.
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateRefundRequest'
      tags:
        - CalculateRefund
      responses:
        '200':
          description: Detailed refund info of a reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateRefundResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/return/?api-version=2022-11-01:
    post:
      summary: Return a reservation.
      description: Return a reservation and get refund information.
      operationId: Return_Post
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
      requestBody:
        description: Information needed for returning reservation.
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
      tags:
        - Return
      responses:
        '200':
          description: The resource has been returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationOrderResponse'
        '202':
          description: Detailed refund info of a reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundResponse'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/calculateExchange/?api-version=2022-11-01:
    post:
      summary: Calculates the refund amounts and price of the new purchases.
      description: |
        Calculates price for exchanging `Reservations` if there are no policy errors.
      operationId: CalculateExchange_Post
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters: []
      requestBody:
        description: Request containing purchases and refunds that need to be executed.
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateExchangeRequest'
      tags:
        - Exchange
      responses:
        '200':
          description: The request is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateExchangeOperationResultResponse'
        '202':
          description: The request is accepted and is being processed.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL for checking the ongoing status of the operation.
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Clients should wait for the Retry-After interval before polling again
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/exchange/?api-version=2022-11-01:
    post:
      summary: Exchange Reservation(s)
      description: |
        Returns one or more `Reservations` in exchange for one or more `Reservation` purchases.
      operationId: Exchange_Post
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters: []
      requestBody:
        description: Request containing the refunds and purchases that need to be executed.
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
      tags:
        - Exchange
      responses:
        '200':
          description: The request is completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeOperationResultResponse'
        '202':
          description: The request is accepted and is being processed.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: URL for checking the ongoing status of the operation.
            Location:
              schema:
                type: string
              description: URL for determining when an operation has completed. Only use this value only when Azure-AsyncOperation isn't returned.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: Clients should wait for the Retry-After interval before polling again
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers/Microsoft.Capacity/reservations/?api-version=2022-11-01:
    get:
      description: List the reservations and the roll up counts of reservations group by provisioning states that the user has access to in the current tenant.
      operationId: Reservation_ListAll
      parameters:
        - name: $filter
          in: query
          description: May be used to filter by reservation properties. The filter supports 'eq', 'or', and 'and'. It does not currently support 'ne', 'gt', 'le', 'ge', or 'not'. Reservation properties include sku/name, properties/{appliedScopeType, archived, displayName, displayProvisioningState, effectiveDateTime, expiryDate, expiryDateTime, provisioningState, quantity, renew, reservedResourceType, term, userFriendlyAppliedScopeType, userFriendlyRenewState}
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: May be used to sort order by reservation properties.
          required: false
          schema:
            type: string
        - name: refreshSummary
          in: query
          description: To indicate whether to refresh the roll up counts of the reservations group by provisioning states
          required: false
          schema:
            type: string
        - name: $skiptoken
          in: query
          description: The number of reservations to skip from the list before returning results
          required: false
          schema:
            type: number
        - name: selectedState
          in: query
          description: The selected provisioning state
          required: false
          schema:
            type: string
        - name: take
          in: query
          description: To number of reservations to return
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/changeDirectory/?api-version=2022-11-01:
    post:
      summary: Change directory of `ReservationOrder`.
      description: Change directory (tenant) of `ReservationOrder` and all `Reservation` under it to specified tenant id
      operationId: ReservationOrder_ChangeDirectory
      parameters:
        - $ref: '#/components/parameters/ReservationOrderIdParameter'
      requestBody:
        description: Information needed to change directory of reservation order
        required: true
        x-ms-requestBody-name: body
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeDirectoryRequest'
      tags:
        - ReservationOrder, ChangeDirectory
      responses:
        '200':
          description: List of `Reservation`s created after the change directory operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeDirectoryResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/{resourceName}/?api-version=2020-10-25:
    get:
      tags:
        - QuotaInformation
      description: Get the current quota (service limit) and usage of a resource. You can use the response from the GET operation to submit quota update request.
      operationId: Quota_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdInParameters'
        - $ref: '#/components/parameters/ProviderIdInParameters'
        - $ref: '#/components/parameters/LocationIdInParameters'
        - $ref: '#/components/parameters/ResourceNameInParameters'
      responses:
        '200':
          description: OK. Returns the paginated quota information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentQuotaLimitBase'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. It should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error description in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
    put:
      tags:
        - QuotaInformation
      description: "Create or update the quota (service limits) of a resource to the requested value.\n Steps:\r\n  1. Make the Get request to get the quota information for specific resource.\r\n  2. To increase the quota, update the limit field in the response from Get request to new value.\r\n  3. Submit the JSON to the quota request API to update the quota.\r\n  The Create quota request may be constructed as follows. The PUT operation can be used to update the quota."
      operationId: Quota_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdInParameters'
        - $ref: '#/components/parameters/ProviderIdInParameters'
        - $ref: '#/components/parameters/LocationIdInParameters'
        - $ref: '#/components/parameters/ResourceNameInParameters'
      requestBody:
        description: Quota requests payload.
        required: true
        x-ms-requestBody-name: createQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentQuotaLimitBase'
      responses:
        '200':
          description: OK. Returns details of the quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentQuotaLimitBase'
        '201':
          description: The request is accepted and being processed. Use the requestId parameter to check the status of the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaRequestSubmitResponse201'
        default:
          description: Error description in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
    patch:
      tags:
        - QuotaInformation
      description: "Update the quota (service limits) of this resource to the requested value.\r\n  • To get the quota information for specific resource, send a GET request.\r\n  • To increase the quota, update the limit field from the GET response to a new value.\r\n  • To update the quota value, submit the JSON response to the quota request API to update the quota.\r\n  • To update the quota. use the PATCH operation."
      operationId: Quota_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdInParameters'
        - $ref: '#/components/parameters/ProviderIdInParameters'
        - $ref: '#/components/parameters/LocationIdInParameters'
        - $ref: '#/components/parameters/ResourceNameInParameters'
      requestBody:
        description: Payload for the quota request.
        required: true
        x-ms-requestBody-name: createQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentQuotaLimitBase'
      responses:
        '200':
          description: OK. Returns details of the quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentQuotaLimitBase'
        '201':
          description: The request is accepted and is being processed. Use the requestId parameter to check the status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaRequestSubmitResponse201'
        default:
          description: Error description in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimits/?api-version=2020-10-25:
    get:
      tags:
        - QuotaInformation
      description: Gets a list of current quotas (service limits) and usage for all resources. The response from the list quota operation can be leveraged to request quota updates.
      operationId: Quota_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdInParameters'
        - $ref: '#/components/parameters/ProviderIdInParameters'
        - $ref: '#/components/parameters/LocationIdInParameters'
      responses:
        '200':
          description: OK. Returns the paginated quota information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaLimits'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error description in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/{id}/?api-version=2020-10-25:
    get:
      tags:
        - QuotaRequests
      description: For the specified Azure region (location), get the details and status of the quota request by the quota request ID for the resources of the resource provider. The PUT request for the quota (service limit) returns a response with the requestId parameter.
      operationId: QuotaRequestStatus_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdInParameters'
        - $ref: '#/components/parameters/ProviderIdInParameters'
        - $ref: '#/components/parameters/LocationIdInParameters'
        - $ref: '#/components/parameters/RequestIdInParameters'
      responses:
        '200':
          description: Ok. Returns the status of the quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaRequestDetails'
        default:
          description: Error description in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Capacity/resourceProviders/{providerId}/locations/{location}/serviceLimitsRequests/?api-version=2020-10-25:
    get:
      tags:
        - QuotaRequests
      description: For the specified Azure region (location), subscription, and resource provider, get the history of the quota requests for the past year. To select specific quota requests, use the oData filter.
      operationId: QuotaRequestStatus_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdInParameters'
        - $ref: '#/components/parameters/ProviderIdInParameters'
        - $ref: '#/components/parameters/LocationIdInParameters'
        - name: $filter
          in: query
          description: "| Field | Supported operators |\r\n|---------------------|------------------------|\r\n|requestSubmitTime | ge, le, eq, gt, lt |"
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipTokenParameter'
      responses:
        '200':
          description: Ok. Returns details and status of the quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaRequestDetailsList'
        default:
          description: Error description in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      x-ms-pageable:
        nextLinkName: nextLink
