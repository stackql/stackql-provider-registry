openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Advisor
  description: Azure Advisor is a personalized cloud consultant that helps you follow best practices to optimize your Azure deployments.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The Azure subscription ID.
      required: true
      schema:
        type: string
    apiVersionParameter:
      name: api-version
      in: query
      description: The version of the API to be used with the client request.
      required: true
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    MetadataEntityListResult:
      description: The list of metadata entities
      type: object
      properties:
        value:
          description: The list of metadata entities.
          type: array
          items:
            $ref: '#/components/schemas/MetadataEntity'
        nextLink:
          description: The link used to get the next page of metadata.
          type: string
    MetadataEntity:
      description: The metadata entity contract.
      properties:
        id:
          description: The resource Id of the metadata entity.
          type: string
        type:
          description: The type of the metadata entity.
          type: string
        name:
          description: The name of the metadata entity.
          type: string
        properties:
          $ref: '#/components/schemas/MetadataEntityProperties'
          description: The metadata entity properties.
          x-ms-client-flatten: true
      type: object
    MetadataEntityProperties:
      description: The metadata entity properties
      type: object
      properties:
        displayName:
          description: The display name.
          type: string
        dependsOn:
          description: The list of keys on which this entity depends on.
          type: array
          items:
            type: string
        applicableScenarios:
          description: The list of scenarios applicable to this metadata entity.
          type: array
          items:
            enum:
              - Alerts
            type: string
            x-ms-enum:
              name: Scenario
              modelAsString: true
        supportedValues:
          description: The list of supported values.
          type: array
          items:
            $ref: '#/components/schemas/MetadataSupportedValueDetail'
    MetadataSupportedValueDetail:
      description: The metadata supported value detail.
      type: object
      properties:
        id:
          description: The id.
          type: string
        displayName:
          description: The display name.
          type: string
    ConfigurationListResult:
      description: The list of Advisor configurations.
      type: object
      properties:
        value:
          description: The list of configurations.
          type: array
          items:
            $ref: '#/components/schemas/ConfigData'
        nextLink:
          description: The link used to get the next page of configurations.
          type: string
    ConfigData:
      description: The Advisor configuration data structure.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/ConfigDataProperties'
          description: The Advisor configuration data structure.
          x-ms-client-flatten: true
      type: object
    ConfigDataProperties:
      description: Configuration data properties
      type: object
      properties:
        exclude:
          description: 'Exclude the resource from Advisor evaluations. Valid values: False (default) or True.'
          type: boolean
        lowCpuThreshold:
          description: 'Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.'
          enum:
            - '5'
            - '10'
            - '15'
            - '20'
          type: string
          x-ms-enum:
            name: CpuThreshold
            modelAsString: true
        duration:
          description: 'Minimum duration for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 7 (default), 14, 21, 30, 60 or 90.'
          enum:
            - '7'
            - '14'
            - '21'
            - '30'
            - '60'
            - '90'
          type: string
          x-ms-enum:
            name: Duration
            modelAsString: true
        digests:
          description: Advisor digest configuration. Valid only for subscriptions
          type: array
          items:
            $ref: '#/components/schemas/DigestConfig'
          x-ms-identifiers:
            - name
    DigestConfig:
      description: Advisor Digest configuration entity
      type: object
      properties:
        name:
          description: Name of digest configuration. Value is case-insensitive and must be unique within a subscription.
          type: string
        actionGroupResourceId:
          description: Action group resource id used by digest.
          type: string
        frequency:
          format: int32
          description: Frequency that digest will be triggered, in days. Value must be between 7 and 30 days inclusive.
          type: integer
        categories:
          description: Categories to send digest for. If categories are not provided, then digest will be sent for all categories.
          type: array
          items:
            enum:
              - HighAvailability
              - Security
              - Performance
              - Cost
              - OperationalExcellence
            type: string
            x-ms-enum:
              name: Category
              modelAsString: true
        language:
          description: Language for digest content body. Value must be ISO 639-1 code for one of Azure portal supported languages. Otherwise, it will be converted into one. Default value is English (en).
          type: string
        state:
          description: State of digest configuration.
          enum:
            - Active
            - Disabled
          type: string
          x-ms-enum:
            name: DigestConfigState
            modelAsString: true
    ArmErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ARMErrorResponseBody'
    ARMErrorResponseBody:
      description: ARM error response body.
      type: object
      properties:
        message:
          description: Gets or sets the string that describes the error in detail and provides debugging information.
          type: string
        code:
          description: Gets or sets the string that can be used to programmatically identify the error.
          type: string
    ResourceRecommendationBaseListResult:
      description: The list of Advisor recommendations.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of recommendations.
          type: string
        value:
          description: The list of recommendations.
          type: array
          items:
            $ref: '#/components/schemas/ResourceRecommendationBase'
    ResourceRecommendationBase:
      description: Advisor Recommendation.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/RecommendationProperties'
          description: The properties of the recommendation.
          x-ms-client-flatten: true
      type: object
    RecommendationProperties:
      description: The properties of the recommendation.
      type: object
      properties:
        category:
          description: The category of the recommendation.
          enum:
            - HighAvailability
            - Security
            - Performance
            - Cost
            - OperationalExcellence
          type: string
          x-ms-enum:
            name: category
            modelAsString: true
        impact:
          description: The business impact of the recommendation.
          enum:
            - High
            - Medium
            - Low
          type: string
          x-ms-enum:
            name: impact
            modelAsString: true
        impactedField:
          description: The resource type identified by Advisor.
          type: string
        impactedValue:
          description: The resource identified by Advisor.
          type: string
        lastUpdated:
          format: date-time
          description: The most recent time that Advisor checked the validity of the recommendation.
          type: string
        metadata:
          description: The recommendation metadata.
          type: object
          additionalProperties:
            type: object
        recommendationTypeId:
          description: The recommendation-type GUID.
          type: string
        risk:
          description: The potential risk of not implementing the recommendation.
          enum:
            - Error
            - Warning
            - None
          type: string
          x-ms-enum:
            name: risk
            modelAsString: true
        shortDescription:
          $ref: '#/components/schemas/ShortDescription'
          description: A summary of the recommendation.
        suppressionIds:
          description: The list of snoozed and dismissed rules for the recommendation.
          type: array
          items:
            format: uuid
            type: string
        extendedProperties:
          description: Extended properties
          type: object
          additionalProperties:
            type: string
        resourceMetadata:
          $ref: '#/components/schemas/ResourceMetadata'
          description: Metadata of resource that was assessed
        description:
          description: The detailed description of recommendation.
          type: string
        label:
          description: The label of recommendation.
          type: string
        learnMoreLink:
          description: The link to learn more about recommendation and generation logic.
          type: string
        potentialBenefits:
          description: The potential benefit of implementing recommendation.
          type: string
        actions:
          description: The list of recommended actions to implement recommendation.
          type: array
          items:
            type: object
            additionalProperties:
              type: object
          x-ms-identifiers: []
        remediation:
          description: The automated way to apply recommendation.
          type: object
          additionalProperties:
            type: object
        exposedMetadataProperties:
          description: The recommendation metadata properties exposed to customer to provide additional information.
          type: object
          additionalProperties:
            type: object
    ShortDescription:
      description: A summary of the recommendation.
      type: object
      properties:
        problem:
          description: The issue or opportunity identified by the recommendation and proposed solution.
          type: string
        solution:
          description: The issue or opportunity identified by the recommendation and proposed solution.
          type: string
    ResourceMetadata:
      description: Recommendation resource metadata
      type: object
      properties:
        resourceId:
          description: Azure resource Id of the assessed resource
          type: string
        source:
          description: Source from which recommendation is generated
          type: string
        action:
          description: The action to view resource.
          type: object
          additionalProperties:
            type: object
        singular:
          description: 'The singular user friendly name of resource type. eg: virtual machine'
          type: string
        plural:
          description: 'The plural user friendly name of resource type. eg: virtual machines'
          type: string
    OperationEntityListResult:
      description: The list of Advisor operations.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of operations.
          type: array
          items:
            $ref: '#/components/schemas/OperationEntity'
          x-ms-identifiers:
            - name
    OperationEntity:
      description: The operation supported by Advisor.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        display:
          $ref: '#/components/schemas/OperationDisplayInfo'
          description: The operation supported by Advisor.
    OperationDisplayInfo:
      description: The operation supported by Advisor.
      type: object
      properties:
        description:
          description: The description of the operation.
          type: string
        operation:
          description: The action that users can perform, based on their permission level.
          type: string
        provider:
          description: 'Service provider: Microsoft Advisor.'
          type: string
        resource:
          description: Resource on which the operation is performed.
          type: string
    SuppressionContract:
      description: The details of the snoozed or dismissed rule; for example, the duration, name, and GUID associated with the rule.
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
        properties:
          $ref: '#/components/schemas/SuppressionProperties'
          description: The properties of the suppression.
          x-ms-client-flatten: true
      type: object
    SuppressionProperties:
      description: The properties of the suppression.
      type: object
      properties:
        suppressionId:
          description: The GUID of the suppression.
          type: string
        ttl:
          description: The duration for which the suppression is valid.
          type: string
        expirationTimeStamp:
          readOnly: true
          format: date-time
          description: Gets or sets the expiration time stamp.
          type: string
    SuppressionContractListResult:
      description: The list of Advisor suppressions.
      type: object
      properties:
        nextLink:
          description: The link used to get the next page of suppressions.
          type: string
        value:
          description: The list of suppressions.
          type: array
          items:
            $ref: '#/components/schemas/SuppressionContract'
    PredictionRequest:
      description: Parameters for predict recommendation.
      properties:
        properties:
          $ref: '#/components/schemas/PredictionRequestProperties'
          description: Request properties for prediction recommendation.
          x-ms-client-flatten: true
      type: object
    PredictionRequestProperties:
      description: Properties given for the predictor.
      type: object
      properties:
        predictionType:
          description: Type of the prediction.
          enum:
            - PredictiveRightsizing
          type: string
          x-ms-enum:
            name: predictionType
            modelAsString: true
        extendedProperties:
          description: Extended properties are arguments specific for each prediction type.
          type: object
    AdvisorScoreResponse:
      type: object
      properties:
        value:
          description: The list of operations.
          type: array
          items:
            $ref: '#/components/schemas/advisorScoreEntity'
    PredictionResponse:
      description: Response used by predictions.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/PredictionResponseProperties'
          description: The properties of the prediction.
          x-ms-client-flatten: true
      type: object
    PredictionResponseProperties:
      description: Properties of the prediction
      type: object
      properties:
        extendedProperties:
          description: Extended properties
          type: object
        predictionType:
          description: Type of the prediction.
          enum:
            - PredictiveRightsizing
          type: string
          x-ms-enum:
            name: predictionType
            modelAsString: true
        category:
          description: The category of the recommendation.
          enum:
            - HighAvailability
            - Security
            - Performance
            - Cost
            - OperationalExcellence
          type: string
          x-ms-enum:
            name: category
            modelAsString: true
        impact:
          description: The business impact of the recommendation.
          enum:
            - High
            - Medium
            - Low
          type: string
          x-ms-enum:
            name: impact
            modelAsString: true
        impactedField:
          description: The resource type identified by Advisor.
          type: string
        lastUpdated:
          format: date-time
          description: The most recent time that Advisor checked the validity of the recommendation.
          type: string
        shortDescription:
          $ref: '#/components/schemas/ShortDescription'
          description: A summary of the recommendation.
    scoreEntity:
      description: The details of Advisor Score
      type: object
      properties:
        date:
          description: The date score was calculated.
          type: string
        score:
          description: The percentage score.
          type: number
        consumptionUnits:
          description: The consumption units for the score.
          type: number
        impactedResourceCount:
          description: The number of impacted resources.
          type: number
        potentialScoreIncrease:
          description: The potential percentage increase in overall score at subscription level once all recommendations in this scope are implemented.
          type: number
        categoryCount:
          description: The count of impacted categories.
          type: number
          readOnly: true
    timeSeriesEntity:
      description: The historic data at different aggregation levels.
      type: array
      items:
        description: The data from different aggregation levels.
        type: object
        properties:
          aggregationLevel:
            description: 'The aggregation level of the score. '
            type: string
            enum:
              - week
              - day
              - month
            x-ms-enum:
              name: aggregated
              modelAsString: true
          scoreHistory:
            description: The past score data
            type: array
            items:
              $ref: '#/components/schemas/scoreEntity'
            x-ms-identifiers: []
      x-ms-identifiers: []
    advisorScoreEntity:
      description: The details of Advisor score for a single category.
      properties:
        properties:
          description: The Advisor score data.
          type: object
          properties:
            lastRefreshedScore:
              description: The details of latest available score.
              $ref: '#/components/schemas/scoreEntity'
            timeSeries:
              description: The historic Advisor score data.
              $ref: '#/components/schemas/timeSeriesEntity'
      type: object
  x-stackQL-resources:
    recommendation_metadata:
      id: azure.advisor.recommendation_metadata
      name: recommendation_metadata
      title: recommendation_metadata
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Advisor~1metadata~1{name}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Advisor~1metadata~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommendation_metadata/methods/get'
          - $ref: '#/components/x-stackQL-resources/recommendation_metadata/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    configurations:
      id: azure.advisor.configurations
      name: configurations
      title: configurations
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1configurations~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_in_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1configurations~1{configurationName}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Advisor~1configurations~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_in_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroup}~1providers~1Microsoft.Advisor~1configurations~1{configurationName}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/configurations/methods/list_by_subscription'
        insert: []
        update: []
        replace: []
        delete: []
    recommendations:
      id: azure.advisor.recommendations
      name: recommendations
      title: recommendations
      methods:
        generate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1generateRecommendations~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1recommendations~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Advisor~1recommendations~1{recommendationId}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/get'
          - $ref: '#/components/x-stackQL-resources/recommendations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.advisor.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Advisor~1operations~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    suppressions:
      id: azure.advisor.suppressions
      name: suppressions
      title: suppressions
      methods:
        get:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Advisor~1recommendations~1{recommendationId}~1suppressions~1{name}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Advisor~1recommendations~1{recommendationId}~1suppressions~1{name}~1?api-version=2023-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{resourceUri}~1providers~1Microsoft.Advisor~1recommendations~1{recommendationId}~1suppressions~1{name}~1?api-version=2023-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1suppressions~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/suppressions/methods/get'
          - $ref: '#/components/x-stackQL-resources/suppressions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/suppressions/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/suppressions/methods/delete'
    prediction:
      id: azure.advisor.prediction
      name: prediction
      title: prediction
      methods:
        prediction:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1predict~1?api-version=2023-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    scores:
      id: azure.advisor.scores
      name: scores
      title: scores
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1advisorScore~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Advisor~1advisorScore~1{name}~1?api-version=2023-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scores/methods/get'
          - $ref: '#/components/x-stackQL-resources/scores/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_recommendation_metadata:
      id: azure.advisor.vw_recommendation_metadata
      name: vw_recommendation_metadata
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.dependsOn') as depends_on,
              JSON_EXTRACT(properties, '$.applicableScenarios') as applicable_scenarios,
              JSON_EXTRACT(properties, '$.supportedValues') as supported_values,
              name
              FROM azure.advisor.recommendation_metadata
              WHERE ;
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.dependsOn') as depends_on,
                JSON_EXTRACT(properties, '$.applicableScenarios') as applicable_scenarios,
                JSON_EXTRACT(properties, '$.supportedValues') as supported_values,
                name
                FROM azure.advisor.recommendation_metadata
                WHERE ;
    vw_recommendations:
      id: azure.advisor.vw_recommendations
      name: vw_recommendations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.category') as category,
              JSON_EXTRACT(properties, '$.impact') as impact,
              JSON_EXTRACT(properties, '$.impactedField') as impacted_field,
              JSON_EXTRACT(properties, '$.impactedValue') as impacted_value,
              JSON_EXTRACT(properties, '$.lastUpdated') as last_updated,
              JSON_EXTRACT(properties, '$.metadata') as metadata,
              JSON_EXTRACT(properties, '$.recommendationTypeId') as recommendation_type_id,
              JSON_EXTRACT(properties, '$.risk') as risk,
              JSON_EXTRACT(properties, '$.shortDescription') as short_description,
              JSON_EXTRACT(properties, '$.suppressionIds') as suppression_ids,
              JSON_EXTRACT(properties, '$.extendedProperties') as extended_properties,
              JSON_EXTRACT(properties, '$.resourceMetadata') as resource_metadata,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.label') as label,
              JSON_EXTRACT(properties, '$.learnMoreLink') as learn_more_link,
              JSON_EXTRACT(properties, '$.potentialBenefits') as potential_benefits,
              JSON_EXTRACT(properties, '$.actions') as actions,
              JSON_EXTRACT(properties, '$.remediation') as remediation,
              JSON_EXTRACT(properties, '$.exposedMetadataProperties') as exposed_metadata_properties,
              resourceUri,
              recommendationId
              FROM azure.advisor.recommendations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.category') as category,
                JSON_EXTRACT(properties, '$.impact') as impact,
                JSON_EXTRACT(properties, '$.impactedField') as impacted_field,
                JSON_EXTRACT(properties, '$.impactedValue') as impacted_value,
                JSON_EXTRACT(properties, '$.lastUpdated') as last_updated,
                JSON_EXTRACT(properties, '$.metadata') as metadata,
                JSON_EXTRACT(properties, '$.recommendationTypeId') as recommendation_type_id,
                JSON_EXTRACT(properties, '$.risk') as risk,
                JSON_EXTRACT(properties, '$.shortDescription') as short_description,
                JSON_EXTRACT(properties, '$.suppressionIds') as suppression_ids,
                JSON_EXTRACT(properties, '$.extendedProperties') as extended_properties,
                JSON_EXTRACT(properties, '$.resourceMetadata') as resource_metadata,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.label') as label,
                JSON_EXTRACT(properties, '$.learnMoreLink') as learn_more_link,
                JSON_EXTRACT(properties, '$.potentialBenefits') as potential_benefits,
                JSON_EXTRACT(properties, '$.actions') as actions,
                JSON_EXTRACT(properties, '$.remediation') as remediation,
                JSON_EXTRACT(properties, '$.exposedMetadataProperties') as exposed_metadata_properties,
                resourceUri,
                recommendationId
                FROM azure.advisor.recommendations
                WHERE subscriptionId = 'replace-me';
    vw_suppressions:
      id: azure.advisor.vw_suppressions
      name: vw_suppressions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.suppressionId') as suppression_id,
              JSON_EXTRACT(properties, '$.ttl') as ttl,
              JSON_EXTRACT(properties, '$.expirationTimeStamp') as expiration_time_stamp,
              resourceUri,
              recommendationId,
              name
              FROM azure.advisor.suppressions
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.suppressionId') as suppression_id,
                JSON_EXTRACT(properties, '$.ttl') as ttl,
                JSON_EXTRACT(properties, '$.expirationTimeStamp') as expiration_time_stamp,
                resourceUri,
                recommendationId,
                name
                FROM azure.advisor.suppressions
                WHERE subscriptionId = 'replace-me';
paths:
  /providers/Microsoft.Advisor/metadata/{name}/?api-version=2023-01-01:
    get:
      tags:
        - Metadata
      summary: Gets the metadata entity.
      operationId: RecommendationMetadata_Get
      parameters:
        - name: name
          in: path
          description: Name of metadata entity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully retrieved metadata entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataEntity'
        '404':
          description: Client sent unknown metadata name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ARMErrorResponseBody'
          x-ms-error-response: true
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
  /providers/Microsoft.Advisor/metadata/?api-version=2023-01-01:
    get:
      tags:
        - Metadata
      summary: Gets the list of metadata entities.
      operationId: RecommendationMetadata_List
      parameters: []
      responses:
        '200':
          description: OK. Successfully retrieved metadata entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataEntityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/configurations/?api-version=2023-01-01:
    get:
      tags:
        - Configurations
      summary: Retrieve Azure Advisor configurations.
      description: Retrieve Azure Advisor configurations and also retrieve configurations of contained resource groups.
      operationId: Configurations_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK. Successfully retrieved zero or more configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/configurations/{configurationName}/?api-version=2023-01-01:
    put:
      tags:
        - Configurations
      summary: Create/Overwrite Azure Advisor configuration.
      description: Create/Overwrite Azure Advisor configuration and also delete all configurations of contained resource groups.
      operationId: Configurations_CreateInSubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: configurationName
          in: path
          description: Advisor configuration name. Value must be 'default'
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: ConfigurationName
              modelAsString: true
            type: string
      requestBody:
        description: The Azure Advisor configuration data structure.
        required: true
        x-ms-requestBody-name: configContract
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigData'
      responses:
        '200':
          description: Successfully created/overwrote configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigData'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations/?api-version=2023-01-01:
    get:
      tags:
        - Configurations
      summary: Retrieve Azure Advisor configurations.
      operationId: Configurations_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: resourceGroup
          in: path
          description: The name of the Azure resource group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully retrieved zero or more configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Advisor/configurations/{configurationName}/?api-version=2023-01-01:
    put:
      tags:
        - Configurations
      summary: Create/Overwrite Azure Advisor configuration.
      operationId: Configurations_CreateInResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: configurationName
          in: path
          description: Advisor configuration name. Value must be 'default'
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: ConfigurationName
              modelAsString: true
            type: string
        - name: resourceGroup
          in: path
          description: The name of the Azure resource group.
          required: true
          schema:
            type: string
      requestBody:
        description: The Azure Advisor configuration data structure.
        required: true
        x-ms-requestBody-name: configContract
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigData'
      responses:
        '200':
          description: Successfully created/overwrote configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigData'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/?api-version=2023-01-01:
    post:
      tags:
        - GenerateRecommendations
      description: Initiates the recommendation generation or computation process for a subscription. This operation is asynchronous. The generated recommendations are stored in a cache in the Advisor service.
      operationId: Recommendations_Generate
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '202':
          description: Accepted. Recommendation generation has been accepted.
          headers:
            Location:
              schema:
                type: string
              description: The URL where the status of the asynchronous operation can be checked.
            Retry-After:
              schema:
                type: string
              description: The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/generateRecommendations/{operationId}/?api-version=2023-01-01:
    get:
      tags:
        - GenerateRecommendations
      description: Retrieves the status of the recommendation computation or generation process. Invoke this API after calling the generation recommendation. The URI of this API is returned in the Location field of the response header.
      operationId: Recommendations_GetGenerateStatus
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: operationId
          in: path
          description: The operation ID, which can be found from the Location field in the generate recommendation response header.
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '202':
          description: Accepted. Recommendation generation is in progress.
        '204':
          description: NoContent. Recommendation generation has been completed.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/recommendations/?api-version=2023-01-01:
    get:
      tags:
        - GetRecommendations
      description: Obtains cached recommendations for a subscription. The recommendations are generated or computed by invoking generateRecommendations.
      operationId: Recommendations_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: $filter
          in: query
          description: The filter to apply to the recommendations.<br>Filter can be applied to properties ['ResourceId', 'ResourceGroup', 'RecommendationTypeGuid', '[Category](#category)'] with operators ['eq', 'and', 'or'].<br>Example:<br>- $filter=Category eq 'Cost' and ResourceGroup eq 'MyResourceGroup'
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of recommendations per page if a paged version of this API is being used.
          required: false
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: The page-continuation token to use with a paged version of this API.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully obtained cached recommendations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecommendationBaseListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Advisor/operations/?api-version=2023-01-01:
    get:
      tags:
        - Operations
      description: Lists all the available Advisor REST API operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK. Successfully retrieved operation list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationEntityListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/?api-version=2023-01-01:
    get:
      tags:
        - GetRecommendations
      description: Obtains details of a cached recommendation.
      operationId: Recommendations_Get
      parameters:
        - name: resourceUri
          in: path
          description: The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
          required: true
          schema:
            type: string
        - name: recommendationId
          in: path
          description: The recommendation ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully got recommendation detail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRecommendationBase'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /{resourceUri}/providers/Microsoft.Advisor/recommendations/{recommendationId}/suppressions/{name}/?api-version=2023-01-01:
    get:
      tags:
        - Suppressions
      description: Obtains the details of a suppression.
      operationId: Suppressions_Get
      parameters:
        - name: resourceUri
          in: path
          description: The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
          required: true
          schema:
            type: string
        - name: recommendationId
          in: path
          description: The recommendation ID.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the suppression.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully got suppression detail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionContract'
        '404':
          description: Suppression name is not specified or Suppression Id not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
          x-ms-error-response: true
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
    put:
      tags:
        - Suppressions
      description: Enables the snoozed or dismissed attribute of a recommendation. The snoozed or dismissed attribute is referred to as a suppression. Use this API to create or update the snoozed or dismissed status of a recommendation.
      operationId: Suppressions_Create
      parameters:
        - name: resourceUri
          in: path
          description: The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
          required: true
          schema:
            type: string
        - name: recommendationId
          in: path
          description: The recommendation ID.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the suppression.
          required: true
          schema:
            type: string
      requestBody:
        description: The snoozed or dismissed attribute; for example, the snooze duration.
        required: true
        x-ms-requestBody-name: suppressionContract
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuppressionContract'
      responses:
        '200':
          description: OK. Successfully created suppression.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionContract'
        '404':
          description: Recommendation to be suppressed is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
          x-ms-error-response: true
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
    delete:
      tags:
        - Suppressions
      description: Enables the activation of a snoozed or dismissed recommendation. The snoozed or dismissed attribute of a recommendation is referred to as a suppression.
      operationId: Suppressions_Delete
      parameters:
        - name: resourceUri
          in: path
          description: The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
          required: true
          schema:
            type: string
        - name: recommendationId
          in: path
          description: The recommendation ID.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the suppression.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: NoContent. The recommendation has been activated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/suppressions/?api-version=2023-01-01:
    get:
      tags:
        - Suppressions
      description: Retrieves the list of snoozed or dismissed suppressions for a subscription. The snoozed or dismissed attribute of a recommendation is referred to as a suppression.
      operationId: Suppressions_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: $top
          in: query
          description: The number of suppressions per page if a paged version of this API is being used.
          required: false
          schema:
            format: int32
            type: integer
        - name: $skipToken
          in: query
          description: The page-continuation token to use with a paged version of this API.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK. Successfully got all suppressions in a subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuppressionContractListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/predict/?api-version=2023-01-01:
    post:
      tags:
        - Prediction
      summary: Predicts a recommendation.
      operationId: Predict
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      requestBody:
        description: Parameters for predict recommendation.
        required: true
        x-ms-requestBody-name: predictionRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionRequest'
      responses:
        '200':
          description: OK. Successfully obtained prediction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/advisorScore/?api-version=2023-01-01:
    get:
      tags:
        - AdvisorScore
      description: Gets the list of advisor scores.
      operationId: AdvisorScores_List
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisorScoreResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
  /subscriptions/{subscriptionId}/providers/Microsoft.Advisor/advisorScore/{name}/?api-version=2023-01-01:
    get:
      tags:
        - AdvisorScore
      description: Gets the advisor score.
      operationId: AdvisorScores_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - name: name
          in: path
          description: The scope of Advisor score entity.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advisorScoreEntity'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmErrorResponse'
      deprecated: false
