openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Relay
  description: Azure Relay provides cloud-enabled communication with enterprise messaging and relayed communication that helps you connect on-premises solutions with the cloud.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API version.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of the Resource group within the Azure subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    NamespaceNameParameter:
      name: namespaceName
      in: path
      description: The namespace name
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 6
        maxLength: 50
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The PrivateEndpointConnection name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateLinkResourceNameParameter:
      name: privateLinkResourceName
      in: path
      description: The PrivateLinkResource name
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    HybridConnectionNameParameter:
      name: hybridConnectionName
      in: path
      description: The hybrid connection name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    AuthorizationRuleNameParameter:
      name: authorizationRuleName
      in: path
      description: The authorization rule name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    RelayNameParameter:
      name: relayName
      in: path
      description: The relay name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationDisplay:
      description: Operation display payload
      type: object
      properties:
        provider:
          description: Resource provider of the operation
          type: string
          readOnly: true
        resource:
          description: Resource of the operation
          type: string
          readOnly: true
        operation:
          description: Localized friendly name for the operation
          type: string
          readOnly: true
        description:
          description: Localized friendly description for the operation
          type: string
          readOnly: true
    Resource:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      description: The resource definition.
      x-ms-azure-resource: true
      type: object
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    TrackedResource:
      required:
        - location
      description: Definition of resource.
      properties:
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    ProxyResource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      x-ms-azure-resource: true
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      type: object
      properties:
        name:
          type: string
          description: Name of this SKU.
          enum:
            - Standard
          x-ms-enum:
            name: SkuName
            modelAsString: true
        tier:
          type: string
          description: The tier of this SKU.
          enum:
            - Standard
          x-ms-enum:
            name: SkuTier
            modelAsString: true
      description: SKU of the namespace.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      description: Error response indicates Relay service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    HybridConnectionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/HybridConnection'
          description: Result of the list hybrid connections.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation.
      description: The response of the list hybrid connection operation.
    HybridConnection:
      description: Description of hybrid connection resource.
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            createdAt:
              readOnly: true
              format: date-time
              type: string
              description: The time the hybrid connection was created.
            updatedAt:
              readOnly: true
              format: date-time
              type: string
              description: The time the namespace was updated.
            listenerCount:
              readOnly: true
              format: int32
              type: integer
              minimum: 0
              maximum: 25
              description: 'The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.'
            requiresClientAuthorization:
              type: boolean
              description: Returns true if client authorization is needed for this hybrid connection; otherwise, false.
            userMetadata:
              type: string
              description: The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.
          description: Properties of the HybridConnection.
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    WcfRelaysListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/WcfRelay'
          description: Result of the list WCF relay operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if value contains incomplete list of WCF relays.
      description: The response of the list WCF relay operation.
    WcfRelay:
      description: Description of the WCF relay resource.
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            isDynamic:
              readOnly: true
              type: boolean
              description: Returns true if the relay is dynamic; otherwise, false.
            createdAt:
              readOnly: true
              format: date-time
              type: string
              description: The time the WCF relay was created.
            updatedAt:
              readOnly: true
              format: date-time
              type: string
              description: The time the namespace was updated.
            listenerCount:
              readOnly: true
              format: int32
              type: integer
              minimum: 0
              maximum: 25
              description: The number of listeners for this relay. Note that min :1 and max:25 are supported.
            relayType:
              type: string
              description: WCF relay type.
              enum:
                - NetTcp
                - Http
              x-ms-enum:
                name: Relaytype
                modelAsString: false
            requiresClientAuthorization:
              type: boolean
              description: Returns true if client authorization is needed for this relay; otherwise, false.
            requiresTransportSecurity:
              type: boolean
              description: Returns true if transport security is needed for this relay; otherwise, false.
            userMetadata:
              type: string
              description: The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.
          description: Properties of the WCF relay.
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    ResourceNamespacePatch:
      description: Definition of resource.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    RelayNamespaceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RelayNamespace'
          description: Result of the list namespace operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if value contains incomplete list of namespaces.
      description: The response from the list namespace operation.
    RelayNamespace:
      description: Description of a namespace resource.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: SKU of the namespace.
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RelayNamespaceProperties'
          description: Description of Relay namespace
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    RelayNamespaceProperties:
      type: object
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: Provisioning state of the Namespace.
        status:
          readOnly: true
          type: string
          description: Status of the Namespace.
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the namespace was created.
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          description: The time the namespace was updated.
        serviceBusEndpoint:
          type: string
          readOnly: true
          description: Endpoint you can use to perform Service Bus operations.
        metricId:
          type: string
          readOnly: true
          description: Identifier for Azure Insights metrics.
        privateEndpointConnections:
          description: List of private endpoint connections.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        publicNetworkAccess:
          description: This determines if traffic is allowed over public network. By default it is enabled.
          enum:
            - Enabled
            - Disabled
            - SecuredByPerimeter
          type: string
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
          default: Enabled
      description: Properties of the namespace.
    RelayUpdateParameters:
      description: Description of a namespace resource.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: SKU of the namespace.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RelayNamespaceProperties'
          description: Description of Relay namespace.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    UnavailableReason:
      type: string
      enum:
        - None
        - InvalidName
        - SubscriptionIsDisabled
        - NameInUse
        - NameInLockdown
        - TooManyNamespaceInCurrentSubscription
      x-ms-enum:
        name: UnavailableReason
        modelAsString: true
      description: Specifies the reason for the unavailability of the service.
    CheckNameAvailability:
      type: object
      properties:
        name:
          type: string
          description: The namespace name to check for availability. The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number.
      required:
        - name
      description: Description of the check name availability request properties.
    CheckNameAvailabilityResult:
      type: object
      properties:
        message:
          type: string
          readOnly: true
          description: The detailed info regarding the reason associated with the namespace.
        nameAvailable:
          type: boolean
          description: Value indicating namespace is available. Returns true if the namespace is available; otherwise, false.
        reason:
          $ref: '#/components/schemas/UnavailableReason'
          description: The reason for unavailability of a namespace.
      description: Description of the check name availability request properties.
    PrivateEndpointConnection:
      description: Properties of the PrivateEndpointConnection.
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Properties of the PrivateEndpointConnection.
          x-ms-client-flatten: true
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      description: Properties of the private endpoint connection resource.
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The Private Endpoint resource for this Connection.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/ConnectionState'
          description: Details about the state of the connection.
        provisioningState:
          description: Provisioning state of the Private Endpoint Connection.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Canceled
            - Failed
          type: string
          x-ms-enum:
            name: EndPointProvisioningState
            modelAsString: true
    PrivateEndpoint:
      type: object
      description: PrivateEndpoint information.
      properties:
        id:
          description: The ARM identifier for Private Endpoint.
          type: string
    ConnectionState:
      type: object
      description: ConnectionState information.
      properties:
        status:
          description: Status of the connection.
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
          type: string
          x-ms-enum:
            name: PrivateLinkConnectionStatus
            modelAsString: true
        description:
          description: Description of the connection state.
          type: string
    PrivateEndpointConnectionListResult:
      type: object
      description: Result of the list of all private endpoint connections operation.
      properties:
        value:
          description: A collection of private endpoint connection resources.
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          description: A link for the next page of private endpoint connection resources.
          type: string
    PrivateLinkResource:
      description: Information of the private link resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Properties of the private link resource.
          x-ms-client-flatten: true
        id:
          description: Fully qualified identifier of the resource.
          type: string
        name:
          description: Name of the resource
          type: string
        type:
          description: Type of the resource
          type: string
      type: object
    PrivateLinkResourceProperties:
      type: object
      description: Properties of PrivateLinkResource
      properties:
        groupId:
          description: The private link resource group id.
          type: string
        requiredMembers:
          type: array
          description: The private link resource required member names.
          items:
            type: string
        requiredZoneNames:
          type: array
          description: The private link resource Private link DNS zone name.
          items:
            type: string
    PrivateLinkResourcesListResult:
      type: object
      description: Result of the List private link resources operation.
      properties:
        value:
          description: A collection of private link resources
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
        nextLink:
          description: A link for the next page of private link resources.
          type: string
    NWRuleSetIpRules:
      type: object
      x-ms-client-flatten: true
      properties:
        ipMask:
          type: string
          description: IP Mask
        action:
          type: string
          description: The IP Filter Action
          enum:
            - Allow
          x-ms-enum:
            name: NetworkRuleIPAction
            modelAsString: true
      description: The response from the List namespace operation.
    NetworkRuleSet:
      description: Description of topic resource.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: NetworkRuleSet properties
          properties:
            trustedServiceAccessEnabled:
              type: boolean
              description: Value that indicates whether Trusted Service Access is Enabled or not.
            defaultAction:
              type: string
              description: Default Action for Network Rule Set
              enum:
                - Allow
                - Deny
              x-ms-enum:
                name: DefaultAction
                modelAsString: true
            publicNetworkAccess:
              type: string
              description: This determines if traffic is allowed over public network. By default it is enabled
              enum:
                - Disabled
                - Enabled
                - SecuredByPerimeter
              x-ms-enum:
                name: PublicNetworkAccess
                modelAsString: true
            ipRules:
              type: array
              items:
                $ref: '#/components/schemas/NWRuleSetIpRules'
              x-ms-identifiers: []
              description: List of IpRules
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
      type: object
    AuthorizationRuleListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationRule'
          description: Result of the list authorization rules operation.
        nextLink:
          type: string
          description: Link to the next set of results. Not empty if value contains incomplete list of authorization rules.
      description: The response from the list namespace operation.
    AuthorizationRule:
      description: Single item in a List or Get AuthorizationRule operation
      properties:
        properties:
          x-ms-client-flatten: true
          properties:
            rights:
              type: array
              items:
                type: string
                enum:
                  - Manage
                  - Send
                  - Listen
                x-ms-enum:
                  name: AccessRights
                  modelAsString: true
              description: The rights associated with the rule.
          required:
            - rights
          description: Properties supplied to create or update AuthorizationRule
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.EventHub/Namespaces" or "Microsoft.EventHub/Namespaces/EventHubs"
        location:
          type: string
          readOnly: true
          description: The geo-location where the resource lives
      type: object
    AccessKeys:
      type: object
      properties:
        primaryConnectionString:
          type: string
          description: Primary connection string of the created namespace authorization rule.
        secondaryConnectionString:
          type: string
          description: Secondary connection string of the created namespace authorization rule.
        primaryKey:
          type: string
          description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
        secondaryKey:
          type: string
          description: A base64-encoded 256-bit secondary key for signing and validating the SAS token.
        keyName:
          type: string
          description: A string that describes the authorization rule.
      description: Namespace/Relay Connection String
    RegenerateAccessKeyParameters:
      type: object
      properties:
        keyType:
          type: string
          description: The access key to regenerate.
          enum:
            - PrimaryKey
            - SecondaryKey
          x-ms-enum:
            name: KeyType
            modelAsString: true
        key:
          type: string
          description: Optional. If the key value is provided, this is set to key type, or autogenerated key value set for key type.
      required:
        - keyType
      description: Parameters supplied to the regenerate authorization rule operation, specifies which key needs to be reset.
  x-stackQL-resources:
    operations:
      id: azure.relay.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Relay~1operations~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hybrid_connections:
      id: azure.relay.hybrid_connections
      name: hybrid_connections
      title: hybrid_connections
      methods:
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1authorizationRules~1{authorizationRuleName}~1regenerateKeys~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/hybrid_connections/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections/methods/delete'
    wcf_relays:
      id: azure.relay.wcf_relays
      name: wcf_relays
      title: wcf_relays
      methods:
        list_by_namespace:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1authorizationRules~1{authorizationRuleName}~1regenerateKeys~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/wcf_relays/methods/get'
          - $ref: '#/components/x-stackQL-resources/wcf_relays/methods/list_by_namespace'
        insert:
          - $ref: '#/components/x-stackQL-resources/wcf_relays/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/wcf_relays/methods/delete'
    namespaces:
      id: azure.relay.namespaces
      name: namespaces
      title: namespaces
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Relay~1checkNameAvailability~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Relay~1namespaces~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1?api-version=2024-01-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_keys:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1regenerateKeys~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces/methods/delete'
    private_endpoint_connections:
      id: azure.relay.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1privateEndpointConnections~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources:
      id: azure.relay.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1privateLinkResources~1{privateLinkResourceName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1privateLinkResources~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    namespaces_network_rule_set:
      id: azure.relay.namespaces_network_rule_set
      name: namespaces_network_rule_set
      title: namespaces_network_rule_set
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1networkRuleSets~1default~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1networkRuleSets~1default~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_network_rule_set/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces_network_rule_set/methods/create_or_update'
        update: []
        replace: []
        delete: []
    namespaces_authorization_rules:
      id: azure.relay.namespaces_authorization_rules
      name: namespaces_authorization_rules
      title: namespaces_authorization_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1authorizationRules~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rules/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    namespaces_authorization_rule:
      id: azure.relay.namespaces_authorization_rule
      name: namespaces_authorization_rule
      title: namespaces_authorization_rule
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rule/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rule/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/namespaces_authorization_rule/methods/delete'
    namespaces_keys:
      id: azure.relay.namespaces_keys
      name: namespaces_keys
      title: namespaces_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1authorizationRules~1{authorizationRuleName}~1listKeys~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/namespaces_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hybrid_connections_authorization_rules:
      id: azure.relay.hybrid_connections_authorization_rules
      name: hybrid_connections_authorization_rules
      title: hybrid_connections_authorization_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1authorizationRules~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections_authorization_rules/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    hybrid_connections_authorization_rule:
      id: azure.relay.hybrid_connections_authorization_rule
      name: hybrid_connections_authorization_rule
      title: hybrid_connections_authorization_rule
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections_authorization_rule/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections_authorization_rule/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections_authorization_rule/methods/delete'
    hybrid_connections_keys:
      id: azure.relay.hybrid_connections_keys
      name: hybrid_connections_keys
      title: hybrid_connections_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1hybridConnections~1{hybridConnectionName}~1authorizationRules~1{authorizationRuleName}~1listKeys~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hybrid_connections_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    wcf_relays_authorization_rules:
      id: azure.relay.wcf_relays_authorization_rules
      name: wcf_relays_authorization_rules
      title: wcf_relays_authorization_rules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1authorizationRules~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/wcf_relays_authorization_rules/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    wcf_relays_authorization_rule:
      id: azure.relay.wcf_relays_authorization_rule
      name: wcf_relays_authorization_rule
      title: wcf_relays_authorization_rule
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1authorizationRules~1{authorizationRuleName}~1?api-version=2024-01-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/wcf_relays_authorization_rule/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/wcf_relays_authorization_rule/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/wcf_relays_authorization_rule/methods/delete'
    wcf_relays_keys:
      id: azure.relay.wcf_relays_keys
      name: wcf_relays_keys
      title: wcf_relays_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Relay~1namespaces~1{namespaceName}~1wcfRelays~1{relayName}~1authorizationRules~1{authorizationRuleName}~1listKeys~1?api-version=2024-01-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/wcf_relays_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_namespaces:
      id: azure.relay.vw_namespaces
      name: vw_namespaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              sku as sku,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.createdAt') as created_at,
              JSON_EXTRACT(properties, '$.updatedAt') as updated_at,
              JSON_EXTRACT(properties, '$.serviceBusEndpoint') as service_bus_endpoint,
              JSON_EXTRACT(properties, '$.metricId') as metric_id,
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
              subscriptionId,
              resourceGroupName,
              namespaceName
              FROM azure.relay.namespaces
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                sku as sku,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.createdAt') as created_at,
                JSON_EXTRACT(properties, '$.updatedAt') as updated_at,
                JSON_EXTRACT(properties, '$.serviceBusEndpoint') as service_bus_endpoint,
                JSON_EXTRACT(properties, '$.metricId') as metric_id,
                JSON_EXTRACT(properties, '$.privateEndpointConnections') as private_endpoint_connections,
                JSON_EXTRACT(properties, '$.publicNetworkAccess') as public_network_access,
                subscriptionId,
                resourceGroupName,
                namespaceName
                FROM azure.relay.namespaces
                WHERE subscriptionId = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.relay.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.privateEndpoint') as private_endpoint,
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              subscriptionId,
              resourceGroupName,
              namespaceName,
              privateEndpointConnectionName
              FROM azure.relay.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                systemData as system_data,
                json_extract_path_text(properties, '$.privateEndpoint') as private_endpoint,
                JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as private_link_service_connection_state,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                subscriptionId,
                resourceGroupName,
                namespaceName,
                privateEndpointConnectionName
                FROM azure.relay.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
    vw_private_link_resources:
      id: azure.relay.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.groupId') as group_id,
              JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
              JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
              subscriptionId,
              resourceGroupName,
              namespaceName,
              privateLinkResourceName
              FROM azure.relay.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.groupId') as group_id,
                JSON_EXTRACT(properties, '$.requiredMembers') as required_members,
                JSON_EXTRACT(properties, '$.requiredZoneNames') as required_zone_names,
                subscriptionId,
                resourceGroupName,
                namespaceName,
                privateLinkResourceName
                FROM azure.relay.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND namespaceName = 'replace-me';
paths:
  /providers/Microsoft.Relay/operations/?api-version=2024-01-01:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all available Relay REST API operations.
      parameters: []
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/?api-version=2024-01-01:
    get:
      tags:
        - HybridConnections
      operationId: HybridConnections_ListByNamespace
      description: Lists the hybrid connection within the namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request to retrieve hybrid connections by namespace succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridConnectionListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/?api-version=2024-01-01:
    put:
      tags:
        - HybridConnections
      operationId: HybridConnections_CreateOrUpdate
      description: Creates or updates a service hybrid connection. This operation is idempotent.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create a hybrid connection.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridConnection'
      responses:
        '200':
          description: Request to create hybrid connections succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridConnection'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - HybridConnections
      operationId: HybridConnections_Delete
      description: Deletes a hybrid connection.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request to delete hybrid connection succeeded.
        '204':
          description: No content. The request has been accepted but the hybrid connection was not found.
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - HybridConnections
      operationId: HybridConnections_Get
      description: Returns the description for the specified hybrid connection.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved description for the hybrid connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridConnection'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/?api-version=2024-01-01:
    get:
      tags:
        - WCFRelays
      operationId: WCFRelays_ListByNamespace
      description: Lists the WCF relays within the namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: WCF relays returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WcfRelaysListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/?api-version=2024-01-01:
    put:
      tags:
        - WCFRelays
      operationId: WCFRelays_CreateOrUpdate
      description: Creates or updates a WCF relay. This operation is idempotent.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create a WCF relay.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WcfRelay'
      responses:
        '200':
          description: Request to create WCF relay succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WcfRelay'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - WCFRelays
      operationId: WCFRelays_Delete
      description: Deletes a WCF relay.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: WCF relay deleted.
        '204':
          description: No content.
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - WCFRelays
      operationId: WCFRelays_Get
      description: Returns the description for the specified WCF relay.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved WCF relay description.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WcfRelay'
        '204':
          description: WCF relay not found
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Relay/checkNameAvailability/?api-version=2024-01-01:
    post:
      tags:
        - Namespaces
      operationId: Namespaces_CheckNameAvailability
      description: Check the specified namespace name availability.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters to check availability of the specified namespace name.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailability'
      responses:
        '200':
          description: Check availability returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.Relay/namespaces/?api-version=2024-01-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_List
      description: Lists all the available namespaces within the subscription regardless of the resourceGroups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespaces returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayNamespaceListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/?api-version=2024-01-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_ListByResourceGroup
      description: Lists all the available namespaces within the ResourceGroup.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespaces by resource group returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayNamespaceListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/?api-version=2024-01-01:
    put:
      tags:
        - Namespaces
      operationId: Namespaces_CreateOrUpdate
      description: Create Azure Relay namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create a namespace resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelayNamespace'
      responses:
        '200':
          description: Namespace create request succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayNamespace'
        '201':
          description: Namespace create request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayNamespace'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Namespaces
      operationId: Namespaces_Delete
      description: Deletes an existing namespace. This operation also removes all associated resources under the namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace delete request succeeded.
        '202':
          description: Namespace delete request has been accepted for processing and the operation will complete asynchronously.
        '204':
          description: Namespace delete request has been accepted, but the namespace was not found.
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - Namespaces
      operationId: Namespaces_Get
      description: Returns the description for the specified namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace description returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayNamespace'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Namespaces
      operationId: Namespaces_Update
      description: Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for updating a namespace resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelayUpdateParameters'
      responses:
        '200':
          description: Namespace successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayNamespace'
        '201':
          description: Namespace update request accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayNamespace'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/privateEndpointConnections/?api-version=2024-01-01:
    get:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_List
      description: Gets the available PrivateEndpointConnections within a namespace.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: PrivateEndpointConnections successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: RelayRelay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2024-01-01:
    put:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_CreateOrUpdate
      description: Creates or updates PrivateEndpointConnections of service namespace.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: Parameters supplied to update Status of PrivateEndPoint Connection to namespace resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Status of PrivateEndPoint Connection Created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '201':
          description: Request to update Status of PrivateEndPoint Connection accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Request to update Status of PrivateEndPoint Connection accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Deletes an existing namespace. This operation also removes all associated resources under the namespace.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: Private Endpoint Connection successfully deleted.
        '202':
          description: Private Endpoint Connection  delete request accepted.
        '204':
          description: No content.
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - Namespaces PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets a description for the specified Private Endpoint Connection name.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Private Endpoint Connection  successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/privateLinkResources/{privateLinkResourceName}/?api-version=2024-01-01:
    get:
      tags:
        - Namespaces PrivateLinkResources
      operationId: PrivateLinkResources_Get
      description: Gets a description for the specified Private Endpoint Connection name.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/PrivateLinkResourceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Private Endpoint Connection  successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/privateLinkResources/?api-version=2024-01-01:
    get:
      tags:
        - Namespaces PrivateLinkResources
      operationId: PrivateLinkResources_List
      description: Gets lists of resources that supports Privatelinks.
      externalDocs:
        url: https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Private Link resource List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourcesListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/networkRuleSets/default/?api-version=2024-01-01:
    put:
      tags:
        - Namespaces
      operationId: Namespaces_CreateOrUpdateNetworkRuleSet
      description: Create or update NetworkRuleSet for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Namespace IpFilterRule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkRuleSet'
      responses:
        '200':
          description: Namespace NetworkRuleSet successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRuleSet'
        default:
          description: ServiceBus error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Namespaces
      operationId: Namespaces_GetNetworkRuleSet
      description: Gets NetworkRuleSet for a Namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace NetworkRuleSet successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkRuleSet'
        default:
          description: ServiceBus error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/?api-version=2024-01-01:
    get:
      tags:
        - Namespaces
      operationId: Namespaces_ListAuthorizationRules
      description: Authorization rules for a namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace authorization rule returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRuleListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/?api-version=2024-01-01:
    put:
      tags:
        - Namespaces
      operationId: Namespaces_CreateOrUpdateAuthorizationRule
      description: Creates or updates an authorization rule for a namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The authorization rule parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
      responses:
        '200':
          description: Request to create namespace authorization rule succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Namespaces
      operationId: Namespaces_DeleteAuthorizationRule
      description: Deletes a namespace authorization rule.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request to delete namespace authorization rule succeeded.
        '204':
          description: No content. The request has been accepted but the namespace authorization rule was not found.
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Namespaces
      operationId: Namespaces_GetAuthorizationRule
      description: Authorization rule for a namespace by name.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace Authorization rule returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys/?api-version=2024-01-01:
    post:
      tags:
        - Namespaces
      operationId: Namespaces_ListKeys
      description: Primary and secondary connection strings to the namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys/?api-version=2024-01-01:
    post:
      tags:
        - Namespaces
      operationId: Namespaces_RegenerateKeys
      description: Regenerates the primary or secondary connection strings to the namespace.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to regenerate authorization rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateAccessKeyParameters'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/?api-version=2024-01-01:
    get:
      tags:
        - HybridConnections
      operationId: HybridConnections_ListAuthorizationRules
      description: Authorization rules for a hybrid connection.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Authorization rules successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRuleListResult'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/?api-version=2024-01-01:
    put:
      tags:
        - HybridConnections
      operationId: HybridConnections_CreateOrUpdateAuthorizationRule
      description: Creates or updates an authorization rule for a hybrid connection.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The authorization rule parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
      responses:
        '200':
          description: Hybrid connection authorization rule created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - HybridConnections
      operationId: HybridConnections_DeleteAuthorizationRule
      description: Deletes a hybrid connection authorization rule.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Hybrid connection authorization rule deleted.
        '204':
          description: Authorization rule does not exist.
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - HybridConnections
      operationId: HybridConnections_GetAuthorizationRule
      description: Hybrid connection authorization rule for a hybrid connection by name.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Hybrid connection authorization rule returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/listKeys/?api-version=2024-01-01:
    post:
      tags:
        - HybridConnections
      operationId: HybridConnections_ListKeys
      description: Primary and secondary connection strings to the hybrid connection.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request to retrieve connection strings to the hybrid connection succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/regenerateKeys/?api-version=2024-01-01:
    post:
      tags:
        - HybridConnections
      operationId: HybridConnections_RegenerateKeys
      description: Regenerates the primary or secondary connection strings to the hybrid connection.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/HybridConnectionNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to regenerate authorization rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateAccessKeyParameters'
      responses:
        '200':
          description: Request to regenerate connection strings to hybrid connection succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/?api-version=2024-01-01:
    get:
      tags:
        - WCFRelays
      operationId: WCFRelays_ListAuthorizationRules
      description: Authorization rules for a WCF relay.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Authorization rules successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRuleListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/?api-version=2024-01-01:
    put:
      tags:
        - WCFRelays
      operationId: WCFRelays_CreateOrUpdateAuthorizationRule
      description: Creates or updates an authorization rule for a WCF relay.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The authorization rule parameters.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationRule'
      responses:
        '200':
          description: WCF relay authorization rule created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - WCFRelays
      operationId: WCFRelays_DeleteAuthorizationRule
      description: Deletes a WCF relay authorization rule.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request to delete WCF relay authorization rule succeeded.
        '204':
          description: Request accepted but the authorization rule does not exist.
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - WCFRelays
      operationId: WCFRelays_GetAuthorizationRule
      description: Get authorizationRule for a WCF relay by name.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Request for WCF relay authorization rule succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationRule'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/listKeys/?api-version=2024-01-01:
    post:
      tags:
        - WCFRelays
      operationId: WCFRelays_ListKeys
      description: Primary and secondary connection strings to the WCF relay.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/regenerateKeys/?api-version=2024-01-01:
    post:
      tags:
        - WCFRelays
      operationId: WCFRelays_RegenerateKeys
      description: Regenerates the primary or secondary connection strings to the WCF relay.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/NamespaceNameParameter'
        - $ref: '#/components/parameters/RelayNameParameter'
        - $ref: '#/components/parameters/AuthorizationRuleNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to regenerate authorization rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateAccessKeyParameters'
      responses:
        '200':
          description: Successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeys'
        default:
          description: Relay error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
