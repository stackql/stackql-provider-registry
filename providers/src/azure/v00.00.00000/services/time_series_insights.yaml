openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Time Series Insights
  description: Azure Time Series Insights provides data exploration and telemetry tools to help you improve operational analysis. Its a fully managed analytics, storage, and visualization service where you can explore and analyze billions of Internet of Things (IoT) events simultaneously.  Azure Time Series Insights gives you a global view of your data, so you can quickly validate your IoT solution and avoid costly downtime to mission-critical devices. It can help you discover hidden trends, spot anomalies, and conduct root-cause analyses in near real time.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ExpandParameter:
      name: $expand
      in: query
      description: Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    EnvironmentNameParameter:
      name: environmentName
      in: path
      description: The name of the Time Series Insights environment associated with the specified resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    EventSourceNameParameter:
      name: eventSourceName
      in: path
      description: The name of the Time Series Insights event source associated with the specified environment.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ReferenceDataSetNameParameter:
      name: referenceDataSetName
      in: path
      description: The name of the Time Series Insights reference data set associated with the specified environment.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    AccessPolicyNameParameter:
      name: accessPolicyName
      in: path
      description: The name of the Time Series Insights access policy associated with the specified environment.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection associated with the Azure resource
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationProperties:
      description: Properties of operation, include metric specifications.
      type: object
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
          description: One property of operation, include metric specifications.
    ServiceSpecification:
      description: One property of operation, include metric specifications.
      type: object
      properties:
        metricSpecifications:
          description: Metric specifications of operation.
          type: array
          items:
            $ref: '#/components/schemas/MetricSpecification'
        logSpecifications:
          description: A list of Azure Monitoring log definitions.
          type: array
          items:
            $ref: '#/components/schemas/LogSpecification'
    MetricSpecification:
      description: Metric specification of operation.
      type: object
      properties:
        name:
          type: string
          description: Name of metric specification.
        displayName:
          type: string
          description: Display name of metric specification.
        displayDescription:
          type: string
          description: Display description of metric specification.
        unit:
          type: string
          description: Unit could be Bytes or Count.
        dimensions:
          description: Dimensions of blobs, including blob type and access tier.
          type: array
          items:
            $ref: '#/components/schemas/Dimension'
        aggregationType:
          type: string
          description: Aggregation type could be Average.
        availabilities:
          description: Retention policies of a resource metric.
          type: array
          items:
            $ref: '#/components/schemas/MetricAvailability'
        category:
          type: string
          description: The category this metric specification belong to, could be Capacity.
        resourceIdDimensionNameOverride:
          type: string
          description: Account Resource Id.
    LogSpecification:
      description: The specification of an Azure Monitoring log.
      type: object
      properties:
        name:
          description: Log name.
          type: string
        displayName:
          description: Log display name.
          type: string
    Dimension:
      description: Dimension of blobs, possibly be blob type or access tier.
      type: object
      properties:
        name:
          type: string
          description: Display name of dimension.
        displayName:
          type: string
          description: Display name of dimension.
    MetricAvailability:
      description: Retention policy of a resource metric.
      type: object
      properties:
        timeGrain:
          type: string
        blobDuration:
          type: string
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceProperties:
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The time the resource was created.
      description: Properties that are common to all tracked resources.
      type: object
    ProvisioningState:
      readOnly: true
      type: string
      description: Provisioning state of the resource.
      enum:
        - Accepted
        - Creating
        - Updating
        - Succeeded
        - Failed
        - Deleting
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    WarmStoreConfigurationProperties:
      type: object
      properties:
        dataRetention:
          type: string
          format: duration
          description: ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
      required:
        - dataRetention
      description: The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
    Gen2StorageConfigurationInput:
      type: object
      properties:
        accountName:
          type: string
          description: The name of the storage account that will hold the environment's Gen2 data.
        managementKey:
          type: string
          description: The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
      required:
        - accountName
        - managementKey
      description: The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
    Gen2StorageConfigurationOutput:
      type: object
      properties:
        accountName:
          type: string
          description: The name of the storage account that will hold the environment's Gen2 data.
      required:
        - accountName
      description: The storage configuration provides the non-secret connection details about the customer storage account that is used to store the environment's data.
    Gen2StorageConfigurationMutableProperties:
      type: object
      properties:
        managementKey:
          type: string
          description: The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
      required:
        - managementKey
      description: The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
    CreateOrUpdateTrackedResourceProperties:
      properties:
        location:
          type: string
          description: The location of the resource.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the resource.
      required:
        - location
      description: Properties required to create any resource tracked by Azure Resource Manager.
      type: object
    EnvironmentCreateOrUpdateParameters:
      discriminator:
        propertyName: kind
      required:
        - kind
        - sku
      description: Parameters supplied to the CreateOrUpdate Environment operation.
      properties:
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
          x-ms-enum:
            name: EnvironmentKind
            modelAsString: true
          x-ms-mutability:
            - create
            - read
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        location:
          type: string
          description: The location of the resource.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the resource.
      type: object
    Gen1EnvironmentCreateOrUpdateParameters:
      x-ms-discriminator-value: Gen1
      required:
        - properties
      description: Parameters supplied to the Create or Update Environment operation for a Gen1 environment.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Gen1EnvironmentCreationProperties'
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
          x-ms-enum:
            name: EnvironmentKind
            modelAsString: true
          x-ms-mutability:
            - create
            - read
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
      type: object
    Gen2EnvironmentCreateOrUpdateParameters:
      x-ms-discriminator-value: Gen2
      required:
        - properties
      description: Parameters supplied to the Create or Update Environment operation for a Gen2 environment.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Gen2EnvironmentCreationProperties'
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
          x-ms-enum:
            name: EnvironmentKind
            modelAsString: true
          x-ms-mutability:
            - create
            - read
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
      type: object
    EnvironmentUpdateParameters:
      type: object
      discriminator:
        propertyName: kind
      properties:
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
          x-ms-enum:
            name: EnvironmentKind
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the environment.
      required:
        - kind
      description: Parameters supplied to the Update Environment operation.
    Gen1EnvironmentUpdateParameters:
      x-ms-discriminator-value: Gen1
      description: Parameters supplied to the Update Environment operation to update a Gen1 environment.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku of the environment.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Gen1EnvironmentMutableProperties'
          description: Properties of the Gen1 environment.
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
          x-ms-enum:
            name: EnvironmentKind
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the environment.
      type: object
    Gen2EnvironmentUpdateParameters:
      x-ms-discriminator-value: Gen2
      description: Parameters supplied to the Update Environment operation to update a Gen2 environment.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Gen2EnvironmentMutableProperties'
          description: Properties of the Gen2 environment.
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
          x-ms-enum:
            name: EnvironmentKind
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the environment.
      type: object
    EnvironmentListResponse:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentResource'
          description: Result of the List Environments operation.
      description: The response of the List Environments operation.
      type: object
    EnvironmentResource:
      discriminator:
        propertyName: kind
      required:
        - kind
        - sku
      description: An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    Gen1EnvironmentResource:
      x-ms-discriminator-value: Gen1
      required:
        - properties
      description: An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Gen1 environments have data retention limits.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Gen1EnvironmentResourceProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
      type: object
    Gen2EnvironmentResource:
      x-ms-discriminator-value: Gen2
      required:
        - properties
      description: An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource. Gen2 environments do not have set data retention limits.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/Gen2EnvironmentResourceProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku determines the type of environment, either Gen1 (S1 or S2) or Gen2 (L1). For Gen1 environments the sku determines the capacity of the environment, the ingress rate, and the billing rate.
        kind:
          type: string
          description: The kind of the environment.
          enum:
            - Gen1
            - Gen2
      type: object
    Gen1EnvironmentCreationProperties:
      properties:
        dataRetentionTime:
          type: string
          format: duration
          description: ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
        storageLimitExceededBehavior:
          type: string
          description: The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
          enum:
            - PurgeOldData
            - PauseIngress
          x-ms-enum:
            name: StorageLimitExceededBehavior
            modelAsString: true
        partitionKeyProperties:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesIdProperty'
          description: The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
      required:
        - dataRetentionTime
      description: Properties used to create a Gen1 environment.
      type: object
    Gen2EnvironmentCreationProperties:
      properties:
        timeSeriesIdProperties:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesIdProperty'
          description: The list of event properties which will be used to define the environment's time series id.
        storageConfiguration:
          $ref: '#/components/schemas/Gen2StorageConfigurationInput'
          description: The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
        warmStoreConfiguration:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/WarmStoreConfigurationProperties'
          description: The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
        publicNetworkAccess:
          type: string
          default: enabled
          description: This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: The list of private endpoint connections to the environment.
      required:
        - timeSeriesIdProperties
        - storageConfiguration
      description: Properties used to create a Gen2 environment.
      type: object
    EnvironmentResourceProperties:
      description: Properties of the environment.
      properties:
        dataAccessId:
          readOnly: true
          type: string
          format: uuid
          description: An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        dataAccessFqdn:
          readOnly: true
          type: string
          description: The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        status:
          $ref: '#/components/schemas/EnvironmentStatus'
          description: An object that represents the status of the environment, and its internal state in the Time Series Insights service.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The time the resource was created.
      type: object
    Gen1EnvironmentResourceProperties:
      required:
        - dataRetentionTime
      description: Properties of the Gen1 environment.
      properties:
        dataRetentionTime:
          type: string
          format: duration
          description: ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
        storageLimitExceededBehavior:
          type: string
          description: The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
          enum:
            - PurgeOldData
            - PauseIngress
          x-ms-enum:
            name: StorageLimitExceededBehavior
            modelAsString: true
        partitionKeyProperties:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesIdProperty'
          description: The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
        dataAccessId:
          readOnly: true
          type: string
          format: uuid
          description: An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        dataAccessFqdn:
          readOnly: true
          type: string
          description: The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        status:
          $ref: '#/components/schemas/EnvironmentStatus'
          description: An object that represents the status of the environment, and its internal state in the Time Series Insights service.
      type: object
    Gen2EnvironmentResourceProperties:
      required:
        - timeSeriesIdProperties
        - storageConfiguration
      description: Properties of the Gen2 environment.
      properties:
        timeSeriesIdProperties:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesIdProperty'
          description: The list of event properties which will be used to define the environment's time series id.
        storageConfiguration:
          $ref: '#/components/schemas/Gen2StorageConfigurationOutput'
          description: The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
        warmStoreConfiguration:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/WarmStoreConfigurationProperties'
          description: The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
        publicNetworkAccess:
          type: string
          default: enabled
          description: If 'enabled', public network access is allowed. If 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method.
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: PublicNetworkAccess
            modelAsString: true
        privateEndpointConnections:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: The list of private endpoint connections to the environment.
        dataAccessId:
          readOnly: true
          type: string
          format: uuid
          description: An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        dataAccessFqdn:
          readOnly: true
          type: string
          description: The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.
        status:
          $ref: '#/components/schemas/EnvironmentStatus'
          description: An object that represents the status of the environment, and its internal state in the Time Series Insights service.
      type: object
    Gen1EnvironmentMutableProperties:
      description: An object that represents a set of mutable Gen1 environment resource properties.
      type: object
      properties:
        dataRetentionTime:
          type: string
          format: duration
          description: ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
        storageLimitExceededBehavior:
          type: string
          description: The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
          enum:
            - PurgeOldData
            - PauseIngress
          x-ms-enum:
            name: StorageLimitExceededBehavior
            modelAsString: true
    Gen2EnvironmentMutableProperties:
      description: An object that represents a set of mutable Gen2 environment resource properties.
      type: object
      properties:
        storageConfiguration:
          $ref: '#/components/schemas/Gen2StorageConfigurationMutableProperties'
          description: The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
        warmStoreConfiguration:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/WarmStoreConfigurationProperties'
          description: The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
    TimeSeriesIdProperty:
      properties:
        name:
          type: string
          description: The name of the property.
        type:
          type: string
          description: The type of the property.
          enum:
            - String
          x-ms-enum:
            name: PropertyType
            modelAsString: true
      description: The structure of the property that a time series id can have. An environment can have multiple such properties.
      type: object
    EnvironmentStatus:
      readOnly: true
      type: object
      description: An object that represents the status of the environment, and its internal state in the Time Series Insights service.
      properties:
        ingress:
          $ref: '#/components/schemas/IngressEnvironmentStatus'
          description: An object that represents the status of ingress on an environment.
        warmStorage:
          $ref: '#/components/schemas/WarmStorageEnvironmentStatus'
          description: An object that represents the status of warm storage on an environment.
    IngressEnvironmentStatus:
      readOnly: true
      type: object
      description: An object that represents the status of ingress on an environment.
      properties:
        state:
          type: string
          description: This string represents the state of ingress operations on an environment. It can be "Disabled", "Ready", "Running", "Paused" or "Unknown"
          enum:
            - Disabled
            - Ready
            - Running
            - Paused
            - Unknown
          x-ms-enum:
            name: IngressState
            modelAsString: true
        stateDetails:
          $ref: '#/components/schemas/EnvironmentStateDetails'
          description: An object that contains the details about an environment's state.
    EnvironmentStateDetails:
      readOnly: true
      type: object
      description: An object that contains the details about an environment's state.
      properties:
        code:
          type: string
          description: Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.
        message:
          type: string
          description: A message that describes the state in detail.
    WarmStorageEnvironmentStatus:
      readOnly: true
      type: object
      description: An object that represents the status of warm storage on an environment.
      properties:
        propertiesUsage:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WarmStoragePropertiesUsage'
          description: An object that contains the status of warm storage properties usage.
    WarmStoragePropertiesUsage:
      readOnly: true
      type: object
      description: An object that contains the status of warm storage properties usage.
      properties:
        state:
          type: string
          description: This string represents the state of warm storage properties usage. It can be "Ok", "Error", "Unknown".
          enum:
            - Ok
            - Error
            - Unknown
          x-ms-enum:
            name: WarmStoragePropertiesState
            modelAsString: true
        stateDetails:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/WarmStoragePropertiesUsageStateDetails'
          description: An object that contains the details about warm storage properties usage state.
    WarmStoragePropertiesUsageStateDetails:
      readOnly: true
      type: object
      description: An object that contains the details about warm storage properties usage state.
      properties:
        currentCount:
          format: int32
          type: integer
          description: A value that represents the number of properties used by the environment for S1/S2 SKU and number of properties used by Warm Store for PAYG SKU
          minimum: 1
          maximum: 10
        maxCount:
          format: int32
          type: integer
          description: A value that represents the maximum number of properties used allowed by the environment for S1/S2 SKU and maximum number of properties allowed by Warm Store for PAYG SKU.
          minimum: 1
          maximum: 10
    IngressStartAtProperties:
      type: object
      description: An object that contains the details about the starting point in time to ingest events.
      properties:
        type:
          type: string
          description: The type of the ingressStartAt, It can be "EarliestAvailable", "EventSourceCreationTime", "CustomEnqueuedTime".
          enum:
            - EarliestAvailable
            - EventSourceCreationTime
            - CustomEnqueuedTime
          x-ms-enum:
            name: IngressStartAtType
            modelAsString: true
        time:
          type: string
          description: ISO8601 UTC datetime with seconds precision (milliseconds are optional), specifying the date and time that will be the starting point for Events to be consumed.
    EventSourceCreateOrUpdateParameters:
      discriminator:
        propertyName: kind
      required:
        - kind
      description: Parameters supplied to the Create or Update Event Source operation.
      properties:
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
          x-ms-enum:
            name: EventSourceKind
            modelAsString: true
        localTimestamp:
          $ref: '#/components/schemas/LocalTimestamp'
          description: An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
        location:
          type: string
          description: The location of the resource.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the resource.
      type: object
    EventHubEventSourceCreateOrUpdateParameters:
      x-ms-discriminator-value: Microsoft.EventHub
      required:
        - properties
      description: Parameters supplied to the Create or Update Event Source operation for an EventHub event source.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EventHubEventSourceCreationProperties'
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
          x-ms-enum:
            name: EventSourceKind
            modelAsString: true
        localTimestamp:
          $ref: '#/components/schemas/LocalTimestamp'
          description: An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
      type: object
    IoTHubEventSourceCreateOrUpdateParameters:
      x-ms-discriminator-value: Microsoft.IoTHub
      required:
        - properties
      description: Parameters supplied to the Create or Update Event Source operation for an IoTHub event source.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IoTHubEventSourceCreationProperties'
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
          x-ms-enum:
            name: EventSourceKind
            modelAsString: true
        localTimestamp:
          $ref: '#/components/schemas/LocalTimestamp'
          description: An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
      type: object
    EventSourceUpdateParameters:
      discriminator:
        propertyName: kind
      type: object
      properties:
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
          x-ms-enum:
            name: EventSourceKind
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the event source.
      required:
        - kind
      description: Parameters supplied to the Update Event Source operation.
    EventHubEventSourceUpdateParameters:
      x-ms-discriminator-value: Microsoft.EventHub
      description: Parameters supplied to the Update Event Source operation to update an EventHub event source.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EventHubEventSourceMutableProperties'
          description: Properties of the EventHub event source.
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
          x-ms-enum:
            name: EventSourceKind
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the event source.
      type: object
    IoTHubEventSourceUpdateParameters:
      x-ms-discriminator-value: Microsoft.IoTHub
      description: Parameters supplied to the Update Event Source operation to update an IoTHub event source.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IoTHubEventSourceMutableProperties'
          description: Properties of the IoTHub event source.
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
          x-ms-enum:
            name: EventSourceKind
            modelAsString: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the event source.
      type: object
    EventSourceListResponse:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EventSourceResource'
          description: Result of the List EventSources operation.
      description: The response of the List EventSources operation.
      type: object
    EventSourceResource:
      discriminator:
        propertyName: kind
      required:
        - kind
      description: An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source
      properties:
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    EventHubEventSourceResource:
      x-ms-discriminator-value: Microsoft.EventHub
      required:
        - properties
      description: An event source that receives its data from an Azure EventHub.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EventHubEventSourceResourceProperties'
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
      type: object
    IoTHubEventSourceResource:
      x-ms-discriminator-value: Microsoft.IoTHub
      required:
        - properties
      description: An event source that receives its data from an Azure IoTHub.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IoTHubEventSourceResourceProperties'
        kind:
          type: string
          description: The kind of the event source.
          enum:
            - Microsoft.EventHub
            - Microsoft.IoTHub
      type: object
    EventSourceCommonProperties:
      description: Properties of the event source.
      properties:
        timestampPropertyName:
          type: string
          description: The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
        localTimestamp:
          $ref: '#/components/schemas/LocalTimestamp'
          description: An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
        ingressStartAt:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IngressStartAtProperties'
          description: An object that contains the details about the starting point in time to ingest events.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The time the resource was created.
      type: object
    AzureEventSourceProperties:
      required:
        - eventSourceResourceId
      description: Properties of an event source that reads events from an event broker in Azure.
      properties:
        eventSourceResourceId:
          type: string
          description: The resource id of the event source in Azure Resource Manager.
        timestampPropertyName:
          type: string
          description: The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
        localTimestamp:
          $ref: '#/components/schemas/LocalTimestamp'
          description: An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
        ingressStartAt:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/IngressStartAtProperties'
          description: An object that contains the details about the starting point in time to ingest events.
      type: object
    EventHubEventSourceCommonProperties:
      required:
        - serviceBusNamespace
        - eventHubName
        - consumerGroupName
        - keyName
      description: Properties of the EventHub event source.
      properties:
        serviceBusNamespace:
          type: string
          description: The name of the service bus that contains the event hub.
        eventHubName:
          type: string
          description: The name of the event hub.
        consumerGroupName:
          type: string
          description: The name of the event hub's consumer group that holds the partitions from which events will be read.
        keyName:
          type: string
          description: The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
        eventSourceResourceId:
          type: string
          description: The resource id of the event source in Azure Resource Manager.
      type: object
    EventHubEventSourceCreationProperties:
      required:
        - sharedAccessKey
      description: Properties of the EventHub event source that are required on create or update requests.
      properties:
        sharedAccessKey:
          type: string
          description: The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.
        serviceBusNamespace:
          type: string
          description: The name of the service bus that contains the event hub.
        eventHubName:
          type: string
          description: The name of the event hub.
        consumerGroupName:
          type: string
          description: The name of the event hub's consumer group that holds the partitions from which events will be read.
        keyName:
          type: string
          description: The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
      type: object
    EventHubEventSourceResourceProperties:
      description: Properties of the EventHub event source resource.
      properties:
        serviceBusNamespace:
          type: string
          description: The name of the service bus that contains the event hub.
        eventHubName:
          type: string
          description: The name of the event hub.
        consumerGroupName:
          type: string
          description: The name of the event hub's consumer group that holds the partitions from which events will be read.
        keyName:
          type: string
          description: The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
      type: object
    IoTHubEventSourceCommonProperties:
      required:
        - iotHubName
        - consumerGroupName
        - keyName
      description: Properties of the IoTHub event source.
      properties:
        iotHubName:
          type: string
          description: The name of the iot hub.
        consumerGroupName:
          type: string
          description: The name of the iot hub's consumer group that holds the partitions from which events will be read.
        keyName:
          type: string
          description: The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
        eventSourceResourceId:
          type: string
          description: The resource id of the event source in Azure Resource Manager.
      type: object
    IoTHubEventSourceCreationProperties:
      required:
        - sharedAccessKey
      description: Properties of the IoTHub event source that are required on create or update requests.
      properties:
        sharedAccessKey:
          type: string
          description: The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
        iotHubName:
          type: string
          description: The name of the iot hub.
        consumerGroupName:
          type: string
          description: The name of the iot hub's consumer group that holds the partitions from which events will be read.
        keyName:
          type: string
          description: The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
      type: object
    IoTHubEventSourceResourceProperties:
      description: Properties of the IoTHub event source resource.
      properties:
        iotHubName:
          type: string
          description: The name of the iot hub.
        consumerGroupName:
          type: string
          description: The name of the iot hub's consumer group that holds the partitions from which events will be read.
        keyName:
          type: string
          description: The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
      type: object
    LocalTimestamp:
      description: An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.
      type: object
      properties:
        format:
          description: An enum that represents the format of the local timestamp property that needs to be set.
          type: string
          enum:
            - Embedded
          x-ms-enum:
            name: LocalTimestampFormat
            modelAsString: true
        timeZoneOffset:
          description: An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.
          type: object
          properties:
            propertyName:
              type: string
              description: 'The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)'
    EventSourceMutableProperties:
      description: An object that represents a set of mutable event source resource properties.
      type: object
      properties:
        timestampPropertyName:
          type: string
          description: The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
    EventHubEventSourceMutableProperties:
      description: An object that represents a set of mutable EventHub event source resource properties.
      properties:
        sharedAccessKey:
          type: string
          description: The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.
        timestampPropertyName:
          type: string
          description: The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
      type: object
    IoTHubEventSourceMutableProperties:
      description: An object that represents a set of mutable IoTHub event source resource properties.
      properties:
        sharedAccessKey:
          type: string
          description: The value of the shared access key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
        timestampPropertyName:
          type: string
          description: The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
      type: object
    ReferenceDataSetCreateOrUpdateParameters:
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ReferenceDataSetCreationProperties'
        location:
          type: string
          description: The location of the resource.
          x-ms-mutability:
            - read
            - create
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the resource.
      type: object
    ReferenceDataSetUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Key-value pairs of additional properties for the reference data set.
      description: Parameters supplied to the Update Reference Data Set operation.
    ReferenceDataSetListResponse:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceDataSetResource'
          description: Result of the List Reference Data Sets operation.
      description: The response of the List Reference Data Sets operation.
      type: object
    ReferenceDataSetResource:
      description: A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ReferenceDataSetResourceProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ReferenceDataSetCreationProperties:
      properties:
        keyProperties:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceDataSetKeyProperty'
          description: The list of key properties for the reference data set.
        dataStringComparisonBehavior:
          type: string
          description: The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
          enum:
            - Ordinal
            - OrdinalIgnoreCase
          x-ms-enum:
            name: DataStringComparisonBehavior
            modelAsString: true
      required:
        - keyProperties
      description: Properties used to create a reference data set.
      type: object
    ReferenceDataSetResourceProperties:
      required:
        - keyProperties
      description: Properties of the reference data set.
      properties:
        keyProperties:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceDataSetKeyProperty'
          description: The list of key properties for the reference data set.
        dataStringComparisonBehavior:
          type: string
          description: The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
          enum:
            - Ordinal
            - OrdinalIgnoreCase
          x-ms-enum:
            name: DataStringComparisonBehavior
            modelAsString: true
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: Provisioning state of the resource.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The time the resource was created.
      type: object
    ReferenceDataSetKeyProperty:
      properties:
        name:
          type: string
          description: The name of the key property.
        type:
          type: string
          description: The type of the key property.
          enum:
            - String
            - Double
            - Bool
            - DateTime
          x-ms-enum:
            name: ReferenceDataKeyPropertyType
            modelAsString: true
      description: A key property for the reference data set. A reference data set can have multiple key properties.
      type: object
    AccessPolicyCreateOrUpdateParameters:
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessPolicyResourceProperties'
      type: object
    AccessPolicyUpdateParameters:
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessPolicyMutableProperties'
      type: object
    AccessPolicyListResponse:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessPolicyResource'
          description: Result of the List access policies operation.
      description: The response of the List access policies operation.
      type: object
    AccessPolicyResource:
      description: An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessPolicyResourceProperties'
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    AccessPolicyResourceProperties:
      properties:
        principalObjectId:
          type: string
          description: The objectId of the principal in Azure Active Directory.
          x-ms-mutability:
            - create
            - read
        description:
          type: string
          description: An description of the access policy.
        roles:
          type: array
          items:
            type: string
            description: A role defining the data plane operations that a principal can perform on a Time Series Insights client.
            enum:
              - Reader
              - Contributor
            x-ms-enum:
              name: AccessPolicyRole
              modelAsString: true
          description: The list of roles the principal is assigned on the environment.
      type: object
    AccessPolicyMutableProperties:
      description: An object that represents a set of mutable access policy resource properties.
      type: object
      properties:
        description:
          type: string
          description: An description of the access policy.
        roles:
          type: array
          items:
            type: string
            description: A role defining the data plane operations that a principal can perform on a Time Series Insights client.
            enum:
              - Reader
              - Contributor
            x-ms-enum:
              name: AccessPolicyRole
              modelAsString: true
          description: The list of roles the principal is assigned on the environment.
    PrivateEndpoint:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateEndpointConnectionProperties:
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: Provisioning state of the private endpoint connection.
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        groupIds:
          $ref: '#/components/schemas/PrivateEndpointGroupIds'
          description: The provisioning state of the private endpoint connection resource.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between service consumer and provider.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
    PrivateEndpointGroupIds:
      type: array
      items:
        type: string
        description: Private Links resource group id.
      description: A list of private links resource group ids
    PrivateLinkServiceConnectionState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    PrivateLinkResourceProperties:
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource Private link DNS zone name.
      description: Properties of a private link resource.
    PrivateEndpointConnectionListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
      description: List of private endpoint connection associated with the specified storage account
    PrivateLinkResourceListResult:
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
    CloudError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: Describes a particular API error with an error code and a message.
      description: Contains information about an API error.
      x-ms-external: true
    CloudErrorBody:
      type: object
      description: Describes a particular API error with an error code and a message.
      properties:
        code:
          type: string
          description: An error code that describes the error condition more precisely than an HTTP status code. Can be used to programmatically handle specific error cases.
        message:
          type: string
          description: A message that describes the error in detail and provides debugging information.
        target:
          type: string
          description: The target of the particular error (for example, the name of the property in error).
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
            description: Describes a particular API error with an error code and a message.
          description: Contains nested errors that are related to this error.
      x-ms-external: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    operations:
      id: azure.time_series_insights.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.TimeSeriesInsights~1operations?api-version=2021-03-31-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    environments:
      id: azure.time_series_insights.environments
      name: environments
      title: environments
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}?api-version=2021-03-31-preview/put'
            operationId: Environments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnvironmentResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}?api-version=2021-03-31-preview/get'
            operationId: Environments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnvironmentResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}?api-version=2021-03-31-preview/patch'
            operationId: Environments_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnvironmentResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}?api-version=2021-03-31-preview/delete'
            operationId: Environments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments?api-version=2021-03-31-preview/get'
            operationId: Environments_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnvironmentListResponse
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.TimeSeriesInsights~1environments?api-version=2021-03-31-preview/get'
            operationId: Environments_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EnvironmentListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/environments/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/environments/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete'
    event_sources:
      id: azure.time_series_insights.event_sources
      name: event_sources
      title: event_sources
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1eventSources~1{eventSourceName}?api-version=2021-03-31-preview/put'
            operationId: EventSources_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSourceResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1eventSources~1{eventSourceName}?api-version=2021-03-31-preview/get'
            operationId: EventSources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSourceResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1eventSources~1{eventSourceName}?api-version=2021-03-31-preview/patch'
            operationId: EventSources_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSourceResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1eventSources~1{eventSourceName}?api-version=2021-03-31-preview/delete'
            operationId: EventSources_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1eventSources?api-version=2021-03-31-preview/get'
            operationId: EventSources_ListByEnvironment
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: EventSourceListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/event_sources/methods/get'
          - $ref: '#/components/x-stackQL-resources/event_sources/methods/list_by_environment'
        insert:
          - $ref: '#/components/x-stackQL-resources/event_sources/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/event_sources/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/event_sources/methods/delete'
    reference_data_sets:
      id: azure.time_series_insights.reference_data_sets
      name: reference_data_sets
      title: reference_data_sets
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1referenceDataSets~1{referenceDataSetName}?api-version=2021-03-31-preview/put'
            operationId: ReferenceDataSets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReferenceDataSetResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1referenceDataSets~1{referenceDataSetName}?api-version=2021-03-31-preview/get'
            operationId: ReferenceDataSets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReferenceDataSetResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1referenceDataSets~1{referenceDataSetName}?api-version=2021-03-31-preview/patch'
            operationId: ReferenceDataSets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReferenceDataSetResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1referenceDataSets~1{referenceDataSetName}?api-version=2021-03-31-preview/delete'
            operationId: ReferenceDataSets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1referenceDataSets?api-version=2021-03-31-preview/get'
            operationId: ReferenceDataSets_ListByEnvironment
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ReferenceDataSetListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reference_data_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/reference_data_sets/methods/list_by_environment'
        insert:
          - $ref: '#/components/x-stackQL-resources/reference_data_sets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/reference_data_sets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/reference_data_sets/methods/delete'
    access_policies:
      id: azure.time_series_insights.access_policies
      name: access_policies
      title: access_policies
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1accessPolicies~1{accessPolicyName}?api-version=2021-03-31-preview/put'
            operationId: AccessPolicies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1accessPolicies~1{accessPolicyName}?api-version=2021-03-31-preview/get'
            operationId: AccessPolicies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1accessPolicies~1{accessPolicyName}?api-version=2021-03-31-preview/patch'
            operationId: AccessPolicies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1accessPolicies~1{accessPolicyName}?api-version=2021-03-31-preview/delete'
            operationId: AccessPolicies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1accessPolicies?api-version=2021-03-31-preview/get'
            operationId: AccessPolicies_ListByEnvironment
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: AccessPolicyListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/list_by_environment'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_policies/methods/delete'
    private_endpoint_connections:
      id: azure.time_series_insights.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2021-03-31-preview/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2021-03-31-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2021-03-31-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1privateEndpointConnections?api-version=2021-03-31-preview/get'
            operationId: PrivateEndpointConnections_ListByEnvironment
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_environment'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    private_link_resources_supported:
      id: azure.time_series_insights.private_link_resources_supported
      name: private_link_resources_supported
      title: private_link_resources_supported
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.TimeSeriesInsights~1environments~1{environmentName}~1privateLinkResources?api-version=2021-03-31-preview/get'
            operationId: PrivateLinkResourcesSupported_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources_supported/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_reference_data_sets:
      id: azure.time_series_insights.vw_reference_data_sets
      name: vw_reference_data_sets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.keyProperties') as "key_properties",
              JSON_EXTRACT(properties, '$.dataStringComparisonBehavior') as "data_string_comparison_behavior",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              subscriptionId,
              resourceGroupName,
              environmentName,
              referenceDataSetName
              FROM azure.time_series_insights.reference_data_sets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.keyProperties') as "key_properties",
                json_extract_path_text(properties, '$.dataStringComparisonBehavior') as "data_string_comparison_behavior",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                subscriptionId,
                resourceGroupName,
                environmentName,
                referenceDataSetName
                FROM azure.time_series_insights.reference_data_sets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
    vw_access_policies:
      id: azure.time_series_insights.vw_access_policies
      name: vw_access_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.principalObjectId') as "principal_object_id",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.roles') as "roles",
              subscriptionId,
              resourceGroupName,
              environmentName,
              accessPolicyName
              FROM azure.time_series_insights.access_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.principalObjectId') as "principal_object_id",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.roles') as "roles",
                subscriptionId,
                resourceGroupName,
                environmentName,
                accessPolicyName
                FROM azure.time_series_insights.access_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.time_series_insights.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.groupIds') as "group_ids",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              subscriptionId,
              resourceGroupName,
              environmentName,
              privateEndpointConnectionName
              FROM azure.time_series_insights.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.groupIds') as "group_ids",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                subscriptionId,
                resourceGroupName,
                environmentName,
                privateEndpointConnectionName
                FROM azure.time_series_insights.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND environmentName = 'replace-me';
paths:
  /providers/Microsoft.TimeSeriesInsights/operations?api-version=2021-03-31-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Time Series Insights related operations.
      parameters: []
      responses:
        '200':
          description: Successfully listed the available operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: 'HTTP 404 (Not Found): The list of operations could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}?api-version=2021-03-31-preview:
    put:
      tags:
        - Environments
      operationId: Environments_CreateOrUpdate
      x-ms-long-running-operation: true
      description: Create or update an environment in the specified subscription and resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: environmentName
          in: path
          description: Name of the environment
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
      requestBody:
        description: Parameters for creating an environment resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentCreateOrUpdateParameters'
      responses:
        '200':
          description: The existing environment definition was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResource'
        '201':
          description: The environment create request was accepted. Environment provisioning is an asynchronous operation. You can periodically get your environment definition and monitor progress via the provisioningState property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResource'
        '404':
          description: The subscription or resource group could not be found.
        default:
          description: 'HTTP 400 (Bad Request): The given environment request body is invalid; See the error code and message in the response for details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - Environments
      operationId: Environments_Get
      description: Gets the environment with the specified name in the specified subscription and resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/ExpandParameter'
      responses:
        '200':
          description: The environment definition was successfully retrieved and is in the response. If you are polling for the completion of a provisioning or scale operation, you can check its status via the provisioningState property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or environment could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Environments
      operationId: Environments_Update
      x-ms-long-running-operation: true
      description: Updates the environment with the specified name in the specified subscription and resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
      requestBody:
        description: Request object that contains the updated information for the environment.
        required: true
        x-ms-requestBody-name: environmentUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentUpdateParameters'
      responses:
        '200':
          description: The environment definition was successfully updated and is in the response. If the environment was updated synchronously, the response will include a provisioningState value of "Succeeded". If the environment was updated asynchronously, the response will include a provisioningState value of "Updating".  You can periodically get your environment definition and monitor progress of the update via the provisioningState property.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or environment could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Environments
      operationId: Environments_Delete
      description: Deletes the environment with the specified name in the specified subscription and resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
      responses:
        '200':
          description: The environment was successfully deleted.
        '204':
          description: The environment was successfully deleted.
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or environment could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments?api-version=2021-03-31-preview:
    get:
      tags:
        - Environments
      operationId: Environments_ListByResourceGroup
      description: Lists all the available environments associated with the subscription and within the specified resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Environments returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentListResponse'
        default:
          description: 'HTTP 404 (Not Found): The subscription, or resource group could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.TimeSeriesInsights/environments?api-version=2021-03-31-preview:
    get:
      tags:
        - Environments
      operationId: Environments_ListBySubscription
      description: Lists all the available environments within a subscription, irrespective of the resource groups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Environments returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentListResponse'
        default:
          description: 'HTTP 404 (Not Found): The subscription could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}?api-version=2021-03-31-preview:
    put:
      tags:
        - EventSources
      operationId: EventSources_CreateOrUpdate
      description: Create or update an event source under the specified environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - name: eventSourceName
          in: path
          description: Name of the event source.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
      requestBody:
        description: Parameters for creating an event source resource.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSourceCreateOrUpdateParameters'
      responses:
        '200':
          description: The existing event source definition was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSourceResource'
        '201':
          description: The event source was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSourceResource'
        default:
          description: 'HTTP 400 (Bad Request): The given event source request body is invalid; See the error code and message in the response for details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - EventSources
      operationId: EventSources_Get
      description: Gets the event source with the specified name in the specified environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/EventSourceNameParameter'
      responses:
        '200':
          description: The event source definition was successfully retrieved and is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSourceResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or event source could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - EventSources
      operationId: EventSources_Update
      description: Updates the event source with the specified name in the specified subscription, resource group, and environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/EventSourceNameParameter'
      requestBody:
        description: Request object that contains the updated information for the event source.
        required: true
        x-ms-requestBody-name: eventSourceUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSourceUpdateParameters'
      responses:
        '200':
          description: The event source definition was successfully updated and is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSourceResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or event source could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - EventSources
      operationId: EventSources_Delete
      description: Deletes the event source with the specified name in the specified subscription, resource group, and environment
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/EventSourceNameParameter'
      responses:
        '200':
          description: The event source was successfully deleted.
        '204':
          description: The event source was successfully deleted.
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or event source could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources?api-version=2021-03-31-preview:
    get:
      tags:
        - EventSources
      operationId: EventSources_ListByEnvironment
      description: Lists all the available event sources associated with the subscription and within the specified resource group and environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
      responses:
        '200':
          description: Environments returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSourceListResponse'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or environment could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}?api-version=2021-03-31-preview:
    put:
      tags:
        - ReferenceDataSets
      operationId: ReferenceDataSets_CreateOrUpdate
      description: Create or update a reference data set in the specified environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - name: referenceDataSetName
          in: path
          description: Name of the reference data set.
          required: true
          schema:
            pattern: ^[A-Za-z0-9]
            minLength: 3
            maxLength: 63
            type: string
      requestBody:
        description: Parameters for creating a reference data set.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceDataSetCreateOrUpdateParameters'
      responses:
        '200':
          description: The existing reference data set definition was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceDataSetResource'
        '201':
          description: The reference data set was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceDataSetResource'
        default:
          description: 'HTTP 400 (Bad Request): The given reference data set request body is invalid; See the error code and message in the response for details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - ReferenceDataSets
      operationId: ReferenceDataSets_Get
      description: Gets the reference data set with the specified name in the specified environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/ReferenceDataSetNameParameter'
      responses:
        '200':
          description: The reference data set definition was successfully retrieved and is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceDataSetResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or reference data set could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ReferenceDataSets
      operationId: ReferenceDataSets_Update
      description: Updates the reference data set with the specified name in the specified subscription, resource group, and environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/ReferenceDataSetNameParameter'
      requestBody:
        description: Request object that contains the updated information for the reference data set.
        required: true
        x-ms-requestBody-name: referenceDataSetUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferenceDataSetUpdateParameters'
      responses:
        '200':
          description: The reference data set definition was successfully updated and is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceDataSetResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or reference data set could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ReferenceDataSets
      operationId: ReferenceDataSets_Delete
      description: Deletes the reference data set with the specified name in the specified subscription, resource group, and environment
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/ReferenceDataSetNameParameter'
      responses:
        '200':
          description: The reference data set was successfully deleted.
        '204':
          description: The reference data set was successfully deleted.
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or reference data set could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets?api-version=2021-03-31-preview:
    get:
      tags:
        - ReferenceDataSets
      operationId: ReferenceDataSets_ListByEnvironment
      description: Lists all the available reference data sets associated with the subscription and within the specified resource group and environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
      responses:
        '200':
          description: Reference data sets returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferenceDataSetListResponse'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or environment could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}?api-version=2021-03-31-preview:
    put:
      tags:
        - AccessPolicies
      operationId: AccessPolicies_CreateOrUpdate
      description: Create or update an access policy in the specified environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - name: accessPolicyName
          in: path
          description: Name of the access policy.
          required: true
          schema:
            pattern: ^[-\w\._\(\)]+$
            minLength: 1
            maxLength: 90
            type: string
      requestBody:
        description: Parameters for creating an access policy.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicyCreateOrUpdateParameters'
      responses:
        '200':
          description: The existing access policy definition was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResource'
        '201':
          description: The access policy was successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResource'
        default:
          description: 'HTTP 400 (Bad Request): The given access policy request body is invalid; See the error code and message in the response for details.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - AccessPolicies
      operationId: AccessPolicies_Get
      description: Gets the access policy with the specified name in the specified environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/AccessPolicyNameParameter'
      responses:
        '200':
          description: The access policy definition was successfully retrieved and is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or access policy could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - AccessPolicies
      operationId: AccessPolicies_Update
      description: Updates the access policy with the specified name in the specified subscription, resource group, and environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/AccessPolicyNameParameter'
      requestBody:
        description: Request object that contains the updated information for the access policy.
        required: true
        x-ms-requestBody-name: accessPolicyUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicyUpdateParameters'
      responses:
        '200':
          description: The access policy definition was successfully updated and is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResource'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or access policy could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - AccessPolicies
      operationId: AccessPolicies_Delete
      description: Deletes the access policy with the specified name in the specified subscription, resource group, and environment
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/AccessPolicyNameParameter'
      responses:
        '200':
          description: The access policy was successfully deleted.
        '204':
          description: The access policy was successfully deleted.
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment, or access policy could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies?api-version=2021-03-31-preview:
    get:
      tags:
        - AccessPolicies
      operationId: AccessPolicies_ListByEnvironment
      description: Lists all the available access policies associated with the environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
      responses:
        '200':
          description: access policies returned successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyListResponse'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, or environment could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2021-03-31-preview:
    put:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_CreateOrUpdate
      description: Updates a Private Endpoint connection of the environment in the given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: The definition of the private endpoint connection to update.
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: The existing private endpoint connection definition was successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: 'HTTP 400 (Bad Request): The given private endpoint connection name or the private endpoint connection definition is invalid; See the error code and message in the response for details. HTTP 404 (Not Found): The subscription, resource group, environment or private endpoint connection could not be found. HTTP 409 (Conflict): The specified subscription is disabled.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Get
      description: Gets the details of the private endpoint connection of the environment in the given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: The definition of the private endpoint connection was successfully retrieved and is in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: 'HTTP 404 (Not Found): The subscription, resource group, environment or private endpoint connection could not be found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_Delete
      description: Disconnects the private endpoint connection and deletes it from the environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: The private endpoint connection was successfully disconnected and removed from the environment. The response will contain the updated definition of the private endpoint connection.
        '204':
          description: The private endpoint connection was successfully disconnected and removed from the environment. The response will contain the updated definition of the private endpoint connection.
        '404':
          description: The subscription, resource group, environment or private endpoint connection could not be found.
          x-ms-error-response: true
        default:
          description: An unexpected error occurred during the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/privateEndpointConnections?api-version=2021-03-31-preview:
    get:
      tags:
        - PrivateEndpointConnections
      operationId: PrivateEndpointConnections_ListByEnvironment
      description: Gets a list of all private endpoint connections in the given environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
      responses:
        '200':
          description: The operation succeeded. The response contains the list of all private endpoint connections for the given environment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: An unexpected error occurred during the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/privateLinkResources?api-version=2021-03-31-preview:
    get:
      tags:
        - PrivateLinkResources
      x-ms-pageable:
        nextLinkName: null
      operationId: PrivateLinkResourcesSupported_List
      description: Gets a list of all supported private link resource types for the given environment.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/EnvironmentNameParameter'
      responses:
        '200':
          description: The operation succeeded. The response contains the list of all supported private link resource types for the given environment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
        default:
          description: An unexpected error occurred during the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: PrivateLinkResources_ListSupported
