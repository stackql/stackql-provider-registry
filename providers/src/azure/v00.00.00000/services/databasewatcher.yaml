openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Database Watcher
  description: Database watcher is a managed monitoring solution for database services in the Azure SQL family. It supports Azure SQL Database and Azure SQL Managed Instance.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    Azure.ResourceManager.ResourceProvisioningState:
      type: string
      description: The provisioning state of a resource type.
      enum:
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: ResourceProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
      readOnly: true
    DatabaseWatcherProvisioningState:
      type: string
      description: The status of the last provisioning operation performed on the resource.
      enum:
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: DatabaseWatcherProvisioningState
        modelAsString: true
        values:
          - name: Succeeded
            value: Succeeded
            description: Resource has been created.
          - name: Failed
            value: Failed
            description: Resource creation failed.
          - name: Canceled
            value: Canceled
            description: Resource creation was canceled.
      readOnly: true
    Datastore:
      type: object
      description: The properties of a data store.
      properties:
        adxClusterResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of an Azure Data Explorer cluster.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Kusto/clusters
        kustoClusterDisplayName:
          type: string
          description: The Kusto cluster display name.
        kustoClusterUri:
          type: string
          description: The Kusto cluster URI.
        kustoDataIngestionUri:
          type: string
          description: The Kusto data ingestion URI.
        kustoDatabaseName:
          type: string
          description: The name of a Kusto database.
        kustoManagementUrl:
          type: string
          description: The Kusto management URL.
        kustoOfferingType:
          $ref: '#/components/schemas/KustoOfferingType'
          description: The type of a Kusto offering.
      required:
        - kustoClusterUri
        - kustoDataIngestionUri
        - kustoDatabaseName
        - kustoManagementUrl
        - kustoOfferingType
    DatastoreUpdate:
      type: object
      description: The properties of a data store.
      properties:
        adxClusterResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of an Azure Data Explorer cluster.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Kusto/clusters
        kustoClusterDisplayName:
          type: string
          description: The Kusto cluster display name.
        kustoClusterUri:
          type: string
          description: The Kusto cluster URI.
        kustoDataIngestionUri:
          type: string
          description: The Kusto data ingestion URI.
        kustoDatabaseName:
          type: string
          description: The name of a Kusto database.
        kustoManagementUrl:
          type: string
          description: The Kusto management URL.
        kustoOfferingType:
          $ref: '#/components/schemas/KustoOfferingType'
          description: The type of a Kusto offering.
    KustoOfferingType:
      type: string
      description: The type of Kusto offering.
      enum:
        - adx
        - free
        - fabric
      x-ms-enum:
        name: KustoOfferingType
        modelAsString: true
        values:
          - name: adx
            value: adx
            description: The Azure Data Explorer cluster Kusto offering.
          - name: free
            value: free
            description: The free Azure Data Explorer cluster Kusto offering.
          - name: fabric
            value: fabric
            description: The Fabric Real-Time Analytics Kusto offering.
    SharedPrivateLinkResource:
      description: Concrete proxy resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/SharedPrivateLinkResourceProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    SharedPrivateLinkResourceListResult:
      type: object
      description: The response of a SharedPrivateLinkResource list operation.
      properties:
        value:
          type: array
          description: The SharedPrivateLinkResource items on this page
          items:
            $ref: '#/components/schemas/SharedPrivateLinkResource'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    SharedPrivateLinkResourceProperties:
      type: object
      description: The generic properties of a Shared Private Link resource.
      properties:
        privateLinkResourceId:
          type: string
          format: arm-id
          description: The resource id of the resource the shared private link resource is for.
        groupId:
          type: string
          description: The group id from the provider of resource the shared private link resource is for.
        requestMessage:
          type: string
          description: The request message for requesting approval of the shared private link resource.
        dnsZone:
          type: string
          description: The DNS zone to be included in the DNS name of the shared private link. Value is service-specific.
        status:
          $ref: '#/components/schemas/SharedPrivateLinkResourceStatus'
          description: Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The provisioning state of the resource.
          readOnly: true
      required:
        - privateLinkResourceId
        - groupId
        - requestMessage
    SharedPrivateLinkResourceStatus:
      type: string
      description: Status of the shared private link resource. Can be Pending, Approved, Rejected or Disconnected.
      enum:
        - Pending
        - Approved
        - Rejected
        - Disconnected
      x-ms-enum:
        name: SharedPrivateLinkResourceStatus
        modelAsString: true
        values:
          - name: Pending
            value: Pending
            description: The shared private link connection request was not yet authorized by the resource owner.
          - name: Approved
            value: Approved
            description: The shared private link connection request was approved by the resource owner.
          - name: Rejected
            value: Rejected
            description: The shared private link connection request was rejected by the resource owner.
          - name: Disconnected
            value: Disconnected
            description: The shared private link connection request was disconnected by the resource owner.
    SqlDbElasticPoolTargetProperties:
      description: The properties specific to elastic pool in Azure SQL Database.
      required:
        - sqlEpResourceId
        - anchorDatabaseResourceId
      x-ms-discriminator-value: SqlEp
      properties:
        sqlEpResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of an Azure SQL DB elastic pool target.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Sql/servers/elasticPools
        anchorDatabaseResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of the anchor database used to connect to an elastic pool.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Sql/servers/databases
        readIntent:
          type: boolean
          description: Set to true to monitor a high availability replica of specified target, if any.
          default: false
        targetType:
          type: string
          description: Discriminator property for TargetProperties.
        targetAuthenticationType:
          $ref: '#/components/schemas/TargetAuthenticationType'
          description: The type of authentication to use when connecting to a target.
        targetVault:
          $ref: '#/components/schemas/VaultSecret'
          description: To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored.
        connectionServerName:
          type: string
          description: The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.
          maxLength: 200
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The provisioning state of the resource.
          readOnly: true
      type: object
    SqlDbSingleDatabaseTargetProperties:
      description: The properties specific to single database in Azure SQL Database.
      required:
        - sqlDbResourceId
      x-ms-discriminator-value: SqlDb
      properties:
        sqlDbResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of an Azure SQL DB single database target.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Sql/servers/databases
        readIntent:
          type: boolean
          description: Set to true to monitor a high availability replica of specified target, if any.
          default: false
        targetType:
          type: string
          description: Discriminator property for TargetProperties.
        targetAuthenticationType:
          $ref: '#/components/schemas/TargetAuthenticationType'
          description: The type of authentication to use when connecting to a target.
        targetVault:
          $ref: '#/components/schemas/VaultSecret'
          description: To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored.
        connectionServerName:
          type: string
          description: The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.
          maxLength: 200
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The provisioning state of the resource.
          readOnly: true
      type: object
    SqlMiTargetProperties:
      description: The properties specific to Azure SQL Managed Instance targets.
      required:
        - sqlMiResourceId
      x-ms-discriminator-value: SqlMi
      properties:
        sqlMiResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of an Azure SQL Managed Instance target.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Sql/managedInstances
        connectionTcpPort:
          type: integer
          format: int32
          description: The TCP port number to optionally use in the connection string when connecting to an Azure SQL Managed Instance target.
          default: 1433
        readIntent:
          type: boolean
          description: Set to true to monitor a high availability replica of specified target, if any.
          default: false
        targetType:
          type: string
          description: Discriminator property for TargetProperties.
        targetAuthenticationType:
          $ref: '#/components/schemas/TargetAuthenticationType'
          description: The type of authentication to use when connecting to a target.
        targetVault:
          $ref: '#/components/schemas/VaultSecret'
          description: To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored.
        connectionServerName:
          type: string
          description: The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.
          maxLength: 200
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The provisioning state of the resource.
          readOnly: true
      type: object
    SqlVmTargetProperties:
      description: The properties specific to Azure SQL VM targets.
      required:
        - sqlVmResourceId
      x-ms-discriminator-value: SqlVm
      properties:
        sqlVmResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of an Azure SQL VM target.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.SqlVirtualMachine/sqlVirtualMachines
        connectionTcpPort:
          type: integer
          format: int32
          description: The TCP port number to optionally use in the connection string when connecting to an Azure SQL VM target.
          default: 1433
        sqlNamedInstanceName:
          type: string
          description: The SQL instance name to optionally use in the connection string when connecting to an Azure SQL VM target.
        targetType:
          type: string
          description: Discriminator property for TargetProperties.
        targetAuthenticationType:
          $ref: '#/components/schemas/TargetAuthenticationType'
          description: The type of authentication to use when connecting to a target.
        targetVault:
          $ref: '#/components/schemas/VaultSecret'
          description: To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored.
        connectionServerName:
          type: string
          description: The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.
          maxLength: 200
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The provisioning state of the resource.
          readOnly: true
      type: object
    Target:
      description: Concrete proxy resource types can be created by aliasing this type using a specific property type.
      properties:
        properties:
          $ref: '#/components/schemas/TargetProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
      type: object
    TargetAuthenticationType:
      type: string
      description: The type of authentication to use when connecting to a target.
      enum:
        - Aad
        - Sql
      x-ms-enum:
        name: TargetAuthenticationType
        modelAsString: true
        values:
          - name: Aad
            value: Aad
            description: The Azure Active Directory authentication.
          - name: Sql
            value: Sql
            description: The SQL password authentication.
    TargetListResult:
      type: object
      description: The response of a Target list operation.
      properties:
        value:
          type: array
          description: The Target items on this page
          items:
            $ref: '#/components/schemas/Target'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    TargetProperties:
      type: object
      description: The generic properties of a target.
      properties:
        targetType:
          type: string
          description: Discriminator property for TargetProperties.
        targetAuthenticationType:
          $ref: '#/components/schemas/TargetAuthenticationType'
          description: The type of authentication to use when connecting to a target.
        targetVault:
          $ref: '#/components/schemas/VaultSecret'
          description: To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored.
        connectionServerName:
          type: string
          description: The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.
          maxLength: 200
        provisioningState:
          $ref: '#/components/schemas/Azure.ResourceManager.ResourceProvisioningState'
          description: The provisioning state of the resource.
          readOnly: true
      discriminator:
        propertyName: targetType
      required:
        - targetType
        - targetAuthenticationType
        - connectionServerName
    VaultSecret:
      type: object
      description: The vault specific details required if using SQL authentication to connect to a target.
      properties:
        akvResourceId:
          type: string
          format: arm-id
          description: The Azure ResourceId of the Key Vault instance storing database authentication secrets.
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.KeyVault/vaults
        akvTargetUser:
          type: string
          description: The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target.
          pattern: ^[a-zA-Z0-9-]{1,127}$
        akvTargetPassword:
          type: string
          description: The path to the Key Vault secret storing the password for authentication to a target.
          pattern: ^[a-zA-Z0-9-]{1,127}$
    Watcher:
      description: The DatabaseWatcherProviderHub resource.
      properties:
        properties:
          $ref: '#/components/schemas/WatcherProperties'
          description: The resource-specific properties for this resource.
          x-ms-client-flatten: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    WatcherListResult:
      type: object
      description: The response of a Watcher list operation.
      properties:
        value:
          type: array
          description: The Watcher items on this page
          items:
            $ref: '#/components/schemas/Watcher'
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      required:
        - value
    WatcherProperties:
      type: object
      description: The RP specific properties of the resource.
      properties:
        datastore:
          $ref: '#/components/schemas/Datastore'
          description: The data store for collected monitoring data.
        status:
          $ref: '#/components/schemas/WatcherStatus'
          description: The monitoring collection status of the watcher.
          readOnly: true
        provisioningState:
          $ref: '#/components/schemas/DatabaseWatcherProvisioningState'
          description: The provisioning state of the resource watcher.
          readOnly: true
    WatcherStatus:
      type: string
      description: The monitoring collection status of a watcher.
      enum:
        - Starting
        - Running
        - Stopping
        - Stopped
        - Deleting
      x-ms-enum:
        name: WatcherStatus
        modelAsString: true
        values:
          - name: Starting
            value: Starting
            description: Denotes the watcher is in a starting state.
          - name: Running
            value: Running
            description: Denotes the watcher is in a running state.
          - name: Stopping
            value: Stopping
            description: Denotes the watcher is in a stopping state.
          - name: Stopped
            value: Stopped
            description: Denotes the watcher is in a stopped state.
          - name: Deleting
            value: Deleting
            description: Denotes the watcher is in a deleting state.
    WatcherUpdate:
      description: The type used for update operations of the Watcher.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: The managed service identities assigned to this resource.
        tags:
          type: object
          description: Resource tags.
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/WatcherUpdateProperties'
          x-ms-client-flatten: true
      type: object
    WatcherUpdateProperties:
      type: object
      description: The updatable properties of the Watcher.
      properties:
        datastore:
          $ref: '#/components/schemas/DatastoreUpdate'
          description: The data store for collected monitoring data.
    UserAssignedIdentities:
      title: User-Assigned Identities
      description: 'The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.'
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    UserAssignedIdentity:
      type: object
      description: User assigned identity properties
      properties:
        principalId:
          description: The principal ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
        clientId:
          description: The client ID of the assigned identity.
          format: uuid
          type: string
          readOnly: true
    ManagedServiceIdentityType:
      description: Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      type: string
      x-ms-enum:
        name: ManagedServiceIdentityType
        modelAsString: true
    ManagedServiceIdentity:
      description: Managed service identity (system assigned and/or user assigned identities)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedServiceIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
      required:
        - type
    SystemAssignedServiceIdentityType:
      description: Type of managed service identity (either system assigned, or none).
      enum:
        - None
        - SystemAssigned
      type: string
      x-ms-enum:
        name: SystemAssignedServiceIdentityType
        modelAsString: true
    SystemAssignedServiceIdentity:
      description: Managed service identity (either system assigned, or none)
      type: object
      properties:
        principalId:
          readOnly: true
          format: uuid
          type: string
          description: The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          format: uuid
          type: string
          description: The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/SystemAssignedServiceIdentityType'
      required:
        - type
  x-stackQL-resources:
    operations:
      id: azure.databasewatcher.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DatabaseWatcher~1operations~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    watchers:
      id: azure.databasewatcher.watchers
      name: watchers
      title: watchers
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DatabaseWatcher~1watchers~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1?api-version=2023-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1?api-version=2023-09-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1?api-version=2023-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1start~1?api-version=2023-09-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1stop~1?api-version=2023-09-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/watchers/methods/get'
          - $ref: '#/components/x-stackQL-resources/watchers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/watchers/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/watchers/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/watchers/methods/delete'
    shared_private_link_resources:
      id: azure.databasewatcher.shared_private_link_resources
      name: shared_private_link_resources
      title: shared_private_link_resources
      methods:
        list_by_watcher:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1sharedPrivateLinkResources~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1sharedPrivateLinkResources~1{sharedPrivateLinkResourceName}~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1sharedPrivateLinkResources~1{sharedPrivateLinkResourceName}~1?api-version=2023-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1sharedPrivateLinkResources~1{sharedPrivateLinkResourceName}~1?api-version=2023-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shared_private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/shared_private_link_resources/methods/list_by_watcher'
        insert:
          - $ref: '#/components/x-stackQL-resources/shared_private_link_resources/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/shared_private_link_resources/methods/delete'
    targets:
      id: azure.databasewatcher.targets
      name: targets
      title: targets
      methods:
        list_by_watcher:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1targets~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1targets~1{targetName}~1?api-version=2023-09-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1targets~1{targetName}~1?api-version=2023-09-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DatabaseWatcher~1watchers~1{watcherName}~1targets~1{targetName}~1?api-version=2023-09-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/targets/methods/get'
          - $ref: '#/components/x-stackQL-resources/targets/methods/list_by_watcher'
        insert:
          - $ref: '#/components/x-stackQL-resources/targets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/targets/methods/delete'
paths:
  /providers/Microsoft.DatabaseWatcher/operations/?api-version=2023-09-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DatabaseWatcher/watchers/?api-version=2023-09-01-preview:
    get:
      operationId: Watchers_ListBySubscription
      tags:
        - Watchers
      description: List Watcher resources by subscription ID
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatcherListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/?api-version=2023-09-01-preview:
    get:
      operationId: Watchers_ListByResourceGroup
      tags:
        - Watchers
      description: List Watcher resources by resource group
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WatcherListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/?api-version=2023-09-01-preview:
    get:
      operationId: Watchers_Get
      tags:
        - Watchers
      description: Get a Watcher
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Watchers_CreateOrUpdate
      tags:
        - Watchers
      description: Create a Watcher
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Watcher'
      responses:
        '200':
          description: Resource 'Watcher' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        '201':
          description: Resource 'Watcher' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    patch:
      operationId: Watchers_Update
      tags:
        - Watchers
      description: Update a Watcher
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      requestBody:
        description: The resource properties to be updated.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatcherUpdate'
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        '202':
          description: Resource update request accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
    delete:
      operationId: Watchers_Delete
      tags:
        - Watchers
      description: Delete a Watcher
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/sharedPrivateLinkResources/?api-version=2023-09-01-preview:
    get:
      operationId: SharedPrivateLinkResources_ListByWatcher
      tags:
        - SharedPrivateLinkResources
      description: List SharedPrivateLinkResource resources by Watcher
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedPrivateLinkResourceListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/sharedPrivateLinkResources/{sharedPrivateLinkResourceName}/?api-version=2023-09-01-preview:
    get:
      operationId: SharedPrivateLinkResources_Get
      tags:
        - SharedPrivateLinkResources
      description: Get a SharedPrivateLinkResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
        - name: sharedPrivateLinkResourceName
          in: path
          description: The Shared Private Link resource name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedPrivateLinkResource'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: SharedPrivateLinkResources_Create
      tags:
        - SharedPrivateLinkResources
      description: Create a SharedPrivateLinkResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
        - name: sharedPrivateLinkResourceName
          in: path
          description: The Shared Private Link resource name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedPrivateLinkResource'
      responses:
        '200':
          description: Resource 'SharedPrivateLinkResource' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedPrivateLinkResource'
        '201':
          description: Resource 'SharedPrivateLinkResource' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedPrivateLinkResource'
          headers:
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
    delete:
      operationId: SharedPrivateLinkResources_Delete
      tags:
        - SharedPrivateLinkResources
      description: Delete a SharedPrivateLinkResource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
        - name: sharedPrivateLinkResourceName
          in: path
          description: The Shared Private Link resource name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{0,62}[a-zA-Z0-9_]{1}$
            type: string
      responses:
        '202':
          description: Resource deletion accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: location
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/start/?api-version=2023-09-01-preview:
    post:
      operationId: Watchers_Start
      tags:
        - Watchers
      description: The action to start monitoring all targets configured for a database watcher.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/stop/?api-version=2023-09-01-preview:
    post:
      operationId: Watchers_Stop
      tags:
        - Watchers
      description: The action to stop monitoring all targets configured for a database watcher.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watcher'
        '202':
          description: Resource operation accepted.
          headers:
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/?api-version=2023-09-01-preview:
    get:
      operationId: Targets_ListByWatcher
      tags:
        - Targets
      description: List Target resources by Watcher
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}/?api-version=2023-09-01-preview:
    get:
      operationId: Targets_Get
      tags:
        - Targets
      description: Get a Target
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
        - name: targetName
          in: path
          description: The target resource name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: Targets_CreateOrUpdate
      tags:
        - Targets
      description: Create a Target
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
        - name: targetName
          in: path
          description: The target resource name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      requestBody:
        description: Resource create parameters.
        required: true
        x-ms-requestBody-name: resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
      responses:
        '200':
          description: Resource 'Target' update operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
        '201':
          description: Resource 'Target' create operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: Targets_Delete
      tags:
        - Targets
      description: Delete a Target
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: watcherName
          in: path
          description: The database watcher name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
        - name: targetName
          in: path
          description: The target resource name.
          required: true
          schema:
            pattern: ^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$
            type: string
      responses:
        '200':
          description: Resource deleted successfully.
        '204':
          description: Resource does not exist.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
