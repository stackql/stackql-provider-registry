openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Traffic Manager
  description: Microsoft Azure Traffic Manager allows you to control the distribution of user traffic for service endpoints in different datacenters. Service endpoints supported by Traffic Manager include Azure VMs, Web Apps, and cloud services. You can also use Traffic Manager with external, non-Azure endpoints.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    DeleteOperationResult:
      properties:
        boolean:
          type: boolean
          x-ms-client-name: operationResult
          readOnly: true
          description: The result of the operation or request.
      description: The result of the request or operation.
      type: object
    EndpointProperties:
      properties:
        targetResourceId:
          type: string
          description: The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
        target:
          type: string
          description: The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
        endpointStatus:
          type: string
          description: The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: EndpointStatus
            modelAsString: true
        weight:
          type: integer
          format: int64
          description: The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
        priority:
          type: integer
          format: int64
          description: The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
        endpointLocation:
          type: string
          description: Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
        endpointMonitorStatus:
          type: string
          description: The monitoring status of the endpoint.
          enum:
            - CheckingEndpoint
            - Online
            - Degraded
            - Disabled
            - Inactive
            - Stopped
            - Unmonitored
          x-ms-enum:
            name: EndpointMonitorStatus
            modelAsString: true
        minChildEndpoints:
          type: integer
          format: int64
          description: The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        minChildEndpointsIPv4:
          type: integer
          format: int64
          description: The minimum number of IPv4 (DNS record type A) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        minChildEndpointsIPv6:
          type: integer
          format: int64
          description: The minimum number of IPv6 (DNS record type AAAA) endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
        geoMapping:
          type: array
          items:
            type: string
          description: The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
        subnets:
          type: array
          items:
            type: object
            properties:
              first:
                type: string
                description: First address in the subnet.
              last:
                type: string
                description: Last address in the subnet.
              scope:
                type: integer
                description: Block size (number of leading bits in the subnet mask).
            description: Subnet first address, scope, and/or last address.
          description: The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
        customHeaders:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Header name.
              value:
                type: string
                description: Header value.
            description: Custom header name and value.
          description: List of custom headers.
        alwaysServe:
          type: string
          description: If Always Serve is enabled, probing for endpoint health will be disabled and endpoints will be included in the traffic routing method.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: AlwaysServe
            modelAsString: true
      description: Class representing a Traffic Manager endpoint properties.
      type: object
    HeatMapModel:
      description: Class representing a Traffic Manager HeatMap.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HeatMapProperties'
          description: The properties of the Traffic Manager HeatMap.
      type: object
    UserMetricsModel:
      description: Class representing Traffic Manager User Metrics.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UserMetricsProperties'
          description: The properties of the Traffic Manager User Metrics.
      type: object
    QueryExperience:
      properties:
        endpointId:
          type: integer
          description: The id of the endpoint from the 'endpoints' array which these queries were routed to.
        queryCount:
          type: integer
          description: The number of queries originating from this location.
        latency:
          type: number
          format: double
          description: The latency experienced by queries originating from this location.
      required:
        - endpointId
        - queryCount
      description: Class representing a Traffic Manager HeatMap query experience properties.
      type: object
    TrafficFlow:
      properties:
        sourceIp:
          type: string
          description: The IP address that this query experience originated from.
        latitude:
          type: number
          format: double
          description: The approximate latitude that these queries originated from.
        longitude:
          type: number
          format: double
          description: The approximate longitude that these queries originated from.
        queryExperiences:
          type: array
          description: The query experiences produced in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/QueryExperience'
      description: Class representing a Traffic Manager HeatMap traffic flow properties.
      type: object
    HeatMapProperties:
      properties:
        startTime:
          type: string
          format: date-time
          description: The beginning of the time window for this HeatMap, inclusive.
        endTime:
          type: string
          format: date-time
          description: The ending of the time window for this HeatMap, exclusive.
        endpoints:
          type: array
          description: The endpoints used in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/HeatMapEndpoint'
        trafficFlows:
          type: array
          description: The traffic flows produced in this HeatMap calculation.
          items:
            $ref: '#/components/schemas/TrafficFlow'
      description: Class representing a Traffic Manager HeatMap properties.
      type: object
    HeatMapEndpoint:
      properties:
        resourceId:
          type: string
          description: The ARM Resource ID of this Traffic Manager endpoint.
        endpointId:
          type: integer
          description: A number uniquely identifying this endpoint in query experiences.
      description: Class which is a sparse representation of a Traffic Manager endpoint.
      type: object
    Endpoint:
      description: Class representing a Traffic Manager endpoint.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EndpointProperties'
          description: The properties of the Traffic Manager endpoint.
      type: object
    CheckTrafficManagerRelativeDnsNameAvailabilityParameters:
      properties:
        name:
          type: string
          description: The name of the resource.
        type:
          type: string
          description: The type of the resource.
      description: Parameters supplied to check Traffic Manager name operation.
      type: object
    DnsConfig:
      properties:
        relativeName:
          type: string
          description: The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
        fqdn:
          type: string
          readOnly: true
          description: The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
        ttl:
          type: integer
          format: int64
          description: The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
      description: Class containing DNS settings in a Traffic Manager profile.
      type: object
    MonitorConfig:
      properties:
        profileMonitorStatus:
          type: string
          description: The profile-level monitoring status of the Traffic Manager profile.
          enum:
            - CheckingEndpoints
            - Online
            - Degraded
            - Disabled
            - Inactive
          x-ms-enum:
            name: ProfileMonitorStatus
            modelAsString: true
        protocol:
          type: string
          description: The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
          enum:
            - HTTP
            - HTTPS
            - TCP
          x-ms-enum:
            name: MonitorProtocol
            modelAsString: true
        port:
          type: integer
          format: int64
          description: The TCP port used to probe for endpoint health.
        path:
          type: string
          description: The path relative to the endpoint domain name used to probe for endpoint health.
        intervalInSeconds:
          type: integer
          format: int64
          description: The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
        timeoutInSeconds:
          type: integer
          format: int64
          description: The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
        toleratedNumberOfFailures:
          type: integer
          format: int64
          description: The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
        customHeaders:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Header name.
              value:
                type: string
                description: Header value.
            description: Custom header name and value.
          description: List of custom headers.
        expectedStatusCodeRanges:
          type: array
          items:
            type: object
            properties:
              min:
                type: integer
                description: Min status code.
              max:
                type: integer
                description: Max status code.
            description: Min and max value of a status code range.
          description: List of expected status code ranges.
      description: Class containing endpoint monitoring settings in a Traffic Manager profile.
      type: object
    ProfileProperties:
      properties:
        profileStatus:
          type: string
          description: The status of the Traffic Manager profile.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ProfileStatus
            modelAsString: true
        trafficRoutingMethod:
          type: string
          description: The traffic routing method of the Traffic Manager profile.
          enum:
            - Performance
            - Priority
            - Weighted
            - Geographic
            - MultiValue
            - Subnet
          x-ms-enum:
            name: TrafficRoutingMethod
            modelAsString: true
        dnsConfig:
          $ref: '#/components/schemas/DnsConfig'
          description: The DNS settings of the Traffic Manager profile.
        monitorConfig:
          $ref: '#/components/schemas/MonitorConfig'
          description: The endpoint monitoring settings of the Traffic Manager profile.
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/Endpoint'
          description: The list of endpoints in the Traffic Manager profile.
        trafficViewEnrollmentStatus:
          type: string
          description: Indicates whether Traffic View is 'Enabled' or 'Disabled' for the Traffic Manager profile. Null, indicates 'Disabled'. Enabling this feature will increase the cost of the Traffic Manage profile.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: TrafficViewEnrollmentStatus
            modelAsString: true
        allowedEndpointRecordTypes:
          type: array
          items:
            $ref: '#/components/schemas/AllowedEndpointRecordType'
          description: The list of allowed endpoint record types.
        maxReturn:
          type: integer
          description: Maximum number of endpoints to be returned for MultiValue routing type.
          format: int64
      description: Class representing the Traffic Manager profile properties.
      type: object
    AllowedEndpointRecordType:
      description: The allowed type DNS record types for this profile.
      type: string
      enum:
        - DomainName
        - IPv4Address
        - IPv6Address
        - Any
      x-ms-enum:
        name: AllowedEndpointRecordType
        modelAsString: true
    Profile:
      description: Class representing a Traffic Manager profile.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProfileProperties'
          description: The properties of the Traffic Manager profile.
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ProfileListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
          description: Gets the list of Traffic manager profiles.
      description: The list Traffic Manager profiles operation response.
      type: object
    TrafficManagerNameAvailability:
      properties:
        name:
          type: string
          description: The relative name.
        type:
          type: string
          description: Traffic Manager profile resource type.
        nameAvailable:
          type: boolean
          description: Describes whether the relative name is available or not.
        reason:
          type: string
          description: The reason why the name is not available, when applicable.
        message:
          type: string
          description: Descriptive message that explains why the name is not available, when applicable.
      description: Class representing a Traffic Manager Name Availability response.
      type: object
    Region:
      properties:
        code:
          type: string
          description: The code of the region
        name:
          type: string
          description: The name of the region
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
          description: The list of Regions grouped under this Region in the Geographic Hierarchy.
      description: Class representing a region in the Geographic hierarchy used with the Geographic traffic routing method.
      type: object
    GeographicHierarchyProperties:
      properties:
        geographicHierarchy:
          $ref: '#/components/schemas/Region'
          description: The region at the root of the hierarchy from all the regions in the hierarchy can be retrieved.
      description: Class representing the properties of the Geographic hierarchy used with the Geographic traffic routing method.
      type: object
    TrafficManagerGeographicHierarchy:
      description: Class representing the Geographic hierarchy used with the Geographic traffic routing method.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GeographicHierarchyProperties'
          description: The properties of the Geographic Hierarchy resource.
      type: object
    UserMetricsProperties:
      properties:
        key:
          type: string
          description: The key returned by the User Metrics operation.
      description: Class representing a Traffic Manager Real User Metrics key response.
      type: object
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    CloudError:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: The content of the error.
      description: An error returned by the Azure Resource Manager
      x-ms-external: true
    CloudErrorBody:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        target:
          type: string
          description: Error target
        details:
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          description: Error details
      description: The content of an error returned by the Azure Resource Manager
      x-ms-external: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          type: object
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
  x-stackQL-resources:
    endpoints:
      id: azure.traffic_manager.endpoints
      name: endpoints
      title: endpoints
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}?api-version=2022-04-01/patch'
            operationId: Endpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}?api-version=2022-04-01/get'
            operationId: Endpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}?api-version=2022-04-01/put'
            operationId: Endpoints_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Endpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1{endpointType}~1{endpointName}?api-version=2022-04-01/delete'
            operationId: Endpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeleteOperationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete'
    profiles:
      id: azure.traffic_manager.profiles
      name: profiles
      title: profiles
      methods:
        check_traffic_manager_relative_dns_name_availability:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Network~1checkTrafficManagerNameAvailability?api-version=2022-04-01/post'
            operationId: Profiles_CheckTrafficManagerRelativeDnsNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficManagerNameAvailability
        check_traffic_manager_name_availability_v2:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1checkTrafficManagerNameAvailabilityV2?api-version=2022-04-01/post'
            operationId: Profiles_checkTrafficManagerNameAvailabilityV2
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficManagerNameAvailability
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles?api-version=2022-04-01/get'
            operationId: Profiles_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProfileListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficmanagerprofiles?api-version=2022-04-01/get'
            operationId: Profiles_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProfileListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}?api-version=2022-04-01/get'
            operationId: Profiles_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}?api-version=2022-04-01/put'
            operationId: Profiles_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}?api-version=2022-04-01/delete'
            operationId: Profiles_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeleteOperationResult
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}?api-version=2022-04-01/patch'
            operationId: Profiles_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/profiles/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/delete'
    geographic_hierarchies_defaults:
      id: azure.traffic_manager.geographic_hierarchies_defaults
      name: geographic_hierarchies_defaults
      title: geographic_hierarchies_defaults
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Network~1trafficManagerGeographicHierarchies~1default?api-version=2022-04-01/get'
            operationId: GeographicHierarchiesDefault_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TrafficManagerGeographicHierarchy
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/geographic_hierarchies_defaults/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    heat_maps:
      id: azure.traffic_manager.heat_maps
      name: heat_maps
      title: heat_maps
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1trafficmanagerprofiles~1{profileName}~1heatMaps~1{heatMapType}?api-version=2022-04-01/get'
            operationId: HeatMap_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: HeatMapModel
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/heat_maps/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    user_metrics_keys:
      id: azure.traffic_manager.user_metrics_keys
      name: user_metrics_keys
      title: user_metrics_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficManagerUserMetricsKeys~1default?api-version=2022-04-01/get'
            operationId: TrafficManagerUserMetricsKeys_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UserMetricsModel
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficManagerUserMetricsKeys~1default?api-version=2022-04-01/put'
            operationId: TrafficManagerUserMetricsKeys_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '201'
            schemaRef: UserMetricsModel
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1trafficManagerUserMetricsKeys~1default?api-version=2022-04-01/delete'
            operationId: TrafficManagerUserMetricsKeys_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DeleteOperationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_metrics_keys/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/user_metrics_keys/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/user_metrics_keys/methods/delete'
    vw_endpoints:
      id: azure.traffic_manager.vw_endpoints
      name: vw_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.targetResourceId') as "target_resource_id",
              JSON_EXTRACT(properties, '$.target') as "target",
              JSON_EXTRACT(properties, '$.endpointStatus') as "endpoint_status",
              JSON_EXTRACT(properties, '$.weight') as "weight",
              JSON_EXTRACT(properties, '$.priority') as "priority",
              JSON_EXTRACT(properties, '$.endpointLocation') as "endpoint_location",
              JSON_EXTRACT(properties, '$.endpointMonitorStatus') as "endpoint_monitor_status",
              JSON_EXTRACT(properties, '$.minChildEndpoints') as "min_child_endpoints",
              JSON_EXTRACT(properties, '$.minChildEndpointsIPv4') as "min_child_endpoints_ipv4",
              JSON_EXTRACT(properties, '$.minChildEndpointsIPv6') as "min_child_endpoints_ipv6",
              JSON_EXTRACT(properties, '$.geoMapping') as "geo_mapping",
              JSON_EXTRACT(properties, '$.subnets') as "subnets",
              JSON_EXTRACT(properties, '$.customHeaders') as "custom_headers",
              JSON_EXTRACT(properties, '$.alwaysServe') as "always_serve",
              subscriptionId,
              resourceGroupName,
              profileName,
              endpointType,
              endpointName
              FROM azure.traffic_manager.endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointType = 'replace-me' AND endpointName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.targetResourceId') as "target_resource_id",
                json_extract_path_text(properties, '$.target') as "target",
                json_extract_path_text(properties, '$.endpointStatus') as "endpoint_status",
                json_extract_path_text(properties, '$.weight') as "weight",
                json_extract_path_text(properties, '$.priority') as "priority",
                json_extract_path_text(properties, '$.endpointLocation') as "endpoint_location",
                json_extract_path_text(properties, '$.endpointMonitorStatus') as "endpoint_monitor_status",
                json_extract_path_text(properties, '$.minChildEndpoints') as "min_child_endpoints",
                json_extract_path_text(properties, '$.minChildEndpointsIPv4') as "min_child_endpoints_ipv4",
                json_extract_path_text(properties, '$.minChildEndpointsIPv6') as "min_child_endpoints_ipv6",
                json_extract_path_text(properties, '$.geoMapping') as "geo_mapping",
                json_extract_path_text(properties, '$.subnets') as "subnets",
                json_extract_path_text(properties, '$.customHeaders') as "custom_headers",
                json_extract_path_text(properties, '$.alwaysServe') as "always_serve",
                subscriptionId,
                resourceGroupName,
                profileName,
                endpointType,
                endpointName
                FROM azure.traffic_manager.endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND endpointType = 'replace-me' AND endpointName = 'replace-me';
    vw_profiles:
      id: azure.traffic_manager.vw_profiles
      name: vw_profiles
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.profileStatus') as "profile_status",
              JSON_EXTRACT(properties, '$.trafficRoutingMethod') as "traffic_routing_method",
              JSON_EXTRACT(properties, '$.dnsConfig') as "dns_config",
              JSON_EXTRACT(properties, '$.monitorConfig') as "monitor_config",
              JSON_EXTRACT(properties, '$.endpoints') as "endpoints",
              JSON_EXTRACT(properties, '$.trafficViewEnrollmentStatus') as "traffic_view_enrollment_status",
              JSON_EXTRACT(properties, '$.allowedEndpointRecordTypes') as "allowed_endpoint_record_types",
              JSON_EXTRACT(properties, '$.maxReturn') as "max_return",
              subscriptionId,
              resourceGroupName,
              profileName
              FROM azure.traffic_manager.profiles
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.profileStatus') as "profile_status",
                json_extract_path_text(properties, '$.trafficRoutingMethod') as "traffic_routing_method",
                json_extract_path_text(properties, '$.dnsConfig') as "dns_config",
                json_extract_path_text(properties, '$.monitorConfig') as "monitor_config",
                json_extract_path_text(properties, '$.endpoints') as "endpoints",
                json_extract_path_text(properties, '$.trafficViewEnrollmentStatus') as "traffic_view_enrollment_status",
                json_extract_path_text(properties, '$.allowedEndpointRecordTypes') as "allowed_endpoint_record_types",
                json_extract_path_text(properties, '$.maxReturn') as "max_return",
                subscriptionId,
                resourceGroupName,
                profileName
                FROM azure.traffic_manager.profiles
                WHERE subscriptionId = 'replace-me';
    vw_geographic_hierarchies_defaults:
      id: azure.traffic_manager.vw_geographic_hierarchies_defaults
      name: vw_geographic_hierarchies_defaults
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.geographicHierarchy') as "geographic_hierarchy"
              FROM azure.traffic_manager.geographic_hierarchies_defaults
              ;
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.geographicHierarchy') as "geographic_hierarchy"
                FROM azure.traffic_manager.geographic_hierarchies_defaults
                ;
    vw_heat_maps:
      id: azure.traffic_manager.vw_heat_maps
      name: vw_heat_maps
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.startTime') as "start_time",
              JSON_EXTRACT(properties, '$.endTime') as "end_time",
              JSON_EXTRACT(properties, '$.endpoints') as "endpoints",
              JSON_EXTRACT(properties, '$.trafficFlows') as "traffic_flows",
              subscriptionId,
              resourceGroupName,
              profileName,
              heatMapType
              FROM azure.traffic_manager.heat_maps
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND heatMapType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.startTime') as "start_time",
                json_extract_path_text(properties, '$.endTime') as "end_time",
                json_extract_path_text(properties, '$.endpoints') as "endpoints",
                json_extract_path_text(properties, '$.trafficFlows') as "traffic_flows",
                subscriptionId,
                resourceGroupName,
                profileName,
                heatMapType
                FROM azure.traffic_manager.heat_maps
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND heatMapType = 'replace-me';
    vw_user_metrics_keys:
      id: azure.traffic_manager.vw_user_metrics_keys
      name: vw_user_metrics_keys
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.key') as "key",
              subscriptionId
              FROM azure.traffic_manager.user_metrics_keys
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.key') as "key",
                subscriptionId
                FROM azure.traffic_manager.user_metrics_keys
                WHERE subscriptionId = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/{endpointType}/{endpointName}?api-version=2022-04-01:
    patch:
      tags:
        - Endpoints
      operationId: Endpoints_Update
      description: Update a Traffic Manager endpoint.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint to be updated.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint to be updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager endpoint parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '200':
          description: The updated Traffic Manager endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - Endpoints
      operationId: Endpoints_Get
      description: Gets a Traffic Manager endpoint.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Endpoints
      operationId: Endpoints_CreateOrUpdate
      description: Create or update a Traffic Manager endpoint.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint to be created or updated.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint to be created or updated.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager endpoint parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endpoint'
      responses:
        '200':
          description: The created or updated Endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        '201':
          description: The created or updated Endpoint.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Endpoints
      operationId: Endpoints_Delete
      description: Deletes a Traffic Manager endpoint.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: endpointType
          in: path
          description: The type of the Traffic Manager endpoint to be deleted.
          required: true
          schema:
            enum:
              - AzureEndpoints
              - ExternalEndpoints
              - NestedEndpoints
            x-ms-enum:
              name: EndpointType
              modelAsString: false
            type: string
        - name: endpointName
          in: path
          description: The name of the Traffic Manager endpoint to be deleted.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager Endpoint was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOperationResult'
        '204':
          description: The Traffic Manager Endpoint does not exist. It could have been deleted on a previous request.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Network/checkTrafficManagerNameAvailability?api-version=2022-04-01:
    post:
      tags:
        - Profiles
      operationId: Profiles_CheckTrafficManagerRelativeDnsNameAvailability
      description: Checks the availability of a Traffic Manager Relative DNS name.
      requestBody:
        description: The Traffic Manager name parameters supplied to the CheckTrafficManagerNameAvailability operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckTrafficManagerRelativeDnsNameAvailabilityParameters'
      parameters: []
      responses:
        '200':
          description: The Traffic Manager Name Availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficManagerNameAvailability'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/checkTrafficManagerNameAvailabilityV2?api-version=2022-04-01:
    post:
      tags:
        - Profiles
      operationId: Profiles_checkTrafficManagerNameAvailabilityV2
      description: Checks the availability of a Traffic Manager Relative DNS name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager name parameters supplied to the CheckTrafficManagerNameAvailability operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckTrafficManagerRelativeDnsNameAvailabilityParameters'
      responses:
        '200':
          description: The Traffic Manager Name Availability.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficManagerNameAvailability'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles?api-version=2022-04-01:
    get:
      tags:
        - Profiles
      x-ms-pageable:
        nextLinkName: null
      operationId: Profiles_ListByResourceGroup
      description: Lists all Traffic Manager profiles within a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Traffic Manager profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficmanagerprofiles?api-version=2022-04-01:
    get:
      tags:
        - Profiles
      x-ms-pageable:
        nextLinkName: null
      operationId: Profiles_ListBySubscription
      description: Lists all Traffic Manager profiles within a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The list of Traffic Manager profiles.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}?api-version=2022-04-01:
    get:
      tags:
        - Profiles
      operationId: Profiles_Get
      description: Gets a Traffic Manager profile.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Profiles
      operationId: Profiles_CreateOrUpdate
      description: Create or update a Traffic Manager profile.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager profile parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: The created or updated Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '201':
          description: The created or updated Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Profiles
      operationId: Profiles_Delete
      description: Deletes a Traffic Manager profile.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile to be deleted.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager Profile was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOperationResult'
        '204':
          description: The profile does not exist. It could have been deleted on a previous request.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Profiles
      operationId: Profiles_Update
      description: Update a Traffic Manager profile.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The Traffic Manager profile parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: The updated Traffic Manager profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Network/trafficManagerGeographicHierarchies/default?api-version=2022-04-01:
    get:
      tags:
        - GeographicHierarchies
      operationId: GeographicHierarchiesDefault_Get
      description: Gets the default Geographic Hierarchy used by the Geographic traffic routing method.
      parameters: []
      responses:
        '200':
          description: The default Geographic Hierarchy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrafficManagerGeographicHierarchy'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: GeographicHierarchies_GetDefault
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles/{profileName}/heatMaps/{heatMapType}?api-version=2022-04-01:
    get:
      tags:
        - HeatMaps
      operationId: HeatMap_Get
      description: Gets latest heatmap for Traffic Manager profile.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: profileName
          in: path
          description: The name of the Traffic Manager profile.
          required: true
          schema:
            type: string
        - name: heatMapType
          in: path
          description: The type of HeatMap for the Traffic Manager profile.
          required: true
          schema:
            enum:
              - default
            x-ms-enum:
              name: HeatMapType
              modelAsString: false
            type: string
        - name: topLeft
          in: query
          description: The top left latitude,longitude pair of the rectangular viewport to query for.
          allowEmptyValue: true
          required: false
          style: form
          schema:
            minItems: 2
            maxItems: 2
            type: array
            items:
              type: number
              format: double
        - name: botRight
          in: query
          description: The bottom right latitude,longitude pair of the rectangular viewport to query for.
          allowEmptyValue: true
          required: false
          style: form
          schema:
            minItems: 2
            maxItems: 2
            type: array
            items:
              type: number
              format: double
      responses:
        '200':
          description: The Traffic Manager heatmap.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeatMapModel'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficManagerUserMetricsKeys/default?api-version=2022-04-01:
    get:
      tags:
        - RealUserMetrics
      operationId: TrafficManagerUserMetricsKeys_Get
      description: Get the subscription-level key used for Real User Metrics collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The subscription-level Traffic Manager Real User Metrics key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMetricsModel'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - RealUserMetrics
      operationId: TrafficManagerUserMetricsKeys_CreateOrUpdate
      description: Create or update a subscription-level key used for Real User Metrics collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '201':
          description: A new subscription-level key has been created for Real User Metrics collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMetricsModel'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - RealUserMetrics
      operationId: TrafficManagerUserMetricsKeys_Delete
      description: Delete a subscription-level key used for Real User Metrics collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The Traffic Manager Real User Metrics key was deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOperationResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
