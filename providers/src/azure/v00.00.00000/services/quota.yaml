openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Quota Service
  description: The Azure Quota Service REST API is designed for viewing and managing quotas for Azure resource providers. A quota is the service limit or allowance set on a resource in your Azure subscription. Each Azure service defines its quotas and determines its default values.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RequestId:
      name: requestId
      in: path
      description: Request Id.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceName:
      name: resourceName
      in: path
      description: Resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z][a-z0-9]*$
        minLength: 3
        maxLength: 63
        type: string
    AllocationId:
      name: allocationId
      in: path
      description: Request Id.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagementGroupId:
      name: managementGroupId
      in: path
      description: Management Group Id.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 63
        type: string
    GroupQuotaName:
      name: groupQuotaName
      in: path
      description: The GroupQuota name. The name should be unique for the provided context tenantId/MgId.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-z][a-z0-9]*$
        minLength: 3
        maxLength: 63
        type: string
    ResourceProviderName:
      name: resourceProviderName
      in: path
      description: The resource provider name, such as - Microsoft.Compute. Currently only Microsoft.Compute resource provider supports this API.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\.)+[a-zA-Z]{2,63}$
        type: string
    FilterLocationInQuery:
      name: $filter
      in: query
      description: "| Field | Supported operators  \r\n|---------------------|------------------------\n\r\n location eq {location}\n Example: $filter=location eq eastus"
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 12
        type: string
    FilterResourceAndLocationInQuery:
      name: $filter
      in: query
      description: "| Field | Supported operators  \r\n|---------------------|------------------------\n\r\n location eq {location} and resource eq {resourceName}\n Example: $filter=location eq eastus and resourceName eq cores"
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 12
        type: string
    SubscriptionIdInParameters:
      name: subscriptionId
      in: path
      description: Azure subscription ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceNameInParameters:
      name: resourceName
      in: path
      description: "Resource name for a given resource provider. For example:\r\n- SKU name for Microsoft.Compute\r\n- SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices\r\n For Microsoft.Network PublicIPAddresses."
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceDimensionTypeInParameter:
      name: resourceDimension
      in: path
      description: "Resource dimension type for a resource provider. For example:\r\n- locations and SKUs for Microsoft.Compute\r\n- resource groups, batch accounts, and SKUs for Microsoft.Batch"
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RequestIdInParameters:
      name: id
      in: path
      description: Quota request ID.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TopQueryParameter:
      name: $top
      in: query
      description: Number of records to return.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        minimum: 1
        type: integer
    SkipTokenParameter:
      name: $skiptoken
      in: query
      description: The **Skiptoken** parameter is used only if a previous operation returned a partial result. If a previous response contains a **nextLink** element, its value includes a **skiptoken** parameter that specifies a starting point to use for subsequent calls.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ScopeInPath:
      name: scope
      in: path
      description: The target Azure resource URI. For example, `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`. This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific resource.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    RequestState:
      description: Request status.
      enum:
        - Accepted
        - Created
        - Invalid
        - Succeeded
        - Failed
        - InProgress
        - Canceled
      readOnly: true
      type: string
      x-ms-enum:
        name: RequestState
        modelAsString: true
    QuotaAllocationRequestStatus:
      description: The subscription quota allocation status.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          properties:
            requestedResource:
              $ref: '#/components/schemas/QuotaAllocationRequestBase'
            requestSubmitTime:
              description: 'The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ'
              type: string
              readOnly: true
              format: date-time
            provisioningState:
              $ref: '#/components/schemas/RequestState'
              readOnly: true
            faultCode:
              type: string
              description: Details of the failure.
              readOnly: true
      type: object
    QuotaAllocationRequestStatusList:
      type: object
      description: List of QuotaAllocation Request Status
      properties:
        value:
          type: array
          description: List of QuotaAllocation Request Status
          items:
            $ref: '#/components/schemas/QuotaAllocationRequestStatus'
          x-ms-identifiers: []
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    LROResponse:
      description: The provisioning state for the operation.
      properties:
        properties:
          type: object
          properties:
            provisioningState:
              $ref: '#/components/schemas/RequestState'
              readOnly: true
      type: object
    GroupQuotaRequestBase:
      description: The new GroupQuota limit requested.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          properties:
            limit:
              type: integer
              format: int64
              description: The new quota limit for the subscription. The incremental quota will be allocated from pre-approved group quota.
            name:
              type: object
              x-ms-client-flatten: true
              readOnly: true
              description: Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.
              properties:
                value:
                  description: Resource name.
                  type: string
                  readOnly: true
                localizedValue:
                  description: Resource display name.
                  type: string
                  readOnly: true
            region:
              $ref: '#/components/schemas/RegionScope'
            comments:
              description: GroupQuota Request comments and details for request. This is optional paramter to provide more details related to the requested resource.
              type: string
      type: object
    QuotaAllocationRequestBase:
      description: The new quota request allocated to subscription.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          properties:
            limit:
              type: integer
              format: int64
              description: The new quota limit for the subscription. The incremental quota will be allocated from pre-approved group quota.
            name:
              type: object
              x-ms-client-flatten: true
              description: Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.
              readOnly: true
              properties:
                value:
                  description: Resource name.
                  type: string
                  readOnly: true
                localizedValue:
                  description: Resource display name.
                  type: string
                  readOnly: true
            region:
              type: string
              description: The location for which the subscription is allocated
      type: object
    AllocatedToSubscription:
      type: object
      description: SubscriptionIds and quota allocated to subscriptions from the GroupQuota.
      properties:
        subscriptionId:
          type: string
          description: An Azure subscriptionId.
        quotaAllocated:
          type: integer
          format: int64
          description: The amount of quota allocated to this subscriptionId from the GroupQuotasEntity.
    AllocatedQuotaToSubscriptionList:
      type: object
      description: Quota allocated to subscriptions
      properties:
        value:
          type: array
          description: List of Group Quota Limit allocated to subscriptions.
          items:
            $ref: '#/components/schemas/AllocatedToSubscription'
    GroupQuotaLimit:
      description: Group Quota limit.
      properties:
        properties:
          description: Group Quota properties for the specified resource.
          $ref: '#/components/schemas/GroupQuotaDetails'
      type: object
    RegionScope:
      description: Location/Azure region for the quota requested for resource.
      type: string
    GroupQuotaDetails:
      type: object
      description: Group Quota details.
      properties:
        region:
          $ref: '#/components/schemas/RegionScope'
        limit:
          type: integer
          format: int64
          description: The current Group Quota Limit at the parentId level.
        comment:
          description: Any comment related to quota request.
          type: string
        name:
          type: object
          x-ms-client-flatten: true
          readOnly: true
          description: Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.
          properties:
            value:
              description: Resource name.
              type: string
              readOnly: true
            localizedValue:
              description: Resource display name.
              type: string
              readOnly: true
        unit:
          description: ' The usages units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.'
          type: string
          readOnly: true
        availableLimit:
          type: integer
          format: int64
          readOnly: true
          description: The available Group Quota Limit at the MG level. This Group quota can be allocated to subscription(s).
        allocatedToSubscriptions:
          $ref: '#/components/schemas/AllocatedQuotaToSubscriptionList'
          readOnly: true
    GroupQuotaLimitList:
      type: object
      description: List of Group Quota Limit details.
      properties:
        value:
          type: array
          description: List of Group Quota Limit details.
          items:
            $ref: '#/components/schemas/GroupQuotaLimit'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    GroupQuotaSubscriptionRequestStatus:
      description: The new quota limit request status.
      properties:
        properties:
          type: object
          properties:
            subscriptionId:
              type: string
              description: The subscription Id
            requestSubmitTime:
              description: 'The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ'
              type: string
              format: date-time
            provisioningState:
              $ref: '#/components/schemas/RequestState'
              description: Status of this subscriptionId being associated with the GroupQuotasEntity.
      type: object
    GroupQuotaSubscriptionRequestStatusList:
      type: object
      description: List of GroupQuotaSubscriptionRequests Status
      properties:
        value:
          type: array
          description: List of GroupQuotaSubscriptionRequests Status
          items:
            $ref: '#/components/schemas/GroupQuotaSubscriptionRequestStatus'
          x-ms-identifiers: []
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    GroupQuotaSubscriptionId:
      description: This represents a Azure subscriptionId that is associated with a GroupQuotasEntity.
      properties:
        properties:
          type: object
          properties:
            subscriptionId:
              description: An Azure subscriptionId.
              type: string
              readOnly: true
            provisioningState:
              $ref: '#/components/schemas/RequestState'
              description: Status of this subscriptionId being associated with the GroupQuotasEntity.
      type: object
    GroupQuotaSubscriptionIdList:
      type: object
      description: List of GroupQuotaSubscriptionIds
      properties:
        value:
          type: array
          description: List of GroupQuotaSubscriptionIds
          items:
            $ref: '#/components/schemas/GroupQuotaSubscriptionId'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    SubscriptionQuotaAllocationRequestList:
      type: object
      description: List of Allocated Group Quota to the subscriptions.
      properties:
        value:
          type: array
          description: Allocated Group Quota to subscriptions.
          items:
            $ref: '#/components/schemas/QuotaAllocationRequestStatus'
          x-ms-identifiers: []
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    SubscriptionGroupQuotaAssignment:
      type: object
      description: MGId the source of group quota.
      properties:
        groupQuotaId:
          type: string
          description: The group quota id of the quota source.
        quotaAllocated:
          type: integer
          format: int64
          description: The amount of quota allocated to this subscriptionId from the quota source.
    SubscriptionQuotaAllocations:
      description: Quota allocated to a subscription for the specific Resource Provider, Location, ResourceName. This will include the GroupQuota and total quota allocated to the subscription. Only the Group quota allocated to the subscription can be allocated back to the MG Group Quota.
      properties:
        properties:
          description: Quota properties for the specified resource.
          $ref: '#/components/schemas/SubscriptionQuotaDetails'
      type: object
    SubscriptionQuotaDetails:
      type: object
      description: Subscription Quota details.
      properties:
        region:
          $ref: '#/components/schemas/RegionScope'
        limit:
          type: integer
          format: int64
          description: The total quota limit for the subscription.
          readOnly: false
        shareableQuota:
          type: integer
          format: int64
          description: The shareable quota for the subscription.
          readOnly: true
        name:
          type: object
          x-ms-client-flatten: true
          readOnly: true
          description: Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.
          properties:
            value:
              description: Resource name.
              type: string
              readOnly: true
            localizedValue:
              description: Resource display name.
              type: string
              readOnly: true
    SubmittedResourceRequestStatus:
      description: Status of a single GroupQuota request.
      properties:
        properties:
          type: object
          properties:
            requestedResource:
              description: Requested Resource.
              $ref: '#/components/schemas/GroupQuotaRequestBase'
            requestSubmitTime:
              description: 'The request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ'
              type: string
              readOnly: true
              format: date-time
            provisioningState:
              $ref: '#/components/schemas/RequestState'
              readOnly: true
            faultCode:
              type: string
              description: Details of the failure.
              readOnly: true
      type: object
    SubmittedResourceRequestStatusList:
      type: object
      description: Share Quota Entity list.
      properties:
        value:
          type: array
          description: Subscription groupQuotaRequests list.
          items:
            $ref: '#/components/schemas/SubmittedResourceRequestStatus'
          x-ms-identifiers: []
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    SubscriptionQuotaAllocationsStatusList:
      type: object
      description: Subscription quota allocation requests status list.
      properties:
        value:
          type: array
          description: Subscription quota allocation status list.
          items:
            $ref: '#/components/schemas/SubmittedResourceRequestStatus'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    SubscriptionQuotaAllocationsList:
      type: object
      description: Subscription quota list.
      properties:
        value:
          type: array
          description: Subscription quota list.
          items:
            $ref: '#/components/schemas/SubscriptionQuotaAllocations'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    ResourceBaseRequest:
      type: object
      description: Resource definition with the requested quota.
      properties:
        resourceName:
          type: string
          description: The resource name, such as SKU name.
          readOnly: true
        limit:
          type: integer
          description: Quota requested for the resource.
          format: int64
        unit:
          type: string
          readOnly: true
          description: 'Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values.'
    ResourceUsageList:
      type: object
      description: List of resource usages and quotas for GroupQuota.
      properties:
        value:
          type: array
          description: List of resource usages at Group Quotas.
          items:
            $ref: '#/components/schemas/ResourceUsages'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    ResourceUsages:
      description: Resource details with usages and GroupQuota.
      properties:
        properties:
          $ref: '#/components/schemas/GroupQuotaUsagesBase'
      type: object
    GroupQuotaUsagesBase:
      type: object
      description: Resource details with usages and GroupQuota.
      properties:
        name:
          type: object
          x-ms-client-flatten: true
          description: Name of the resource provided by the resource provider. This property is already included in the request URI, so it is a readonly property returned in the response.
          properties:
            value:
              description: Resource name.
              type: string
            localizedValue:
              description: Resource display name.
              type: string
              readOnly: true
        limit:
          type: integer
          description: Quota/limits for the resource.
          format: int64
        usages:
          type: integer
          description: Usages for the resource.
          format: int64
        unit:
          type: string
          readOnly: true
          description: 'Representing the units of the usage quota. Possible values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond. Based on - https://armwiki.azurewebsites.net/api_contracts/UsagesAPIContract.html?q=usages . Different RPs may have different units, Count, type as int64 should work for most of the integer values.'
    GroupQuotasEntityBase:
      type: object
      description: Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.
      properties:
        displayName:
          description: Display name of the GroupQuota entity.
          type: string
        additionalAttributes:
          description: Additional attributes to filter/restrict the subscriptions, which can be added to the subscriptionIds.
          $ref: '#/components/schemas/AdditionalAttributes'
        provisioningState:
          description: Provisioning state of the operation.
          $ref: '#/components/schemas/RequestState'
          readOnly: true
    GroupQuotasEntityBasePatch:
      type: object
      description: Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.
      properties:
        displayName:
          description: Display name of the GroupQuota entity.
          type: string
        additionalAttributes:
          description: Additional attributes to filter/restrict the subscriptions, which can be added to the subscriptionIds.
          $ref: '#/components/schemas/AdditionalAttributesPatch'
        provisioningState:
          description: Provisioning state of the operation.
          $ref: '#/components/schemas/RequestState'
          readOnly: true
    GroupQuotasEntityPatch:
      description: Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.
      properties:
        properties:
          title: Properties
          type: object
          $ref: '#/components/schemas/GroupQuotasEntityBasePatch'
      type: object
    GroupQuotasEntity:
      description: Properties and filters for ShareQuota. The request parameter is optional, if there are no filters specified.
      properties:
        properties:
          title: Properties
          type: object
          $ref: '#/components/schemas/GroupQuotasEntityBase'
      type: object
    BillingAccountId:
      type: object
      description: A Billing Account Id.
      properties:
        id:
          type: string
    EnvironmentType:
      type: string
      description: Environment name.
      enum:
        - NonProduction
        - Production
      x-ms-enum:
        name: EnvironmentType
        modelAsString: true
    Environment:
      $ref: '#/components/schemas/EnvironmentType'
      properties: {}
      type: object
    GroupingIdType:
      type: string
      description: GroupingId type. It is a required property. More types of groupIds can be supported in future.
      enum:
        - ServiceTreeId
        - BillingId
      x-ms-enum:
        name: GroupingIdType
        modelAsString: true
    GroupingId:
      description: 'The grouping Id for the group quota. It can be Billing Id or ServiceTreeId if applicable. '
      type: object
      properties:
        groupingIdType:
          $ref: '#/components/schemas/GroupingIdType'
        value:
          description: GroupId value based on the groupingType selected - Billing Id or ServiceTreeId.
          type: string
    AdditionalAttributes:
      description: Additional attribute or filter to allow subscriptions meeting the requirements to be part of the GroupQuota.
      type: object
      properties:
        groupId:
          $ref: '#/components/schemas/GroupingId'
        environment:
          $ref: '#/components/schemas/Environment'
      required:
        - groupId
    AdditionalAttributesPatch:
      description: Additional attribute or filter to allow subscriptions meeting the requirements to be part of the GroupQuota.
      type: object
      properties:
        groupId:
          $ref: '#/components/schemas/GroupingId'
        environment:
          $ref: '#/components/schemas/Environment'
    GroupQuotaList:
      type: object
      description: List of Group Quotas at MG level.
      properties:
        value:
          type: array
          description: List of Group Quotas at MG level.
          items:
            $ref: '#/components/schemas/GroupQuotasEntity'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    GroupQuotasEnforcementListResponse:
      type: object
      description: List of Azure regions, where the group quotas is enabled for enforcement.
      properties:
        value:
          type: array
          description: List of Azure Regions.
          items:
            $ref: '#/components/schemas/GroupQuotasEnforcementResponse'
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
          readOnly: true
    EnforcementState:
      description: Enforcement status.
      enum:
        - Enabled
        - Disabled
        - NotAvailable
      type: string
      x-ms-enum:
        name: EnforcementState
        modelAsString: true
    GroupQuotasEnforcementResponse:
      description: The GroupQuota Enforcement status for a Azure Location/Region.
      properties:
        properties:
          type: object
          properties:
            enforcementEnabled:
              $ref: '#/components/schemas/EnforcementState'
              description: Is the GroupQuota Enforcement enabled for the Azure region.
            provisioningState:
              $ref: '#/components/schemas/RequestState'
              readOnly: true
            faultCode:
              type: string
              description: Details of the failure.
              readOnly: true
      type: object
    OperationList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/OperationResponse'
          x-ms-identifiers:
            - name
        nextLink:
          type: string
          description: URL to get the next page of items.
    OperationResponse:
      type: object
      properties:
        name:
          type: string
        display:
          $ref: '#/components/schemas/OperationDisplay'
        origin:
          type: string
    OperationDisplay:
      type: object
      properties:
        provider:
          type: string
          description: Provider name.
        resource:
          type: string
          description: Resource name.
        operation:
          type: string
          description: Operation name.
        description:
          type: string
          description: Operation description.
    CommonResourceProperties:
      type: object
      description: Resource properties.
      properties:
        id:
          description: Resource ID
          type: string
          readOnly: true
        name:
          description: Resource name.
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
          description: 'Resource type. Example: "Microsoft.Quota/quotas"'
    CurrentUsagesBase:
      description: Resource usage.
      x-ms-azure-resource: true
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        type:
          description: The resource type.
          type: string
          readOnly: true
        name:
          description: The resource name.
          type: string
          readOnly: true
        properties:
          description: Usage properties for the specified resource.
          $ref: '#/components/schemas/UsagesProperties'
      type: object
    UsagesProperties:
      description: Usage properties for the specified resource.
      properties:
        usages:
          description: The quota limit properties for this resource.
          $ref: '#/components/schemas/UsagesObject'
        unit:
          description: ' The units for the quota usage, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.'
          type: string
          readOnly: true
        name:
          description: Resource name provided by the resource provider. Use this property name when requesting quota.
          $ref: '#/components/schemas/ResourceName'
        resourceType:
          description: The name of the resource type. Optional field.
          $ref: '#/components/schemas/ResourceTypesName'
        quotaPeriod:
          description: "The time period for the summary of the quota usage values. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because it is not relevant for all resources such as compute."
          type: string
          readOnly: true
        isQuotaApplicable:
          description: States if quota can be requested for this resource.
          type: boolean
          readOnly: true
        properties:
          description: Additional properties for the specific resource provider.
          type: object
      type: object
    UsagesLimits:
      type: object
      description: Quota limits.
      properties:
        value:
          description: List of quota limits.
          type: array
          items:
            $ref: '#/components/schemas/CurrentUsagesBase'
        nextLink:
          description: The URI used to fetch the next page of quota limits. When there are no more pages, this is null.
          type: string
    CurrentQuotaLimitBase:
      description: Quota limit.
      x-ms-azure-resource: true
      properties:
        id:
          description: The resource ID.
          type: string
          readOnly: true
        type:
          description: The resource type.
          type: string
          readOnly: true
        name:
          description: The resource name.
          type: string
          readOnly: true
        properties:
          description: Quota properties for the specified resource, based on the API called, Quotas or Usages.
          $ref: '#/components/schemas/QuotaProperties'
      type: object
    QuotaProperties:
      description: Quota properties for the specified resource.
      properties:
        limit:
          description: Resource quota limit properties.
          $ref: '#/components/schemas/LimitJsonObject'
        unit:
          description: ' The quota units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.'
          type: string
          readOnly: true
        name:
          description: Resource name provided by the resource provider. Use this property name when requesting quota.
          $ref: '#/components/schemas/ResourceName'
        resourceType:
          description: The name of the resource type. Optional field.
          $ref: '#/components/schemas/ResourceTypesName'
        quotaPeriod:
          description: "The time period over which the quota usage values are summarized. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because, for some resources like compute, the period is irrelevant."
          type: string
          readOnly: true
        isQuotaApplicable:
          description: States if quota can be requested for this resource.
          type: boolean
          readOnly: true
        properties:
          description: Additional properties for the specific resource provider.
          type: object
      type: object
    ResourceName:
      type: object
      description: Name of the resource provided by the resource Provider. When requesting quota, use this property name.
      properties:
        value:
          description: Resource name.
          type: string
          readOnly: false
        localizedValue:
          description: Resource display name.
          type: string
          readOnly: true
    QuotaLimits:
      type: object
      description: Quota limits.
      properties:
        value:
          description: List of quota limits.
          type: array
          items:
            $ref: '#/components/schemas/CurrentQuotaLimitBase'
        nextLink:
          description: The URI used to fetch the next page of quota limits. When there are no more pages, this string is null.
          type: string
    QuotaLimitsResponse:
      type: object
      description: Quota limits request response.
      properties:
        value:
          description: List of quota limits with the quota request status.
          type: array
          items:
            $ref: '#/components/schemas/CurrentQuotaLimitBase'
        nextLink:
          description: The URI used to fetch the next page of quota limits. When there are no more pages, this is null.
          type: string
    CreateGenericQuotaRequestParameters:
      type: object
      description: Quota change requests information.
      properties:
        value:
          description: Quota change requests.
          type: array
          items:
            $ref: '#/components/schemas/CurrentQuotaLimitBase'
    SubRequest:
      type: object
      description: Request property.
      properties:
        name:
          description: Resource name.
          $ref: '#/components/schemas/ResourceName'
        resourceType:
          description: Resource type for which the quota properties were requested.
          type: string
          readOnly: true
        unit:
          description: ' Quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.'
          type: string
        provisioningState:
          description: The quota request status.
          $ref: '#/components/schemas/QuotaRequestState'
        message:
          description: User-friendly status message.
          type: string
          readOnly: true
        subRequestId:
          description: Quota request ID.
          type: string
          readOnly: true
        limit:
          description: Resource quota limit properties.
          $ref: '#/components/schemas/LimitJsonObject'
    LimitObjectTypes:
      description: The limit object type.
      enum:
        - LimitValue
      type: string
      x-ms-enum:
        name: limitType
        modelAsString: true
    LimitTypes:
      description: The quota or usages limit types.
      enum:
        - Independent
        - Shared
      type: string
      x-ms-enum:
        name: quotaLimitTypes
        modelAsString: true
    LimitJsonObject:
      description: LimitJson abstract class.
      required:
        - limitObjectType
      type: object
      properties:
        limitObjectType:
          $ref: '#/components/schemas/LimitObjectTypes'
      discriminator:
        propertyName: limitObjectType
    UsagesTypes:
      description: The quota or usages limit types.
      enum:
        - Individual
        - Combined
      type: string
      x-ms-enum:
        name: usagesTypes
        modelAsString: true
    UsagesObject:
      description: The resource usages value.
      type: object
      properties:
        value:
          type: integer
          format: int32
          description: The usages value.
        usagesType:
          $ref: '#/components/schemas/UsagesTypes'
      required:
        - value
    LimitObject:
      description: The resource quota limit value.
      x-ms-discriminator-value: LimitValue
      required:
        - value
      properties:
        limitObjectType:
          $ref: '#/components/schemas/LimitObjectTypes'
        value:
          type: integer
          format: int32
          description: The quota/limit value
        limitType:
          $ref: '#/components/schemas/LimitTypes'
      type: object
    QuotaRequestOneResourceSubmitResponse:
      description: Quota request response.
      x-ms-azure-resource: true
      properties:
        id:
          description: Quota request ID.
          type: string
          readOnly: true
        name:
          description: The name of the quota request.
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
          description: Resource type. "Microsoft.Quota/ServiceLimitRequests"
        properties:
          description: Quota request details.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/quotaRequestOneResourceProperties'
      type: object
    QuotaRequestSubmitResponse:
      description: Quota request response.
      x-ms-azure-resource: true
      properties:
        id:
          description: Quota request ID.
          type: string
          readOnly: true
        name:
          description: Quota request name.
          type: string
          readOnly: true
        properties:
          description: Quota request details.
          type: object
          $ref: '#/components/schemas/QuotaRequestProperties'
        type:
          type: string
          readOnly: true
          description: Resource type. "Microsoft.Quota/quotas".
      type: object
    QuotaRequestSubmitResponse202:
      description: The quota request response with the quota request ID.
      properties:
        id:
          description: The quota request ID. To check the request status, use the **id** value in a [Quota Request Status](https://docs.microsoft.com/en-us/rest/api/reserved-vm-instances/quotarequeststatus/get) GET operation.
          type: string
          readOnly: true
        name:
          description: Operation ID.
          type: string
          readOnly: true
        type:
          description: Resource type.
          type: string
          readOnly: true
        properties:
          description: Quota request status.
          $ref: '#/components/schemas/QuotaRequestStatusDetails'
          x-ms-client-flatten: true
      type: object
    QuotaRequestStatusDetails:
      description: Quota request status details.
      properties:
        provisioningState:
          description: Quota request status.
          $ref: '#/components/schemas/QuotaRequestState'
          readOnly: true
        message:
          description: User-friendly message.
          type: string
          readOnly: true
        limit:
          description: Resource quota limit properties.
          $ref: '#/components/schemas/LimitObject'
        unit:
          description: ' The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.'
          type: string
          readOnly: false
        name:
          description: Resource name provided by the resource provider. Use this property name when requesting quota.
          $ref: '#/components/schemas/ResourceName'
        resourceType:
          description: The name of the resource type. Optional field.
          $ref: '#/components/schemas/ResourceTypesName'
        quotaPeriod:
          description: "The time period over which the quota usage values are summarized. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because, for some resources like compute, the period is irrelevant."
          type: string
          readOnly: true
        properties:
          description: Additional properties for the specific resource provider.
          type: object
      type: object
    QuotaRequestDetails:
      description: List of quota requests with details.
      properties:
        id:
          description: Quota request ID.
          type: string
          readOnly: true
        name:
          description: Quota request name.
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
          description: Resource type. "Microsoft.Quota/quotas".
        properties:
          description: Quota request details.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/QuotaRequestProperties'
      type: object
    QuotaRequestDetailsList:
      description: Quota request information.
      type: object
      properties:
        value:
          description: Quota request details.
          type: array
          items:
            $ref: '#/components/schemas/QuotaRequestDetails'
        nextLink:
          description: The URI for fetching the next page of quota limits. When there are no more pages, this string is null.
          type: string
    QuotaRequestProperties:
      type: object
      description: Quota request properties.
      properties:
        provisioningState:
          description: The quota request status.
          $ref: '#/components/schemas/QuotaRequestState'
        message:
          description: User-friendly status message.
          type: string
          readOnly: true
        error:
          description: Error details of the quota request.
          $ref: '#/components/schemas/ServiceErrorDetail'
        requestSubmitTime:
          description: 'The quota request submission time. The date conforms to the following format specified by the ISO 8601 standard: yyyy-MM-ddTHH:mm:ssZ'
          type: string
          readOnly: true
          format: date-time
        value:
          description: Quota request details.
          type: array
          items:
            $ref: '#/components/schemas/SubRequest'
          x-ms-identifiers:
            - subRequestId
    quotaRequestOneResourceProperties:
      description: Quota request.
      properties:
        provisioningState:
          description: Quota request status.
          readOnly: true
          $ref: '#/components/schemas/QuotaRequestState'
        message:
          description: User-friendly status message.
          type: string
          readOnly: true
        requestSubmitTime:
          description: 'Quota request submission time. The date conforms to the following ISO 8601 standard format: yyyy-MM-ddTHH:mm:ssZ.'
          type: string
          readOnly: true
          format: date-time
        limit:
          description: Resource quota limit properties.
          $ref: '#/components/schemas/LimitObject'
        currentValue:
          description: Usage information for the current resource.
          type: integer
          format: int32
          readOnly: true
        unit:
          description: ' The quota limit units, such as Count and Bytes. When requesting quota, use the **unit** value returned in the GET response in the request body of your PUT operation.'
          type: string
          readOnly: false
        name:
          description: Resource name provided by the resource provider. Use this property name when requesting quota.
          $ref: '#/components/schemas/ResourceName'
        resourceType:
          description: The name of the resource type. Optional field.
          $ref: '#/components/schemas/ResourceTypesName'
        quotaPeriod:
          description: "The time period over which the quota usage values are summarized. For example:\r\n*P1D (per one day)\n*PT1M (per one minute)\n*PT1S (per one second).\r\nThis parameter is optional because, for some resources like compute, the period is irrelevant."
          type: string
          readOnly: true
        isQuotaApplicable:
          description: States if quota can be requested for this resource.
          type: boolean
          readOnly: true
        error:
          description: Error details of the quota request.
          $ref: '#/components/schemas/ServiceErrorDetail'
        properties:
          description: Additional properties for the specific resource provider.
          type: object
      type: object
    QuotaRequestState:
      description: Quota request status.
      enum:
        - Accepted
        - Invalid
        - Succeeded
        - Failed
        - InProgress
      readOnly: true
      type: string
      x-ms-enum:
        name: QuotaRequestState
        modelAsString: true
    ResourceTypesName:
      description: Resource types. For extensibility, it is a string. Optional field.
      readOnly: false
      type: string
    ExceptionResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ServiceError'
          description: API error details.
      description: Error.
    ServiceError:
      description: API error details.
      type: object
      properties:
        code:
          type: string
          description: Error code.
        message:
          type: string
          description: Error message.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ServiceErrorDetail'
          x-ms-identifiers:
            - code
          description: List of error details.
          readOnly: true
    ServiceErrorDetail:
      description: Error details.
      type: object
      properties:
        code:
          type: string
          readOnly: true
          description: Error code.
        message:
          type: string
          readOnly: true
          description: Error message.
  x-stackQL-resources:
    group_quotas:
      id: azure.quota.group_quotas
      name: group_quotas
      title: group_quotas
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}?api-version=2023-06-01-preview/put'
            operationId: GroupQuotas_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotasEntity
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}?api-version=2023-06-01-preview/patch'
            operationId: GroupQuotas_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotasEntity
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotas_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotasEntity
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}?api-version=2023-06-01-preview/delete'
            operationId: GroupQuotas_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas?api-version=2023-06-01-preview/get'
            operationId: GroupQuotas_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quotas/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quotas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/group_quotas/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/group_quotas/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/group_quotas/methods/delete'
    group_quota_subscriptions:
      id: azure.quota.group_quota_subscriptions
      name: group_quota_subscriptions
      title: group_quota_subscriptions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1subscriptions~1{subscriptionId}?api-version=2023-06-01-preview/put'
            operationId: GroupQuotaSubscriptions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaSubscriptionId
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1subscriptions~1{subscriptionId}?api-version=2023-06-01-preview/patch'
            operationId: GroupQuotaSubscriptions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaSubscriptionId
        delete:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1subscriptions~1{subscriptionId}?api-version=2023-06-01-preview/delete'
            operationId: GroupQuotaSubscriptions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1subscriptions~1{subscriptionId}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaSubscriptionId
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1subscriptions?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaSubscriptionIdList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscriptions/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quota_subscriptions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscriptions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscriptions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscriptions/methods/delete'
    group_quota_subscription_requests:
      id: azure.quota.group_quota_subscription_requests
      name: group_quota_subscription_requests
      title: group_quota_subscription_requests
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1subscriptionRequests?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptionRequests_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaSubscriptionRequestStatusList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1subscriptionRequests~1{requestId}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptionRequests_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaSubscriptionRequestStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_requests/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_requests/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    group_quota_limits:
      id: azure.quota.group_quota_limits
      name: group_quota_limits
      title: group_quota_limits
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1groupQuotaLimits~1{resourceName}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaLimits_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaLimit
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1groupQuotaLimits?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaLimits_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotaLimitList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_limits/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quota_limits/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    group_quota_limits_requests:
      id: azure.quota.group_quota_limits_requests
      name: group_quota_limits_requests
      title: group_quota_limits_requests
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1groupQuotaRequests~1{resourceName}?api-version=2023-06-01-preview/put'
            operationId: GroupQuotaLimitsRequest_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubmittedResourceRequestStatus
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1groupQuotaRequests~1{resourceName}?api-version=2023-06-01-preview/patch'
            operationId: GroupQuotaLimitsRequest_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubmittedResourceRequestStatus
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1groupQuotaRequests~1{requestId}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaLimitsRequest_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubmittedResourceRequestStatus
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1groupQuotaRequests?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaLimitsRequest_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubmittedResourceRequestStatusList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_limits_requests/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quota_limits_requests/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/group_quota_limits_requests/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/group_quota_limits_requests/methods/update'
        replace: []
        delete: []
    group_quota_subscription_allocations:
      id: azure.quota.group_quota_subscription_allocations
      name: group_quota_subscription_allocations
      title: group_quota_subscription_allocations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1quotaAllocations?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptionAllocation_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionQuotaAllocationsList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1quotaAllocations~1{resourceName}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptionAllocation_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubscriptionQuotaAllocations
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_allocations/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_allocations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    group_quota_subscription_allocation_requests:
      id: azure.quota.group_quota_subscription_allocation_requests
      name: group_quota_subscription_allocation_requests
      title: group_quota_subscription_allocation_requests
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1quotaAllocationRequests~1{allocationId}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptionAllocationRequest_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaAllocationRequestStatus
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1quotaAllocationRequests?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaSubscriptionAllocationRequest_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaAllocationRequestStatusList
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1quotaAllocationRequests~1{resourceName}?api-version=2023-06-01-preview/put'
            operationId: GroupQuotaSubscriptionAllocationRequest_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaAllocationRequestStatus
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1quotaAllocationRequests~1{resourceName}?api-version=2023-06-01-preview/patch'
            operationId: GroupQuotaSubscriptionAllocationRequest_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaAllocationRequestStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_allocation_requests/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_allocation_requests/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_allocation_requests/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/group_quota_subscription_allocation_requests/methods/update'
        replace: []
        delete: []
    group_quota_usages:
      id: azure.quota.group_quota_usages
      name: group_quota_usages
      title: group_quota_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1locationUsages~1{location}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaUsages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ResourceUsageList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    group_quota_location_settings:
      id: azure.quota.group_quota_location_settings
      name: group_quota_location_settings
      title: group_quota_location_settings
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1locationSettings~1{location}?api-version=2023-06-01-preview/put'
            operationId: GroupQuotaLocationSettings_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotasEnforcementResponse
        update:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1locationSettings~1{location}?api-version=2023-06-01-preview/patch'
            operationId: GroupQuotaLocationSettings_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotasEnforcementResponse
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1locationSettings~1{location}?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaLocationSettings_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotasEnforcementResponse
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Management~1managementGroups~1{managementGroupId}~1providers~1Microsoft.Quota~1groupQuotas~1{groupQuotaName}~1resourceProviders~1{resourceProviderName}~1locationSettings?api-version=2023-06-01-preview/get'
            operationId: GroupQuotaLocationSettings_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GroupQuotasEnforcementListResponse
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/group_quota_location_settings/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_quota_location_settings/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/group_quota_location_settings/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/group_quota_location_settings/methods/update'
        replace: []
        delete: []
    usages:
      id: azure.quota.usages
      name: usages
      title: usages
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1usages~1{resourceName}?api-version=2023-06-01-preview/get'
            operationId: Usages_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CurrentUsagesBase
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1usages?api-version=2023-06-01-preview/get'
            operationId: Usages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesLimits
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usages/methods/get'
          - $ref: '#/components/x-stackQL-resources/usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    quotas:
      id: azure.quota.quotas
      name: quotas
      title: quotas
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1quotas~1{resourceName}?api-version=2023-06-01-preview/get'
            operationId: Quota_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CurrentQuotaLimitBase
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1quotas~1{resourceName}?api-version=2023-06-01-preview/put'
            operationId: Quota_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CurrentQuotaLimitBase
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1quotas~1{resourceName}?api-version=2023-06-01-preview/patch'
            operationId: Quota_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CurrentQuotaLimitBase
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1quotas?api-version=2023-06-01-preview/get'
            operationId: Quota_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaLimits
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/get'
          - $ref: '#/components/x-stackQL-resources/quotas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/quotas/methods/update'
        replace: []
        delete: []
    request_status:
      id: azure.quota.request_status
      name: request_status
      title: request_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1quotaRequests~1{id}?api-version=2023-06-01-preview/get'
            operationId: QuotaRequestStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaRequestDetails
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Quota~1quotaRequests?api-version=2023-06-01-preview/get'
            operationId: QuotaRequestStatus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: QuotaRequestDetailsList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/request_status/methods/get'
          - $ref: '#/components/x-stackQL-resources/request_status/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.quota.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Quota~1operations?api-version=2023-06-01-preview/get'
            operationId: QuotaOperation_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_group_quotas:
      id: azure.quota.vw_group_quotas
      name: vw_group_quotas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.displayName') as "display_name",
              JSON_EXTRACT(properties, '$.additionalAttributes') as "additional_attributes",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              managementGroupId,
              groupQuotaName
              FROM azure.quota.group_quotas
              WHERE managementGroupId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.displayName') as "display_name",
                json_extract_path_text(properties, '$.additionalAttributes') as "additional_attributes",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                managementGroupId,
                groupQuotaName
                FROM azure.quota.group_quotas
                WHERE managementGroupId = 'replace-me';
    vw_group_quota_limits:
      id: azure.quota.vw_group_quota_limits
      name: vw_group_quota_limits
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.region') as "region",
              JSON_EXTRACT(properties, '$.limit') as "limit",
              JSON_EXTRACT(properties, '$.comment') as "comment",
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.unit') as "unit",
              JSON_EXTRACT(properties, '$.availableLimit') as "available_limit",
              JSON_EXTRACT(properties, '$.allocatedToSubscriptions') as "allocated_to_subscriptions",
              managementGroupId,
              groupQuotaName,
              resourceProviderName,
              resourceName,
              $filter
              FROM azure.quota.group_quota_limits
              WHERE managementGroupId = 'replace-me' AND groupQuotaName = 'replace-me' AND resourceProviderName = 'replace-me' AND $filter = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.region') as "region",
                json_extract_path_text(properties, '$.limit') as "limit",
                json_extract_path_text(properties, '$.comment') as "comment",
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.unit') as "unit",
                json_extract_path_text(properties, '$.availableLimit') as "available_limit",
                json_extract_path_text(properties, '$.allocatedToSubscriptions') as "allocated_to_subscriptions",
                managementGroupId,
                groupQuotaName,
                resourceProviderName,
                resourceName,
                $filter
                FROM azure.quota.group_quota_limits
                WHERE managementGroupId = 'replace-me' AND groupQuotaName = 'replace-me' AND resourceProviderName = 'replace-me' AND $filter = 'replace-me';
    vw_group_quota_subscription_allocations:
      id: azure.quota.vw_group_quota_subscription_allocations
      name: vw_group_quota_subscription_allocations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.region') as "region",
              JSON_EXTRACT(properties, '$.limit') as "limit",
              JSON_EXTRACT(properties, '$.shareableQuota') as "shareable_quota",
              JSON_EXTRACT(properties, '$.name') as "name",
              managementGroupId,
              subscriptionId,
              groupQuotaName,
              resourceName,
              $filter
              FROM azure.quota.group_quota_subscription_allocations
              WHERE managementGroupId = 'replace-me' AND subscriptionId = 'replace-me' AND groupQuotaName = 'replace-me' AND $filter = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.region') as "region",
                json_extract_path_text(properties, '$.limit') as "limit",
                json_extract_path_text(properties, '$.shareableQuota') as "shareable_quota",
                json_extract_path_text(properties, '$.name') as "name",
                managementGroupId,
                subscriptionId,
                groupQuotaName,
                resourceName,
                $filter
                FROM azure.quota.group_quota_subscription_allocations
                WHERE managementGroupId = 'replace-me' AND subscriptionId = 'replace-me' AND groupQuotaName = 'replace-me' AND $filter = 'replace-me';
    vw_usages:
      id: azure.quota.vw_usages
      name: vw_usages
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.usages') as "usages",
              JSON_EXTRACT(properties, '$.unit') as "unit",
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.resourceType') as "resource_type",
              JSON_EXTRACT(properties, '$.quotaPeriod') as "quota_period",
              JSON_EXTRACT(properties, '$.isQuotaApplicable') as "is_quota_applicable",
              JSON_EXTRACT(properties, '$.properties') as "properties",
              scope,
              resourceName
              FROM azure.quota.usages
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.usages') as "usages",
                json_extract_path_text(properties, '$.unit') as "unit",
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.resourceType') as "resource_type",
                json_extract_path_text(properties, '$.quotaPeriod') as "quota_period",
                json_extract_path_text(properties, '$.isQuotaApplicable') as "is_quota_applicable",
                json_extract_path_text(properties, '$.properties') as "properties",
                scope,
                resourceName
                FROM azure.quota.usages
                WHERE scope = 'replace-me';
    vw_quotas:
      id: azure.quota.vw_quotas
      name: vw_quotas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.limit') as "limit",
              JSON_EXTRACT(properties, '$.unit') as "unit",
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.resourceType') as "resource_type",
              JSON_EXTRACT(properties, '$.quotaPeriod') as "quota_period",
              JSON_EXTRACT(properties, '$.isQuotaApplicable') as "is_quota_applicable",
              JSON_EXTRACT(properties, '$.properties') as "properties",
              scope,
              resourceName
              FROM azure.quota.quotas
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.limit') as "limit",
                json_extract_path_text(properties, '$.unit') as "unit",
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.resourceType') as "resource_type",
                json_extract_path_text(properties, '$.quotaPeriod') as "quota_period",
                json_extract_path_text(properties, '$.isQuotaApplicable') as "is_quota_applicable",
                json_extract_path_text(properties, '$.properties') as "properties",
                scope,
                resourceName
                FROM azure.quota.quotas
                WHERE scope = 'replace-me';
    vw_request_status:
      id: azure.quota.vw_request_status
      name: vw_request_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.message') as "message",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.requestSubmitTime') as "request_submit_time",
              JSON_EXTRACT(properties, '$.value') as "value",
              scope,
              id
              FROM azure.quota.request_status
              WHERE scope = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.message') as "message",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.requestSubmitTime') as "request_submit_time",
                json_extract_path_text(properties, '$.value') as "value",
                scope,
                id
                FROM azure.quota.request_status
                WHERE scope = 'replace-me';
paths:
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}?api-version=2023-06-01-preview:
    put:
      tags:
        - GroupQuotas
      summary: Creates a new GroupQuota for the name passed.
      description: Creates a new GroupQuota for the name passed. A RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked.
      operationId: GroupQuotas_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
      requestBody:
        description: The GroupQuota body details for creation or update of a GroupQuota entity.
        x-ms-requestBody-name: GroupQuotaPutRequestBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupQuotasEntity'
      responses:
        '200':
          description: OK, Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotasEntity'
        '201':
          description: Request Accepted, Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LROResponse'
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - GroupQuotas
      summary: Updates a new GroupQuotas for the name passed.
      description: |-
        Updates the GroupQuotas for the name passed. A GroupQuotas RequestId will be returned by the Service. The status can be polled periodically. The status Async polling is using standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations. Use the OperationsStatus URI provided in Azure-AsyncOperation header, the duration will be specified in retry-after header. Once the operation gets to terminal state - Succeeded | Failed, then the URI will change to Get URI and full details can be checked. 
         Any change in the filters will be applicable to the future quota assignments, existing quota allocated to subscriptions from the GroupQuotas remains unchanged.
      operationId: GroupQuotas_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
      requestBody:
        description: The  GroupQuotas Patch Request.
        x-ms-requestBody-name: ' GroupQuotasPatchRequestBody'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupQuotasEntityPatch'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotasEntity'
        '202':
          description: Request Accepted
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GroupQuotas
      summary: Gets GroupQuotas for the name passed.
      description: Gets the GroupQuotas for the name passed. It will return the GroupQuotas properties only. The details on group quota can be access from the group quota APIs.
      operationId: GroupQuotas_Get
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotasEntity'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GroupQuotas
      summary: Deletes GroupQuotas for the name passed.
      description: Deletes the GroupQuotas for the name passed. All the remaining shareQuota in the GroupQuotas will be lost.
      operationId: GroupQuotas_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
      responses:
        '202':
          description: Request Accepted
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        '204':
          description: No Content.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - GroupQuotas
      summary: Lists GroupQuotas for the scope passed.
      description: Lists GroupQuotas for the scope passed. It will return the GroupQuotas QuotaEntity properties only.The details on group quota can be access from the group quota APIs.
      operationId: GroupQuotas_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptions/{subscriptionId}?api-version=2023-06-01-preview:
    put:
      tags:
        - GroupQuotasSubscriptions
      summary: Adds subscription to the GroupQuotas.
      description: Adds a subscription to GroupQuotas. The subscriptions will be validated based on the additionalAttributes defined in the GroupQuota. The additionalAttributes works as filter for the subscriptions, which can be included in the GroupQuotas. The request's TenantId is validated against the subscription's TenantId.
      operationId: GroupQuotaSubscriptions_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK, Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaSubscriptionId'
        '201':
          description: Request Accepted, Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LROResponse'
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - GroupQuotasSubscriptions
      summary: Updates the GroupQuotas with the subscription to add to the subscriptions list.
      description: Updates the GroupQuotas with the subscription to add to the subscriptions list. The subscriptions will be validated if additionalAttributes are defined in the GroupQuota. The request's TenantId is validated against the subscription's TenantId.
      operationId: GroupQuotaSubscriptions_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaSubscriptionId'
        '202':
          description: Request Accepted
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - GroupQuotasSubscriptions
      summary: Removes the subscription from GroupQuotas.
      description: Removes the subscription from GroupQuotas. The request's TenantId is validated against the subscription's TenantId.
      operationId: GroupQuotaSubscriptions_Delete
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Request Accepted
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        '204':
          description: No Content.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GroupQuotasSubscriptions
      summary: Returns the subscriptionId along with its provisioning state for being associated with the GroupQuotas.
      description: Returns the subscriptionIds along with its provisioning state for being associated with the GroupQuota. If the subscription is not a member of GroupQuota, it will return 404, else 200.
      operationId: GroupQuotaSubscriptions_Get
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaSubscriptionId'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptions?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - GroupQuotasSubscriptions
      summary: Returns a list of the subscriptionIds for the GroupQuotas.
      description: Returns a list of the subscriptionIds associated with the GroupQuotas.
      operationId: GroupQuotaSubscriptions_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaSubscriptionIdList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptionRequests?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - GroupQuotaSubscriptionRequests
      summary: List the status of all requests to add subscriptionIds to the GroupQuotasEntity.
      description: List API to check the status of a subscriptionId requests by requestId. Request history is maintained for 1 year.
      operationId: GroupQuotaSubscriptionRequests_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
      responses:
        '200':
          description: Success, with the details of the subscriptionId request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaSubscriptionRequestStatusList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/subscriptionRequests/{requestId}?api-version=2023-06-01-preview:
    get:
      tags:
        - GroupQuotaSubscriptionRequests
      summary: Get the status of a single subscriptionId request by requestId. The Async pattern will be used, if we determine the request is taking longer, else it can return 200 response as response to the subscription add API call.
      description: Get API to check the status of a subscriptionIds request by requestId.  Use the polling API - OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after duration in seconds to check the intermediate status. This API provides the finals status with the request details and status.
      operationId: GroupQuotaSubscriptionRequests_Get
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          description: Success, with the details of the subscriptionId request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaSubscriptionRequestStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/groupQuotaLimits/{resourceName}?api-version=2023-06-01-preview:
    get:
      tags:
        - GroupQuotaLimits
      summary: Gets the GroupQuotaLimits for the specific resource.
      description: |-
        Gets the GroupQuotaLimits for the specific resource for a specific resource based on the resourceProviders, resourceName and $filter passed.
        The $filter=location eq {location} is required to location specific resources groupQuota.
      operationId: GroupQuotaLimits_Get
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/ResourceName'
        - $ref: '#/components/parameters/FilterLocationInQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaLimit'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/groupQuotaLimits?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - GroupQuotaLimits
      summary: Gets the GroupQuotaLimits for all the resources for the specified location in $filter=location eq {location}.
      description: |-
        Gets the GroupQuotaLimits for the all resource for a specific  resourceProvider and $filter passed.
        The $filter=location eq {location} is required to location specific resources groupQuota.
      operationId: GroupQuotaLimits_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/FilterLocationInQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotaLimitList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/groupQuotaRequests/{resourceName}?api-version=2023-06-01-preview:
    put:
      tags:
        - GroupQuotaLimitRequest
      summary: Put the GroupQuota requests for a specific ResourceProvider/Location/Resource.
      description: |-
        Put the GroupQuota requests for a specific ResourceProvider/Location/Resource. the location and resourceName ("name": {"value" : "resourceName") properties are specified in the request body. Only 1 resource quota can be requested.
        Use the polling API - OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after duration in seconds to check the intermediate status. This API provides the finals status with the request details and status.
      operationId: GroupQuotaLimitsRequest_CreateOrUpdate
      x-ms-azure-resource: true
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/ResourceName'
      requestBody:
        description: The GroupQuotaRequest body details for specific resourceProvider/location/resources.
        x-ms-requestBody-name: groupQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmittedResourceRequestStatus'
      responses:
        '200':
          description: Success, with the details of the group quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedResourceRequestStatus'
        '201':
          description: Request Accepted, Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LROResponse'
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - GroupQuotaLimitRequest
      summary: Create the GroupQuota requests for a specific ResourceProvider/Location/Resource.
      description: |-
        Create the GroupQuota requests for a specific ResourceProvider/Location/Resource. the location and resourceName properties are specified in the request body. Only 1 resource quota can be requested. Please note that patch request creates a new groupQuota request.
        Use the polling API - OperationsStatus URI specified in Azure-AsyncOperation header field, with retry-after duration in seconds to check the intermediate status. This API provides the finals status with the request details and status.
      operationId: GroupQuotaLimitsRequest_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/ResourceName'
      requestBody:
        description: The GroupQuotaRequest body details for specific resourceProvider/location/resources.
        x-ms-requestBody-name: groupQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmittedResourceRequestStatus'
      responses:
        '200':
          description: Success, with the details of the group quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedResourceRequestStatus'
        '202':
          description: Request Accepted, Create or Update
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/groupQuotaRequests/{requestId}?api-version=2023-06-01-preview:
    get:
      tags:
        - GroupQuotaLimitRequest
      summary: Get the status of a single GroupQuota request by requestId.
      description: Get API to check the status of a GroupQuota request by requestId.
      operationId: GroupQuotaLimitsRequest_Get
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          description: Success, with the details of the group quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedResourceRequestStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/groupQuotaRequests?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - GroupQuotaLimitRequest
      summary: Get the status of a single GroupQuota request by requestId.
      description: Get API to check the status of a GroupQuota request by requestId.
      operationId: GroupQuotaLimitsRequest_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/FilterResourceAndLocationInQuery'
      responses:
        '200':
          description: Success, with the details of the group quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedResourceRequestStatusList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/quotaAllocations?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - SubscriptionQuotaAllocation
      summary: Gets all the quota allocated to a subscription for the specific Resource Provider, Location.
      description: 'Gets all the quota allocated to a subscription for the specific Resource Provider, Location. This will include the GroupQuota and total quota allocated to the subscription. Only the Group quota allocated to the subscription can be allocated back to the MG Group Quota. Use the $filter parameter to filter out the specific resource based on the ResourceProvider/Location. $filter is a required parameter. '
      operationId: GroupQuotaSubscriptionAllocation_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/FilterLocationInQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionQuotaAllocationsList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/quotaAllocations/{resourceName}?api-version=2023-06-01-preview:
    get:
      tags:
        - SubscriptionQuotaAllocation
      summary: Gets Quota allocated to a subscription for the specific Resource Provider, Location, ResourceName.
      description: Gets Quota allocated to a subscription for the specific Resource Provider, Location, ResourceName. This will include the GroupQuota and total quota allocated to the subscription. Only the Group quota allocated to the subscription can be allocated back to the MG Group Quota.
      operationId: GroupQuotaSubscriptionAllocation_Get
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceName'
        - $ref: '#/components/parameters/FilterLocationInQuery'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionQuotaAllocations'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/quotaAllocationRequests/{allocationId}?api-version=2023-06-01-preview:
    get:
      tags:
        - SubscriptionQuotaAllocationRequest
      operationId: GroupQuotaSubscriptionAllocationRequest_Get
      summary: Get the status of the quota allocation request for the subscriptionId.
      description: Get the quota allocation request status for the subscriptionId by allocationId.
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/AllocationId'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaAllocationRequestStatus'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocationRequests?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - SubscriptionQuotaAllocationRequest
      summary: Get all the quotaAllocationRequests for a resourceProvider/location.
      description: Get all the quotaAllocationRequests for a resourceProvider/location. The filter paramter for location is required.
      operationId: GroupQuotaSubscriptionAllocationRequest_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/FilterLocationInQuery'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaAllocationRequestStatusList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/subscriptions/{subscriptionId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/quotaAllocationRequests/{resourceName}?api-version=2023-06-01-preview:
    put:
      tags:
        - SubscriptionQuotaAllocationRequest
      summary: Request to assign quota from group quota to a specific Subscription. This request will use Asynchronous pattern to check the status using Async polling as standards defined at - https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/async-api-reference.md#asynchronous-operations.
      description: Request to assign quota from group quota to a specific Subscription. The assign GroupQuota to subscriptions or reduce the quota allocated to subscription to give back the unused quota ( quota >= usages) to the groupQuota. So, this API can be used to assign Quota to subscriptions and assign back unused quota to group quota, which can be assigned to another subscriptions in the GroupQuota.
      operationId: GroupQuotaSubscriptionAllocationRequest_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/ResourceName'
      requestBody:
        description: Quota requests payload.
        required: true
        x-ms-requestBody-name: allocateQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaAllocationRequestStatus'
      responses:
        '200':
          description: OK. , Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaAllocationRequestStatus'
        '201':
          description: Request Created. Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LROResponse'
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - SubscriptionQuotaAllocationRequest
      summary: Request to assign quota from group quota to a specific Subscription. This request will use Asynchronous pattern with 202 response and status polling API.
      description: Request to assign quota from group quota to a specific Subscription. The assign GroupQuota to subscriptions or reduce the quota allocated to subscription to give back the unused quota ( quota >= usages) to the groupQuota. So, this API can be used to assign Quota to subscriptions and assign back unused quota to group quota, which can be assigned to another subscriptions in the GroupQuota. User can collect unused quotas from multiple subscriptions within the groupQuota and assign the groupQuota to the subscription, where it's needed.
      operationId: GroupQuotaSubscriptionAllocationRequest_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/ResourceName'
      requestBody:
        description: Quota requests payload.
        required: true
        x-ms-requestBody-name: allocateQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuotaAllocationRequestStatus'
      responses:
        '200':
          description: Request status details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaAllocationRequestStatus'
        '202':
          description: Request Accepted
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/locationUsages/{location}?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - GroupQuotaUsages
      summary: Gets the GroupQuotas usages and limits(quota) for the resourceProvider/location.
      description: Gets the GroupQuotas usages and limits(quota). Location is required paramter.
      operationId: GroupQuotaUsages_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUsageList'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/locationSettings/{location}?api-version=2023-06-01-preview:
    put:
      tags:
        - GroupQuotaLocationSettings
      summary: Enables the GroupQuotas enforcement settings for the resource provider and the location specified.
      description: |-
        Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The subscriptions cannot request quota at subscription level.
        The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then submit a groupQuotaLimit request for the specific resource - provider/location/resource.
        Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota Enforcement -
         1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example - GroupQuotaSubscriptions_Delete).
         2. Ten delete the GroupQuota (Check the example - GroupQuotas_Delete).
      operationId: GroupQuotaLocationSettings_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The GroupQuota body details for creation or update of a GroupQuota entity.
        x-ms-requestBody-name: LocationSettings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupQuotasEnforcementResponse'
      responses:
        '200':
          description: OK, Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotasEnforcementResponse'
        '201':
          description: Request Accepted, Create or Update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LROResponse'
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers.  New guidelines - https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#131-resource-based-long-running-operations-relo
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - GroupQuotaLocationSettings
      summary: Enables the GroupQuotas enforcement settings for the resource provider and the location specified.
      description: |-
        Enables the GroupQuotas enforcement for the resource provider and the location specified. The resource provider will start using the group quotas as the overall quota for the subscriptions included in the GroupQuota. The subscriptions cannot request quota at subscription level.
        The subscriptions share the GroupQuotaLimits assigned to the GroupQuota. If the GroupQuotaLimits is used, then submit a groupQuotaLimit request for the specific resource - provider/location/resource.
        Once the GroupQuota Enforcement is enabled then, it cannot be deleted or reverted back. To disable GroupQuota Enforcement -
         1. Remove all the subscriptions from the groupQuota using the delete API for Subscriptions (Check the example - GroupQuotaSubscriptions_Delete).
         2. Ten delete the GroupQuota (Check the example - GroupQuotas_Delete).
      operationId: GroupQuotaLocationSettings_Update
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/LocationParameter'
      requestBody:
        description: The GroupQuota body details for creation or update of a GroupQuota entity.
        x-ms-requestBody-name: LocationSettings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupQuotasEnforcementResponse'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotasEnforcementResponse'
        '202':
          description: Request Accepted
          headers:
            Retry-After:
              schema:
                format: int64
                type: integer
              description: The recommended number of seconds to wait before calling the URI specified in Azure-AsyncOperation.
            Location:
              schema:
                type: string
              description: |-
                URL for determining when an operation has completed. Send a GET request to the URL in Location header.
                The URI should return a 202 until the operation reaches a terminal state and 200 once it reaches a terminal state.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#202-accepted-and-location-headers
            Azure-AsyncOperation:
              schema:
                type: string
              description: |-
                URL for checking the ongoing status of the operation.
                To get the status of the asynchronous operation, send a GET request to the URL in Azure-AsyncOperation header value.

                For more info: https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
        default:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - GroupQuotaLocationSettings
      summary: Gets the GroupQuotas enforcement settings for the resource provider/location.
      description: Gets the GroupQuotas enforcement settings for the ResourceProvider/location. The locations, where GroupQuota enforcement is not enabled will return Not Found.
      operationId: GroupQuotaLocationSettings_Get
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
        - $ref: '#/components/parameters/LocationParameter'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotasEnforcementResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Quota/groupQuotas/{groupQuotaName}/resourceProviders/{resourceProviderName}/locationSettings?api-version=2023-06-01-preview:
    get:
      x-ms-pageable:
        nextLinkName: nextLink
      tags:
        - GroupQuotaLocationSettings
      summary: Returns a list of the Azure regions settings, where the GroupQuotas enforcement is enabled.
      description: Returns only the list of the Azure regions settings, where the GroupQuotas enforcement is enabled. The locations not included in GroupQuota Enforcement will not be listed, the regions in failed status with listed as status Failed.
      operationId: GroupQuotaLocationSettings_List
      parameters:
        - $ref: '#/components/parameters/ManagementGroupId'
        - $ref: '#/components/parameters/GroupQuotaName'
        - $ref: '#/components/parameters/ResourceProviderName'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupQuotasEnforcementListResponse'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Quota/usages/{resourceName}?api-version=2023-06-01-preview:
    get:
      tags:
        - UsagesInformation
      description: Get the current usage of a resource.
      operationId: Usages_Get
      parameters:
        - $ref: '#/components/parameters/ResourceNameInParameters'
        - $ref: '#/components/parameters/ScopeInPath'
      responses:
        '200':
          description: OK. The usage information will be returned in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUsagesBase'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
  /{scope}/providers/Microsoft.Quota/usages?api-version=2023-06-01-preview:
    get:
      tags:
        - UsagesInformation
      description: Get a list of current usage for all resources for the scope specified.
      operationId: Usages_List
      parameters:
        - $ref: '#/components/parameters/ScopeInPath'
      responses:
        '200':
          description: OK. Usage information will be returned in the response with pagination.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesLimits'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. It should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Quota/quotas/{resourceName}?api-version=2023-06-01-preview:
    get:
      tags:
        - QuotaInformation
      description: Get the quota limit of a resource. The response can be used to determine the remaining quota to calculate a new quota limit that can be submitted with a PUT request.
      operationId: Quota_Get
      parameters:
        - $ref: '#/components/parameters/ResourceNameInParameters'
        - $ref: '#/components/parameters/ScopeInPath'
      responses:
        '200':
          description: OK. The quota information will be returned in the response with pagination.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentQuotaLimitBase'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
    put:
      tags:
        - QuotaInformation
      description: |-
        Create or update the quota limit for the specified resource with the requested value. To update the quota, follow these steps:
        1. Use the GET operation for quotas and usages to determine how much quota remains for the specific resource and to calculate the new quota limit. These steps are detailed in [this example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).
        2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request.
      operationId: Quota_CreateOrUpdate
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      parameters:
        - $ref: '#/components/parameters/ResourceNameInParameters'
        - $ref: '#/components/parameters/ScopeInPath'
      requestBody:
        description: Quota request payload.
        required: true
        x-ms-requestBody-name: createQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentQuotaLimitBase'
      responses:
        '200':
          description: OK. Returns the quota request details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentQuotaLimitBase'
        '202':
          description: The request is accepted and is being processed. To check the status for this request, use the value for the quota request ID **id** obtained in the response of a [Quota Request Status](https://docs.microsoft.com/en-us/rest/api/reserved-vm-instances/quotarequeststatus/get) GET operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
    patch:
      tags:
        - QuotaInformation
      description: |-
        Update the quota limit for a specific resource to the specified value:
        1. Use the Usages-GET and Quota-GET operations to determine the remaining quota for the specific resource and to calculate the new quota limit. These steps are detailed in [this example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).
        2. Use this PUT operation to update the quota limit. Please check the URI in location header for the detailed status of the request.
      operationId: Quota_Update
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: original-uri
      parameters:
        - $ref: '#/components/parameters/ResourceNameInParameters'
        - $ref: '#/components/parameters/ScopeInPath'
      requestBody:
        description: Quota requests payload.
        required: true
        x-ms-requestBody-name: createQuotaRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentQuotaLimitBase'
      responses:
        '200':
          description: OK. Returns the quota request details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentQuotaLimitBase'
        '202':
          description: The request is accepted and is being processed. To check the status for this request, use the value for the quota request ID **id** in a [Quota Request Status](https://docs.microsoft.com/en-us/rest/api/reserved-vm-instances/quotarequeststatus/get) GET operation.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
  /{scope}/providers/Microsoft.Quota/quotas?api-version=2023-06-01-preview:
    get:
      tags:
        - QuotaInformation
      description: Get a list of current quota limits of all resources for the specified scope. The response from this GET operation can be leveraged to submit requests to update a quota.
      operationId: Quota_List
      parameters:
        - $ref: '#/components/parameters/ScopeInPath'
      responses:
        '200':
          description: OK. Quota information will be returned in the response with pagination.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaLimits'
          headers:
            ETag:
              schema:
                type: string
              description: Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Quota/quotaRequests/{id}?api-version=2023-06-01-preview:
    get:
      tags:
        - QuotaRequests
      description: Get the quota request details and status by quota request ID for the resources of the resource provider at a specific location. The quota request ID **id** is returned in the response of the PUT operation.
      operationId: QuotaRequestStatus_Get
      parameters:
        - $ref: '#/components/parameters/RequestIdInParameters'
        - $ref: '#/components/parameters/ScopeInPath'
      responses:
        '200':
          description: OK. Returning the status for the quota request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaRequestDetails'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
  /{scope}/providers/Microsoft.Quota/quotaRequests?api-version=2023-06-01-preview:
    get:
      tags:
        - QuotaRequests
      description: For the specified scope, get the current quota requests for a one year period ending at the time is made. Use the **oData** filter to select quota requests.
      operationId: QuotaRequestStatus_List
      parameters:
        - $ref: '#/components/parameters/ScopeInPath'
        - name: $filter
          in: query
          description: "| Field                    | Supported operators  \n|---------------------|------------------------\n\r\n|requestSubmitTime | ge, le, eq, gt, lt\n |provisioningState eq {QuotaRequestState}\n |resourceName eq {resourceName}\n"
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/TopQueryParameter'
        - $ref: '#/components/parameters/SkipTokenParameter'
      responses:
        '200':
          description: OK. Sending quota request status and details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaRequestDetailsList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Quota/operations?api-version=2023-06-01-preview:
    get:
      summary: GET quota operations.
      description: List all the operations supported by the Microsoft.Quota resource provider.
      operationId: QuotaOperation_List
      x-ms-pageable:
        nextLinkName: nextLink
      parameters: []
      tags:
        - Operations
      responses:
        '200':
          description: List all the operations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
