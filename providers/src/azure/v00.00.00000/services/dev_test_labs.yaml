openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure DevTest Labs
  description: Azure DevTest Labs is a service that helps developers and testers quickly create environments in Azure while minimizing waste and controlling cost. You can test the latest version of your application by quickly provisioning Windows and Linux environments using reusable templates and artifacts. Easily integrate your deployment pipeline with DevTest Labs to provision on-demand environments. Scale up your load testing by provisioning multiple test agents, and create pre-provisioned environments for training and demos.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    api-version:
      name: api-version
      in: query
      description: Client API version.
      required: true
      schema:
        default: '2018-09-15'
        type: string
    locationName:
      name: locationName
      in: path
      description: The name of the location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupName:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The subscription ID.
      required: true
      schema:
        type: string
  schemas:
    ApplicableSchedule:
      description: Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ApplicableScheduleProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ApplicableScheduleFragment:
      description: Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    ApplicableScheduleProperties:
      description: Properties of a schedules applicable to a virtual machine.
      type: object
      properties:
        labVmsShutdown:
          $ref: '#/components/schemas/Schedule'
          description: The auto-shutdown schedule, if one has been set at the lab or lab resource level.
        labVmsStartup:
          $ref: '#/components/schemas/Schedule'
          description: The auto-startup schedule, if one has been set at the lab or lab resource level.
    ApplicableSchedulePropertiesFragment:
      description: Properties of a schedules applicable to a virtual machine.
      type: object
      properties: {}
    ApplyArtifactsRequest:
      description: Request body for applying artifacts to a virtual machine.
      type: object
      properties:
        artifacts:
          description: The list of artifacts to apply.
          type: array
          items:
            $ref: '#/components/schemas/ArtifactInstallProperties'
    ArmTemplate:
      description: An Azure Resource Manager template.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ArmTemplateProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ArmTemplateInfo:
      description: Information about a generated ARM template.
      type: object
      properties:
        template:
          description: The template's contents.
          type: object
        parameters:
          description: The parameters of the ARM template.
          type: object
    ArmTemplateList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/ArmTemplate'
        nextLink:
          description: Link for next set of results.
          type: string
    ArmTemplateParameterProperties:
      description: Properties of an Azure Resource Manager template parameter.
      type: object
      properties:
        name:
          description: The name of the template parameter.
          type: string
        value:
          description: The value of the template parameter.
          type: string
    ArmTemplateParameterPropertiesFragment:
      description: Properties of an Azure Resource Manager template parameter.
      type: object
      properties: {}
    ArmTemplateProperties:
      description: Properties of an Azure Resource Manager template.
      type: object
      properties:
        displayName:
          description: The display name of the ARM template.
          type: string
          readOnly: true
        description:
          description: The description of the ARM template.
          type: string
          readOnly: true
        publisher:
          description: The publisher of the ARM template.
          type: string
          readOnly: true
        icon:
          description: The URI to the icon of the ARM template.
          type: string
          readOnly: true
        contents:
          description: The contents of the ARM template.
          type: object
          readOnly: true
        createdDate:
          format: date-time
          description: The creation date of the armTemplate.
          type: string
          readOnly: true
        parametersValueFilesInfo:
          description: File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.
          type: array
          items:
            $ref: '#/components/schemas/ParametersValueFileInfo'
          readOnly: true
        enabled:
          description: Whether or not ARM template is enabled for use by lab user.
          type: boolean
          readOnly: true
    Artifact:
      description: An artifact.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ArtifactProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ArtifactDeploymentStatusProperties:
      description: Properties of an artifact deployment.
      type: object
      properties:
        deploymentStatus:
          description: The deployment status of the artifact.
          type: string
        artifactsApplied:
          format: int32
          description: The total count of the artifacts that were successfully applied.
          type: integer
        totalArtifacts:
          format: int32
          description: The total count of the artifacts that were tentatively applied.
          type: integer
    ArtifactDeploymentStatusPropertiesFragment:
      description: Properties of an artifact deployment.
      type: object
      properties: {}
    ArtifactInstallProperties:
      description: Properties of an artifact.
      type: object
      properties:
        artifactId:
          description: The artifact's identifier.
          type: string
        artifactTitle:
          description: The artifact's title.
          type: string
        parameters:
          description: The parameters of the artifact.
          type: array
          items:
            $ref: '#/components/schemas/ArtifactParameterProperties'
        status:
          description: The status of the artifact.
          type: string
        deploymentStatusMessage:
          description: The status message from the deployment.
          type: string
        vmExtensionStatusMessage:
          description: The status message from the virtual machine extension.
          type: string
        installTime:
          format: date-time
          description: The time that the artifact starts to install on the virtual machine.
          type: string
    ArtifactInstallPropertiesFragment:
      description: Properties of an artifact.
      type: object
      properties: {}
    ArtifactList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/Artifact'
        nextLink:
          description: Link for next set of results.
          type: string
    ArtifactParameterProperties:
      description: Properties of an artifact parameter.
      type: object
      properties:
        name:
          description: The name of the artifact parameter.
          type: string
        value:
          description: The value of the artifact parameter.
          type: string
    ArtifactParameterPropertiesFragment:
      description: Properties of an artifact parameter.
      type: object
      properties: {}
    ArtifactProperties:
      description: Properties of an artifact.
      type: object
      properties:
        title:
          description: The artifact's title.
          type: string
          readOnly: true
        description:
          description: The artifact's description.
          type: string
          readOnly: true
        publisher:
          description: The artifact's publisher.
          type: string
          readOnly: true
        filePath:
          description: The file path to the artifact.
          type: string
          readOnly: true
        icon:
          description: The URI to the artifact icon.
          type: string
          readOnly: true
        targetOsType:
          description: The artifact's target OS.
          type: string
          readOnly: true
        parameters:
          description: The artifact's parameters.
          type: object
          readOnly: true
        createdDate:
          format: date-time
          description: The artifact's creation date.
          type: string
          readOnly: true
    ArtifactSource:
      description: Properties of an artifact source.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ArtifactSourceProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ArtifactSourceFragment:
      description: Properties of an artifact source.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    ArtifactSourceList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/ArtifactSource'
        nextLink:
          description: Link for next set of results.
          type: string
    ArtifactSourceProperties:
      description: Properties of an artifact source.
      type: object
      properties:
        displayName:
          description: The artifact source's display name.
          type: string
        uri:
          description: The artifact source's URI.
          type: string
        sourceType:
          description: The artifact source's type.
          enum:
            - VsoGit
            - GitHub
            - StorageAccount
          type: string
          x-ms-enum:
            name: SourceControlType
            modelAsString: true
        folderPath:
          description: The folder containing artifacts.
          type: string
        armTemplateFolderPath:
          description: The folder containing Azure Resource Manager templates.
          type: string
        branchRef:
          description: The artifact source's branch reference.
          type: string
        securityToken:
          description: The security token to authenticate to the artifact source.
          type: string
        status:
          description: 'Indicates if the artifact source is enabled (values: Enabled, Disabled).'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnableStatus
            modelAsString: true
        createdDate:
          format: date-time
          description: The artifact source's creation date.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    ArtifactSourcePropertiesFragment:
      description: Properties of an artifact source.
      type: object
      properties: {}
    AttachDiskProperties:
      description: Properties of the disk to attach.
      type: object
      properties:
        leasedByLabVmId:
          description: The resource ID of the Lab virtual machine to which the disk is attached.
          type: string
    AttachNewDataDiskOptions:
      description: Properties to attach new disk to the Virtual Machine.
      type: object
      properties:
        diskSizeGiB:
          format: int32
          description: Size of the disk to be attached in Gibibytes.
          type: integer
        diskName:
          description: The name of the disk to be attached.
          type: string
        diskType:
          description: The storage type for the disk (i.e. Standard, Premium).
          enum:
            - Standard
            - Premium
            - StandardSSD
          type: string
          x-ms-enum:
            name: StorageType
            modelAsString: true
    AttachNewDataDiskOptionsFragment:
      description: Properties to attach new disk to the Virtual Machine.
      type: object
      properties: {}
    BulkCreationParameters:
      description: Parameters for creating multiple virtual machines as a single action.
      type: object
      properties:
        instanceCount:
          format: int32
          description: The number of virtual machine instances to create.
          type: integer
    BulkCreationParametersFragment:
      description: Parameters for creating multiple virtual machines as a single action.
      type: object
      properties: {}
    CloudError:
      description: Error from a REST request.
      type: object
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: The cloud error that occurred
      x-ms-external: true
    CloudErrorBody:
      description: Body of an error from a REST request.
      type: object
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
        target:
          description: The error target.
          type: string
        details:
          description: Inner errors.
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
      x-ms-external: true
    ComputeDataDisk:
      description: A data disks attached to a virtual machine.
      type: object
      properties:
        name:
          description: Gets data disk name.
          type: string
        diskUri:
          description: When backed by a blob, the URI of underlying blob.
          type: string
        managedDiskId:
          description: When backed by managed disk, this is the ID of the compute disk resource.
          type: string
        diskSizeGiB:
          format: int32
          description: Gets data disk size in GiB.
          type: integer
    ComputeDataDiskFragment:
      description: A data disks attached to a virtual machine.
      type: object
      properties: {}
    ComputeVmInstanceViewStatus:
      description: Status information about a virtual machine.
      type: object
      properties:
        code:
          description: Gets the status Code.
          type: string
        displayStatus:
          description: Gets the short localizable label for the status.
          type: string
        message:
          description: Gets the message associated with the status.
          type: string
    ComputeVmInstanceViewStatusFragment:
      description: Status information about a virtual machine.
      type: object
      properties: {}
    ComputeVmProperties:
      description: Properties of a virtual machine returned by the Microsoft.Compute API.
      type: object
      properties:
        statuses:
          description: Gets the statuses of the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/ComputeVmInstanceViewStatus'
        osType:
          description: Gets the OS type of the virtual machine.
          type: string
        vmSize:
          description: Gets the size of the virtual machine.
          type: string
        networkInterfaceId:
          description: Gets the network interface ID of the virtual machine.
          type: string
        osDiskId:
          description: Gets OS disk blob uri for the virtual machine.
          type: string
        dataDiskIds:
          description: Gets data disks blob uri for the virtual machine.
          type: array
          items:
            type: string
        dataDisks:
          description: Gets all data disks attached to the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/ComputeDataDisk'
    ComputeVmPropertiesFragment:
      description: Properties of a virtual machine returned by the Microsoft.Compute API.
      type: object
      properties: {}
    CostThresholdProperties:
      description: Properties of a cost threshold item.
      type: object
      properties:
        thresholdId:
          description: The ID of the cost threshold item.
          type: string
        percentageThreshold:
          $ref: '#/components/schemas/PercentageCostThresholdProperties'
          description: The value of the percentage cost threshold.
        displayOnChart:
          description: Indicates whether this threshold will be displayed on cost charts.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: CostThresholdStatus
            modelAsString: true
        sendNotificationWhenExceeded:
          description: Indicates whether notifications will be sent when this threshold is exceeded.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: CostThresholdStatus
            modelAsString: true
        notificationSent:
          description: Indicates the datetime when notifications were last sent for this threshold.
          type: string
    CustomImage:
      description: A custom image.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/CustomImageProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    CustomImageFragment:
      description: A custom image.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    CustomImageList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/CustomImage'
        nextLink:
          description: Link for next set of results.
          type: string
    CustomImageProperties:
      description: Properties of a custom image.
      type: object
      properties:
        vm:
          $ref: '#/components/schemas/CustomImagePropertiesFromVm'
          description: The virtual machine from which the image is to be created.
        vhd:
          $ref: '#/components/schemas/CustomImagePropertiesCustom'
          description: The VHD from which the image is to be created.
        description:
          description: The description of the custom image.
          type: string
        author:
          description: The author of the custom image.
          type: string
        creationDate:
          format: date-time
          description: The creation date of the custom image.
          type: string
          readOnly: true
        managedImageId:
          description: The Managed Image Id backing the custom image.
          type: string
        managedSnapshotId:
          description: The Managed Snapshot Id backing the custom image.
          type: string
        dataDiskStorageInfo:
          description: Storage information about the data disks present in the custom image
          type: array
          items:
            $ref: '#/components/schemas/DataDiskStorageTypeInfo'
        customImagePlan:
          $ref: '#/components/schemas/CustomImagePropertiesFromPlan'
          description: Storage information about the plan related to this custom image
        isPlanAuthorized:
          description: Whether or not the custom images underlying offer/plan has been enabled for programmatic deployment
          type: boolean
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    CustomImagePropertiesCustom:
      description: Properties for creating a custom image from a VHD.
      required:
        - osType
      type: object
      properties:
        imageName:
          description: The image name.
          type: string
        sysPrep:
          description: Indicates whether sysprep has been run on the VHD.
          type: boolean
        osType:
          description: The OS type of the custom image (i.e. Windows, Linux)
          enum:
            - Windows
            - Linux
            - None
          type: string
          x-ms-enum:
            name: CustomImageOsType
            modelAsString: true
    CustomImagePropertiesCustomFragment:
      description: Properties for creating a custom image from a VHD.
      type: object
      properties: {}
    CustomImagePropertiesFragment:
      description: Properties of a custom image.
      type: object
      properties: {}
    CustomImagePropertiesFromPlan:
      description: Properties for plan on a custom image.
      type: object
      properties:
        id:
          description: The id of the plan, equivalent to name of the plan
          type: string
        publisher:
          description: The publisher for the plan from the marketplace image the custom image is derived from
          type: string
        offer:
          description: The offer for the plan from the marketplace image the custom image is derived from
          type: string
    CustomImagePropertiesFromPlanFragment:
      description: Properties for plan on a custom image.
      type: object
      properties: {}
    CustomImagePropertiesFromVm:
      description: Properties for creating a custom image from a virtual machine.
      type: object
      properties:
        sourceVmId:
          description: The source vm identifier.
          type: string
        windowsOsInfo:
          $ref: '#/components/schemas/WindowsOsInfo'
          description: The Windows OS information of the VM.
        linuxOsInfo:
          $ref: '#/components/schemas/LinuxOsInfo'
          description: The Linux OS information of the VM.
    CustomImagePropertiesFromVmFragment:
      description: Properties for creating a custom image from a virtual machine.
      type: object
      properties: {}
    DataDiskProperties:
      description: Request body for adding a new or existing data disk to a virtual machine.
      type: object
      properties:
        attachNewDataDiskOptions:
          $ref: '#/components/schemas/AttachNewDataDiskOptions'
          description: Specifies options to attach a new disk to the virtual machine.
        existingLabDiskId:
          description: Specifies the existing lab disk id to attach to virtual machine.
          type: string
        hostCaching:
          description: Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).
          enum:
            - None
            - ReadOnly
            - ReadWrite
          type: string
          x-ms-enum:
            name: HostCachingOptions
            modelAsString: true
    DataDiskPropertiesFragment:
      description: Request body for adding a new or existing data disk to a virtual machine.
      type: object
      properties: {}
    DataDiskStorageTypeInfo:
      description: Storage information about the data disks present in the custom image
      type: object
      properties:
        lun:
          description: Disk Lun
          type: string
        storageType:
          description: Disk Storage Type
          enum:
            - Standard
            - Premium
            - StandardSSD
          type: string
          x-ms-enum:
            name: StorageType
            modelAsString: true
    DataDiskStorageTypeInfoFragment:
      description: Storage information about the data disks present in the custom image
      type: object
      properties: {}
    DayDetails:
      description: Properties of a daily schedule.
      type: object
      properties:
        time:
          description: The time of day the schedule will occur.
          type: string
    DayDetailsFragment:
      description: Properties of a daily schedule.
      type: object
      properties: {}
    DetachDataDiskProperties:
      description: Request body for detaching data disk from a virtual machine.
      type: object
      properties:
        existingLabDiskId:
          description: Specifies the disk resource ID to detach from virtual machine.
          type: string
    DetachDiskProperties:
      description: Properties of the disk to detach.
      type: object
      properties:
        leasedByLabVmId:
          description: The resource ID of the Lab VM to which the disk is attached.
          type: string
    Disk:
      description: A Disk.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/DiskProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    DiskFragment:
      description: A Disk.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    DiskList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/Disk'
        nextLink:
          description: Link for next set of results.
          type: string
    DiskProperties:
      description: Properties of a disk.
      type: object
      properties:
        diskType:
          description: The storage type for the disk (i.e. Standard, Premium).
          enum:
            - Standard
            - Premium
            - StandardSSD
          type: string
          x-ms-enum:
            name: StorageType
            modelAsString: true
        diskSizeGiB:
          format: int32
          description: The size of the disk in Gibibytes.
          type: integer
        leasedByLabVmId:
          description: The resource ID of the VM to which this disk is leased.
          type: string
        diskBlobName:
          description: When backed by a blob, the name of the VHD blob without extension.
          type: string
        diskUri:
          description: When backed by a blob, the URI of underlying blob.
          type: string
        storageAccountId:
          description: When backed by a blob, the storage account where the blob is.
          type: string
        createdDate:
          format: date-time
          description: The creation date of the disk.
          type: string
          readOnly: true
        hostCaching:
          description: The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).
          type: string
        managedDiskId:
          description: When backed by managed disk, this is the ID of the compute disk resource.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    DiskPropertiesFragment:
      description: Properties of a disk.
      type: object
      properties: {}
    DtlEnvironment:
      description: An environment, which is essentially an ARM template deployment.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/EnvironmentProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    DtlEnvironmentFragment:
      description: An environment, which is essentially an ARM template deployment.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    DtlEnvironmentList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/DtlEnvironment'
        nextLink:
          description: Link for next set of results.
          type: string
    EnvironmentDeploymentProperties:
      description: Properties of an environment deployment.
      type: object
      properties:
        armTemplateId:
          description: The Azure Resource Manager template's identifier.
          type: string
        parameters:
          description: The parameters of the Azure Resource Manager template.
          type: array
          items:
            $ref: '#/components/schemas/ArmTemplateParameterProperties'
    EnvironmentDeploymentPropertiesFragment:
      description: Properties of an environment deployment.
      type: object
      properties: {}
    EnvironmentProperties:
      description: Properties of an environment.
      type: object
      properties:
        deploymentProperties:
          $ref: '#/components/schemas/EnvironmentDeploymentProperties'
          description: The deployment properties of the environment.
        armTemplateDisplayName:
          description: The display name of the Azure Resource Manager template that produced the environment.
          type: string
        resourceGroupId:
          description: The identifier of the resource group containing the environment's resources.
          type: string
          readOnly: true
        createdByUser:
          description: The creator of the environment.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    EnvironmentPropertiesFragment:
      description: Properties of an environment.
      type: object
      properties: {}
    EvaluatePoliciesProperties:
      description: Properties for evaluating a policy set.
      type: object
      properties:
        factName:
          description: The fact name.
          type: string
        factData:
          description: The fact data.
          type: string
        valueOffset:
          description: The value offset.
          type: string
        userObjectId:
          description: The user for which policies will be evaluated
          type: string
    EvaluatePoliciesRequest:
      description: Request body for evaluating a policy set.
      type: object
      properties:
        policies:
          description: Policies to evaluate.
          type: array
          items:
            $ref: '#/components/schemas/EvaluatePoliciesProperties'
    EvaluatePoliciesResponse:
      description: Response body for evaluating a policy set.
      type: object
      properties:
        results:
          description: Results of evaluating a policy set.
          type: array
          items:
            $ref: '#/components/schemas/PolicySetResult'
    Event:
      description: An event to be notified for.
      type: object
      properties:
        eventName:
          description: The event type for which this notification is enabled (i.e. AutoShutdown, Cost)
          enum:
            - AutoShutdown
            - Cost
          type: string
          x-ms-enum:
            name: NotificationChannelEventType
            modelAsString: true
    EventFragment:
      description: An event to be notified for.
      type: object
      properties: {}
    ExportResourceUsageParameters:
      description: The parameters of the export operation.
      type: object
      properties:
        blobStorageAbsoluteSasUri:
          description: The blob storage absolute sas uri with write permission to the container which the usage data needs to be uploaded to.
          type: string
        usageStartDate:
          format: date-time
          description: The start time of the usage. If not provided, usage will be reported since the beginning of data collection.
          type: string
    ExternalSubnet:
      description: Subnet information as returned by the Microsoft.Network API.
      type: object
      properties:
        id:
          description: Gets or sets the identifier.
          type: string
        name:
          description: Gets or sets the name.
          type: string
    ExternalSubnetFragment:
      description: Subnet information as returned by the Microsoft.Network API.
      type: object
      properties: {}
    Formula:
      description: A formula for creating a VM, specifying an image base and other parameters
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/FormulaProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    FormulaFragment:
      description: A formula for creating a VM, specifying an image base and other parameters
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    FormulaList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/Formula'
        nextLink:
          description: Link for next set of results.
          type: string
    FormulaProperties:
      description: Properties of a formula.
      type: object
      properties:
        description:
          description: The description of the formula.
          type: string
        author:
          description: The author of the formula.
          type: string
          readOnly: true
        osType:
          description: The OS type of the formula.
          type: string
        creationDate:
          format: date-time
          description: The creation date of the formula.
          type: string
          readOnly: true
        formulaContent:
          $ref: '#/components/schemas/LabVirtualMachineCreationParameter'
          description: The content of the formula.
        vm:
          $ref: '#/components/schemas/FormulaPropertiesFromVm'
          description: Information about a VM from which a formula is to be created.
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    FormulaPropertiesFragment:
      description: Properties of a formula.
      type: object
      properties: {}
    FormulaPropertiesFromVm:
      description: Information about a VM from which a formula is to be created.
      type: object
      properties:
        labVmId:
          description: The identifier of the VM from which a formula is to be created.
          type: string
    FormulaPropertiesFromVmFragment:
      description: Information about a VM from which a formula is to be created.
      type: object
      properties: {}
    GalleryImage:
      description: A gallery image.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/GalleryImageProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    GalleryImageList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/GalleryImage'
        nextLink:
          description: Link for next set of results.
          type: string
    GalleryImageProperties:
      description: Properties of a gallery image.
      type: object
      properties:
        author:
          description: The author of the gallery image.
          type: string
        createdDate:
          format: date-time
          description: The creation date of the gallery image.
          type: string
          readOnly: true
        description:
          description: The description of the gallery image.
          type: string
        imageReference:
          $ref: '#/components/schemas/GalleryImageReference'
          description: The image reference of the gallery image.
        icon:
          description: The icon of the gallery image.
          type: string
        enabled:
          description: Indicates whether this gallery image is enabled.
          type: boolean
        planId:
          description: The third party plan that applies to this image
          type: string
        isPlanAuthorized:
          description: Indicates if the plan has been authorized for programmatic deployment.
          type: boolean
    GalleryImageReference:
      description: The reference information for an Azure Marketplace image.
      type: object
      properties:
        offer:
          description: The offer of the gallery image.
          type: string
        publisher:
          description: The publisher of the gallery image.
          type: string
        sku:
          description: The SKU of the gallery image.
          type: string
        osType:
          description: The OS type of the gallery image.
          type: string
        version:
          description: The version of the gallery image.
          type: string
    GalleryImageReferenceFragment:
      description: The reference information for an Azure Marketplace image.
      type: object
      properties: {}
    GenerateArmTemplateRequest:
      description: Parameters for generating an ARM template for deploying artifacts.
      type: object
      properties:
        virtualMachineName:
          description: The resource name of the virtual machine.
          type: string
        parameters:
          description: The parameters of the ARM template.
          type: array
          items:
            $ref: '#/components/schemas/ParameterInfo'
        location:
          description: The location of the virtual machine.
          type: string
        fileUploadOptions:
          description: Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.
          enum:
            - UploadFilesAndGenerateSasTokens
            - None
          type: string
          x-ms-enum:
            name: FileUploadOptions
            modelAsString: true
    GenerateUploadUriParameter:
      description: Properties for generating an upload URI.
      type: object
      properties:
        blobName:
          description: The blob name of the upload URI.
          type: string
    GenerateUploadUriResponse:
      description: Response body for generating an upload URI.
      type: object
      properties:
        uploadUri:
          description: The upload URI for the VHD.
          type: string
    HourDetails:
      description: Properties of an hourly schedule.
      type: object
      properties:
        minute:
          format: int32
          description: Minutes of the hour the schedule will run.
          type: integer
    HourDetailsFragment:
      description: Properties of an hourly schedule.
      type: object
      properties: {}
    IdentityProperties:
      description: Properties of a managed identity
      type: object
      properties:
        type:
          description: Managed identity.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
            - SystemAssigned,UserAssigned
          type: string
          x-ms-enum:
            name: ManagedIdentityType
            modelAsString: true
        principalId:
          description: The principal id of resource identity.
          type: string
        tenantId:
          description: The tenant identifier of resource.
          type: string
        clientSecretUrl:
          description: The client secret URL of the identity.
          type: string
    ImportLabVirtualMachineRequest:
      description: This represents the payload required to import a virtual machine from a different lab into the current one
      type: object
      properties:
        sourceVirtualMachineResourceId:
          description: The full resource ID of the virtual machine to be imported.
          type: string
        destinationVirtualMachineName:
          description: The name of the virtual machine in the destination lab
          type: string
    InboundNatRule:
      description: A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
      type: object
      properties:
        transportProtocol:
          description: The transport protocol for the endpoint.
          enum:
            - Tcp
            - Udp
          type: string
          x-ms-enum:
            name: TransportProtocol
            modelAsString: true
        frontendPort:
          format: int32
          description: The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.
          type: integer
        backendPort:
          format: int32
          description: The port to which the external traffic will be redirected.
          type: integer
    InboundNatRuleFragment:
      description: A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.
      type: object
      properties: {}
    Lab:
      description: A lab.
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/LabProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    LabAnnouncementProperties:
      description: Properties of a lab's announcement banner
      type: object
      properties:
        title:
          description: The plain text title for the lab announcement
          type: string
        markdown:
          description: The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
          type: string
        enabled:
          description: Is the lab announcement active/enabled at this time?
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnableStatus
            modelAsString: true
        expirationDate:
          format: date-time
          description: The time at which the announcement expires (null for never)
          type: string
        expired:
          description: Has this announcement expired?
          type: boolean
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    LabAnnouncementPropertiesFragment:
      description: Properties of a lab's announcement banner
      type: object
      properties: {}
    LabCost:
      description: A cost item.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/LabCostProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    LabCostDetailsProperties:
      description: The properties of a lab cost item.
      type: object
      properties:
        date:
          format: date-time
          description: The date of the cost item.
          type: string
        cost:
          format: double
          description: The cost component of the cost item.
          type: number
        costType:
          description: The type of the cost.
          enum:
            - Unavailable
            - Reported
            - Projected
          type: string
          x-ms-enum:
            name: CostType
            modelAsString: true
    LabCostProperties:
      description: Properties of a cost item.
      type: object
      properties:
        targetCost:
          $ref: '#/components/schemas/TargetCostProperties'
          description: The target cost properties
        labCostSummary:
          $ref: '#/components/schemas/LabCostSummaryProperties'
          description: The lab cost summary component of the cost data.
          readOnly: true
        labCostDetails:
          description: The lab cost details component of the cost data.
          type: array
          items:
            $ref: '#/components/schemas/LabCostDetailsProperties'
          readOnly: true
        resourceCosts:
          description: The resource cost component of the cost data.
          type: array
          items:
            $ref: '#/components/schemas/LabResourceCostProperties'
          readOnly: true
        currencyCode:
          description: The currency code of the cost.
          type: string
        startDateTime:
          format: date-time
          description: The start time of the cost data.
          type: string
        endDateTime:
          format: date-time
          description: The end time of the cost data.
          type: string
        createdDate:
          format: date-time
          description: The creation date of the cost.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    LabCostSummaryProperties:
      description: The properties of the cost summary.
      type: object
      properties:
        estimatedLabCost:
          format: double
          description: The cost component of the cost item.
          type: number
    LabFragment:
      description: A lab.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    LabList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/Lab'
        nextLink:
          description: Link for next set of results.
          type: string
    LabProperties:
      description: Properties of a lab.
      type: object
      properties:
        defaultStorageAccount:
          description: The lab's default storage account.
          type: string
          readOnly: true
        defaultPremiumStorageAccount:
          description: The lab's default premium storage account.
          type: string
          readOnly: true
        artifactsStorageAccount:
          description: The lab's artifact storage account.
          type: string
          readOnly: true
        premiumDataDiskStorageAccount:
          description: The lab's premium data disk storage account.
          type: string
          readOnly: true
        vaultName:
          description: The lab's Key vault.
          type: string
          readOnly: true
        labStorageType:
          description: Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.
          default: Premium
          enum:
            - Standard
            - Premium
            - StandardSSD
          type: string
          x-ms-enum:
            name: StorageType
            modelAsString: true
        mandatoryArtifactsResourceIdsLinux:
          description: The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user.
          type: array
          items:
            type: string
        mandatoryArtifactsResourceIdsWindows:
          description: The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user.
          type: array
          items:
            type: string
        createdDate:
          format: date-time
          description: The creation date of the lab.
          type: string
          readOnly: true
        premiumDataDisks:
          description: "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed."
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            name: PremiumDataDisk
            modelAsString: true
        environmentPermission:
          description: The access rights to be granted to the user when provisioning an environment
          enum:
            - Reader
            - Contributor
          type: string
          x-ms-enum:
            name: EnvironmentPermission
            modelAsString: true
        announcement:
          $ref: '#/components/schemas/LabAnnouncementProperties'
          description: The properties of any lab announcement associated with this lab
        support:
          $ref: '#/components/schemas/LabSupportProperties'
          description: The properties of any lab support message associated with this lab
        vmCreationResourceGroup:
          description: The resource group in which all new lab virtual machines will be created. To let DevTest Labs manage resource group creation, set this value to null.
          type: string
          readOnly: true
        publicIpId:
          description: The public IP address for the lab's load balancer.
          type: string
          readOnly: true
        loadBalancerId:
          description: The load balancer used to for lab VMs that use shared IP address.
          type: string
          readOnly: true
        networkSecurityGroupId:
          description: The Network Security Group attached to the lab VMs Network interfaces to restrict open ports.
          type: string
          readOnly: true
        extendedProperties:
          description: Extended properties of the lab used for experimental features
          type: object
          additionalProperties:
            type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    LabPropertiesFragment:
      description: Properties of a lab.
      type: object
      properties: {}
    LabResourceCostProperties:
      description: The properties of a resource cost item.
      type: object
      properties:
        resourcename:
          description: The name of the resource.
          type: string
        resourceUId:
          description: The unique identifier of the resource.
          type: string
        resourceCost:
          format: double
          description: The cost component of the resource cost item.
          type: number
        resourceType:
          description: The logical resource type (ex. virtualmachine, storageaccount)
          type: string
        resourceOwner:
          description: The owner of the resource (ex. janedoe@microsoft.com)
          type: string
        resourcePricingTier:
          description: The category of the resource (ex. Premium_LRS, Standard_DS1)
          type: string
        resourceStatus:
          description: The status of the resource (ex. Active)
          type: string
        resourceId:
          description: The ID of the resource
          type: string
        externalResourceId:
          description: The ID of the external resource
          type: string
    LabSupportProperties:
      description: Properties of a lab's support banner
      type: object
      properties:
        enabled:
          description: Is the lab support banner active/enabled at this time?
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnableStatus
            modelAsString: true
        markdown:
          description: The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown.
          type: string
    LabSupportPropertiesFragment:
      description: Properties of a lab's support banner
      type: object
      properties: {}
    LabVhd:
      description: Properties of a VHD in the lab.
      type: object
      properties:
        id:
          description: The URI to the VHD.
          type: string
    LabVhdList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/LabVhd'
        nextLink:
          description: Link for next set of results.
          type: string
    LabVirtualMachine:
      description: A virtual machine.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/LabVirtualMachineProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    LabVirtualMachineCreationParameter:
      description: Properties for creating a virtual machine.
      properties:
        properties:
          $ref: '#/components/schemas/LabVirtualMachineCreationParameterProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
        name:
          description: The name of the virtual machine or environment
          type: string
        location:
          description: The location of the new virtual machine or environment
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    LabVirtualMachineCreationParameterFragment:
      description: Properties for creating a virtual machine.
      type: object
      properties: {}
    LabVirtualMachineCreationParameterProperties:
      description: Properties for virtual machine creation.
      type: object
      properties:
        bulkCreationParameters:
          $ref: '#/components/schemas/BulkCreationParameters'
          description: The number of virtual machine instances to create.
        notes:
          description: The notes of the virtual machine.
          type: string
        ownerObjectId:
          description: The object identifier of the owner of the virtual machine.
          default: dynamicValue
          type: string
        ownerUserPrincipalName:
          description: The user principal name of the virtual machine owner.
          type: string
        createdDate:
          format: date-time
          description: The creation date of the virtual machine.
          type: string
        customImageId:
          description: The custom image identifier of the virtual machine.
          type: string
        size:
          description: The size of the virtual machine.
          type: string
        userName:
          description: The user name of the virtual machine.
          type: string
        password:
          description: The password of the virtual machine administrator.
          type: string
          x-ms-secret: true
        sshKey:
          description: The SSH key of the virtual machine administrator.
          type: string
          x-ms-secret: true
        isAuthenticationWithSshKey:
          description: Indicates whether this virtual machine uses an SSH key for authentication.
          type: boolean
        labSubnetName:
          description: The lab subnet name of the virtual machine.
          type: string
        labVirtualNetworkId:
          description: The lab virtual network identifier of the virtual machine.
          type: string
        disallowPublicIpAddress:
          description: Indicates whether the virtual machine is to be created without a public IP address.
          default: false
          type: boolean
        artifacts:
          description: The artifacts to be installed on the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/ArtifactInstallProperties'
        galleryImageReference:
          $ref: '#/components/schemas/GalleryImageReference'
          description: The Microsoft Azure Marketplace image reference of the virtual machine.
        planId:
          description: The id of the plan associated with the virtual machine image
          type: string
        networkInterface:
          $ref: '#/components/schemas/NetworkInterfaceProperties'
          description: The network interface properties.
        expirationDate:
          format: date-time
          description: The expiration date for VM.
          type: string
        allowClaim:
          description: Indicates whether another user can take ownership of the virtual machine
          default: false
          type: boolean
        storageType:
          description: Storage type to use for virtual machine (i.e. Standard, Premium).
          default: labStorageType
          type: string
        environmentId:
          description: The resource ID of the environment that contains this virtual machine, if any.
          type: string
        dataDiskParameters:
          description: New or existing data disks to attach to the virtual machine after creation
          type: array
          items:
            $ref: '#/components/schemas/DataDiskProperties'
        scheduleParameters:
          description: Virtual Machine schedules to be created
          type: array
          items:
            $ref: '#/components/schemas/ScheduleCreationParameter'
    LabVirtualMachineCreationParameterPropertiesFragment:
      description: Properties for virtual machine creation.
      type: object
      properties: {}
    LabVirtualMachineFragment:
      description: A virtual machine.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    LabVirtualMachineList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/LabVirtualMachine'
        nextLink:
          description: Link for next set of results.
          type: string
    LabVirtualMachineProperties:
      description: Properties of a virtual machine.
      type: object
      properties:
        notes:
          description: The notes of the virtual machine.
          type: string
        ownerObjectId:
          description: The object identifier of the owner of the virtual machine.
          default: dynamicValue
          type: string
        ownerUserPrincipalName:
          description: The user principal name of the virtual machine owner.
          type: string
        createdByUserId:
          description: The object identifier of the creator of the virtual machine.
          type: string
          readOnly: true
        createdByUser:
          description: The email address of creator of the virtual machine.
          type: string
          readOnly: true
        createdDate:
          format: date-time
          description: The creation date of the virtual machine.
          type: string
        computeId:
          description: The resource identifier (Microsoft.Compute) of the virtual machine.
          type: string
          readOnly: true
        customImageId:
          description: The custom image identifier of the virtual machine.
          type: string
        osType:
          description: The OS type of the virtual machine.
          type: string
          readOnly: true
        size:
          description: The size of the virtual machine.
          type: string
        userName:
          description: The user name of the virtual machine.
          type: string
        password:
          description: The password of the virtual machine administrator.
          type: string
          x-ms-secret: true
        sshKey:
          description: The SSH key of the virtual machine administrator.
          type: string
          x-ms-secret: true
        isAuthenticationWithSshKey:
          description: Indicates whether this virtual machine uses an SSH key for authentication.
          type: boolean
        fqdn:
          description: The fully-qualified domain name of the virtual machine.
          type: string
          readOnly: true
        labSubnetName:
          description: The lab subnet name of the virtual machine.
          type: string
        labVirtualNetworkId:
          description: The lab virtual network identifier of the virtual machine.
          type: string
        disallowPublicIpAddress:
          description: Indicates whether the virtual machine is to be created without a public IP address.
          default: false
          type: boolean
        artifacts:
          description: The artifacts to be installed on the virtual machine.
          type: array
          items:
            $ref: '#/components/schemas/ArtifactInstallProperties'
        artifactDeploymentStatus:
          $ref: '#/components/schemas/ArtifactDeploymentStatusProperties'
          description: The artifact deployment status for the virtual machine.
          readOnly: true
        galleryImageReference:
          $ref: '#/components/schemas/GalleryImageReference'
          description: The Microsoft Azure Marketplace image reference of the virtual machine.
        planId:
          description: The id of the plan associated with the virtual machine image
          type: string
        computeVm:
          $ref: '#/components/schemas/ComputeVmProperties'
          description: The compute virtual machine properties.
          readOnly: true
        networkInterface:
          $ref: '#/components/schemas/NetworkInterfaceProperties'
          description: The network interface properties.
        applicableSchedule:
          $ref: '#/components/schemas/ApplicableSchedule'
          description: The applicable schedule for the virtual machine.
          readOnly: true
        expirationDate:
          format: date-time
          description: The expiration date for VM.
          type: string
        allowClaim:
          description: Indicates whether another user can take ownership of the virtual machine
          default: false
          type: boolean
        storageType:
          description: Storage type to use for virtual machine (i.e. Standard, Premium).
          default: labStorageType
          type: string
        virtualMachineCreationSource:
          description: Tells source of creation of lab virtual machine. Output property only.
          enum:
            - FromCustomImage
            - FromGalleryImage
            - FromSharedGalleryImage
          type: string
          readOnly: true
          x-ms-enum:
            name: VirtualMachineCreationSource
            modelAsString: true
        environmentId:
          description: The resource ID of the environment that contains this virtual machine, if any.
          type: string
        dataDiskParameters:
          description: New or existing data disks to attach to the virtual machine after creation
          type: array
          items:
            $ref: '#/components/schemas/DataDiskProperties'
        scheduleParameters:
          description: Virtual Machine schedules to be created
          type: array
          items:
            $ref: '#/components/schemas/ScheduleCreationParameter'
        lastKnownPowerState:
          description: Last known compute power state captured in DTL
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    LabVirtualMachinePropertiesFragment:
      description: Properties of a virtual machine.
      type: object
      properties: {}
    LinuxOsInfo:
      description: Information about a Linux OS.
      type: object
      properties:
        linuxOsState:
          description: The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).
          enum:
            - NonDeprovisioned
            - DeprovisionRequested
            - DeprovisionApplied
          type: string
          x-ms-enum:
            name: LinuxOsState
            modelAsString: true
    LinuxOsInfoFragment:
      description: Information about a Linux OS.
      type: object
      properties: {}
    NetworkInterfaceProperties:
      description: Properties of a network interface.
      type: object
      properties:
        virtualNetworkId:
          description: The resource ID of the virtual network.
          type: string
        subnetId:
          description: The resource ID of the sub net.
          type: string
        publicIpAddressId:
          description: The resource ID of the public IP address.
          type: string
        publicIpAddress:
          description: The public IP address.
          type: string
        privateIpAddress:
          description: The private IP address.
          type: string
        dnsName:
          description: The DNS name.
          type: string
        rdpAuthority:
          description: The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).
          type: string
        sshAuthority:
          description: The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.
          type: string
        sharedPublicIpAddressConfiguration:
          $ref: '#/components/schemas/SharedPublicIpAddressConfiguration'
          description: The configuration for sharing a public IP address across multiple virtual machines.
    NetworkInterfacePropertiesFragment:
      description: Properties of a network interface.
      type: object
      properties: {}
    NotificationChannel:
      description: A notification.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/NotificationChannelProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    NotificationChannelFragment:
      description: A notification.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    NotificationChannelList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
        nextLink:
          description: Link for next set of results.
          type: string
    NotificationChannelProperties:
      description: Properties of a schedule.
      type: object
      properties:
        webHookUrl:
          description: The webhook URL to send notifications to.
          type: string
        emailRecipient:
          description: The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
          type: string
        notificationLocale:
          description: The locale to use when sending a notification (fallback for unsupported languages is EN).
          type: string
        description:
          description: Description of notification.
          type: string
        events:
          description: The list of event for which this notification is enabled.
          type: array
          items:
            $ref: '#/components/schemas/Event'
        createdDate:
          format: date-time
          description: The creation date of the notification channel.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    NotificationChannelPropertiesFragment:
      description: Properties of a schedule.
      type: object
      properties: {}
    NotificationSettings:
      description: Notification settings for a schedule.
      type: object
      properties:
        status:
          description: If notifications are enabled for this schedule (i.e. Enabled, Disabled).
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnableStatus
            modelAsString: true
        timeInMinutes:
          format: int32
          description: Time in minutes before event at which notification will be sent.
          type: integer
        webhookUrl:
          description: The webhook URL to which the notification will be sent.
          type: string
        emailRecipient:
          description: The email recipient to send notifications to (can be a list of semi-colon separated email addresses).
          type: string
        notificationLocale:
          description: The locale to use when sending a notification (fallback for unsupported languages is EN).
          type: string
    NotificationSettingsFragment:
      description: Notification settings for a schedule.
      type: object
      properties: {}
    NotifyParameters:
      description: Properties for generating a Notification.
      type: object
      properties:
        eventName:
          description: The type of event (i.e. AutoShutdown, Cost)
          enum:
            - AutoShutdown
            - Cost
          type: string
          x-ms-enum:
            name: NotificationChannelEventType
            modelAsString: true
        jsonPayload:
          description: Properties for the notification in json format.
          type: string
    OperationError:
      description: Error details for the operation in case of a failure.
      type: object
      properties:
        code:
          description: The error code of the operation error.
          type: string
        message:
          description: The error message of the operation error.
          type: string
    OperationMetadata:
      description: The REST API operation supported by DevTestLab ResourceProvider.
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          $ref: '#/components/schemas/OperationMetadataDisplay'
          description: The object that describes the operations
    OperationMetadataDisplay:
      description: The object that describes the operations
      type: object
      properties:
        provider:
          description: Friendly name of the resource provider
          type: string
        resource:
          description: Resource type on which the operation is performed.
          type: string
        operation:
          description: 'Operation type: read, write, delete, listKeys/action, etc.'
          type: string
        description:
          description: Friendly name of the operation
          type: string
    OperationResult:
      description: An Operation Result
      type: object
      properties:
        status:
          description: The operation status.
          type: string
        statusCode:
          description: The status code for the operation.
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
          x-ms-enum:
            name: HttpStatusCode
            modelAsString: true
        error:
          $ref: '#/components/schemas/OperationError'
          description: Error details for the operation in case of a failure.
    ParameterInfo:
      description: Information about an artifact's parameter.
      type: object
      properties:
        name:
          description: The name of the artifact parameter.
          type: string
        value:
          description: The value of the artifact parameter.
          type: string
    ParametersValueFileInfo:
      description: A file containing a set of parameter values for an ARM template.
      type: object
      properties:
        fileName:
          description: File name.
          type: string
        parametersValueInfo:
          description: Contents of the file.
          type: object
    PercentageCostThresholdProperties:
      description: Properties of a percentage cost threshold.
      type: object
      properties:
        thresholdValue:
          format: double
          description: The cost threshold value.
          type: number
    Policy:
      description: A Policy.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/PolicyProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    PolicyFragment:
      description: A Policy.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    PolicyList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/Policy'
        nextLink:
          description: Link for next set of results.
          type: string
    PolicyProperties:
      description: Properties of a Policy.
      type: object
      properties:
        description:
          description: The description of the policy.
          type: string
        status:
          description: The status of the policy.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: PolicyStatus
            modelAsString: true
        factName:
          description: The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.
          enum:
            - UserOwnedLabVmCount
            - UserOwnedLabPremiumVmCount
            - LabVmCount
            - LabPremiumVmCount
            - LabVmSize
            - GalleryImage
            - UserOwnedLabVmCountInSubnet
            - LabTargetCost
            - EnvironmentTemplate
            - ScheduleEditPermission
          type: string
          x-ms-enum:
            name: PolicyFactName
            modelAsString: true
        factData:
          description: The fact data of the policy.
          type: string
        threshold:
          description: The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
          type: string
        evaluatorType:
          description: The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).
          enum:
            - AllowedValuesPolicy
            - MaxValuePolicy
          type: string
          x-ms-enum:
            name: PolicyEvaluatorType
            modelAsString: true
        createdDate:
          format: date-time
          description: The creation date of the policy.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    PolicyPropertiesFragment:
      description: Properties of a Policy.
      type: object
      properties: {}
    PolicySetResult:
      description: Result of a policy set evaluation.
      type: object
      properties:
        hasError:
          description: A value indicating whether this policy set evaluation has discovered violations.
          type: boolean
        policyViolations:
          description: The list of policy violations.
          type: array
          items:
            $ref: '#/components/schemas/PolicyViolation'
    PolicyViolation:
      description: Policy violation.
      type: object
      properties:
        code:
          description: The code of the policy violation.
          type: string
        message:
          description: The message of the policy violation.
          type: string
    Port:
      description: Properties of a network port.
      type: object
      properties:
        transportProtocol:
          description: Protocol type of the port.
          enum:
            - Tcp
            - Udp
          type: string
          x-ms-enum:
            name: TransportProtocol
            modelAsString: true
        backendPort:
          format: int32
          description: Backend port of the target virtual machine.
          type: integer
    PortFragment:
      description: Properties of a network port.
      type: object
      properties: {}
    ProviderOperationResult:
      description: Result of the request to list REST API operations
      type: object
      properties:
        value:
          description: List of operations supported by the resource provider.
          type: array
          items:
            $ref: '#/components/schemas/OperationMetadata'
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          type: string
          readOnly: true
    RdpConnection:
      description: Represents a .rdp file
      type: object
      properties:
        contents:
          description: The contents of the .rdp file
          type: string
    ResizeLabVirtualMachineProperties:
      description: Request body for resizing a virtual machine.
      type: object
      properties:
        size:
          description: Specifies the size of the virtual machine.
          type: string
    Resource:
      description: An Azure resource.
      type: object
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      x-ms-azure-resource: true
    RetargetScheduleProperties:
      description: Properties for retargeting a virtual machine schedule.
      type: object
      properties:
        currentResourceId:
          description: The resource Id of the virtual machine on which the schedule operates
          type: string
        targetResourceId:
          description: The resource Id of the virtual machine that the schedule should be retargeted to
          type: string
    Schedule:
      description: A schedule.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ScheduleProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ScheduleCreationParameter:
      description: Properties for creating a schedule.
      properties:
        properties:
          $ref: '#/components/schemas/ScheduleCreationParameterProperties'
          description: The properties of the schedule.
          x-ms-client-flatten: true
        name:
          description: The name of the virtual machine or environment
          type: string
        location:
          description: The location of the new virtual machine or environment
          type: string
          readOnly: true
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    ScheduleCreationParameterFragment:
      description: Properties for creating a schedule.
      type: object
      properties: {}
    ScheduleCreationParameterProperties:
      description: Properties for schedule creation.
      type: object
      properties:
        status:
          description: The status of the schedule (i.e. Enabled, Disabled)
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnableStatus
            modelAsString: true
        taskType:
          description: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
          type: string
        weeklyRecurrence:
          $ref: '#/components/schemas/WeekDetails'
          description: If the schedule will occur only some days of the week, specify the weekly recurrence.
        dailyRecurrence:
          $ref: '#/components/schemas/DayDetails'
          description: If the schedule will occur once each day of the week, specify the daily recurrence.
        hourlyRecurrence:
          $ref: '#/components/schemas/HourDetails'
          description: If the schedule will occur multiple times a day, specify the hourly recurrence.
        timeZoneId:
          description: The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)
          type: string
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
          description: Notification settings.
        targetResourceId:
          description: The resource ID to which the schedule belongs
          type: string
    ScheduleCreationParameterPropertiesFragment:
      description: Properties for schedule creation.
      type: object
      properties: {}
    ScheduleFragment:
      description: A schedule.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    ScheduleList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
        nextLink:
          description: Link for next set of results.
          type: string
    ScheduleProperties:
      description: Properties of a schedule.
      type: object
      properties:
        status:
          description: The status of the schedule (i.e. Enabled, Disabled)
          default: Disabled
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: EnableStatus
            modelAsString: true
        taskType:
          description: The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
          type: string
        weeklyRecurrence:
          $ref: '#/components/schemas/WeekDetails'
          description: If the schedule will occur only some days of the week, specify the weekly recurrence.
        dailyRecurrence:
          $ref: '#/components/schemas/DayDetails'
          description: If the schedule will occur once each day of the week, specify the daily recurrence.
        hourlyRecurrence:
          $ref: '#/components/schemas/HourDetails'
          description: If the schedule will occur multiple times a day, specify the hourly recurrence.
        timeZoneId:
          description: The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)
          type: string
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
          description: Notification settings.
        createdDate:
          format: date-time
          description: The creation date of the schedule.
          type: string
          readOnly: true
        targetResourceId:
          description: The resource ID to which the schedule belongs
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    SchedulePropertiesFragment:
      description: Properties of a schedule.
      type: object
      properties: {}
    Secret:
      description: A secret.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/SecretProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    SecretFragment:
      description: A secret.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    SecretList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/Secret'
        nextLink:
          description: Link for next set of results.
          type: string
    SecretProperties:
      description: Properties of a secret.
      type: object
      properties:
        value:
          description: The value of the secret for secret creation.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    SecretPropertiesFragment:
      description: Properties of a secret.
      type: object
      properties: {}
    ServiceFabric:
      description: A Service Fabric.
      required:
        - properties
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/ServiceFabricProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ServiceFabricFragment:
      description: A Service Fabric.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    ServiceFabricList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/ServiceFabric'
        nextLink:
          description: Link for next set of results.
          type: string
    ServiceFabricProperties:
      description: Properties of a service fabric.
      type: object
      properties:
        externalServiceFabricId:
          description: The backing service fabric resource's id
          type: string
        environmentId:
          description: The resource id of the environment under which the service fabric resource is present
          type: string
        applicableSchedule:
          $ref: '#/components/schemas/ApplicableSchedule'
          description: The applicable schedule for the virtual machine.
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    ServiceFabricPropertiesFragment:
      description: Properties of a service fabric.
      type: object
      properties: {}
    ServiceRunner:
      description: A container for a managed identity to execute DevTest lab services.
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: The identity of the resource.
      type: object
    ServiceRunnerList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/ServiceRunner'
        nextLink:
          description: Link for next set of results.
          type: string
    SharedPublicIpAddressConfiguration:
      description: Properties of a virtual machine that determine how it is connected to a load balancer.
      type: object
      properties:
        inboundNatRules:
          description: The incoming NAT rules
          type: array
          items:
            $ref: '#/components/schemas/InboundNatRule'
    SharedPublicIpAddressConfigurationFragment:
      description: Properties of a virtual machine that determine how it is connected to a load balancer.
      type: object
      properties: {}
    ShutdownNotificationContent:
      description: The contents of a shutdown notification. Webhooks can use this type to deserialize the request body when they get notified of an imminent shutdown.
      type: object
      properties:
        skipUrl:
          description: The URL to skip auto-shutdown.
          type: string
        delayUrl60:
          description: The URL to delay shutdown by 60 minutes.
          type: string
        delayUrl120:
          description: The URL to delay shutdown by 2 hours.
          type: string
        vmName:
          description: The virtual machine to be shut down.
          type: string
        guid:
          description: The GUID for the virtual machine to be shut down.
          type: string
        owner:
          description: The owner of the virtual machine.
          type: string
        vmUrl:
          description: The URL of the virtual machine.
          type: string
        minutesUntilShutdown:
          description: Minutes remaining until shutdown
          type: string
        eventType:
          description: The event for which a notification will be sent.
          type: string
        text:
          description: The text for the notification.
          type: string
        subscriptionId:
          description: The subscription ID for the schedule.
          type: string
        resourceGroupName:
          description: The resource group name for the schedule.
          type: string
        labName:
          description: The lab for the schedule.
          type: string
    Subnet:
      description: Subnet information.
      type: object
      properties:
        resourceId:
          description: The resource ID of the subnet.
          type: string
        labSubnetName:
          description: The name of the subnet as seen in the lab.
          type: string
        allowPublicIp:
          description: The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            name: UsagePermissionType
            modelAsString: true
    SubnetFragment:
      description: Subnet information.
      type: object
      properties: {}
    SubnetOverride:
      description: Property overrides on a subnet of a virtual network.
      type: object
      properties:
        resourceId:
          description: The resource ID of the subnet.
          type: string
        labSubnetName:
          description: The name given to the subnet within the lab.
          type: string
        useInVmCreationPermission:
          description: Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            name: UsagePermissionType
            modelAsString: true
        usePublicIpAddressPermission:
          description: Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            name: UsagePermissionType
            modelAsString: true
        sharedPublicIpAddressConfiguration:
          $ref: '#/components/schemas/SubnetSharedPublicIpAddressConfiguration'
          description: Properties that virtual machines on this subnet will share.
        virtualNetworkPoolName:
          description: The virtual network pool associated with this subnet.
          type: string
    SubnetOverrideFragment:
      description: Property overrides on a subnet of a virtual network.
      type: object
      properties: {}
    SubnetSharedPublicIpAddressConfiguration:
      description: Configuration for public IP address sharing.
      type: object
      properties:
        allowedPorts:
          description: Backend ports that virtual machines on this subnet are allowed to expose
          type: array
          items:
            $ref: '#/components/schemas/Port'
    SubnetSharedPublicIpAddressConfigurationFragment:
      description: Configuration for public IP address sharing.
      type: object
      properties: {}
    TargetCostProperties:
      description: Properties of a cost target.
      type: object
      properties:
        status:
          description: Target cost status
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: TargetCostStatus
            modelAsString: true
        target:
          format: int32
          description: Lab target cost
          type: integer
        costThresholds:
          description: Cost thresholds.
          type: array
          items:
            $ref: '#/components/schemas/CostThresholdProperties'
        cycleStartDateTime:
          format: date-time
          description: Reporting cycle start date.
          type: string
        cycleEndDateTime:
          format: date-time
          description: Reporting cycle end date.
          type: string
        cycleType:
          description: Reporting cycle type.
          enum:
            - CalendarMonth
            - Custom
          type: string
          x-ms-enum:
            name: ReportingCycleType
            modelAsString: true
    UpdateResource:
      description: Represents an update resource
      type: object
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
    User:
      description: Profile of a lab user.
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/UserProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    UserFragment:
      description: Profile of a lab user.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    UserIdentity:
      description: Identity attributes of a lab user.
      type: object
      properties:
        principalName:
          description: Set to the principal name / UPN of the client JWT making the request.
          type: string
        principalId:
          description: Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.
          type: string
        tenantId:
          description: Set to the tenant ID of the client JWT making the request.
          type: string
        objectId:
          description: Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.
          type: string
        appId:
          description: Set to the app Id of the client JWT making the request.
          type: string
    UserIdentityFragment:
      description: Identity attributes of a lab user.
      type: object
      properties: {}
    UserList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/User'
        nextLink:
          description: Link for next set of results.
          type: string
    UserProperties:
      description: Properties of a lab user profile.
      type: object
      properties:
        identity:
          $ref: '#/components/schemas/UserIdentity'
          description: The identity of the user.
        secretStore:
          $ref: '#/components/schemas/UserSecretStore'
          description: The secret store of the user.
        createdDate:
          format: date-time
          description: The creation date of the user profile.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    UserPropertiesFragment:
      description: Properties of a lab user profile.
      type: object
      properties: {}
    UserSecretStore:
      description: Properties of a user's secret store.
      type: object
      properties:
        keyVaultUri:
          description: The URI of the user's Key vault.
          type: string
        keyVaultId:
          description: The ID of the user's Key vault.
          type: string
    UserSecretStoreFragment:
      description: Properties of a user's secret store.
      type: object
      properties: {}
    VirtualNetwork:
      description: A virtual network.
      properties:
        id:
          description: The identifier of the resource.
          type: string
          readOnly: true
        name:
          description: The name of the resource.
          type: string
          readOnly: true
        type:
          description: The type of the resource.
          type: string
          readOnly: true
        location:
          description: The location of the resource.
          type: string
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/VirtualNetworkProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    VirtualNetworkFragment:
      description: A virtual network.
      properties:
        tags:
          description: The tags of the resource.
          type: object
          additionalProperties:
            type: string
      type: object
    VirtualNetworkList:
      description: The response of a list operation.
      type: object
      properties:
        value:
          description: Results of the list operation.
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetwork'
        nextLink:
          description: Link for next set of results.
          type: string
    VirtualNetworkProperties:
      description: Properties of a virtual network.
      type: object
      properties:
        allowedSubnets:
          description: The allowed subnets of the virtual network.
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
        description:
          description: The description of the virtual network.
          type: string
        externalProviderResourceId:
          description: The Microsoft.Network resource identifier of the virtual network.
          type: string
        externalSubnets:
          description: The external subnet properties.
          type: array
          items:
            $ref: '#/components/schemas/ExternalSubnet'
          readOnly: true
        subnetOverrides:
          description: The subnet overrides of the virtual network.
          type: array
          items:
            $ref: '#/components/schemas/SubnetOverride'
        createdDate:
          format: date-time
          description: The creation date of the virtual network.
          type: string
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
          readOnly: true
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
          readOnly: true
    VirtualNetworkPropertiesFragment:
      description: Properties of a virtual network.
      type: object
      properties: {}
    WeekDetails:
      description: Properties of a weekly schedule.
      type: object
      properties:
        weekdays:
          description: The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
          type: array
          items:
            type: string
        time:
          description: The time of the day the schedule will occur.
          type: string
    WeekDetailsFragment:
      description: Properties of a weekly schedule.
      type: object
      properties: {}
    WindowsOsInfo:
      description: Information about a Windows OS.
      type: object
      properties:
        windowsOsState:
          description: The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).
          enum:
            - NonSysprepped
            - SysprepRequested
            - SysprepApplied
          type: string
          x-ms-enum:
            name: WindowsOsState
            modelAsString: true
    WindowsOsInfoFragment:
      description: Information about a Windows OS.
      type: object
      properties: {}
  x-stackQL-resources:
    provider_operations:
      id: azure.dev_test_labs.provider_operations
      name: provider_operations
      title: provider_operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DevTestLab~1operations~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provider_operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    labs:
      id: azure.dev_test_labs.labs
      name: labs
      title: labs
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevTestLab~1labs~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        claim_any_vm:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1claimAnyVm~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_resource_usage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1exportResourceUsage~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_upload_uri:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1generateUploadUri~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        import_virtual_machine:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1importVirtualMachine~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/labs/methods/get'
          - $ref: '#/components/x-stackQL-resources/labs/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/labs/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/labs/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/labs/methods/delete'
    operations:
      id: azure.dev_test_labs.operations
      name: operations
      title: operations
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevTestLab~1locations~1{locationName}~1operations~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    global_schedules:
      id: azure.dev_test_labs.global_schedules
      name: global_schedules
      title: global_schedules
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DevTestLab~1schedules~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1schedules~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1schedules~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1schedules~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1schedules~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1schedules~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1schedules~1{name}~1execute~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retarget:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1schedules~1{name}~1retarget~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/global_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/global_schedules/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/global_schedules/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/global_schedules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/global_schedules/methods/delete'
    artifact_sources:
      id: azure.dev_test_labs.artifact_sources
      name: artifact_sources
      title: artifact_sources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifact_sources/methods/get'
          - $ref: '#/components/x-stackQL-resources/artifact_sources/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/artifact_sources/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/artifact_sources/methods/delete'
    arm_templates:
      id: azure.dev_test_labs.arm_templates
      name: arm_templates
      title: arm_templates
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{artifactSourceName}~1armtemplates~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{artifactSourceName}~1armtemplates~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/arm_templates/methods/get'
          - $ref: '#/components/x-stackQL-resources/arm_templates/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    artifacts:
      id: azure.dev_test_labs.artifacts
      name: artifacts
      title: artifacts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{artifactSourceName}~1artifacts~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{artifactSourceName}~1artifacts~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_arm_template:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1artifactsources~1{artifactSourceName}~1artifacts~1{name}~1generateArmTemplate~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/get'
          - $ref: '#/components/x-stackQL-resources/artifacts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    costs:
      id: azure.dev_test_labs.costs
      name: costs
      title: costs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1costs~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1costs~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/costs/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/costs/methods/create_or_update'
        update: []
        replace: []
        delete: []
    custom_images:
      id: azure.dev_test_labs.custom_images
      name: custom_images
      title: custom_images
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1customimages~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1customimages~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1customimages~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1customimages~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1customimages~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_images/methods/delete'
    formulas:
      id: azure.dev_test_labs.formulas
      name: formulas
      title: formulas
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1formulas~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1formulas~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1formulas~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1formulas~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1formulas~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/formulas/methods/get'
          - $ref: '#/components/x-stackQL-resources/formulas/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/formulas/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/formulas/methods/delete'
    gallery_images:
      id: azure.dev_test_labs.gallery_images
      name: gallery_images
      title: gallery_images
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1galleryimages~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    notification_channels:
      id: azure.dev_test_labs.notification_channels
      name: notification_channels
      title: notification_channels
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1notificationchannels~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1notificationchannels~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1notificationchannels~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1notificationchannels~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1notificationchannels~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        notify:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1notificationchannels~1{name}~1notify~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/get'
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/delete'
    policy_sets:
      id: azure.dev_test_labs.policy_sets
      name: policy_sets
      title: policy_sets
      methods:
        evaluate_policies:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1policysets~1{name}~1evaluatePolicies~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    policies:
      id: azure.dev_test_labs.policies
      name: policies
      title: policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1policysets~1{policySetName}~1policies~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1policysets~1{policySetName}~1policies~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1policysets~1{policySetName}~1policies~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1policysets~1{policySetName}~1policies~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1policysets~1{policySetName}~1policies~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/policies/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/policies/methods/delete'
    schedules:
      id: azure.dev_test_labs.schedules
      name: schedules
      title: schedules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1schedules~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1schedules~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1schedules~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1schedules~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1schedules~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1schedules~1{name}~1execute~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/schedules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/schedules/methods/delete'
    schedules_applicable:
      id: azure.dev_test_labs.schedules_applicable
      name: schedules_applicable
      title: schedules_applicable
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1schedules~1{name}~1listApplicable~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/schedules_applicable/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    service_runners:
      id: azure.dev_test_labs.service_runners
      name: service_runners
      title: service_runners
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1servicerunners~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1servicerunners~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1servicerunners~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_runners/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_runners/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_runners/methods/delete'
    users:
      id: azure.dev_test_labs.users
      name: users
      title: users
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get'
          - $ref: '#/components/x-stackQL-resources/users/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete'
    disks:
      id: azure.dev_test_labs.disks
      name: disks
      title: disks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1disks~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1disks~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1disks~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1disks~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1disks~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        attach:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1disks~1{name}~1attach~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        detach:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1disks~1{name}~1detach~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disks/methods/get'
          - $ref: '#/components/x-stackQL-resources/disks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/disks/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/disks/methods/delete'
    environments:
      id: azure.dev_test_labs.environments
      name: environments
      title: environments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1environments~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1environments~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1environments~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1environments~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1environments~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/environments/methods/get'
          - $ref: '#/components/x-stackQL-resources/environments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete'
    secrets:
      id: azure.dev_test_labs.secrets
      name: secrets
      title: secrets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1secrets~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1secrets~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1secrets~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1secrets~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1secrets~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/get'
          - $ref: '#/components/x-stackQL-resources/secrets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/secrets/methods/delete'
    service_fabrics:
      id: azure.dev_test_labs.service_fabrics
      name: service_fabrics
      title: service_fabrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{name}~1start~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{name}~1stop~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_fabrics/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_fabrics/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_fabrics/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_fabrics/methods/delete'
    service_fabrics_applicable_schedules:
      id: azure.dev_test_labs.service_fabrics_applicable_schedules
      name: service_fabrics_applicable_schedules
      title: service_fabrics_applicable_schedules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{name}~1listApplicableSchedules~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_fabrics_applicable_schedules/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    service_fabric_schedules:
      id: azure.dev_test_labs.service_fabric_schedules
      name: service_fabric_schedules
      title: service_fabric_schedules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{serviceFabricName}~1schedules~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{serviceFabricName}~1schedules~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{serviceFabricName}~1schedules~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{serviceFabricName}~1schedules~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{serviceFabricName}~1schedules~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1users~1{userName}~1servicefabrics~1{serviceFabricName}~1schedules~1{name}~1execute~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/service_fabric_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/service_fabric_schedules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_fabric_schedules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/service_fabric_schedules/methods/delete'
    virtual_machines:
      id: azure.dev_test_labs.virtual_machines
      name: virtual_machines
      title: virtual_machines
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_data_disk:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1addDataDisk~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        apply_artifacts:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1applyArtifacts~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        claim:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1claim~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        detach_data_disk:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1detachDataDisk~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1redeploy~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resize:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1resize~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1restart~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1start~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1stop~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        transfer_disks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1transferDisks~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        un_claim:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1unClaim~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/delete'
    virtual_machines_rdp_file_contents:
      id: azure.dev_test_labs.virtual_machines_rdp_file_contents
      name: virtual_machines_rdp_file_contents
      title: virtual_machines_rdp_file_contents
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1getRdpFileContents~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines_rdp_file_contents/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    virtual_machines_applicable_schedules:
      id: azure.dev_test_labs.virtual_machines_applicable_schedules
      name: virtual_machines_applicable_schedules
      title: virtual_machines_applicable_schedules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{name}~1listApplicableSchedules~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines_applicable_schedules/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    virtual_machine_schedules:
      id: azure.dev_test_labs.virtual_machine_schedules
      name: virtual_machine_schedules
      title: virtual_machine_schedules
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{virtualMachineName}~1schedules~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{virtualMachineName}~1schedules~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{virtualMachineName}~1schedules~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{virtualMachineName}~1schedules~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{virtualMachineName}~1schedules~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        execute:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualmachines~1{virtualMachineName}~1schedules~1{name}~1execute~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_schedules/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_schedules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_schedules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_schedules/methods/delete'
    virtual_networks:
      id: azure.dev_test_labs.virtual_networks
      name: virtual_networks
      title: virtual_networks
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualnetworks~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualnetworks~1{name}~1?api-version=2018-09-15/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualnetworks~1{name}~1?api-version=2018-09-15/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualnetworks~1{name}~1?api-version=2018-09-15/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{labName}~1virtualnetworks~1{name}~1?api-version=2018-09-15/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_networks/methods/delete'
    labs_environment:
      id: azure.dev_test_labs.labs_environment
      name: labs_environment
      title: labs_environment
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1createEnvironment~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/labs_environment/methods/create'
        update: []
        replace: []
        delete: []
    labs_vhds:
      id: azure.dev_test_labs.labs_vhds
      name: labs_vhds
      title: labs_vhds
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DevTestLab~1labs~1{name}~1listVhds~1?api-version=2018-09-15/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/labs_vhds/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_labs:
      id: azure.dev_test_labs.vw_labs
      name: vw_labs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.defaultStorageAccount') as default_storage_account,
              JSON_EXTRACT(properties, '$.defaultPremiumStorageAccount') as default_premium_storage_account,
              JSON_EXTRACT(properties, '$.artifactsStorageAccount') as artifacts_storage_account,
              JSON_EXTRACT(properties, '$.premiumDataDiskStorageAccount') as premium_data_disk_storage_account,
              JSON_EXTRACT(properties, '$.vaultName') as vault_name,
              JSON_EXTRACT(properties, '$.labStorageType') as lab_storage_type,
              JSON_EXTRACT(properties, '$.mandatoryArtifactsResourceIdsLinux') as mandatory_artifacts_resource_ids_linux,
              JSON_EXTRACT(properties, '$.mandatoryArtifactsResourceIdsWindows') as mandatory_artifacts_resource_ids_windows,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.premiumDataDisks') as premium_data_disks,
              JSON_EXTRACT(properties, '$.environmentPermission') as environment_permission,
              JSON_EXTRACT(properties, '$.announcement') as announcement,
              JSON_EXTRACT(properties, '$.support') as support,
              JSON_EXTRACT(properties, '$.vmCreationResourceGroup') as vm_creation_resource_group,
              JSON_EXTRACT(properties, '$.publicIpId') as public_ip_id,
              JSON_EXTRACT(properties, '$.loadBalancerId') as load_balancer_id,
              JSON_EXTRACT(properties, '$.networkSecurityGroupId') as network_security_group_id,
              JSON_EXTRACT(properties, '$.extendedProperties') as extended_properties,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              name
              FROM azure.dev_test_labs.labs
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.defaultStorageAccount') as default_storage_account,
                JSON_EXTRACT(properties, '$.defaultPremiumStorageAccount') as default_premium_storage_account,
                JSON_EXTRACT(properties, '$.artifactsStorageAccount') as artifacts_storage_account,
                JSON_EXTRACT(properties, '$.premiumDataDiskStorageAccount') as premium_data_disk_storage_account,
                JSON_EXTRACT(properties, '$.vaultName') as vault_name,
                JSON_EXTRACT(properties, '$.labStorageType') as lab_storage_type,
                JSON_EXTRACT(properties, '$.mandatoryArtifactsResourceIdsLinux') as mandatory_artifacts_resource_ids_linux,
                JSON_EXTRACT(properties, '$.mandatoryArtifactsResourceIdsWindows') as mandatory_artifacts_resource_ids_windows,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.premiumDataDisks') as premium_data_disks,
                JSON_EXTRACT(properties, '$.environmentPermission') as environment_permission,
                JSON_EXTRACT(properties, '$.announcement') as announcement,
                JSON_EXTRACT(properties, '$.support') as support,
                JSON_EXTRACT(properties, '$.vmCreationResourceGroup') as vm_creation_resource_group,
                JSON_EXTRACT(properties, '$.publicIpId') as public_ip_id,
                JSON_EXTRACT(properties, '$.loadBalancerId') as load_balancer_id,
                JSON_EXTRACT(properties, '$.networkSecurityGroupId') as network_security_group_id,
                JSON_EXTRACT(properties, '$.extendedProperties') as extended_properties,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                name
                FROM azure.dev_test_labs.labs
                WHERE subscriptionId = 'replace-me';
    vw_global_schedules:
      id: azure.dev_test_labs.vw_global_schedules
      name: vw_global_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.taskType') as task_type,
              JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
              JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
              JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
              JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
              JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              name
              FROM azure.dev_test_labs.global_schedules
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.taskType') as task_type,
                JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
                JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
                JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
                JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
                JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                name
                FROM azure.dev_test_labs.global_schedules
                WHERE subscriptionId = 'replace-me';
    vw_artifact_sources:
      id: azure.dev_test_labs.vw_artifact_sources
      name: vw_artifact_sources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.uri') as uri,
              JSON_EXTRACT(properties, '$.sourceType') as source_type,
              JSON_EXTRACT(properties, '$.folderPath') as folder_path,
              JSON_EXTRACT(properties, '$.armTemplateFolderPath') as arm_template_folder_path,
              JSON_EXTRACT(properties, '$.branchRef') as branch_ref,
              JSON_EXTRACT(properties, '$.securityToken') as security_token,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.artifact_sources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.uri') as uri,
                JSON_EXTRACT(properties, '$.sourceType') as source_type,
                JSON_EXTRACT(properties, '$.folderPath') as folder_path,
                JSON_EXTRACT(properties, '$.armTemplateFolderPath') as arm_template_folder_path,
                JSON_EXTRACT(properties, '$.branchRef') as branch_ref,
                JSON_EXTRACT(properties, '$.securityToken') as security_token,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.artifact_sources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_arm_templates:
      id: azure.dev_test_labs.vw_arm_templates
      name: vw_arm_templates
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.displayName') as display_name,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.publisher') as publisher,
              JSON_EXTRACT(properties, '$.icon') as icon,
              JSON_EXTRACT(properties, '$.contents') as contents,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.parametersValueFilesInfo') as parameters_value_files_info,
              JSON_EXTRACT(properties, '$.enabled') as enabled,
              subscriptionId,
              resourceGroupName,
              labName,
              artifactSourceName,
              name
              FROM azure.dev_test_labs.arm_templates
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND artifactSourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.displayName') as display_name,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.publisher') as publisher,
                JSON_EXTRACT(properties, '$.icon') as icon,
                JSON_EXTRACT(properties, '$.contents') as contents,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.parametersValueFilesInfo') as parameters_value_files_info,
                JSON_EXTRACT(properties, '$.enabled') as enabled,
                subscriptionId,
                resourceGroupName,
                labName,
                artifactSourceName,
                name
                FROM azure.dev_test_labs.arm_templates
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND artifactSourceName = 'replace-me';
    vw_artifacts:
      id: azure.dev_test_labs.vw_artifacts
      name: vw_artifacts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.title') as title,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.publisher') as publisher,
              JSON_EXTRACT(properties, '$.filePath') as file_path,
              JSON_EXTRACT(properties, '$.icon') as icon,
              JSON_EXTRACT(properties, '$.targetOsType') as target_os_type,
              JSON_EXTRACT(properties, '$.parameters') as parameters,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              subscriptionId,
              resourceGroupName,
              labName,
              artifactSourceName,
              name
              FROM azure.dev_test_labs.artifacts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND artifactSourceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.title') as title,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.publisher') as publisher,
                JSON_EXTRACT(properties, '$.filePath') as file_path,
                JSON_EXTRACT(properties, '$.icon') as icon,
                JSON_EXTRACT(properties, '$.targetOsType') as target_os_type,
                JSON_EXTRACT(properties, '$.parameters') as parameters,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                subscriptionId,
                resourceGroupName,
                labName,
                artifactSourceName,
                name
                FROM azure.dev_test_labs.artifacts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND artifactSourceName = 'replace-me';
    vw_costs:
      id: azure.dev_test_labs.vw_costs
      name: vw_costs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.targetCost') as target_cost,
              JSON_EXTRACT(properties, '$.labCostSummary') as lab_cost_summary,
              JSON_EXTRACT(properties, '$.labCostDetails') as lab_cost_details,
              JSON_EXTRACT(properties, '$.resourceCosts') as resource_costs,
              JSON_EXTRACT(properties, '$.currencyCode') as currency_code,
              JSON_EXTRACT(properties, '$.startDateTime') as start_date_time,
              JSON_EXTRACT(properties, '$.endDateTime') as end_date_time,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.costs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND name = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.targetCost') as target_cost,
                JSON_EXTRACT(properties, '$.labCostSummary') as lab_cost_summary,
                JSON_EXTRACT(properties, '$.labCostDetails') as lab_cost_details,
                JSON_EXTRACT(properties, '$.resourceCosts') as resource_costs,
                JSON_EXTRACT(properties, '$.currencyCode') as currency_code,
                JSON_EXTRACT(properties, '$.startDateTime') as start_date_time,
                JSON_EXTRACT(properties, '$.endDateTime') as end_date_time,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.costs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND name = 'replace-me';
    vw_custom_images:
      id: azure.dev_test_labs.vw_custom_images
      name: vw_custom_images
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.vm') as vm,
              JSON_EXTRACT(properties, '$.vhd') as vhd,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.author') as author,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.managedImageId') as managed_image_id,
              JSON_EXTRACT(properties, '$.managedSnapshotId') as managed_snapshot_id,
              JSON_EXTRACT(properties, '$.dataDiskStorageInfo') as data_disk_storage_info,
              JSON_EXTRACT(properties, '$.customImagePlan') as custom_image_plan,
              JSON_EXTRACT(properties, '$.isPlanAuthorized') as is_plan_authorized,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.custom_images
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.vm') as vm,
                JSON_EXTRACT(properties, '$.vhd') as vhd,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.author') as author,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.managedImageId') as managed_image_id,
                JSON_EXTRACT(properties, '$.managedSnapshotId') as managed_snapshot_id,
                JSON_EXTRACT(properties, '$.dataDiskStorageInfo') as data_disk_storage_info,
                JSON_EXTRACT(properties, '$.customImagePlan') as custom_image_plan,
                JSON_EXTRACT(properties, '$.isPlanAuthorized') as is_plan_authorized,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.custom_images
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_formulas:
      id: azure.dev_test_labs.vw_formulas
      name: vw_formulas
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.author') as author,
              JSON_EXTRACT(properties, '$.osType') as os_type,
              JSON_EXTRACT(properties, '$.creationDate') as creation_date,
              JSON_EXTRACT(properties, '$.formulaContent') as formula_content,
              JSON_EXTRACT(properties, '$.vm') as vm,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.formulas
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.author') as author,
                JSON_EXTRACT(properties, '$.osType') as os_type,
                JSON_EXTRACT(properties, '$.creationDate') as creation_date,
                JSON_EXTRACT(properties, '$.formulaContent') as formula_content,
                JSON_EXTRACT(properties, '$.vm') as vm,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.formulas
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_notification_channels:
      id: azure.dev_test_labs.vw_notification_channels
      name: vw_notification_channels
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.webHookUrl') as web_hook_url,
              JSON_EXTRACT(properties, '$.emailRecipient') as email_recipient,
              JSON_EXTRACT(properties, '$.notificationLocale') as notification_locale,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.events') as events,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.notification_channels
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.webHookUrl') as web_hook_url,
                JSON_EXTRACT(properties, '$.emailRecipient') as email_recipient,
                JSON_EXTRACT(properties, '$.notificationLocale') as notification_locale,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.events') as events,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.notification_channels
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_policies:
      id: azure.dev_test_labs.vw_policies
      name: vw_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.factName') as fact_name,
              JSON_EXTRACT(properties, '$.factData') as fact_data,
              JSON_EXTRACT(properties, '$.threshold') as threshold,
              JSON_EXTRACT(properties, '$.evaluatorType') as evaluator_type,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              policySetName,
              name
              FROM azure.dev_test_labs.policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND policySetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.factName') as fact_name,
                JSON_EXTRACT(properties, '$.factData') as fact_data,
                JSON_EXTRACT(properties, '$.threshold') as threshold,
                JSON_EXTRACT(properties, '$.evaluatorType') as evaluator_type,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                policySetName,
                name
                FROM azure.dev_test_labs.policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND policySetName = 'replace-me';
    vw_schedules:
      id: azure.dev_test_labs.vw_schedules
      name: vw_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.taskType') as task_type,
              JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
              JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
              JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
              JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
              JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.taskType') as task_type,
                JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
                JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
                JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
                JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
                JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_users:
      id: azure.dev_test_labs.vw_users
      name: vw_users
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.identity') as identity,
              JSON_EXTRACT(properties, '$.secretStore') as secret_store,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.users
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.identity') as identity,
                JSON_EXTRACT(properties, '$.secretStore') as secret_store,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.users
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_disks:
      id: azure.dev_test_labs.vw_disks
      name: vw_disks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.diskType') as disk_type,
              JSON_EXTRACT(properties, '$.diskSizeGiB') as disk_size_gib,
              JSON_EXTRACT(properties, '$.leasedByLabVmId') as leased_by_lab_vm_id,
              JSON_EXTRACT(properties, '$.diskBlobName') as disk_blob_name,
              JSON_EXTRACT(properties, '$.diskUri') as disk_uri,
              JSON_EXTRACT(properties, '$.storageAccountId') as storage_account_id,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.hostCaching') as host_caching,
              JSON_EXTRACT(properties, '$.managedDiskId') as managed_disk_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              userName,
              name
              FROM azure.dev_test_labs.disks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.diskType') as disk_type,
                JSON_EXTRACT(properties, '$.diskSizeGiB') as disk_size_gib,
                JSON_EXTRACT(properties, '$.leasedByLabVmId') as leased_by_lab_vm_id,
                JSON_EXTRACT(properties, '$.diskBlobName') as disk_blob_name,
                JSON_EXTRACT(properties, '$.diskUri') as disk_uri,
                JSON_EXTRACT(properties, '$.storageAccountId') as storage_account_id,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.hostCaching') as host_caching,
                JSON_EXTRACT(properties, '$.managedDiskId') as managed_disk_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                userName,
                name
                FROM azure.dev_test_labs.disks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
    vw_environments:
      id: azure.dev_test_labs.vw_environments
      name: vw_environments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.deploymentProperties') as deployment_properties,
              JSON_EXTRACT(properties, '$.armTemplateDisplayName') as arm_template_display_name,
              JSON_EXTRACT(properties, '$.resourceGroupId') as resource_group_id,
              JSON_EXTRACT(properties, '$.createdByUser') as created_by_user,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              userName,
              name
              FROM azure.dev_test_labs.environments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.deploymentProperties') as deployment_properties,
                JSON_EXTRACT(properties, '$.armTemplateDisplayName') as arm_template_display_name,
                JSON_EXTRACT(properties, '$.resourceGroupId') as resource_group_id,
                JSON_EXTRACT(properties, '$.createdByUser') as created_by_user,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                userName,
                name
                FROM azure.dev_test_labs.environments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
    vw_secrets:
      id: azure.dev_test_labs.vw_secrets
      name: vw_secrets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.value') as value,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              userName,
              name
              FROM azure.dev_test_labs.secrets
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.value') as value,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                userName,
                name
                FROM azure.dev_test_labs.secrets
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
    vw_service_fabrics:
      id: azure.dev_test_labs.vw_service_fabrics
      name: vw_service_fabrics
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.externalServiceFabricId') as external_service_fabric_id,
              JSON_EXTRACT(properties, '$.environmentId') as environment_id,
              JSON_EXTRACT(properties, '$.applicableSchedule') as applicable_schedule,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              userName,
              name
              FROM azure.dev_test_labs.service_fabrics
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.externalServiceFabricId') as external_service_fabric_id,
                JSON_EXTRACT(properties, '$.environmentId') as environment_id,
                JSON_EXTRACT(properties, '$.applicableSchedule') as applicable_schedule,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                userName,
                name
                FROM azure.dev_test_labs.service_fabrics
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me';
    vw_service_fabrics_applicable_schedules:
      id: azure.dev_test_labs.vw_service_fabrics_applicable_schedules
      name: vw_service_fabrics_applicable_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.labVmsShutdown') as lab_vms_shutdown,
              JSON_EXTRACT(properties, '$.labVmsStartup') as lab_vms_startup,
              subscriptionId,
              resourceGroupName,
              labName,
              userName,
              name
              FROM azure.dev_test_labs.service_fabrics_applicable_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me' AND name = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.labVmsShutdown') as lab_vms_shutdown,
                JSON_EXTRACT(properties, '$.labVmsStartup') as lab_vms_startup,
                subscriptionId,
                resourceGroupName,
                labName,
                userName,
                name
                FROM azure.dev_test_labs.service_fabrics_applicable_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me' AND name = 'replace-me';
    vw_service_fabric_schedules:
      id: azure.dev_test_labs.vw_service_fabric_schedules
      name: vw_service_fabric_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.taskType') as task_type,
              JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
              JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
              JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
              JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
              JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              userName,
              serviceFabricName,
              name
              FROM azure.dev_test_labs.service_fabric_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me' AND serviceFabricName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.taskType') as task_type,
                JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
                JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
                JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
                JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
                JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                userName,
                serviceFabricName,
                name
                FROM azure.dev_test_labs.service_fabric_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND userName = 'replace-me' AND serviceFabricName = 'replace-me';
    vw_virtual_machines:
      id: azure.dev_test_labs.vw_virtual_machines
      name: vw_virtual_machines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.notes') as notes,
              JSON_EXTRACT(properties, '$.ownerObjectId') as owner_object_id,
              JSON_EXTRACT(properties, '$.ownerUserPrincipalName') as owner_user_principal_name,
              JSON_EXTRACT(properties, '$.createdByUserId') as created_by_user_id,
              JSON_EXTRACT(properties, '$.createdByUser') as created_by_user,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.computeId') as compute_id,
              JSON_EXTRACT(properties, '$.customImageId') as custom_image_id,
              JSON_EXTRACT(properties, '$.osType') as os_type,
              JSON_EXTRACT(properties, '$.size') as size,
              JSON_EXTRACT(properties, '$.userName') as user_name,
              JSON_EXTRACT(properties, '$.password') as password,
              JSON_EXTRACT(properties, '$.sshKey') as ssh_key,
              JSON_EXTRACT(properties, '$.isAuthenticationWithSshKey') as is_authentication_with_ssh_key,
              JSON_EXTRACT(properties, '$.fqdn') as fqdn,
              JSON_EXTRACT(properties, '$.labSubnetName') as lab_subnet_name,
              JSON_EXTRACT(properties, '$.labVirtualNetworkId') as lab_virtual_network_id,
              JSON_EXTRACT(properties, '$.disallowPublicIpAddress') as disallow_public_ip_address,
              JSON_EXTRACT(properties, '$.artifacts') as artifacts,
              JSON_EXTRACT(properties, '$.artifactDeploymentStatus') as artifact_deployment_status,
              JSON_EXTRACT(properties, '$.galleryImageReference') as gallery_image_reference,
              JSON_EXTRACT(properties, '$.planId') as plan_id,
              JSON_EXTRACT(properties, '$.computeVm') as compute_vm,
              JSON_EXTRACT(properties, '$.networkInterface') as network_interface,
              JSON_EXTRACT(properties, '$.applicableSchedule') as applicable_schedule,
              JSON_EXTRACT(properties, '$.expirationDate') as expiration_date,
              JSON_EXTRACT(properties, '$.allowClaim') as allow_claim,
              JSON_EXTRACT(properties, '$.storageType') as storage_type,
              JSON_EXTRACT(properties, '$.virtualMachineCreationSource') as virtual_machine_creation_source,
              JSON_EXTRACT(properties, '$.environmentId') as environment_id,
              JSON_EXTRACT(properties, '$.dataDiskParameters') as data_disk_parameters,
              JSON_EXTRACT(properties, '$.scheduleParameters') as schedule_parameters,
              JSON_EXTRACT(properties, '$.lastKnownPowerState') as last_known_power_state,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.virtual_machines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.notes') as notes,
                JSON_EXTRACT(properties, '$.ownerObjectId') as owner_object_id,
                JSON_EXTRACT(properties, '$.ownerUserPrincipalName') as owner_user_principal_name,
                JSON_EXTRACT(properties, '$.createdByUserId') as created_by_user_id,
                JSON_EXTRACT(properties, '$.createdByUser') as created_by_user,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.computeId') as compute_id,
                JSON_EXTRACT(properties, '$.customImageId') as custom_image_id,
                JSON_EXTRACT(properties, '$.osType') as os_type,
                JSON_EXTRACT(properties, '$.size') as size,
                JSON_EXTRACT(properties, '$.userName') as user_name,
                JSON_EXTRACT(properties, '$.password') as password,
                JSON_EXTRACT(properties, '$.sshKey') as ssh_key,
                JSON_EXTRACT(properties, '$.isAuthenticationWithSshKey') as is_authentication_with_ssh_key,
                JSON_EXTRACT(properties, '$.fqdn') as fqdn,
                JSON_EXTRACT(properties, '$.labSubnetName') as lab_subnet_name,
                JSON_EXTRACT(properties, '$.labVirtualNetworkId') as lab_virtual_network_id,
                JSON_EXTRACT(properties, '$.disallowPublicIpAddress') as disallow_public_ip_address,
                JSON_EXTRACT(properties, '$.artifacts') as artifacts,
                JSON_EXTRACT(properties, '$.artifactDeploymentStatus') as artifact_deployment_status,
                JSON_EXTRACT(properties, '$.galleryImageReference') as gallery_image_reference,
                JSON_EXTRACT(properties, '$.planId') as plan_id,
                JSON_EXTRACT(properties, '$.computeVm') as compute_vm,
                JSON_EXTRACT(properties, '$.networkInterface') as network_interface,
                JSON_EXTRACT(properties, '$.applicableSchedule') as applicable_schedule,
                JSON_EXTRACT(properties, '$.expirationDate') as expiration_date,
                JSON_EXTRACT(properties, '$.allowClaim') as allow_claim,
                JSON_EXTRACT(properties, '$.storageType') as storage_type,
                JSON_EXTRACT(properties, '$.virtualMachineCreationSource') as virtual_machine_creation_source,
                JSON_EXTRACT(properties, '$.environmentId') as environment_id,
                JSON_EXTRACT(properties, '$.dataDiskParameters') as data_disk_parameters,
                JSON_EXTRACT(properties, '$.scheduleParameters') as schedule_parameters,
                JSON_EXTRACT(properties, '$.lastKnownPowerState') as last_known_power_state,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.virtual_machines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
    vw_virtual_machines_applicable_schedules:
      id: azure.dev_test_labs.vw_virtual_machines_applicable_schedules
      name: vw_virtual_machines_applicable_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.labVmsShutdown') as lab_vms_shutdown,
              JSON_EXTRACT(properties, '$.labVmsStartup') as lab_vms_startup,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.virtual_machines_applicable_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND name = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.labVmsShutdown') as lab_vms_shutdown,
                JSON_EXTRACT(properties, '$.labVmsStartup') as lab_vms_startup,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.virtual_machines_applicable_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND name = 'replace-me';
    vw_virtual_machine_schedules:
      id: azure.dev_test_labs.vw_virtual_machine_schedules
      name: vw_virtual_machine_schedules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.status') as status,
              JSON_EXTRACT(properties, '$.taskType') as task_type,
              JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
              JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
              JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
              JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
              JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              virtualMachineName,
              name
              FROM azure.dev_test_labs.virtual_machine_schedules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND virtualMachineName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.status') as status,
                JSON_EXTRACT(properties, '$.taskType') as task_type,
                JSON_EXTRACT(properties, '$.weeklyRecurrence') as weekly_recurrence,
                JSON_EXTRACT(properties, '$.dailyRecurrence') as daily_recurrence,
                JSON_EXTRACT(properties, '$.hourlyRecurrence') as hourly_recurrence,
                JSON_EXTRACT(properties, '$.timeZoneId') as time_zone_id,
                JSON_EXTRACT(properties, '$.notificationSettings') as notification_settings,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.targetResourceId') as target_resource_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                virtualMachineName,
                name
                FROM azure.dev_test_labs.virtual_machine_schedules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me' AND virtualMachineName = 'replace-me';
    vw_virtual_networks:
      id: azure.dev_test_labs.vw_virtual_networks
      name: vw_virtual_networks
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.allowedSubnets') as allowed_subnets,
              JSON_EXTRACT(properties, '$.description') as description,
              JSON_EXTRACT(properties, '$.externalProviderResourceId') as external_provider_resource_id,
              JSON_EXTRACT(properties, '$.externalSubnets') as external_subnets,
              JSON_EXTRACT(properties, '$.subnetOverrides') as subnet_overrides,
              JSON_EXTRACT(properties, '$.createdDate') as created_date,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
              subscriptionId,
              resourceGroupName,
              labName,
              name
              FROM azure.dev_test_labs.virtual_networks
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.allowedSubnets') as allowed_subnets,
                JSON_EXTRACT(properties, '$.description') as description,
                JSON_EXTRACT(properties, '$.externalProviderResourceId') as external_provider_resource_id,
                JSON_EXTRACT(properties, '$.externalSubnets') as external_subnets,
                JSON_EXTRACT(properties, '$.subnetOverrides') as subnet_overrides,
                JSON_EXTRACT(properties, '$.createdDate') as created_date,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.uniqueIdentifier') as unique_identifier,
                subscriptionId,
                resourceGroupName,
                labName,
                name
                FROM azure.dev_test_labs.virtual_networks
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND labName = 'replace-me';
paths:
  /providers/Microsoft.DevTestLab/operations/?api-version=2018-09-15:
    get:
      tags:
        - ProviderOperations
      description: Result of the request to list REST API operations
      operationId: ProviderOperations_List
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationResult'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs/?api-version=2018-09-15:
    get:
      tags:
        - Labs
      description: List labs in a subscription.
      operationId: Labs_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=defaultStorageAccount)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Lab'
  /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/locations/{locationName}/operations/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Operations
      description: Get operation.
      operationId: Operations_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationName'
        - name: name
          in: path
          description: The name of the operation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules/?api-version=2018-09-15:
    get:
      tags:
        - GlobalSchedules
      description: List schedules in a subscription.
      operationId: GlobalSchedules_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Schedule'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/?api-version=2018-09-15:
    get:
      tags:
        - Labs
      description: List labs in a resource group.
      operationId: Labs_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=defaultStorageAccount)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Lab'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/?api-version=2018-09-15:
    get:
      tags:
        - ArtifactSources
      description: List artifact sources in a given lab.
      operationId: ArtifactSources_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=displayName)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSourceList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/ArtifactSource'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates/?api-version=2018-09-15:
    get:
      tags:
        - ArmTemplates
      description: List azure resource manager templates in a given artifact source.
      operationId: ArmTemplates_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: artifactSourceName
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=displayName)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmTemplateList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/ArmTemplate'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates/{name}/?api-version=2018-09-15:
    get:
      tags:
        - ArmTemplates
      description: Get azure resource manager template.
      operationId: ArmTemplates_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: artifactSourceName
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the azure resource manager template.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=displayName)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmTemplate'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/?api-version=2018-09-15:
    get:
      tags:
        - Artifacts
      description: List artifacts in a given artifact source.
      operationId: Artifacts_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: artifactSourceName
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=title)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Artifact'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Artifacts
      description: Get artifact.
      operationId: Artifacts_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: artifactSourceName
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the artifact.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=title)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}/generateArmTemplate/?api-version=2018-09-15:
    post:
      tags:
        - Artifacts
      description: Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.
      operationId: Artifacts_GenerateArmTemplate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: artifactSourceName
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the artifact.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Parameters for generating an ARM template for deploying artifacts.
        required: true
        x-ms-requestBody-name: generateArmTemplateRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateArmTemplateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmTemplateInfo'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}/?api-version=2018-09-15:
    get:
      tags:
        - ArtifactSources
      description: Get artifact source.
      operationId: ArtifactSources_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=displayName)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ArtifactSources
      description: Create or replace an existing artifact source.
      operationId: ArtifactSources_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties of an artifact source.
        required: true
        x-ms-requestBody-name: artifactSource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ArtifactSources
      description: Delete artifact source.
      operationId: ArtifactSources_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ArtifactSources
      description: Allows modifying tags of artifact sources. All other properties will be ignored.
      operationId: ArtifactSources_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the artifact source.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties of an artifact source.
        required: true
        x-ms-requestBody-name: artifactSource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSourceFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Costs
      description: Get cost.
      operationId: Costs_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the cost.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($expand=labCostDetails)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabCost'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Costs
      description: Create or replace an existing cost.
      operationId: Costs_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the cost.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A cost item.
        required: true
        x-ms-requestBody-name: labCost
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabCost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabCost'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabCost'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/?api-version=2018-09-15:
    get:
      tags:
        - CustomImages
      description: List custom images in a given lab.
      operationId: CustomImages_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=vm)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImageList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/CustomImage'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}/?api-version=2018-09-15:
    get:
      tags:
        - CustomImages
      description: Get custom image.
      operationId: CustomImages_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the custom image.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=vm)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImage'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - CustomImages
      description: Create or replace an existing custom image. This operation can take a while to complete.
      operationId: CustomImages_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the custom image.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A custom image.
        required: true
        x-ms-requestBody-name: customImage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomImage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImage'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImage'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - CustomImages
      description: Delete custom image. This operation can take a while to complete.
      operationId: CustomImages_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the custom image.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - CustomImages
      description: Allows modifying tags of custom images. All other properties will be ignored.
      operationId: CustomImages_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the custom image.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A custom image.
        required: true
        x-ms-requestBody-name: customImage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomImageFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImage'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/?api-version=2018-09-15:
    get:
      tags:
        - Formulas
      description: List formulas in a given lab.
      operationId: Formulas_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=description)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormulaList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Formula'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Formulas
      description: Get formula.
      operationId: Formulas_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the formula.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=description)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formula'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Formulas
      description: Create or replace an existing formula. This operation can take a while to complete.
      operationId: Formulas_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the formula.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A formula for creating a VM, specifying an image base and other parameters
        required: true
        x-ms-requestBody-name: formula
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Formula'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formula'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formula'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Formulas
      description: Delete formula.
      operationId: Formulas_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the formula.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Formulas
      description: Allows modifying tags of formulas. All other properties will be ignored.
      operationId: Formulas_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the formula.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A formula for creating a VM, specifying an image base and other parameters
        required: true
        x-ms-requestBody-name: formula
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormulaFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formula'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/galleryimages/?api-version=2018-09-15:
    get:
      tags:
        - GalleryImages
      description: List gallery images in a given lab.
      operationId: GalleryImages_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=author)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/GalleryImage'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/?api-version=2018-09-15:
    get:
      tags:
        - NotificationChannels
      description: List notification channels in a given lab.
      operationId: NotificationChannels_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=webHookUrl)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannelList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/NotificationChannel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}/?api-version=2018-09-15:
    get:
      tags:
        - NotificationChannels
      description: Get notification channel.
      operationId: NotificationChannels_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the notification channel.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=webHookUrl)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - NotificationChannels
      description: Create or replace an existing notification channel.
      operationId: NotificationChannels_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the notification channel.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A notification.
        required: true
        x-ms-requestBody-name: notificationChannel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - NotificationChannels
      description: Delete notification channel.
      operationId: NotificationChannels_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the notification channel.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - NotificationChannels
      description: Allows modifying tags of notification channels. All other properties will be ignored.
      operationId: NotificationChannels_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the notification channel.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A notification.
        required: true
        x-ms-requestBody-name: notificationChannel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannelFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}/notify/?api-version=2018-09-15:
    post:
      tags:
        - NotificationChannels
      description: Send notification to provided channel.
      operationId: NotificationChannels_Notify
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the notification channel.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties for generating a Notification.
        required: true
        x-ms-requestBody-name: notifyParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyParameters'
      responses:
        '200':
          description: OK
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{name}/evaluatePolicies/?api-version=2018-09-15:
    post:
      tags:
        - PolicySets
      description: Evaluates lab policy.
      operationId: PolicySets_EvaluatePolicies
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the policy set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request body for evaluating a policy set.
        required: true
        x-ms-requestBody-name: evaluatePoliciesRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluatePoliciesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluatePoliciesResponse'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/?api-version=2018-09-15:
    get:
      tags:
        - Policies
      description: List policies in a given policy set.
      operationId: Policies_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: policySetName
          in: path
          description: The name of the policy set.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=description)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Policy'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Policies
      description: Get policy.
      operationId: Policies_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: policySetName
          in: path
          description: The name of the policy set.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the policy.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=description)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Policies
      description: Create or replace an existing policy.
      operationId: Policies_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: policySetName
          in: path
          description: The name of the policy set.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A Policy.
        required: true
        x-ms-requestBody-name: policy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Policies
      description: Delete policy.
      operationId: Policies_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: policySetName
          in: path
          description: The name of the policy set.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Policies
      description: Allows modifying tags of policies. All other properties will be ignored.
      operationId: Policies_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: policySetName
          in: path
          description: The name of the policy set.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the policy.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A Policy.
        required: true
        x-ms-requestBody-name: policy
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/?api-version=2018-09-15:
    get:
      tags:
        - Schedules
      description: List schedules in a given lab.
      operationId: Schedules_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Schedule'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Schedules
      description: Get schedule.
      operationId: Schedules_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Schedules
      description: Create or replace an existing schedule.
      operationId: Schedules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Schedules
      description: Delete schedule.
      operationId: Schedules_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Schedules
      description: Allows modifying tags of schedules. All other properties will be ignored.
      operationId: Schedules_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute/?api-version=2018-09-15:
    post:
      tags:
        - Schedules
      description: Execute a schedule. This operation can take a while to complete.
      operationId: Schedules_Execute
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/listApplicable/?api-version=2018-09-15:
    post:
      tags:
        - Schedules
      description: Lists all applicable schedules
      operationId: Schedules_ListApplicable
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}/?api-version=2018-09-15:
    get:
      tags:
        - ServiceRunners
      description: Get service runner.
      operationId: ServiceRunners_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service runner.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRunner'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ServiceRunners
      description: Create or replace an existing service runner.
      operationId: ServiceRunners_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service runner.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A container for a managed identity to execute DevTest lab services.
        required: true
        x-ms-requestBody-name: serviceRunner
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRunner'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRunner'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRunner'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ServiceRunners
      description: Delete service runner.
      operationId: ServiceRunners_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service runner.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/?api-version=2018-09-15:
    get:
      tags:
        - Users
      description: List user profiles in a given lab.
      operationId: Users_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=identity)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/User'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Users
      description: Get user profile.
      operationId: Users_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=identity)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Users
      description: Create or replace an existing user profile. This operation can take a while to complete.
      operationId: Users_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Profile of a lab user.
        required: true
        x-ms-requestBody-name: user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Users
      description: Delete user profile. This operation can take a while to complete.
      operationId: Users_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Users
      description: Allows modifying tags of user profiles. All other properties will be ignored.
      operationId: Users_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Profile of a lab user.
        required: true
        x-ms-requestBody-name: user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/?api-version=2018-09-15:
    get:
      tags:
        - Disks
      description: List disks in a given user profile.
      operationId: Disks_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=diskType)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Disk'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Disks
      description: Get disk.
      operationId: Disks_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the disk.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=diskType)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Disks
      description: Create or replace an existing disk. This operation can take a while to complete.
      operationId: Disks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the disk.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A Disk.
        required: true
        x-ms-requestBody-name: disk
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disk'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Disks
      description: Delete disk. This operation can take a while to complete.
      operationId: Disks_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the disk.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Disks
      description: Allows modifying tags of disks. All other properties will be ignored.
      operationId: Disks_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the disk.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A Disk.
        required: true
        x-ms-requestBody-name: disk
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/attach/?api-version=2018-09-15:
    post:
      tags:
        - Disks
      description: Attach and create the lease of the disk to the virtual machine. This operation can take a while to complete.
      operationId: Disks_Attach
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the disk.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties of the disk to attach.
        required: true
        x-ms-requestBody-name: attachDiskProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDiskProperties'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/detach/?api-version=2018-09-15:
    post:
      tags:
        - Disks
      description: Detach and break the lease of the disk attached to the virtual machine. This operation can take a while to complete.
      operationId: Disks_Detach
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the disk.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties of the disk to detach.
        required: true
        x-ms-requestBody-name: detachDiskProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachDiskProperties'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/?api-version=2018-09-15:
    get:
      tags:
        - Environments
      description: List environments in a given user profile.
      operationId: Environments_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=deploymentProperties)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironmentList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DtlEnvironment'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Environments
      description: Get environment.
      operationId: Environments_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the environment.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=deploymentProperties)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironment'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Environments
      description: Create or replace an existing environment. This operation can take a while to complete.
      operationId: Environments_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the environment.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: An environment, which is essentially an ARM template deployment.
        required: true
        x-ms-requestBody-name: dtlEnvironment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtlEnvironment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironment'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironment'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Environments
      description: Delete environment. This operation can take a while to complete.
      operationId: Environments_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the environment.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Environments
      description: Allows modifying tags of environments. All other properties will be ignored.
      operationId: Environments_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the environment.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: An environment, which is essentially an ARM template deployment.
        required: true
        x-ms-requestBody-name: dtlEnvironment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtlEnvironmentFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironment'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/?api-version=2018-09-15:
    get:
      tags:
        - Secrets
      description: List secrets in a given user profile.
      operationId: Secrets_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=value)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Secret'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Secrets
      description: Get secret.
      operationId: Secrets_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the secret.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=value)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Secrets
      description: Create or replace an existing secret. This operation can take a while to complete.
      operationId: Secrets_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the secret.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A secret.
        required: true
        x-ms-requestBody-name: secret
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Secrets
      description: Delete secret.
      operationId: Secrets_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the secret.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Secrets
      description: Allows modifying tags of secrets. All other properties will be ignored.
      operationId: Secrets_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the secret.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A secret.
        required: true
        x-ms-requestBody-name: secret
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/?api-version=2018-09-15:
    get:
      tags:
        - ServiceFabrics
      description: List service fabrics in a given user profile.
      operationId: ServiceFabrics_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($expand=applicableSchedule)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFabricList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/ServiceFabric'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/?api-version=2018-09-15:
    get:
      tags:
        - ServiceFabrics
      description: Get service fabric.
      operationId: ServiceFabrics_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($expand=applicableSchedule)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFabric'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ServiceFabrics
      description: Create or replace an existing service fabric. This operation can take a while to complete.
      operationId: ServiceFabrics_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A Service Fabric.
        required: true
        x-ms-requestBody-name: serviceFabric
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFabric'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFabric'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFabric'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - ServiceFabrics
      description: Delete service fabric. This operation can take a while to complete.
      operationId: ServiceFabrics_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - ServiceFabrics
      description: Allows modifying tags of service fabrics. All other properties will be ignored.
      operationId: ServiceFabrics_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A Service Fabric.
        required: true
        x-ms-requestBody-name: serviceFabric
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFabricFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFabric'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/listApplicableSchedules/?api-version=2018-09-15:
    post:
      tags:
        - ServiceFabrics
      description: Lists the applicable start/stop schedules, if any.
      operationId: ServiceFabrics_ListApplicableSchedules
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableSchedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/start/?api-version=2018-09-15:
    post:
      tags:
        - ServiceFabrics
      description: Start a service fabric. This operation can take a while to complete.
      operationId: ServiceFabrics_Start
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{name}/stop/?api-version=2018-09-15:
    post:
      tags:
        - ServiceFabrics
      description: Stop a service fabric This operation can take a while to complete.
      operationId: ServiceFabrics_Stop
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/?api-version=2018-09-15:
    get:
      tags:
        - ServiceFabricSchedules
      description: List schedules in a given service fabric.
      operationId: ServiceFabricSchedules_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: serviceFabricName
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Schedule'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/{name}/?api-version=2018-09-15:
    get:
      tags:
        - ServiceFabricSchedules
      description: Get schedule.
      operationId: ServiceFabricSchedules_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: serviceFabricName
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - ServiceFabricSchedules
      description: Create or replace an existing schedule.
      operationId: ServiceFabricSchedules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: serviceFabricName
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ServiceFabricSchedules
      description: Delete schedule.
      operationId: ServiceFabricSchedules_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: serviceFabricName
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ServiceFabricSchedules
      description: Allows modifying tags of schedules. All other properties will be ignored.
      operationId: ServiceFabricSchedules_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: serviceFabricName
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/servicefabrics/{serviceFabricName}/schedules/{name}/execute/?api-version=2018-09-15:
    post:
      tags:
        - ServiceFabricSchedules
      description: Execute a schedule. This operation can take a while to complete.
      operationId: ServiceFabricSchedules_Execute
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: userName
          in: path
          description: The name of the user profile.
          required: true
          schema:
            type: string
        - name: serviceFabricName
          in: path
          description: The name of the service fabric.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/?api-version=2018-09-15:
    get:
      tags:
        - VirtualMachines
      description: List virtual machines in a given lab.
      operationId: VirtualMachines_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachineList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/LabVirtualMachine'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/?api-version=2018-09-15:
    get:
      tags:
        - VirtualMachines
      description: Get virtual machine.
      operationId: VirtualMachines_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - VirtualMachines
      description: Create or replace an existing virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A virtual machine.
        required: true
        x-ms-requestBody-name: labVirtualMachine
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabVirtualMachine'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachines
      description: Delete virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachines
      description: Allows modifying tags of virtual machines. All other properties will be ignored.
      operationId: VirtualMachines_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A virtual machine.
        required: true
        x-ms-requestBody-name: labVirtualMachine
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabVirtualMachineFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/addDataDisk/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Attach a new or existing data disk to virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_AddDataDisk
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request body for adding a new or existing data disk to a virtual machine.
        required: true
        x-ms-requestBody-name: dataDiskProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDiskProperties'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Apply artifacts to virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_ApplyArtifacts
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request body for applying artifacts to a virtual machine.
        required: true
        x-ms-requestBody-name: applyArtifactsRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyArtifactsRequest'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/claim/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Take ownership of an existing virtual machine This operation can take a while to complete.
      operationId: VirtualMachines_Claim
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/detachDataDisk/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Detach the specified disk from the virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_DetachDataDisk
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request body for detaching data disk from a virtual machine.
        required: true
        x-ms-requestBody-name: detachDataDiskProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachDataDiskProperties'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/getRdpFileContents/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Gets a string that represents the contents of the RDP file for the virtual machine
      operationId: VirtualMachines_GetRdpFileContents
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RdpConnection'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/listApplicableSchedules/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Lists the applicable start/stop schedules, if any.
      operationId: VirtualMachines_ListApplicableSchedules
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableSchedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/redeploy/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Redeploy a virtual machine This operation can take a while to complete.
      operationId: VirtualMachines_Redeploy
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/resize/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Resize Virtual Machine. This operation can take a while to complete.
      operationId: VirtualMachines_Resize
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Request body for resizing a virtual machine.
        required: true
        x-ms-requestBody-name: resizeLabVirtualMachineProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeLabVirtualMachineProperties'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/restart/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Restart a virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_Restart
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Start a virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_Start
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Stop a virtual machine This operation can take a while to complete.
      operationId: VirtualMachines_Stop
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/transferDisks/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Transfers all data disks attached to the virtual machine to be owned by the current user. This operation can take a while to complete.
      operationId: VirtualMachines_TransferDisks
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/unClaim/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachines
      description: Release ownership of an existing virtual machine This operation can take a while to complete.
      operationId: VirtualMachines_UnClaim
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/?api-version=2018-09-15:
    get:
      tags:
        - VirtualMachineSchedules
      description: List schedules in a given virtual machine.
      operationId: VirtualMachineSchedules_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: virtualMachineName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Schedule'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/?api-version=2018-09-15:
    get:
      tags:
        - VirtualMachineSchedules
      description: Get schedule.
      operationId: VirtualMachineSchedules_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: virtualMachineName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - VirtualMachineSchedules
      description: Create or replace an existing schedule.
      operationId: VirtualMachineSchedules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: virtualMachineName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - VirtualMachineSchedules
      description: Delete schedule.
      operationId: VirtualMachineSchedules_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: virtualMachineName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - VirtualMachineSchedules
      description: Allows modifying tags of schedules. All other properties will be ignored.
      operationId: VirtualMachineSchedules_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: virtualMachineName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/execute/?api-version=2018-09-15:
    post:
      tags:
        - VirtualMachineSchedules
      description: Execute a schedule. This operation can take a while to complete.
      operationId: VirtualMachineSchedules_Execute
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: virtualMachineName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/?api-version=2018-09-15:
    get:
      tags:
        - VirtualNetworks
      description: List virtual networks in a given lab.
      operationId: VirtualNetworks_List
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($expand=externalSubnets)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/VirtualNetwork'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}/?api-version=2018-09-15:
    get:
      tags:
        - VirtualNetworks
      description: Get virtual network.
      operationId: VirtualNetworks_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($expand=externalSubnets)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - VirtualNetworks
      description: Create or replace an existing virtual network. This operation can take a while to complete.
      operationId: VirtualNetworks_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A virtual network.
        required: true
        x-ms-requestBody-name: virtualNetwork
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualNetworks
      description: Delete virtual network. This operation can take a while to complete.
      operationId: VirtualNetworks_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualNetworks
      description: Allows modifying tags of virtual networks. All other properties will be ignored.
      operationId: VirtualNetworks_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: labName
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: The name of the virtual network.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A virtual network.
        required: true
        x-ms-requestBody-name: virtualNetwork
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/?api-version=2018-09-15:
    get:
      tags:
        - Labs
      description: Get lab.
      operationId: Labs_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=defaultStorageAccount)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - Labs
      description: Create or replace an existing lab. This operation can take a while to complete.
      operationId: Labs_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A lab.
        required: true
        x-ms-requestBody-name: lab
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lab'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Labs
      description: Delete lab. This operation can take a while to complete.
      operationId: Labs_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Labs
      description: Allows modifying tags of labs. All other properties will be ignored.
      operationId: Labs_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A lab.
        required: true
        x-ms-requestBody-name: lab
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm/?api-version=2018-09-15:
    post:
      tags:
        - Labs
      description: Claim a random claimable virtual machine in the lab. This operation can take a while to complete.
      operationId: Labs_ClaimAnyVm
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment/?api-version=2018-09-15:
    post:
      tags:
        - Labs
      description: Create virtual machines in a lab. This operation can take a while to complete.
      operationId: Labs_CreateEnvironment
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties for creating a virtual machine.
        required: true
        x-ms-requestBody-name: labVirtualMachineCreationParameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabVirtualMachineCreationParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage/?api-version=2018-09-15:
    post:
      tags:
        - Labs
      description: Exports the lab resource usage into a storage account This operation can take a while to complete.
      operationId: Labs_ExportResourceUsage
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters of the export operation.
        required: true
        x-ms-requestBody-name: exportResourceUsageParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportResourceUsageParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/generateUploadUri/?api-version=2018-09-15:
    post:
      tags:
        - Labs
      description: Generate a URI for uploading custom disk images to a Lab.
      operationId: Labs_GenerateUploadUri
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties for generating an upload URI.
        required: true
        x-ms-requestBody-name: generateUploadUriParameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUploadUriParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUploadUriResponse'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/importVirtualMachine/?api-version=2018-09-15:
    post:
      tags:
        - Labs
      description: Import a virtual machine into a different lab. This operation can take a while to complete.
      operationId: Labs_ImportVirtualMachine
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: This represents the payload required to import a virtual machine from a different lab into the current one
        required: true
        x-ms-requestBody-name: importLabVirtualMachineRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportLabVirtualMachineRequest'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/listVhds/?api-version=2018-09-15:
    post:
      tags:
        - Labs
      description: List disk images available for custom image creation.
      operationId: Labs_ListVhds
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the lab.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVhdList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/?api-version=2018-09-15:
    get:
      tags:
        - GlobalSchedules
      description: List schedules in a resource group.
      operationId: GlobalSchedules_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - name: $filter
          in: query
          description: 'The filter to apply to the operation. Example: ''$filter=contains(name,''myName'')'
          schema:
            type: string
        - name: $top
          in: query
          description: 'The maximum number of resources to return from the operation. Example: ''$top=10'''
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: 'The ordering expression for the results, using OData notation. Example: ''$orderby=name desc'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/Schedule'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/?api-version=2018-09-15:
    get:
      tags:
        - GlobalSchedules
      description: Get schedule.
      operationId: GlobalSchedules_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: 'Specify the $expand query. Example: ''properties($select=status)'''
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - GlobalSchedules
      description: Create or replace an existing schedule.
      operationId: GlobalSchedules_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - GlobalSchedules
      description: Delete schedule.
      operationId: GlobalSchedules_Delete
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - GlobalSchedules
      description: Allows modifying tags of schedules. All other properties will be ignored.
      operationId: GlobalSchedules_Update
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: A schedule.
        required: true
        x-ms-requestBody-name: schedule
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFragment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/execute/?api-version=2018-09-15:
    post:
      tags:
        - GlobalSchedules
      description: Execute a schedule. This operation can take a while to complete.
      operationId: GlobalSchedules_Execute
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/retarget/?api-version=2018-09-15:
    post:
      tags:
        - GlobalSchedules
      description: Updates a schedule's target resource Id. This operation can take a while to complete.
      operationId: GlobalSchedules_Retarget
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - name: name
          in: path
          description: The name of the schedule.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: Properties for retargeting a virtual machine schedule.
        required: true
        x-ms-requestBody-name: retargetScheduleProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetargetScheduleProperties'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
