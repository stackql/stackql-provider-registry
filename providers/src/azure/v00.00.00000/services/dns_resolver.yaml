openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Dns Resolver
  description: The DNS Resolver Management Client.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    DnsResolverNameParameter:
      name: dnsResolverName
      in: path
      description: The name of the DNS resolver.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    InboundEndpointNameParameter:
      name: inboundEndpointName
      in: path
      description: The name of the inbound endpoint for the DNS resolver.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VirtualNetworkNameParameter:
      name: virtualNetworkName
      in: path
      description: The name of the virtual network.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OutboundEndpointNameParameter:
      name: outboundEndpointName
      in: path
      description: The name of the outbound endpoint for the DNS resolver.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DnsForwardingRulesetNameParameter:
      name: dnsForwardingRulesetName
      in: path
      description: The name of the DNS forwarding ruleset.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ForwardingRuleNameParameter:
      name: forwardingRuleName
      in: path
      description: The name of the forwarding rule.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VirtualNetworkLinkNameParameter:
      name: virtualNetworkLinkName
      in: path
      description: The name of the virtual network link.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    TopParameter:
      name: $top
      in: query
      description: The maximum number of results to return. If not specified, returns up to 100 results.
      required: false
      x-ms-parameter-location: method
      schema:
        format: int32
        type: integer
    IfMatchParameter:
      name: If-Match
      in: header
      description: ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.
      required: false
      x-ms-client-name: IfMatch
      x-ms-parameter-location: method
      schema:
        type: string
    IfNoneMatchParameter:
      name: If-None-Match
      in: header
      description: Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.
      required: false
      x-ms-client-name: IfNoneMatch
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    DnsResolverProperties:
      description: Represents the properties of a DNS resolver.
      type: object
      required:
        - virtualNetwork
      properties:
        virtualNetwork:
          description: The reference to the virtual network. This cannot be changed after creation.
          x-ms-mutability:
            - read
            - create
          $ref: '#/components/schemas/SubResource'
        dnsResolverState:
          description: The current status of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.
          type: string
          enum:
            - Connected
            - Disconnected
          x-ms-enum:
            name: DnsResolverState
            modelAsString: true
          readOnly: true
        provisioningState:
          description: The current provisioning state of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        resourceGuid:
          description: The resourceGuid property of the DNS resolver resource.
          readOnly: true
          $ref: '#/components/schemas/ResourceGuid'
    DnsResolver:
      description: Describes a DNS resolver.
      required:
        - properties
      properties:
        etag:
          description: ETag of the DNS resolver.
          type: string
          readOnly: true
        properties:
          description: Properties of the DNS resolver.
          $ref: '#/components/schemas/DnsResolverProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    DnsResolverPatch:
      description: Describes a DNS resolver for PATCH operation.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Tags for DNS Resolver.
    DnsResolverListResult:
      description: The response to an enumeration operation on DNS resolvers.
      type: object
      properties:
        value:
          description: Enumeration of the DNS resolvers.
          type: array
          items:
            $ref: '#/components/schemas/DnsResolver'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    InboundEndpointProperties:
      description: Represents the properties of an inbound endpoint for a DNS resolver.
      type: object
      required:
        - ipConfigurations
      properties:
        ipConfigurations:
          description: IP configurations for the inbound endpoint.
          type: array
          items:
            $ref: '#/components/schemas/IpConfiguration'
          x-ms-identifiers: []
        provisioningState:
          description: The current provisioning state of the inbound endpoint. This is a read-only property and any attempt to set this value will be ignored.
          readOnly: true
          $ref: '#/components/schemas/ProvisioningState'
        resourceGuid:
          description: The resourceGuid property of the inbound endpoint resource.
          readOnly: true
          $ref: '#/components/schemas/ResourceGuid'
    InboundEndpoint:
      description: Describes an inbound endpoint for a DNS resolver.
      required:
        - properties
      properties:
        etag:
          description: ETag of the inbound endpoint.
          type: string
          readOnly: true
        properties:
          description: Properties of the inbound endpoint.
          $ref: '#/components/schemas/InboundEndpointProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    InboundEndpointPatch:
      description: Describes an inbound endpoint for a DNS resolver for PATCH operation.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Tags for inbound endpoint.
    InboundEndpointListResult:
      description: The response to an enumeration operation on inbound endpoints for a DNS resolver.
      type: object
      properties:
        value:
          description: Enumeration of the inbound endpoints for a DNS resolver.
          type: array
          items:
            $ref: '#/components/schemas/InboundEndpoint'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    OutboundEndpointProperties:
      description: Represents the properties of an outbound endpoint for a DNS resolver.
      type: object
      required:
        - subnet
      properties:
        subnet:
          description: The reference to the subnet used for the outbound endpoint.
          $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The current provisioning state of the outbound endpoint. This is a read-only property and any attempt to set this value will be ignored.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        resourceGuid:
          description: The resourceGuid property of the outbound endpoint resource.
          readOnly: true
          $ref: '#/components/schemas/ResourceGuid'
    OutboundEndpoint:
      description: Describes an outbound endpoint for a DNS resolver.
      required:
        - properties
      properties:
        etag:
          description: ETag of the outbound endpoint.
          type: string
          readOnly: true
        properties:
          description: Properties of the outbound endpoint.
          $ref: '#/components/schemas/OutboundEndpointProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    OutboundEndpointPatch:
      description: Describes an outbound endpoint for a DNS resolver for PATCH operation.
      type: object
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Tags for outbound endpoint.
    OutboundEndpointListResult:
      description: The response to an enumeration operation on outbound endpoints for a DNS resolver.
      type: object
      properties:
        value:
          description: Enumeration of the outbound endpoints for a DNS resolver.
          type: array
          items:
            $ref: '#/components/schemas/OutboundEndpoint'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    DnsForwardingRulesetProperties:
      description: Represents the properties of a DNS forwarding ruleset.
      type: object
      required:
        - dnsResolverOutboundEndpoints
      properties:
        dnsResolverOutboundEndpoints:
          description: The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
        provisioningState:
          description: The current provisioning state of the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
        resourceGuid:
          description: The resourceGuid for the DNS forwarding ruleset.
          type: string
          readOnly: true
    DnsForwardingRuleset:
      description: Describes a DNS forwarding ruleset.
      required:
        - properties
      properties:
        etag:
          description: ETag of the DNS forwarding ruleset.
          type: string
          readOnly: true
        properties:
          description: Properties of the DNS forwarding ruleset.
          $ref: '#/components/schemas/DnsForwardingRulesetProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    DnsForwardingRulesetPatch:
      description: Describes a DNS forwarding ruleset PATCH operation.
      type: object
      properties:
        dnsResolverOutboundEndpoints:
          description: The reference to the DNS resolver outbound endpoints that are used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers.
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Tags for DNS Resolver.
    DnsForwardingRulesetListResult:
      description: The response to an enumeration operation on DNS forwarding rulesets.
      type: object
      properties:
        value:
          description: Enumeration of the DNS forwarding rulesets.
          type: array
          items:
            $ref: '#/components/schemas/DnsForwardingRuleset'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    ForwardingRuleProperties:
      description: Represents the properties of a forwarding rule within a DNS forwarding ruleset.
      type: object
      required:
        - domainName
        - targetDnsServers
      properties:
        domainName:
          description: The domain name for the forwarding rule.
          type: string
        targetDnsServers:
          description: DNS servers to forward the DNS query to.
          type: array
          items:
            $ref: '#/components/schemas/TargetDnsServer'
          x-ms-identifiers: []
        metadata:
          description: Metadata attached to the forwarding rule.
          type: object
          additionalProperties:
            type: string
        forwardingRuleState:
          type: string
          description: The state of forwarding rule.
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: ForwardingRuleState
            modelAsString: true
        provisioningState:
          description: The current provisioning state of the forwarding rule. This is a read-only property and any attempt to set this value will be ignored.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    ForwardingRule:
      description: Describes a forwarding rule within a DNS forwarding ruleset.
      required:
        - properties
      properties:
        etag:
          description: ETag of the forwarding rule.
          type: string
          readOnly: true
        properties:
          description: Properties of the forwarding rule.
          $ref: '#/components/schemas/ForwardingRuleProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
      type: object
    ForwardingRulePatchProperties:
      description: Represents the updatable properties of a forwarding rule within a DNS forwarding ruleset.
      type: object
      properties:
        targetDnsServers:
          description: DNS servers to forward the DNS query to.
          type: array
          items:
            $ref: '#/components/schemas/TargetDnsServer'
          x-ms-identifiers: []
        metadata:
          description: Metadata attached to the forwarding rule.
          type: object
          additionalProperties:
            type: string
        forwardingRuleState:
          type: string
          description: The state of forwarding rule.
          enum:
            - Enabled
            - Disabled
          default: Enabled
          x-ms-enum:
            name: ForwardingRuleState
            modelAsString: true
    ForwardingRulePatch:
      description: Describes a forwarding rule for PATCH operation.
      properties:
        properties:
          description: Updatable properties of the forwarding rule.
          $ref: '#/components/schemas/ForwardingRulePatchProperties'
          x-ms-client-flatten: true
      type: object
    ForwardingRuleListResult:
      description: The response to an enumeration operation on forwarding rules within a DNS forwarding ruleset.
      type: object
      properties:
        value:
          description: Enumeration of the forwarding rules.
          type: array
          items:
            $ref: '#/components/schemas/ForwardingRule'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    VirtualNetworkLinkProperties:
      description: Represents the properties of a virtual network link.
      type: object
      required:
        - virtualNetwork
      properties:
        virtualNetwork:
          description: The reference to the virtual network. This cannot be changed after creation.
          $ref: '#/components/schemas/SubResource'
        metadata:
          description: Metadata attached to the virtual network link.
          type: object
          additionalProperties:
            type: string
        provisioningState:
          description: The current provisioning state of the virtual network link. This is a read-only property and any attempt to set this value will be ignored.
          $ref: '#/components/schemas/ProvisioningState'
          readOnly: true
    VirtualNetworkLink:
      description: Describes a virtual network link.
      required:
        - properties
      properties:
        etag:
          description: ETag of the virtual network link.
          type: string
          readOnly: true
        properties:
          description: Properties of the virtual network link.
          $ref: '#/components/schemas/VirtualNetworkLinkProperties'
          x-ms-client-flatten: true
        systemData:
          $ref: '#/components/schemas/systemData'
          description: Metadata pertaining to creation and last modification of the resource.
          readOnly: true
      type: object
    VirtualNetworkLinkPatchProperties:
      description: Represents the updatable properties of the virtual network link.
      type: object
      properties:
        metadata:
          description: Metadata attached to the virtual network link.
          type: object
          additionalProperties:
            type: string
    VirtualNetworkLinkPatch:
      description: Describes a virtual network link for PATCH operation.
      properties:
        properties:
          description: Updatable properties of the virtual network link.
          $ref: '#/components/schemas/VirtualNetworkLinkPatchProperties'
          x-ms-client-flatten: true
      type: object
    VirtualNetworkLinkListResult:
      description: The response to an enumeration operation on virtual network links.
      type: object
      properties:
        value:
          description: Enumeration of the virtual network links.
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkLink'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    IpConfiguration:
      description: IP configuration.
      type: object
      required:
        - subnet
      properties:
        subnet:
          description: The reference to the subnet bound to the IP configuration.
          $ref: '#/components/schemas/SubResource'
        privateIpAddress:
          description: Private IP address of the IP configuration.
          type: string
        privateIpAllocationMethod:
          description: Private IP address allocation method.
          type: string
          enum:
            - Static
            - Dynamic
          default: Dynamic
          x-ms-enum:
            name: IpAllocationMethod
            modelAsString: true
    TargetDnsServer:
      description: Describes a server to forward the DNS queries to.
      type: object
      required:
        - ipAddress
      properties:
        ipAddress:
          description: DNS server IP address.
          type: string
        port:
          description: DNS server port.
          type: integer
          format: int32
          default: 53
    ProvisioningState:
      description: The current provisioning state of the resource.
      type: string
      enum:
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: ProvisioningState
        modelAsString: true
    ResourceGuid:
      type: string
      description: The Guid property of the resource.
    SubResourceListResult:
      description: The response to an enumeration operation on sub-resources.
      type: object
      properties:
        value:
          description: Enumeration of the sub-resources.
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    SubResource:
      description: Reference to another ARM resource.
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Resource ID.
      x-ms-azure-resource: true
    VirtualNetworkDnsForwardingRulesetListResult:
      description: The response to an enumeration operation on Virtual Network DNS Forwarding Ruleset.
      type: object
      properties:
        value:
          description: Enumeration of the Virtual Network DNS Forwarding Ruleset.
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkDnsForwardingRuleset'
        nextLink:
          description: The continuation token for the next page of results.
          type: string
          readOnly: true
    VirtualNetworkLinkSubResourceProperties:
      description: The reference to the virtual network link that associates between the DNS forwarding ruleset and virtual network.
      type: object
      properties:
        virtualNetworkLink:
          description: The reference to the virtual network link.
          $ref: '#/components/schemas/SubResource'
    VirtualNetworkDnsForwardingRuleset:
      description: Reference to DNS forwarding ruleset and associated virtual network link.
      properties:
        id:
          type: string
          description: DNS Forwarding Ruleset Resource ID.
        properties:
          description: Properties of the virtual network link sub-resource reference.
          $ref: '#/components/schemas/VirtualNetworkLinkSubResourceProperties'
          x-ms-client-flatten: true
      type: object
    CloudError:
      description: An error message
      type: object
      properties:
        error:
          description: The error message body
          $ref: '#/components/schemas/CloudErrorBody'
      x-ms-external: true
    CloudErrorBody:
      description: The body of an error message
      type: object
      properties:
        code:
          description: The error code
          type: string
        message:
          description: A description of what caused the error
          type: string
        target:
          description: The target resource of the error message
          type: string
        details:
          description: Extra error information
          type: array
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          x-ms-identifiers: []
      x-ms-external: true
  x-stackQL-resources:
    dns_resolvers:
      id: azure.dns_resolver.dns_resolvers
      name: dns_resolvers
      title: dns_resolvers
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}?api-version=2022-07-01/put'
            operationId: DnsResolvers_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsResolver
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}?api-version=2022-07-01/patch'
            operationId: DnsResolvers_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsResolver
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}?api-version=2022-07-01/delete'
            operationId: DnsResolvers_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}?api-version=2022-07-01/get'
            operationId: DnsResolvers_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsResolver
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers?api-version=2022-07-01/get'
            operationId: DnsResolvers_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsResolverListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1dnsResolvers?api-version=2022-07-01/get'
            operationId: DnsResolvers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsResolverListResult
            objectKey: $.value
        list_by_virtual_network:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1listDnsResolvers?api-version=2022-07-01/post'
            operationId: DnsResolvers_ListByVirtualNetwork
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SubResourceListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_resolvers/methods/get'
          - $ref: '#/components/x-stackQL-resources/dns_resolvers/methods/list_by_virtual_network'
          - $ref: '#/components/x-stackQL-resources/dns_resolvers/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dns_resolvers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dns_resolvers/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/dns_resolvers/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dns_resolvers/methods/delete'
    inbound_endpoints:
      id: azure.dns_resolver.inbound_endpoints
      name: inbound_endpoints
      title: inbound_endpoints
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1inboundEndpoints~1{inboundEndpointName}?api-version=2022-07-01/put'
            operationId: InboundEndpoints_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InboundEndpoint
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1inboundEndpoints~1{inboundEndpointName}?api-version=2022-07-01/patch'
            operationId: InboundEndpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InboundEndpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1inboundEndpoints~1{inboundEndpointName}?api-version=2022-07-01/delete'
            operationId: InboundEndpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1inboundEndpoints~1{inboundEndpointName}?api-version=2022-07-01/get'
            operationId: InboundEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InboundEndpoint
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1inboundEndpoints?api-version=2022-07-01/get'
            operationId: InboundEndpoints_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: InboundEndpointListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/inbound_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/inbound_endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/inbound_endpoints/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/inbound_endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/inbound_endpoints/methods/delete'
    outbound_endpoints:
      id: azure.dns_resolver.outbound_endpoints
      name: outbound_endpoints
      title: outbound_endpoints
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1outboundEndpoints~1{outboundEndpointName}?api-version=2022-07-01/put'
            operationId: OutboundEndpoints_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OutboundEndpoint
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1outboundEndpoints~1{outboundEndpointName}?api-version=2022-07-01/patch'
            operationId: OutboundEndpoints_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OutboundEndpoint
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1outboundEndpoints~1{outboundEndpointName}?api-version=2022-07-01/delete'
            operationId: OutboundEndpoints_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1outboundEndpoints~1{outboundEndpointName}?api-version=2022-07-01/get'
            operationId: OutboundEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OutboundEndpoint
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsResolvers~1{dnsResolverName}~1outboundEndpoints?api-version=2022-07-01/get'
            operationId: OutboundEndpoints_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OutboundEndpointListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/outbound_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/outbound_endpoints/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/outbound_endpoints/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/outbound_endpoints/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/outbound_endpoints/methods/delete'
    dns_forwarding_rulesets:
      id: azure.dns_resolver.dns_forwarding_rulesets
      name: dns_forwarding_rulesets
      title: dns_forwarding_rulesets
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}?api-version=2022-07-01/put'
            operationId: DnsForwardingRulesets_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsForwardingRuleset
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}?api-version=2022-07-01/patch'
            operationId: DnsForwardingRulesets_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsForwardingRuleset
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}?api-version=2022-07-01/delete'
            operationId: DnsForwardingRulesets_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}?api-version=2022-07-01/get'
            operationId: DnsForwardingRulesets_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsForwardingRuleset
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets?api-version=2022-07-01/get'
            operationId: DnsForwardingRulesets_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsForwardingRulesetListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1dnsForwardingRulesets?api-version=2022-07-01/get'
            operationId: DnsForwardingRulesets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DnsForwardingRulesetListResult
            objectKey: $.value
        list_by_virtual_network:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1listDnsForwardingRulesets?api-version=2022-07-01/post'
            operationId: DnsForwardingRulesets_ListByVirtualNetwork
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkDnsForwardingRulesetListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dns_forwarding_rulesets/methods/get'
          - $ref: '#/components/x-stackQL-resources/dns_forwarding_rulesets/methods/list_by_virtual_network'
          - $ref: '#/components/x-stackQL-resources/dns_forwarding_rulesets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dns_forwarding_rulesets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/dns_forwarding_rulesets/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/dns_forwarding_rulesets/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dns_forwarding_rulesets/methods/delete'
    forwarding_rules:
      id: azure.dns_resolver.forwarding_rules
      name: forwarding_rules
      title: forwarding_rules
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1forwardingRules~1{forwardingRuleName}?api-version=2022-07-01/put'
            operationId: ForwardingRules_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ForwardingRule
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1forwardingRules~1{forwardingRuleName}?api-version=2022-07-01/patch'
            operationId: ForwardingRules_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ForwardingRule
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1forwardingRules~1{forwardingRuleName}?api-version=2022-07-01/delete'
            operationId: ForwardingRules_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1forwardingRules~1{forwardingRuleName}?api-version=2022-07-01/get'
            operationId: ForwardingRules_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ForwardingRule
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1forwardingRules?api-version=2022-07-01/get'
            operationId: ForwardingRules_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ForwardingRuleListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/forwarding_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/forwarding_rules/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/forwarding_rules/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/forwarding_rules/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/forwarding_rules/methods/delete'
    virtual_network_links:
      id: azure.dns_resolver.virtual_network_links
      name: virtual_network_links
      title: virtual_network_links
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1virtualNetworkLinks~1{virtualNetworkLinkName}?api-version=2022-07-01/put'
            operationId: VirtualNetworkLinks_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkLink
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1virtualNetworkLinks~1{virtualNetworkLinkName}?api-version=2022-07-01/patch'
            operationId: VirtualNetworkLinks_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkLink
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1virtualNetworkLinks~1{virtualNetworkLinkName}?api-version=2022-07-01/delete'
            operationId: VirtualNetworkLinks_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1virtualNetworkLinks~1{virtualNetworkLinkName}?api-version=2022-07-01/get'
            operationId: VirtualNetworkLinks_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkLink
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1dnsForwardingRulesets~1{dnsForwardingRulesetName}~1virtualNetworkLinks?api-version=2022-07-01/get'
            operationId: VirtualNetworkLinks_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: VirtualNetworkLinkListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_network_links/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_network_links/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_network_links/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/virtual_network_links/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_network_links/methods/delete'
    vw_dns_resolvers:
      id: azure.dns_resolver.vw_dns_resolvers
      name: vw_dns_resolvers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.virtualNetwork') as "virtual_network",
              JSON_EXTRACT(properties, '$.dnsResolverState') as "dns_resolver_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceGuid') as "resource_guid",
              subscriptionId,
              resourceGroupName,
              dnsResolverName
              FROM azure.dns_resolver.dns_resolvers
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.virtualNetwork') as "virtual_network",
                json_extract_path_text(properties, '$.dnsResolverState') as "dns_resolver_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceGuid') as "resource_guid",
                subscriptionId,
                resourceGroupName,
                dnsResolverName
                FROM azure.dns_resolver.dns_resolvers
                WHERE subscriptionId = 'replace-me';
    vw_inbound_endpoints:
      id: azure.dns_resolver.vw_inbound_endpoints
      name: vw_inbound_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.ipConfigurations') as "ip_configurations",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceGuid') as "resource_guid",
              subscriptionId,
              resourceGroupName,
              dnsResolverName,
              inboundEndpointName
              FROM azure.dns_resolver.inbound_endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsResolverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.ipConfigurations') as "ip_configurations",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceGuid') as "resource_guid",
                subscriptionId,
                resourceGroupName,
                dnsResolverName,
                inboundEndpointName
                FROM azure.dns_resolver.inbound_endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsResolverName = 'replace-me';
    vw_outbound_endpoints:
      id: azure.dns_resolver.vw_outbound_endpoints
      name: vw_outbound_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.subnet') as "subnet",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceGuid') as "resource_guid",
              subscriptionId,
              resourceGroupName,
              dnsResolverName,
              outboundEndpointName
              FROM azure.dns_resolver.outbound_endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsResolverName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.subnet') as "subnet",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceGuid') as "resource_guid",
                subscriptionId,
                resourceGroupName,
                dnsResolverName,
                outboundEndpointName
                FROM azure.dns_resolver.outbound_endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsResolverName = 'replace-me';
    vw_dns_forwarding_rulesets:
      id: azure.dns_resolver.vw_dns_forwarding_rulesets
      name: vw_dns_forwarding_rulesets
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              etag as etag,
              systemData as system_data,
              tags as tags,
              JSON_EXTRACT(properties, '$.dnsResolverOutboundEndpoints') as "dns_resolver_outbound_endpoints",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceGuid') as "resource_guid",
              subscriptionId,
              resourceGroupName,
              dnsForwardingRulesetName
              FROM azure.dns_resolver.dns_forwarding_rulesets
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                etag as etag,
                systemData as system_data,
                tags as tags,
                json_extract_path_text(properties, '$.dnsResolverOutboundEndpoints') as "dns_resolver_outbound_endpoints",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceGuid') as "resource_guid",
                subscriptionId,
                resourceGroupName,
                dnsForwardingRulesetName
                FROM azure.dns_resolver.dns_forwarding_rulesets
                WHERE subscriptionId = 'replace-me';
    vw_forwarding_rules:
      id: azure.dns_resolver.vw_forwarding_rules
      name: vw_forwarding_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.domainName') as "domain_name",
              JSON_EXTRACT(properties, '$.targetDnsServers') as "target_dns_servers",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.forwardingRuleState') as "forwarding_rule_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              dnsForwardingRulesetName,
              forwardingRuleName
              FROM azure.dns_resolver.forwarding_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsForwardingRulesetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.domainName') as "domain_name",
                json_extract_path_text(properties, '$.targetDnsServers') as "target_dns_servers",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.forwardingRuleState') as "forwarding_rule_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                dnsForwardingRulesetName,
                forwardingRuleName
                FROM azure.dns_resolver.forwarding_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsForwardingRulesetName = 'replace-me';
    vw_virtual_network_links:
      id: azure.dns_resolver.vw_virtual_network_links
      name: vw_virtual_network_links
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              etag as etag,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.virtualNetwork') as "virtual_network",
              JSON_EXTRACT(properties, '$.metadata') as "metadata",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              dnsForwardingRulesetName,
              virtualNetworkLinkName
              FROM azure.dns_resolver.virtual_network_links
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsForwardingRulesetName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                etag as etag,
                systemData as system_data,
                json_extract_path_text(properties, '$.virtualNetwork') as "virtual_network",
                json_extract_path_text(properties, '$.metadata') as "metadata",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                dnsForwardingRulesetName,
                virtualNetworkLinkName
                FROM azure.dns_resolver.virtual_network_links
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND dnsForwardingRulesetName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}?api-version=2022-07-01:
    put:
      tags:
        - DnsResolvers
      operationId: DnsResolvers_CreateOrUpdate
      description: Creates or updates a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
        - $ref: '#/components/parameters/IfNoneMatchParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsResolver'
      responses:
        '200':
          description: The DNS resolver has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsResolver'
        '201':
          description: The DNS resolver has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsResolver'
        '202':
          description: The operation to upsert DNS resolver has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - DnsResolvers
      operationId: DnsResolvers_Update
      description: Updates a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsResolverPatch'
      responses:
        '200':
          description: The DNS resolver has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsResolver'
        '202':
          description: The operation to update DNS resolver has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - DnsResolvers
      operationId: DnsResolvers_Delete
      description: 'Deletes a DNS resolver. WARNING: This operation cannot be undone.'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      responses:
        '200':
          description: The DNS resolver has been deleted.
        '202':
          description: The operation to delete DNS resolver has been accepted and will complete asynchronously.
        '204':
          description: The DNS resolver was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DnsResolvers
      operationId: DnsResolvers_Get
      description: Gets properties of a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
      responses:
        '200':
          description: The DNS resolver was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsResolver'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers?api-version=2022-07-01:
    get:
      tags:
        - DnsResolvers
      operationId: DnsResolvers_ListByResourceGroup
      description: Lists DNS resolvers within a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of DNS resolvers in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsResolverListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolvers?api-version=2022-07-01:
    get:
      tags:
        - DnsResolvers
      operationId: DnsResolvers_List
      description: Lists DNS resolvers in all resource groups of a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of DNS resolvers in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsResolverListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/inboundEndpoints/{inboundEndpointName}?api-version=2022-07-01:
    put:
      tags:
        - InboundEndpoints
      operationId: InboundEndpoints_CreateOrUpdate
      description: Creates or updates an inbound endpoint for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/InboundEndpointNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
        - $ref: '#/components/parameters/IfNoneMatchParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundEndpoint'
      responses:
        '200':
          description: The inbound endpoint for the DNS resolver has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundEndpoint'
        '201':
          description: The inbound endpoint for the DNS resolver has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundEndpoint'
        '202':
          description: The operation to upsert inbound endpoint for the DNS resolver has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - InboundEndpoints
      operationId: InboundEndpoints_Update
      description: Updates an inbound endpoint for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/InboundEndpointNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundEndpointPatch'
      responses:
        '200':
          description: The inbound endpoint for the DNS resolver has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundEndpoint'
        '202':
          description: The operation to update inbound endpoint for the DNS resolver has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - InboundEndpoints
      operationId: InboundEndpoints_Delete
      description: 'Deletes an inbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/InboundEndpointNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      responses:
        '200':
          description: The inbound endpoint for the DNS resolver has been deleted.
        '202':
          description: The operation to delete inbound endpoint for the DNS resolver has been accepted and will complete asynchronously.
        '204':
          description: The inbound endpoint for the DNS resolver was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - InboundEndpoints
      operationId: InboundEndpoints_Get
      description: Gets properties of an inbound endpoint for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/InboundEndpointNameParameter'
      responses:
        '200':
          description: The inbound endpoint for the DNS resolver was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundEndpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/inboundEndpoints?api-version=2022-07-01:
    get:
      tags:
        - InboundEndpoints
      operationId: InboundEndpoints_List
      description: Lists inbound endpoints for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of inbound endpoints for the DNS resolver.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundEndpointListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/outboundEndpoints/{outboundEndpointName}?api-version=2022-07-01:
    put:
      tags:
        - OutboundEndpoints
      operationId: OutboundEndpoints_CreateOrUpdate
      description: Creates or updates an outbound endpoint for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/OutboundEndpointNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
        - $ref: '#/components/parameters/IfNoneMatchParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundEndpoint'
      responses:
        '200':
          description: The outbound endpoint for the DNS resolver has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEndpoint'
        '201':
          description: The outbound endpoint for the DNS resolver has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEndpoint'
        '202':
          description: The operation to upsert outbound endpoint for the DNS resolver has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - OutboundEndpoints
      operationId: OutboundEndpoints_Update
      description: Updates an outbound endpoint for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/OutboundEndpointNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundEndpointPatch'
      responses:
        '200':
          description: The outbound endpoint for the DNS resolver has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEndpoint'
        '202':
          description: The operation to update outbound endpoint for the DNS resolver has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - OutboundEndpoints
      operationId: OutboundEndpoints_Delete
      description: 'Deletes an outbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/OutboundEndpointNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      responses:
        '200':
          description: The outbound endpoint for the DNS resolver has been deleted.
        '202':
          description: The operation to delete outbound endpoint for the DNS resolver has been accepted and will complete asynchronously.
        '204':
          description: The outbound endpoint for the DNS resolver was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - OutboundEndpoints
      operationId: OutboundEndpoints_Get
      description: Gets properties of an outbound endpoint for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/OutboundEndpointNameParameter'
      responses:
        '200':
          description: The outbound endpoint for the DNS resolver was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEndpoint'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{dnsResolverName}/outboundEndpoints?api-version=2022-07-01:
    get:
      tags:
        - OutboundEndpoints
      operationId: OutboundEndpoints_List
      description: Lists outbound endpoints for a DNS resolver.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsResolverNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of outbound endpoints for the DNS resolver.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundEndpointListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}?api-version=2022-07-01:
    put:
      tags:
        - DnsForwardingRulesets
      operationId: DnsForwardingRulesets_CreateOrUpdate
      description: Creates or updates a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
        - $ref: '#/components/parameters/IfNoneMatchParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsForwardingRuleset'
      responses:
        '200':
          description: The DNS forwarding ruleset has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsForwardingRuleset'
        '201':
          description: The DNS forwarding ruleset has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsForwardingRuleset'
        '202':
          description: The operation to upsert DNS forwarding ruleset has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - DnsForwardingRulesets
      operationId: DnsForwardingRulesets_Update
      description: Updates a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsForwardingRulesetPatch'
      responses:
        '200':
          description: The DNS forwarding ruleset has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsForwardingRuleset'
        '202':
          description: The operation to update DNS forwarding ruleset has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - DnsForwardingRulesets
      operationId: DnsForwardingRulesets_Delete
      description: 'Deletes a DNS forwarding ruleset. WARNING: This operation cannot be undone. All forwarding rules within the ruleset will be deleted.'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      responses:
        '200':
          description: The DNS forwarding ruleset has been deleted.
        '202':
          description: The operation to delete DNS forwarding ruleset has been accepted and will complete asynchronously.
        '204':
          description: The DNS forwarding ruleset was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DnsForwardingRulesets
      operationId: DnsForwardingRulesets_Get
      description: Gets a DNS forwarding ruleset properties.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
      responses:
        '200':
          description: The DNS forwarding ruleset was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsForwardingRuleset'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets?api-version=2022-07-01:
    get:
      tags:
        - DnsForwardingRulesets
      operationId: DnsForwardingRulesets_ListByResourceGroup
      description: Lists DNS forwarding rulesets within a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of DNS forwarding rulesets in the resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsForwardingRulesetListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsForwardingRulesets?api-version=2022-07-01:
    get:
      tags:
        - DnsForwardingRulesets
      operationId: DnsForwardingRulesets_List
      description: Lists DNS forwarding rulesets in all resource groups of a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of DNS forwarding rulesets in the subscription.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsForwardingRulesetListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}?api-version=2022-07-01:
    put:
      tags:
        - ForwardingRules
      operationId: ForwardingRules_CreateOrUpdate
      description: Creates or updates a forwarding rule in a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/ForwardingRuleNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
        - $ref: '#/components/parameters/IfNoneMatchParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardingRule'
      responses:
        '200':
          description: The forwarding rule has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardingRule'
        '201':
          description: The forwarding rule has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardingRule'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ForwardingRules
      operationId: ForwardingRules_Update
      description: Updates a forwarding rule in a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/ForwardingRuleNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardingRulePatch'
      responses:
        '200':
          description: The forwarding rule has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardingRule'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ForwardingRules
      operationId: ForwardingRules_Delete
      description: 'Deletes a forwarding rule in a DNS forwarding ruleset. WARNING: This operation cannot be undone.'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/ForwardingRuleNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      responses:
        '200':
          description: The forwarding rule has been deleted.
        '204':
          description: The forwarding rule was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - ForwardingRules
      operationId: ForwardingRules_Get
      description: Gets properties of a forwarding rule in a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/ForwardingRuleNameParameter'
      responses:
        '200':
          description: The forwarding rule was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardingRule'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules?api-version=2022-07-01:
    get:
      tags:
        - ForwardingRules
      operationId: ForwardingRules_List
      description: Lists forwarding rules in a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of forwarding rules in the DNS forwarding ruleset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForwardingRuleListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/virtualNetworkLinks/{virtualNetworkLinkName}?api-version=2022-07-01:
    put:
      tags:
        - VirtualNetworkLinks
      operationId: VirtualNetworkLinks_CreateOrUpdate
      description: Creates or updates a virtual network link to a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/VirtualNetworkLinkNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
        - $ref: '#/components/parameters/IfNoneMatchParameter'
      requestBody:
        description: Parameters supplied to the CreateOrUpdate operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkLink'
      responses:
        '200':
          description: The virtual network link to the DNS forwarding ruleset has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkLink'
        '201':
          description: The virtual network link to the DNS forwarding ruleset has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkLink'
        '202':
          description: The operation to upsert virtual network link to the DNS forwarding ruleset has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualNetworkLinks
      operationId: VirtualNetworkLinks_Update
      description: Updates a virtual network link to a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/VirtualNetworkLinkNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      requestBody:
        description: Parameters supplied to the Update operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkLinkPatch'
      responses:
        '200':
          description: The virtual network link to the DNS forwarding ruleset has been updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkLink'
        '202':
          description: The operation to update virtual network link to the DNS forwarding ruleset has been accepted and will complete asynchronously.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualNetworkLinks
      operationId: VirtualNetworkLinks_Delete
      description: 'Deletes a virtual network link to a DNS forwarding ruleset. WARNING: This operation cannot be undone.'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/VirtualNetworkLinkNameParameter'
        - $ref: '#/components/parameters/IfMatchParameter'
      responses:
        '200':
          description: The virtual network link to the DNS forwarding ruleset has been deleted.
        '202':
          description: The operation to delete virtual network link to the DNS forwarding ruleset has been accepted and will complete asynchronously.
        '204':
          description: The virtual network link to the DNS forwarding ruleset was not found.
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualNetworkLinks
      operationId: VirtualNetworkLinks_Get
      description: Gets properties of a virtual network link to a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/VirtualNetworkLinkNameParameter'
      responses:
        '200':
          description: The virtual network link to DNS forwarding ruleset was found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkLink'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/virtualNetworkLinks?api-version=2022-07-01:
    get:
      tags:
        - VirtualNetworkLinks
      operationId: VirtualNetworkLinks_List
      description: Lists virtual network links to a DNS forwarding ruleset.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DnsForwardingRulesetNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of virtual network links to a DNS forwarding ruleset.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkLinkListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsResolvers?api-version=2022-07-01:
    post:
      tags:
        - DnsResolvers
      operationId: DnsResolvers_ListByVirtualNetwork
      description: Lists DNS resolver resource IDs linked to a virtual network.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualNetworkNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of DNS resolver resource IDs linked to the virtual network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubResourceListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/listDnsForwardingRulesets?api-version=2022-07-01:
    post:
      tags:
        - DnsForwardingRulesets
      operationId: DnsForwardingRulesets_ListByVirtualNetwork
      description: Lists DNS forwarding ruleset resource IDs attached to a virtual network.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/VirtualNetworkNameParameter'
        - $ref: '#/components/parameters/TopParameter'
      responses:
        '200':
          description: List of DNS forwarding ruleset resource IDs and virtual network link resource IDs attached to the virtual network.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkDnsForwardingRulesetListResult'
        default:
          description: Default response. It will be deserialized as per the Error definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
