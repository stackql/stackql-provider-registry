openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Data Lake Analytics
  description: Use the Azure Data Lake Analytics REST APIs to create and manage Data Lake Analytics resources through Azure Resource Manager.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-09-27-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the Azure resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    AccountNameParameter:
      name: accountName
      in: path
      description: The name of the Data Lake Analytics account.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      x-ms-azure-resource: true
      description: The resource model definition.
      type: object
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        location:
          readOnly: true
          type: string
          description: The resource location.
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: An available operation for Data Lake Analytics.
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the operation.
        display:
          readOnly: true
          $ref: '#/components/schemas/OperationDisplay'
          description: The display information for the operation.
        properties:
          readOnly: true
          $ref: '#/components/schemas/OperationMetaPropertyInfo'
          description: The OperationMetaPropertyInfo for the operation.
        origin:
          readOnly: true
          type: string
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: OperationOrigin
            modelAsString: true
          description: The intended executor of the operation.
      type: object
    OperationListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: The results of the list operation.
          x-ms-identifiers:
            - name
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: The list of available operations for Data Lake Analytics.
      type: object
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    SubResource:
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
      x-ms-azure-resource: true
      description: The resource model definition for a nested resource.
      type: object
    DataLakeAnalyticsAccount:
      description: A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataLakeAnalyticsAccountProperties'
          description: The properties defined by Data Lake Analytics all properties are specific to each resource provider.
      type: object
    DataLakeAnalyticsAccountBasic:
      description: A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        location:
          readOnly: true
          type: string
          description: The resource location.
        tags:
          readOnly: true
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataLakeAnalyticsAccountPropertiesBasic'
          description: The properties defined by Data Lake Analytics all properties are specific to each resource provider.
      type: object
    DataLakeAnalyticsAccountProperties:
      description: The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when retrieving a specific account.
      properties:
        accountId:
          readOnly: true
          type: string
          format: uuid
          description: The unique identifier associated with this Data Lake Analytics account.
        provisioningState:
          readOnly: true
          type: string
          enum:
            - Failed
            - Creating
            - Running
            - Succeeded
            - Patching
            - Suspending
            - Resuming
            - Deleting
            - Deleted
            - Undeleting
            - Canceled
          x-ms-enum:
            name: DataLakeAnalyticsAccountStatus
            modelAsString: false
          description: The provisioning status of the Data Lake Analytics account.
        state:
          readOnly: true
          type: string
          enum:
            - Active
            - Suspended
          x-ms-enum:
            name: DataLakeAnalyticsAccountState
            modelAsString: false
          description: The state of the Data Lake Analytics account.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The account creation time.
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: The account last modified time.
        endpoint:
          readOnly: true
          type: string
          description: The full CName endpoint for this account.
        defaultDataLakeStoreAccountType:
          readOnly: true
          type: string
          description: The type of the default Data Lake Store account associated with this account.
        defaultDataLakeStoreAccount:
          readOnly: true
          type: string
          description: The default Data Lake Store account associated with this account.
        dataLakeStoreAccounts:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DataLakeStoreAccountInformation'
          description: The list of Data Lake Store accounts associated with this account.
        publicDataLakeStoreAccounts:
          type: array
          items:
            $ref: '#/components/schemas/DataLakeStoreAccountInformation'
          description: The list of Data Lake Store accounts associated with this account.
        storageAccounts:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageAccountInformation'
          description: The list of Azure Blob Storage accounts associated with this account.
        computePolicies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ComputePolicy'
          description: The list of compute policies associated with this account.
        hiveMetastores:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/HiveMetastore'
          description: The list of hiveMetastores associated with this account.
        virtualNetworkRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: The list of virtualNetwork rules associated with this account.
        firewallRules:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The list of firewall rules associated with this account.
        firewallState:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallState
            modelAsString: false
          description: The current state of the IP address firewall for this account.
        firewallAllowAzureIps:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallAllowAzureIpsState
            modelAsString: false
          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        newTier:
          type: string
          enum:
            - Consumption
            - Commitment_100AUHours
            - Commitment_500AUHours
            - Commitment_1000AUHours
            - Commitment_5000AUHours
            - Commitment_10000AUHours
            - Commitment_50000AUHours
            - Commitment_100000AUHours
            - Commitment_500000AUHours
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier for the next month.
        currentTier:
          readOnly: true
          type: string
          enum:
            - Consumption
            - Commitment_100AUHours
            - Commitment_500AUHours
            - Commitment_1000AUHours
            - Commitment_5000AUHours
            - Commitment_10000AUHours
            - Commitment_50000AUHours
            - Commitment_100000AUHours
            - Commitment_500000AUHours
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier in use for the current month.
        maxJobCount:
          type: integer
          format: int32
          minimum: 1
          default: 3
          description: The maximum supported jobs running under the account at the same time.
        maxActiveJobCountPerUser:
          readOnly: true
          type: integer
          format: int32
          description: The maximum supported active jobs under the account at the same time.
        maxQueuedJobCountPerUser:
          readOnly: true
          type: integer
          format: int32
          description: The maximum supported jobs queued under the account at the same time.
        maxJobRunningTimeInMin:
          readOnly: true
          type: integer
          format: int32
          description: The maximum supported active jobs under the account at the same time.
        systemMaxJobCount:
          readOnly: true
          type: integer
          format: int32
          description: The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.
        maxDegreeOfParallelism:
          type: integer
          format: int32
          minimum: 1
          default: 30
          description: The maximum supported degree of parallelism for this account.
        systemMaxDegreeOfParallelism:
          readOnly: true
          type: integer
          format: int32
          description: The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.
        maxDegreeOfParallelismPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The maximum supported degree of parallelism per job for this account.
        minPriorityPerJob:
          readOnly: true
          type: integer
          format: int32
          minimum: 1
          description: The minimum supported priority per job for this account.
        queryStoreRetention:
          type: integer
          format: int32
          minimum: 1
          maximum: 180
          default: 30
          description: The number of days that job metadata is retained.
        debugDataAccessLevel:
          readOnly: true
          type: string
          enum:
            - All
            - Customer
            - None
          x-ms-enum:
            name: DebugDataAccessLevel
            modelAsString: false
          description: The current state of the DebugDataAccessLevel for this account.
      type: object
    DataLakeAnalyticsAccountPropertiesBasic:
      properties:
        accountId:
          readOnly: true
          type: string
          format: uuid
          description: The unique identifier associated with this Data Lake Analytics account.
        provisioningState:
          readOnly: true
          type: string
          enum:
            - Failed
            - Creating
            - Running
            - Succeeded
            - Patching
            - Suspending
            - Resuming
            - Deleting
            - Deleted
            - Undeleting
            - Canceled
          x-ms-enum:
            name: DataLakeAnalyticsAccountStatus
            modelAsString: false
          description: The provisioning status of the Data Lake Analytics account.
        state:
          readOnly: true
          type: string
          enum:
            - Active
            - Suspended
          x-ms-enum:
            name: DataLakeAnalyticsAccountState
            modelAsString: false
          description: The state of the Data Lake Analytics account.
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: The account creation time.
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: The account last modified time.
        endpoint:
          readOnly: true
          type: string
          description: The full CName endpoint for this account.
      description: The basic account specific properties that are associated with an underlying Data Lake Analytics account.
      type: object
    DataLakeAnalyticsAccountListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DataLakeAnalyticsAccountBasic'
          description: The results of the list operation.
        count:
          readOnly: true
          type: integer
          format: int32
          description: The current number of data lake analytics accounts under this subscription.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Analytics account list information.
      type: object
    DataLakeStoreAccountInformation:
      description: Data Lake Store account information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DataLakeStoreAccountInformationProperties'
          description: The Data Lake Store account properties.
      type: object
    DataLakeStoreAccountInformationProperties:
      properties:
        suffix:
          readOnly: true
          type: string
          description: The optional suffix for the Data Lake Store account.
      description: The Data Lake Store account properties.
      type: object
    DataLakeStoreAccountInformationListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DataLakeStoreAccountInformation'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Store account list information.
      type: object
    StorageAccountInformation:
      description: Azure Storage account information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageAccountInformationProperties'
          description: The Azure Storage account properties.
      type: object
    StorageAccountInformationProperties:
      properties:
        suffix:
          readOnly: true
          type: string
          description: The optional suffix for the storage account.
      description: The Azure Storage account properties.
      type: object
    StorageAccountInformationListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageAccountInformation'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Azure Storage account list information.
      type: object
    StorageContainer:
      description: Azure Storage blob container information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/StorageContainerProperties'
          description: The properties of the blob container.
      type: object
    StorageContainerProperties:
      properties:
        lastModifiedTime:
          readOnly: true
          type: string
          format: date-time
          description: The last modified time of the blob container.
      description: Azure Storage blob container properties information.
      type: object
    StorageContainerListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/StorageContainer'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: The list of blob containers associated with the storage account attached to the Data Lake Analytics account.
      type: object
    SasTokenInformation:
      properties:
        accessToken:
          readOnly: true
          type: string
          description: The access token for the associated Azure Storage Container.
      description: SAS token information.
      type: object
    SasTokenInformationListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SasTokenInformation'
          description: The results of the list operation.
          x-ms-identifiers:
            - accessToken
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: The SAS response that contains the storage account, container and associated SAS token for connection use.
      type: object
    ComputePolicy:
      description: Data Lake Analytics compute policy information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ComputePolicyProperties'
          description: The compute policy properties.
      type: object
    ComputePolicyProperties:
      properties:
        objectId:
          readOnly: true
          type: string
          format: uuid
          description: The AAD object identifier for the entity to create a policy for.
        objectType:
          readOnly: true
          type: string
          enum:
            - User
            - Group
            - ServicePrincipal
          x-ms-enum:
            name: AADObjectType
            modelAsString: true
          description: The type of AAD object the object identifier refers to.
        maxDegreeOfParallelismPerJob:
          readOnly: true
          type: integer
          format: int32
          minimum: 1
          description: The maximum degree of parallelism per job this user can use to submit jobs.
        minPriorityPerJob:
          readOnly: true
          type: integer
          format: int32
          minimum: 1
          description: The minimum priority per job this user can use to submit jobs.
      description: The compute policy properties.
      type: object
    ComputePolicyListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ComputePolicy'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: The list of compute policies in the account.
      type: object
    FirewallRule:
      description: Data Lake Analytics firewall rule information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FirewallRuleProperties'
          description: The firewall rule properties.
      type: object
    FirewallRuleProperties:
      properties:
        startIpAddress:
          readOnly: true
          type: string
          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
        endIpAddress:
          readOnly: true
          type: string
          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
      description: The firewall rule properties.
      type: object
    FirewallRuleListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Analytics firewall rule list information.
      type: object
    VirtualNetworkRuleState:
      readOnly: true
      type: string
      enum:
        - Active
        - NetworkSourceDeleted
        - Failed
      x-ms-enum:
        name: VirtualNetworkRuleState
        modelAsString: false
      description: The current state of the VirtualNetworkRule for this account.
    VirtualNetworkRule:
      description: Data Lake Analytics  VirtualNetwork Rule information.
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualNetworkRuleProperties'
          description: The  VirtualNetwork rule properties.
      type: object
    VirtualNetworkRuleProperties:
      properties:
        subnetId:
          readOnly: true
          type: string
          description: The resource identifier for the subnet
        virtualNetworkRuleState:
          readOnly: true
          $ref: '#/components/schemas/VirtualNetworkRuleState'
          description: The current state of the VirtualNetwork Rule
      description: The VirtualNetwork Rule properties.
      type: object
    VirtualNetworkRuleListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Analytics VirtualNetwork rule list information.
      type: object
    HiveMetastore:
      properties:
        id:
          readOnly: true
          type: string
          description: The resource identifier.
        name:
          readOnly: true
          type: string
          description: The resource name.
        type:
          readOnly: true
          type: string
          description: The resource type.
        properties:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HiveMetastoreProperties'
          description: The  HiveMetastoreProperties rule properties.
      type: object
    HiveMetastoreProperties:
      properties:
        serverUri:
          readOnly: true
          type: string
          description: The serverUri for the Hive MetaStore
        databaseName:
          readOnly: true
          type: string
          description: The databaseName for the Hive MetaStore
        runtimeVersion:
          readOnly: true
          type: string
          description: The runtimeVersion for the Hive MetaStore
        userName:
          readOnly: true
          type: string
          description: The userName for the Hive MetaStore
        password:
          readOnly: true
          type: string
          description: The password for the Hive MetaStore
        nestedResourceProvisioningState:
          readOnly: true
          $ref: '#/components/schemas/NestedResourceProvisioningState'
          description: The current state of the NestedResource
      description: The HiveMetastore  properties.
      type: object
    HiveMetastoreListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/HiveMetastore'
          description: The results of the list operation.
        nextLink:
          readOnly: true
          type: string
          description: The link (url) to the next page of results.
      description: Data Lake Analytics HiveMetastore list information.
      type: object
    NestedResourceProvisioningState:
      readOnly: true
      type: string
      enum:
        - Succeeded
        - Canceled
        - Failed
      x-ms-enum:
        name: NestedResourceProvisioningState
        modelAsString: false
      description: The current state of the NestedResourceProvisioning for this account.
    OperationDisplay:
      properties:
        provider:
          readOnly: true
          type: string
          description: The resource provider of the operation.
        resource:
          readOnly: true
          type: string
          description: The resource type of the operation.
        operation:
          readOnly: true
          type: string
          description: A friendly name of the operation.
        description:
          readOnly: true
          type: string
          description: A friendly description of the operation.
      description: The display information for a particular operation.
      type: object
    OperationMetaMetricAvailabilitiesSpecification:
      properties:
        timeGrain:
          type: string
          description: The timegrain for OperationMetaMetricAvailabilitiesSpecification.
        blobDuration:
          type: string
          description: The blobDuration for OperationMetaMetricAvailabilitiesSpecification.
      type: object
    OperationMetaMetricSpecification:
      properties:
        name:
          type: string
          description: The name for OperationMetaMetricSpecification.
        displayDescription:
          type: string
          description: The displayName for OperationMetaMetricSpecification.
        displayName:
          type: string
          description: The displayName for OperationMetaMetricSpecification.
        unit:
          type: string
          description: The unit for OperationMetaMetricSpecification.
        aggregationType:
          type: string
          description: The aggregationType for OperationMetaMetricSpecification.
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/OperationMetaMetricAvailabilitiesSpecification'
          description: The availabilities for OperationMetaMetricSpecification.
          x-ms-identifiers: []
      type: object
    OperationMetaLogSpecification:
      properties:
        name:
          type: string
          description: The name for OperationMetaLogSpecification.
        displayName:
          type: string
          description: The displayName for OperationMetaLogSpecification.
        blobDuration:
          type: string
          description: The blobDuration for OperationMetaLogSpecification.
      type: object
    OperationMetaServiceSpecification:
      properties:
        metricSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/OperationMetaMetricSpecification'
          description: The metricSpecifications for OperationMetaServiceSpecification.
          x-ms-identifiers:
            - name
        logSpecifications:
          type: array
          items:
            $ref: '#/components/schemas/OperationMetaLogSpecification'
          description: The logSpecifications for OperationMetaServiceSpecification.
          x-ms-identifiers:
            - name
      type: object
    OperationMetaPropertyInfo:
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/OperationMetaServiceSpecification'
          description: The operations OperationMetaServiceSpecification.
      type: object
    CapabilityInformation:
      properties:
        subscriptionId:
          readOnly: true
          type: string
          format: uuid
          description: The subscription credentials that uniquely identifies the subscription.
        state:
          readOnly: true
          type: string
          enum:
            - Registered
            - Suspended
            - Deleted
            - Unregistered
            - Warned
          x-ms-enum:
            name: SubscriptionState
            modelAsString: true
          description: The subscription state.
        maxAccountCount:
          readOnly: true
          type: integer
          format: int32
          description: The maximum supported number of accounts under this subscription.
        accountCount:
          readOnly: true
          type: integer
          format: int32
          description: The current number of accounts under this subscription.
        migrationState:
          readOnly: true
          type: boolean
          description: The Boolean value of true or false to indicate the maintenance state.
      description: Subscription-level properties and limits for Data Lake Analytics.
      type: object
    NameAvailabilityInformation:
      properties:
        nameAvailable:
          readOnly: true
          type: boolean
          description: The Boolean value of true or false to indicate whether the Data Lake Analytics account name is available or not.
        reason:
          readOnly: true
          type: string
          description: The reason why the Data Lake Analytics account name is not available, if nameAvailable is false.
        message:
          readOnly: true
          type: string
          description: The message describing why the Data Lake Analytics account name is not available, if nameAvailable is false.
      description: Data Lake Analytics account name availability result information.
      type: object
    CreateDataLakeAnalyticsAccountParameters:
      required:
        - location
        - properties
      description: The parameters to use for creating a Data Lake Analytics account.
      properties:
        location:
          type: string
          description: The resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateDataLakeAnalyticsAccountProperties'
          description: The Data Lake Analytics account properties to use for creating.
      type: object
    CreateDataLakeAnalyticsAccountProperties:
      required:
        - defaultDataLakeStoreAccount
        - dataLakeStoreAccounts
      properties:
        defaultDataLakeStoreAccount:
          type: string
          description: The default Data Lake Store account associated with this account.
        dataLakeStoreAccounts:
          type: array
          items:
            $ref: '#/components/schemas/AddDataLakeStoreWithAccountParameters'
          description: The list of Data Lake Store accounts associated with this account.
          x-ms-identifiers:
            - name
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/AddStorageAccountWithAccountParameters'
          description: The list of Azure Blob Storage accounts associated with this account.
          x-ms-identifiers:
            - name
        computePolicies:
          type: array
          items:
            $ref: '#/components/schemas/CreateComputePolicyWithAccountParameters'
          description: The list of compute policies associated with this account.
          x-ms-identifiers:
            - name
        firewallRules:
          type: array
          items:
            $ref: '#/components/schemas/CreateFirewallRuleWithAccountParameters'
          description: The list of firewall rules associated with this account.
          x-ms-identifiers:
            - name
        firewallState:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Disabled
          x-ms-enum:
            name: FirewallState
            modelAsString: false
          description: The current state of the IP address firewall for this account.
        firewallAllowAzureIps:
          type: string
          enum:
            - Enabled
            - Disabled
          default: Disabled
          x-ms-enum:
            name: FirewallAllowAzureIpsState
            modelAsString: false
          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        newTier:
          type: string
          enum:
            - Consumption
            - Commitment_100AUHours
            - Commitment_500AUHours
            - Commitment_1000AUHours
            - Commitment_5000AUHours
            - Commitment_10000AUHours
            - Commitment_50000AUHours
            - Commitment_100000AUHours
            - Commitment_500000AUHours
          default: Consumption
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier for the next month.
        maxJobCount:
          type: integer
          format: int32
          minimum: 1
          default: 3
          description: The maximum supported jobs running under the account at the same time.
        maxDegreeOfParallelism:
          type: integer
          format: int32
          minimum: 1
          default: 30
          description: The maximum supported degree of parallelism for this account.
        maxDegreeOfParallelismPerJob:
          type: integer
          format: int32
          minimum: 1
          default: 32
          description: The maximum supported degree of parallelism per job for this account.
        minPriorityPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The minimum supported priority per job for this account.
        queryStoreRetention:
          type: integer
          format: int32
          minimum: 1
          maximum: 180
          default: 30
          description: The number of days that job metadata is retained.
      type: object
    UpdateDataLakeAnalyticsAccountParameters:
      description: The parameters that can be used to update an existing Data Lake Analytics account.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: The resource tags.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateDataLakeAnalyticsAccountProperties'
          description: The properties that can be updated in an existing Data Lake Analytics account.
      type: object
    UpdateDataLakeAnalyticsAccountProperties:
      properties:
        dataLakeStoreAccounts:
          type: array
          items:
            $ref: '#/components/schemas/UpdateDataLakeStoreWithAccountParameters'
          description: The list of Data Lake Store accounts associated with this account.
          x-ms-identifiers:
            - name
        storageAccounts:
          type: array
          items:
            $ref: '#/components/schemas/UpdateStorageAccountWithAccountParameters'
          description: The list of Azure Blob storage accounts associated with this account.
          x-ms-identifiers:
            - name
        computePolicies:
          type: array
          items:
            $ref: '#/components/schemas/UpdateComputePolicyWithAccountParameters'
          description: The list of compute policies associated with this account.
          x-ms-identifiers:
            - name
        firewallRules:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFirewallRuleWithAccountParameters'
          description: The list of firewall rules associated with this account.
          x-ms-identifiers:
            - name
        firewallState:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallState
            modelAsString: false
          description: The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.
        firewallAllowAzureIps:
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: FirewallAllowAzureIpsState
            modelAsString: false
          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
        newTier:
          type: string
          enum:
            - Consumption
            - Commitment_100AUHours
            - Commitment_500AUHours
            - Commitment_1000AUHours
            - Commitment_5000AUHours
            - Commitment_10000AUHours
            - Commitment_50000AUHours
            - Commitment_100000AUHours
            - Commitment_500000AUHours
          x-ms-enum:
            name: TierType
            modelAsString: false
          description: The commitment tier to use for next month.
        maxJobCount:
          type: integer
          format: int32
          minimum: 1
          description: The maximum supported jobs running under the account at the same time.
        maxDegreeOfParallelism:
          type: integer
          format: int32
          minimum: 1
          description: The maximum supported degree of parallelism for this account.
        maxDegreeOfParallelismPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The maximum supported degree of parallelism per job for this account.
        minPriorityPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The minimum supported priority per job for this account.
        queryStoreRetention:
          type: integer
          format: int32
          minimum: 1
          maximum: 180
          description: The number of days that job metadata is retained.
      description: The properties to update that are associated with an underlying Data Lake Analytics account.
      type: object
    AddDataLakeStoreParameters:
      description: The parameters used to add a new Data Lake Store account.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AddDataLakeStoreProperties'
          description: The Data Lake Store account properties to use when adding a new Data Lake Store account.
      type: object
    AddDataLakeStoreWithAccountParameters:
      required:
        - name
      description: The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the Data Lake Store account to add.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AddDataLakeStoreProperties'
          description: The Data Lake Store account properties to use when adding a new Data Lake Store account.
      type: object
    AddDataLakeStoreProperties:
      properties:
        suffix:
          type: string
          description: The optional suffix for the Data Lake Store account.
      description: The Data Lake Store account properties to use when adding a new Data Lake Store account.
      type: object
    UpdateDataLakeStoreWithAccountParameters:
      required:
        - name
      description: The parameters used to update a Data Lake Store account while updating a Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the Data Lake Store account to update.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateDataLakeStoreProperties'
          description: The Data Lake Store account properties to use when updating a Data Lake Store account.
      type: object
    UpdateDataLakeStoreProperties:
      properties:
        suffix:
          type: string
          description: The optional suffix for the Data Lake Store account.
      description: The Data Lake Store account properties to use when updating a Data Lake Store account.
      type: object
    AddStorageAccountParameters:
      required:
        - properties
      description: The parameters used to add a new Azure Storage account.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AddStorageAccountProperties'
          description: The Azure Storage account properties to use when adding a new Azure Storage account.
      type: object
    AddStorageAccountWithAccountParameters:
      required:
        - name
        - properties
      description: The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the Azure Storage account to add.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AddStorageAccountProperties'
          description: The Azure Storage account properties to use when adding a new Azure Storage account.
      type: object
    AddStorageAccountProperties:
      required:
        - accessKey
      properties:
        accessKey:
          type: string
          description: The access key associated with this Azure Storage account that will be used to connect to it.
        suffix:
          type: string
          default: azuredatalakestore.net
          description: The optional suffix for the storage account.
      description: The Azure Storage account properties to use when adding a new Azure Storage account.
      type: object
    UpdateStorageAccountParameters:
      description: The parameters used to update an Azure Storage account.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateStorageAccountProperties'
          description: The Azure Storage account properties to use when updating an Azure Storage account.
      type: object
    UpdateStorageAccountWithAccountParameters:
      required:
        - name
      description: The parameters used to update an Azure Storage account while updating a Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the Azure Storage account to update.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateStorageAccountProperties'
          description: The Azure Storage account properties to use when updating an Azure Storage account.
      type: object
    UpdateStorageAccountProperties:
      properties:
        accessKey:
          type: string
          description: The updated access key associated with this Azure Storage account that will be used to connect to it.
        suffix:
          type: string
          description: The optional suffix for the storage account.
      description: The Azure Storage account properties to use when updating an Azure Storage account.
      type: object
    CreateOrUpdateComputePolicyParameters:
      required:
        - properties
      description: The parameters used to create a new compute policy.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateComputePolicyProperties'
          description: The compute policy properties to use when creating a new compute policy.
      type: object
    CreateComputePolicyWithAccountParameters:
      required:
        - name
        - properties
      description: The parameters used to create a new compute policy while creating a new Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the compute policy to create.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateComputePolicyProperties'
          description: The compute policy properties to use when creating a new compute policy.
      type: object
    CreateOrUpdateComputePolicyProperties:
      required:
        - objectId
        - objectType
      properties:
        objectId:
          type: string
          format: uuid
          description: The AAD object identifier for the entity to create a policy for.
        objectType:
          type: string
          enum:
            - User
            - Group
            - ServicePrincipal
          x-ms-enum:
            name: AADObjectType
            modelAsString: true
          description: The type of AAD object the object identifier refers to.
        maxDegreeOfParallelismPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
        minPriorityPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
      description: The compute policy properties to use when creating a new compute policy.
      type: object
    UpdateComputePolicyParameters:
      description: The parameters used to update a compute policy.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateComputePolicyProperties'
          description: The compute policy properties to use when updating a compute policy.
      type: object
    UpdateComputePolicyWithAccountParameters:
      required:
        - name
      description: The parameters used to update a compute policy while updating a Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the compute policy to update.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateComputePolicyProperties'
          description: The compute policy properties to use when updating a compute policy.
      type: object
    UpdateComputePolicyProperties:
      properties:
        objectId:
          type: string
          format: uuid
          description: The AAD object identifier for the entity to create a policy for.
        objectType:
          type: string
          enum:
            - User
            - Group
            - ServicePrincipal
          x-ms-enum:
            name: AADObjectType
            modelAsString: true
          description: The type of AAD object the object identifier refers to.
        maxDegreeOfParallelismPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
        minPriorityPerJob:
          type: integer
          format: int32
          minimum: 1
          description: The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
      description: The compute policy properties to use when updating a compute policy.
      type: object
    CreateOrUpdateFirewallRuleParameters:
      required:
        - properties
      description: The parameters used to create a new firewall rule.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
          description: The firewall rule properties to use when creating a new firewall rule.
      type: object
    CreateFirewallRuleWithAccountParameters:
      required:
        - name
        - properties
      description: The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the firewall rule to create.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
          description: The firewall rule properties to use when creating a new firewall rule.
      type: object
    CreateOrUpdateFirewallRuleProperties:
      required:
        - startIpAddress
        - endIpAddress
      properties:
        startIpAddress:
          type: string
          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
        endIpAddress:
          type: string
          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
      description: The firewall rule properties to use when creating a new firewall rule.
      type: object
    UpdateFirewallRuleParameters:
      description: The parameters used to update a firewall rule.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
          description: The firewall rule properties to use when updating a firewall rule.
      type: object
    UpdateFirewallRuleWithAccountParameters:
      required:
        - name
      description: The parameters used to update a firewall rule while updating a Data Lake Analytics account.
      properties:
        name:
          type: string
          description: The unique name of the firewall rule to update.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
          description: The firewall rule properties to use when updating a firewall rule.
      type: object
    UpdateFirewallRuleProperties:
      properties:
        startIpAddress:
          type: string
          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
        endIpAddress:
          type: string
          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
      description: The firewall rule properties to use when updating a firewall rule.
      type: object
    CheckNameAvailabilityParameters:
      required:
        - name
        - type
      properties:
        name:
          type: string
          description: The Data Lake Analytics name to check availability for.
        type:
          type: string
          enum:
            - Microsoft.DataLakeAnalytics/accounts
          description: 'The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeAnalytics/accounts'
      description: Data Lake Analytics account name availability check parameters.
      type: object
  x-stackQL-resources:
    accounts:
      id: azure.data_lake_analytics.accounts
      name: accounts
      title: accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1?api-version=2019-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1?api-version=2019-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1?api-version=2019-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        check_name_availability:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeAnalytics~1locations~1{location}~1checkNameAvailability~1?api-version=2019-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/accounts/methods/delete'
    data_lake_store_accounts:
      id: azure.data_lake_analytics.data_lake_store_accounts
      name: data_lake_store_accounts
      title: data_lake_store_accounts
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1dataLakeStoreAccounts~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        add:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1dataLakeStoreAccounts~1{dataLakeStoreAccountName}~1?api-version=2019-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1dataLakeStoreAccounts~1{dataLakeStoreAccountName}~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1dataLakeStoreAccounts~1{dataLakeStoreAccountName}~1?api-version=2019-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_lake_store_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_lake_store_accounts/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_lake_store_accounts/methods/add'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/data_lake_store_accounts/methods/delete'
    storage_accounts:
      id: azure.data_lake_analytics.storage_accounts
      name: storage_accounts
      title: storage_accounts
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        add:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1{storageAccountName}~1?api-version=2019-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1{storageAccountName}~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1{storageAccountName}~1?api-version=2019-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1{storageAccountName}~1?api-version=2019-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/add'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_accounts/methods/delete'
    storage_accounts_storage_containers:
      id: azure.data_lake_analytics.storage_accounts_storage_containers
      name: storage_accounts_storage_containers
      title: storage_accounts_storage_containers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1{storageAccountName}~1containers~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_accounts_storage_containers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    storage_accounts_storage_container:
      id: azure.data_lake_analytics.storage_accounts_storage_container
      name: storage_accounts_storage_container
      title: storage_accounts_storage_container
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1{storageAccountName}~1containers~1{containerName}~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_accounts_storage_container/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    storage_accounts_sas_tokens:
      id: azure.data_lake_analytics.storage_accounts_sas_tokens
      name: storage_accounts_sas_tokens
      title: storage_accounts_sas_tokens
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1storageAccounts~1{storageAccountName}~1containers~1{containerName}~1listSasTokens~1?api-version=2019-11-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/storage_accounts_sas_tokens/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    compute_policies:
      id: azure.data_lake_analytics.compute_policies
      name: compute_policies
      title: compute_policies
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1computePolicies~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1computePolicies~1{computePolicyName}~1?api-version=2019-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1computePolicies~1{computePolicyName}~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1computePolicies~1{computePolicyName}~1?api-version=2019-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1computePolicies~1{computePolicyName}~1?api-version=2019-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/compute_policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/compute_policies/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/compute_policies/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/compute_policies/methods/delete'
    firewall_rules:
      id: azure.data_lake_analytics.firewall_rules
      name: firewall_rules
      title: firewall_rules
      methods:
        list_by_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1firewallRules~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2019-11-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2019-11-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeAnalytics~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2019-11-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/get'
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/list_by_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/delete'
    operations:
      id: azure.data_lake_analytics.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DataLakeAnalytics~1operations~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    locations_capability:
      id: azure.data_lake_analytics.locations_capability
      name: locations_capability
      title: locations_capability
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeAnalytics~1locations~1{location}~1capability~1?api-version=2019-11-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations_capability/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_accounts:
      id: azure.data_lake_analytics.vw_accounts
      name: vw_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.accountId') as account_id,
              JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
              JSON_EXTRACT(properties, '$.state') as state,
              JSON_EXTRACT(properties, '$.creationTime') as creation_time,
              JSON_EXTRACT(properties, '$.lastModifiedTime') as last_modified_time,
              JSON_EXTRACT(properties, '$.endpoint') as endpoint,
              JSON_EXTRACT(properties, '$.defaultDataLakeStoreAccountType') as default_data_lake_store_account_type,
              JSON_EXTRACT(properties, '$.defaultDataLakeStoreAccount') as default_data_lake_store_account,
              JSON_EXTRACT(properties, '$.dataLakeStoreAccounts') as data_lake_store_accounts,
              JSON_EXTRACT(properties, '$.publicDataLakeStoreAccounts') as public_data_lake_store_accounts,
              JSON_EXTRACT(properties, '$.storageAccounts') as storage_accounts,
              JSON_EXTRACT(properties, '$.computePolicies') as compute_policies,
              JSON_EXTRACT(properties, '$.hiveMetastores') as hive_metastores,
              JSON_EXTRACT(properties, '$.virtualNetworkRules') as virtual_network_rules,
              JSON_EXTRACT(properties, '$.firewallRules') as firewall_rules,
              JSON_EXTRACT(properties, '$.firewallState') as firewall_state,
              JSON_EXTRACT(properties, '$.firewallAllowAzureIps') as firewall_allow_azure_ips,
              JSON_EXTRACT(properties, '$.newTier') as new_tier,
              JSON_EXTRACT(properties, '$.currentTier') as current_tier,
              JSON_EXTRACT(properties, '$.maxJobCount') as max_job_count,
              JSON_EXTRACT(properties, '$.maxActiveJobCountPerUser') as max_active_job_count_per_user,
              JSON_EXTRACT(properties, '$.maxQueuedJobCountPerUser') as max_queued_job_count_per_user,
              JSON_EXTRACT(properties, '$.maxJobRunningTimeInMin') as max_job_running_time_in_min,
              JSON_EXTRACT(properties, '$.systemMaxJobCount') as system_max_job_count,
              JSON_EXTRACT(properties, '$.maxDegreeOfParallelism') as max_degree_of_parallelism,
              JSON_EXTRACT(properties, '$.systemMaxDegreeOfParallelism') as system_max_degree_of_parallelism,
              JSON_EXTRACT(properties, '$.maxDegreeOfParallelismPerJob') as max_degree_of_parallelism_per_job,
              JSON_EXTRACT(properties, '$.minPriorityPerJob') as min_priority_per_job,
              JSON_EXTRACT(properties, '$.queryStoreRetention') as query_store_retention,
              JSON_EXTRACT(properties, '$.debugDataAccessLevel') as debug_data_access_level,
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.data_lake_analytics.accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.accountId') as account_id,
                JSON_EXTRACT(properties, '$.provisioningState') as provisioning_state,
                JSON_EXTRACT(properties, '$.state') as state,
                JSON_EXTRACT(properties, '$.creationTime') as creation_time,
                JSON_EXTRACT(properties, '$.lastModifiedTime') as last_modified_time,
                JSON_EXTRACT(properties, '$.endpoint') as endpoint,
                JSON_EXTRACT(properties, '$.defaultDataLakeStoreAccountType') as default_data_lake_store_account_type,
                JSON_EXTRACT(properties, '$.defaultDataLakeStoreAccount') as default_data_lake_store_account,
                JSON_EXTRACT(properties, '$.dataLakeStoreAccounts') as data_lake_store_accounts,
                JSON_EXTRACT(properties, '$.publicDataLakeStoreAccounts') as public_data_lake_store_accounts,
                JSON_EXTRACT(properties, '$.storageAccounts') as storage_accounts,
                JSON_EXTRACT(properties, '$.computePolicies') as compute_policies,
                JSON_EXTRACT(properties, '$.hiveMetastores') as hive_metastores,
                JSON_EXTRACT(properties, '$.virtualNetworkRules') as virtual_network_rules,
                JSON_EXTRACT(properties, '$.firewallRules') as firewall_rules,
                JSON_EXTRACT(properties, '$.firewallState') as firewall_state,
                JSON_EXTRACT(properties, '$.firewallAllowAzureIps') as firewall_allow_azure_ips,
                JSON_EXTRACT(properties, '$.newTier') as new_tier,
                JSON_EXTRACT(properties, '$.currentTier') as current_tier,
                JSON_EXTRACT(properties, '$.maxJobCount') as max_job_count,
                JSON_EXTRACT(properties, '$.maxActiveJobCountPerUser') as max_active_job_count_per_user,
                JSON_EXTRACT(properties, '$.maxQueuedJobCountPerUser') as max_queued_job_count_per_user,
                JSON_EXTRACT(properties, '$.maxJobRunningTimeInMin') as max_job_running_time_in_min,
                JSON_EXTRACT(properties, '$.systemMaxJobCount') as system_max_job_count,
                JSON_EXTRACT(properties, '$.maxDegreeOfParallelism') as max_degree_of_parallelism,
                JSON_EXTRACT(properties, '$.systemMaxDegreeOfParallelism') as system_max_degree_of_parallelism,
                JSON_EXTRACT(properties, '$.maxDegreeOfParallelismPerJob') as max_degree_of_parallelism_per_job,
                JSON_EXTRACT(properties, '$.minPriorityPerJob') as min_priority_per_job,
                JSON_EXTRACT(properties, '$.queryStoreRetention') as query_store_retention,
                JSON_EXTRACT(properties, '$.debugDataAccessLevel') as debug_data_access_level,
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.data_lake_analytics.accounts
                WHERE subscriptionId = 'replace-me';
    vw_data_lake_store_accounts:
      id: azure.data_lake_analytics.vw_data_lake_store_accounts
      name: vw_data_lake_store_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.suffix') as suffix,
              subscriptionId,
              resourceGroupName,
              accountName,
              dataLakeStoreAccountName
              FROM azure.data_lake_analytics.data_lake_store_accounts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.suffix') as suffix,
                subscriptionId,
                resourceGroupName,
                accountName,
                dataLakeStoreAccountName
                FROM azure.data_lake_analytics.data_lake_store_accounts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_storage_accounts:
      id: azure.data_lake_analytics.vw_storage_accounts
      name: vw_storage_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.suffix') as suffix,
              subscriptionId,
              resourceGroupName,
              accountName,
              storageAccountName
              FROM azure.data_lake_analytics.storage_accounts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.suffix') as suffix,
                subscriptionId,
                resourceGroupName,
                accountName,
                storageAccountName
                FROM azure.data_lake_analytics.storage_accounts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_storage_accounts_storage_container:
      id: azure.data_lake_analytics.vw_storage_accounts_storage_container
      name: vw_storage_accounts_storage_container
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.lastModifiedTime') as last_modified_time,
              subscriptionId,
              resourceGroupName,
              accountName,
              storageAccountName,
              containerName
              FROM azure.data_lake_analytics.storage_accounts_storage_container
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND storageAccountName = 'replace-me' AND containerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.lastModifiedTime') as last_modified_time,
                subscriptionId,
                resourceGroupName,
                accountName,
                storageAccountName,
                containerName
                FROM azure.data_lake_analytics.storage_accounts_storage_container
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND storageAccountName = 'replace-me' AND containerName = 'replace-me';
    vw_compute_policies:
      id: azure.data_lake_analytics.vw_compute_policies
      name: vw_compute_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.objectId') as object_id,
              JSON_EXTRACT(properties, '$.objectType') as object_type,
              JSON_EXTRACT(properties, '$.maxDegreeOfParallelismPerJob') as max_degree_of_parallelism_per_job,
              JSON_EXTRACT(properties, '$.minPriorityPerJob') as min_priority_per_job,
              subscriptionId,
              resourceGroupName,
              accountName,
              computePolicyName
              FROM azure.data_lake_analytics.compute_policies
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.objectId') as object_id,
                JSON_EXTRACT(properties, '$.objectType') as object_type,
                JSON_EXTRACT(properties, '$.maxDegreeOfParallelismPerJob') as max_degree_of_parallelism_per_job,
                JSON_EXTRACT(properties, '$.minPriorityPerJob') as min_priority_per_job,
                subscriptionId,
                resourceGroupName,
                accountName,
                computePolicyName
                FROM azure.data_lake_analytics.compute_policies
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_firewall_rules:
      id: azure.data_lake_analytics.vw_firewall_rules
      name: vw_firewall_rules
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.startIpAddress') as start_ip_address,
              JSON_EXTRACT(properties, '$.endIpAddress') as end_ip_address,
              subscriptionId,
              resourceGroupName,
              accountName,
              firewallRuleName
              FROM azure.data_lake_analytics.firewall_rules
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.startIpAddress') as start_ip_address,
                JSON_EXTRACT(properties, '$.endIpAddress') as end_ip_address,
                subscriptionId,
                resourceGroupName,
                accountName,
                firewallRuleName
                FROM azure.data_lake_analytics.firewall_rules
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/accounts/?api-version=2019-11-01-preview:
    get:
      tags:
        - Accounts
      operationId: Accounts_List
      description: Gets the first page of Data Lake Analytics accounts, if any, within the current subscription. This includes a link to the next page, if any.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: OData filter. Optional.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of items to return. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $skip
          in: query
          description: The number of items to skip over before returning elements. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $select
          in: query
          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
          required: false
          schema:
            type: string
        - name: $count
          in: query
          description: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the list of Azure Data Lake Analytics accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccountListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DataLakeAnalyticsAccountBasic'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/?api-version=2019-11-01-preview:
    get:
      tags:
        - Accounts
      operationId: Accounts_ListByResourceGroup
      description: Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group. This includes a link to the next page, if any.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: $filter
          in: query
          description: OData filter. Optional.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of items to return. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $skip
          in: query
          description: The number of items to skip over before returning elements. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $select
          in: query
          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
          required: false
          schema:
            type: string
        - name: $count
          in: query
          description: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the list of accounts in the specified resource group.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccountListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DataLakeAnalyticsAccountBasic'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/?api-version=2019-11-01-preview:
    put:
      tags:
        - Accounts
      operationId: Accounts_Create
      description: Creates the specified Data Lake Analytics account. This supplies the user with computation services for Data Lake Analytics workloads.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: Parameters supplied to create a new Data Lake Analytics account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataLakeAnalyticsAccountParameters'
      responses:
        '200':
          description: Successfully created the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccount'
        '201':
          description: Successfully initiated creation of the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccount'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    get:
      tags:
        - Accounts
      operationId: Accounts_Get
      description: Gets details of the specified Data Lake Analytics account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully retrieved the details of the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccount'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Accounts
      operationId: Accounts_Update
      description: Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      requestBody:
        description: Parameters supplied to the update Data Lake Analytics account operation.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataLakeAnalyticsAccountParameters'
      responses:
        '200':
          description: Successfully updated the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccount'
        '201':
          description: Successfully initiated an update of the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccount'
        '202':
          description: Successfully initiated an update of the specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeAnalyticsAccount'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Accounts
      operationId: Accounts_Delete
      description: Begins the delete process for the Data Lake Analytics account object specified by the account name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully deleted the specified account.
        '202':
          description: Successfully initiated the deletion of the specified account.
        '204':
          description: The specified account was not found.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/dataLakeStoreAccounts/?api-version=2019-11-01-preview:
    get:
      tags:
        - DataLakeStoreAccounts
      operationId: DataLakeStoreAccounts_ListByAccount
      description: Gets the first page of Data Lake Store accounts linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: $filter
          in: query
          description: OData filter. Optional.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of items to return. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $skip
          in: query
          description: The number of items to skip over before returning elements. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $select
          in: query
          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
          required: false
          schema:
            type: string
        - name: $count
          in: query
          description: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the list of Data Lake Store accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountInformationListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DataLakeStoreAccountInformation'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/dataLakeStoreAccounts/{dataLakeStoreAccountName}/?api-version=2019-11-01-preview:
    put:
      tags:
        - DataLakeStoreAccounts
      operationId: DataLakeStoreAccounts_Add
      description: Updates the specified Data Lake Analytics account to include the additional Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: dataLakeStoreAccountName
          in: path
          description: The name of the Data Lake Store account to add.
          required: true
          schema:
            type: string
      requestBody:
        description: The details of the Data Lake Store account.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDataLakeStoreParameters'
      responses:
        '200':
          description: Successfully added the specified Azure Data Lake Store account information.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - DataLakeStoreAccounts
      operationId: DataLakeStoreAccounts_Get
      description: Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: dataLakeStoreAccountName
          in: path
          description: The name of the Data Lake Store account to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the specified Azure Data Lake Store account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountInformation'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - DataLakeStoreAccounts
      operationId: DataLakeStoreAccounts_Delete
      description: Updates the Data Lake Analytics account specified to remove the specified Data Lake Store account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: dataLakeStoreAccountName
          in: path
          description: The name of the Data Lake Store account to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully removed the specified Azure Data Lake Store account information from the specified Azure Data Lake Analytics account.
        '204':
          description: The specified datalake storage account does not exist or was already deleted.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/?api-version=2019-11-01-preview:
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_ListByAccount
      description: Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: $filter
          in: query
          description: The OData filter. Optional.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: The number of items to return. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $skip
          in: query
          description: The number of items to skip over before returning elements. Optional.
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - name: $select
          in: query
          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
          required: false
          schema:
            type: string
        - name: $orderby
          in: query
          description: OrderBy clause. One or more comma-separated expressions with an optional "asc" (the default) or "desc" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
          required: false
          schema:
            type: string
        - name: $count
          in: query
          description: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the list of Azure Storage accounts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountInformationListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/StorageAccountInformation'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/?api-version=2019-11-01-preview:
    put:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Add
      description: Updates the specified Data Lake Analytics account to add an Azure Storage account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: storageAccountName
          in: path
          description: The name of the Azure Storage account to add
          required: true
          schema:
            type: string
      requestBody:
        description: The parameters containing the access key and optional suffix for the Azure Storage Account.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStorageAccountParameters'
      responses:
        '200':
          description: Successfully added the specified Azure Storage account information to the specified Azure Data Lake Analytics account.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Get
      description: Gets the specified Azure Storage account linked to the given Data Lake Analytics account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: storageAccountName
          in: path
          description: The name of the Azure Storage account for which to retrieve the details.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the specified Azure Storage account information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageAccountInformation'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Update
      description: Updates the Data Lake Analytics account to replace Azure Storage blob account details, such as the access key and/or suffix.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: storageAccountName
          in: path
          description: The Azure Storage account to modify
          required: true
          schema:
            type: string
      requestBody:
        description: The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorageAccountParameters'
      responses:
        '200':
          description: Successfully update the specified Azure Storage account information for the specified Azure Data Lake Analytics account.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_Delete
      description: Updates the specified Data Lake Analytics account to remove an Azure Storage account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: storageAccountName
          in: path
          description: The name of the Azure Storage account to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the specified Azure Storage account information from the Azure Data Lake Analytics account.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers/?api-version=2019-11-01-preview:
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_ListStorageContainers
      description: Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics and Azure Storage account combination. The response includes a link to the next page of results, if any.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: storageAccountName
          in: path
          description: The name of the Azure storage account from which to list blob containers.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of Azure Storage containers under the specified Azure Data Lake Analytics account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainerListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers/{containerName}/?api-version=2019-11-01-preview:
    get:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_GetStorageContainer
      description: Gets the specified Azure Storage container associated with the given Data Lake Analytics and Azure Storage accounts.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: storageAccountName
          in: path
          description: The name of the Azure storage account from which to retrieve the blob container.
          required: true
          schema:
            type: string
        - name: containerName
          in: path
          description: The name of the Azure storage container to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the specified Azure Storage container information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageContainer'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers/{containerName}/listSasTokens/?api-version=2019-11-01-preview:
    post:
      tags:
        - StorageAccounts
      operationId: StorageAccounts_ListSasTokens
      description: Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account and container combination.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: storageAccountName
          in: path
          description: The name of the Azure storage account for which the SAS token is being requested.
          required: true
          schema:
            type: string
        - name: containerName
          in: path
          description: The name of the Azure storage container for which the SAS token is being requested.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the list of Storage Account SAS tokens for the specified Azure Storage account container.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SasTokenInformationListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/?api-version=2019-11-01-preview:
    get:
      tags:
        - ComputePolicies
      operationId: ComputePolicies_ListByAccount
      description: Lists the Data Lake Analytics compute policies within the specified Data Lake Analytics account. An account supports, at most, 50 policies
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully listed the compute policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputePolicyListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/{computePolicyName}/?api-version=2019-11-01-preview:
    put:
      tags:
        - ComputePolicies
      operationId: ComputePolicies_CreateOrUpdate
      description: Creates or updates the specified compute policy. During update, the compute policy with the specified name will be replaced with this new compute policy. An account supports, at most, 50 policies
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: computePolicyName
          in: path
          description: The name of the compute policy to create or update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update the compute policy. The max degree of parallelism per job property, min priority per job property, or both must be present.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateComputePolicyParameters'
      responses:
        '200':
          description: Successfully created or updated the specified compute policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputePolicy'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - ComputePolicies
      operationId: ComputePolicies_Get
      description: Gets the specified Data Lake Analytics compute policy.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: computePolicyName
          in: path
          description: The name of the compute policy to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the specified compute policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputePolicy'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - ComputePolicies
      operationId: ComputePolicies_Update
      description: Updates the specified compute policy.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: computePolicyName
          in: path
          description: The name of the compute policy to update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update the compute policy.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComputePolicyParameters'
      responses:
        '200':
          description: Successfully updated the specified compute policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputePolicy'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - ComputePolicies
      operationId: ComputePolicies_Delete
      description: Deletes the specified compute policy from the specified Data Lake Analytics account
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: computePolicyName
          in: path
          description: The name of the compute policy to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the specified compute policy
        '204':
          description: The specified compute policy does not exist or was already deleted.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/?api-version=2019-11-01-preview:
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_ListByAccount
      description: Lists the Data Lake Analytics firewall rules within the specified Data Lake Analytics account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
      responses:
        '200':
          description: Successfully listed the firewall rules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}/?api-version=2019-11-01-preview:
    put:
      tags:
        - FirewallRules
      operationId: FirewallRules_CreateOrUpdate
      description: Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to create or update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to create or update the firewall rule.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateFirewallRuleParameters'
      responses:
        '200':
          description: Successfully created or updated the specified firewall rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - FirewallRules
      operationId: FirewallRules_Get
      description: Gets the specified Data Lake Analytics firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the specified firewall rule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - FirewallRules
      operationId: FirewallRules_Update
      description: Updates the specified firewall rule.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to update.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to update the firewall rule.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleParameters'
      responses:
        '200':
          description: Successfully updated the specified firewall rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - FirewallRules
      operationId: FirewallRules_Delete
      description: Deletes the specified firewall rule from the specified Data Lake Analytics account
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - name: firewallRuleName
          in: path
          description: The name of the firewall rule to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the specified firewall rule
        '204':
          description: The specified firewall rule does not exist or was already deleted.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.DataLakeAnalytics/operations/?api-version=2019-11-01-preview:
    get:
      tags:
        - Operations
      operationId: Operations_List
      description: Lists all of the available Data Lake Analytics REST API operations.
      parameters: []
      responses:
        '200':
          description: Successfully listed the available operations for Data Lake Analytics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/locations/{location}/capability/?api-version=2019-11-01-preview:
    get:
      tags:
        - Locations
      operationId: Locations_GetCapability
      description: Gets subscription-level properties and limits for Data Lake Analytics specified by resource location.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The resource location without whitespace.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the subscription-level properties and limits for Data Lake Analytics specified by resource location.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityInformation'
        '404':
          description: Subscription not found.
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/locations/{location}/checkNameAvailability/?api-version=2019-11-01-preview:
    post:
      tags:
        - Accounts
      operationId: Accounts_CheckNameAvailability
      description: Checks whether the specified account name is available or taken.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: location
          in: path
          description: The resource location without whitespace.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to check the Data Lake Analytics account name availability.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
      responses:
        '200':
          description: Successfully retrieved the Data Lake Analytics account name availability information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityInformation'
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
