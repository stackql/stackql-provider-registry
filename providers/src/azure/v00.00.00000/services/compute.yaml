openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Compute
  description: The Azure Compute APIs give you programmatic access to virtual machines and their supporting resources.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    DiskNameParameter:
      name: diskName
      in: path
      description: The name of the managed disk that is being created. The name can't be changed after the disk is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client Api Version.
      required: true
      schema:
        type: string
    IncludeExtendedLocationsParameter:
      name: includeExtendedLocations
      in: query
      description: To Include Extended Locations information or not in the response.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    DiskEncryptionSetNameParameter:
      name: diskEncryptionSetName
      in: path
      description: The name of the disk encryption set that is being created. The name can't be changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GalleryODataExpandQueryParameter:
      name: $expand
      in: query
      description: The expand query option to apply on the operation.
      required: false
      x-ms-parameter-location: method
      schema:
        enum:
          - SharingProfile/Groups
        x-ms-enum:
          name: GalleryExpandParams
          modelAsString: true
        type: string
    DiskAccessNameParameter:
      name: diskAccessName
      in: path
      description: The name of the disk access resource that is being created. The name can't be changed after the disk encryption set is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The maximum name length is 80 characters.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    LocationNameParameter:
      name: location
      in: path
      description: Resource location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    PublicGalleryNameParameter:
      name: publicGalleryName
      in: path
      description: The public name of the community gallery.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GalleryImageNameParameter:
      name: galleryImageName
      in: path
      description: The name of the community gallery image definition.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    GalleryImageVersionNameParameter:
      name: galleryImageVersionName
      in: path
      description: 'The name of the community gallery image version. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>'
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    DiskRestorePointNameParameter:
      name: diskRestorePointName
      in: path
      description: The name of the disk restore point created.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    RestorePointCollectionNameParameter:
      name: restorePointCollectionName
      in: path
      description: The name of the restore point collection that the disk restore point belongs.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    VmRestorePointNameParameter:
      name: vmRestorePointName
      in: path
      description: The name of the vm restore point that the disk disk restore point belongs.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SnapshotNameParameter:
      name: snapshotName
      in: path
      description: The name of the snapshot that is being created. The name can't be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9, _ and -. The max name length is 80 characters.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Disk:
      description: Disk resource.
      properties:
        managedBy:
          readOnly: true
          type: string
          description: A relative URI containing the ID of the VM that has the disk attached.
        managedByExtended:
          readOnly: true
          type: array
          items:
            type: string
          description: List of relative URIs containing the IDs of the VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.
        sku:
          $ref: '#/components/schemas/DiskSku'
        zones:
          type: array
          items:
            type: string
          description: The Logical zone list for Disk.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location where the disk will be created. Extended location cannot be changed.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiskProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    DiskUpdate:
      description: Disk update resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiskUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        sku:
          $ref: '#/components/schemas/DiskSku'
      type: object
    DiskList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Disk'
          description: A list of disks.
        nextLink:
          type: string
          description: The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of disks.
      required:
        - value
      description: The List Disks operation response.
      type: object
    DiskSku:
      properties:
        name:
          type: string
          enum:
            - Standard_LRS
            - Premium_LRS
            - StandardSSD_LRS
            - UltraSSD_LRS
            - Premium_ZRS
            - StandardSSD_ZRS
            - PremiumV2_LRS
          x-ms-enum:
            name: DiskStorageAccountTypes
            modelAsString: true
            values:
              - value: Standard_LRS
                description: Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.
              - value: Premium_LRS
                description: Premium SSD locally redundant storage. Best for production and performance sensitive workloads.
              - value: StandardSSD_LRS
                description: Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.
              - value: UltraSSD_LRS
                description: Ultra SSD locally redundant storage. Best for IO-intensive workloads such as SAP HANA, top tier databases (for example, SQL, Oracle), and other transaction-heavy workloads.
              - value: Premium_ZRS
                description: Premium SSD zone redundant storage. Best for the production workloads that need storage resiliency against zone failures.
              - value: StandardSSD_ZRS
                description: Standard SSD zone redundant storage. Best for web servers, lightly used enterprise applications and dev/test that need storage resiliency against zone failures.
              - value: PremiumV2_LRS
                description: Premium SSD v2 locally redundant storage. Best for production and performance-sensitive workloads that consistently require low latency and high IOPS and throughput.
          description: The sku name.
        tier:
          type: string
          readOnly: true
          description: The sku tier.
      description: The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS, Premium_ZRS, StandardSSD_ZRS, or PremiumV2_LRS.
      type: object
    DiskProperties:
      properties:
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: The time when the disk was created.
        osType:
          type: string
          description: The Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        purchasePlan:
          $ref: '#/components/schemas/PurchasePlan'
          description: 'Purchase plan information for the the image from which the OS disk was created. E.g. - {name: 2019-Datacenter, publisher: MicrosoftWindowsServer, product: WindowsServer}'
        supportedCapabilities:
          $ref: '#/components/schemas/SupportedCapabilities'
          description: List of supported capabilities for the image from which the OS disk was created.
        creationData:
          $ref: '#/components/schemas/CreationData'
          description: Disk source information. CreationData information cannot be changed after the disk has been created.
        diskSizeGB:
          type: integer
          format: int32
          description: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
        diskSizeBytes:
          type: integer
          format: int64
          readOnly: true
          description: The size of the disk in bytes. This field is read only.
        uniqueId:
          type: string
          readOnly: true
          description: Unique Guid identifying the resource.
        encryptionSettingsCollection:
          $ref: '#/components/schemas/EncryptionSettingsCollection'
          description: Encryption settings collection used for Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
        provisioningState:
          readOnly: true
          type: string
          description: The disk provisioning state.
        diskIOPSReadWrite:
          type: integer
          format: int64
          description: The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.
        diskMBpsReadWrite:
          type: integer
          format: int64
          description: The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
        diskIOPSReadOnly:
          type: integer
          format: int64
          description: The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.
        diskMBpsReadOnly:
          type: integer
          format: int64
          description: The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
        diskState:
          $ref: '#/components/schemas/DiskState'
          description: The state of the disk.
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
        maxShares:
          type: integer
          format: int32
          description: The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.
        shareInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ShareInfoElement'
          x-ms-identifiers:
            - vmUri
          description: Details of the list of all VMs that have the disk attached. maxShares should be set to a value greater than one for disks to allow attaching them to multiple VMs.
        networkAccessPolicy:
          $ref: '#/components/schemas/NetworkAccessPolicy'
        diskAccessId:
          type: string
          description: ARM id of the DiskAccess resource for using private endpoints on disks.
        burstingEnabledTime:
          type: string
          readOnly: true
          format: date-time
          description: Latest time when bursting was last enabled on a disk.
        tier:
          type: string
          description: 'Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.'
        burstingEnabled:
          type: boolean
          description: Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.
        propertyUpdatesInProgress:
          readOnly: true
          $ref: '#/components/schemas/PropertyUpdatesInProgress'
          description: Properties of the disk for which update is pending.
        supportsHibernation:
          type: boolean
          description: Indicates the OS on a disk supports hibernation.
        securityProfile:
          $ref: '#/components/schemas/DiskSecurityProfile'
          description: Contains the security related information for the resource.
        completionPercent:
          type: number
          description: Percentage complete for the background copy when a resource is created via the CopyStart operation.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
        dataAccessAuthMode:
          $ref: '#/components/schemas/DataAccessAuthMode'
        optimizedForFrequentAttach:
          type: boolean
          description: Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine.
        LastOwnershipUpdateTime:
          readOnly: true
          type: string
          format: date-time
          description: The UTC time when the ownership state of the disk was last changed i.e., the time the disk was last attached or detached from a VM or the time when the VM to which the disk was attached was deallocated or started.
      required:
        - creationData
      description: Disk resource properties.
      type: object
    DiskUpdateProperties:
      properties:
        osType:
          type: string
          description: the Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        diskSizeGB:
          type: integer
          format: int32
          description: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
        encryptionSettingsCollection:
          $ref: '#/components/schemas/EncryptionSettingsCollection'
          description: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
        diskIOPSReadWrite:
          type: integer
          format: int64
          description: The number of IOPS allowed for this disk; only settable for UltraSSD disks. One operation can transfer between 4k and 256k bytes.
        diskMBpsReadWrite:
          type: integer
          format: int64
          description: The bandwidth allowed for this disk; only settable for UltraSSD disks. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
        diskIOPSReadOnly:
          type: integer
          format: int64
          description: The total number of IOPS that will be allowed across all VMs mounting the shared disk as ReadOnly. One operation can transfer between 4k and 256k bytes.
        diskMBpsReadOnly:
          type: integer
          format: int64
          description: The total throughput (MBps) that will be allowed across all VMs mounting the shared disk as ReadOnly. MBps means millions of bytes per second - MB here uses the ISO notation, of powers of 10.
        maxShares:
          type: integer
          format: int32
          description: The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
        networkAccessPolicy:
          $ref: '#/components/schemas/NetworkAccessPolicy'
        diskAccessId:
          type: string
          description: ARM id of the DiskAccess resource for using private endpoints on disks.
        tier:
          type: string
          description: 'Performance tier of the disk (e.g, P4, S10) as described here: https://azure.microsoft.com/en-us/pricing/details/managed-disks/. Does not apply to Ultra disks.'
        burstingEnabled:
          type: boolean
          description: Set to true to enable bursting beyond the provisioned performance target of the disk. Bursting is disabled by default. Does not apply to Ultra disks.
        purchasePlan:
          $ref: '#/components/schemas/PurchasePlan'
          description: Purchase plan information to be added on the OS disk
        supportedCapabilities:
          $ref: '#/components/schemas/SupportedCapabilities'
          description: List of supported capabilities to be added on the OS disk.
        propertyUpdatesInProgress:
          readOnly: true
          $ref: '#/components/schemas/PropertyUpdatesInProgress'
          description: Properties of the disk for which update is pending.
        supportsHibernation:
          type: boolean
          description: Indicates the OS on a disk supports hibernation.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
        dataAccessAuthMode:
          $ref: '#/components/schemas/DataAccessAuthMode'
        optimizedForFrequentAttach:
          type: boolean
          description: Setting this property to true improves reliability and performance of data disks that are frequently (more than 5 times a day) by detached from one virtual machine and attached to another. This property should not be set for disks that are not detached and attached frequently as it causes the disks to not align with the fault domain of the virtual machine.
      description: Disk resource update properties.
      type: object
    ShareInfoElement:
      properties:
        vmUri:
          readOnly: true
          type: string
          description: A relative URI containing the ID of the VM that has the disk attached.
      type: object
    PropertyUpdatesInProgress:
      properties:
        targetTier:
          type: string
          description: The target performance tier of the disk if a tier change operation is in progress.
      description: Properties of the disk for which update is pending.
      type: object
    ProximityPlacementGroupProperties:
      properties:
        proximityPlacementGroupType:
          type: string
          description: 'Specifies the type of the proximity placement group. Possible values are: **Standard** : Co-locate resources within an Azure region or Availability Zone. **Ultra** : For future use.'
          enum:
            - Standard
            - Ultra
          x-ms-enum:
            name: ProximityPlacementGroupType
            modelAsString: true
        virtualMachines:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResourceWithColocationStatus'
          description: A list of references to all virtual machines in the proximity placement group.
        virtualMachineScaleSets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResourceWithColocationStatus'
          description: A list of references to all virtual machine scale sets in the proximity placement group.
        availabilitySets:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SubResourceWithColocationStatus'
          description: A list of references to all availability sets in the proximity placement group.
        colocationStatus:
          $ref: '#/components/schemas/InstanceViewStatus'
          description: Describes colocation status of the Proximity Placement Group.
        intent:
          type: object
          properties:
            vmSizes:
              type: array
              description: Specifies possible sizes of virtual machines that can be created in the proximity placement group.
              items:
                type: string
                description: 'Specifies the size of the virtual machine. Recommended way to get the list of available sizes is using these APIs: [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes), [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list), [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). The available VM sizes depend on region and availability set.'
          description: Specifies the user intent of the proximity placement group.
      description: Describes the properties of a Proximity Placement Group.
      type: object
    ProximityPlacementGroup:
      description: Specifies information about the proximity placement group.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ProximityPlacementGroupProperties'
          description: Describes the properties of a Proximity Placement Group.
        zones:
          type: array
          items:
            type: string
          description: Specifies the Availability Zone where virtual machine, virtual machine scale set or availability set associated with the  proximity placement group can be created.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    ProximityPlacementGroupUpdate:
      description: Specifies information about the proximity placement group.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    ProximityPlacementGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProximityPlacementGroup'
          description: The list of proximity placement groups
        nextLink:
          type: string
          description: The URI to fetch the next page of proximity placement groups.
      required:
        - value
      description: The List Proximity Placement Group operation response.
      type: object
    RunCommandInputParameter:
      properties:
        name:
          type: string
          description: The run command parameter name.
        value:
          type: string
          description: The run command parameter value.
      required:
        - name
        - value
      type: object
      description: Describes the properties of a run command parameter.
    RunCommandInput:
      properties:
        commandId:
          type: string
          description: The run command id.
        script:
          type: array
          items:
            type: string
          description: Optional. The script to be executed.  When this value is given, the given script will override the default script of the command.
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/RunCommandInputParameter'
          x-ms-identifiers:
            - name
          description: The run command parameters.
      required:
        - commandId
      type: object
      description: Capture Virtual Machine parameters.
    RunCommandParameterDefinition:
      properties:
        name:
          type: string
          description: The run command parameter name.
        type:
          type: string
          description: The run command parameter type.
        defaultValue:
          type: string
          description: The run command parameter default value.
        required:
          type: boolean
          description: The run command parameter required.
          default: false
      required:
        - name
        - type
      type: object
      description: Describes the properties of a run command parameter.
    RunCommandDocumentBase:
      properties:
        $schema:
          type: string
          description: The VM run command schema.
        id:
          type: string
          description: The VM run command id.
        osType:
          type: string
          description: The Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        label:
          type: string
          description: The VM run command label.
        description:
          type: string
          description: The VM run command description.
      required:
        - $schema
        - id
        - osType
        - label
        - description
      type: object
      description: Describes the properties of a Run Command metadata.
    RunCommandDocument:
      required:
        - script
      description: Describes the properties of a Run Command.
      properties:
        $schema:
          type: string
          description: The VM run command schema.
        id:
          type: string
          description: The VM run command id.
        osType:
          type: string
          description: The Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        label:
          type: string
          description: The VM run command label.
        description:
          type: string
          description: The VM run command description.
        script:
          type: array
          items:
            type: string
          description: The script to be executed.
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/RunCommandParameterDefinition'
          x-ms-identifiers:
            - name
            - type
          description: The parameters used by the script.
      type: object
    RunCommandListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RunCommandDocumentBase'
          description: The list of virtual machine run commands.
        nextLink:
          type: string
          description: The uri to fetch the next page of run commands. Call ListNext() with this to fetch the next page of run commands.
      required:
        - value
      type: object
      description: The List Virtual Machine operation response.
    RunCommandManagedIdentity:
      properties:
        clientId:
          type: string
          description: Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided.
        objectId:
          type: string
          description: Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided.
      type: object
      description: ' Contains clientId or objectId (use only one, not both) of a user-assigned managed identity that has access to storage blob used in Run Command. Use an empty RunCommandManagedIdentity object in case of system-assigned identity. Make sure the Azure storage blob exists in case of scriptUri, and managed identity has been given access to blob''s container with ''Storage Blob Data Reader'' role assignment with scriptUri blob and ''Storage Blob Data Contributor'' for Append blobs(outputBlobUri, errorBlobUri). In case of user assigned identity, make sure you add it under VM''s identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.'
    RunCommandResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: Run command operation response.
      type: object
    VirtualMachineRunCommandInstanceView:
      properties:
        executionState:
          type: string
          description: Script execution status.
          enum:
            - Unknown
            - Pending
            - Running
            - Failed
            - Succeeded
            - TimedOut
            - Canceled
          x-ms-enum:
            name: ExecutionState
            modelAsString: true
        executionMessage:
          type: string
          description: Communicate script configuration errors or execution messages.
        exitCode:
          type: integer
          format: int32
          description: Exit code returned from script execution.
        output:
          type: string
          description: Script output stream.
        error:
          type: string
          description: Script error stream.
        startTime:
          type: string
          format: date-time
          description: Script start time.
        endTime:
          type: string
          format: date-time
          description: Script end time.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      type: object
      description: The instance view of a virtual machine run command.
    VirtualMachineRunCommandScriptSource:
      properties:
        script:
          type: string
          description: Specifies the script content to be executed on the VM.
        scriptUri:
          type: string
          description: Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI.
        commandId:
          type: string
          description: Specifies a commandId of predefined built-in script.
        scriptUriManagedIdentity:
          $ref: '#/components/schemas/RunCommandManagedIdentity'
          description: User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged.
      type: object
      description: Describes the script sources for run command. Use only one of script, scriptUri, commandId.
    VirtualMachineRunCommandProperties:
      properties:
        source:
          $ref: '#/components/schemas/VirtualMachineRunCommandScriptSource'
          description: The source of the run command script.
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/RunCommandInputParameter'
          x-ms-identifiers:
            - name
          description: The parameters used by the script.
        protectedParameters:
          type: array
          items:
            $ref: '#/components/schemas/RunCommandInputParameter'
          x-ms-identifiers:
            - name
          description: The parameters used by the script.
        asyncExecution:
          type: boolean
          description: Optional. If set to true, provisioning will complete as soon as the script starts and will not wait for script to complete.
          default: false
        runAsUser:
          type: string
          description: Specifies the user account on the VM when executing the run command.
        runAsPassword:
          type: string
          description: Specifies the user account password on the VM when executing the run command.
        timeoutInSeconds:
          type: integer
          format: int32
          description: The timeout in seconds to execute the run command.
        outputBlobUri:
          type: string
          description: 'Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. '
        errorBlobUri:
          type: string
          description: Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter.
        outputBlobManagedIdentity:
          $ref: '#/components/schemas/RunCommandManagedIdentity'
          description: 'User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob''s container with ''Storage Blob Data Contributor'' role assignment. In case of user-assigned identity, make sure you add it under VM''s identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged '
        errorBlobManagedIdentity:
          $ref: '#/components/schemas/RunCommandManagedIdentity'
          description: 'User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob''s container with ''Storage Blob Data Contributor'' role assignment. In case of user-assigned identity, make sure you add it under VM''s identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged '
        provisioningState:
          readOnly: true
          type: string
          description: 'The provisioning state, which only appears in the response. If treatFailureAsDeploymentFailure set to true, any failure in the script will fail the deployment and ProvisioningState will be marked as Failed. If treatFailureAsDeploymentFailure set to false, ProvisioningState would only reflect whether the run command was run or not by the extensions platform, it would not indicate whether script failed in case of script failures. See instance view of run command in case of script failures to see executionMessage, output, error: https://aka.ms/runcommandmanaged#get-execution-status-and-results '
        instanceView:
          readOnly: true
          $ref: '#/components/schemas/VirtualMachineRunCommandInstanceView'
          description: The virtual machine run command instance view.
        treatFailureAsDeploymentFailure:
          type: boolean
          description: 'Optional. If set to true, any failure in the script will fail the deployment and ProvisioningState will be marked as Failed. If set to false, ProvisioningState would only reflect whether the run command was run or not by the extensions platform, it would not indicate whether script failed in case of script failures. See instance view of run command in case of script failures to see executionMessage, output, error: https://aka.ms/runcommandmanaged#get-execution-status-and-results '
          default: false
      type: object
      description: Describes the properties of a Virtual Machine run command.
    VirtualMachineRunCommand:
      description: Describes a Virtual Machine run command.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineRunCommandProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineRunCommandUpdate:
      description: Describes a Virtual Machine run command.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineRunCommandProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineRunCommandsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineRunCommand'
          description: The list of run commands
        nextLink:
          type: string
          description: The uri to fetch the next page of run commands.
      required:
        - value
      type: object
      description: The List run command operation response
    CapacityReservationGroupInstanceView:
      type: object
      properties:
        capacityReservations:
          type: array
          items:
            $ref: '#/components/schemas/CapacityReservationInstanceViewWithName'
          x-ms-identifiers:
            - name
          readOnly: true
          description: List of instance view of the capacity reservations under the capacity reservation group.
        sharedSubscriptionIds:
          type: array
          items:
            $ref: '#/components/schemas/SubResourceReadOnly'
          x-ms-identifiers:
            - id
          readOnly: true
          description: 'List of the subscriptions that the capacity reservation group is shared with. **Note:** Minimum api-version: 2024-03-01. Please refer to https://aka.ms/computereservationsharing for more details.'
    ResourceSharingProfile:
      type: object
      properties:
        subscriptionIds:
          type: array
          description: 'Specifies an array of subscription resource IDs that capacity reservation group is shared with. **Note:** Minimum api-version: 2024-03-01. Please refer to https://aka.ms/computereservationsharing for more details.'
          items:
            $ref: '#/components/schemas/SubResource'
    CapacityReservationGroupProperties:
      type: object
      properties:
        capacityReservations:
          type: array
          items:
            $ref: '#/components/schemas/SubResourceReadOnly'
          readOnly: true
          description: A list of all capacity reservation resource ids that belong to capacity reservation group.
        virtualMachinesAssociated:
          type: array
          items:
            $ref: '#/components/schemas/SubResourceReadOnly'
          readOnly: true
          description: A list of references to all virtual machines associated to the capacity reservation group.
        instanceView:
          $ref: '#/components/schemas/CapacityReservationGroupInstanceView'
          readOnly: true
          description: The capacity reservation group instance view which has the list of instance views for all the capacity reservations that belong to the capacity reservation group.
        sharingProfile:
          $ref: '#/components/schemas/ResourceSharingProfile'
          description: 'Specifies the settings to enable sharing across subscriptions for the capacity reservation group resource. Pls. keep in mind the capacity reservation group resource generally can be shared across subscriptions belonging to a single azure AAD tenant or cross AAD tenant if there is a trust relationship established between the AAD tenants. **Note:** Minimum api-version: 2024-03-01. Please refer to https://aka.ms/computereservationsharing for more details.'
      description: capacity reservation group Properties.
    CapacityReservationGroup:
      description: Specifies information about the capacity reservation group that the capacity reservations should be assigned to. Currently, a capacity reservation can only be added to a capacity reservation group at creation time. An existing capacity reservation cannot be added or moved to another capacity reservation group.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CapacityReservationGroupProperties'
        zones:
          type: array
          items:
            type: string
          description: Availability Zones to use for this capacity reservation group. The zones can be assigned only during creation. If not provided, the group supports only regional resources in the region. If provided, enforces each capacity reservation in the group to be in one of the zones.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    CapacityReservationGroupUpdate:
      description: Specifies information about the capacity reservation group. Only tags can be updated.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CapacityReservationGroupProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    CapacityReservationGroupListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CapacityReservationGroup'
          description: The list of capacity reservation groups
        nextLink:
          type: string
          description: The URI to fetch the next page of capacity reservation groups. Call ListNext() with this URI to fetch the next page of capacity reservation groups.
      required:
        - value
      description: The List capacity reservation group with resource group response.
    CapacityReservationInstanceView:
      type: object
      properties:
        utilizationInfo:
          $ref: '#/components/schemas/CapacityReservationUtilization'
          description: Unutilized capacity of the capacity reservation.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of a capacity reservation that provides as snapshot of the runtime properties of the capacity reservation that is managed by the platform and can change outside of control plane operations.
    CapacityReservationUtilization:
      type: object
      properties:
        currentCapacity:
          readOnly: true
          type: integer
          format: int32
          description: 'The value provides the current capacity of the VM size which was reserved successfully and for which the customer is getting billed. Minimum api-version: 2022-08-01.'
        virtualMachinesAllocated:
          type: array
          items:
            $ref: '#/components/schemas/SubResourceReadOnly'
          readOnly: true
          description: A list of all virtual machines resource ids allocated against the capacity reservation.
      description: Represents the capacity reservation utilization in terms of resources allocated.
    CapacityReservationInstanceViewWithName:
      description: The instance view of a capacity reservation that includes the name of the capacity reservation. It is used for the response to the instance view of a capacity reservation group.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the capacity reservation.
        utilizationInfo:
          $ref: '#/components/schemas/CapacityReservationUtilization'
          description: Unutilized capacity of the capacity reservation.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      type: object
    CapacityReservationProperties:
      type: object
      properties:
        reservationId:
          readOnly: true
          type: string
          description: A unique id generated and assigned to the capacity reservation by the platform which does not change throughout the lifetime of the resource.
        platformFaultDomainCount:
          readOnly: true
          type: integer
          format: int32
          description: 'Specifies the value of fault domain count that Capacity Reservation supports for requested VM size. **Note:** The fault domain count specified for a resource (like virtual machines scale set) must be less than or equal to this value if it deploys using capacity reservation. Minimum api-version: 2022-08-01.'
        virtualMachinesAssociated:
          type: array
          items:
            $ref: '#/components/schemas/SubResourceReadOnly'
          readOnly: true
          description: A list of all virtual machine resource ids that are associated with the capacity reservation.
        provisioningTime:
          readOnly: true
          type: string
          format: date-time
          description: The date time when the capacity reservation was last updated.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        instanceView:
          $ref: '#/components/schemas/CapacityReservationInstanceView'
          readOnly: true
          description: The Capacity reservation instance view.
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Capacity Reservation resource was created. Minimum api-version: 2021-11-01.'
      description: Properties of the Capacity reservation.
    CapacityReservation:
      required:
        - sku
      description: Specifies information about the capacity reservation.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CapacityReservationProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: SKU of the resource for which capacity needs be reserved. The SKU name and capacity is required to be set. Currently VM Skus with the capability called 'CapacityReservationSupported' set to true are supported. Refer to List Microsoft.Compute SKUs in a region (https://docs.microsoft.com/rest/api/compute/resourceskus/list) for supported values.
        zones:
          type: array
          items:
            type: string
          description: Availability Zone to use for this capacity reservation. The zone has to be single value and also should be part for the list of zones specified during the capacity reservation group creation. The zone can be assigned only during creation. If not provided, the reservation supports only non-zonal deployments. If provided, enforces VM/VMSS using this capacity reservation to be in same zone.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    CapacityReservationUpdate:
      description: Specifies information about the capacity reservation. Only tags and sku.capacity can be updated.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CapacityReservationProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: SKU of the resource for which capacity needs be reserved. The SKU name and capacity is required to be set. Currently VM Skus with the capability called 'CapacityReservationSupported' set to true are supported. Refer to List Microsoft.Compute SKUs in a region (https://docs.microsoft.com/rest/api/compute/resourceskus/list) for supported values.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    CapacityReservationListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CapacityReservation'
          description: The list of capacity reservations
        nextLink:
          type: string
          description: The URI to fetch the next page of capacity reservations. Call ListNext() with this URI to fetch the next page of capacity reservations.
      required:
        - value
      description: The list capacity reservation operation response.
    ResourceSkuCapacity:
      properties:
        minimum:
          type: integer
          readOnly: true
          format: int64
          description: The minimum capacity.
        maximum:
          type: integer
          readOnly: true
          format: int64
          description: The maximum capacity that can be set.
        default:
          type: integer
          readOnly: true
          format: int64
          description: The default capacity.
        scaleType:
          type: string
          readOnly: true
          description: The scale type applicable to the sku.
          enum:
            - Automatic
            - Manual
            - None
          x-ms-enum:
            name: ResourceSkuCapacityScaleType
            modelAsString: false
      description: Describes scaling information of a SKU.
      type: object
    ResourceSkuCosts:
      properties:
        meterID:
          type: string
          readOnly: true
          description: Used for querying price from commerce.
        quantity:
          type: integer
          readOnly: true
          format: int64
          description: The multiplier is needed to extend the base metered cost.
        extendedUnit:
          type: string
          readOnly: true
          description: An invariant to show the extended unit.
      description: Describes metadata for retrieving price info.
      type: object
    ResourceSkuCapabilities:
      properties:
        name:
          type: string
          readOnly: true
          description: An invariant to describe the feature.
        value:
          type: string
          readOnly: true
          description: An invariant if the feature is measured by quantity.
      description: Describes The SKU capabilities object.
      type: object
    ResourceSkuZoneDetails:
      properties:
        name:
          type: array
          readOnly: true
          items:
            type: string
          description: The set of zones that the SKU is available in with the specified capabilities.
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuCapabilities'
          x-ms-identifiers:
            - name
          description: A list of capabilities that are available for the SKU in the specified list of zones.
      description: Describes The zonal capabilities of a SKU.
      type: object
    ResourceSkuRestrictions:
      properties:
        type:
          type: string
          readOnly: true
          description: The type of restrictions.
          enum:
            - Location
            - Zone
          x-ms-enum:
            name: ResourceSkuRestrictionsType
            modelAsString: false
        values:
          type: array
          readOnly: true
          items:
            type: string
          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.
        restrictionInfo:
          $ref: '#/components/schemas/ResourceSkuRestrictionInfo'
          readOnly: true
          description: The information about the restriction where the SKU cannot be used.
        reasonCode:
          type: string
          readOnly: true
          description: The reason for restriction.
          enum:
            - QuotaId
            - NotAvailableForSubscription
          x-ms-enum:
            name: ResourceSkuRestrictionsReasonCode
            modelAsString: false
      description: Describes scaling information of a SKU.
      type: object
    ResourceSku:
      properties:
        resourceType:
          readOnly: true
          type: string
          description: The type of resource the SKU applies to.
        name:
          readOnly: true
          type: string
          description: The name of SKU.
        tier:
          readOnly: true
          type: string
          description: Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
        size:
          readOnly: true
          type: string
          description: The Size of the SKU.
        family:
          readOnly: true
          type: string
          description: The Family of this particular SKU.
        kind:
          readOnly: true
          type: string
          description: The Kind of resources that are supported in this SKU.
        capacity:
          $ref: '#/components/schemas/ResourceSkuCapacity'
          readOnly: true
          description: Specifies the number of virtual machines in the scale set.
        locations:
          type: array
          readOnly: true
          items:
            type: string
          description: The set of locations that the SKU is available.
        locationInfo:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuLocationInfo'
          x-ms-identifiers:
            - location
          description: A list of locations and availability zones in those locations where the SKU is available.
        apiVersions:
          type: array
          readOnly: true
          items:
            type: string
          description: The api versions that support this SKU.
        costs:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuCosts'
          x-ms-identifiers: []
          description: Metadata for retrieving price info.
        capabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuCapabilities'
          x-ms-identifiers:
            - name
          description: A name value pair to describe the capability.
        restrictions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ResourceSkuRestrictions'
          x-ms-identifiers: []
          description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.
      description: Describes an available Compute SKU.
      type: object
    ResourceSkuLocationInfo:
      properties:
        location:
          readOnly: true
          type: string
          description: Location of the SKU
        zones:
          readOnly: true
          type: array
          items:
            type: string
          description: List of availability zones where the SKU is supported.
        zoneDetails:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ResourceSkuZoneDetails'
          x-ms-identifiers:
            - name
          description: Details of capabilities available to a SKU in specific zones.
        extendedLocations:
          readOnly: true
          type: array
          items:
            type: string
          description: The names of extended locations.
        type:
          type: string
          readOnly: true
          description: The type of the extended location.
          enum:
            - EdgeZone
          x-ms-enum:
            name: ExtendedLocationType
            modelAsString: true
      description: Describes an available Compute SKU Location Information.
      type: object
    ResourceSkuRestrictionInfo:
      properties:
        locations:
          readOnly: true
          type: array
          items:
            type: string
          description: Locations where the SKU is restricted
        zones:
          readOnly: true
          type: array
          items:
            type: string
          description: List of availability zones where the SKU is restricted.
      description: Describes an available Compute SKU Restriction Information.
      type: object
    ResourceSkusResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSku'
          x-ms-identifiers:
            - name
            - resourceType
          description: The list of skus available for the subscription.
        nextLink:
          type: string
          description: The URI to fetch the next page of Resource Skus. Call ListNext() with this URI to fetch the next page of Resource Skus
      required:
        - value
      description: The List Resource Skus operation response.
      type: object
    ApiErrorBase:
      type: object
      properties:
        code:
          type: string
          description: The error code.
        target:
          type: string
          description: The target of the particular error.
        message:
          type: string
          description: The error message.
      description: Api error base.
    InnerError:
      type: object
      properties:
        exceptiontype:
          type: string
          description: The exception type.
        errordetail:
          type: string
          description: The internal error message or exception dump.
      description: Inner error details.
    CloudError:
      type: object
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/ApiError'
      description: An error response from the Compute service.
    ApiError:
      type: object
      properties:
        details:
          type: array
          items:
            $ref: '#/components/schemas/ApiErrorBase'
          x-ms-identifiers:
            - message
            - target
          description: The Api error details
        innererror:
          $ref: '#/components/schemas/InnerError'
          description: The Api inner error
        code:
          type: string
          description: The error code.
        target:
          type: string
          description: The target of the particular error.
        message:
          type: string
          description: The error message.
      description: Api error.
    Resource:
      type: object
      description: The Resource model definition.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      required:
        - location
      x-ms-azure-resource: true
    SubResource:
      type: object
      properties:
        id:
          type: string
          description: Resource Id
    SubResourceReadOnly:
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
    ResourceWithOptionalLocation:
      type: object
      description: The Resource model definition with location property as optional.
      properties:
        location:
          type: string
          description: Resource location
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      x-ms-azure-resource: true
    ExtendedLocationType:
      type: string
      description: The type of extendedLocation.
      enum:
        - EdgeZone
      x-ms-enum:
        name: ExtendedLocationTypes
        modelAsString: true
    ExtendedLocation:
      type: object
      description: The complex type of the extended location.
      properties:
        name:
          type: string
          description: The name of the extended location.
        type:
          $ref: '#/components/schemas/ExtendedLocationType'
          description: The type of the extended location.
    UserAssignedIdentities:
      additionalProperties:
        type: object
        x-ms-client-name: userAssignedIdentitiesValue
        properties:
          principalId:
            readOnly: true
            type: string
            description: The principal id of user assigned identity.
          clientId:
            readOnly: true
            type: string
            description: The client id of user assigned identity.
      description: 'The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      properties: {}
      type: object
    SystemData:
      description: The system meta data relating to this resource.
      type: object
      properties:
        createdAt:
          format: date-time
          description: 'Specifies the time in UTC at which the Cloud Service (extended support) resource was created. <br />Minimum api-version: 2022-04-04.'
          type: string
          readOnly: true
        lastModifiedAt:
          format: date-time
          description: 'Specifies the time in UTC at which the Cloud Service (extended support) resource was last modified. <br />Minimum api-version: 2022-04-04.'
          type: string
          readOnly: true
    SshPublicKeyGenerateKeyPairResult:
      properties:
        privateKey:
          type: string
          description: Private key portion of the key pair used to authenticate to a virtual machine through ssh. The private key is returned in RFC3447 format and should be treated as a secret.
        publicKey:
          type: string
          description: Public key portion of the key pair used to authenticate to a virtual machine through ssh. The public key is in ssh-rsa format.
        id:
          type: string
          description: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{SshPublicKeyName}
      required:
        - privateKey
        - publicKey
        - id
      description: Response from generation of an SSH key pair.
      type: object
    SshPublicKeyResourceProperties:
      properties:
        publicKey:
          type: string
          description: SSH public key used to authenticate to a virtual machine through ssh. If this property is not initially provided when the resource is created, the publicKey property will be populated when generateKeyPair is called. If the public key is provided upon resource creation, the provided public key needs to be at least 2048-bit and in ssh-rsa format.
      description: Properties of the SSH public key.
      type: object
    SshPublicKeyResource:
      description: Specifies information about the SSH public key.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SshPublicKeyResourceProperties'
          description: Properties of the SSH public key.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    SshPublicKeyUpdateResource:
      description: Specifies information about the SSH public key.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SshPublicKeyResourceProperties'
          description: Properties of the SSH public key.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    SshPublicKeysGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKeyResource'
          description: The list of SSH public keys
        nextLink:
          type: string
          description: The URI to fetch the next page of SSH public keys. Call ListNext() with this URI to fetch the next page of SSH public keys.
      required:
        - value
      description: The list SSH public keys operation response.
      type: object
    SshGenerateKeyPairInputParameters:
      type: object
      properties:
        encryptionType:
          type: string
          description: The encryption type of the SSH keys to be generated. See SshEncryptionTypes for possible set of values. If not provided, will default to RSA
          enum:
            - RSA
            - Ed25519
          x-ms-enum:
            name: SshEncryptionTypes
            modelAsString: true
      description: Parameters for GenerateSshKeyPair.
    EncryptionSetProperties:
      properties:
        encryptionType:
          $ref: '#/components/schemas/DiskEncryptionSetType'
        activeKey:
          $ref: '#/components/schemas/KeyForDiskEncryptionSet'
          description: The key vault key which is currently used by this disk encryption set.
        previousKeys:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/KeyForDiskEncryptionSet'
          x-ms-identifiers:
            - sourceVault/id
          description: A readonly collection of key vault keys previously used by this disk encryption set while a key rotation is in progress. It will be empty if there is no ongoing key rotation.
        provisioningState:
          readOnly: true
          type: string
          description: The disk encryption set provisioning state.
        rotationToLatestKeyVersionEnabled:
          type: boolean
          description: Set this flag to true to enable auto-updating of this disk encryption set to the latest key version.
        lastKeyRotationTimestamp:
          readOnly: true
          type: string
          format: date-time
          description: The time when the active key of this disk encryption set was updated.
        autoKeyRotationError:
          readOnly: true
          $ref: '#/components/schemas/ApiError'
          description: The error that was encountered during auto-key rotation. If an error is present, then auto-key rotation will not be attempted until the error on this disk encryption set is fixed.
        federatedClientId:
          type: string
          description: Multi-tenant application client id to access key vault in a different tenant. Setting the value to 'None' will clear the property.
      type: object
    EncryptionSetIdentity:
      properties:
        type:
          type: string
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: DiskEncryptionSetIdentityType
            modelAsString: true
          description: The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys.
        principalId:
          readOnly: true
          type: string
          description: The object id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-identity-principal-id header in the PUT request if the resource has a systemAssigned(implicit) identity
        tenantId:
          readOnly: true
          type: string
          description: The tenant id of the Managed Identity Resource. This will be sent to the RP from ARM via the x-ms-client-tenant-id header in the PUT request if the resource has a systemAssigned(implicit) identity
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
          description: 'The list of user identities associated with the disk encryption set. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks.
      type: object
    DiskEncryptionSetType:
      type: string
      description: The type of key used to encrypt the data of the disk.
      enum:
        - EncryptionAtRestWithCustomerKey
        - EncryptionAtRestWithPlatformAndCustomerKeys
        - ConfidentialVmEncryptedWithCustomerKey
      x-ms-enum:
        name: DiskEncryptionSetType
        modelAsString: true
        values:
          - value: EncryptionAtRestWithCustomerKey
            description: Resource using diskEncryptionSet would be encrypted at rest with Customer managed key that can be changed and revoked by a customer.
          - value: EncryptionAtRestWithPlatformAndCustomerKeys
            description: Resource using diskEncryptionSet would be encrypted at rest with two layers of encryption. One of the keys is Customer managed and the other key is Platform managed.
          - value: ConfidentialVmEncryptedWithCustomerKey
            description: Confidential VM supported disk and VM guest state would be encrypted with customer managed key.
    KeyForDiskEncryptionSet:
      properties:
        sourceVault:
          $ref: '#/components/schemas/SourceVault'
          description: Resource id of the KeyVault containing the key or secret. This property is optional and cannot be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription.
        keyUrl:
          type: string
          description: Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value.
      required:
        - keyUrl
      description: Key Vault Key Url to be used for server side encryption of Managed Disks and Snapshots
      type: object
    DiskEncryptionSet:
      description: disk encryption set resource.
      properties:
        identity:
          $ref: '#/components/schemas/EncryptionSetIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/EncryptionSetProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    DiskEncryptionSetUpdate:
      description: disk encryption set update resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiskEncryptionSetUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        identity:
          $ref: '#/components/schemas/EncryptionSetIdentity'
      type: object
    DiskEncryptionSetUpdateProperties:
      properties:
        encryptionType:
          $ref: '#/components/schemas/DiskEncryptionSetType'
        activeKey:
          $ref: '#/components/schemas/KeyForDiskEncryptionSet'
        rotationToLatestKeyVersionEnabled:
          type: boolean
          description: Set this flag to true to enable auto-updating of this disk encryption set to the latest key version.
        federatedClientId:
          type: string
          description: Multi-tenant application client id to access key vault in a different tenant. Setting the value to 'None' will clear the property.
      description: disk encryption set resource update properties.
      type: object
    DiskEncryptionSetList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DiskEncryptionSet'
          description: A list of disk encryption sets.
        nextLink:
          type: string
          description: The uri to fetch the next page of disk encryption sets. Call ListNext() with this to fetch the next page of disk encryption sets.
      required:
        - value
      description: The List disk encryption set operation response.
      type: object
    ResourceUriList:
      properties:
        value:
          type: array
          items:
            type: string
          description: A list of IDs or Owner IDs of resources which are encrypted with the disk encryption set.
        nextLink:
          type: string
          description: The uri to fetch the next page of encrypted resources. Call ListNext() with this to fetch the next page of encrypted resources.
      required:
        - value
      description: The List resources which are encrypted with the disk encryption set.
      type: object
    VirtualMachineExtensionImageProperties:
      properties:
        operatingSystem:
          type: string
          description: The operating system this extension supports.
        computeRole:
          type: string
          description: The type of role (IaaS or PaaS) this extension supports.
        handlerSchema:
          type: string
          description: The schema defined by publisher, where extension consumers should provide settings in a matching schema.
        vmScaleSetEnabled:
          type: boolean
          description: Whether the extension can be used on xRP VMScaleSets. By default existing extensions are usable on scalesets, but there might be cases where a publisher wants to explicitly indicate the extension is only enabled for CRP VMs but not VMSS.
        supportsMultipleExtensions:
          type: boolean
          description: Whether the handler can support multiple extensions.
      required:
        - operatingSystem
        - computeRole
        - handlerSchema
      description: Describes the properties of a Virtual Machine Extension Image.
      type: object
    VirtualMachineExtensionImage:
      required:
        - name
        - location
      description: Describes a Virtual Machine Extension Image.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionImageProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    Gallery:
      description: Specifies information about the Shared Image Gallery that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryUpdate:
      description: Specifies information about the Shared Image Gallery that you want to update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryProperties:
      properties:
        description:
          type: string
          description: The description of this Shared Image Gallery resource. This property is updatable.
        identifier:
          $ref: '#/components/schemas/GalleryIdentifier'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/GalleryProvisioningState'
        sharingProfile:
          $ref: '#/components/schemas/SharingProfile'
        softDeletePolicy:
          $ref: '#/components/schemas/SoftDeletePolicy'
        sharingStatus:
          readOnly: true
          $ref: '#/components/schemas/SharingStatus'
      description: Describes the properties of a Shared Image Gallery.
      type: object
    GalleryIdentifier:
      properties:
        uniqueName:
          readOnly: true
          type: string
          description: The unique name of the Shared Image Gallery. This name is generated automatically by Azure.
      description: Describes the gallery unique name.
      type: object
    SharingProfile:
      description: Profile for gallery sharing to subscription or tenant
      properties:
        permissions:
          type: string
          description: 'This property allows you to specify the permission of sharing gallery. Possible values are: **Private,** **Groups,** **Community.**'
          enum:
            - Private
            - Groups
            - Community
          x-ms-enum:
            name: GallerySharingPermissionTypes
            modelAsString: true
        groups:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SharingProfileGroup'
          x-ms-identifiers: []
          description: A list of sharing profile groups.
        communityGalleryInfo:
          $ref: '#/components/schemas/CommunityGalleryInfo'
          description: Information of community gallery if current gallery is shared to community.
      type: object
    SharingProfileGroup:
      description: Group of the gallery sharing profile
      properties:
        type:
          type: string
          description: 'This property allows you to specify the type of sharing group. Possible values are: **Subscriptions,** **AADTenants.**'
          enum:
            - Subscriptions
            - AADTenants
          x-ms-enum:
            name: SharingProfileGroupTypes
            modelAsString: true
        ids:
          type: array
          items:
            type: string
          description: A list of subscription/tenant ids the gallery is aimed to be shared to.
      type: object
    CommunityGalleryInfo:
      type: object
      description: Information of community gallery if current gallery is shared to community
      properties:
        publisherUri:
          type: string
          description: The link to the publisher website. Visible to all users.
        publisherContact:
          type: string
          description: Community gallery publisher support email. The email address of the publisher. Visible to all users.
        eula:
          type: string
          description: End-user license agreement for community gallery image.
        publicNamePrefix:
          type: string
          description: The prefix of the gallery name that will be displayed publicly. Visible to all users.
        communityGalleryEnabled:
          readOnly: true
          type: boolean
          description: Contains info about whether community gallery sharing is enabled.
        publicNames:
          readOnly: true
          type: array
          items:
            type: string
          description: Community gallery public name list.
    SoftDeletePolicy:
      type: object
      properties:
        isSoftDeleteEnabled:
          type: boolean
          description: Enables soft-deletion for resources in this gallery, allowing them to be recovered within retention time.
      description: Contains information about the soft deletion policy of the gallery.
    SharingStatus:
      type: object
      properties:
        aggregatedState:
          type: string
          $ref: '#/components/schemas/SharingState'
          description: Aggregated sharing state of current gallery.
        summary:
          type: array
          items:
            $ref: '#/components/schemas/RegionalSharingStatus'
          x-ms-identifiers:
            - region
          description: Summary of all regional sharing status.
      description: Sharing status of current gallery.
    SharingState:
      readOnly: true
      type: string
      title: The sharing state of the gallery.
      description: The sharing state of the gallery, which only appears in the response.
      enum:
        - Succeeded
        - InProgress
        - Failed
        - Unknown
      x-ms-enum:
        name: SharingState
        modelAsString: true
    RegionalSharingStatus:
      type: object
      description: Gallery regional sharing status
      properties:
        region:
          type: string
          description: Region name
        state:
          type: string
          $ref: '#/components/schemas/SharingState'
          description: Gallery sharing state in current region
        details:
          type: string
          description: Details of gallery regional sharing failure.
    GalleryApplication:
      description: Specifies information about the gallery Application Definition that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryApplicationProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryApplicationUpdate:
      description: Specifies information about the gallery Application Definition that you want to update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryApplicationProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryApplicationProperties:
      properties:
        description:
          type: string
          description: The description of this gallery Application Definition resource. This property is updatable.
        eula:
          type: string
          description: The Eula agreement for the gallery Application Definition.
        privacyStatementUri:
          type: string
          description: The privacy statement uri.
        releaseNoteUri:
          type: string
          description: The release note uri.
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery Application Definition. This property can be used for decommissioning purposes. This property is updatable.
        supportedOSType:
          type: string
          description: 'This property allows you to specify the supported type of the OS that application is built for. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        customActions:
          type: array
          items:
            $ref: '#/components/schemas/GalleryApplicationCustomAction'
          x-ms-identifiers:
            - name
          description: A list of custom actions that can be performed with all of the Gallery Application Versions within this Gallery Application.
      required:
        - supportedOSType
      description: Describes the properties of a gallery Application Definition.
      type: object
    GalleryApplicationVersion:
      description: Specifies information about the gallery Application Version that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryApplicationVersionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryApplicationVersionUpdate:
      description: Specifies information about the gallery Application Version that you want to update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryApplicationVersionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryApplicationVersionProperties:
      properties:
        publishingProfile:
          $ref: '#/components/schemas/GalleryApplicationVersionPublishingProfile'
        safetyProfile:
          $ref: '#/components/schemas/GalleryApplicationVersionSafetyProfile'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/GalleryProvisioningState'
        replicationStatus:
          readOnly: true
          $ref: '#/components/schemas/ReplicationStatus'
      required:
        - publishingProfile
      description: Describes the properties of a gallery image version.
      type: object
    GalleryApplicationVersionPublishingProfile:
      required:
        - source
      description: The publishing profile of a gallery image version.
      properties:
        source:
          $ref: '#/components/schemas/UserArtifactSource'
        manageActions:
          $ref: '#/components/schemas/UserArtifactManage'
        settings:
          $ref: '#/components/schemas/UserArtifactSettings'
        advancedSettings:
          type: object
          additionalProperties:
            type: string
          description: Optional. Additional settings to pass to the vm-application-manager extension. For advanced use only.
        enableHealthCheck:
          type: boolean
          description: Optional. Whether or not this application reports health.
        customActions:
          type: array
          items:
            $ref: '#/components/schemas/GalleryApplicationCustomAction'
          x-ms-identifiers:
            - name
          description: A list of custom actions that can be performed with this Gallery Application Version.
        targetRegions:
          type: array
          items:
            $ref: '#/components/schemas/TargetRegion'
          x-ms-identifiers:
            - name
          description: The target regions where the Image Version is going to be replicated to. This property is updatable.
        replicaCount:
          type: integer
          format: int32
          description: The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
        excludeFromLatest:
          type: boolean
          description: If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        publishedDate:
          readOnly: true
          type: string
          format: date-time
          description: The timestamp for when the gallery image version is published.
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
        storageAccountType:
          type: string
          description: Specifies the storage account type to be used to store the image. This property is not updatable.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - Premium_LRS
          x-ms-enum:
            name: StorageAccountType
            modelAsString: true
        replicationMode:
          type: string
          description: Optional parameter which specifies the mode to be used for replication. This property is not updatable.
          enum:
            - Full
            - Shallow
          x-ms-enum:
            name: ReplicationMode
            modelAsString: true
        targetExtendedLocations:
          type: array
          items:
            $ref: '#/components/schemas/GalleryTargetExtendedLocation'
          x-ms-identifiers:
            - name
            - extendedLocation/name
          description: The target extended locations where the Image Version is going to be replicated to. This property is updatable.
      type: object
    GalleryApplicationVersionSafetyProfile:
      description: The safety profile of the Gallery Application Version.
      properties:
        allowDeletionOfReplicatedLocations:
          type: boolean
          description: Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
      type: object
    GalleryApplicationCustomAction:
      type: object
      properties:
        name:
          type: string
          description: The name of the custom action.  Must be unique within the Gallery Application Version.
        script:
          type: string
          description: The script to run when executing this custom action.
        description:
          type: string
          description: Description to help the users understand what this custom action does.
        parameters:
          type: array
          description: The parameters that this custom action uses
          items:
            $ref: '#/components/schemas/GalleryApplicationCustomActionParameter'
          x-ms-identifiers:
            - name
      required:
        - name
        - script
      description: A custom action that can be performed with a Gallery Application Version.
    GalleryApplicationCustomActionParameter:
      type: object
      properties:
        name:
          type: string
          description: The name of the custom action.  Must be unique within the Gallery Application Version.
        required:
          type: boolean
          description: Indicates whether this parameter must be passed when running the custom action.
        type:
          type: string
          description: 'Specifies the type of the custom action parameter. Possible values are: String, ConfigurationDataBlob or LogOutputBlob'
          enum:
            - String
            - ConfigurationDataBlob
            - LogOutputBlob
          x-ms-enum:
            name: GalleryApplicationCustomActionParameterType
            modelAsString: false
        defaultValue:
          type: string
          description: The default value of the parameter.  Only applies to string types
        description:
          type: string
          description: A description to help users understand what this parameter means
      required:
        - name
      description: The definition of a parameter that can be passed to a custom action of a Gallery Application Version.
    UserArtifactSource:
      properties:
        mediaLink:
          type: string
          description: Required. The mediaLink of the artifact, must be a readable storage page blob.
        defaultConfigurationLink:
          type: string
          description: Optional. The defaultConfigurationLink of the artifact, must be a readable storage page blob.
      required:
        - mediaLink
      description: The source image from which the Image Version is going to be created.
      type: object
    UserArtifactManage:
      properties:
        install:
          type: string
          description: Required. The path and arguments to install the gallery application. This is limited to 4096 characters.
        remove:
          type: string
          description: Required. The path and arguments to remove the gallery application. This is limited to 4096 characters.
        update:
          type: string
          description: Optional. The path and arguments to update the gallery application. If not present, then update operation will invoke remove command on the previous version and install command on the current version of the gallery application. This is limited to 4096 characters.
      required:
        - install
        - remove
      type: object
    UserArtifactSettings:
      type: object
      properties:
        packageFileName:
          type: string
          description: Optional. The name to assign the downloaded package file on the VM. This is limited to 4096 characters. If not specified, the package file will be named the same as the Gallery Application name.
        configFileName:
          type: string
          description: Optional. The name to assign the downloaded config file on the VM. This is limited to 4096 characters. If not specified, the config file will be named the Gallery Application name appended with "_config".
      description: Additional settings for the VM app that contains the target package and config file name when it is deployed to target VM or VM scale set.
    GalleryImage:
      description: Specifies information about the gallery image definition that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryImageProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryImageUpdate:
      description: Specifies information about the gallery image definition that you want to update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryImageProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryImageProperties:
      properties:
        description:
          type: string
          description: The description of this gallery image definition resource. This property is updatable.
        eula:
          type: string
          description: The Eula agreement for the gallery image definition.
        privacyStatementUri:
          type: string
          description: The privacy statement uri.
        releaseNoteUri:
          type: string
          description: The release note uri.
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        osState:
          type: string
          description: This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
          enum:
            - Generalized
            - Specialized
          x-ms-enum:
            name: OperatingSystemStateTypes
            modelAsString: false
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
        identifier:
          $ref: '#/components/schemas/GalleryImageIdentifier'
        recommended:
          $ref: '#/components/schemas/RecommendedMachineConfiguration'
        disallowed:
          $ref: '#/components/schemas/Disallowed'
        purchasePlan:
          $ref: '#/components/schemas/ImagePurchasePlan'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/GalleryProvisioningState'
        features:
          type: array
          items:
            $ref: '#/components/schemas/GalleryImageFeature'
          x-ms-identifiers:
            - name
          description: A list of gallery image features.
        architecture:
          $ref: '#/components/schemas/Architecture'
      required:
        - osType
        - osState
        - identifier
      description: Describes the properties of a gallery image definition.
      type: object
    GalleryImageVersion:
      description: Specifies information about the gallery image version that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryImageVersionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryImageVersionUpdate:
      description: Specifies information about the gallery image version that you want to update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/GalleryImageVersionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    GalleryImageVersionProperties:
      properties:
        publishingProfile:
          $ref: '#/components/schemas/GalleryImageVersionPublishingProfile'
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/GalleryProvisioningState'
        storageProfile:
          $ref: '#/components/schemas/GalleryImageVersionStorageProfile'
        safetyProfile:
          $ref: '#/components/schemas/GalleryImageVersionSafetyProfile'
        replicationStatus:
          readOnly: true
          $ref: '#/components/schemas/ReplicationStatus'
        securityProfile:
          $ref: '#/components/schemas/ImageVersionSecurityProfile'
      required:
        - storageProfile
      description: Describes the properties of a gallery image version.
      type: object
    GalleryArtifactPublishingProfileBase:
      properties:
        targetRegions:
          type: array
          items:
            $ref: '#/components/schemas/TargetRegion'
          x-ms-identifiers:
            - name
          description: The target regions where the Image Version is going to be replicated to. This property is updatable.
        replicaCount:
          type: integer
          format: int32
          description: The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
        excludeFromLatest:
          type: boolean
          description: If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        publishedDate:
          readOnly: true
          type: string
          format: date-time
          description: The timestamp for when the gallery image version is published.
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
        storageAccountType:
          type: string
          description: Specifies the storage account type to be used to store the image. This property is not updatable.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - Premium_LRS
          x-ms-enum:
            name: StorageAccountType
            modelAsString: true
        replicationMode:
          type: string
          description: Optional parameter which specifies the mode to be used for replication. This property is not updatable.
          enum:
            - Full
            - Shallow
          x-ms-enum:
            name: ReplicationMode
            modelAsString: true
        targetExtendedLocations:
          type: array
          items:
            $ref: '#/components/schemas/GalleryTargetExtendedLocation'
          x-ms-identifiers:
            - name
            - extendedLocation/name
          description: The target extended locations where the Image Version is going to be replicated to. This property is updatable.
      description: Describes the basic gallery artifact publishing profile.
      type: object
    TargetRegion:
      properties:
        name:
          type: string
          description: The name of the region.
        regionalReplicaCount:
          type: integer
          format: int32
          description: The number of replicas of the Image Version to be created per region. This property is updatable.
        storageAccountType:
          type: string
          description: Specifies the storage account type to be used to store the image. This property is not updatable.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - Premium_LRS
          x-ms-enum:
            name: StorageAccountType
            modelAsString: true
        encryption:
          $ref: '#/components/schemas/EncryptionImages'
        excludeFromLatest:
          type: boolean
          description: Contains the flag setting to hide an image when users specify version='latest'
      required:
        - name
      description: Describes the target region information.
      type: object
    GalleryTargetExtendedLocation:
      type: object
      properties:
        name:
          type: string
          description: The name of the region.
        extendedLocation:
          $ref: '#/components/schemas/GalleryExtendedLocation'
        extendedLocationReplicaCount:
          type: integer
          format: int32
          description: The number of replicas of the Image Version to be created per extended location. This property is updatable.
        storageAccountType:
          type: string
          description: Specifies the storage account type to be used to store the image. This property is not updatable.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - StandardSSD_LRS
            - Premium_LRS
          x-ms-enum:
            name: EdgeZoneStorageAccountType
            modelAsString: true
        encryption:
          $ref: '#/components/schemas/EncryptionImages'
    GalleryExtendedLocation:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/GalleryExtendedLocationType'
      description: The name of the extended location.
    GalleryExtendedLocationType:
      type: string
      enum:
        - EdgeZone
        - Unknown
      x-ms-enum:
        name: GalleryExtendedLocationType
        modelAsString: true
      description: It is type of the extended location.
    EncryptionImages:
      properties:
        osDiskImage:
          $ref: '#/components/schemas/OSDiskImageEncryption'
        dataDiskImages:
          type: array
          items:
            $ref: '#/components/schemas/DataDiskImageEncryption'
          x-ms-identifiers:
            - lun
          description: A list of encryption specifications for data disk images.
      description: Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact.
      type: object
    OSDiskImageEncryption:
      description: Contains encryption settings for an OS disk image.
      properties:
        securityProfile:
          type: object
          $ref: '#/components/schemas/OSDiskImageSecurityProfile'
          description: This property specifies the security profile of an OS disk image.
        diskEncryptionSetId:
          type: string
          description: A relative URI containing the resource ID of the disk encryption set.
      type: object
    OSDiskImageSecurityProfile:
      type: object
      properties:
        confidentialVMEncryptionType:
          type: string
          description: confidential VM encryption types
          enum:
            - EncryptedVMGuestStateOnlyWithPmk
            - EncryptedWithPmk
            - EncryptedWithCmk
            - NonPersistedTPM
          x-ms-enum:
            name: ConfidentialVMEncryptionType
            modelAsString: true
        secureVMDiskEncryptionSetId:
          type: string
          description: secure VM disk encryption set id
      description: Contains security profile for an OS disk image.
    DataDiskImageEncryption:
      required:
        - lun
      description: Contains encryption settings for a data disk image.
      properties:
        lun:
          type: integer
          format: int32
          description: This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
        diskEncryptionSetId:
          type: string
          description: A relative URI containing the resource ID of the disk encryption set.
      type: object
    DiskImageEncryption:
      properties:
        diskEncryptionSetId:
          type: string
          description: A relative URI containing the resource ID of the disk encryption set.
      description: This is the disk image encryption base class.
      type: object
    GalleryArtifactSource:
      properties:
        managedImage:
          $ref: '#/components/schemas/ManagedArtifact'
      required:
        - managedImage
      description: The source image from which the Image Version is going to be created.
      type: object
    ManagedArtifact:
      properties:
        id:
          type: string
          description: The managed artifact id.
      required:
        - id
      description: The managed artifact.
      type: object
    GalleryImageVersionPublishingProfile:
      description: The publishing profile of a gallery image Version.
      properties:
        targetRegions:
          type: array
          items:
            $ref: '#/components/schemas/TargetRegion'
          x-ms-identifiers:
            - name
          description: The target regions where the Image Version is going to be replicated to. This property is updatable.
        replicaCount:
          type: integer
          format: int32
          description: The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
        excludeFromLatest:
          type: boolean
          description: If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        publishedDate:
          readOnly: true
          type: string
          format: date-time
          description: The timestamp for when the gallery image version is published.
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable.
        storageAccountType:
          type: string
          description: Specifies the storage account type to be used to store the image. This property is not updatable.
          enum:
            - Standard_LRS
            - Standard_ZRS
            - Premium_LRS
          x-ms-enum:
            name: StorageAccountType
            modelAsString: true
        replicationMode:
          type: string
          description: Optional parameter which specifies the mode to be used for replication. This property is not updatable.
          enum:
            - Full
            - Shallow
          x-ms-enum:
            name: ReplicationMode
            modelAsString: true
        targetExtendedLocations:
          type: array
          items:
            $ref: '#/components/schemas/GalleryTargetExtendedLocation'
          x-ms-identifiers:
            - name
            - extendedLocation/name
          description: The target extended locations where the Image Version is going to be replicated to. This property is updatable.
      type: object
    GalleryImageVersionStorageProfile:
      properties:
        source:
          $ref: '#/components/schemas/GalleryArtifactVersionFullSource'
        osDiskImage:
          $ref: '#/components/schemas/GalleryOSDiskImage'
        dataDiskImages:
          type: array
          items:
            $ref: '#/components/schemas/GalleryDataDiskImage'
          x-ms-identifiers:
            - lun
          description: A list of data disk images.
      description: This is the storage profile of a Gallery Image Version.
      type: object
    GalleryArtifactVersionFullSource:
      description: The source of the gallery artifact version.
      properties:
        communityGalleryImageId:
          type: string
          description: The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source.
        virtualMachineId:
          type: string
          description: The resource Id of the source virtual machine.  Only required when capturing a virtual machine to source this Gallery Image Version.
        id:
          type: string
          description: The id of the gallery artifact version source.
      type: object
    GalleryArtifactVersionSource:
      properties:
        id:
          type: string
          description: The id of the gallery artifact version source.
      description: The gallery artifact version source.
      type: object
    GalleryOSDiskImage:
      description: This is the OS disk image.
      properties:
        sizeInGB:
          readOnly: true
          type: integer
          format: int32
          description: This property indicates the size of the VHD to be created.
        hostCaching:
          type: string
          description: The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: HostCaching
            modelAsString: false
        source:
          $ref: '#/components/schemas/GalleryDiskImageSource'
      type: object
    GalleryDataDiskImage:
      required:
        - lun
      description: This is the data disk image.
      properties:
        lun:
          type: integer
          format: int32
          description: This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
        sizeInGB:
          readOnly: true
          type: integer
          format: int32
          description: This property indicates the size of the VHD to be created.
        hostCaching:
          type: string
          description: The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: HostCaching
            modelAsString: false
        source:
          $ref: '#/components/schemas/GalleryDiskImageSource'
      type: object
    GalleryDiskImage:
      properties:
        sizeInGB:
          readOnly: true
          type: integer
          format: int32
          description: This property indicates the size of the VHD to be created.
        hostCaching:
          type: string
          description: The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: HostCaching
            modelAsString: false
        source:
          $ref: '#/components/schemas/GalleryDiskImageSource'
      description: This is the disk image base class.
      type: object
    GalleryDiskImageSource:
      description: The source for the disk image.
      properties:
        uri:
          type: string
          description: The uri of the gallery artifact version source. Currently used to specify vhd/blob source.
        storageAccountId:
          type: string
          description: The Storage Account Id that contains the vhd blob being used as a source for this artifact version.
        id:
          type: string
          description: The id of the gallery artifact version source.
      type: object
    GalleryArtifactSafetyProfileBase:
      type: object
      properties:
        allowDeletionOfReplicatedLocations:
          type: boolean
          description: Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
      description: This is the safety profile of the Gallery Artifact Version.
    GalleryImageVersionSafetyProfile:
      description: This is the safety profile of the Gallery Image Version.
      properties:
        reportedForPolicyViolation:
          type: boolean
          description: Indicates whether this image has been reported as violating Microsoft's policies.
          readOnly: true
        policyViolations:
          type: array
          items:
            $ref: '#/components/schemas/PolicyViolation'
          x-ms-identifiers: []
          description: A list of Policy Violations that have been reported for this Gallery Image Version.
          readOnly: true
        allowDeletionOfReplicatedLocations:
          type: boolean
          description: Indicates whether or not removing this Gallery Image Version from replicated regions is allowed.
      type: object
    PolicyViolation:
      type: object
      properties:
        category:
          type: string
          description: Describes the nature of the policy violation.
          enum:
            - Other
            - ImageFlaggedUnsafe
            - CopyrightValidation
            - IpTheft
          x-ms-enum:
            name: PolicyViolationCategory
            modelAsString: true
        details:
          type: string
          description: Describes specific details about why this policy violation was reported.
      description: A policy violation reported against a gallery artifact.
    ImageVersionSecurityProfile:
      type: object
      description: The security profile of a gallery image version
      properties:
        uefiSettings:
          $ref: '#/components/schemas/GalleryImageVersionUefiSettings'
    ReplicationStatus:
      properties:
        aggregatedState:
          readOnly: true
          type: string
          description: This is the aggregated replication status based on all the regional replication status flags.
          enum:
            - Unknown
            - InProgress
            - Completed
            - Failed
          x-ms-enum:
            name: AggregatedReplicationState
            modelAsString: true
        summary:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RegionalReplicationStatus'
          x-ms-identifiers:
            - region
          description: This is a summary of replication status for each region.
      description: This is the replication status of the gallery image version.
      type: object
    RegionalReplicationStatus:
      properties:
        region:
          readOnly: true
          type: string
          description: The region to which the gallery image version is being replicated to.
        state:
          readOnly: true
          type: string
          description: This is the regional replication state.
          enum:
            - Unknown
            - Replicating
            - Completed
            - Failed
          x-ms-enum:
            name: ReplicationState
            modelAsString: true
        details:
          readOnly: true
          type: string
          description: The details of the replication status.
        progress:
          readOnly: true
          type: integer
          format: int32
          description: It indicates progress of the replication job.
      description: This is the regional replication status.
      type: object
    GalleryList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Gallery'
          description: A list of galleries.
        nextLink:
          type: string
          description: The uri to fetch the next page of galleries. Call ListNext() with this to fetch the next page of galleries.
      required:
        - value
      description: The List Galleries operation response.
      type: object
    GalleryImageList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GalleryImage'
          description: A list of Shared Image Gallery images.
        nextLink:
          type: string
          description: The uri to fetch the next page of Image Definitions in the Shared Image Gallery. Call ListNext() with this to fetch the next page of gallery image definitions.
      required:
        - value
      description: The List Gallery Images operation response.
      type: object
    GalleryImageVersionList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GalleryImageVersion'
          description: A list of gallery image versions.
        nextLink:
          type: string
          description: The uri to fetch the next page of gallery image versions. Call ListNext() with this to fetch the next page of gallery image versions.
      required:
        - value
      description: The List Gallery Image version operation response.
      type: object
    GalleryApplicationList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GalleryApplication'
          description: A list of Gallery Applications.
        nextLink:
          type: string
          description: The uri to fetch the next page of Application Definitions in the Application Gallery. Call ListNext() with this to fetch the next page of gallery Application Definitions.
      required:
        - value
      description: The List Gallery Applications operation response.
      type: object
    GalleryApplicationVersionList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/GalleryApplicationVersion'
          description: A list of gallery Application Versions.
        nextLink:
          type: string
          description: The uri to fetch the next page of gallery Application Versions. Call ListNext() with this to fetch the next page of gallery Application Versions.
      required:
        - value
      description: The List Gallery Application version operation response.
      type: object
    UpdateResourceDefinition:
      description: The Update Resource model definition.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      x-ms-azure-resource: true
      type: object
    SharingUpdate:
      description: Specifies information about the gallery sharing profile update.
      properties:
        operationType:
          type: string
          description: 'This property allows you to specify the operation type of gallery sharing update. Possible values are: **Add,** **Remove,** **Reset.**'
          enum:
            - Add
            - Remove
            - Reset
            - EnableCommunity
          x-ms-enum:
            name: SharingUpdateOperationTypes
            modelAsString: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/SharingProfileGroup'
          x-ms-identifiers: []
          description: A list of sharing profile groups.
      required:
        - operationType
      x-ms-azure-resource: true
      type: object
    GalleryProvisioningState:
      readOnly: true
      type: string
      title: The current state of the gallery or gallery artifact.
      description: The provisioning state, which only appears in the response.
      enum:
        - Creating
        - Updating
        - Failed
        - Succeeded
        - Deleting
        - Migrating
      x-ms-enum:
        name: GalleryProvisioningState
        modelAsString: true
    LatestGalleryImageVersion:
      type: object
      readOnly: true
      description: The gallery image version with latest version in a particular region.
      properties:
        latestVersionName:
          type: string
          description: The name of the latest version in the region.
        location:
          type: string
          description: region of the Gallery Image Version.
    GalleryImageVersionUefiSettings:
      type: object
      description: Contains UEFI settings for the image version.
      properties:
        signatureTemplateNames:
          type: array
          description: The name of the template(s) that contains default UEFI key signatures that will be added to the image.
          items:
            $ref: '#/components/schemas/UefiSignatureTemplateName'
          x-ms-identifiers: []
        additionalSignatures:
          $ref: '#/components/schemas/UefiKeySignatures'
    UefiSignatureTemplateName:
      type: string
      description: The name of the signature template that contains default UEFI keys.
      enum:
        - NoSignatureTemplate
        - MicrosoftUefiCertificateAuthorityTemplate
        - MicrosoftWindowsTemplate
      x-ms-enum:
        name: UefiSignatureTemplateName
        modelAsString: true
    UefiKeySignatures:
      type: object
      description: Additional UEFI key signatures that will be added to the image in addition to the signature templates
      properties:
        pk:
          description: The Platform Key of this image version.
          $ref: '#/components/schemas/UefiKey'
        kek:
          type: array
          description: The Key Encryption Keys of this image version.
          items:
            $ref: '#/components/schemas/UefiKey'
          x-ms-identifiers: []
        db:
          type: array
          description: The database of UEFI keys for this image version.
          items:
            $ref: '#/components/schemas/UefiKey'
          x-ms-identifiers: []
        dbx:
          type: array
          description: The database of revoked UEFI keys for this image version.
          items:
            $ref: '#/components/schemas/UefiKey'
          x-ms-identifiers: []
    UefiKey:
      type: object
      description: A UEFI key signature.
      properties:
        type:
          type: string
          description: The type of key signature.
          enum:
            - sha256
            - x509
          x-ms-enum:
            name: UefiKeyType
            modelAsString: true
        value:
          type: array
          description: The value of the key signature.
          items:
            type: string
          x-ms-identifiers: []
    DiskAccessProperties:
      properties:
        privateEndpointConnections:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          description: A readonly collection of private endpoint connections created on the disk. Currently only one endpoint connection is supported.
        provisioningState:
          readOnly: true
          type: string
          description: The disk access resource provisioning state.
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: The time when the disk access was created.
      type: object
    DiskAccess:
      description: disk access resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiskAccessProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location where the disk access will be created. Extended location cannot be changed.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    DiskAccessList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DiskAccess'
          description: A list of disk access resources.
        nextLink:
          type: string
          description: The uri to fetch the next page of disk access resources. Call ListNext() with this to fetch the next page of disk access resources.
      required:
        - value
      description: The List disk access operation response.
      type: object
    DiskAccessUpdate:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      description: Used for updating a disk access resource.
      type: object
    PrivateLinkResourceListResult:
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
      description: A list of private link resources
      type: object
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: private link resource Id
        name:
          readOnly: true
          type: string
          description: private link resource name
        type:
          readOnly: true
          type: string
          description: private link resource type
      type: object
    PrivateLinkResourceProperties:
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          type: array
          items:
            type: string
          description: The private link resource DNS zone name.
      description: Properties of a private link resource.
      type: object
    PrivateEndpoint:
      properties:
        id:
          readOnly: true
          type: string
          description: The ARM identifier for Private Endpoint
      description: The Private Endpoint resource.
      type: object
    PrivateEndpointServiceConnectionStatus:
      type: string
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
      x-ms-enum:
        name: PrivateEndpointServiceConnectionStatus
        modelAsString: true
    PrivateEndpointConnectionProvisioningState:
      type: string
      readOnly: true
      description: The current provisioning state.
      enum:
        - Succeeded
        - Creating
        - Deleting
        - Failed
      x-ms-enum:
        name: PrivateEndpointConnectionProvisioningState
        modelAsString: true
    PrivateLinkServiceConnectionState:
      properties:
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
        description:
          type: string
          description: The reason for approval/rejection of the connection.
        actionsRequired:
          type: string
          description: A message indicating if changes on the service provider require any updates on the consumer.
      description: A collection of information about the state of the connection between service consumer and provider.
      type: object
    PrivateEndpointConnectionProperties:
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
          readOnly: true
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: A collection of information about the state of the connection between DiskAccess and Virtual Network.
        provisioningState:
          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'
          description: The provisioning state of the private endpoint connection resource.
      required:
        - privateLinkServiceConnectionState
      description: Properties of the PrivateEndpointConnectProperties.
      type: object
    PrivateEndpointConnection:
      description: The Private Endpoint Connection resource.
      x-ms-azure-resource: true
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          x-ms-client-flatten: true
          description: Resource properties.
        id:
          readOnly: true
          type: string
          description: private endpoint connection Id
        name:
          readOnly: true
          type: string
          description: private endpoint connection name
        type:
          readOnly: true
          type: string
          description: private endpoint connection type
      type: object
    PrivateEndpointConnectionListResult:
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        nextLink:
          type: string
          description: The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots.
      description: A list of private link resources
      type: object
    RequestRateByIntervalInput:
      required:
        - intervalLength
      description: Api request input for LogAnalytics getRequestRateByInterval Api.
      properties:
        intervalLength:
          type: string
          description: Interval value in minutes used to create LogAnalytics call rate logs.
          enum:
            - ThreeMins
            - FiveMins
            - ThirtyMins
            - SixtyMins
          x-ms-enum:
            name: IntervalInMins
            modelAsString: false
        blobContainerSasUri:
          type: string
          description: SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        fromTime:
          type: string
          format: date-time
          description: From time of the query
        toTime:
          type: string
          format: date-time
          description: To time of the query
        groupByThrottlePolicy:
          type: boolean
          description: Group query result by Throttle Policy applied.
        groupByOperationName:
          type: boolean
          description: Group query result by Operation Name.
        groupByResourceName:
          type: boolean
          description: Group query result by Resource Name.
        groupByClientApplicationId:
          type: boolean
          description: Group query result by Client Application ID.
        groupByUserAgent:
          type: boolean
          description: Group query result by User Agent.
      type: object
    ThrottledRequestsInput:
      description: Api request input for LogAnalytics getThrottledRequests Api.
      properties:
        blobContainerSasUri:
          type: string
          description: SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        fromTime:
          type: string
          format: date-time
          description: From time of the query
        toTime:
          type: string
          format: date-time
          description: To time of the query
        groupByThrottlePolicy:
          type: boolean
          description: Group query result by Throttle Policy applied.
        groupByOperationName:
          type: boolean
          description: Group query result by Operation Name.
        groupByResourceName:
          type: boolean
          description: Group query result by Resource Name.
        groupByClientApplicationId:
          type: boolean
          description: Group query result by Client Application ID.
        groupByUserAgent:
          type: boolean
          description: Group query result by User Agent.
      type: object
    LogAnalyticsInputBase:
      properties:
        blobContainerSasUri:
          type: string
          description: SAS Uri of the logging blob container to which LogAnalytics Api writes output logs to.
        fromTime:
          type: string
          format: date-time
          description: From time of the query
        toTime:
          type: string
          format: date-time
          description: To time of the query
        groupByThrottlePolicy:
          type: boolean
          description: Group query result by Throttle Policy applied.
        groupByOperationName:
          type: boolean
          description: Group query result by Operation Name.
        groupByResourceName:
          type: boolean
          description: Group query result by Resource Name.
        groupByClientApplicationId:
          type: boolean
          description: Group query result by Client Application ID.
        groupByUserAgent:
          type: boolean
          description: Group query result by User Agent.
      required:
        - blobContainerSasUri
        - fromTime
        - toTime
      description: Api input base class for LogAnalytics Api.
      type: object
    LogAnalyticsOperationResult:
      description: LogAnalytics operation status response
      properties:
        properties:
          readOnly: true
          $ref: '#/components/schemas/LogAnalyticsOutput'
          description: LogAnalyticsOutput
      type: object
    LogAnalyticsOutput:
      properties:
        output:
          readOnly: true
          type: string
          description: Output file Uri path to blob container.
      description: LogAnalytics output properties
      type: object
    RestorePointCollectionSourceProperties:
      properties:
        location:
          type: string
          readOnly: true
          description: Location of the source resource used to create this restore point collection.
        id:
          type: string
          description: Resource Id of the source resource used to create this restore point collection
      description: The properties of the source resource that this restore point collection is created from.
      type: object
    RestorePointCollectionProperties:
      properties:
        source:
          $ref: '#/components/schemas/RestorePointCollectionSourceProperties'
        provisioningState:
          type: string
          readOnly: true
          description: The provisioning state of the restore point collection.
        restorePointCollectionId:
          type: string
          readOnly: true
          description: The unique id of the restore point collection.
        restorePoints:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RestorePoint'
          description: A list containing all restore points created under this restore point collection.
      description: The restore point collection properties.
      type: object
    RestorePointCollection:
      description: Create or update Restore Point collection parameters.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RestorePointCollectionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    RestorePointCollectionUpdate:
      description: Update Restore Point collection parameters.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RestorePointCollectionProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    RestorePointCollectionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RestorePointCollection'
          description: Gets the list of restore point collections.
        nextLink:
          type: string
          description: The uri to fetch the next page of RestorePointCollections. Call ListNext() with this to fetch the next page of RestorePointCollections
      description: The List restore point collection operation response.
      type: object
    RestorePointSourceMetadata:
      properties:
        hardwareProfile:
          readOnly: true
          $ref: '#/components/schemas/HardwareProfile'
          description: Gets the hardware profile.
        storageProfile:
          $ref: '#/components/schemas/RestorePointSourceVMStorageProfile'
          description: Gets the storage profile.
        osProfile:
          readOnly: true
          $ref: '#/components/schemas/OSProfile'
          description: Gets the OS profile.
        diagnosticsProfile:
          readOnly: true
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: Gets the diagnostics profile.
        licenseType:
          type: string
          readOnly: true
          description: Gets the license type, which is for bring your own license scenario.
        vmId:
          type: string
          readOnly: true
          description: Gets the virtual machine unique id.
        securityProfile:
          readOnly: true
          $ref: '#/components/schemas/SecurityProfile'
          description: Gets the security profile.
        location:
          type: string
          readOnly: true
          description: Location of the VM from which the restore point was created.
        userData:
          type: string
          readOnly: true
          description: UserData associated with the source VM for which restore point is captured, which is a base-64 encoded value.
        hyperVGeneration:
          $ref: '#/components/schemas/HyperVGenerationType'
          readOnly: true
          description: HyperVGeneration of the source VM for which restore point is captured.
      description: Describes the properties of the Virtual Machine for which the restore point was created. The properties provided are a subset and the snapshot of the overall Virtual Machine properties captured at the time of the restore point creation.
      type: object
    RestorePointSourceVMStorageProfile:
      properties:
        osDisk:
          $ref: '#/components/schemas/RestorePointSourceVMOSDisk'
          description: Gets the OS disk of the VM captured at the time of the restore point creation.
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/RestorePointSourceVMDataDisk'
          x-ms-identifiers:
            - lun
          description: Gets the data disks of the VM captured at the time of the restore point creation.
        diskControllerType:
          $ref: '#/components/schemas/RestorePointSourceVMDiskControllerType'
          readOnly: true
          description: Gets the disk controller type of the VM captured at the time of the restore point creation.
      description: Describes the storage profile.
      type: object
    RestorePointSourceVMDiskControllerType:
      type: string
      enum:
        - SCSI
        - NVMe
      x-ms-enum:
        name: DiskControllerTypes
        modelAsString: true
      description: Provides the disk controller type configured for the VM. This property is only supported for virtual machines whose operating system disk and VM sku supports Generation 2 (https://docs.microsoft.com/en-us/azure/virtual-machines/generation-2). For more information about Disk Controller Types supported please refer to https://aka.ms/azure-diskcontrollertypes.
    RestorePointSourceVMOSDisk:
      properties:
        osType:
          type: string
          readOnly: true
          description: Gets the Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemType
            modelAsString: true
        encryptionSettings:
          readOnly: true
          $ref: '#/components/schemas/DiskEncryptionSettings'
          description: Gets the disk encryption settings.
        name:
          type: string
          readOnly: true
          description: Gets the disk name.
        caching:
          readOnly: true
          $ref: '#/components/schemas/Caching'
          description: Gets the caching type.
        diskSizeGB:
          type: integer
          readOnly: true
          format: int32
          description: Gets the disk size in GB.
        managedDisk:
          $ref: '#/components/schemas/ManagedDiskParameters'
          description: Gets the managed disk details
        diskRestorePoint:
          $ref: '#/components/schemas/DiskRestorePointAttributes'
          description: Contains Disk Restore Point properties.
        writeAcceleratorEnabled:
          type: boolean
          readOnly: true
          description: Shows true if the disk is write-accelerator enabled.
      description: Describes an Operating System disk.
      type: object
    RestorePointSourceVMDataDisk:
      properties:
        lun:
          type: integer
          readOnly: true
          format: int32
          description: Gets the logical unit number.
        name:
          type: string
          readOnly: true
          description: Gets the disk name.
        caching:
          readOnly: true
          $ref: '#/components/schemas/Caching'
          description: Gets the caching type.
        diskSizeGB:
          type: integer
          readOnly: true
          format: int32
          description: Gets the initial disk size in GB for blank data disks, and the new desired size for existing OS and Data disks.
        managedDisk:
          $ref: '#/components/schemas/ManagedDiskParameters'
          description: Contains the managed disk details.
        diskRestorePoint:
          $ref: '#/components/schemas/DiskRestorePointAttributes'
          description: Contains Disk Restore Point properties.
        writeAcceleratorEnabled:
          type: boolean
          readOnly: true
          description: Shows true if the disk is write-accelerator enabled.
      description: Describes a data disk.
      type: object
    DiskRestorePointAttributes:
      description: Disk Restore Point details.
      properties:
        encryption:
          $ref: '#/components/schemas/RestorePointEncryption'
        sourceDiskRestorePoint:
          $ref: '#/components/schemas/ApiEntityReference'
          description: Resource Id of the source disk restore point.
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    RestorePointEncryption:
      type: object
      properties:
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
        type:
          $ref: '#/components/schemas/RestorePointEncryptionType'
      description: Encryption at rest settings for disk restore point. It is an optional property that can be specified in the input while creating a restore point.
    RestorePointEncryptionType:
      type: string
      description: The type of key used to encrypt the data of the disk restore point.
      enum:
        - EncryptionAtRestWithPlatformKey
        - EncryptionAtRestWithCustomerKey
        - EncryptionAtRestWithPlatformAndCustomerKeys
      x-ms-enum:
        name: RestorePointEncryptionType
        modelAsString: true
        values:
          - value: EncryptionAtRestWithPlatformKey
            description: 'Disk Restore Point is encrypted at rest with Platform managed key. '
          - value: EncryptionAtRestWithCustomerKey
            description: Disk Restore Point is encrypted at rest with Customer managed key that can be changed and revoked by a customer.
          - value: EncryptionAtRestWithPlatformAndCustomerKeys
            description: Disk Restore Point is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed.
    RestorePoint:
      description: Restore Point details.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RestorePointProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
      type: object
    RestorePointInstanceView:
      type: object
      properties:
        diskRestorePoints:
          type: array
          items:
            $ref: '#/components/schemas/DiskRestorePointInstanceView'
          description: The disk restore points information.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of a restore point.
    DiskRestorePointInstanceView:
      type: object
      properties:
        id:
          type: string
          description: Disk restore point Id.
        replicationStatus:
          $ref: '#/components/schemas/DiskRestorePointReplicationStatus'
          description: The disk restore point replication status information.
      description: The instance view of a disk restore point.
    DiskRestorePointReplicationStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/InstanceViewStatus'
          description: The resource status information.
        completionPercent:
          type: integer
          format: int32
          description: Replication completion percentage.
      description: The instance view of a disk restore point.
    RestorePointProperties:
      type: object
      properties:
        excludeDisks:
          type: array
          items:
            $ref: '#/components/schemas/ApiEntityReference'
          description: List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
        sourceMetadata:
          $ref: '#/components/schemas/RestorePointSourceMetadata'
          description: Gets the details of the VM captured at the time of the restore point creation.
        provisioningState:
          type: string
          readOnly: true
          description: Gets the provisioning state of the restore point.
        consistencyMode:
          type: string
          enum:
            - CrashConsistent
            - FileSystemConsistent
            - ApplicationConsistent
          x-ms-enum:
            name: ConsistencyModeTypes
            modelAsString: true
          description: ConsistencyMode of the RestorePoint. Can be specified in the input while creating a restore point. For now, only CrashConsistent is accepted as a valid input. Please refer to https://aka.ms/RestorePoints for more details.
        timeCreated:
          type: string
          format: date-time
          description: Gets the creation time of the restore point.
        sourceRestorePoint:
          $ref: '#/components/schemas/ApiEntityReference'
          description: Resource Id of the source restore point from which a copy needs to be created.
        instanceView:
          $ref: '#/components/schemas/RestorePointInstanceView'
          readOnly: true
          description: The restore point instance view.
      description: The restore point properties.
    ComputeOperationListResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ComputeOperationValue'
          x-ms-identifiers:
            - name
          description: The list of compute operations
      description: The List Compute Operation operation response.
      type: object
    ComputeOperationValue:
      properties:
        origin:
          type: string
          readOnly: true
          description: The origin of the compute operation.
        name:
          type: string
          readOnly: true
          description: The name of the compute operation.
        display:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ComputeOperationValueDisplay'
      description: Describes the properties of a Compute Operation value.
      type: object
    ComputeOperationValueDisplay:
      properties:
        operation:
          type: string
          readOnly: true
          description: The display name of the compute operation.
        resource:
          type: string
          readOnly: true
          description: The display name of the resource the operation applies to.
        description:
          type: string
          readOnly: true
          description: The description of the operation.
        provider:
          type: string
          readOnly: true
          description: The resource provider for the operation.
      description: Describes the properties of a Compute Operation Value Display.
      type: object
    UsageName:
      properties:
        value:
          type: string
          description: The name of the resource.
        localizedValue:
          type: string
          description: The localized name of the resource.
      description: The Usage Names.
      type: object
    Usage:
      properties:
        unit:
          type: string
          description: An enum describing the unit of usage measurement.
          enum:
            - Count
          x-ms-enum:
            name: UsageUnit
            modelAsString: false
        currentValue:
          type: integer
          format: int32
          description: The current usage of the resource.
        limit:
          type: integer
          format: int64
          description: The maximum permitted usage of the resource.
        name:
          $ref: '#/components/schemas/UsageName'
          description: The name of the type of usage.
      required:
        - unit
        - currentValue
        - limit
        - name
      description: Describes Compute Resource Usage.
      type: object
    ListUsagesResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          x-ms-identifiers: []
          description: The list of compute resource usages.
        nextLink:
          type: string
          description: The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information.
      required:
        - value
      description: The List Usages operation response.
      type: object
    HyperVGenerationType:
      type: string
      description: Specifies the HyperVGeneration Type
      enum:
        - V1
        - V2
      x-ms-enum:
        name: HyperVGenerationTypes
        modelAsString: true
    InstanceViewStatus:
      properties:
        code:
          type: string
          description: The status code.
        level:
          type: string
          description: The level code.
          enum:
            - Info
            - Warning
            - Error
          x-ms-enum:
            name: StatusLevelTypes
            modelAsString: false
        displayStatus:
          type: string
          description: The short localizable label for the status.
        message:
          type: string
          description: The detailed status message, including for alerts and error messages.
        time:
          type: string
          format: date-time
          description: The time of the status.
      type: object
      description: Instance view status.
    SubResourceWithColocationStatus:
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          description: Resource Id
        colocationStatus:
          $ref: '#/components/schemas/InstanceViewStatus'
          description: Describes colocation status of a resource in the Proximity Placement Group.
      type: object
    VirtualMachineSize:
      properties:
        name:
          type: string
          description: The name of the virtual machine size.
        numberOfCores:
          type: integer
          format: int32
          description: The number of cores supported by the virtual machine size. For Constrained vCPU capable VM sizes, this number represents the total vCPUs of quota that the VM uses. For accurate vCPU count, please refer to https://docs.microsoft.com/azure/virtual-machines/constrained-vcpu or https://docs.microsoft.com/rest/api/compute/resourceskus/list
        osDiskSizeInMB:
          type: integer
          format: int32
          description: The OS disk size, in MB, allowed by the virtual machine size.
        resourceDiskSizeInMB:
          type: integer
          format: int32
          description: The resource disk size, in MB, allowed by the virtual machine size.
        memoryInMB:
          type: integer
          format: int32
          description: The amount of memory, in MB, supported by the virtual machine size.
        maxDataDiskCount:
          type: integer
          format: int32
          description: The maximum number of data disks that can be attached to the virtual machine size.
      description: Describes the properties of a VM size.
      type: object
    VirtualMachineSizeListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineSize'
          x-ms-identifiers:
            - name
          description: The list of virtual machine sizes.
      description: The List Virtual Machine operation response.
      type: object
    Plan:
      properties:
        name:
          type: string
          description: The plan ID.
        publisher:
          type: string
          description: The publisher ID.
        product:
          type: string
          description: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
        promotionCode:
          type: string
          description: The promotion code.
      description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
      type: object
    HardwareProfile:
      properties:
        vmSize:
          type: string
          description: 'Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. The recommended way to get the list of available sizes is using these APIs: [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes), [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list), [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). The available VM sizes depend on region and availability set.'
          enum:
            - Basic_A0
            - Basic_A1
            - Basic_A2
            - Basic_A3
            - Basic_A4
            - Standard_A0
            - Standard_A1
            - Standard_A2
            - Standard_A3
            - Standard_A4
            - Standard_A5
            - Standard_A6
            - Standard_A7
            - Standard_A8
            - Standard_A9
            - Standard_A10
            - Standard_A11
            - Standard_A1_v2
            - Standard_A2_v2
            - Standard_A4_v2
            - Standard_A8_v2
            - Standard_A2m_v2
            - Standard_A4m_v2
            - Standard_A8m_v2
            - Standard_B1s
            - Standard_B1ms
            - Standard_B2s
            - Standard_B2ms
            - Standard_B4ms
            - Standard_B8ms
            - Standard_D1
            - Standard_D2
            - Standard_D3
            - Standard_D4
            - Standard_D11
            - Standard_D12
            - Standard_D13
            - Standard_D14
            - Standard_D1_v2
            - Standard_D2_v2
            - Standard_D3_v2
            - Standard_D4_v2
            - Standard_D5_v2
            - Standard_D2_v3
            - Standard_D4_v3
            - Standard_D8_v3
            - Standard_D16_v3
            - Standard_D32_v3
            - Standard_D64_v3
            - Standard_D2s_v3
            - Standard_D4s_v3
            - Standard_D8s_v3
            - Standard_D16s_v3
            - Standard_D32s_v3
            - Standard_D64s_v3
            - Standard_D11_v2
            - Standard_D12_v2
            - Standard_D13_v2
            - Standard_D14_v2
            - Standard_D15_v2
            - Standard_DS1
            - Standard_DS2
            - Standard_DS3
            - Standard_DS4
            - Standard_DS11
            - Standard_DS12
            - Standard_DS13
            - Standard_DS14
            - Standard_DS1_v2
            - Standard_DS2_v2
            - Standard_DS3_v2
            - Standard_DS4_v2
            - Standard_DS5_v2
            - Standard_DS11_v2
            - Standard_DS12_v2
            - Standard_DS13_v2
            - Standard_DS14_v2
            - Standard_DS15_v2
            - Standard_DS13-4_v2
            - Standard_DS13-2_v2
            - Standard_DS14-8_v2
            - Standard_DS14-4_v2
            - Standard_E2_v3
            - Standard_E4_v3
            - Standard_E8_v3
            - Standard_E16_v3
            - Standard_E32_v3
            - Standard_E64_v3
            - Standard_E2s_v3
            - Standard_E4s_v3
            - Standard_E8s_v3
            - Standard_E16s_v3
            - Standard_E32s_v3
            - Standard_E64s_v3
            - Standard_E32-16_v3
            - Standard_E32-8s_v3
            - Standard_E64-32s_v3
            - Standard_E64-16s_v3
            - Standard_F1
            - Standard_F2
            - Standard_F4
            - Standard_F8
            - Standard_F16
            - Standard_F1s
            - Standard_F2s
            - Standard_F4s
            - Standard_F8s
            - Standard_F16s
            - Standard_F2s_v2
            - Standard_F4s_v2
            - Standard_F8s_v2
            - Standard_F16s_v2
            - Standard_F32s_v2
            - Standard_F64s_v2
            - Standard_F72s_v2
            - Standard_G1
            - Standard_G2
            - Standard_G3
            - Standard_G4
            - Standard_G5
            - Standard_GS1
            - Standard_GS2
            - Standard_GS3
            - Standard_GS4
            - Standard_GS5
            - Standard_GS4-8
            - Standard_GS4-4
            - Standard_GS5-16
            - Standard_GS5-8
            - Standard_H8
            - Standard_H16
            - Standard_H8m
            - Standard_H16m
            - Standard_H16r
            - Standard_H16mr
            - Standard_L4s
            - Standard_L8s
            - Standard_L16s
            - Standard_L32s
            - Standard_M64s
            - Standard_M64ms
            - Standard_M128s
            - Standard_M128ms
            - Standard_M64-32ms
            - Standard_M64-16ms
            - Standard_M128-64ms
            - Standard_M128-32ms
            - Standard_NC6
            - Standard_NC12
            - Standard_NC24
            - Standard_NC24r
            - Standard_NC6s_v2
            - Standard_NC12s_v2
            - Standard_NC24s_v2
            - Standard_NC24rs_v2
            - Standard_NC6s_v3
            - Standard_NC12s_v3
            - Standard_NC24s_v3
            - Standard_NC24rs_v3
            - Standard_ND6s
            - Standard_ND12s
            - Standard_ND24s
            - Standard_ND24rs
            - Standard_NV6
            - Standard_NV12
            - Standard_NV24
          x-ms-enum:
            name: VirtualMachineSizeTypes
            modelAsString: true
        vmSizeProperties:
          $ref: '#/components/schemas/VMSizeProperties'
          description: 'Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details.'
      description: Specifies the hardware settings for the virtual machine.
      type: object
    ScheduledEventsPolicy:
      type: object
      description: Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations.
      properties:
        userInitiatedRedeploy:
          $ref: '#/components/schemas/UserInitiatedRedeploy'
          description: The configuration parameters used while creating userInitiatedRedeploy scheduled event setting creation.
        userInitiatedReboot:
          $ref: '#/components/schemas/UserInitiatedReboot'
          description: The configuration parameters used while creating userInitiatedReboot scheduled event setting creation.
        scheduledEventsAdditionalPublishingTargets:
          $ref: '#/components/schemas/ScheduledEventsAdditionalPublishingTargets'
          description: The configuration parameters used while publishing scheduledEventsAdditionalPublishingTargets.
    UserInitiatedRedeploy:
      type: object
      description: Specifies Redeploy related Scheduled Event related configurations.
      properties:
        automaticallyApprove:
          type: boolean
          description: Specifies Redeploy Scheduled Event related configurations.
    UserInitiatedReboot:
      type: object
      description: Specifies Reboot related Scheduled Event related configurations.
      properties:
        automaticallyApprove:
          type: boolean
          description: Specifies Reboot Scheduled Event related configurations.
    ScheduledEventsAdditionalPublishingTargets:
      type: object
      properties:
        eventGridAndResourceGraph:
          $ref: '#/components/schemas/EventGridAndResourceGraph'
          description: The configuration parameters used while creating eventGridAndResourceGraph Scheduled Event setting.
    EventGridAndResourceGraph:
      type: object
      description: Specifies eventGridAndResourceGraph related Scheduled Event related configurations.
      properties:
        enable:
          type: boolean
          description: Specifies if event grid and resource graph is enabled for Scheduled event related configurations.
    VMSizeProperties:
      type: object
      properties:
        vCPUsAvailable:
          type: integer
          format: int32
          description: Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list).
        vCPUsPerCore:
          type: integer
          format: int32
          description: Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**
      description: Specifies VM Size Property settings on the virtual machine.
    ImageReference:
      description: 'Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations. NOTE: Image reference publisher and offer can only be set when you create the scale set.'
      properties:
        publisher:
          type: string
          description: The image publisher.
        offer:
          type: string
          description: Specifies the offer of the platform image or marketplace image used to create the virtual machine.
        sku:
          type: string
          description: The image SKU.
        version:
          type: string
          description: Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input.
        exactVersion:
          type: string
          readOnly: true
          description: Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.
        sharedGalleryImageId:
          type: string
          description: Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call.
        communityGalleryImageId:
          type: string
          description: Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call.
        id:
          type: string
          description: Resource Id
      type: object
    DiskControllerType:
      type: string
      enum:
        - SCSI
        - NVMe
      x-ms-enum:
        name: DiskControllerTypes
        modelAsString: true
      description: Specifies the disk controller type configured for the VM and VirtualMachineScaleSet. This property is only supported for virtual machines whose operating system disk and VM sku supports Generation 2 (https://docs.microsoft.com/en-us/azure/virtual-machines/generation-2), please check the HyperVGenerations capability returned as part of VM sku capabilities in the response of Microsoft.Compute SKUs api for the region contains V2 (https://docs.microsoft.com/rest/api/compute/resourceskus/list). For more information about Disk Controller Types supported please refer to https://aka.ms/azure-diskcontrollertypes.
    KeyVaultSecretReference:
      properties:
        secretUrl:
          type: string
          description: The URL referencing a secret in a Key Vault.
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing the secret.
      required:
        - secretUrl
        - sourceVault
      description: Describes a reference to Key Vault Secret
      type: object
    DiskEncryptionSetParameters:
      description: Describes the parameter of customer managed disk encryption set resource id that can be specified for disk. **Note:** The disk encryption set resource id can only be specified for managed disk. Please refer https://aka.ms/mdssewithcmkoverview for more details.
      x-ms-azure-resource: true
      properties:
        id:
          type: string
          description: Resource Id
      type: object
    KeyVaultKeyReference:
      properties:
        keyUrl:
          type: string
          description: The URL referencing a key encryption key in Key Vault.
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing the key.
      required:
        - keyUrl
        - sourceVault
      description: Describes a reference to Key Vault Key
      type: object
    DiskEncryptionSettings:
      properties:
        diskEncryptionKey:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: Specifies the location of the disk encryption key, which is a Key Vault Secret.
        keyEncryptionKey:
          $ref: '#/components/schemas/KeyVaultKeyReference'
          description: Specifies the location of the key encryption key in Key Vault.
        enabled:
          type: boolean
          description: Specifies whether disk encryption should be enabled on the virtual machine.
      description: Describes a Encryption Settings for a Disk
      type: object
    VMDiskSecurityProfile:
      type: object
      properties:
        securityEncryptionType:
          type: string
          description: Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs.
          enum:
            - VMGuestStateOnly
            - DiskWithVMGuestState
            - NonPersistedTPM
          x-ms-enum:
            name: securityEncryptionTypes
            modelAsString: true
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob.
      description: Specifies the security profile settings for the managed disk. **Note:** It can only be set for Confidential VMs.
    VirtualHardDisk:
      properties:
        uri:
          type: string
          description: Specifies the virtual hard disk's uri.
      description: Describes the uri of a disk.
      type: object
    Caching:
      type: string
      description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage**'
      enum:
        - None
        - ReadOnly
        - ReadWrite
      x-ms-enum:
        name: CachingTypes
        modelAsString: false
    CreateOption:
      type: string
      description: Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described. **Empty:** This value is used when creating an empty data disk. **Copy:** This value is used to create a data disk from a snapshot or another disk. **Restore:** This value is used to create a data disk from a disk restore point.
      enum:
        - FromImage
        - Empty
        - Attach
        - Copy
        - Restore
      x-ms-enum:
        name: DiskCreateOptionTypes
        modelAsString: true
    DetachOption:
      type: string
      description: 'Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values are: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. **This feature is still in preview** mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to ''true'' along with setting detachOption: ''ForceDetach''.'
      enum:
        - ForceDetach
      x-ms-enum:
        name: DiskDetachOptionTypes
        modelAsString: true
    DeleteOption:
      type: string
      description: 'Specifies the behavior of the managed disk when the VM gets deleted, for example whether the managed disk is deleted or detached. Supported values are: **Delete.** If this value is used, the managed disk is deleted when VM gets deleted. **Detach.** If this value is used, the managed disk is retained after VM gets deleted. Minimum api-version: 2021-03-01.'
      enum:
        - Delete
        - Detach
      x-ms-enum:
        name: DiskDeleteOptionTypes
        modelAsString: true
    StorageAccountType:
      type: string
      description: 'Specifies the storage account type for the managed disk. Managed OS disk storage account type can only be set when you create the scale set. NOTE: UltraSSD_LRS can only be used with data disks. It cannot be used with OS Disk. Standard_LRS uses Standard HDD. StandardSSD_LRS uses Standard SSD. Premium_LRS uses Premium SSD. UltraSSD_LRS uses Ultra disk. Premium_ZRS uses Premium SSD zone redundant storage. StandardSSD_ZRS uses Standard SSD zone redundant storage. For more information regarding disks supported for Windows Virtual Machines, refer to https://docs.microsoft.com/azure/virtual-machines/windows/disks-types and, for Linux Virtual Machines, refer to https://docs.microsoft.com/azure/virtual-machines/linux/disks-types'
      enum:
        - Standard_LRS
        - Premium_LRS
        - StandardSSD_LRS
        - UltraSSD_LRS
        - Premium_ZRS
        - StandardSSD_ZRS
        - PremiumV2_LRS
      x-ms-enum:
        name: StorageAccountTypes
        modelAsString: true
    DiffDiskOption:
      type: string
      description: Specifies the ephemeral disk option for operating system disk.
      enum:
        - Local
      x-ms-enum:
        name: DiffDiskOptions
        modelAsString: true
    DiffDiskPlacement:
      type: string
      description: 'Specifies the ephemeral disk placement for operating system disk. This property can be used by user in the request to choose the location i.e, cache disk, resource disk or nvme disk space for Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size requirements, please refer Ephemeral OS disk size requirements for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements. Minimum api-version for NvmeDisk: 2024-03-01.'
      enum:
        - CacheDisk
        - ResourceDisk
        - NvmeDisk
      x-ms-enum:
        name: DiffDiskPlacement
        modelAsString: true
    DiffDiskSettings:
      properties:
        option:
          $ref: '#/components/schemas/DiffDiskOption'
          description: Specifies the ephemeral disk settings for operating system disk.
        placement:
          $ref: '#/components/schemas/DiffDiskPlacement'
          description: 'Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk,** **NvmeDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** or **NvmeDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk. Minimum api-version for NvmeDisk: 2024-03-01.'
      description: Describes the parameters of ephemeral disk settings that can be specified for operating system disk. **Note:** The ephemeral disk settings can only be specified for managed disk.
      type: object
    ManagedDiskParameters:
      description: The parameters of a managed disk.
      properties:
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed disk.
        securityProfile:
          $ref: '#/components/schemas/VMDiskSecurityProfile'
          description: Specifies the security profile for the managed disk.
        id:
          type: string
          description: Resource Id
      type: object
    OSDisk:
      properties:
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        encryptionSettings:
          $ref: '#/components/schemas/DiskEncryptionSettings'
          description: 'Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15.'
        name:
          type: string
          description: The disk name.
        vhd:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The virtual hard disk.
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        diffDiskSettings:
          $ref: '#/components/schemas/DiffDiskSettings'
          description: Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/ManagedDiskParameters'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether OS Disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the OS disk is deleted when VM is deleted. **Detach.** If this value is used, the os disk is retained after VM is deleted. The default value is set to **Detach**. For an ephemeral OS Disk, the default value is set to **Delete**. The user cannot change the delete option for an ephemeral OS Disk.'
      required:
        - createOption
      description: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
      type: object
    DataDisk:
      properties:
        lun:
          type: integer
          format: int32
          description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        name:
          type: string
          description: The disk name.
        vhd:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The virtual hard disk.
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine data disk. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described. **Empty:** This value is used when creating an empty data disk. **Copy:** This value is used to create a data disk from a snapshot or another disk. **Restore:** This value is used to create a data disk from a disk restore point.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/ManagedDiskParameters'
        sourceResource:
          $ref: '#/components/schemas/ApiEntityReference'
          description: The source resource identifier. It can be a snapshot, or disk restore point from which to create a disk.
        toBeDetached:
          type: boolean
          description: Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset
        diskIOPSReadWrite:
          type: integer
          readOnly: true
          format: int64
          description: Specifies the Read-Write IOPS for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        diskMBpsReadWrite:
          type: integer
          readOnly: true
          format: int64
          description: Specifies the bandwidth in MB per second for the managed disk when StorageAccountType is UltraSSD_LRS. Returned only for VirtualMachine ScaleSet VM disks. Can be updated only via updates to the VirtualMachine Scale Set.
        detachOption:
          $ref: '#/components/schemas/DetachOption'
          description: 'Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. **This feature is still in preview** mode and is not supported for VirtualMachineScaleSet. To force-detach a data disk update toBeDetached to ''true'' along with setting detachOption: ''ForceDetach''.'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**.'
      required:
        - lun
        - createOption
      description: Describes a data disk.
      type: object
    CapacityReservationProfile:
      type: object
      properties:
        capacityReservationGroup:
          $ref: '#/components/schemas/SubResource'
          description: Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details.
      description: The parameters of a capacity reservation Profile.
    StorageProfile:
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
        osDisk:
          $ref: '#/components/schemas/OSDisk'
          description: Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/DataDisk'
          x-ms-identifiers:
            - lun
          description: Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        diskControllerType:
          $ref: '#/components/schemas/DiskControllerType'
          description: 'Specifies the disk controller type configured for the VM. **Note:** This property will be set to the default disk controller type if not specified provided virtual machine is being created with ''hyperVGeneration'' set to V2 based on the capabilities of the operating system disk and VM size from the the specified minimum api version. You need to deallocate the VM before updating its disk controller type unless you are updating the VM size in the VM configuration which implicitly deallocates and reallocates the VM. Minimum api-version: 2022-08-01.'
      description: Specifies the storage settings for the virtual machine disks.
      type: object
    UefiSettings:
      properties:
        secureBootEnabled:
          type: boolean
          description: 'Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01.'
        vTpmEnabled:
          type: boolean
          description: 'Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01.'
      description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01.'
      type: object
    EncryptionIdentity:
      type: object
      properties:
        userAssignedIdentityResourceId:
          type: string
          description: Specifies ARM Resource ID of one of the user identities associated with the VM.
      description: Specifies the Managed Identity used by ADE to get access token for keyvault operations.
    ProxyAgentSettings:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set.
        mode:
          type: string
          description: Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode.
          enum:
            - Audit
            - Enforce
          x-ms-enum:
            name: Mode
            modelAsString: true
        keyIncarnationId:
          type: integer
          format: int32
          description: Increase the value of this property allows user to reset the key used for securing communication channel between guest and host.
      description: 'Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2024-03-01.'
    SecurityProfile:
      properties:
        uefiSettings:
          $ref: '#/components/schemas/UefiSettings'
          description: 'Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01.'
        encryptionAtHost:
          type: boolean
          description: 'This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource.'
        securityType:
          type: string
          description: 'Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.'
          enum:
            - TrustedLaunch
            - ConfidentialVM
          x-ms-enum:
            name: SecurityTypes
            modelAsString: true
        encryptionIdentity:
          $ref: '#/components/schemas/EncryptionIdentity'
          description: Specifies the Managed Identity used by ADE to get access token for keyvault operations.
        proxyAgentSettings:
          $ref: '#/components/schemas/ProxyAgentSettings'
          description: 'Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2024-03-01.'
      description: Specifies the Security profile settings for the virtual machine or virtual machine scale set.
      type: object
    VMGalleryApplication:
      type: object
      properties:
        tags:
          type: string
          description: Optional, Specifies a passthrough value for more generic context.
        order:
          type: integer
          format: int32
          description: Optional, Specifies the order in which the packages have to be installed
        packageReferenceId:
          type: string
          description: Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}
        configurationReference:
          type: string
          description: Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided
        treatFailureAsDeploymentFailure:
          type: boolean
          description: Optional, If true, any failure for any operation in the VmApplication will fail the deployment
        enableAutomaticUpgrade:
          type: boolean
          description: If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS
      required:
        - packageReferenceId
      description: Specifies the required information to reference a compute gallery application version
    ApplicationProfile:
      type: object
      properties:
        galleryApplications:
          type: array
          items:
            $ref: '#/components/schemas/VMGalleryApplication'
          x-ms-identifiers:
            - packageReferenceId
          description: Specifies the gallery applications that should be made available to the VM/VMSS
      description: Contains the list of gallery applications that should be made available to the VM/VMSS
    AdditionalCapabilities:
      properties:
        ultraSSDEnabled:
          type: boolean
          description: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled.
        hibernationEnabled:
          type: boolean
          description: The flag that enables or disables hibernation capability on the VM.
      description: Enables or disables a capability on the virtual machine or virtual machine scale set.
      type: object
    AdditionalUnattendContent:
      properties:
        passName:
          type: string
          description: The pass name. Currently, the only allowable value is OobeSystem.
          enum:
            - OobeSystem
          x-ms-enum:
            name: PassNames
            modelAsString: false
        componentName:
          type: string
          description: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
          enum:
            - Microsoft-Windows-Shell-Setup
          x-ms-enum:
            name: ComponentNames
            modelAsString: false
        settingName:
          type: string
          description: 'Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon.'
          enum:
            - AutoLogon
            - FirstLogonCommands
          x-ms-enum:
            name: SettingNames
            modelAsString: false
        content:
          type: string
          description: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted.
      description: Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup. Contents are defined by setting name, component name, and the pass in which the content is applied.
      type: object
    WinRMListener:
      properties:
        protocol:
          type: string
          description: 'Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**'
          enum:
            - Http
            - Https
          x-ms-enum:
            name: ProtocolTypes
            modelAsString: false
        certificateUrl:
          type: string
          description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
      description: Describes Protocol and thumbprint of Windows Remote Management listener
      type: object
    WinRMConfiguration:
      properties:
        listeners:
          type: array
          items:
            $ref: '#/components/schemas/WinRMListener'
          x-ms-identifiers: []
          description: The list of Windows Remote Management listeners
      description: Describes Windows Remote Management configuration of the VM
      type: object
    WindowsConfiguration:
      properties:
        provisionVMAgent:
          type: boolean
          description: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
        enableAutomaticUpdates:
          type: boolean
          description: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.
        timeZone:
          type: string
          description: Specifies the time zone of the virtual machine. e.g. "Pacific Standard Time". Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).
        additionalUnattendContent:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalUnattendContent'
          x-ms-identifiers: []
          description: Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup.
        patchSettings:
          $ref: '#/components/schemas/PatchSettings'
          description: '[Preview Feature] Specifies settings related to VM Guest Patching on Windows.'
        winRM:
          $ref: '#/components/schemas/WinRMConfiguration'
          description: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.
        enableVMAgentPlatformUpdates:
          type: boolean
          description: Indicates whether VMAgent Platform Updates is enabled for the Windows virtual machine. Default value is false.
      description: Specifies Windows operating system settings on the virtual machine.
      type: object
    SshPublicKey:
      properties:
        path:
          type: string
          description: 'Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys'
        keyData:
          type: string
          description: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).
      description: Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.
      type: object
    SshConfiguration:
      properties:
        publicKeys:
          type: array
          items:
            $ref: '#/components/schemas/SshPublicKey'
          x-ms-identifiers:
            - path
          description: The list of SSH public keys used to authenticate with linux based VMs.
      description: SSH configuration for Linux based VMs running on Azure
      type: object
    LinuxConfiguration:
      properties:
        disablePasswordAuthentication:
          type: boolean
          description: Specifies whether password authentication should be disabled.
        ssh:
          $ref: '#/components/schemas/SshConfiguration'
          description: Specifies the ssh key configuration for a Linux OS.
        provisionVMAgent:
          type: boolean
          description: Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later.
        patchSettings:
          $ref: '#/components/schemas/LinuxPatchSettings'
          description: '[Preview Feature] Specifies settings related to VM Guest Patching on Linux.'
        enableVMAgentPlatformUpdates:
          type: boolean
          description: Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false.
      description: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
      type: object
    VaultCertificate:
      properties:
        certificateUrl:
          type: string
          description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).'
        certificateStore:
          type: string
          description: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted.
      description: Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
      type: object
    VaultSecretGroup:
      properties:
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
        vaultCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VaultCertificate'
          x-ms-identifiers:
            - certificateUrl
          description: The list of key vault references in SourceVault which contain certificates.
      description: Describes a set of certificates which are all in the same Key Vault.
      type: object
    OSProfile:
      properties:
        computerName:
          type: string
          description: Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. **Max-length (Windows):** 15 characters. **Max-length (Linux):** 64 characters. For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules).
        adminUsername:
          type: string
          description: Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters.
        adminPassword:
          type: string
          description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
          x-ms-secret: true
        customData:
          type: string
          description: 'Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property ''customData'' is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init).'
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: Specifies Windows operating system settings on the virtual machine.
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
          description: Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        allowExtensionOperations:
          type: boolean
          description: Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine.
        requireGuestProvisionSignal:
          type: boolean
          description: Optional property which must either be set to True or omitted.
      description: Specifies the operating system settings for the virtual machine. Some of the settings cannot be changed once VM is provisioned.
      type: object
    NetworkInterfaceReferenceProperties:
      properties:
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
      description: Describes a network interface reference properties.
      type: object
    NetworkInterfaceReference:
      description: Describes a network interface reference.
      x-ms-azure-resource: true
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NetworkInterfaceReferenceProperties'
        id:
          type: string
          description: Resource Id
      type: object
    PublicIPAddressSku:
      properties:
        name:
          type: string
          description: Specify public IP sku name
          enum:
            - Basic
            - Standard
          x-ms-enum:
            name: PublicIPAddressSkuName
            modelAsString: true
        tier:
          type: string
          description: Specify public IP sku tier
          enum:
            - Regional
            - Global
          x-ms-enum:
            name: PublicIPAddressSkuTier
            modelAsString: true
      description: Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible.
      type: object
    NetworkProfile:
      properties:
        networkInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/NetworkInterfaceReference'
          description: Specifies the list of resource Ids for the network interfaces associated with the virtual machine.
        networkApiVersion:
          type: string
          description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations
          enum:
            - '2020-11-01'
          x-ms-enum:
            name: NetworkApiVersion
            modelAsString: true
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineNetworkInterfaceConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the networking configurations that will be used to create the virtual machine networking resources.
      description: Specifies the network interfaces or the networking configuration of the virtual machine.
      type: object
    BootDiagnostics:
      properties:
        enabled:
          type: boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
        storageUri:
          type: string
          description: Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used.
      description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.
      type: object
    DiagnosticsProfile:
      properties:
        bootDiagnostics:
          $ref: '#/components/schemas/BootDiagnostics'
          description: 'Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.'
      description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
      type: object
    priority:
      type: string
      description: Specifies the priority for a standalone virtual machine or the virtual machines in the scale set. 'Low' enum will be deprecated in the future, please use 'Spot' as the enum to deploy Azure Spot VM/VMSS.
      enum:
        - Regular
        - Low
        - Spot
      x-ms-enum:
        name: VirtualMachinePriorityTypes
        modelAsString: true
    evictionPolicy:
      type: string
      description: Specifies the eviction policy for the Azure Spot VM/VMSS
      enum:
        - Deallocate
        - Delete
      x-ms-enum:
        name: VirtualMachineEvictionPolicyTypes
        modelAsString: true
    BillingProfile:
      properties:
        maxPrice:
          type: number
          format: double
          description: 'Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01.'
      description: 'Specifies the billing related details of a Azure Spot VM or VMSS. Minimum api-version: 2019-03-01.'
      type: object
    DiskInstanceView:
      properties:
        name:
          type: string
          description: The disk name.
        encryptionSettings:
          type: array
          items:
            $ref: '#/components/schemas/DiskEncryptionSettings'
          x-ms-identifiers:
            - diskEncryptionKey/sourceVault/id
          description: 'Specifies the encryption settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of the disk.
      type: object
    BootDiagnosticsInstanceView:
      properties:
        consoleScreenshotBlobUri:
          readOnly: true
          type: string
          description: The console screenshot blob URI. **Note:** This will **not** be set if boot diagnostics is currently enabled with managed storage.
        serialConsoleLogBlobUri:
          readOnly: true
          type: string
          description: The serial console log blob Uri. **Note:** This will **not** be set if boot diagnostics is currently enabled with managed storage.
        status:
          readOnly: true
          $ref: '#/components/schemas/InstanceViewStatus'
          description: The boot diagnostics status information for the VM. **Note:** It will be set only if there are errors encountered in enabling boot diagnostics.
      description: The instance view of a virtual machine boot diagnostics.
      type: object
    MaintenanceRedeployStatus:
      properties:
        isCustomerInitiatedMaintenanceAllowed:
          type: boolean
          description: True, if customer is allowed to perform Maintenance.
        preMaintenanceWindowStartTime:
          type: string
          format: date-time
          description: Start Time for the Pre Maintenance Window.
        preMaintenanceWindowEndTime:
          type: string
          format: date-time
          description: End Time for the Pre Maintenance Window.
        maintenanceWindowStartTime:
          type: string
          format: date-time
          description: Start Time for the Maintenance Window.
        maintenanceWindowEndTime:
          type: string
          format: date-time
          description: End Time for the Maintenance Window.
        lastOperationResultCode:
          type: string
          description: The Last Maintenance Operation Result Code.
          enum:
            - None
            - RetryLater
            - MaintenanceAborted
            - MaintenanceCompleted
          x-ms-enum:
            name: MaintenanceOperationResultCodeTypes
            modelAsString: false
        lastOperationMessage:
          type: string
          description: Message returned for the last Maintenance Operation.
      description: Maintenance Operation Status.
      type: object
    Sku:
      properties:
        name:
          type: string
          description: The sku name.
        tier:
          type: string
          description: Specifies the tier of virtual machines in a scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br /> **Basic**
        capacity:
          type: integer
          format: int64
          description: Specifies the number of virtual machines in the scale set.
      description: 'Describes a virtual machine scale set sku. NOTE: If the new VM SKU is not supported on the hardware the scale set is currently on, you need to deallocate the VMs in the scale set before you modify the SKU name.'
      type: object
    ApiEntityReference:
      properties:
        id:
          type: string
          description: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...
      description: The API entity reference.
      type: object
    RollbackStatusInfo:
      properties:
        successfullyRolledbackInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances which have been successfully rolled back.
        failedRolledbackInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances which failed to rollback.
        rollbackError:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: Error details if OS rollback failed.
      description: Information about rollback on failed VM instances after a OS Upgrade operation.
      type: object
    ScheduledEventsProfile:
      type: object
      properties:
        terminateNotificationProfile:
          $ref: '#/components/schemas/TerminateNotificationProfile'
          description: Specifies Terminate Scheduled Event related configurations.
        osImageNotificationProfile:
          $ref: '#/components/schemas/OSImageNotificationProfile'
          description: Specifies OS Image Scheduled Event related configurations.
    TerminateNotificationProfile:
      type: object
      properties:
        notBeforeTimeout:
          type: string
          description: Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)
        enable:
          type: boolean
          description: Specifies whether the Terminate Scheduled event is enabled or disabled.
    OSImageNotificationProfile:
      type: object
      properties:
        notBeforeTimeout:
          type: string
          description: Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)
        enable:
          type: boolean
          description: Specifies whether the OS Image Scheduled event is enabled or disabled.
    ProxyResource:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
      description: The resource model definition for an Azure Resource Manager proxy resource. It will not have tags and a location
      x-ms-azure-resource: true
      type: object
    UpdateResource:
      type: object
      description: The Update Resource model definition.
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
    PatchSettings:
      properties:
        patchMode:
          type: string
          description: 'Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true '
          enum:
            - Manual
            - AutomaticByOS
            - AutomaticByPlatform
          x-ms-enum:
            name: WindowsVMGuestPatchMode
            modelAsString: true
        enableHotpatching:
          type: boolean
          description: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.
        assessmentMode:
          type: string
          description: 'Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. '
          enum:
            - ImageDefault
            - AutomaticByPlatform
          x-ms-enum:
            name: WindowsPatchAssessmentMode
            modelAsString: true
        automaticByPlatformSettings:
          $ref: '#/components/schemas/WindowsVMGuestPatchAutomaticByPlatformSettings'
          description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows.
      description: Specifies settings related to VM Guest Patching on Windows.
      type: object
    LinuxPatchSettings:
      properties:
        patchMode:
          type: string
          description: Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true
          enum:
            - ImageDefault
            - AutomaticByPlatform
          x-ms-enum:
            name: LinuxVMGuestPatchMode
            modelAsString: true
        assessmentMode:
          type: string
          description: Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true.
          enum:
            - ImageDefault
            - AutomaticByPlatform
          x-ms-enum:
            name: LinuxPatchAssessmentMode
            modelAsString: true
        automaticByPlatformSettings:
          $ref: '#/components/schemas/LinuxVMGuestPatchAutomaticByPlatformSettings'
          description: Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux.
      description: Specifies settings related to VM Guest Patching on Linux.
      type: object
    WindowsVMGuestPatchAutomaticByPlatformSettings:
      type: object
      properties:
        rebootSetting:
          type: string
          description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
          enum:
            - Unknown
            - IfRequired
            - Never
            - Always
          x-ms-enum:
            name: WindowsVMGuestPatchAutomaticByPlatformRebootSetting
            modelAsString: true
        bypassPlatformSafetyChecksOnUserSchedule:
          type: boolean
          description: Enables customer to schedule patching without accidental upgrades
      description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Windows patch settings.
    LinuxVMGuestPatchAutomaticByPlatformSettings:
      type: object
      properties:
        rebootSetting:
          type: string
          description: Specifies the reboot setting for all AutomaticByPlatform patch installation operations.
          enum:
            - Unknown
            - IfRequired
            - Never
            - Always
          x-ms-enum:
            name: LinuxVMGuestPatchAutomaticByPlatformRebootSetting
            modelAsString: true
        bypassPlatformSafetyChecksOnUserSchedule:
          type: boolean
          description: Enables customer to schedule patching without accidental upgrades
      description: Specifies additional settings to be applied when patch mode AutomaticByPlatform is selected in Linux patch settings.
    AttachDetachDataDisksRequest:
      type: object
      properties:
        dataDisksToAttach:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataDisksToAttach'
          x-ms-identifiers:
            - diskId
          description: The list of managed data disks to be attached.
        dataDisksToDetach:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/DataDisksToDetach'
          x-ms-identifiers:
            - diskId
          description: The list of managed data disks to be detached.
      description: Specifies the input for attaching and detaching a list of managed data disks.
    DataDisksToAttach:
      type: object
      properties:
        diskId:
          type: string
          description: ID of the managed data disk.
        lun:
          type: integer
          format: int32
          description: The logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. If not specified, lun would be auto assigned.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed disk.
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
      required:
        - diskId
      description: Describes the data disk to be attached.
    DataDisksToDetach:
      type: object
      properties:
        diskId:
          type: string
          description: ID of the managed data disk.
        detachOption:
          $ref: '#/components/schemas/DetachOption'
          description: Supported options available for Detach of a disk from a VM. Refer to DetachOption object reference for more details.
      required:
        - diskId
      description: Describes the data disk to be detached.
    GalleryImageFeature:
      properties:
        name:
          type: string
          description: The name of the gallery image feature.
        value:
          type: string
          description: The value of the gallery image feature.
      description: A feature for gallery image.
      type: object
    GalleryImageIdentifier:
      properties:
        publisher:
          type: string
          description: The name of the gallery image definition publisher.
        offer:
          type: string
          description: The name of the gallery image definition offer.
        sku:
          type: string
          description: The name of the gallery image definition SKU.
      required:
        - publisher
        - offer
        - sku
      description: This is the gallery image definition identifier.
      type: object
    RecommendedMachineConfiguration:
      properties:
        vCPUs:
          $ref: '#/components/schemas/ResourceRange'
        memory:
          $ref: '#/components/schemas/ResourceRange'
      description: The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
      type: object
    ResourceRange:
      properties:
        min:
          type: integer
          format: int32
          description: The minimum number of the resource.
        max:
          type: integer
          format: int32
          description: The maximum number of the resource.
      description: Describes the resource range.
      type: object
    Disallowed:
      properties:
        diskTypes:
          type: array
          items:
            type: string
          description: A list of disk types.
      description: Describes the disallowed disk types.
      type: object
    ImagePurchasePlan:
      properties:
        name:
          type: string
          description: The plan ID.
        publisher:
          type: string
          description: The publisher ID.
        product:
          type: string
          description: The product ID.
      description: Describes the gallery image definition purchase plan. This is used by marketplace images.
      type: object
    SharedGalleryImageVersionStorageProfile:
      type: object
      properties:
        osDiskImage:
          $ref: '#/components/schemas/SharedGalleryOSDiskImage'
        dataDiskImages:
          type: array
          items:
            $ref: '#/components/schemas/SharedGalleryDataDiskImage'
          x-ms-identifiers:
            - lun
          description: A list of data disk images.
      description: This is the storage profile of a Gallery Image Version.
    SharedGalleryOSDiskImage:
      description: This is the OS disk image.
      properties:
        diskSizeGB:
          readOnly: true
          type: integer
          format: int32
          description: This property indicates the size of the VHD to be created.
        hostCaching:
          type: string
          description: The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: SharedGalleryHostCaching
            modelAsString: true
      type: object
    SharedGalleryDataDiskImage:
      required:
        - lun
      description: This is the data disk image.
      properties:
        lun:
          type: integer
          format: int32
          description: This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine.
        diskSizeGB:
          readOnly: true
          type: integer
          format: int32
          description: This property indicates the size of the VHD to be created.
        hostCaching:
          type: string
          description: The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: SharedGalleryHostCaching
            modelAsString: true
      type: object
    SharedGalleryDiskImage:
      type: object
      properties:
        diskSizeGB:
          readOnly: true
          type: integer
          format: int32
          description: This property indicates the size of the VHD to be created.
        hostCaching:
          type: string
          description: The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: SharedGalleryHostCaching
            modelAsString: true
      description: This is the disk image base class.
    Architecture:
      type: string
      description: The architecture of the image. Applicable to OS disks only.
      enum:
        - x64
        - Arm64
      x-ms-enum:
        name: Architecture
        modelAsString: true
    PirCommunityGalleryResource:
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name
        location:
          readOnly: true
          type: string
          description: Resource location
        type:
          readOnly: true
          type: string
          description: Resource type
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommunityGalleryIdentifier'
      description: Base information about the community gallery resource in azure compute gallery.
      type: object
    CommunityGalleryArtifactTags:
      additionalProperties:
        type: string
      description: The artifact tags of a community gallery resource.
      properties: {}
      type: object
    CommunityGalleryDisclaimer:
      type: string
      properties:
        disclaimer:
          readOnly: true
          type: string
          description: Community gallery disclaimer
      description: The disclaimer for a community gallery resource.
    CommunityGalleryIdentifier:
      properties:
        uniqueId:
          type: string
          description: The unique id of this community gallery.
      description: The identifier information of community gallery.
      type: object
    CommunityGalleryMetadata:
      type: object
      properties:
        publisherUri:
          format: uri
          type: string
          description: The publisher URI of this community gallery.
        publisherContact:
          type: string
          description: The publisher email id of this community gallery.
        eula:
          type: string
          description: The end-user license agreement for this community gallery.
        publicNames:
          type: array
          items:
            type: string
          description: A list of public names the gallery has.
        privacyStatementUri:
          format: uri
          type: string
          description: The link for the privacy statement of this community gallery from the gallery publisher.
      required:
        - publisherContact
        - publicNames
      description: The metadata of community gallery.
    CommunityGallery:
      description: Specifies information about the Community Gallery that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommunityGalleryProperties'
        name:
          readOnly: true
          type: string
          description: Resource name
        location:
          readOnly: true
          type: string
          description: Resource location
        type:
          readOnly: true
          type: string
          description: Resource type
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommunityGalleryIdentifier'
      type: object
    CommunityGalleryProperties:
      type: object
      properties:
        disclaimer:
          $ref: '#/components/schemas/CommunityGalleryDisclaimer'
        artifactTags:
          $ref: '#/components/schemas/CommunityGalleryArtifactTags'
        communityMetadata:
          $ref: '#/components/schemas/CommunityGalleryMetadata'
      description: Describes the properties of a community gallery.
    CommunityGalleryImageList:
      type: object
      description: The List Community Gallery Images operation response.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CommunityGalleryImage'
          x-ms-identifiers: []
          description: A list of community gallery images.
        nextLink:
          type: string
          description: The URI to fetch the next page of community gallery images. Call ListNext() with this to fetch the next page of community gallery images.
      required:
        - value
    CommunityGalleryImage:
      description: Specifies information about the gallery image definition that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommunityGalleryImageProperties'
        name:
          readOnly: true
          type: string
          description: Resource name
        location:
          readOnly: true
          type: string
          description: Resource location
        type:
          readOnly: true
          type: string
          description: Resource type
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommunityGalleryIdentifier'
      type: object
    CommunityGalleryImageProperties:
      properties:
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        osState:
          type: string
          description: This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
          enum:
            - Generalized
            - Specialized
          x-ms-enum:
            name: OperatingSystemStateTypes
            modelAsString: false
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
        identifier:
          $ref: '#/components/schemas/CommunityGalleryImageIdentifier'
        recommended:
          $ref: '#/components/schemas/RecommendedMachineConfiguration'
        disallowed:
          $ref: '#/components/schemas/Disallowed'
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        features:
          type: array
          items:
            $ref: '#/components/schemas/GalleryImageFeature'
          x-ms-identifiers:
            - name
          description: A list of gallery image features.
        purchasePlan:
          $ref: '#/components/schemas/ImagePurchasePlan'
        architecture:
          $ref: '#/components/schemas/Architecture'
        privacyStatementUri:
          type: string
          description: Privacy statement URI for the current community gallery image.
        eula:
          type: string
          description: The end-user license agreement for the current community gallery image.
        disclaimer:
          $ref: '#/components/schemas/CommunityGalleryDisclaimer'
        artifactTags:
          $ref: '#/components/schemas/CommunityGalleryArtifactTags'
      required:
        - osType
        - osState
        - identifier
      description: Describes the properties of a gallery image definition.
      type: object
    CommunityGalleryImageVersionList:
      type: object
      description: The List Community Gallery Image versions operation response.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/CommunityGalleryImageVersion'
          x-ms-identifiers: []
          description: A list of community gallery image versions.
        nextLink:
          type: string
          description: The URI to fetch the next page of community gallery image versions. Call ListNext() with this to fetch the next page of community gallery image versions.
      required:
        - value
    CommunityGalleryImageVersion:
      description: Specifies information about the gallery image version that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommunityGalleryImageVersionProperties'
        name:
          readOnly: true
          type: string
          description: Resource name
        location:
          readOnly: true
          type: string
          description: Resource location
        type:
          readOnly: true
          type: string
          description: Resource type
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/CommunityGalleryIdentifier'
      type: object
    CommunityGalleryImageVersionProperties:
      properties:
        publishedDate:
          type: string
          format: date-time
          description: The published date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable.
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable.
        excludeFromLatest:
          type: boolean
          description: If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        storageProfile:
          $ref: '#/components/schemas/SharedGalleryImageVersionStorageProfile'
          description: Describes the storage profile of the image version.
        disclaimer:
          $ref: '#/components/schemas/CommunityGalleryDisclaimer'
        artifactTags:
          $ref: '#/components/schemas/CommunityGalleryArtifactTags'
      description: Describes the properties of a gallery image version.
      type: object
    CommunityGalleryImageIdentifier:
      properties:
        publisher:
          type: string
          description: The name of the gallery image definition publisher.
        offer:
          type: string
          description: The name of the gallery image definition offer.
        sku:
          type: string
          description: The name of the gallery image definition SKU.
      description: This is the community gallery image definition identifier.
      type: object
    AvailabilitySetProperties:
      properties:
        platformUpdateDomainCount:
          type: integer
          format: int32
          description: Update Domain count.
        platformFaultDomainCount:
          type: integer
          format: int32
          description: Fault Domain count.
        virtualMachines:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: A list of references to all virtual machines in the availability set.
        proximityPlacementGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the proximity placement group that the availability set should be assigned to. Minimum api-version: 2018-04-01.'
        statuses:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of a resource.
      type: object
    AvailabilitySetSkuType:
      type: string
      description: Specifies the sku of an Availability Set. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
      enum:
        - Classic
        - Aligned
      x-ms-enum:
        name: AvailabilitySetSkuTypes
        modelAsString: true
    AvailabilitySet:
      description: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to an availability set at creation time. An existing VM cannot be added to an availability set.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AvailabilitySetProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: Sku of the availability set, only name is required to be set. See AvailabilitySetSkuTypes for possible set of values. Use 'Aligned' for virtual machines with managed disks and 'Classic' for virtual machines with unmanaged disks. Default value is 'Classic'.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    AvailabilitySetUpdate:
      description: Specifies information about the availability set that the virtual machine should be assigned to. Only tags may be updated.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AvailabilitySetProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: Sku of the availability set
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    AvailabilitySetListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilitySet'
          description: The list of availability sets
        nextLink:
          type: string
          description: The URI to fetch the next page of AvailabilitySets. Call ListNext() with this URI to fetch the next page of AvailabilitySets.
      required:
        - value
      description: The List Availability Set operation response.
      type: object
    DisallowedConfiguration:
      properties:
        vmDiskType:
          type: string
          description: VM disk types which are disallowed.
          enum:
            - None
            - Unmanaged
          x-ms-enum:
            name: VmDiskTypes
            modelAsString: true
      description: Specifies the disallowed configuration for a virtual machine image.
      type: object
    VirtualMachineImageResource:
      required:
        - name
        - location
      description: Virtual machine image resource information.
      properties:
        name:
          type: string
          description: The name of the resource.
        location:
          type: string
          description: The supported Azure location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the Virtual Machine.
        id:
          type: string
          description: Resource Id
      type: object
    PurchasePlan:
      properties:
        name:
          type: string
          description: The plan ID.
        publisher:
          type: string
          description: The publisher ID.
        product:
          type: string
          description: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
        promotionCode:
          type: string
          description: The Offer Promotion Code.
      required:
        - publisher
        - name
        - product
      description: Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.
      type: object
    OSDiskImage:
      properties:
        operatingSystem:
          type: string
          description: The operating system of the osDiskImage.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
      required:
        - operatingSystem
      description: Contains the os disk image information.
      type: object
    DataDiskImage:
      properties:
        lun:
          readOnly: true
          type: integer
          format: int32
          description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
      description: Contains the data disk images information.
      type: object
    AutomaticOSUpgradeProperties:
      properties:
        automaticOSUpgradeSupported:
          type: boolean
          description: Specifies whether automatic OS upgrade is supported on the image.
      required:
        - automaticOSUpgradeSupported
      description: Describes automatic OS upgrade properties on the image.
      type: object
    ImageDeprecationStatus:
      type: object
      properties:
        imageState:
          type: string
          description: Describes the state of the image.
          enum:
            - Active
            - ScheduledForDeprecation
            - Deprecated
          x-ms-enum:
            name: ImageState
            modelAsString: true
        scheduledDeprecationTime:
          type: string
          format: date-time
          description: The time, in future, at which this image will be marked as deprecated. This scheduled time is chosen by the Publisher.
        alternativeOption:
          $ref: '#/components/schemas/AlternativeOption'
      description: Describes image deprecation status properties on the image.
    AlternativeOption:
      type: object
      properties:
        type:
          type: string
          description: Describes the type of the alternative option.
          enum:
            - None
            - Offer
            - Plan
          x-ms-enum:
            name: AlternativeType
            modelAsString: true
        value:
          type: string
          description: Indicates the alternative option value specified by the Publisher. This is the Offer name when the type is Offer or the Plan name when the type is Plan.
      description: Describes the alternative option specified by the Publisher for this image when this image is deprecated.
    VirtualMachineImageFeature:
      properties:
        name:
          type: string
          description: The name of the feature.
        value:
          type: string
          description: The corresponding value for the feature.
      description: Specifies additional capabilities supported by the image
      type: object
    VirtualMachineImageProperties:
      properties:
        plan:
          $ref: '#/components/schemas/PurchasePlan'
        osDiskImage:
          $ref: '#/components/schemas/OSDiskImage'
        dataDiskImages:
          type: array
          items:
            $ref: '#/components/schemas/DataDiskImage'
          x-ms-identifiers:
            - lun
        automaticOSUpgradeProperties:
          $ref: '#/components/schemas/AutomaticOSUpgradeProperties'
        hyperVGeneration:
          $ref: '#/components/schemas/HyperVGenerationType'
        disallowed:
          $ref: '#/components/schemas/DisallowedConfiguration'
          description: Specifies disallowed configuration for the VirtualMachine created from the image
        features:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineImageFeature'
          x-ms-identifiers:
            - name
        architecture:
          $ref: '#/components/schemas/ArchitectureType'
        imageDeprecationStatus:
          $ref: '#/components/schemas/ImageDeprecationStatus'
      description: Describes the properties of a Virtual Machine Image.
      type: object
    VirtualMachineImage:
      required:
        - name
        - location
      description: Describes a Virtual Machine Image.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineImageProperties'
        name:
          type: string
          description: The name of the resource.
        location:
          type: string
          description: The supported Azure location of the resource.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Specifies the tags that are assigned to the virtual machine. For more information about using tags, see [Using tags to organize your Azure resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the Virtual Machine.
      type: object
    VmImagesInEdgeZoneListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineImageResource'
          description: The list of VMImages in EdgeZone
        nextLink:
          type: string
          description: The URI to fetch the next page of VMImages in EdgeZone. Call ListNext() with this URI to fetch the next page of VmImages.
      description: The List VmImages in EdgeZone operation response.
    ArchitectureType:
      type: string
      description: Specifies the Architecture Type
      enum:
        - x64
        - Arm64
      x-ms-enum:
        name: ArchitectureTypes
        modelAsString: true
    VirtualMachineScaleSetVMExtension:
      description: Describes a VMSS VM Extension.
      x-ms-azure-resource: true
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: The location of the extension.
          x-ms-mutability:
            - read
            - create
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetVMExtensionUpdate:
      description: Describes a VMSS VM Extension.
      x-ms-azure-resource: true
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionUpdateProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetVMExtensionsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
          description: The list of VMSS VM extensions
      description: The List VMSS VM Extension operation response
      type: object
    VirtualMachineScaleSetHardwareProfile:
      type: object
      properties:
        vmSizeProperties:
          $ref: '#/components/schemas/VMSizeProperties'
          description: 'Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-11-01. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details.'
      description: Specifies the hardware settings for the virtual machine scale set.
    AutomaticRepairsPolicy:
      properties:
        enabled:
          type: boolean
          description: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is false.
        gracePeriod:
          type: string
          description: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time starts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should be specified in ISO 8601 format. The minimum allowed grace period is 10 minutes (PT10M), which is also the default value. The maximum allowed grace period is 90 minutes (PT90M).
        repairAction:
          type: string
          description: Type of repair action (replace, restart, reimage) that will be used for repairing unhealthy virtual machines in the scale set. Default value is replace.
          enum:
            - Replace
            - Restart
            - Reimage
          x-ms-enum:
            name: RepairAction
            modelAsString: true
      description: Specifies the configuration parameters for automatic repairs on the virtual machine scale set.
      type: object
    AutomaticOSUpgradePolicy:
      properties:
        enableAutomaticOSUpgrade:
          type: boolean
          description: Indicates whether OS upgrades should automatically be applied to scale set instances in a rolling fashion when a newer version of the OS image becomes available. Default value is false. If this is set to true for Windows based scale sets, [enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet) is automatically set to false and cannot be set to true.
        disableAutomaticRollback:
          type: boolean
          description: Whether OS image rollback feature should be disabled. Default value is false.
        useRollingUpgradePolicy:
          type: boolean
          description: Indicates whether rolling upgrade policy should be used during Auto OS Upgrade. Default value is false. Auto OS Upgrade will fallback to the default policy if no policy is defined on the VMSS.
        osRollingUpgradeDeferral:
          type: boolean
          description: Indicates whether Auto OS Upgrade should undergo deferral. Deferred OS upgrades will send advanced notifications on a per-VM basis that an OS upgrade from rolling upgrades is incoming, via the IMDS tag 'Platform.PendingOSUpgrade'. The upgrade then defers until the upgrade is approved via an ApproveRollingUpgrade call.
      description: The configuration parameters used for performing automatic OS upgrade.
      type: object
    UpgradePolicy:
      properties:
        mode:
          type: string
          description: Specifies the mode of an upgrade to virtual machines in the scale set.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.<br /><br /> **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
          enum:
            - Automatic
            - Manual
            - Rolling
          x-ms-enum:
            name: UpgradeMode
            modelAsString: false
        rollingUpgradePolicy:
          $ref: '#/components/schemas/RollingUpgradePolicy'
          description: The configuration parameters used while performing a rolling upgrade.
        automaticOSUpgradePolicy:
          $ref: '#/components/schemas/AutomaticOSUpgradePolicy'
          description: Configuration parameters used for performing automatic OS Upgrade.
      description: Describes an upgrade policy - automatic, manual, or rolling.
      type: object
    ResiliencyPolicy:
      type: object
      properties:
        resilientVMCreationPolicy:
          $ref: '#/components/schemas/ResilientVMCreationPolicy'
          description: The configuration parameters used while performing resilient VM creation.
        resilientVMDeletionPolicy:
          $ref: '#/components/schemas/ResilientVMDeletionPolicy'
          description: The configuration parameters used while performing resilient VM deletion.
      description: Describes an resiliency policy - resilientVMCreationPolicy and/or resilientVMDeletionPolicy.
    ResilientVMCreationPolicy:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies whether resilient VM creation should be enabled on the virtual machine scale set. The default value is false.
      description: The configuration parameters used while performing resilient VM creation.
    ResilientVMDeletionPolicy:
      type: object
      properties:
        enabled:
          type: boolean
          description: Specifies whether resilient VM deletion should be enabled on the virtual machine scale set. The default value is false.
      description: The configuration parameters used while performing resilient VM deletion.
    RollingUpgradePolicy:
      properties:
        maxBatchInstancePercent:
          type: integer
          format: int32
          minimum: 5
          maximum: 100
          description: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.
        maxUnhealthyInstancePercent:
          type: integer
          format: int32
          minimum: 5
          maximum: 100
          description: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%.
        maxUnhealthyUpgradedInstancePercent:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%.
        pauseTimeBetweenBatches:
          type: string
          description: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).
        enableCrossZoneUpgrade:
          type: boolean
          description: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size.
        prioritizeUnhealthyInstances:
          type: boolean
          description: Upgrade all unhealthy instances in a scale set before any healthy instances.
        rollbackFailedInstancesOnPolicyBreach:
          type: boolean
          description: Rollback failed instances to previous model if the Rolling Upgrade policy is violated.
        maxSurge:
          type: boolean
          description: Create new virtual machines to upgrade the scale set, rather than updating the existing virtual machines. Existing virtual machines will be deleted once the new virtual machines are created for each batch.
      description: The configuration parameters used while performing a rolling upgrade.
      type: object
    ScaleInPolicy:
      properties:
        rules:
          type: array
          items:
            type: string
            enum:
              - Default
              - OldestVM
              - NewestVM
            x-ms-enum:
              name: VirtualMachineScaleSetScaleInRules
              modelAsString: true
          description: 'The rules to be followed when scaling-in a virtual machine scale set. <br><br> Possible values are: <br><br> **Default** When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a zonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the virtual machines chosen for removal will be the newest ones that are not protected from scale-in. <br><br> **OldestVM** When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal. <br><br> **NewestVM** When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from scale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across zones. Within each zone, the newest virtual machines that are not protected will be chosen for removal. <br><br>'
        forceDeletion:
          type: boolean
          description: This property allows you to specify if virtual machines chosen for removal have to be force deleted when a virtual machine scale set is being scaled-in.(Feature in Preview)
      description: Describes a scale-in policy for a virtual machine scale set.
      type: object
    SpotRestorePolicy:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enables the Spot-Try-Restore feature where evicted VMSS SPOT instances will be tried to be restored opportunistically based on capacity availability and pricing constraints
        restoreTimeout:
          type: string
          description: Timeout value expressed as an ISO 8601 time duration after which the platform will not try to restore the VMSS SPOT instances
      description: Specifies the Spot-Try-Restore properties for the virtual machine scale set. With this property customer can enable or disable automatic restore of the evicted Spot VMSS VM instances opportunistically based on capacity availability and pricing constraint.
    PriorityMixPolicy:
      type: object
      properties:
        baseRegularPriorityCount:
          type: integer
          format: int32
          minimum: 0
          description: The base number of regular priority VMs that will be created in this scale set as it scales out.
        regularPriorityPercentageAboveBase:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          description: The percentage of VM instances, after the base regular priority count has been reached, that are expected to use regular priority.
      description: Specifies the target splits for Spot and Regular priority VMs within a scale set with flexible orchestration mode. With this property the customer is able to specify the base number of regular priority VMs created as the VMSS flex instance scales out and the split between Spot and Regular priority VMs after this base target has been reached.
    OrchestrationMode:
      type: string
      description: Specifies the orchestration mode for the virtual machine scale set.
      enum:
        - Uniform
        - Flexible
      x-ms-enum:
        name: OrchestrationMode
        modelAsString: true
    VirtualMachineScaleSetIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of virtual machine scale set identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id associated with the virtual machine scale set. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine scale set.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
          description: 'The list of user identities associated with the virtual machine scale set. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: Identity for the virtual machine scale set.
      type: object
    VirtualMachineScaleSetOSProfile:
      properties:
        computerNamePrefix:
          type: string
          description: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 15 characters long.
        adminUsername:
          type: string
          description: Specifies the name of the administrator account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br> **Disallowed values:** "administrator", "admin", "user", "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner", "root", "server", "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters
        adminPassword:
          type: string
          description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
          x-ms-secret: true
        customData:
          type: string
          description: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. For using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: Specifies Windows operating system settings on the virtual machine.
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
          description: Specifies set of certificates that should be installed onto the virtual machines in the scale set. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).
        allowExtensionOperations:
          type: boolean
          description: Specifies whether extension operations should be allowed on the virtual machine scale set. This may only be set to False when no extensions are present on the virtual machine scale set.
        requireGuestProvisionSignal:
          type: boolean
          description: Optional property which must either be set to True or omitted.
      description: Describes a virtual machine scale set OS profile.
      type: object
    VirtualMachineScaleSetUpdateOSProfile:
      properties:
        customData:
          type: string
          description: A base-64 encoded string of custom data.
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: The Windows Configuration of the OS profile.
        linuxConfiguration:
          $ref: '#/components/schemas/LinuxConfiguration'
          description: The Linux Configuration of the OS profile.
        secrets:
          type: array
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
          description: The List of certificates for addition to the VM.
      description: Describes a virtual machine scale set OS profile.
      type: object
    VirtualMachineScaleSetManagedDiskParameters:
      properties:
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed disk.
        securityProfile:
          $ref: '#/components/schemas/VMDiskSecurityProfile'
          description: Specifies the security profile for the managed disk.
      description: Describes the parameters of a ScaleSet managed disk.
      type: object
    VirtualMachineScaleSetOSDisk:
      properties:
        name:
          type: string
          description: The disk name.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: 'Specifies how the virtual machines in the scale set should be created. The only allowed value is: **FromImage.** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you also use the imageReference element described above. If you are using a marketplace image, you  also use the plan element previously described.'
        diffDiskSettings:
          $ref: '#/components/schemas/DiffDiskSettings'
          description: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: Specifies information about the unmanaged user image to base the scale set on.
        vhdContainers:
          type: array
          items:
            type: string
          description: Specifies the container urls that are used to store operating system disks for the scale set.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk.'
      required:
        - createOption
      description: Describes a virtual machine scale set operating system disk.
      type: object
    VirtualMachineScaleSetUpdateOSDisk:
      properties:
        caching:
          $ref: '#/components/schemas/Caching'
          description: The caching type.
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        diffDiskSettings:
          $ref: '#/components/schemas/DiffDiskSettings'
          description: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale set.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. <br><br> diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023
        image:
          $ref: '#/components/schemas/VirtualHardDisk'
          description: The Source User Image VirtualHardDisk. This VirtualHardDisk will be copied before using it to attach to the Virtual Machine. If SourceImage is provided, the destination VirtualHardDisk should not exist.
        vhdContainers:
          type: array
          items:
            type: string
          description: The list of virtual hard disk container uris.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only). <br><br> Possible values: <br><br> **Delete** If this value is used, the OS disk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The default value is set to **Delete**. For an Ephemeral OS Disk, the default value is set to **Delete**. User cannot change the delete option for Ephemeral OS Disk.'
      description: Describes virtual machine scale set operating system disk Update Object. This should be used for Updating VMSS OS Disk.
      type: object
    VirtualMachineScaleSetDataDisk:
      properties:
        name:
          type: string
          description: The disk name.
        lun:
          type: integer
          format: int32
          description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        caching:
          $ref: '#/components/schemas/Caching'
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**'
        writeAcceleratorEnabled:
          type: boolean
          description: Specifies whether writeAccelerator should be enabled or disabled on the disk.
        createOption:
          $ref: '#/components/schemas/CreateOption'
          description: The create option.
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property diskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023.
        managedDisk:
          description: The managed disk parameters.
          $ref: '#/components/schemas/VirtualMachineScaleSetManagedDiskParameters'
        diskIOPSReadWrite:
          type: integer
          format: int64
          description: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
        diskMBpsReadWrite:
          type: integer
          format: int64
          description: Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
        deleteOption:
          $ref: '#/components/schemas/DeleteOption'
          description: 'Specifies whether data disk should be deleted or detached upon VMSS Flex deletion (This feature is available for VMSS with Flexible OrchestrationMode only).<br><br> Possible values: <br><br> **Delete** If this value is used, the data disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If this value is used, the data disk is retained after VMSS Flex VM is deleted.<br><br> The default value is set to **Delete**.'
      required:
        - lun
        - createOption
      description: Describes a virtual machine scale set data disk.
      type: object
    VirtualMachineScaleSetStorageProfile:
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations.
        osDisk:
          $ref: '#/components/schemas/VirtualMachineScaleSetOSDisk'
          description: Specifies information about the operating system disk used by the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetDataDisk'
          x-ms-identifiers:
            - name
            - lun
          description: Specifies the parameters that are used to add data disks to the virtual machines in the scale set. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        diskControllerType:
          type: string
          items:
            $ref: '#/components/schemas/DiskControllerType'
            description: 'Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01'
      description: Describes a virtual machine scale set storage profile.
      type: object
    VirtualMachineScaleSetUpdateStorageProfile:
      properties:
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          description: The image reference.
        osDisk:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateOSDisk'
          description: The OS disk.
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetDataDisk'
          x-ms-identifiers:
            - name
            - lun
          description: The data disks.
        diskControllerType:
          type: string
          items:
            $ref: '#/components/schemas/DiskControllerType'
            description: 'Specifies the disk controller type configured for the virtual machines in the scale set. **Note:** You need to deallocate the virtual machines in the scale set before updating its disk controller type based on the upgrade mode configured for the scale set. Minimum api-version: 2022-08-01.'
      description: Describes a virtual machine scale set storage profile.
      type: object
    VirtualMachineScaleSetIPConfigurationProperties:
      properties:
        subnet:
          $ref: '#/components/schemas/ApiEntityReference'
          description: Specifies the identifier of the subnet.
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfiguration'
          description: The publicIPAddressConfiguration.
        privateIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersion
            modelAsString: true
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot use the same application gateway.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to application security group.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
        loadBalancerInboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to inbound Nat pools of the load balancers. A scale set can reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same basic sku load balancer.
      description: Describes a virtual machine scale set network profile's IP configuration properties.
      type: object
    VirtualMachineScaleSetUpdateIPConfigurationProperties:
      properties:
        subnet:
          $ref: '#/components/schemas/ApiEntityReference'
          description: The subnet.
        primary:
          type: boolean
          description: Specifies the primary IP Configuration in case the network interface has more than one IP Configuration.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdatePublicIPAddressConfiguration'
          description: The publicIPAddressConfiguration.
        privateIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersion
            modelAsString: true
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The application gateway backend address pools.
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to application security group.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The load balancer backend address pools.
        loadBalancerInboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: The load balancer inbound nat pools.
      description: Describes a virtual machine scale set network profile's IP configuration properties.
      type: object
    VirtualMachineScaleSetIPConfiguration:
      required:
        - name
      description: Describes a virtual machine scale set network profile's IP configuration.
      properties:
        name:
          type: string
          description: The IP configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetIPConfigurationProperties'
      type: object
    VirtualMachineScaleSetUpdateIPConfiguration:
      description: 'Describes a virtual machine scale set network profile''s IP configuration. NOTE: The subnet of a scale set may be modified as long as the original subnet and the new subnet are in the same virtual network'
      x-ms-azure-resource: true
      properties:
        name:
          type: string
          description: The IP configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateIPConfigurationProperties'
      type: object
    VirtualMachineScaleSetNetworkConfigurationProperties:
      properties:
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        disableTcpStateTracking:
          type: boolean
          description: Specifies whether the network interface is disabled for tcp state tracking.
        enableFpga:
          type: boolean
          description: Specifies whether the network interface is FPGA networking-enabled.
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The network security group.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationDnsSettings'
          description: The dns settings to be applied on the network interfaces.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetIPConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the IP configurations of the network interface.
        enableIPForwarding:
          type: boolean
          description: Whether IP forwarding enabled on this NIC.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        auxiliaryMode:
          type: string
          description: Specifies whether the Auxiliary mode is enabled for the Network Interface resource.
          enum:
            - None
            - AcceleratedConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
        auxiliarySku:
          type: string
          description: Specifies whether the Auxiliary sku is enabled for the Network Interface resource.
          enum:
            - None
            - A1
            - A2
            - A4
            - A8
          x-ms-enum:
            name: NetworkInterfaceAuxiliarySku
            modelAsString: true
      required:
        - ipConfigurations
      description: Describes a virtual machine scale set network profile's IP configuration.
      type: object
    VirtualMachineScaleSetUpdateNetworkConfigurationProperties:
      properties:
        primary:
          type: boolean
          description: Whether this is a primary NIC on a virtual machine.
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        disableTcpStateTracking:
          type: boolean
          description: Specifies whether the network interface is disabled for tcp state tracking.
        enableFpga:
          type: boolean
          description: Specifies whether the network interface is FPGA networking-enabled.
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The network security group.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationDnsSettings'
          description: The dns settings to be applied on the network interfaces.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetUpdateIPConfiguration'
          x-ms-identifiers:
            - name
          description: The virtual machine scale set IP Configuration.
        enableIPForwarding:
          type: boolean
          description: Whether IP forwarding enabled on this NIC.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        auxiliaryMode:
          type: string
          description: Specifies whether the Auxiliary mode is enabled for the Network Interface resource.
          enum:
            - None
            - AcceleratedConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
        auxiliarySku:
          type: string
          description: Specifies whether the Auxiliary sku is enabled for the Network Interface resource.
          enum:
            - None
            - A1
            - A2
            - A4
            - A8
          x-ms-enum:
            name: NetworkInterfaceAuxiliarySku
            modelAsString: true
      description: Describes a virtual machine scale set updatable network profile's IP configuration.Use this object for updating network profile's IP Configuration.
      type: object
    VirtualMachineScaleSetNetworkConfiguration:
      required:
        - name
      description: Describes a virtual machine scale set network profile's network configurations.
      properties:
        name:
          type: string
          description: The network configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfigurationProperties'
      type: object
    VirtualMachineScaleSetUpdateNetworkConfiguration:
      description: Describes a virtual machine scale set network profile's network configurations.
      x-ms-azure-resource: true
      properties:
        name:
          type: string
          description: The network configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateNetworkConfigurationProperties'
      type: object
    VirtualMachineScaleSetNetworkConfigurationDnsSettings:
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: List of DNS servers IP addresses
      description: Describes a virtual machines scale sets network configuration's DNS settings.
      type: object
    VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings:
      properties:
        domainNameLabel:
          type: string
          description: The Domain name label.The concatenation of the domain name label and vm index will be the domain name labels of the PublicIPAddress resources that will be created
        domainNameLabelScope:
          type: string
          description: The Domain name label scope.The concatenation of the hashed domain name label that generated according to the policy from domain name label scope and vm index will be the domain name labels of the PublicIPAddress resources that will be created
          enum:
            - TenantReuse
            - SubscriptionReuse
            - ResourceGroupReuse
            - NoReuse
          x-ms-enum:
            name: DomainNameLabelScopeTypes
            modelAsString: true
      required:
        - domainNameLabel
      description: Describes a virtual machines scale sets network configuration's DNS settings.
      type: object
    VirtualMachineScaleSetIpTag:
      properties:
        ipTagType:
          type: string
          description: 'IP tag type. Example: FirstPartyUsage.'
        tag:
          type: string
          description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
      description: Contains the IP tag associated with the public IP address.
      type: object
    VirtualMachineScaleSetPublicIPAddressConfiguration:
      required:
        - name
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      properties:
        name:
          type: string
          description: The publicIP address configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationProperties'
        sku:
          $ref: '#/components/schemas/PublicIPAddressSku'
      type: object
    VirtualMachineScaleSetUpdatePublicIPAddressConfiguration:
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      properties:
        name:
          type: string
          description: The publicIP address configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdatePublicIPAddressConfigurationProperties'
      type: object
    VirtualMachineScaleSetPublicIPAddressConfigurationProperties:
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings'
          description: The dns settings to be applied on the publicIP addresses .
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetIpTag'
          x-ms-identifiers: []
          description: The list of IP tags associated with the public IP address.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The PublicIPPrefix from which to allocate publicIP addresses.
        publicIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersion
            modelAsString: true
        deleteOption:
          type: string
          description: Specify what happens to the public IP when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      type: object
    VirtualMachineScaleSetUpdatePublicIPAddressConfigurationProperties:
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings'
          description: The dns settings to be applied on the publicIP addresses .
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The PublicIPPrefix from which to allocate publicIP addresses.
        deleteOption:
          type: string
          description: Specify what happens to the public IP when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
      description: Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration
      type: object
    VirtualMachineScaleSetNetworkProfile:
      properties:
        healthProbe:
          $ref: '#/components/schemas/ApiEntityReference'
          description: 'A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}''.'
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfiguration'
          x-ms-identifiers: []
          description: The list of network configurations.
        networkApiVersion:
          type: string
          description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'
          enum:
            - '2020-11-01'
          x-ms-enum:
            name: NetworkApiVersion
            modelAsString: true
      description: Describes a virtual machine scale set network profile.
      type: object
    VirtualMachineScaleSetUpdateNetworkProfile:
      properties:
        healthProbe:
          $ref: '#/components/schemas/ApiEntityReference'
          description: 'A reference to a load balancer probe used to determine the health of an instance in the virtual machine scale set. The reference will be in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}''.'
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetUpdateNetworkConfiguration'
          x-ms-identifiers:
            - name
          description: The list of network configurations.
        networkApiVersion:
          type: string
          description: specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set with orchestration mode 'Flexible'
          enum:
            - '2020-11-01'
          x-ms-enum:
            name: NetworkApiVersion
            modelAsString: true
      description: Describes a virtual machine scale set network profile.
      type: object
    VirtualMachineScaleSetExtensionProperties:
      properties:
        forceUpdateTag:
          type: string
          description: If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        provisionAfterExtensions:
          type: array
          items:
            type: string
          description: Collection of extension names after which this extension needs to be provisioned.
        suppressFailures:
          type: boolean
          description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: The extensions protected settings that are passed by reference, and consumed from key vault
      description: Describes the properties of a Virtual Machine Scale Set Extension.
      type: object
    VirtualMachineScaleSetExtension:
      description: Describes a Virtual Machine Scale Set Extension.
      properties:
        name:
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetExtensionUpdate:
      description: Describes a Virtual Machine Scale Set Extension.
      x-ms-azure-resource: true
      properties:
        name:
          readOnly: true
          type: string
          description: The name of the extension.
        type:
          readOnly: true
          type: string
          description: Resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
      type: object
    VirtualMachineScaleSetExtensionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
          description: The list of VM scale set extensions.
        nextLink:
          type: string
          description: The uri to fetch the next page of VM scale set extensions. Call ListNext() with this to fetch the next page of VM scale set extensions.
      required:
        - value
      description: The List VM scale set extension operation response.
      type: object
    VirtualMachineScaleSetExtensionProfile:
      properties:
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
          description: The virtual machine scale set child extension resources.
        extensionsTimeBudget:
          type: string
          description: 'Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01.'
      description: Describes a virtual machine scale set extension profile.
      type: object
    VirtualMachineScaleSetVMProfile:
      properties:
        osProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetOSProfile'
          description: Specifies the operating system settings for the virtual machines in the scale set.
        storageProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetStorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        networkProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetNetworkProfile'
          description: Specifies properties of the network interfaces of the virtual machines in the scale set.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: Specifies the Security related profile settings for the virtual machines in the scale set.
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
        extensionProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProfile'
          description: Specifies a collection of settings for extensions installed on virtual machines in the scale set.
        licenseType:
          type: string
          description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
        priority:
          $ref: '#/components/schemas/priority'
          description: 'Specifies the priority for the virtual machines in the scale set. Minimum api-version: 2017-10-30-preview.'
        evictionPolicy:
          $ref: '#/components/schemas/evictionPolicy'
          description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        billingProfile:
          $ref: '#/components/schemas/BillingProfile'
          description: 'Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01.'
        scheduledEventsProfile:
          $ref: '#/components/schemas/ScheduledEventsProfile'
          description: Specifies Scheduled Event related configurations.
        userData:
          type: string
          description: 'UserData for the virtual machines in the scale set, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01.'
        capacityReservation:
          $ref: '#/components/schemas/CapacityReservationProfile'
          description: 'Specifies the capacity reservation related details of a scale set. Minimum api-version: 2021-04-01.'
        applicationProfile:
          $ref: '#/components/schemas/ApplicationProfile'
          description: Specifies the gallery applications that should be made available to the VM/VMSS
        hardwareProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetHardwareProfile'
          description: 'Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01.'
        serviceArtifactReference:
          $ref: '#/components/schemas/ServiceArtifactReference'
          description: 'Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using ''latest'' image version. Minimum api-version: 2022-11-01'
        securityPostureReference:
          $ref: '#/components/schemas/SecurityPostureReference'
          description: 'Specifies the security posture to be used in the scale set. Minimum api-version: 2023-03-01'
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: Specifies the time in which this VM profile for the Virtual Machine Scale Set was created. Minimum API version for this property is 2024-03-01. This value will be added to VMSS Flex VM tags when creating/updating the VMSS VM Profile with minimum api-version 2024-03-01.
      description: Describes a virtual machine scale set virtual machine profile.
      type: object
    VirtualMachineScaleSetUpdateVMProfile:
      properties:
        osProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateOSProfile'
          description: The virtual machine scale set OS profile.
        storageProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateStorageProfile'
          description: The virtual machine scale set storage profile.
        networkProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateNetworkProfile'
          description: The virtual machine scale set network profile.
        securityPostureReference:
          $ref: '#/components/schemas/SecurityPostureReferenceUpdate'
          description: The virtual machine scale set security posture reference.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: The virtual machine scale set Security profile
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: The virtual machine scale set diagnostics profile.
        extensionProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetExtensionProfile'
          description: The virtual machine scale set extension profile.
        licenseType:
          type: string
          description: The license type, which is for bring your own license scenario.
        billingProfile:
          $ref: '#/components/schemas/BillingProfile'
          description: 'Specifies the billing related details of a Azure Spot VMSS. Minimum api-version: 2019-03-01.'
        scheduledEventsProfile:
          $ref: '#/components/schemas/ScheduledEventsProfile'
          description: Specifies Scheduled Event related configurations.
        userData:
          type: string
          description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01'
        hardwareProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetHardwareProfile'
          description: 'Specifies the hardware profile related details of a scale set. Minimum api-version: 2021-11-01.'
      description: Describes a virtual machine scale set virtual machine profile.
      type: object
    VirtualMachineScaleSetProperties:
      properties:
        upgradePolicy:
          $ref: '#/components/schemas/UpgradePolicy'
          description: The upgrade policy.
        scheduledEventsPolicy:
          $ref: '#/components/schemas/ScheduledEventsPolicy'
          description: The ScheduledEventsPolicy.
        automaticRepairsPolicy:
          $ref: '#/components/schemas/AutomaticRepairsPolicy'
          description: Policy for automatic repairs.
        virtualMachineProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProfile'
          description: The virtual machine profile.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        overprovision:
          type: boolean
          description: Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        doNotRunExtensionsOnOverprovisionedVMs:
          type: boolean
          description: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
        uniqueId:
          readOnly: true
          type: string
          description: Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
        singlePlacementGroup:
          type: boolean
          description: 'When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.'
        zoneBalance:
          type: boolean
          description: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage. zoneBalance property can only be set if the zones property of the scale set contains more than one zone. If there are no zones or only one zone specified, then zoneBalance property should not be set.
        platformFaultDomainCount:
          type: integer
          format: int32
          description: Fault Domain count for each placement group.
        proximityPlacementGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. Minimum api-version: 2018-04-01.'
        hostGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the dedicated host group that the virtual machine scale set resides in. Minimum api-version: 2020-06-01.'
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: 'Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.'
        scaleInPolicy:
          $ref: '#/components/schemas/ScaleInPolicy'
          description: Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set.
        orchestrationMode:
          $ref: '#/components/schemas/OrchestrationMode'
          description: Specifies the orchestration mode for the virtual machine scale set.
        spotRestorePolicy:
          $ref: '#/components/schemas/SpotRestorePolicy'
          description: Specifies the Spot Restore properties for the virtual machine scale set.
        priorityMixPolicy:
          $ref: '#/components/schemas/PriorityMixPolicy'
          description: Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance.
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Virtual Machine Scale Set resource was created. Minimum api-version: 2021-11-01.'
        constrainedMaximumCapacity:
          type: boolean
          description: Optional property which must either be set to True or omitted.
        resiliencyPolicy:
          $ref: '#/components/schemas/ResiliencyPolicy'
          description: Policy for Resiliency
      description: Describes the properties of a Virtual Machine Scale Set.
      type: object
    VirtualMachineScaleSetUpdateProperties:
      properties:
        upgradePolicy:
          $ref: '#/components/schemas/UpgradePolicy'
          description: The upgrade policy.
        automaticRepairsPolicy:
          $ref: '#/components/schemas/AutomaticRepairsPolicy'
          description: Policy for automatic repairs.
        virtualMachineProfile:
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateVMProfile'
          description: The virtual machine profile.
        overprovision:
          type: boolean
          description: Specifies whether the Virtual Machine Scale Set should be overprovisioned.
        doNotRunExtensionsOnOverprovisionedVMs:
          type: boolean
          description: When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
        singlePlacementGroup:
          type: boolean
          description: 'When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.'
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: 'Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual Machine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data disks with UltraSSD_LRS storage account type.'
        scaleInPolicy:
          $ref: '#/components/schemas/ScaleInPolicy'
          description: Specifies the policies applied when scaling in Virtual Machines in the Virtual Machine Scale Set.
        proximityPlacementGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the proximity placement group that the virtual machine scale set should be assigned to. <br><br>Minimum api-version: 2018-04-01.'
        priorityMixPolicy:
          $ref: '#/components/schemas/PriorityMixPolicy'
          description: Specifies the desired targets for mixing Spot and Regular priority VMs within the same VMSS Flex instance.
        spotRestorePolicy:
          $ref: '#/components/schemas/SpotRestorePolicy'
          description: Specifies the Spot Restore properties for the virtual machine scale set.
        resiliencyPolicy:
          $ref: '#/components/schemas/ResiliencyPolicy'
          description: Policy for Resiliency
      description: Describes the properties of a Virtual Machine Scale Set.
      type: object
    VirtualMachineScaleSet:
      description: Describes a Virtual Machine Scale Set.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The virtual machine scale set sku.
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetProperties'
        identity:
          $ref: '#/components/schemas/VirtualMachineScaleSetIdentity'
          description: The identity of the virtual machine scale set, if configured.
        zones:
          type: array
          items:
            type: string
          description: 'The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the Virtual Machine Scale Set.
        etag:
          readOnly: true
          type: string
          description: Etag is property returned in Create/Update/Get response of the VMSS, so that customer can supply it in the header to ensure optimistic updates
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineScaleSetVMReimageParameters:
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
      properties:
        forceUpdateOSDiskForEphemeral:
          type: boolean
          description: Parameter to force update ephemeral OS disk for a virtual machine scale set VM
        tempDisk:
          type: boolean
          description: 'Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage parameter is only supported for VM/VMSS with Ephemeral OS disk.'
        exactVersion:
          type: string
          description: Specifies in decimal number, the version the OS disk should be reimaged to. If exact version is not provided, the OS disk is reimaged to the existing version of OS Disk.
        osProfile:
          $ref: '#/components/schemas/OSProfileProvisioningData'
          description: Specifies information required for reimaging the non-ephemeral OS disk.
      type: object
    VirtualMachineScaleSetReimageParameters:
      description: Describes a Virtual Machine Scale Set VM Reimage Parameters.
      properties:
        instanceIds:
          type: array
          items:
            type: string
          description: The virtual machine scale set instance ids. Omitting the virtual machine scale set instance ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
        forceUpdateOSDiskForEphemeral:
          type: boolean
          description: Parameter to force update ephemeral OS disk for a virtual machine scale set VM
      type: object
    VirtualMachineScaleSetUpdate:
      description: Describes a Virtual Machine Scale Set.
      properties:
        sku:
          $ref: '#/components/schemas/Sku'
          description: The virtual machine scale set sku.
        plan:
          $ref: '#/components/schemas/Plan'
          description: The purchase plan when deploying a virtual machine scale set from VM Marketplace images.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetUpdateProperties'
        identity:
          $ref: '#/components/schemas/VirtualMachineScaleSetIdentity'
          description: The identity of the virtual machine scale set, if configured.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineScaleSetVMInstanceIDs:
      properties:
        instanceIds:
          type: array
          items:
            type: string
          description: The virtual machine scale set instance ids. Omitting the virtual machine scale set instance ids will result in the operation being performed on all virtual machines in the virtual machine scale set.
      description: Specifies a list of virtual machine instance IDs from the VM scale set.
      type: object
    VirtualMachineScaleSetVMInstanceRequiredIDs:
      properties:
        instanceIds:
          type: array
          items:
            type: string
          description: The virtual machine scale set instance ids.
      required:
        - instanceIds
      description: Specifies a list of virtual machine instance IDs from the VM scale set.
      type: object
    VirtualMachineStatusCodeCount:
      properties:
        code:
          readOnly: true
          type: string
          description: The instance view status code.
        count:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances having a particular status code.
      description: The status code and count of the virtual machine scale set instance view status summary.
      type: object
    VirtualMachineScaleSetInstanceViewStatusesSummary:
      properties:
        statusesSummary:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineStatusCodeCount'
          x-ms-identifiers: []
          description: The extensions information.
      description: Instance view statuses summary for virtual machines of a virtual machine scale set.
      type: object
    VirtualMachineScaleSetVMExtensionsSummary:
      properties:
        name:
          readOnly: true
          type: string
          description: The extension name.
        statusesSummary:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineStatusCodeCount'
          x-ms-identifiers: []
          description: The extensions information.
      description: Extensions summary for virtual machines of a virtual machine scale set.
      type: object
    OrchestrationServiceSummary:
      properties:
        serviceName:
          type: string
          readOnly: true
          description: The name of the service.
          enum:
            - AutomaticRepairs
          x-ms-enum:
            name: OrchestrationServiceNames
            modelAsString: true
        serviceState:
          type: string
          readOnly: true
          description: The current state of the service.
          enum:
            - NotRunning
            - Running
            - Suspended
          x-ms-enum:
            name: OrchestrationServiceState
            modelAsString: true
      description: Summary for an orchestration service of a virtual machine scale set.
      type: object
    VirtualMachineScaleSetInstanceView:
      properties:
        virtualMachine:
          $ref: '#/components/schemas/VirtualMachineScaleSetInstanceViewStatusesSummary'
          readOnly: true
          description: The instance view status summary for the virtual machine scale set.
        extensions:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetVMExtensionsSummary'
          x-ms-identifiers:
            - name
          description: The extensions information.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        orchestrationServices:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/OrchestrationServiceSummary'
          x-ms-identifiers:
            - serviceName
          description: The orchestration services information.
      description: The instance view of a virtual machine scale set.
      type: object
    VirtualMachineScaleSetListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSet'
          description: The list of virtual machine scale sets.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of VMSS.
      required:
        - value
      description: The List Virtual Machine operation response.
      type: object
    VirtualMachineScaleSetListWithLinkResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSet'
          description: The list of virtual machine scale sets.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Sets. Call ListNext() with this to fetch the next page of Virtual Machine Scale Sets.
      required:
        - value
      description: The List Virtual Machine operation response.
      type: object
    VirtualMachineScaleSetSkuCapacity:
      properties:
        minimum:
          readOnly: true
          type: integer
          format: int64
          description: The minimum capacity.
        maximum:
          readOnly: true
          type: integer
          format: int64
          description: The maximum capacity that can be set.
        defaultCapacity:
          readOnly: true
          type: integer
          format: int64
          description: The default capacity.
        scaleType:
          readOnly: true
          type: string
          description: The scale type applicable to the sku.
          enum:
            - Automatic
            - None
          x-ms-enum:
            name: VirtualMachineScaleSetSkuScaleType
            modelAsString: false
      description: Describes scaling information of a sku.
      type: object
    VirtualMachineScaleSetSku:
      properties:
        resourceType:
          readOnly: true
          type: string
          description: The type of resource the sku applies to.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: The Sku.
        capacity:
          $ref: '#/components/schemas/VirtualMachineScaleSetSkuCapacity'
          readOnly: true
          description: Specifies the number of virtual machines in the scale set.
      description: Describes an available virtual machine scale set sku.
      type: object
    VirtualMachineScaleSetListSkusResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetSku'
          x-ms-identifiers:
            - resourceType
            - sku/name
          description: The list of skus available for the virtual machine scale set.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Set Skus. Call ListNext() with this to fetch the next page of VMSS Skus.
      required:
        - value
      description: The Virtual Machine Scale Set List Skus operation response.
      type: object
    UpgradeOperationHistoryStatus:
      properties:
        code:
          type: string
          readOnly: true
          description: Code indicating the current status of the upgrade.
          enum:
            - RollingForward
            - Cancelled
            - Completed
            - Faulted
          x-ms-enum:
            name: UpgradeState
            modelAsString: false
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: Start time of the upgrade.
        endTime:
          readOnly: true
          type: string
          format: date-time
          description: End time of the upgrade.
      description: Information about the current running state of the overall upgrade.
      type: object
    UpgradeOperationHistoricalStatusInfoProperties:
      properties:
        runningStatus:
          $ref: '#/components/schemas/UpgradeOperationHistoryStatus'
          readOnly: true
          description: Information about the overall status of the upgrade operation.
        progress:
          $ref: '#/components/schemas/RollingUpgradeProgressInfo'
          readOnly: true
          description: Counts of the VMs in each state.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: Error Details for this upgrade if there are any.
        startedBy:
          readOnly: true
          type: string
          description: Invoker of the Upgrade Operation
          enum:
            - Unknown
            - User
            - Platform
          x-ms-enum:
            name: UpgradeOperationInvoker
            modelAsString: false
        targetImageReference:
          $ref: '#/components/schemas/ImageReference'
          readOnly: true
          description: Image Reference details
        rollbackInfo:
          $ref: '#/components/schemas/RollbackStatusInfo'
          readOnly: true
          description: Information about OS rollback if performed
      description: Describes each OS upgrade on the Virtual Machine Scale Set.
      type: object
    UpgradeOperationHistoricalStatusInfo:
      description: Virtual Machine Scale Set OS Upgrade History operation response.
      properties:
        properties:
          $ref: '#/components/schemas/UpgradeOperationHistoricalStatusInfoProperties'
          readOnly: true
          description: Information about the properties of the upgrade operation.
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          readOnly: true
          type: string
          description: Resource location
      type: object
    VirtualMachineScaleSetListOSUpgradeHistory:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/UpgradeOperationHistoricalStatusInfo'
          x-ms-identifiers:
            - type
            - location
          description: The list of OS upgrades performed on the virtual machine scale set.
        nextLink:
          type: string
          description: The uri to fetch the next page of OS Upgrade History. Call ListNext() with this to fetch the next page of history of upgrades.
      required:
        - value
      description: List of Virtual Machine Scale Set OS Upgrade History operation response.
      type: object
    VirtualMachineScaleSetVMProperties:
      properties:
        latestModelApplied:
          readOnly: true
          type: boolean
          description: Specifies whether the latest model has been applied to the virtual machine.
        vmId:
          readOnly: true
          type: string
          description: Azure VM unique ID.
        instanceView:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceView'
          readOnly: true
          description: The virtual machine instance view.
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfile'
          description: Specifies the hardware settings for the virtual machine.
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: 'Specifies additional capabilities enabled or disabled on the virtual machine in the scale set. For instance: whether the virtual machine has the capability to support attaching managed data disks with UltraSSD_LRS storage account type.'
        osProfile:
          $ref: '#/components/schemas/OSProfile'
          description: Specifies the operating system settings for the virtual machine.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: Specifies the Security related profile settings for the virtual machine.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: Specifies the network interfaces of the virtual machine.
        networkProfileConfiguration:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMNetworkProfileConfiguration'
          description: Specifies the network profile configuration of the virtual machine.
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
        availabilitySet:
          $ref: '#/components/schemas/SubResource'
          description: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. An existing VM cannot be added to an availability set.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        licenseType:
          type: string
          description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
        modelDefinitionApplied:
          readOnly: true
          type: string
          description: Specifies whether the model applied to the virtual machine is the model of the virtual machine scale set or the customized model for the virtual machine.
        protectionPolicy:
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProtectionPolicy'
          description: Specifies the protection policy of the virtual machine.
        userData:
          type: string
          description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. <br><br>Minimum api-version: 2021-03-01'
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Virtual Machine resource was created.<br><br>Minimum api-version: 2021-11-01.'
      description: Describes the properties of a virtual machine scale set virtual machine.
      type: object
    VirtualMachineScaleSetVM:
      description: Describes a virtual machine scale set virtual machine.
      properties:
        instanceId:
          readOnly: true
          type: string
          description: The virtual machine instance ID.
        sku:
          $ref: '#/components/schemas/Sku'
          readOnly: true
          description: The virtual machine SKU.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineScaleSetVMProperties'
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        resources:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtension'
          description: The virtual machine child extension resources.
        zones:
          readOnly: true
          type: array
          items:
            type: string
          description: The virtual machine zones.
        identity:
          $ref: '#/components/schemas/VirtualMachineIdentity'
          description: The identity of the virtual machine, if configured.
        etag:
          readOnly: true
          type: string
          description: Etag is property returned in Update/Get response of the VMSS VM, so that customer can supply it in the header to ensure optimistic updates.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineScaleSetVMInstanceView:
      properties:
        platformUpdateDomain:
          type: integer
          format: int32
          description: The Update Domain count.
        platformFaultDomain:
          type: integer
          format: int32
          description: The Fault Domain count.
        rdpThumbPrint:
          type: string
          description: The Remote desktop certificate thumbprint.
        vmAgent:
          $ref: '#/components/schemas/VirtualMachineAgentInstanceView'
          description: The VM Agent running on the virtual machine.
        maintenanceRedeployStatus:
          $ref: '#/components/schemas/MaintenanceRedeployStatus'
          description: The Maintenance Operation status on the virtual machine.
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskInstanceView'
          x-ms-identifiers:
            - name
          description: The disks information.
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtensionInstanceView'
          x-ms-identifiers:
            - name
            - type
          description: The extensions information.
        vmHealth:
          readOnly: true
          $ref: '#/components/schemas/VirtualMachineHealthStatus'
          description: The health status for the VM.
        bootDiagnostics:
          $ref: '#/components/schemas/BootDiagnosticsInstanceView'
          description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        assignedHost:
          type: string
          readOnly: true
          description: 'Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. Minimum api-version: 2020-06-01.'
        placementGroupId:
          type: string
          description: The placement group in which the VM is running. If the VM is deallocated it will not have a placementGroupId.
        computerName:
          type: string
          description: Specifies the host OS name of the virtual machine. <br><br> This name cannot be updated after the VM is created. <br><br> **Max-length (Windows):** 15 characters <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
        osName:
          type: string
          description: The Operating System running on the hybrid machine.
        osVersion:
          type: string
          description: The version of Operating System running on the hybrid machine.
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine [V1, V2]
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
      description: The instance view of a virtual machine scale set VM.
      type: object
    VirtualMachineScaleSetVMNetworkProfileConfiguration:
      properties:
        networkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetNetworkConfiguration'
          x-ms-identifiers:
            - name
          description: The list of network configurations.
      description: Describes a virtual machine scale set VM network profile.
      type: object
    VirtualMachineScaleSetVMProtectionPolicy:
      properties:
        protectFromScaleIn:
          type: boolean
          description: Indicates that the virtual machine scale set VM shouldn't be considered for deletion during a scale-in operation.
        protectFromScaleSetActions:
          type: boolean
          description: Indicates that model updates or actions (including scale-in) initiated on the virtual machine scale set should not be applied to the virtual machine scale set VM.
      description: The protection policy of a virtual machine scale set VM.
      type: object
    VirtualMachineScaleSetVMListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineScaleSetVM'
          description: The list of virtual machine scale sets VMs.
        nextLink:
          type: string
          description: The uri to fetch the next page of Virtual Machine Scale Set VMs. Call ListNext() with this to fetch the next page of VMSS VMs
      required:
        - value
      description: The List Virtual Machine Scale Set VMs operation response.
      type: object
    RollingUpgradeStatusInfo:
      description: The status of the latest virtual machine scale set rolling upgrade.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RollingUpgradeStatusInfoProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    RollingUpgradeStatusInfoProperties:
      properties:
        policy:
          readOnly: true
          $ref: '#/components/schemas/RollingUpgradePolicy'
          description: The rolling upgrade policies applied for this upgrade.
        runningStatus:
          readOnly: true
          $ref: '#/components/schemas/RollingUpgradeRunningStatus'
          description: Information about the current running state of the overall upgrade.
        progress:
          readOnly: true
          $ref: '#/components/schemas/RollingUpgradeProgressInfo'
          description: Information about the number of virtual machine instances in each upgrade state.
        error:
          readOnly: true
          $ref: '#/components/schemas/ApiError'
          description: Error details for this upgrade, if there are any.
      description: The status of the latest virtual machine scale set rolling upgrade.
      type: object
    RollingUpgradeRunningStatus:
      properties:
        code:
          type: string
          readOnly: true
          description: Code indicating the current status of the upgrade.
          enum:
            - RollingForward
            - Cancelled
            - Completed
            - Faulted
          x-ms-enum:
            name: RollingUpgradeStatusCode
            modelAsString: false
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: Start time of the upgrade.
        lastAction:
          type: string
          readOnly: true
          description: The last action performed on the rolling upgrade.
          enum:
            - Start
            - Cancel
          x-ms-enum:
            name: RollingUpgradeActionType
            modelAsString: false
        lastActionTime:
          readOnly: true
          type: string
          format: date-time
          description: Last action time of the upgrade.
      description: Information about the current running state of the overall upgrade.
      type: object
    RollingUpgradeProgressInfo:
      properties:
        successfulInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that have been successfully upgraded.
        failedInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that have failed to be upgraded successfully.
        inProgressInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that are currently being upgraded.
        pendingInstanceCount:
          readOnly: true
          type: integer
          format: int32
          description: The number of instances that have not yet begun to be upgraded.
      description: Information about the number of virtual machine instances in each upgrade state.
      type: object
    RecoveryWalkResponse:
      properties:
        walkPerformed:
          type: boolean
          readOnly: true
          description: Whether the recovery walk was performed
        nextPlatformUpdateDomain:
          type: integer
          readOnly: true
          description: The next update domain that needs to be walked. Null means walk spanning all update domains has been completed
      description: Response after calling a manual recovery walk
      type: object
    VMScaleSetConvertToSinglePlacementGroupInput:
      properties:
        activePlacementGroupId:
          type: string
          description: Id of the placement group in which you want future virtual machine instances to be placed. To query placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided, the platform will choose one with maximum number of virtual machine instances.
      type: object
    OrchestrationServiceStateInput:
      properties:
        serviceName:
          type: string
          description: The name of the service.
          enum:
            - AutomaticRepairs
          x-ms-enum:
            name: OrchestrationServiceNames
            modelAsString: true
        action:
          type: string
          description: The action to be performed.
          enum:
            - Resume
            - Suspend
          x-ms-enum:
            name: OrchestrationServiceStateAction
            modelAsString: true
      description: The input for OrchestrationServiceState
      required:
        - serviceName
        - action
      type: object
    ServiceArtifactReference:
      type: object
      properties:
        id:
          type: string
          description: The service artifact reference id in the form of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}
      description: 'Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using ''latest'' image version. Minimum api-version: 2022-11-01'
    SecurityPostureReference:
      type: object
      properties:
        id:
          type: string
          description: The security posture reference id in the form of /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|latest
        excludeExtensions:
          type: array
          items:
            type: string
          description: The list of virtual machine extension names to exclude when applying the security posture.
        isOverridable:
          type: boolean
          description: Whether the security posture can be overridden by the user.
      description: 'Specifies the security posture to be used in the scale set. Minimum api-version: 2023-03-01'
      required:
        - id
    SecurityPostureReferenceUpdate:
      type: object
      properties:
        id:
          type: string
          description: The security posture reference id in the form of /CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|latest
        excludeExtensions:
          type: array
          items:
            type: string
          description: The list of virtual machine extension names to exclude when applying the security posture.
        isOverridable:
          type: boolean
          description: Whether the security posture can be overridden by the user.
      description: 'Specifies the security posture to be used in the scale set. Minimum api-version: 2023-03-01'
    DiskRestorePoint:
      description: Properties of disk restore point
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DiskRestorePointProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
      type: object
    DiskRestorePointList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DiskRestorePoint'
          description: A list of disk restore points.
        nextLink:
          type: string
          description: The uri to fetch the next page of disk restore points. Call ListNext() with this to fetch the next page of disk restore points.
      required:
        - value
      description: The List Disk Restore Points operation response.
      type: object
    DiskRestorePointProperties:
      properties:
        timeCreated:
          type: string
          format: date-time
          description: The timestamp of restorePoint creation
          readOnly: true
        sourceResourceId:
          type: string
          description: arm id of source disk or source disk restore point.
          readOnly: true
        osType:
          type: string
          readOnly: true
          description: The Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        purchasePlan:
          $ref: '#/components/schemas/PurchasePlan'
          description: Purchase plan information for the the image from which the OS disk was created.
        supportedCapabilities:
          $ref: '#/components/schemas/SupportedCapabilities'
          description: List of supported capabilities for the image from which the OS disk was created.
        familyId:
          type: string
          description: id of the backing snapshot's MIS family
          readOnly: true
        sourceUniqueId:
          type: string
          description: unique incarnation id of the source disk
          readOnly: true
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
          readOnly: true
        supportsHibernation:
          type: boolean
          description: Indicates the OS on a disk supports hibernation.
        networkAccessPolicy:
          $ref: '#/components/schemas/NetworkAccessPolicy'
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
        diskAccessId:
          type: string
          description: ARM id of the DiskAccess resource for using private endpoints on disks.
        completionPercent:
          type: number
          description: Percentage complete for the background copy of disk restore point when source resource is from a different region.
        replicationState:
          type: string
          description: Replication state of disk restore point when source resource is from a different region.
          readOnly: true
        sourceResourceLocation:
          type: string
          description: Location of source disk or source disk restore point when source resource is from a different region.
          readOnly: true
        securityProfile:
          $ref: '#/components/schemas/DiskSecurityProfile'
          description: Contains the security related information for the resource.
      description: Properties of an incremental disk restore point
      type: object
    ProxyOnlyResource:
      description: The ProxyOnly Resource model definition.
      properties:
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
      type: object
    RetrieveBootDiagnosticsDataResult:
      properties:
        consoleScreenshotBlobUri:
          type: string
          readOnly: true
          description: The console screenshot blob URI
        serialConsoleLogBlobUri:
          type: string
          readOnly: true
          description: The serial console log blob URI.
      description: The SAS URIs of the console screenshot and serial log blobs.
      type: object
    VirtualMachineExtensionInstanceView:
      properties:
        name:
          type: string
          description: The virtual machine extension name.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        substatuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of a virtual machine extension.
      type: object
    VirtualMachineExtensionProperties:
      properties:
        forceUpdateTag:
          type: string
          description: How the extension handler should be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        instanceView:
          $ref: '#/components/schemas/VirtualMachineExtensionInstanceView'
          description: The virtual machine extension instance view.
        suppressFailures:
          type: boolean
          description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: The extensions protected settings that are passed by reference, and consumed from key vault
        provisionAfterExtensions:
          type: array
          items:
            type: string
          description: Collection of extension names after which this extension needs to be provisioned.
      description: Describes the properties of a Virtual Machine Extension.
      type: object
    VirtualMachineExtensionUpdateProperties:
      properties:
        forceUpdateTag:
          type: string
          description: How the extension handler should be forced to update even if the extension configuration has not changed.
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        suppressFailures:
          type: boolean
          description: Indicates whether failures stemming from the extension will be suppressed (Operational failures such as not connecting to the VM will not be suppressed regardless of this value). The default is false.
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/KeyVaultSecretReference'
          description: The extensions protected settings that are passed by reference, and consumed from key vault
      description: Describes the properties of a Virtual Machine Extension.
      type: object
    VirtualMachineExtension:
      description: Describes a Virtual Machine Extension.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionProperties'
        location:
          type: string
          description: Resource location
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineExtensionUpdate:
      description: Describes a Virtual Machine Extension.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineExtensionUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineExtensionsListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtension'
          description: The list of extensions
      description: The List Extension operation response
      type: object
    VirtualMachineSoftwarePatchProperties:
      properties:
        patchId:
          type: string
          readOnly: true
          description: A unique identifier for the patch.
        name:
          type: string
          readOnly: true
          description: The friendly name of the patch.
        version:
          type: string
          readOnly: true
          description: The version number of the patch. This property applies only to Linux patches.
        kbId:
          type: string
          readOnly: true
          description: The KBID of the patch. Only applies to Windows patches.
        classifications:
          type: array
          readOnly: true
          items:
            type: string
          description: The classification(s) of the patch as provided by the patch publisher.
        rebootBehavior:
          type: string
          readOnly: true
          description: Describes the reboot requirements of the patch.
          enum:
            - Unknown
            - NeverReboots
            - AlwaysRequiresReboot
            - CanRequestReboot
          x-ms-enum:
            name: VMGuestPatchRebootBehavior
            modelAsString: true
        activityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        publishedDate:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the repository published this patch.
        lastModifiedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp of the last update to this patch record.
        assessmentState:
          type: string
          readOnly: true
          description: Describes the availability of a given patch.
          enum:
            - Unknown
            - Available
          x-ms-enum:
            name: PatchAssessmentState
            modelAsString: true
      description: Describes the properties of a Virtual Machine software patch.
      type: object
    VirtualMachineAssessPatchesResult:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        assessmentActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        rebootPending:
          type: boolean
          readOnly: true
          description: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.
        criticalAndSecurityPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of critical or security patches that have been detected as available and not yet installed.
        otherPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches excluding critical and security.
        startDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        availablePatches:
          type: array
          readOnly: true
          items:
            x-ms-client-flatten: true
            $ref: '#/components/schemas/VirtualMachineSoftwarePatchProperties'
          x-ms-identifiers:
            - patchId
          description: The list of patches that have been detected as available for installation.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: Describes the properties of an AssessPatches result.
      type: object
    VirtualMachineInstallPatchesParameters:
      properties:
        maximumDuration:
          type: string
          description: Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)
        rebootSetting:
          type: string
          description: Defines when it is acceptable to reboot a VM during a software update operation.
          enum:
            - IfRequired
            - Never
            - Always
          x-ms-enum:
            name: VMGuestPatchRebootSetting
            modelAsString: true
        windowsParameters:
          $ref: '#/components/schemas/WindowsParameters'
          description: Input for InstallPatches on a Windows VM, as directly received by the API
        linuxParameters:
          $ref: '#/components/schemas/LinuxParameters'
          description: Input for InstallPatches on a Linux VM, as directly received by the API
      required:
        - rebootSetting
      description: Input for InstallPatches as directly received by the API
      type: object
    WindowsParameters:
      properties:
        classificationsToInclude:
          type: array
          description: The update classifications to select when installing patches for Windows.
          items:
            type: string
            enum:
              - Critical
              - Security
              - UpdateRollUp
              - FeaturePack
              - ServicePack
              - Definition
              - Tools
              - Updates
            x-ms-enum:
              name: VMGuestPatchClassification_Windows
              modelAsString: true
        kbNumbersToInclude:
          type: array
          description: Kbs to include in the patch operation
          items:
            type: string
        kbNumbersToExclude:
          type: array
          description: Kbs to exclude in the patch operation
          items:
            type: string
        excludeKbsRequiringReboot:
          type: boolean
          description: Filters out Kbs that don't have an InstallationRebootBehavior of 'NeverReboots' when this is set to true.
        maxPatchPublishDate:
          type: string
          format: date-time
          description: This is used to install patches that were published on or before this given max published date.
      description: Input for InstallPatches on a Windows VM, as directly received by the API
      type: object
    LinuxParameters:
      properties:
        classificationsToInclude:
          type: array
          description: The update classifications to select when installing patches for Linux.
          items:
            type: string
            enum:
              - Critical
              - Security
              - Other
            x-ms-enum:
              name: VMGuestPatchClassification_Linux
              modelAsString: true
        packageNameMasksToInclude:
          type: array
          description: 'packages to include in the patch operation. Format: packageName_packageVersion'
          items:
            type: string
        packageNameMasksToExclude:
          type: array
          description: 'packages to exclude in the patch operation. Format: packageName_packageVersion'
          items:
            type: string
        maintenanceRunId:
          type: string
          description: This is used as a maintenance run identifier for Auto VM Guest Patching in Linux.
      description: Input for InstallPatches on a Linux VM, as directly received by the API
      type: object
    VirtualMachineInstallPatchesResult:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Failed", "Succeeded", "Unknown" or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        installationActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        rebootStatus:
          type: string
          readOnly: true
          description: The reboot state of the VM following completion of the operation.
          enum:
            - Unknown
            - NotNeeded
            - Required
            - Started
            - Failed
            - Completed
          x-ms-enum:
            name: VMGuestPatchRebootStatus
            modelAsString: true
        maintenanceWindowExceeded:
          type: boolean
          readOnly: true
          description: Whether the operation ran out of time before it completed all its intended actions.
        excludedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were not installed due to the user blocking their installation.
        notSelectedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were detected as available for install, but did not meet the operation's criteria.
        pendingPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that were identified as meeting the installation criteria, but were not able to be installed. Typically this happens when maintenanceWindowExceeded == true.
        installedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches successfully installed.
        failedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of patches that could not be installed due to some issue. See errors for details.
        patches:
          type: array
          readOnly: true
          items:
            x-ms-client-flatten: true
            $ref: '#/components/schemas/PatchInstallationDetail'
          x-ms-identifiers:
            - patchId
          description: The patches that were installed during the operation.
        startDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: The result summary of an installation operation.
      type: object
    PatchInstallationDetail:
      properties:
        patchId:
          type: string
          readOnly: true
          description: A unique identifier for the patch.
        name:
          type: string
          readOnly: true
          description: The friendly name of the patch.
        version:
          type: string
          readOnly: true
          description: The version string of the package. It may conform to Semantic Versioning. Only applies to Linux.
        kbId:
          type: string
          readOnly: true
          description: The KBID of the patch. Only applies to Windows patches.
        classifications:
          type: array
          readOnly: true
          items:
            type: string
          description: The classification(s) of the patch as provided by the patch publisher.
        installationState:
          type: string
          readOnly: true
          description: The state of the patch after the installation operation completed.
          enum:
            - Unknown
            - Installed
            - Failed
            - Excluded
            - NotSelected
            - Pending
          x-ms-enum:
            name: PatchInstallationState
            modelAsString: true
      description: Information about a specific patch that was encountered during an installation action.
      type: object
    VirtualMachineReimageParameters:
      properties:
        tempDisk:
          type: boolean
          description: 'Specifies whether to reimage temp disk. Default value: false. Note: This temp disk reimage parameter is only supported for VM/VMSS with Ephemeral OS disk.'
        exactVersion:
          type: string
          description: Specifies in decimal number, the version the OS disk should be reimaged to. If exact version is not provided, the OS disk is reimaged to the existing version of OS Disk.
        osProfile:
          $ref: '#/components/schemas/OSProfileProvisioningData'
          description: Specifies information required for reimaging the non-ephemeral OS disk.
      description: 'Parameters for Reimaging Virtual Machine. NOTE: Virtual Machine OS disk will always be reimaged'
      type: object
    OSProfileProvisioningData:
      type: object
      properties:
        adminPassword:
          type: string
          description: Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)
          x-ms-secret: true
        customData:
          type: string
          description: 'Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property customData is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). If using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init).'
      description: Additional parameters for Reimaging Non-Ephemeral Virtual Machine.
    VirtualMachineCaptureParameters:
      properties:
        vhdPrefix:
          type: string
          description: The captured virtual hard disk's name prefix.
        destinationContainerName:
          type: string
          description: The destination container name.
        overwriteVhds:
          type: boolean
          description: Specifies whether to overwrite the destination virtual hard disk, in case of conflict.
      required:
        - vhdPrefix
        - destinationContainerName
        - overwriteVhds
      description: Capture Virtual Machine parameters.
      type: object
    VirtualMachineCaptureResult:
      description: Output of virtual machine capture operation.
      x-ms-azure-resource: true
      properties:
        $schema:
          readOnly: true
          type: string
          description: the schema of the captured virtual machine
        contentVersion:
          readOnly: true
          type: string
          description: the version of the content
        parameters:
          readOnly: true
          type: object
          description: parameters of the captured virtual machine
        resources:
          readOnly: true
          type: array
          items:
            type: object
            description: resource item
          x-ms-identifiers: []
          description: a list of resource items of the captured virtual machine
        id:
          type: string
          description: Resource Id
      type: object
    VirtualMachineIpTag:
      properties:
        ipTagType:
          type: string
          description: 'IP tag type. Example: FirstPartyUsage.'
        tag:
          type: string
          description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
      description: Contains the IP tag associated with the public IP address.
      type: object
    VirtualMachinePublicIPAddressDnsSettingsConfiguration:
      properties:
        domainNameLabel:
          type: string
          description: The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID.
        domainNameLabelScope:
          type: string
          description: The Domain name label scope of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the hashed domain name label with policy according to the domain name label scope and vm network profile unique ID.
          enum:
            - TenantReuse
            - SubscriptionReuse
            - ResourceGroupReuse
            - NoReuse
          x-ms-enum:
            name: DomainNameLabelScopeTypes
            modelAsString: true
      required:
        - domainNameLabel
      description: Describes a virtual machines network configuration's DNS settings.
      type: object
    VirtualMachinePublicIPAddressConfigurationProperties:
      properties:
        idleTimeoutInMinutes:
          type: integer
          format: int32
          description: The idle timeout of the public IP address.
        deleteOption:
          type: string
          description: Specify what happens to the public IP address when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachinePublicIPAddressDnsSettingsConfiguration'
          description: The dns settings to be applied on the publicIP addresses .
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineIpTag'
          x-ms-identifiers: []
          description: The list of IP tags associated with the public IP address.
        publicIPPrefix:
          $ref: '#/components/schemas/SubResource'
          description: The PublicIPPrefix from which to allocate publicIP addresses.
        publicIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersions
            modelAsString: true
        publicIPAllocationMethod:
          type: string
          description: Specify the public IP allocation type
          enum:
            - Dynamic
            - Static
          x-ms-enum:
            name: PublicIPAllocationMethod
            modelAsString: true
      description: Describes a virtual machines IP Configuration's PublicIPAddress configuration
      type: object
    VirtualMachinePublicIPAddressConfiguration:
      required:
        - name
      description: Describes a virtual machines IP Configuration's PublicIPAddress configuration
      properties:
        name:
          type: string
          description: The publicIP address configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachinePublicIPAddressConfigurationProperties'
        sku:
          $ref: '#/components/schemas/PublicIPAddressSku'
      type: object
    VirtualMachineNetworkInterfaceIPConfigurationProperties:
      properties:
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Specifies the identifier of the subnet.
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        publicIPAddressConfiguration:
          $ref: '#/components/schemas/VirtualMachinePublicIPAddressConfiguration'
          description: The publicIPAddressConfiguration.
        privateIPAddressVersion:
          type: string
          description: 'Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: ''IPv4'' and ''IPv6''.'
          enum:
            - IPv4
            - IPv6
          x-ms-enum:
            name: IPVersions
            modelAsString: true
        applicationSecurityGroups:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to application security group.
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer].
      description: Describes a virtual machine network interface IP configuration properties.
      type: object
    VirtualMachineNetworkInterfaceIPConfiguration:
      required:
        - name
      description: Describes a virtual machine network profile's IP configuration.
      properties:
        name:
          type: string
          description: The IP configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineNetworkInterfaceIPConfigurationProperties'
      type: object
    VirtualMachineNetworkInterfaceDnsSettingsConfiguration:
      properties:
        dnsServers:
          type: array
          items:
            type: string
          description: List of DNS servers IP addresses
      description: Describes a virtual machines network configuration's DNS settings.
      type: object
    VirtualMachineNetworkInterfaceConfigurationProperties:
      properties:
        primary:
          type: boolean
          description: Specifies the primary network interface in case the virtual machine has more than 1 network interface.
        deleteOption:
          type: string
          description: Specify what happens to the network interface when the VM is deleted
          enum:
            - Delete
            - Detach
          x-ms-enum:
            name: DeleteOptions
            modelAsString: true
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        disableTcpStateTracking:
          type: boolean
          description: Specifies whether the network interface is disabled for tcp state tracking.
        enableFpga:
          type: boolean
          description: Specifies whether the network interface is FPGA networking-enabled.
        enableIPForwarding:
          type: boolean
          description: Whether IP forwarding enabled on this NIC.
        networkSecurityGroup:
          $ref: '#/components/schemas/SubResource'
          description: The network security group.
        dnsSettings:
          $ref: '#/components/schemas/VirtualMachineNetworkInterfaceDnsSettingsConfiguration'
          description: The dns settings to be applied on the network interfaces.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineNetworkInterfaceIPConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the IP configurations of the network interface.
        dscpConfiguration:
          $ref: '#/components/schemas/SubResource'
        auxiliaryMode:
          type: string
          description: Specifies whether the Auxiliary mode is enabled for the Network Interface resource.
          enum:
            - None
            - AcceleratedConnections
            - Floating
          x-ms-enum:
            name: NetworkInterfaceAuxiliaryMode
            modelAsString: true
        auxiliarySku:
          type: string
          description: Specifies whether the Auxiliary sku is enabled for the Network Interface resource.
          enum:
            - None
            - A1
            - A2
            - A4
            - A8
          x-ms-enum:
            name: NetworkInterfaceAuxiliarySku
            modelAsString: true
      required:
        - ipConfigurations
      description: Describes a virtual machine network profile's IP configuration.
      type: object
    VirtualMachineNetworkInterfaceConfiguration:
      required:
        - name
      description: Describes a virtual machine network interface configurations.
      properties:
        name:
          type: string
          description: The network interface configuration name.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineNetworkInterfaceConfigurationProperties'
      type: object
    VirtualMachineExtensionHandlerInstanceView:
      properties:
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        status:
          $ref: '#/components/schemas/InstanceViewStatus'
          description: The extension handler status.
      description: The instance view of a virtual machine extension handler.
      type: object
    VirtualMachineAgentInstanceView:
      properties:
        vmAgentVersion:
          type: string
          description: The VM Agent full version.
        extensionHandlers:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtensionHandlerInstanceView'
          x-ms-identifiers: []
          description: The virtual machine extension handler instance view.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of the VM Agent running on the virtual machine.
      type: object
    VirtualMachineIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of virtual machine identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id associated with the virtual machine. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned, UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentities'
          description: 'The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: Identity for the virtual machine.
      type: object
    VirtualMachineInstanceView:
      properties:
        platformUpdateDomain:
          type: integer
          format: int32
          description: Specifies the update domain of the virtual machine.
        platformFaultDomain:
          type: integer
          format: int32
          description: Specifies the fault domain of the virtual machine.
        computerName:
          type: string
          description: The computer name assigned to the virtual machine.
        osName:
          type: string
          description: The Operating System running on the virtual machine.
        osVersion:
          type: string
          description: The version of Operating System running on the virtual machine.
        hyperVGeneration:
          type: string
          description: Specifies the HyperVGeneration Type associated with a resource
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGenerationType
            modelAsString: true
        rdpThumbPrint:
          type: string
          description: The Remote desktop certificate thumbprint.
        vmAgent:
          $ref: '#/components/schemas/VirtualMachineAgentInstanceView'
          description: The VM Agent running on the virtual machine.
        maintenanceRedeployStatus:
          $ref: '#/components/schemas/MaintenanceRedeployStatus'
          description: The Maintenance Operation status on the virtual machine.
        disks:
          type: array
          items:
            $ref: '#/components/schemas/DiskInstanceView'
          x-ms-identifiers:
            - name
          description: The virtual machine disk information.
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtensionInstanceView'
          x-ms-identifiers:
            - name
            - type
          description: The extensions information.
        vmHealth:
          readOnly: true
          $ref: '#/components/schemas/VirtualMachineHealthStatus'
          description: The health status for the VM.
        bootDiagnostics:
          $ref: '#/components/schemas/BootDiagnosticsInstanceView'
          description: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor.
        assignedHost:
          type: string
          readOnly: true
          description: 'Resource id of the dedicated host, on which the virtual machine is allocated through automatic placement, when the virtual machine is associated with a dedicated host group that has automatic placement enabled. Minimum api-version: 2020-06-01.'
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
        patchStatus:
          $ref: '#/components/schemas/VirtualMachinePatchStatus'
          description: '[Preview Feature] The status of virtual machine patch operations.'
        isVMInStandbyPool:
          type: boolean
          readOnly: true
          description: '[Preview Feature] Specifies whether the VM is currently in or out of the Standby Pool.'
      description: The instance view of a virtual machine.
      type: object
    VirtualMachineProperties:
      properties:
        hardwareProfile:
          $ref: '#/components/schemas/HardwareProfile'
          description: Specifies the hardware settings for the virtual machine.
        scheduledEventsPolicy:
          $ref: '#/components/schemas/ScheduledEventsPolicy'
          description: Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the virtual machine.
        storageProfile:
          $ref: '#/components/schemas/StorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilities'
          description: Specifies additional capabilities enabled or disabled on the virtual machine.
        osProfile:
          $ref: '#/components/schemas/OSProfile'
          description: Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned.
        networkProfile:
          $ref: '#/components/schemas/NetworkProfile'
          description: Specifies the network interfaces of the virtual machine.
        securityProfile:
          $ref: '#/components/schemas/SecurityProfile'
          description: Specifies the Security related profile settings for the virtual machine.
        diagnosticsProfile:
          $ref: '#/components/schemas/DiagnosticsProfile'
          description: 'Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.'
        availabilitySet:
          $ref: '#/components/schemas/SubResource'
          description: Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference.
        virtualMachineScaleSet:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api‐version: 2019‐03‐01.'
        proximityPlacementGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01.'
        priority:
          $ref: '#/components/schemas/priority'
          description: 'Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01'
        evictionPolicy:
          $ref: '#/components/schemas/evictionPolicy'
          description: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview.
        billingProfile:
          $ref: '#/components/schemas/BillingProfile'
          description: 'Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01.'
        host:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01.'
        hostGroup:
          $ref: '#/components/schemas/SubResource'
          description: 'Specifies information about the dedicated host group that the virtual machine resides in. **Note:** User cannot specify both host and hostGroup properties. Minimum api-version: 2020-06-01.'
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        instanceView:
          $ref: '#/components/schemas/VirtualMachineInstanceView'
          readOnly: true
          description: The virtual machine instance view.
        licenseType:
          type: string
          description: 'Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15'
        vmId:
          readOnly: true
          type: string
          description: Specifies the VM unique ID which is a 128-bits identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can be read using platform BIOS commands.
        extensionsTimeBudget:
          type: string
          description: 'Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01.'
        platformFaultDomain:
          type: integer
          format: int32
          description: 'Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the ''virtualMachineScaleSet'' property of this Virtual Machine is set. The Virtual Machine Scale Set that is referenced, must have ''platformFaultDomainCount'' greater than 1. This property cannot be updated once the Virtual Machine is created. Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01.'
        scheduledEventsProfile:
          $ref: '#/components/schemas/ScheduledEventsProfile'
          description: Specifies Scheduled Event related configurations.
        userData:
          type: string
          description: 'UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01.'
        capacityReservation:
          $ref: '#/components/schemas/CapacityReservationProfile'
          description: 'Specifies information about the capacity reservation that is used to allocate virtual machine. Minimum api-version: 2021-04-01.'
        applicationProfile:
          $ref: '#/components/schemas/ApplicationProfile'
          description: Specifies the gallery applications that should be made available to the VM/VMSS.
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Virtual Machine resource was created. Minimum api-version: 2021-11-01.'
      description: Describes the properties of a Virtual Machine.
      type: object
    VirtualMachine:
      description: Describes a Virtual Machine.
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineProperties'
        resources:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachineExtension'
          description: The virtual machine child extension resources.
        identity:
          $ref: '#/components/schemas/VirtualMachineIdentity'
          description: The identity of the virtual machine, if configured.
        zones:
          type: array
          items:
            type: string
          description: The virtual machine zones.
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the Virtual Machine.
        managedBy:
          readOnly: true
          type: string
          description: ManagedBy is set to Virtual Machine Scale Set(VMSS) flex ARM resourceID, if the VM is part of the VMSS. This property is used by platform for internal resource group delete optimization.
        etag:
          readOnly: true
          type: string
          description: Etag is property returned in Create/Update/Get response of the VM, so that customer can supply it in the header to ensure optimistic updates.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineUpdate:
      description: Describes a Virtual Machine Update.
      properties:
        plan:
          $ref: '#/components/schemas/Plan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VirtualMachineProperties'
        identity:
          $ref: '#/components/schemas/VirtualMachineIdentity'
          description: The identity of the virtual machine, if configured.
        zones:
          type: array
          items:
            type: string
          description: The virtual machine zones.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    VirtualMachineListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMachine'
          description: The list of virtual machines.
        nextLink:
          type: string
          description: The URI to fetch the next page of VMs. Call ListNext() with this URI to fetch the next page of Virtual Machines.
      required:
        - value
      description: The List Virtual Machine operation response.
      type: object
    VirtualMachineHealthStatus:
      properties:
        status:
          readOnly: true
          $ref: '#/components/schemas/InstanceViewStatus'
          description: The health status information for the VM.
      description: The health status of the VM.
      type: object
    VirtualMachinePatchStatus:
      properties:
        availablePatchSummary:
          $ref: '#/components/schemas/AvailablePatchSummary'
          description: The available patch summary of the latest assessment operation for the virtual machine.
        lastPatchInstallationSummary:
          $ref: '#/components/schemas/LastPatchInstallationSummary'
          description: The installation summary of the latest installation operation for the virtual machine.
        configurationStatuses:
          description: The enablement status of the specified patchMode
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
      description: The status of virtual machine patch operations.
      type: object
    AvailablePatchSummary:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        assessmentActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        rebootPending:
          type: boolean
          readOnly: true
          description: The overall reboot status of the VM. It will be true when partially installed patches require a reboot to complete installation but the reboot has not yet occurred.
        criticalAndSecurityPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of critical or security patches that have been detected as available and not yet installed.
        otherPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches excluding critical and security.
        startTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        lastModifiedTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: Describes the properties of an virtual machine instance view for available patch summary.
      type: object
    LastPatchInstallationSummary:
      properties:
        status:
          type: string
          readOnly: true
          description: The overall success or failure status of the operation. It remains "InProgress" until the operation completes. At that point it will become "Unknown", "Failed", "Succeeded", or "CompletedWithWarnings."
          enum:
            - Unknown
            - InProgress
            - Failed
            - Succeeded
            - CompletedWithWarnings
          x-ms-enum:
            name: PatchOperationStatus
            modelAsString: true
        installationActivityId:
          type: string
          readOnly: true
          description: The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
        maintenanceWindowExceeded:
          type: boolean
          readOnly: true
          description: Describes whether the operation ran out of time before it completed all its intended actions
        notSelectedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches but not going to be installed because it didn't match a classification or inclusion list entry.
        excludedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
        pendingPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The number of all available patches expected to be installed over the course of the patch installation operation.
        installedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The count of patches that successfully installed.
        failedPatchCount:
          type: integer
          readOnly: true
          format: int32
          description: The count of patches that failed installation.
        startTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        lastModifiedTime:
          type: string
          readOnly: true
          format: date-time
          description: The UTC timestamp when the operation began.
        error:
          $ref: '#/components/schemas/ApiError'
          readOnly: true
          description: The errors that were encountered during execution of the operation. The details array contains the list of them.
      description: Describes the properties of the last installed patch summary.
      type: object
    ImageOSDisk:
      required:
        - osType
        - osState
      description: Describes an Operating System disk.
      properties:
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk if creating a VM from a custom image. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        osState:
          type: string
          description: The OS State. For managed images, use Generalized.
          enum:
            - Generalized
            - Specialized
          x-ms-enum:
            name: OperatingSystemStateTypes
            modelAsString: false
            values:
              - value: Generalized
                description: Generalized image. Needs to be provisioned during deployment time.
              - value: Specialized
                description: Specialized image. Contains already provisioned OS Disk.
        snapshot:
          $ref: '#/components/schemas/SubResource'
          description: The snapshot.
        managedDisk:
          $ref: '#/components/schemas/SubResource'
          description: The managedDisk.
        blobUri:
          type: string
          description: The Virtual Hard Disk.
        caching:
          type: string
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: CachingTypes
            modelAsString: false
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB.
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed image disk.
      type: object
    ImageDataDisk:
      required:
        - lun
      description: Describes a data disk.
      properties:
        lun:
          type: integer
          format: int32
          description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
        snapshot:
          $ref: '#/components/schemas/SubResource'
          description: The snapshot.
        managedDisk:
          $ref: '#/components/schemas/SubResource'
          description: The managedDisk.
        blobUri:
          type: string
          description: The Virtual Hard Disk.
        caching:
          type: string
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: CachingTypes
            modelAsString: false
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB.
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed image disk.
      type: object
    ImageDisk:
      properties:
        snapshot:
          $ref: '#/components/schemas/SubResource'
          description: The snapshot.
        managedDisk:
          $ref: '#/components/schemas/SubResource'
          description: The managedDisk.
        blobUri:
          type: string
          description: The Virtual Hard Disk.
        caching:
          type: string
          description: 'Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The default values are: **None for Standard storage. ReadOnly for Premium storage.**'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          x-ms-enum:
            name: CachingTypes
            modelAsString: false
        diskSizeGB:
          type: integer
          format: int32
          description: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the disk in a virtual machine image. This value cannot be larger than 1023 GB.
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk.'
        diskEncryptionSet:
          $ref: '#/components/schemas/DiskEncryptionSetParameters'
          description: Specifies the customer managed disk encryption set resource id for the managed image disk.
      description: Describes a image disk.
      type: object
    ImageStorageProfile:
      properties:
        osDisk:
          $ref: '#/components/schemas/ImageOSDisk'
          description: Specifies information about the operating system disk used by the virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        dataDisks:
          type: array
          items:
            $ref: '#/components/schemas/ImageDataDisk'
          x-ms-identifiers:
            - lun
          description: Specifies the parameters that are used to add a data disk to a virtual machine. <br><br> For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).
        zoneResilient:
          type: boolean
          description: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
      description: Describes a storage profile.
      type: object
    ImageProperties:
      properties:
        sourceVirtualMachine:
          $ref: '#/components/schemas/SubResource'
          description: The source virtual machine from which Image is created.
        storageProfile:
          $ref: '#/components/schemas/ImageStorageProfile'
          description: Specifies the storage settings for the virtual machine disks.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state.
        hyperVGeneration:
          $ref: '#/components/schemas/HyperVGenerationType'
          description: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version 2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource like disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed resource.
      description: Describes the properties of an Image.
      type: object
    Image:
      description: The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ImageProperties'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location of the Image.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    ImageUpdate:
      description: The source user image virtual hard disk. Only tags may be updated.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ImageProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    ImageListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          description: The list of Images.
        nextLink:
          type: string
          description: The uri to fetch the next page of Images. Call ListNext() with this to fetch the next page of Images.
      required:
        - value
      description: The List Image operation response.
      type: object
    EncryptionSettingsCollection:
      properties:
        enabled:
          type: boolean
          description: Set this flag to true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the request object, the existing settings remain unchanged.
        encryptionSettings:
          type: array
          items:
            $ref: '#/components/schemas/EncryptionSettingsElement'
          x-ms-identifiers:
            - diskEncryptionKey/sourceVault/id
          description: A collection of encryption settings, one for each disk volume.
        encryptionSettingsVersion:
          type: string
          description: Describes what type of encryption is used for the disks. Once this field is set, it cannot be overwritten. '1.0' corresponds to Azure Disk Encryption with AAD app.'1.1' corresponds to Azure Disk Encryption.
      required:
        - enabled
      description: Encryption settings for disk or snapshot
      type: object
    EncryptionSettingsElement:
      properties:
        diskEncryptionKey:
          $ref: '#/components/schemas/KeyVaultAndSecretReference'
          description: Key Vault Secret Url and vault id of the disk encryption key
        keyEncryptionKey:
          $ref: '#/components/schemas/KeyVaultAndKeyReference'
          description: Key Vault Key Url and vault id of the key encryption key. KeyEncryptionKey is optional and when provided is used to unwrap the disk encryption key.
      description: Encryption settings for one disk volume.
      type: object
    KeyVaultAndSecretReference:
      properties:
        sourceVault:
          $ref: '#/components/schemas/SourceVault'
          description: Resource id of the KeyVault containing the key or secret
        secretUrl:
          type: string
          description: Url pointing to a key or secret in KeyVault
      required:
        - secretUrl
        - sourceVault
      description: 'Key Vault Secret Url and vault id of the encryption key '
      type: object
    KeyVaultAndKeyReference:
      properties:
        sourceVault:
          $ref: '#/components/schemas/SourceVault'
          description: Resource id of the KeyVault containing the key or secret
        keyUrl:
          type: string
          description: Url pointing to a key or secret in KeyVault
      required:
        - keyUrl
        - sourceVault
      description: Key Vault Key Url and vault id of KeK, KeK is optional and when provided is used to unwrap the encryptionKey
      type: object
    SourceVault:
      properties:
        id:
          type: string
          description: Resource Id
      description: The vault id is an Azure Resource Manager Resource id in the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
      type: object
    EncryptionType:
      type: string
      description: The type of key used to encrypt the data of the disk.
      enum:
        - EncryptionAtRestWithPlatformKey
        - EncryptionAtRestWithCustomerKey
        - EncryptionAtRestWithPlatformAndCustomerKeys
      x-ms-enum:
        name: EncryptionType
        modelAsString: true
        values:
          - value: EncryptionAtRestWithPlatformKey
            description: Disk is encrypted at rest with Platform managed key. It is the default encryption type. This is not a valid encryption type for disk encryption sets.
          - value: EncryptionAtRestWithCustomerKey
            description: Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer.
          - value: EncryptionAtRestWithPlatformAndCustomerKeys
            description: Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed.
    Encryption:
      properties:
        diskEncryptionSetId:
          type: string
          description: ResourceId of the disk encryption set to use for enabling encryption at rest.
        type:
          $ref: '#/components/schemas/EncryptionType'
      description: Encryption at rest settings for disk or snapshot
      type: object
    NetworkAccessPolicy:
      type: string
      description: Policy for accessing the disk via network.
      enum:
        - AllowAll
        - AllowPrivate
        - DenyAll
      x-ms-enum:
        name: NetworkAccessPolicy
        modelAsString: true
        values:
          - value: AllowAll
            description: The disk can be exported or uploaded to from any network.
          - value: AllowPrivate
            description: The disk can be exported or uploaded to using a DiskAccess resource's private endpoints.
          - value: DenyAll
            description: The disk cannot be exported.
    PublicNetworkAccess:
      type: string
      description: Policy for controlling export on the disk.
      enum:
        - Enabled
        - Disabled
      x-ms-enum:
        name: PublicNetworkAccess
        modelAsString: true
        values:
          - value: Enabled
            description: You can generate a SAS URI to access the underlying data of the disk publicly on the internet when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate.
          - value: Disabled
            description: You cannot access the underlying data of the disk publicly on the internet even when NetworkAccessPolicy is set to AllowAll. You can access the data via the SAS URI only from your trusted Azure VNET when NetworkAccessPolicy is set to AllowPrivate.
    DiskState:
      type: string
      description: This enumerates the possible state of the disk.
      readOnly: true
      enum:
        - Unattached
        - Attached
        - Reserved
        - Frozen
        - ActiveSAS
        - ActiveSASFrozen
        - ReadyToUpload
        - ActiveUpload
      x-ms-enum:
        name: DiskState
        modelAsString: true
        values:
          - value: Unattached
            description: The disk is not being used and can be attached to a VM.
          - value: Attached
            description: The disk is currently attached to a running VM.
          - value: Reserved
            description: The disk is attached to a stopped-deallocated VM.
          - value: Frozen
            description: The disk is attached to a VM which is in hibernated state.
          - value: ActiveSAS
            description: The disk currently has an Active SAS Uri associated with it.
          - value: ActiveSASFrozen
            description: The disk is attached to a VM in hibernated state and has an active SAS URI associated with it.
          - value: ReadyToUpload
            description: A disk is ready to be created by upload by requesting a write token.
          - value: ActiveUpload
            description: A disk is created for upload and a write token has been issued for uploading to it.
    CreationData:
      properties:
        createOption:
          type: string
          enum:
            - Empty
            - Attach
            - FromImage
            - Import
            - Copy
            - Restore
            - Upload
            - CopyStart
            - ImportSecure
            - UploadPreparedSecure
            - CopyFromSanSnapshot
          x-ms-enum:
            name: DiskCreateOption
            modelAsString: true
            values:
              - value: Empty
                description: Create an empty data disk of a size given by diskSizeGB.
              - value: Attach
                description: Disk will be attached to a VM.
              - value: FromImage
                description: Create a new disk from a platform image specified by the given imageReference or galleryImageReference.
              - value: Import
                description: Create a disk by importing from a blob specified by a sourceUri in a storage account specified by storageAccountId.
              - value: Copy
                description: Create a new disk or snapshot by copying from a disk or snapshot specified by the given sourceResourceId.
              - value: Restore
                description: Create a new disk by copying from a backup recovery point.
              - value: Upload
                description: Create a new disk by obtaining a write token and using it to directly upload the contents of the disk.
              - value: CopyStart
                description: Create a new disk by using a deep copy process, where the resource creation is considered complete only after all data has been copied from the source.
              - value: ImportSecure
                description: Similar to Import create option. Create a new Trusted Launch VM or Confidential VM supported disk by importing additional blob for VM guest state specified by securityDataUri in storage account specified by storageAccountId
              - value: UploadPreparedSecure
                description: Similar to Upload create option. Create a new Trusted Launch VM or Confidential VM supported disk and upload using write token in both disk and VM guest state
              - value: CopyFromSanSnapshot
                description: Create a new disk by exporting from elastic san volume snapshot
          description: This enumerates the possible sources of a disk's creation.
        storageAccountId:
          type: string
          description: Required if createOption is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk.
        imageReference:
          $ref: '#/components/schemas/ImageDiskReference'
          description: Disk source information for PIR or user images.
        galleryImageReference:
          $ref: '#/components/schemas/ImageDiskReference'
          description: Required if creating from a Gallery Image. The id/sharedGalleryImageId/communityGalleryImageId of the ImageDiskReference will be the ARM id of the shared galley image version from which to create a disk.
        sourceUri:
          type: string
          description: If createOption is Import, this is the URI of a blob to be imported into a managed disk.
        sourceResourceId:
          type: string
          description: If createOption is Copy, this is the ARM id of the source snapshot or disk.
        sourceUniqueId:
          readOnly: true
          type: string
          description: If this field is set, this is the unique id identifying the source of this resource.
        uploadSizeBytes:
          type: integer
          format: int64
          description: If createOption is Upload, this is the size of the contents of the upload including the VHD footer. This value should be between 20972032 (20 MiB + 512 bytes for the VHD footer) and 35183298347520 bytes (32 TiB + 512 bytes for the VHD footer).
        logicalSectorSize:
          type: integer
          format: int32
          description: Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096. 4096 is the default.
        securityDataUri:
          type: string
          description: If createOption is ImportSecure, this is the URI of a blob to be imported into VM guest state.
        performancePlus:
          type: boolean
          description: Set this flag to true to get a boost on the performance target of the disk deployed, see here on the respective performance target. This flag can only be set on disk creation time and cannot be disabled after enabled.
        elasticSanResourceId:
          type: string
          description: Required if createOption is CopyFromSanSnapshot. This is the ARM id of the source elastic san volume snapshot.
        provisionedBandwidthCopySpeed:
          type: string
          description: If this field is set on a snapshot and createOption is CopyStart, the snapshot will be copied at a quicker speed.
          enum:
            - None
            - Enhanced
          x-ms-enum:
            name: ProvisionedBandwidthCopyOption
            modelAsString: true
      required:
        - createOption
      description: Data used when creating a disk.
      type: object
    ImageDiskReference:
      properties:
        id:
          type: string
          description: A relative uri containing either a Platform Image Repository, user image, or Azure Compute Gallery image reference.
        sharedGalleryImageId:
          type: string
          description: A relative uri containing a direct shared Azure Compute Gallery image reference.
        communityGalleryImageId:
          type: string
          description: A relative uri containing a community Azure Compute Gallery image reference.
        lun:
          type: integer
          format: int32
          description: If the disk is created from an image's data disk, this is an index that indicates which of the data disks in the image to use. For OS disks, this field is null.
      description: The source image used for creating the disk.
      type: object
    CopyCompletionError:
      type: object
      properties:
        errorCode:
          type: string
          description: Indicates the error code if the background copy of a resource created via the CopyStart operation fails.
          enum:
            - CopySourceNotFound
          x-ms-enum:
            name: CopyCompletionErrorReason
            modelAsString: true
            values:
              - value: CopySourceNotFound
                description: Indicates that the source snapshot was deleted while the background copy of the resource created via CopyStart operation was in progress.
        errorMessage:
          type: string
          description: Indicates the error message if the background copy of a resource created via the CopyStart operation fails.
      required:
        - errorCode
        - errorMessage
      description: Indicates the error details if the background copy of a resource created via the CopyStart operation fails.
    SupportedCapabilities:
      type: object
      properties:
        diskControllerTypes:
          type: string
          description: The disk controllers that an OS disk supports. If set it can be SCSI or SCSI, NVME or NVME, SCSI.
        acceleratedNetwork:
          type: boolean
          description: True if the image from which the OS disk is created supports accelerated networking.
        architecture:
          type: string
          description: CPU architecture supported by an OS disk.
          enum:
            - x64
            - Arm64
          x-ms-enum:
            name: Architecture
            modelAsString: true
      description: List of supported capabilities persisted on the disk resource for VM use.
    DiskSecurityType:
      type: string
      description: Specifies the SecurityType of the VM. Applicable for OS disks only.
      enum:
        - TrustedLaunch
        - ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey
        - ConfidentialVM_DiskEncryptedWithPlatformKey
        - ConfidentialVM_DiskEncryptedWithCustomerKey
        - ConfidentialVM_NonPersistedTPM
      x-ms-enum:
        name: DiskSecurityTypes
        modelAsString: true
        values:
          - value: TrustedLaunch
            description: Trusted Launch provides security features such as secure boot and virtual Trusted Platform Module (vTPM)
          - value: ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey
            description: Indicates Confidential VM disk with only VM guest state encrypted
          - value: ConfidentialVM_DiskEncryptedWithPlatformKey
            description: Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a platform managed key
          - value: ConfidentialVM_DiskEncryptedWithCustomerKey
            description: Indicates Confidential VM disk with both OS disk and VM guest state encrypted with a customer managed key
          - value: ConfidentialVM_NonPersistedTPM
            description: Indicates Confidential VM disk with a ephemeral vTPM. vTPM state is not persisted across VM reboots.
    DiskSecurityProfile:
      properties:
        securityType:
          $ref: '#/components/schemas/DiskSecurityType'
        secureVMDiskEncryptionSetId:
          type: string
          description: ResourceId of the disk encryption set associated to Confidential VM supported disk encrypted with customer managed key
      description: Contains the security related information for the resource.
      type: object
    GrantAccessData:
      properties:
        access:
          type: string
          enum:
            - None
            - Read
            - Write
          x-ms-enum:
            name: AccessLevel
            modelAsString: true
        durationInSeconds:
          type: integer
          format: int32
          description: Time duration in seconds until the SAS access expires.
        getSecureVMGuestStateSAS:
          type: boolean
          description: Set this flag to true to get additional SAS for VM guest state
        fileFormat:
          type: string
          description: Used to specify the file format when making request for SAS on a VHDX file format snapshot
          enum:
            - VHD
            - VHDX
          x-ms-enum:
            name: FileFormat
            modelAsString: true
            values:
              - value: VHD
                description: A VHD file is a disk image file in the Virtual Hard Disk file format.
              - value: VHDX
                description: A VHDX file is a disk image file in the Virtual Hard Disk v2 file format.
      required:
        - access
        - durationInSeconds
      description: Data used for requesting a SAS.
      type: object
    AccessUri:
      properties:
        accessSAS:
          readOnly: true
          type: string
          description: A SAS uri for accessing a disk.
        securityDataAccessSAS:
          readOnly: true
          type: string
          description: A SAS uri for accessing a VM guest state.
      description: A disk access SAS uri.
      type: object
    DataAccessAuthMode:
      type: string
      description: Additional authentication requirements when exporting or uploading to a disk or snapshot.
      enum:
        - AzureActiveDirectory
        - None
      x-ms-enum:
        name: DataAccessAuthMode
        modelAsString: true
        values:
          - value: AzureActiveDirectory
            description: When export/upload URL is used, the system checks if the user has an identity in Azure Active Directory and has necessary permissions to export/upload the data. Please refer to aka.ms/DisksAzureADAuth.
          - value: None
            description: No additional authentication would be performed when accessing export/upload URL.
    Snapshot:
      description: Snapshot resource.
      properties:
        managedBy:
          readOnly: true
          type: string
          description: Unused. Always Null.
        sku:
          $ref: '#/components/schemas/SnapshotSku'
        extendedLocation:
          $ref: '#/components/schemas/ExtendedLocation'
          description: The extended location where the snapshot will be created. Extended location cannot be changed.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SnapshotProperties'
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    SnapshotUpdate:
      description: Snapshot update resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SnapshotUpdateProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
        sku:
          $ref: '#/components/schemas/SnapshotSku'
      type: object
    SnapshotList:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Snapshot'
          description: A list of snapshots.
        nextLink:
          type: string
          description: The uri to fetch the next page of snapshots. Call ListNext() with this to fetch the next page of snapshots.
      required:
        - value
      description: The List Snapshots operation response.
      type: object
    SnapshotSku:
      properties:
        name:
          type: string
          enum:
            - Standard_LRS
            - Premium_LRS
            - Standard_ZRS
          x-ms-enum:
            name: SnapshotStorageAccountTypes
            modelAsString: true
            values:
              - value: Standard_LRS
                description: Standard HDD locally redundant storage
              - value: Premium_LRS
                description: Premium SSD locally redundant storage
              - value: Standard_ZRS
                description: Standard zone redundant storage
          description: The sku name.
        tier:
          type: string
          readOnly: true
          description: The sku tier.
      description: The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS. This is an optional parameter for incremental snapshot and the default behavior is the SKU will be set to the same sku as the previous snapshot
      type: object
    SnapshotProperties:
      properties:
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: The time when the snapshot was created.
        osType:
          type: string
          description: The Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        purchasePlan:
          $ref: '#/components/schemas/PurchasePlan'
          description: Purchase plan information for the image from which the source disk for the snapshot was originally created.
        supportedCapabilities:
          $ref: '#/components/schemas/SupportedCapabilities'
          description: List of supported capabilities for the image from which the source disk from the snapshot was originally created.
        creationData:
          $ref: '#/components/schemas/CreationData'
          description: Disk source information. CreationData information cannot be changed after the disk has been created.
        diskSizeGB:
          type: integer
          format: int32
          description: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
        diskSizeBytes:
          type: integer
          format: int64
          readOnly: true
          description: The size of the disk in bytes. This field is read only.
        diskState:
          $ref: '#/components/schemas/DiskState'
          description: The state of the snapshot.
        uniqueId:
          type: string
          readOnly: true
          description: Unique Guid identifying the resource.
        encryptionSettingsCollection:
          $ref: '#/components/schemas/EncryptionSettingsCollection'
          description: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
        provisioningState:
          readOnly: true
          type: string
          description: The disk provisioning state.
        incremental:
          type: boolean
          description: Whether a snapshot is incremental. Incremental snapshots on the same disk occupy less space than full snapshots and can be diffed.
        incrementalSnapshotFamilyId:
          type: string
          readOnly: true
          description: Incremental snapshots for a disk share an incremental snapshot family id. The Get Page Range Diff API can only be called on incremental snapshots with the same family id.
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
        networkAccessPolicy:
          $ref: '#/components/schemas/NetworkAccessPolicy'
        diskAccessId:
          type: string
          description: ARM id of the DiskAccess resource for using private endpoints on disks.
        securityProfile:
          $ref: '#/components/schemas/DiskSecurityProfile'
          description: Contains the security related information for the resource.
        supportsHibernation:
          type: boolean
          description: Indicates the OS on a snapshot supports hibernation.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
        completionPercent:
          type: number
          description: Percentage complete for the background copy when a resource is created via the CopyStart operation.
        copyCompletionError:
          $ref: '#/components/schemas/CopyCompletionError'
          description: Indicates the error details if the background copy of a resource created via the CopyStart operation fails.
        dataAccessAuthMode:
          $ref: '#/components/schemas/DataAccessAuthMode'
      required:
        - creationData
      description: Snapshot resource properties.
      type: object
    SnapshotUpdateProperties:
      properties:
        osType:
          type: string
          description: the Operating System type.
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        diskSizeGB:
          type: integer
          format: int32
          description: If creationData.createOption is Empty, this field is mandatory and it indicates the size of the disk to create. If this field is present for updates or creation with other options, it indicates a resize. Resizes are only allowed if the disk is not attached to a running VM, and can only increase the disk's size.
        encryptionSettingsCollection:
          $ref: '#/components/schemas/EncryptionSettingsCollection'
          description: Encryption settings collection used be Azure Disk Encryption, can contain multiple encryption settings per disk or snapshot.
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: Encryption property can be used to encrypt data at rest with customer managed keys or platform managed keys.
        networkAccessPolicy:
          $ref: '#/components/schemas/NetworkAccessPolicy'
        diskAccessId:
          type: string
          description: ARM id of the DiskAccess resource for using private endpoints on disks.
        supportsHibernation:
          type: boolean
          description: Indicates the OS on a snapshot supports hibernation.
        publicNetworkAccess:
          $ref: '#/components/schemas/PublicNetworkAccess'
        dataAccessAuthMode:
          $ref: '#/components/schemas/DataAccessAuthMode'
        supportedCapabilities:
          $ref: '#/components/schemas/SupportedCapabilities'
          description: List of supported capabilities for the image from which the OS disk was created.
      description: Snapshot resource update properties.
      type: object
    DedicatedHostGroupInstanceView:
      properties:
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/DedicatedHostInstanceViewWithName'
          x-ms-identifiers:
            - name
          description: List of instance view of the dedicated hosts under the dedicated host group.
      type: object
    DedicatedHostGroupProperties:
      properties:
        platformFaultDomainCount:
          type: integer
          format: int32
          minimum: 1
          description: Number of fault domains that the host group can span.
        hosts:
          type: array
          items:
            $ref: '#/components/schemas/SubResourceReadOnly'
          readOnly: true
          description: A list of references to all dedicated hosts in the dedicated host group.
        instanceView:
          $ref: '#/components/schemas/DedicatedHostGroupInstanceView'
          readOnly: true
          description: The dedicated host group instance view, which has the list of instance view of the dedicated hosts under the dedicated host group.
        supportAutomaticPlacement:
          type: boolean
          description: 'Specifies whether virtual machines or virtual machine scale sets can be placed automatically on the dedicated host group. Automatic placement means resources are allocated on dedicated hosts, that are chosen by Azure, under the dedicated host group. The value is defaulted to ''false'' when not provided. Minimum api-version: 2020-06-01.'
        additionalCapabilities:
          type: object
          properties:
            ultraSSDEnabled:
              type: boolean
              description: 'The flag that enables or disables a capability to have UltraSSD Enabled Virtual Machines on Dedicated Hosts of the Dedicated Host Group. For the Virtual Machines to be UltraSSD Enabled, UltraSSDEnabled flag for the resource needs to be set true as well. The value is defaulted to ''false'' when not provided. Please refer to https://docs.microsoft.com/en-us/azure/virtual-machines/disks-enable-ultra-ssd for more details on Ultra SSD feature. **Note:** The ultraSSDEnabled setting can only be enabled for Host Groups that are created as zonal. Minimum api-version: 2022-03-01.'
          description: 'Enables or disables a capability on the dedicated host group. Minimum api-version: 2022-03-01.'
      required:
        - platformFaultDomainCount
      description: Dedicated Host Group Properties.
      type: object
    DedicatedHostGroup:
      description: Specifies information about the dedicated host group that the dedicated hosts should be assigned to. Currently, a dedicated host can only be added to a dedicated host group at creation time. An existing dedicated host cannot be added to another dedicated host group.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DedicatedHostGroupProperties'
        zones:
          type: array
          items:
            type: string
          description: Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    DedicatedHostGroupUpdate:
      description: Specifies information about the dedicated host group that the dedicated host should be assigned to. Only tags may be updated.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DedicatedHostGroupProperties'
        zones:
          type: array
          items:
            type: string
          description: Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    DedicatedHostGroupListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DedicatedHostGroup'
          description: The list of dedicated host groups
        nextLink:
          type: string
          description: The URI to fetch the next page of Dedicated Host Groups. Call ListNext() with this URI to fetch the next page of Dedicated Host Groups.
      required:
        - value
      description: The List Dedicated Host Group with resource group response.
      type: object
    DedicatedHostLicenseType:
      type: string
      description: 'Specifies the software license type that will be applied to the VMs deployed on the dedicated host. Possible values are: **None,** **Windows_Server_Hybrid,** **Windows_Server_Perpetual.** The default value is: **None.**'
      enum:
        - None
        - Windows_Server_Hybrid
        - Windows_Server_Perpetual
      x-ms-enum:
        name: DedicatedHostLicenseTypes
        modelAsString: false
    DedicatedHostAllocatableVM:
      properties:
        vmSize:
          type: string
          description: VM size in terms of which the unutilized capacity is represented.
        count:
          type: number
          format: double
          description: Maximum number of VMs of size vmSize that can fit in the dedicated host's remaining capacity.
      description: Represents the dedicated host unutilized capacity in terms of a specific VM size.
      type: object
    DedicatedHostAvailableCapacity:
      properties:
        allocatableVMs:
          type: array
          items:
            $ref: '#/components/schemas/DedicatedHostAllocatableVM'
          x-ms-identifiers: []
          description: The unutilized capacity of the dedicated host represented in terms of each VM size that is allowed to be deployed to the dedicated host.
      description: Dedicated host unutilized capacity.
      type: object
    DedicatedHostInstanceView:
      properties:
        assetId:
          readOnly: true
          type: string
          description: Specifies the unique id of the dedicated physical machine on which the dedicated host resides.
        availableCapacity:
          $ref: '#/components/schemas/DedicatedHostAvailableCapacity'
          description: Unutilized capacity of the dedicated host.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      description: The instance view of a dedicated host.
      type: object
    DedicatedHostInstanceViewWithName:
      description: The instance view of a dedicated host that includes the name of the dedicated host. It is used for the response to the instance view of a dedicated host group.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the dedicated host.
        assetId:
          readOnly: true
          type: string
          description: Specifies the unique id of the dedicated physical machine on which the dedicated host resides.
        availableCapacity:
          $ref: '#/components/schemas/DedicatedHostAvailableCapacity'
          description: Unutilized capacity of the dedicated host.
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/InstanceViewStatus'
          x-ms-identifiers: []
          description: The resource status information.
      type: object
    DedicatedHostProperties:
      properties:
        platformFaultDomain:
          type: integer
          format: int32
          minimum: 0
          description: Fault domain of the dedicated host within a dedicated host group.
        autoReplaceOnFailure:
          type: boolean
          description: Specifies whether the dedicated host should be replaced automatically in case of a failure. The value is defaulted to 'true' when not provided.
        hostId:
          readOnly: true
          type: string
          description: A unique id generated and assigned to the dedicated host by the platform. Does not change throughout the lifetime of the host.
        virtualMachines:
          type: array
          items:
            $ref: '#/components/schemas/SubResourceReadOnly'
          readOnly: true
          description: A list of references to all virtual machines in the Dedicated Host.
        licenseType:
          $ref: '#/components/schemas/DedicatedHostLicenseType'
          description: 'Specifies the software license type that will be applied to the VMs deployed on the dedicated host. Possible values are: **None,** **Windows_Server_Hybrid,** **Windows_Server_Perpetual.** The default value is: **None.**'
        provisioningTime:
          readOnly: true
          type: string
          format: date-time
          description: The date when the host was first provisioned.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        instanceView:
          $ref: '#/components/schemas/DedicatedHostInstanceView'
          readOnly: true
          description: The dedicated host instance view.
        timeCreated:
          readOnly: true
          type: string
          format: date-time
          description: 'Specifies the time at which the Dedicated Host resource was created. Minimum api-version: 2021-11-01.'
      description: Properties of the dedicated host.
      type: object
    DedicatedHost:
      required:
        - sku
      description: Specifies information about the Dedicated host.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DedicatedHostProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: SKU of the dedicated host for Hardware Generation and VM family. Only name is required to be set. List Microsoft.Compute SKUs for a list of possible values.
        id:
          readOnly: true
          type: string
          description: Resource Id
        name:
          readOnly: true
          type: string
          description: Resource name
        type:
          readOnly: true
          type: string
          description: Resource type
        location:
          type: string
          description: Resource location
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    DedicatedHostUpdate:
      description: Specifies information about the dedicated host. Only tags, autoReplaceOnFailure and licenseType may be updated.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DedicatedHostProperties'
        sku:
          $ref: '#/components/schemas/Sku'
          description: '[List all available dedicated host sizes for resizing] (https://docs.microsoft.com/rest/api/compute/dedicated-hosts/listavailablesizes). Resizing can be only used to scale up DedicatedHost. Only name is required to be set. '
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags
      type: object
    DedicatedHostListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DedicatedHost'
          description: The list of dedicated hosts
        nextLink:
          type: string
          description: The URI to fetch the next page of dedicated hosts. Call ListNext() with this URI to fetch the next page of dedicated hosts.
      required:
        - value
      description: The list dedicated host operation response.
      type: object
    DedicatedHostSizeListResult:
      type: object
      properties:
        value:
          type: array
          items:
            type: string
          x-ms-identifiers:
            - name
          description: The list of dedicated host sizes.
      description: The List Dedicated Host sizes operation response.
    PirResource:
      description: The Resource model definition.
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name
        location:
          readOnly: true
          type: string
          description: Resource location
      type: object
    PirSharedGalleryResource:
      description: Base information about the shared gallery resource in pir.
      properties:
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedGalleryIdentifier'
        name:
          readOnly: true
          type: string
          description: Resource name
        location:
          readOnly: true
          type: string
          description: Resource location
      type: object
    SharedGalleryArtifactTags:
      additionalProperties:
        type: string
      description: The artifact tags of a shared gallery resource.
      properties: {}
      type: object
    SharedGalleryIdentifier:
      properties:
        uniqueId:
          type: string
          description: The unique id of this shared gallery.
      description: The identifier information of shared gallery.
      type: object
    SharedGalleryList:
      description: The List Shared Galleries operation response.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SharedGallery'
          x-ms-identifiers:
            - name
          description: A list of shared galleries.
        nextLink:
          type: string
          description: The uri to fetch the next page of shared galleries. Call ListNext() with this to fetch the next page of shared galleries.
      required:
        - value
      type: object
    SharedGallery:
      description: Specifies information about the Shared Gallery that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedGalleryProperties'
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedGalleryIdentifier'
      type: object
    SharedGalleryProperties:
      type: object
      properties:
        artifactTags:
          readOnly: true
          $ref: '#/components/schemas/SharedGalleryArtifactTags'
      description: Specifies the properties of a shared gallery
    SharedGalleryImageList:
      description: The List Shared Gallery Images operation response.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SharedGalleryImage'
          x-ms-identifiers: []
          description: A list of shared gallery images.
        nextLink:
          type: string
          description: The uri to fetch the next page of shared gallery images. Call ListNext() with this to fetch the next page of shared gallery images.
      required:
        - value
      type: object
    SharedGalleryImage:
      description: Specifies information about the gallery image definition that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedGalleryImageProperties'
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedGalleryIdentifier'
      type: object
    SharedGalleryImageProperties:
      properties:
        osType:
          type: string
          description: 'This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. Possible values are: **Windows,** **Linux.**'
          enum:
            - Windows
            - Linux
          x-ms-enum:
            name: OperatingSystemTypes
            modelAsString: false
        osState:
          type: string
          description: This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'.
          enum:
            - Generalized
            - Specialized
          x-ms-enum:
            name: OperatingSystemStateTypes
            modelAsString: false
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image definition. This property can be used for decommissioning purposes. This property is updatable.
        identifier:
          $ref: '#/components/schemas/GalleryImageIdentifier'
        recommended:
          $ref: '#/components/schemas/RecommendedMachineConfiguration'
        disallowed:
          $ref: '#/components/schemas/Disallowed'
        hyperVGeneration:
          type: string
          description: The hypervisor generation of the Virtual Machine. Applicable to OS disks only.
          enum:
            - V1
            - V2
          x-ms-enum:
            name: HyperVGeneration
            modelAsString: true
        features:
          type: array
          items:
            $ref: '#/components/schemas/GalleryImageFeature'
          x-ms-identifiers:
            - name
          description: A list of gallery image features.
        purchasePlan:
          $ref: '#/components/schemas/ImagePurchasePlan'
        architecture:
          $ref: '#/components/schemas/Architecture'
        privacyStatementUri:
          type: string
          description: Privacy statement uri for the current community gallery image.
        eula:
          type: string
          description: End-user license agreement for the current community gallery image.
        artifactTags:
          $ref: '#/components/schemas/SharedGalleryArtifactTags'
      required:
        - osType
        - osState
        - identifier
      description: Describes the properties of a gallery image definition.
      type: object
    SharedGalleryImageVersionList:
      description: The List Shared Gallery Image versions operation response.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/SharedGalleryImageVersion'
          x-ms-identifiers: []
          description: A list of shared gallery images versions.
        nextLink:
          type: string
          description: The uri to fetch the next page of shared gallery image versions. Call ListNext() with this to fetch the next page of shared gallery image versions.
      required:
        - value
      type: object
    SharedGalleryImageVersion:
      description: Specifies information about the gallery image version that you want to create or update.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedGalleryImageVersionProperties'
        identifier:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SharedGalleryIdentifier'
      type: object
    SharedGalleryImageVersionProperties:
      properties:
        publishedDate:
          type: string
          format: date-time
          description: The published date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable.
        endOfLifeDate:
          type: string
          format: date-time
          description: The end of life date of the gallery image version Definition. This property can be used for decommissioning purposes. This property is updatable.
        excludeFromLatest:
          type: boolean
          description: If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
        storageProfile:
          $ref: '#/components/schemas/SharedGalleryImageVersionStorageProfile'
          description: Describes the storage profile of the image version.
        artifactTags:
          $ref: '#/components/schemas/SharedGalleryArtifactTags'
      description: Describes the properties of a gallery image version.
      type: object
    InstanceSku:
      description: The role instance SKU.
      type: object
      properties:
        name:
          description: The sku name.
          type: string
          readOnly: true
        tier:
          description: The tier of the cloud service role instance.
          type: string
          readOnly: true
    RoleInstanceNetworkProfile:
      description: Describes the network profile for the role instance.
      type: object
      properties:
        networkInterfaces:
          description: Specifies the list of resource Ids for the network interfaces associated with the role instance.
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          readOnly: true
    ResourceInstanceViewStatus:
      description: Instance view status.
      type: object
      properties:
        code:
          description: The status code.
          type: string
          readOnly: true
        displayStatus:
          description: The short localizable label for the status.
          type: string
          readOnly: true
        message:
          description: The detailed status message, including for alerts and error messages.
          type: string
          readOnly: true
        time:
          format: date-time
          description: The time of the status.
          type: string
          readOnly: true
        level:
          description: The level code.
          enum:
            - Info
            - Warning
            - Error
          type: string
          x-ms-enum:
            name: StatusLevelTypes
            modelAsString: false
    RoleInstanceInstanceView:
      description: The instance view of the role instance.
      type: object
      properties:
        platformUpdateDomain:
          format: int32
          description: The Update Domain.
          type: integer
          readOnly: true
        platformFaultDomain:
          format: int32
          description: The Fault Domain.
          type: integer
          readOnly: true
        privateId:
          description: 'Specifies a unique identifier generated internally for the cloud service associated with this role instance. <br /><br /> NOTE: If you are using Azure Diagnostics extension, this property can be used as ''DeploymentId'' for querying details.'
          type: string
          readOnly: true
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/ResourceInstanceViewStatus'
          x-ms-identifiers: []
          readOnly: true
    RoleInstanceProperties:
      description: Role instance properties.
      type: object
      properties:
        networkProfile:
          $ref: '#/components/schemas/RoleInstanceNetworkProfile'
        instanceView:
          $ref: '#/components/schemas/RoleInstanceInstanceView'
    RoleInstance:
      description: Describes the cloud service role instance.
      properties:
        id:
          description: Resource Id
          type: string
          readOnly: true
        name:
          description: Resource Name.
          type: string
          readOnly: true
        type:
          description: Resource Type.
          type: string
          readOnly: true
        location:
          description: Resource Location.
          type: string
          readOnly: true
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
          readOnly: true
        sku:
          $ref: '#/components/schemas/InstanceSku'
        properties:
          $ref: '#/components/schemas/RoleInstanceProperties'
      type: object
    RoleInstanceListResult:
      description: The list operation result.
      type: object
      properties:
        value:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/RoleInstance'
        nextLink:
          description: The URI to fetch the next page of resources. Use this to get the next page of resources. Do this till nextLink is null to fetch all the resources.
          type: string
      required:
        - value
    CloudServiceRoleSku:
      description: Describes the cloud service role sku.
      type: object
      properties:
        name:
          description: 'The sku name. NOTE: If the new SKU is not supported on the hardware the cloud service is currently on, you need to delete and recreate the cloud service or move back to the old sku.'
          type: string
        tier:
          description: Specifies the tier of the cloud service. Possible Values are <br /><br /> **Standard** <br /><br /> **Basic**
          type: string
        capacity:
          format: int64
          description: Specifies the number of role instances in the cloud service.
          type: integer
    CloudServiceRoleProperties:
      description: The cloud service role properties.
      type: object
      properties:
        uniqueId:
          description: Specifies the ID which uniquely identifies a cloud service role.
          type: string
          readOnly: true
    CloudServiceRole:
      description: Describes a role of the cloud service.
      properties:
        id:
          description: Resource id
          type: string
          readOnly: true
        name:
          description: Resource name
          type: string
          readOnly: true
        type:
          description: Resource type
          type: string
          readOnly: true
        location:
          description: Resource location
          type: string
          readOnly: true
        sku:
          $ref: '#/components/schemas/CloudServiceRoleSku'
        properties:
          $ref: '#/components/schemas/CloudServiceRoleProperties'
      type: object
    CloudServiceRoleListResult:
      description: The list operation result.
      type: object
      properties:
        value:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/CloudServiceRole'
        nextLink:
          description: The URI to fetch the next page of resources. Use this to get the next page of resources. Do this till nextLink is null to fetch all the resources.
          type: string
      required:
        - value
    CloudServiceUpgradeMode:
      description: "Update mode for the cloud service. Role instances are allocated to update domains when the service is deployed. Updates can be initiated manually in each update domain or initiated automatically in all update domains.\r\nPossible Values are <br /><br />**Auto**<br /><br />**Manual** <br /><br />**Simultaneous**<br /><br />\r\nIf not specified, the default value is Auto. If set to Manual, PUT UpdateDomain must be called to apply the update. If set to Auto, the update is automatically applied to each update domain in sequence."
      enum:
        - Auto
        - Manual
        - Simultaneous
      type: string
      x-ms-enum:
        name: CloudServiceUpgradeMode
        modelAsString: true
    CloudServiceRoleProfileProperties:
      description: Describes the role properties.
      type: object
      properties:
        name:
          description: Resource name.
          type: string
        sku:
          $ref: '#/components/schemas/CloudServiceRoleSku'
    CloudServiceRoleProfile:
      description: Describes the role profile for the cloud service.
      type: object
      properties:
        roles:
          description: List of roles for the cloud service.
          type: array
          items:
            $ref: '#/components/schemas/CloudServiceRoleProfileProperties'
          x-ms-identifiers:
            - name
    CloudServiceVaultCertificate:
      description: Describes a single certificate reference in a Key Vault, and where the certificate should reside on the role instance.
      type: object
      properties:
        certificateUrl:
          description: This is the URL of a certificate that has been uploaded to Key Vault as a secret.
          type: string
    CloudServiceVaultSecretGroup:
      description: Describes a set of certificates which are all in the same Key Vault.
      type: object
      properties:
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
        vaultCertificates:
          description: The list of key vault references in SourceVault which contain certificates.
          type: array
          items:
            $ref: '#/components/schemas/CloudServiceVaultCertificate'
          x-ms-identifiers:
            - certificateUrl
    CloudServiceOsProfile:
      description: Describes the OS profile for the cloud service.
      type: object
      properties:
        secrets:
          description: Specifies set of certificates that should be installed onto the role instances.
          type: array
          items:
            $ref: '#/components/schemas/CloudServiceVaultSecretGroup'
          x-ms-identifiers:
            - sourceVault/id
    LoadBalancerFrontendIpConfigurationProperties:
      description: Describes a cloud service IP Configuration
      type: object
      properties:
        publicIPAddress:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the public ip address resource.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: The reference to the virtual network subnet resource.
        privateIPAddress:
          description: The virtual network private IP address of the IP configuration.
          type: string
    LoadBalancerFrontendIpConfiguration:
      description: Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
      required:
        - name
        - properties
      properties:
        name:
          description: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/LoadBalancerFrontendIpConfigurationProperties'
          description: Properties of load balancer frontend ip configuration.
      type: object
    LoadBalancerConfigurationProperties:
      description: Describes the properties of the load balancer configuration.
      type: object
      properties:
        frontendIpConfigurations:
          description: Specifies the frontend IP to be used for the load balancer. Only IPv4 frontend IP address is supported. Each load balancer configuration must have exactly one frontend IP configuration.
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerFrontendIpConfiguration'
          x-ms-identifiers:
            - name
      required:
        - frontendIpConfigurations
    LoadBalancerConfiguration:
      description: Describes the load balancer configuration.
      required:
        - name
        - properties
      properties:
        id:
          description: Resource Id
          type: string
        name:
          description: The name of the Load balancer
          type: string
        properties:
          $ref: '#/components/schemas/LoadBalancerConfigurationProperties'
          description: Properties of the load balancer configuration.
      type: object
    CloudServiceSlotType:
      description: "Slot type for the cloud service.\r\nPossible values are <br /><br />**Production**<br /><br />**Staging**<br /><br />\r\nIf not specified, the default value is Production."
      enum:
        - Production
        - Staging
      type: string
      x-ms-enum:
        name: CloudServiceSlotType
        modelAsString: true
    CloudServiceNetworkProfile:
      description: Network Profile for the cloud service.
      type: object
      properties:
        loadBalancerConfigurations:
          description: List of Load balancer configurations. Cloud service can have up to two load balancer configurations, corresponding to a Public Load Balancer and an Internal Load Balancer.
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancerConfiguration'
        slotType:
          $ref: '#/components/schemas/CloudServiceSlotType'
        swappableCloudService:
          $ref: '#/components/schemas/SubResource'
          description: The id reference of the cloud service containing the target IP with which the subject cloud service can perform a swap. This property cannot be updated once it is set. The swappable cloud service referred by this id must be present otherwise an error will be thrown.
    CloudServiceVaultAndSecretReference:
      type: object
      properties:
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The ARM Resource ID of the Key Vault
        secretUrl:
          type: string
          description: Secret URL which contains the protected settings of the extension
      description: Protected settings for the extension, referenced using KeyVault which are encrypted before sent to the role instance.
    CloudServiceExtensionProperties:
      description: Extension Properties.
      type: object
      properties:
        publisher:
          description: The name of the extension handler publisher.
          type: string
        type:
          description: Specifies the type of the extension.
          type: string
        typeHandlerVersion:
          description: Specifies the version of the extension. Specifies the version of the extension. If this element is not specified or an asterisk (*) is used as the value, the latest version of the extension is used. If the value is specified with a major version number and an asterisk as the minor version number (X.), the latest minor version of the specified major version is selected. If a major version number and a minor version number are specified (X.Y), the specific extension version is selected. If a version is specified, an auto-upgrade is performed on the role instance.
          type: string
        autoUpgradeMinorVersion:
          description: Explicitly specify whether platform can automatically upgrade typeHandlerVersion to higher minor versions when they become available.
          type: boolean
        settings:
          description: Public settings for the extension. For JSON extensions, this is the JSON settings for the extension. For XML Extension (like RDP), this is the XML setting for the extension.
          type: object
        protectedSettings:
          description: Protected settings for the extension which are encrypted before sent to the role instance.
          type: object
        protectedSettingsFromKeyVault:
          $ref: '#/components/schemas/CloudServiceVaultAndSecretReference'
        forceUpdateTag:
          description: "Tag to force apply the provided public and protected settings.\r\nChanging the tag value allows for re-running the extension without changing any of the public or protected settings.\r\nIf forceUpdateTag is not changed, updates to public or protected settings would still be applied by the handler.\r\nIf neither forceUpdateTag nor any of public or protected settings change, extension would flow to the role instance with the same sequence-number, and\r\nit is up to handler implementation whether to re-run it or not"
          type: string
        provisioningState:
          description: The provisioning state, which only appears in the response.
          type: string
          readOnly: true
        rolesAppliedTo:
          description: Optional list of roles to apply this extension. If property is not specified or '*' is specified, extension is applied to all roles in the cloud service.
          type: array
          items:
            type: string
    Extension:
      description: Describes a cloud service Extension.
      properties:
        name:
          description: The name of the extension.
          type: string
        properties:
          $ref: '#/components/schemas/CloudServiceExtensionProperties'
      type: object
    CloudServiceExtensionProfile:
      description: Describes a cloud service extension profile.
      type: object
      properties:
        extensions:
          description: List of extensions for the cloud service.
          type: array
          items:
            $ref: '#/components/schemas/Extension'
          x-ms-identifiers:
            - name
    CloudServiceProperties:
      description: Cloud service properties
      type: object
      properties:
        packageUrl:
          description: "Specifies a URL that refers to the location of the service package in the Blob service. The service package URL can be Shared Access Signature (SAS) URI from any storage account.\r\nThis is a write-only property and is not returned in GET calls."
          type: string
        configuration:
          description: Specifies the XML service configuration (.cscfg) for the cloud service.
          type: string
        configurationUrl:
          description: "Specifies a URL that refers to the location of the service configuration in the Blob service. The service package URL  can be Shared Access Signature (SAS) URI from any storage account.\r\nThis is a write-only property and is not returned in GET calls."
          type: string
        startCloudService:
          description: "(Optional) Indicates whether to start the cloud service immediately after it is created. The default value is `true`.\r\nIf false, the service model is still deployed, but the code is not run immediately. Instead, the service is PoweredOff until you call Start, at which time the service will be started. A deployed service still incurs charges, even if it is poweredoff."
          type: boolean
        allowModelOverride:
          description: "(Optional) Indicates whether the role sku properties (roleProfile.roles.sku) specified in the model/template should override the role instance count and vm size specified in the .cscfg and .csdef respectively.\r\nThe default value is `false`."
          type: boolean
        upgradeMode:
          $ref: '#/components/schemas/CloudServiceUpgradeMode'
        roleProfile:
          $ref: '#/components/schemas/CloudServiceRoleProfile'
        osProfile:
          $ref: '#/components/schemas/CloudServiceOsProfile'
        networkProfile:
          $ref: '#/components/schemas/CloudServiceNetworkProfile'
        extensionProfile:
          $ref: '#/components/schemas/CloudServiceExtensionProfile'
        provisioningState:
          description: The provisioning state, which only appears in the response.
          type: string
          readOnly: true
        uniqueId:
          description: The unique identifier for the cloud service.
          type: string
          readOnly: true
    CloudService:
      description: Describes the cloud service.
      x-ms-azure-resource: true
      required:
        - location
      properties:
        id:
          description: Resource Id.
          type: string
          readOnly: true
        name:
          description: Resource name.
          type: string
          readOnly: true
        type:
          description: Resource type.
          type: string
          readOnly: true
        location:
          description: Resource location.
          type: string
        tags:
          description: Resource tags.
          type: object
          additionalProperties:
            type: string
        properties:
          $ref: '#/components/schemas/CloudServiceProperties'
        systemData:
          $ref: '#/components/schemas/SystemData'
        zones:
          description: List of logical availability zone of the resource. List should contain only 1 zone where cloud service should be provisioned. This field is optional.
          type: array
          items:
            type: string
      type: object
    CloudServiceUpdate:
      type: object
      properties:
        tags:
          description: Resource tags
          type: object
          additionalProperties:
            type: string
    StatusCodeCount:
      description: The status code and count of the cloud service instance view statuses
      type: object
      properties:
        code:
          description: The instance view status code
          type: string
          readOnly: true
        count:
          format: int32
          description: Number of instances having this status code
          type: integer
          readOnly: true
    InstanceViewStatusesSummary:
      description: Instance view statuses.
      type: object
      properties:
        statusesSummary:
          description: The summary.
          type: array
          items:
            $ref: '#/components/schemas/StatusCodeCount'
          x-ms-identifiers: []
          readOnly: true
    CloudServiceInstanceView:
      description: InstanceView of CloudService as a whole
      type: object
      properties:
        roleInstance:
          $ref: '#/components/schemas/InstanceViewStatusesSummary'
        sdkVersion:
          description: The version of the SDK that was used to generate the package for the cloud service.
          type: string
          readOnly: true
        privateIds:
          description: 'Specifies a list of unique identifiers generated internally for the cloud service. <br /><br /> NOTE: If you are using Azure Diagnostics extension, this property can be used as ''DeploymentId'' for querying details.'
          type: array
          items:
            type: string
          readOnly: true
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/ResourceInstanceViewStatus'
          x-ms-identifiers: []
          readOnly: true
    CloudServiceListResult:
      description: The list operation result.
      type: object
      properties:
        value:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/CloudService'
        nextLink:
          description: The URI to fetch the next page of resources. Use this to get the next page of resources. Do this till nextLink is null to fetch all the resources.
          type: string
      required:
        - value
    RoleInstances:
      description: Specifies a list of role instances from the cloud service.
      type: object
      properties:
        roleInstances:
          description: List of cloud service role instance names. Value of '*' will signify all role instances of the cloud service.
          type: array
          items:
            type: string
      required:
        - roleInstances
    UpdateDomain:
      description: Defines an update domain for the cloud service.
      type: object
      properties:
        id:
          description: Resource Id
          type: string
          readOnly: true
        name:
          description: Resource Name
          type: string
          readOnly: true
    UpdateDomainListResult:
      description: The list operation result.
      type: object
      properties:
        value:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/UpdateDomain'
        nextLink:
          description: The URI to fetch the next page of resources. Use this to get the next page of resources. Do this till nextLink is null to fetch all the resources.
          type: string
      required:
        - value
    OSVersionProperties:
      description: OS version properties.
      type: object
      properties:
        family:
          description: The family of this OS version.
          type: string
          readOnly: true
        familyLabel:
          description: The family label of this OS version.
          type: string
          readOnly: true
        version:
          description: The OS version.
          type: string
          readOnly: true
        label:
          description: The OS version label.
          type: string
          readOnly: true
        isDefault:
          description: Specifies whether this is the default OS version for its family.
          type: boolean
          readOnly: true
        isActive:
          description: Specifies whether this OS version is active.
          type: boolean
          readOnly: true
    OSVersion:
      description: Describes a cloud service OS version.
      properties:
        id:
          description: Resource Id.
          type: string
          readOnly: true
        name:
          description: Resource name.
          type: string
          readOnly: true
        type:
          description: Resource type.
          type: string
          readOnly: true
        location:
          description: Resource location.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/OSVersionProperties'
      type: object
    OSVersionListResult:
      description: The list operation result.
      type: object
      properties:
        value:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/OSVersion'
        nextLink:
          description: The URI to fetch the next page of resources. Use this to get the next page of resources. Do this till nextLink is null to fetch all the resources.
          type: string
      required:
        - value
    OSVersionPropertiesBase:
      description: Configuration view of an OS version.
      type: object
      properties:
        version:
          description: The OS version.
          type: string
          readOnly: true
        label:
          description: The OS version label.
          type: string
          readOnly: true
        isDefault:
          description: Specifies whether this is the default OS version for its family.
          type: boolean
          readOnly: true
        isActive:
          description: Specifies whether this OS version is active.
          type: boolean
          readOnly: true
    OSFamilyProperties:
      description: OS family properties.
      type: object
      properties:
        name:
          description: The OS family name.
          type: string
          readOnly: true
        label:
          description: The OS family label.
          type: string
          readOnly: true
        versions:
          description: List of OS versions belonging to this family.
          type: array
          items:
            $ref: '#/components/schemas/OSVersionPropertiesBase'
          x-ms-identifiers:
            - version
          readOnly: true
    OSFamily:
      description: Describes a cloud service OS family.
      properties:
        id:
          description: Resource Id.
          type: string
          readOnly: true
        name:
          description: Resource name.
          type: string
          readOnly: true
        type:
          description: Resource type.
          type: string
          readOnly: true
        location:
          description: Resource location.
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/OSFamilyProperties'
      type: object
    OSFamilyListResult:
      description: The list operation result.
      type: object
      properties:
        value:
          description: The list of resources.
          type: array
          items:
            $ref: '#/components/schemas/OSFamily'
        nextLink:
          description: The URI to fetch the next page of resources. Use this to get the next page of resources. Do this till nextLink is null to fetch all the resources.
          type: string
      required:
        - value
  x-stackQL-resources:
    disks:
      id: azure.compute.disks
      name: disks
      title: disks
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1disks~1{diskName}~1?api-version=2023-10-02/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1disks~1{diskName}~1?api-version=2023-10-02/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1disks~1{diskName}~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1disks~1{diskName}~1?api-version=2023-10-02/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1disks~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1disks~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        grant_access:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1disks~1{diskName}~1beginGetAccess~1?api-version=2023-10-02/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_access:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1disks~1{diskName}~1endGetAccess~1?api-version=2023-10-02/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disks/methods/get'
          - $ref: '#/components/x-stackQL-resources/disks/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/disks/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/disks/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/disks/methods/delete'
    proximity_placement_groups:
      id: azure.compute.proximity_placement_groups
      name: proximity_placement_groups
      title: proximity_placement_groups
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1proximityPlacementGroups~1{proximityPlacementGroupName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1proximityPlacementGroups~1{proximityPlacementGroupName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1proximityPlacementGroups~1{proximityPlacementGroupName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1proximityPlacementGroups~1{proximityPlacementGroupName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1proximityPlacementGroups~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1proximityPlacementGroups~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/proximity_placement_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/proximity_placement_groups/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/proximity_placement_groups/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/proximity_placement_groups/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/proximity_placement_groups/methods/delete'
    virtual_machine_run_commands:
      id: azure.compute.virtual_machine_run_commands
      name: virtual_machine_run_commands
      title: virtual_machine_run_commands
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1runCommands~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1runCommands~1{commandId}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_by_virtual_machine:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_virtual_machine:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1runCommands~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_run_commands/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_run_commands/methods/list_by_virtual_machine'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_run_commands/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_run_commands/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_run_commands/methods/delete'
    virtual_machine:
      id: azure.compute.virtual_machine
      name: virtual_machine
      title: virtual_machine
      methods:
        run_command:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1runCommand~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        capture:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1capture~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1instanceView~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        convert_to_managed_disks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1convertToManagedDisks~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1deallocate~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generalize:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1generalize~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1powerOff~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reapply:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1reapply~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1restart~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1start~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1redeploy~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1reimage~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retrieve_boot_diagnostics_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1retrieveBootDiagnosticsData~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        perform_maintenance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1performMaintenance~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        simulate_eviction:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1simulateEviction~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assess_patches:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1assessPatches~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        install_patches:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1installPatches~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        attach_detach_data_disks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1attachDetachDataDisks~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_vms:
      id: azure.compute.virtual_machine_scale_set_vms
      name: virtual_machine_scale_set_vms
      title: virtual_machine_scale_set_vms
      methods:
        run_command:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1runCommand~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1reimage~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage_all:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1reimageall~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_rolling_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1approveRollingUpgrade~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1deallocate~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{virtualMachineScaleSetName}~1virtualMachines~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1poweroff~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1restart~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1start~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1redeploy~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        retrieve_boot_diagnostics_data:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1retrieveBootDiagnosticsData~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        perform_maintenance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1performMaintenance~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        simulate_eviction:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1simulateEviction~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        attach_detach_data_disks:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualmachines~1{instanceId}~1attachDetachDataDisks~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms/methods/delete'
    virtual_machine_scale_set_vm_run_commands:
      id: azure.compute.virtual_machine_scale_set_vm_run_commands
      name: virtual_machine_scale_set_vm_run_commands
      title: virtual_machine_scale_set_vm_run_commands
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1runCommands~1{runCommandName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1runCommands~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_run_commands/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_run_commands/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_run_commands/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_run_commands/methods/delete'
    capacity_reservation_groups:
      id: azure.compute.capacity_reservation_groups
      name: capacity_reservation_groups
      title: capacity_reservation_groups
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1capacityReservationGroups~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/capacity_reservation_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/capacity_reservation_groups/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/capacity_reservation_groups/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/capacity_reservation_groups/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/capacity_reservation_groups/methods/delete'
    capacity_reservations:
      id: azure.compute.capacity_reservations
      name: capacity_reservations
      title: capacity_reservations
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1capacityReservations~1{capacityReservationName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1capacityReservations~1{capacityReservationName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1capacityReservations~1{capacityReservationName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1capacityReservations~1{capacityReservationName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_capacity_reservation_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1capacityReservationGroups~1{capacityReservationGroupName}~1capacityReservations~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/capacity_reservations/methods/get'
          - $ref: '#/components/x-stackQL-resources/capacity_reservations/methods/list_by_capacity_reservation_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/capacity_reservations/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/capacity_reservations/methods/delete'
    resource_skus:
      id: azure.compute.resource_skus
      name: resource_skus
      title: resource_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1skus~1?api-version=2021-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/resource_skus/methods/list'
        insert: []
        update: []
        delete: []
    ssh_public_keys:
      id: azure.compute.ssh_public_keys
      name: ssh_public_keys
      title: ssh_public_keys
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1sshPublicKeys~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1sshPublicKeys~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1sshPublicKeys~1{sshPublicKeyName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1sshPublicKeys~1{sshPublicKeyName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1sshPublicKeys~1{sshPublicKeyName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1sshPublicKeys~1{sshPublicKeyName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_key_pair:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1sshPublicKeys~1{sshPublicKeyName}~1generateKeyPair~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/delete'
    disk_encryption_sets:
      id: azure.compute.disk_encryption_sets
      name: disk_encryption_sets
      title: disk_encryption_sets
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskEncryptionSets~1{diskEncryptionSetName}~1?api-version=2023-10-02/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskEncryptionSets~1{diskEncryptionSetName}~1?api-version=2023-10-02/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskEncryptionSets~1{diskEncryptionSetName}~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskEncryptionSets~1{diskEncryptionSetName}~1?api-version=2023-10-02/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskEncryptionSets~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1diskEncryptionSets~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_encryption_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/disk_encryption_sets/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/disk_encryption_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/disk_encryption_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/disk_encryption_sets/methods/delete'
    disk_encryption_sets_associated_resources:
      id: azure.compute.disk_encryption_sets_associated_resources
      name: disk_encryption_sets_associated_resources
      title: disk_encryption_sets_associated_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskEncryptionSets~1{diskEncryptionSetName}~1associatedResources~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_encryption_sets_associated_resources/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_extension_images:
      id: azure.compute.virtual_machine_extension_images
      name: virtual_machine_extension_images
      title: virtual_machine_extension_images
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1{publisherName}~1artifacttypes~1vmextension~1types~1{type}~1versions~1{version}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extension_images/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_extension_images_types:
      id: azure.compute.virtual_machine_extension_images_types
      name: virtual_machine_extension_images_types
      title: virtual_machine_extension_images_types
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1{publisherName}~1artifacttypes~1vmextension~1types~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extension_images_types/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_extension_images_versions:
      id: azure.compute.virtual_machine_extension_images_versions
      name: virtual_machine_extension_images_versions
      title: virtual_machine_extension_images_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1{publisherName}~1artifacttypes~1vmextension~1types~1{type}~1versions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extension_images_versions/methods/list'
        insert: []
        update: []
        delete: []
    galleries:
      id: azure.compute.galleries
      name: galleries
      title: galleries
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1?api-version=2023-07-03/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1?api-version=2023-07-03/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1?api-version=2023-07-03/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1galleries~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/get'
          - $ref: '#/components/x-stackQL-resources/galleries/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/galleries/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/galleries/methods/delete'
    gallery_images:
      id: azure.compute.gallery_images
      name: gallery_images
      title: gallery_images
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1?api-version=2023-07-03/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1?api-version=2023-07-03/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1?api-version=2023-07-03/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_gallery:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/list_by_gallery'
        insert:
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gallery_images/methods/delete'
    gallery_image_versions:
      id: azure.compute.gallery_image_versions
      name: gallery_image_versions
      title: gallery_image_versions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1versions~1{galleryImageVersionName}~1?api-version=2023-07-03/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1versions~1{galleryImageVersionName}~1?api-version=2023-07-03/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1versions~1{galleryImageVersionName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1versions~1{galleryImageVersionName}~1?api-version=2023-07-03/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_gallery_image:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1images~1{galleryImageName}~1versions~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_image_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/gallery_image_versions/methods/list_by_gallery_image'
        insert:
          - $ref: '#/components/x-stackQL-resources/gallery_image_versions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gallery_image_versions/methods/delete'
    gallery_applications:
      id: azure.compute.gallery_applications
      name: gallery_applications
      title: gallery_applications
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1?api-version=2023-07-03/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1?api-version=2023-07-03/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1?api-version=2023-07-03/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_gallery:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_applications/methods/get'
          - $ref: '#/components/x-stackQL-resources/gallery_applications/methods/list_by_gallery'
        insert:
          - $ref: '#/components/x-stackQL-resources/gallery_applications/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gallery_applications/methods/delete'
    gallery_application_versions:
      id: azure.compute.gallery_application_versions
      name: gallery_application_versions
      title: gallery_application_versions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1versions~1{galleryApplicationVersionName}~1?api-version=2023-07-03/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1versions~1{galleryApplicationVersionName}~1?api-version=2023-07-03/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1versions~1{galleryApplicationVersionName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1versions~1{galleryApplicationVersionName}~1?api-version=2023-07-03/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_gallery_application:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1applications~1{galleryApplicationName}~1versions~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gallery_application_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/gallery_application_versions/methods/list_by_gallery_application'
        insert:
          - $ref: '#/components/x-stackQL-resources/gallery_application_versions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gallery_application_versions/methods/delete'
    gallery_sharing_profile:
      id: azure.compute.gallery_sharing_profile
      name: gallery_sharing_profile
      title: gallery_sharing_profile
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1galleries~1{galleryName}~1share~1?api-version=2023-07-03/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    disk_accesses:
      id: azure.compute.disk_accesses
      name: disk_accesses
      title: disk_accesses
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1?api-version=2023-10-02/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1?api-version=2023-10-02/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1?api-version=2023-10-02/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1diskAccesses~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_accesses/methods/get'
          - $ref: '#/components/x-stackQL-resources/disk_accesses/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/disk_accesses/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/disk_accesses/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/disk_accesses/methods/delete'
    disk_accesses_private_link_resources:
      id: azure.compute.disk_accesses_private_link_resources
      name: disk_accesses_private_link_resources
      title: disk_accesses_private_link_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1privateLinkResources~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_accesses_private_link_resources/methods/get'
        insert: []
        update: []
        delete: []
    disk_accesses_a_private_endpoint_connection:
      id: azure.compute.disk_accesses_a_private_endpoint_connection
      name: disk_accesses_a_private_endpoint_connection
      title: disk_accesses_a_private_endpoint_connection
      methods:
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-10-02/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2023-10-02/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_accesses_a_private_endpoint_connection/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/disk_accesses_a_private_endpoint_connection/methods/delete'
    disk_accesses_private_endpoint_connections:
      id: azure.compute.disk_accesses_private_endpoint_connections
      name: disk_accesses_private_endpoint_connections
      title: disk_accesses_private_endpoint_connections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1diskAccesses~1{diskAccessName}~1privateEndpointConnections~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_accesses_private_endpoint_connections/methods/list'
        insert: []
        update: []
        delete: []
    log_analytics:
      id: azure.compute.log_analytics
      name: log_analytics
      title: log_analytics
      methods:
        export_request_rate_by_interval:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1logAnalytics~1apiAccess~1getRequestRateByInterval~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        export_throttled_requests:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1logAnalytics~1apiAccess~1getThrottledRequests~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    restore_point_collections:
      id: azure.compute.restore_point_collections
      name: restore_point_collections
      title: restore_point_collections
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restore_point_collections/methods/get'
          - $ref: '#/components/x-stackQL-resources/restore_point_collections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/restore_point_collections/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/restore_point_collections/methods/delete'
    restore_point_collections_all:
      id: azure.compute.restore_point_collections_all
      name: restore_point_collections_all
      title: restore_point_collections_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1restorePointCollections~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restore_point_collections_all/methods/list'
        insert: []
        update: []
        delete: []
    restore_points:
      id: azure.compute.restore_points
      name: restore_points
      title: restore_points
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1restorePoints~1{restorePointName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1restorePoints~1{restorePointName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1restorePoints~1{restorePointName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restore_points/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/restore_points/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/restore_points/methods/delete'
    operations:
      id: azure.compute.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Compute~1operations~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    usage:
      id: azure.compute.usage
      name: usage
      title: usage
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1usages~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usage/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_sizes:
      id: azure.compute.virtual_machine_sizes
      name: virtual_machine_sizes
      title: virtual_machine_sizes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1vmSizes~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_sizes/methods/list'
        insert: []
        update: []
        delete: []
    community_galleries:
      id: azure.compute.community_galleries
      name: community_galleries
      title: community_galleries
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1communityGalleries~1{publicGalleryName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/community_galleries/methods/get'
        insert: []
        update: []
        delete: []
    community_gallery_images:
      id: azure.compute.community_gallery_images
      name: community_gallery_images
      title: community_gallery_images
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1communityGalleries~1{publicGalleryName}~1images~1{galleryImageName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1communityGalleries~1{publicGalleryName}~1images~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/community_gallery_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/community_gallery_images/methods/list'
        insert: []
        update: []
        delete: []
    community_gallery_image_versions:
      id: azure.compute.community_gallery_image_versions
      name: community_gallery_image_versions
      title: community_gallery_image_versions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1communityGalleries~1{publicGalleryName}~1images~1{galleryImageName}~1versions~1{galleryImageVersionName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1communityGalleries~1{publicGalleryName}~1images~1{galleryImageName}~1versions~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/community_gallery_image_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/community_gallery_image_versions/methods/list'
        insert: []
        update: []
        delete: []
    availability_sets:
      id: azure.compute.availability_sets
      name: availability_sets
      title: availability_sets
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1availabilitySets~1{availabilitySetName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1availabilitySets~1{availabilitySetName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1availabilitySets~1{availabilitySetName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1availabilitySets~1{availabilitySetName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1availabilitySets~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1availabilitySets~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/list'
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/availability_sets/methods/delete'
    availability_sets_available_sizes:
      id: azure.compute.availability_sets_available_sizes
      name: availability_sets_available_sizes
      title: availability_sets_available_sizes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1availabilitySets~1{availabilitySetName}~1vmSizes~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/availability_sets_available_sizes/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_images:
      id: azure.compute.virtual_machine_images
      name: virtual_machine_images
      title: virtual_machine_images
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1{offer}~1skus~1{skus}~1versions~1{version}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1{offer}~1skus~1{skus}~1versions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_edge_zone:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1edgeZones~1{edgeZone}~1vmimages~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images/methods/list'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images/methods/list_by_edge_zone'
        insert: []
        update: []
        delete: []
    virtual_machine_images_offers:
      id: azure.compute.virtual_machine_images_offers
      name: virtual_machine_images_offers
      title: virtual_machine_images_offers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_offers/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_images_publishers:
      id: azure.compute.virtual_machine_images_publishers
      name: virtual_machine_images_publishers
      title: virtual_machine_images_publishers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_publishers/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_images_skus:
      id: azure.compute.virtual_machine_images_skus
      name: virtual_machine_images_skus
      title: virtual_machine_images_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1{offer}~1skus~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_skus/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_images_edge_zone:
      id: azure.compute.virtual_machine_images_edge_zone
      name: virtual_machine_images_edge_zone
      title: virtual_machine_images_edge_zone
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1edgeZones~1{edgeZone}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1{offer}~1skus~1{skus}~1versions~1{version}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1edgeZones~1{edgeZone}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1{offer}~1skus~1{skus}~1versions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_edge_zone/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_edge_zone/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_images_edge_zone_offers:
      id: azure.compute.virtual_machine_images_edge_zone_offers
      name: virtual_machine_images_edge_zone_offers
      title: virtual_machine_images_edge_zone_offers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1edgeZones~1{edgeZone}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_edge_zone_offers/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_images_edge_zone_publishers:
      id: azure.compute.virtual_machine_images_edge_zone_publishers
      name: virtual_machine_images_edge_zone_publishers
      title: virtual_machine_images_edge_zone_publishers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1edgeZones~1{edgeZone}~1publishers~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_edge_zone_publishers/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_images_edge_zone_skus:
      id: azure.compute.virtual_machine_images_edge_zone_skus
      name: virtual_machine_images_edge_zone_skus
      title: virtual_machine_images_edge_zone_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1edgeZones~1{edgeZone}~1publishers~1{publisherName}~1artifacttypes~1vmimage~1offers~1{offer}~1skus~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_images_edge_zone_skus/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_sets:
      id: azure.compute.virtual_machine_scale_sets
      name: virtual_machine_scale_sets
      title: virtual_machine_scale_sets
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1virtualMachineScaleSets~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1deallocate~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1poweroff~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1restart~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1start~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reapply:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1reapply~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1redeploy~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        perform_maintenance:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1performMaintenance~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1reimage~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage_all:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1reimageall~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        approve_rolling_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1approveRollingUpgrade~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        force_recovery_service_fabric_platform_update_domain_walk:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1forceRecoveryServiceFabricPlatformUpdateDomainWalk~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        convert_to_single_placement_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1convertToSinglePlacementGroup~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        set_orchestration_service_state:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1setOrchestrationServiceState~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/list_by_location'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets/methods/delete'
    virtual_machine_scale_sets_instances:
      id: azure.compute.virtual_machine_scale_sets_instances
      name: virtual_machine_scale_sets_instances
      title: virtual_machine_scale_sets_instances
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1delete~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1manualupgrade~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_instances/methods/delete'
    virtual_machine_scale_sets_instance_view:
      id: azure.compute.virtual_machine_scale_sets_instance_view
      name: virtual_machine_scale_sets_instance_view
      title: virtual_machine_scale_sets_instance_view
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1instanceView~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_instance_view/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_extensions:
      id: azure.compute.virtual_machine_scale_set_extensions
      name: virtual_machine_scale_set_extensions
      title: virtual_machine_scale_set_extensions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1{vmssExtensionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_extensions/methods/delete'
    virtual_machine_scale_sets_all:
      id: azure.compute.virtual_machine_scale_sets_all
      name: virtual_machine_scale_sets_all
      title: virtual_machine_scale_sets_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_all/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_sets_skus:
      id: azure.compute.virtual_machine_scale_sets_skus
      name: virtual_machine_scale_sets_skus
      title: virtual_machine_scale_sets_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1skus~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_skus/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_sets_os_upgrade_history:
      id: azure.compute.virtual_machine_scale_sets_os_upgrade_history
      name: virtual_machine_scale_sets_os_upgrade_history
      title: virtual_machine_scale_sets_os_upgrade_history
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1osUpgradeHistory~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_sets_os_upgrade_history/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_rolling_upgrades:
      id: azure.compute.virtual_machine_scale_set_rolling_upgrades
      name: virtual_machine_scale_set_rolling_upgrades
      title: virtual_machine_scale_set_rolling_upgrades
      methods:
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1rollingUpgrades~1cancel~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_os_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1osRollingUpgrade~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start_extension_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1extensionRollingUpgrade~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_rolling_upgrades_latest:
      id: azure.compute.virtual_machine_scale_set_rolling_upgrades_latest
      name: virtual_machine_scale_set_rolling_upgrades_latest
      title: virtual_machine_scale_set_rolling_upgrades_latest
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1rollingUpgrades~1latest~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_rolling_upgrades_latest/methods/get'
        insert: []
        update: []
        delete: []
    virtual_machine_scale_set_vm_extensions:
      id: azure.compute.virtual_machine_scale_set_vm_extensions
      name: virtual_machine_scale_set_vm_extensions
      title: virtual_machine_scale_set_vm_extensions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1extensions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vm_extensions/methods/delete'
    virtual_machine_scale_set_vms_instance_view:
      id: azure.compute.virtual_machine_scale_set_vms_instance_view
      name: virtual_machine_scale_set_vms_instance_view
      title: virtual_machine_scale_set_vms_instance_view
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachineScaleSets~1{vmScaleSetName}~1virtualMachines~1{instanceId}~1instanceView~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_scale_set_vms_instance_view/methods/get'
        insert: []
        update: []
        delete: []
    disk_restore_point:
      id: azure.compute.disk_restore_point
      name: disk_restore_point
      title: disk_restore_point
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1restorePoints~1{vmRestorePointName}~1diskRestorePoints~1{diskRestorePointName}~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_restore_point:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1restorePoints~1{vmRestorePointName}~1diskRestorePoints~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        grant_access:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1restorePoints~1{vmRestorePointName}~1diskRestorePoints~1{diskRestorePointName}~1beginGetAccess~1?api-version=2023-10-02/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_access:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1restorePointCollections~1{restorePointCollectionName}~1restorePoints~1{vmRestorePointName}~1diskRestorePoints~1{diskRestorePointName}~1endGetAccess~1?api-version=2023-10-02/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/disk_restore_point/methods/get'
          - $ref: '#/components/x-stackQL-resources/disk_restore_point/methods/list_by_restore_point'
        insert: []
        update: []
        delete: []
    virtual_machine_extensions:
      id: azure.compute.virtual_machine_extensions
      name: virtual_machine_extensions
      title: virtual_machine_extensions
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1{vmExtensionName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1extensions~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machine_extensions/methods/delete'
    virtual_machines:
      id: azure.compute.virtual_machines
      name: virtual_machines
      title: virtual_machines
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1virtualMachines~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/get'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list_by_location'
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/virtual_machines/methods/delete'
    virtual_machines_all:
      id: azure.compute.virtual_machines_all
      name: virtual_machines_all
      title: virtual_machines_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1virtualMachines~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines_all/methods/list'
        insert: []
        update: []
        delete: []
    virtual_machines_available_sizes:
      id: azure.compute.virtual_machines_available_sizes
      name: virtual_machines_available_sizes
      title: virtual_machines_available_sizes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1virtualMachines~1{vmName}~1vmSizes~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/virtual_machines_available_sizes/methods/list'
        insert: []
        update: []
        delete: []
    images:
      id: azure.compute.images
      name: images
      title: images
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1images~1{imageName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1images~1{imageName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1images~1{imageName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1images~1{imageName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1images~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1images~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/images/methods/get'
          - $ref: '#/components/x-stackQL-resources/images/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/images/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/images/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/images/methods/delete'
    snapshots:
      id: azure.compute.snapshots
      name: snapshots
      title: snapshots
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1snapshots~1{snapshotName}~1?api-version=2023-10-02/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1snapshots~1{snapshotName}~1?api-version=2023-10-02/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1snapshots~1{snapshotName}~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1snapshots~1{snapshotName}~1?api-version=2023-10-02/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1snapshots~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1snapshots~1?api-version=2023-10-02/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        grant_access:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1snapshots~1{snapshotName}~1beginGetAccess~1?api-version=2023-10-02/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_access:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1snapshots~1{snapshotName}~1endGetAccess~1?api-version=2023-10-02/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/get'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/snapshots/methods/delete'
    dedicated_host_groups:
      id: azure.compute.dedicated_host_groups
      name: dedicated_host_groups
      title: dedicated_host_groups
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1hostGroups~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dedicated_host_groups/methods/get'
          - $ref: '#/components/x-stackQL-resources/dedicated_host_groups/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/dedicated_host_groups/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/dedicated_host_groups/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dedicated_host_groups/methods/delete'
    dedicated_hosts:
      id: azure.compute.dedicated_hosts
      name: dedicated_hosts
      title: dedicated_hosts
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1{hostName}~1?api-version=2024-03-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1{hostName}~1?api-version=2024-03-01/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1{hostName}~1?api-version=2024-03-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1{hostName}~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_host_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1{hostName}~1restart~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        redeploy:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1{hostName}~1redeploy~1?api-version=2024-03-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dedicated_hosts/methods/get'
          - $ref: '#/components/x-stackQL-resources/dedicated_hosts/methods/list_by_host_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/dedicated_hosts/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/dedicated_hosts/methods/delete'
    dedicated_hosts_available_sizes:
      id: azure.compute.dedicated_hosts_available_sizes
      name: dedicated_hosts_available_sizes
      title: dedicated_hosts_available_sizes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1hostGroups~1{hostGroupName}~1hosts~1{hostName}~1hostSizes~1?api-version=2024-03-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/dedicated_hosts_available_sizes/methods/list'
        insert: []
        update: []
        delete: []
    shared_galleries:
      id: azure.compute.shared_galleries
      name: shared_galleries
      title: shared_galleries
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1sharedGalleries~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1sharedGalleries~1{galleryUniqueName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shared_galleries/methods/get'
          - $ref: '#/components/x-stackQL-resources/shared_galleries/methods/list'
        insert: []
        update: []
        delete: []
    shared_gallery_images:
      id: azure.compute.shared_gallery_images
      name: shared_gallery_images
      title: shared_gallery_images
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1sharedGalleries~1{galleryUniqueName}~1images~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1sharedGalleries~1{galleryUniqueName}~1images~1{galleryImageName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shared_gallery_images/methods/get'
          - $ref: '#/components/x-stackQL-resources/shared_gallery_images/methods/list'
        insert: []
        update: []
        delete: []
    shared_gallery_image_versions:
      id: azure.compute.shared_gallery_image_versions
      name: shared_gallery_image_versions
      title: shared_gallery_image_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1sharedGalleries~1{galleryUniqueName}~1images~1{galleryImageName}~1versions~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1sharedGalleries~1{galleryUniqueName}~1images~1{galleryImageName}~1versions~1{galleryImageVersionName}~1?api-version=2023-07-03/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/shared_gallery_image_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/shared_gallery_image_versions/methods/list'
        insert: []
        update: []
        delete: []
    cloud_service_role_instances:
      id: azure.compute.cloud_service_role_instances
      name: cloud_service_role_instances
      title: cloud_service_role_instances
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1?api-version=2022-09-04/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1restart~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1reimage~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rebuild:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1rebuild~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_service_role_instances/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_service_role_instances/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_service_role_instances/methods/delete'
    cloud_service_role_instances_instance_view:
      id: azure.compute.cloud_service_role_instances_instance_view
      name: cloud_service_role_instances_instance_view
      title: cloud_service_role_instances_instance_view
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roleInstances~1{roleInstanceName}~1instanceView~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_service_role_instances_instance_view/methods/get'
        insert: []
        update: []
        delete: []
    cloud_service_roles:
      id: azure.compute.cloud_service_roles
      name: cloud_service_roles
      title: cloud_service_roles
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roles~1{roleName}~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1roles~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_service_roles/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_service_roles/methods/list'
        insert: []
        update: []
        delete: []
    cloud_services:
      id: azure.compute.cloud_services
      name: cloud_services
      title: cloud_services
      methods:
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1?api-version=2022-09-04/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1?api-version=2022-09-04/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1?api-version=2022-09-04/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1start~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        power_off:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1poweroff~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1restart~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1reimage~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        rebuild:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1rebuild~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_services/methods/get'
          - $ref: '#/components/x-stackQL-resources/cloud_services/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cloud_services/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_services/methods/delete'
    cloud_services_instance_view:
      id: azure.compute.cloud_services_instance_view
      name: cloud_services_instance_view
      title: cloud_services_instance_view
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1instanceView~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_services_instance_view/methods/get'
        insert: []
        update: []
        delete: []
    cloud_services_all:
      id: azure.compute.cloud_services_all
      name: cloud_services_all
      title: cloud_services_all
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1cloudServices~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_services_all/methods/list'
        insert: []
        update: []
        delete: []
    cloud_services_instances:
      id: azure.compute.cloud_services_instances
      name: cloud_services_instances
      title: cloud_services_instances
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1delete~1?api-version=2022-09-04/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_services_instances/methods/delete'
    cloud_services_update_domain:
      id: azure.compute.cloud_services_update_domain
      name: cloud_services_update_domain
      title: cloud_services_update_domain
      methods:
        walk_update_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1updateDomains~1{updateDomain}~1?api-version=2022-09-04/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    cloud_services_update_domain_update_domain:
      id: azure.compute.cloud_services_update_domain_update_domain
      name: cloud_services_update_domain_update_domain
      title: cloud_services_update_domain_update_domain
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1updateDomains~1{updateDomain}~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_services_update_domain_update_domain/methods/get'
        insert: []
        update: []
        delete: []
    cloud_services_update_domain_update_domains:
      id: azure.compute.cloud_services_update_domain_update_domains
      name: cloud_services_update_domain_update_domains
      title: cloud_services_update_domain_update_domains
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Compute~1cloudServices~1{cloudServiceName}~1updateDomains~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_services_update_domain_update_domains/methods/list'
        insert: []
        update: []
        delete: []
    cloud_service_operating_systems_os_version:
      id: azure.compute.cloud_service_operating_systems_os_version
      name: cloud_service_operating_systems_os_version
      title: cloud_service_operating_systems_os_version
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1cloudServiceOsVersions~1{osVersionName}~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_service_operating_systems_os_version/methods/get'
        insert: []
        update: []
        delete: []
    cloud_service_operating_systems_os_versions:
      id: azure.compute.cloud_service_operating_systems_os_versions
      name: cloud_service_operating_systems_os_versions
      title: cloud_service_operating_systems_os_versions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1cloudServiceOsVersions~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_service_operating_systems_os_versions/methods/list'
        insert: []
        update: []
        delete: []
    cloud_service_operating_systems_os_family:
      id: azure.compute.cloud_service_operating_systems_os_family
      name: cloud_service_operating_systems_os_family
      title: cloud_service_operating_systems_os_family
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1cloudServiceOsFamilies~1{osFamilyName}~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_service_operating_systems_os_family/methods/get'
        insert: []
        update: []
        delete: []
    cloud_service_operating_systems_os_families:
      id: azure.compute.cloud_service_operating_systems_os_families
      name: cloud_service_operating_systems_os_families
      title: cloud_service_operating_systems_os_families
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Compute~1locations~1{location}~1cloudServiceOsFamilies~1?api-version=2022-09-04/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cloud_service_operating_systems_os_families/methods/list'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/?api-version=2023-10-02:
    put:
      tags:
        - Disks
      operationId: Disks_CreateOrUpdate
      description: Creates or updates a disk.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
      requestBody:
        description: Disk object supplied in the body of the Put disk operation.
        required: true
        x-ms-requestBody-name: disk
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disk'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Disks
      operationId: Disks_Update
      description: Updates (patches) a disk.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
      requestBody:
        description: Disk object supplied in the body of the Patch disk operation.
        required: true
        x-ms-requestBody-name: disk
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
      x-ms-long-running-operation: true
    get:
      tags:
        - Disks
      operationId: Disks_Get
      description: Gets information about a disk.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
    delete:
      tags:
        - Disks
      operationId: Disks_Delete
      description: Deletes a disk.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: If the disk is deleted, this is an expected error code.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/?api-version=2023-10-02:
    get:
      tags:
        - Disks
      operationId: Disks_ListByResourceGroup
      description: Lists all the disks under a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks/?api-version=2023-10-02:
    get:
      tags:
        - Disks
      operationId: Disks_List
      description: Lists all the disks under a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess/?api-version=2023-10-02:
    post:
      tags:
        - Disks
      operationId: Disks_GrantAccess
      description: Grants access to a disk.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
      requestBody:
        description: Access data object supplied in the body of the get disk access operation.
        required: true
        x-ms-requestBody-name: grantAccessData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantAccessData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUri'
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess/?api-version=2023-10-02:
    post:
      tags:
        - Disks
      operationId: Disks_RevokeAccess
      description: Revokes access to a disk.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/{proximityPlacementGroupName}/?api-version=2024-03-01:
    put:
      tags:
        - ProximityPlacementGroups
      operationId: ProximityPlacementGroups_CreateOrUpdate
      description: Create or update a proximity placement group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: proximityPlacementGroupName
          in: path
          description: The name of the proximity placement group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Proximity Placement Group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProximityPlacementGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityPlacementGroup'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityPlacementGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - ProximityPlacementGroups
      operationId: ProximityPlacementGroups_Update
      description: Update a proximity placement group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: proximityPlacementGroupName
          in: path
          description: The name of the proximity placement group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Proximity Placement Group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProximityPlacementGroupUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityPlacementGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - ProximityPlacementGroups
      operationId: ProximityPlacementGroups_Delete
      description: Delete a proximity placement group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: proximityPlacementGroupName
          in: path
          description: The name of the proximity placement group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - ProximityPlacementGroups
      operationId: ProximityPlacementGroups_Get
      description: Retrieves information about a proximity placement group .
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: proximityPlacementGroupName
          in: path
          description: The name of the proximity placement group.
          required: true
          schema:
            type: string
        - name: includeColocationStatus
          in: query
          description: includeColocationStatus=true enables fetching the colocation status of all the resources in the proximity placement group.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityPlacementGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/proximityPlacementGroups/?api-version=2024-03-01:
    get:
      tags:
        - ProximityPlacementGroups
      operationId: ProximityPlacementGroups_ListBySubscription
      description: Lists all proximity placement groups in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityPlacementGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/proximityPlacementGroups/?api-version=2024-03-01:
    get:
      tags:
        - ProximityPlacementGroups
      operationId: ProximityPlacementGroups_ListByResourceGroup
      description: Lists all proximity placement groups in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProximityPlacementGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/runCommands/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineRunCommands
      operationId: VirtualMachineRunCommands_List
      description: Lists all available run commands for a subscription in a location.
      parameters:
        - name: location
          in: path
          description: The location upon which run commands is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunCommandListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RunCommandListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/runCommands/{commandId}/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineRunCommands
      operationId: VirtualMachineRunCommands_Get
      description: Gets specific run command for a subscription in a location.
      parameters:
        - name: location
          in: path
          description: The location upon which run commands is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - name: commandId
          in: path
          description: The command id.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunCommandDocument'
            text/json:
              schema:
                $ref: '#/components/schemas/RunCommandDocument'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommand/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_RunCommand
      description: Run command on the VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Run command operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunCommandInput'
          text/json:
            schema:
              $ref: '#/components/schemas/RunCommandInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunCommandResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RunCommandResult'
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/runCommand/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_RunCommand
      description: Run command on a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Run command operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunCommandInput'
          text/json:
            schema:
              $ref: '#/components/schemas/RunCommandInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunCommandResult'
            text/json:
              schema:
                $ref: '#/components/schemas/RunCommandResult'
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/{runCommandName}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachineRunCommands
      operationId: VirtualMachineRunCommands_CreateOrUpdate
      description: The operation to create or update the run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the run command should be created or updated.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Virtual Machine RunCommand operation.
        required: true
        x-ms-requestBody-name: runCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineRunCommands
      operationId: VirtualMachineRunCommands_Update
      description: The operation to update the run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the run command should be updated.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Virtual Machine RunCommand operation.
        required: true
        x-ms-requestBody-name: runCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommandUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommandUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineRunCommands
      operationId: VirtualMachineRunCommands_Delete
      description: The operation to delete the run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the run command should be deleted.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineRunCommands
      operationId: VirtualMachineRunCommands_GetByVirtualMachine
      description: The operation to get the run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine containing the run command.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/runCommands/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineRunCommands
      operationId: VirtualMachineRunCommands_ListByVirtualMachine
      description: The operation to get all run commands of a Virtual Machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine containing the run command.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommandsListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommandsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/{runCommandName}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachineScaleSetVMRunCommands
      operationId: VirtualMachineScaleSetVMRunCommands_CreateOrUpdate
      description: The operation to create or update the VMSS VM run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Virtual Machine RunCommand operation.
        required: true
        x-ms-requestBody-name: runCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineScaleSetVMRunCommands
      operationId: VirtualMachineScaleSetVMRunCommands_Update
      description: The operation to update the VMSS VM run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Virtual Machine RunCommand operation.
        required: true
        x-ms-requestBody-name: runCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommandUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineRunCommandUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSetVMRunCommands
      operationId: VirtualMachineScaleSetVMRunCommands_Delete
      description: The operation to delete the VMSS VM run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSetVMRunCommands
      operationId: VirtualMachineScaleSetVMRunCommands_Get
      description: The operation to get the VMSS VM run command.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: runCommandName
          in: path
          description: The name of the virtual machine run command.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommand'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/runCommands/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSetVMRunCommands
      operationId: VirtualMachineScaleSetVMRunCommands_List
      description: The operation to get all run commands of an instance in Virtual Machine Scaleset.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommandsListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineRunCommandsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/?api-version=2024-03-01:
    put:
      tags:
        - CapacityReservationGroups
      operationId: CapacityReservationGroups_CreateOrUpdate
      description: The operation to create or update a capacity reservation group. When updating a capacity reservation group, only tags and sharing profile may be modified. Please refer to https://aka.ms/CapacityReservation for more details.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create capacity reservation Group.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityReservationGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservationGroup'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservationGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - CapacityReservationGroups
      operationId: CapacityReservationGroups_Update
      description: The operation to update a capacity reservation group. When updating a capacity reservation group, only tags and sharing profile may be modified.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update capacity reservation Group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityReservationGroupUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservationGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - CapacityReservationGroups
      operationId: CapacityReservationGroups_Delete
      description: The operation to delete a capacity reservation group. This operation is allowed only if all the associated resources are disassociated from the reservation group and all capacity reservations under the reservation group have also been deleted. Please refer to https://aka.ms/CapacityReservation for more details.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - CapacityReservationGroups
      operationId: CapacityReservationGroups_Get
      description: The operation that retrieves information about a capacity reservation group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' will retrieve the list of instance views of the capacity reservations under the capacity reservation group which is a snapshot of the runtime properties of a capacity reservation that is managed by the platform and can change outside of control plane operations.
          required: false
          schema:
            enum:
              - instanceView
            x-ms-enum:
              name: CapacityReservationGroupInstanceViewTypes
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservationGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/?api-version=2024-03-01:
    get:
      tags:
        - CapacityReservationGroups
      operationId: CapacityReservationGroups_ListByResourceGroup
      description: Lists all of the capacity reservation groups in the specified resource group. Use the nextLink property in the response to get the next page of capacity reservation groups.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. Based on the expand param(s) specified we return Virtual Machine or ScaleSet VM Instance or both resource Ids which are associated to capacity reservation group in the response.
          required: false
          schema:
            enum:
              - virtualMachineScaleSetVMs/$ref
              - virtualMachines/$ref
            x-ms-enum:
              name: ExpandTypesForGetCapacityReservationGroups
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservationGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/capacityReservationGroups/?api-version=2024-03-01:
    get:
      tags:
        - CapacityReservationGroups
      operationId: CapacityReservationGroups_ListBySubscription
      description: Lists all of the capacity reservation groups in the subscription. Use the nextLink property in the response to get the next page of capacity reservation groups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. Based on the expand param(s) specified we return Virtual Machine or ScaleSet VM Instance or both resource Ids which are associated to capacity reservation group in the response.
          required: false
          schema:
            enum:
              - virtualMachineScaleSetVMs/$ref
              - virtualMachines/$ref
            x-ms-enum:
              name: ExpandTypesForGetCapacityReservationGroups
              modelAsString: true
            type: string
        - name: resourceIdsOnly
          in: query
          description: The query option to fetch Capacity Reservation Group Resource Ids. <br> 'CreatedInSubscription' enables fetching Resource Ids for all capacity reservation group resources created in the subscription. <br> 'SharedWithSubscription' enables fetching Resource Ids for all capacity reservation group resources shared with the subscription. <br> 'All' enables fetching Resource Ids for all capacity reservation group resources shared with the subscription and created in the subscription.
          required: false
          schema:
            enum:
              - CreatedInSubscription
              - SharedWithSubscription
              - All
            x-ms-enum:
              name: ResourceIdOptionsForGetCapacityReservationGroups
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservationGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/{capacityReservationName}/?api-version=2024-03-01:
    put:
      tags:
        - CapacityReservations
      operationId: CapacityReservations_CreateOrUpdate
      description: The operation to create or update a capacity reservation. Please note some properties can be set only during capacity reservation creation. Please refer to https://aka.ms/CapacityReservation for more details.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - name: capacityReservationName
          in: path
          description: The name of the capacity reservation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create capacity reservation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityReservation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservation'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - CapacityReservations
      operationId: CapacityReservations_Update
      description: The operation to update a capacity reservation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - name: capacityReservationName
          in: path
          description: The name of the capacity reservation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update capacity reservation operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityReservationUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservation'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - CapacityReservations
      operationId: CapacityReservations_Delete
      description: The operation to delete a capacity reservation. This operation is allowed only when all the associated resources are disassociated from the capacity reservation. Please refer to https://aka.ms/CapacityReservation for more details.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - name: capacityReservationName
          in: path
          description: The name of the capacity reservation.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - CapacityReservations
      operationId: CapacityReservations_Get
      description: The operation that retrieves information about the capacity reservation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - name: capacityReservationName
          in: path
          description: The name of the capacity reservation.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the capacity reservation that is managed by the platform and can change outside of control plane operations.
          required: false
          schema:
            enum:
              - instanceView
            x-ms-enum:
              name: CapacityReservationInstanceViewTypes
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservation'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}/capacityReservations/?api-version=2024-03-01:
    get:
      tags:
        - CapacityReservation
      operationId: CapacityReservations_ListByCapacityReservationGroup
      description: Lists all of the capacity reservations in the specified capacity reservation group. Use the nextLink property in the response to get the next page of capacity reservations.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: capacityReservationGroupName
          in: path
          description: The name of the capacity reservation group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityReservationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/skus/?api-version=2021-07-01:
    get:
      tags:
        - Skus
        - AvailabilitySets
      operationId: ResourceSkus_List
      description: Gets the list of Microsoft.Compute SKUs available for your Subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation. Only **location** filter is supported currently.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/IncludeExtendedLocationsParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkusResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/sshPublicKeys/?api-version=2024-03-01:
    get:
      tags:
        - SshPublicKeys
      operationId: SshPublicKeys_ListBySubscription
      description: Lists all of the SSH public keys in the subscription. Use the nextLink property in the response to get the next page of SSH public keys.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshPublicKeysGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/?api-version=2024-03-01:
    get:
      tags:
        - SshPublicKeys
      operationId: SshPublicKeys_ListByResourceGroup
      description: Lists all of the SSH public keys in the specified resource group. Use the nextLink property in the response to get the next page of SSH public keys.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshPublicKeysGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}/?api-version=2024-03-01:
    put:
      tags:
        - SshPublicKeys
      operationId: SshPublicKeys_Create
      description: Creates a new SSH public key resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: sshPublicKeyName
          in: path
          description: The name of the SSH public key.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to create the SSH public key.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SshPublicKeyResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshPublicKeyResource'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshPublicKeyResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - SshPublicKeys
      operationId: SshPublicKeys_Update
      description: Updates a new SSH public key resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: sshPublicKeyName
          in: path
          description: The name of the SSH public key.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to update the SSH public key.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SshPublicKeyUpdateResource'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshPublicKeyResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - SshPublicKeys
      operationId: SshPublicKeys_Delete
      description: Delete an SSH public key.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: sshPublicKeyName
          in: path
          description: The name of the SSH public key.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - SshPublicKeys
      operationId: SshPublicKeys_Get
      description: Retrieves information about an SSH public key.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: sshPublicKeyName
          in: path
          description: The name of the SSH public key.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshPublicKeyResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}/generateKeyPair/?api-version=2024-03-01:
    post:
      tags:
        - SshPublicKeys
      operationId: SshPublicKeys_GenerateKeyPair
      description: Generates and returns a public/private key pair and populates the SSH public key resource with the public key. The length of the key will be 3072 bits. This operation can only be performed once per SSH public key resource.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: sshPublicKeyName
          in: path
          description: The name of the SSH public key.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to generate the SSH public key.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SshGenerateKeyPairInputParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SshPublicKeyGenerateKeyPairResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}/?api-version=2023-10-02:
    put:
      tags:
        - DiskEncryptionSets
      operationId: DiskEncryptionSets_CreateOrUpdate
      description: Creates or updates a disk encryption set
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskEncryptionSetNameParameter'
      requestBody:
        description: disk encryption set object supplied in the body of the Put disk encryption set operation.
        required: true
        x-ms-requestBody-name: diskEncryptionSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskEncryptionSet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskEncryptionSet'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskEncryptionSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - DiskEncryptionSets
      operationId: DiskEncryptionSets_Update
      description: Updates (patches) a disk encryption set.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskEncryptionSetNameParameter'
      requestBody:
        description: disk encryption set object supplied in the body of the Patch disk encryption set operation.
        required: true
        x-ms-requestBody-name: diskEncryptionSet
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskEncryptionSetUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskEncryptionSet'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskEncryptionSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DiskEncryptionSets
      operationId: DiskEncryptionSets_Get
      description: Gets information about a disk encryption set.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskEncryptionSetNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskEncryptionSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - DiskEncryptionSets
      operationId: DiskEncryptionSets_Delete
      description: Deletes a disk encryption set.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskEncryptionSetNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: If the disk encryption set is already deleted, this is an expected error code.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/?api-version=2023-10-02:
    get:
      tags:
        - DiskEncryptionSets
      operationId: DiskEncryptionSets_ListByResourceGroup
      description: Lists all the disk encryption sets under a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskEncryptionSetList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskEncryptionSets/?api-version=2023-10-02:
    get:
      tags:
        - DiskEncryptionSets
      operationId: DiskEncryptionSets_List
      description: Lists all the disk encryption sets under a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskEncryptionSetList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}/associatedResources/?api-version=2023-10-02:
    get:
      tags:
        - DiskEncryptionSets
      operationId: DiskEncryptionSets_ListAssociatedResources
      description: Lists all resources that are encrypted with this disk encryption set.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskEncryptionSetNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceUriList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions/{version}/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineExtensionImages
      operationId: VirtualMachineExtensionImages_Get
      description: Gets a virtual machine extension image.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtensionImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineExtensionImages
      operationId: VirtualMachineExtensionImages_ListTypes
      description: Gets a list of virtual machine extension image types.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineExtensionImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmextension/types/{type}/versions/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineExtensionImages
      operationId: VirtualMachineExtensionImages_ListVersions
      description: Gets a list of virtual machine extension image versions.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          required: false
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineExtensionImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-odata: '#/components/schemas/VirtualMachineExtensionImage'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/?api-version=2023-07-03:
    put:
      tags:
        - Galleries
      operationId: Galleries_CreateOrUpdate
      description: Create or update a Shared Image Gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create or update Shared Image Gallery operation.
        required: true
        x-ms-requestBody-name: gallery
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Gallery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Galleries
      operationId: Galleries_Update
      description: Update a Shared Image Gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery. The allowed characters are alphabets and numbers with dots and periods allowed in the middle. The maximum length is 80 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the update Shared Image Gallery operation.
        required: true
        x-ms-requestBody-name: gallery
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Galleries
      operationId: Galleries_Get
      description: Retrieves information about a Shared Image Gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery.
          required: true
          schema:
            type: string
        - name: $select
          in: query
          description: The select expression to apply on the operation.
          required: false
          schema:
            enum:
              - Permissions
            x-ms-enum:
              name: SelectPermissions
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/GalleryODataExpandQueryParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - Galleries
      operationId: Galleries_Delete
      description: Delete a Shared Image Gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/?api-version=2023-07-03:
    put:
      tags:
        - GalleryImages
      operationId: GalleryImages_CreateOrUpdate
      description: Create or update a gallery image definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition is to be created.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create or update gallery image operation.
        required: true
        x-ms-requestBody-name: galleryImage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - GalleryImages
      operationId: GalleryImages_Update
      description: Update a gallery image definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition is to be updated.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition to be updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the update gallery image operation.
        required: true
        x-ms-requestBody-name: galleryImage
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImageUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - GalleryImages
      operationId: GalleryImages_Get
      description: Retrieves information about a gallery image definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery from which the Image Definitions are to be retrieved.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition to be retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - GalleryImages
      operationId: GalleryImages_Delete
      description: Delete a gallery image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition is to be deleted.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}/?api-version=2023-07-03:
    put:
      tags:
        - GalleryImageVersions
      operationId: GalleryImageVersions_CreateOrUpdate
      description: Create or update a gallery image version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition resides.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition in which the Image Version is to be created.
          required: true
          schema:
            type: string
        - name: galleryImageVersionName
          in: path
          description: 'The name of the gallery image version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>'
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create or update gallery image version operation.
        required: true
        x-ms-requestBody-name: galleryImageVersion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImageVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageVersion'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageVersion'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - GalleryImageVersions
      operationId: GalleryImageVersions_Update
      description: Update a gallery image version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition resides.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition in which the Image Version is to be updated.
          required: true
          schema:
            type: string
        - name: galleryImageVersionName
          in: path
          description: 'The name of the gallery image version to be updated. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>'
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the update gallery image version operation.
        required: true
        x-ms-requestBody-name: galleryImageVersion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryImageVersionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - GalleryImageVersions
      operationId: GalleryImageVersions_Get
      description: Retrieves information about a gallery image version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition resides.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition in which the Image Version resides.
          required: true
          schema:
            type: string
        - name: galleryImageVersionName
          in: path
          description: The name of the gallery image version to be retrieved.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            enum:
              - ReplicationStatus
              - UefiSettings
            x-ms-enum:
              name: ReplicationStatusTypes
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - GalleryImageVersions
      operationId: GalleryImageVersions_Delete
      description: Delete a gallery image version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition resides.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the gallery image definition in which the Image Version resides.
          required: true
          schema:
            type: string
        - name: galleryImageVersionName
          in: path
          description: The name of the gallery image version to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/?api-version=2023-07-03:
    put:
      tags:
        - GalleryApplications
      operationId: GalleryApplications_CreateOrUpdate
      description: Create or update a gallery Application Definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition is to be created.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition to be created or updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create or update gallery Application operation.
        required: true
        x-ms-requestBody-name: galleryApplication
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryApplication'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplication'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplication'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplication'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - GalleryApplications
      operationId: GalleryApplications_Update
      description: Update a gallery Application Definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition is to be updated.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition to be updated. The allowed characters are alphabets and numbers with dots, dashes, and periods allowed in the middle. The maximum length is 80 characters.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the update gallery Application operation.
        required: true
        x-ms-requestBody-name: galleryApplication
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryApplicationUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplication'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - GalleryApplications
      operationId: GalleryApplications_Get
      description: Retrieves information about a gallery Application Definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery from which the Application Definitions are to be retrieved.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition to be retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplication'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - GalleryApplications
      operationId: GalleryApplications_Delete
      description: Delete a gallery Application.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition is to be deleted.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/{galleryApplicationVersionName}/?api-version=2023-07-03:
    put:
      tags:
        - GalleryApplicationVersions
      operationId: GalleryApplicationVersions_CreateOrUpdate
      description: Create or update a gallery Application Version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition resides.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition in which the Application Version is to be created.
          required: true
          schema:
            type: string
        - name: galleryApplicationVersionName
          in: path
          description: 'The name of the gallery Application Version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>'
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the create or update gallery Application Version operation.
        required: true
        x-ms-requestBody-name: galleryApplicationVersion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryApplicationVersion'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplicationVersion'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplicationVersion'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplicationVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - GalleryApplicationVersions
      operationId: GalleryApplicationVersions_Update
      description: Update a gallery Application Version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition resides.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition in which the Application Version is to be updated.
          required: true
          schema:
            type: string
        - name: galleryApplicationVersionName
          in: path
          description: 'The name of the gallery Application Version to be updated. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>'
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the update gallery Application Version operation.
        required: true
        x-ms-requestBody-name: galleryApplicationVersion
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalleryApplicationVersionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplicationVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - GalleryApplicationVersions
      operationId: GalleryApplicationVersions_Get
      description: Retrieves information about a gallery Application Version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition resides.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition in which the Application Version resides.
          required: true
          schema:
            type: string
        - name: galleryApplicationVersionName
          in: path
          description: The name of the gallery Application Version to be retrieved.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            enum:
              - ReplicationStatus
              - UefiSettings
            x-ms-enum:
              name: ReplicationStatusTypes
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplicationVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - GalleryApplicationVersions
      operationId: GalleryApplicationVersions_Delete
      description: Delete a gallery Application Version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition resides.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the gallery Application Definition in which the Application Version resides.
          required: true
          schema:
            type: string
        - name: galleryApplicationVersionName
          in: path
          description: The name of the gallery Application Version to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/?api-version=2023-07-03:
    get:
      tags:
        - Galleries
      operationId: Galleries_ListByResourceGroup
      description: List galleries under a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/galleries/?api-version=2023-07-03:
    get:
      tags:
        - Galleries
      operationId: Galleries_List
      description: List galleries under a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/?api-version=2023-07-03:
    get:
      tags:
        - GalleryImages
      operationId: GalleryImages_ListByGallery
      description: List gallery image definitions in a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery from which Image Definitions are to be listed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/?api-version=2023-07-03:
    get:
      tags:
        - GalleryImageVersions
      operationId: GalleryImageVersions_ListByGalleryImage
      description: List gallery image versions in a gallery image definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery in which the Image Definition resides.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the Shared Image Gallery Image Definition from which the Image Versions are to be listed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryImageVersionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/?api-version=2023-07-03:
    get:
      tags:
        - GalleryApplications
      operationId: GalleryApplications_ListByGallery
      description: List gallery Application Definitions in a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery from which Application Definitions are to be listed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplicationList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions/?api-version=2023-07-03:
    get:
      tags:
        - GalleryApplicationVersions
      operationId: GalleryApplicationVersions_ListByGalleryApplication
      description: List gallery Application Versions in a gallery Application Definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Application Gallery in which the Application Definition resides.
          required: true
          schema:
            type: string
        - name: galleryApplicationName
          in: path
          description: The name of the Shared Application Gallery Application Definition from which the Application Versions are to be listed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalleryApplicationVersionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/share/?api-version=2023-07-03:
    post:
      tags:
        - GallerySharingUpdate
      operationId: GallerySharingProfile_Update
      description: Update sharing profile of a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - name: galleryName
          in: path
          description: The name of the Shared Image Gallery.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the update gallery sharing profile.
        required: true
        x-ms-requestBody-name: sharingUpdate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharingUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingUpdate'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharingUpdate'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/?api-version=2023-10-02:
    put:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_CreateOrUpdate
      description: Creates or updates a disk access resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
      requestBody:
        description: disk access object supplied in the body of the Put disk access operation.
        required: true
        x-ms-requestBody-name: diskAccess
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskAccess'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskAccess'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskAccess'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_Update
      description: Updates (patches) a disk access resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
      requestBody:
        description: disk access object supplied in the body of the Patch disk access operation.
        required: true
        x-ms-requestBody-name: diskAccess
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiskAccessUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskAccess'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskAccess'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_Get
      description: Gets information about a disk access resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskAccess'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_Delete
      description: Deletes a disk access resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: If the disk access resource is already deleted, this is an expected error code.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/?api-version=2023-10-02:
    get:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_ListByResourceGroup
      description: Lists all the disk access resources under a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskAccessList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/diskAccesses/?api-version=2023-10-02:
    get:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_List
      description: Lists all the disk access resources under a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskAccessList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateLinkResources/?api-version=2023-10-02:
    get:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_GetPrivateLinkResources
      description: Gets the private link resources possible under disk access resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2023-10-02:
    put:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_UpdateAPrivateEndpointConnection
      description: Approve or reject a private endpoint connection under disk access resource, this can't be used to create a new private endpoint connection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        description: private endpoint connection object supplied in the body of the Put private endpoint connection operation.
        required: true
        x-ms-requestBody-name: privateEndpointConnection
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_GetAPrivateEndpointConnection
      description: Gets information about a private endpoint connection under a disk access resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_DeleteAPrivateEndpointConnection
      description: Deletes a private endpoint connection under a disk access resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: If the private endpoint connection is already deleted, this is an expected error code.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskAccesses/{diskAccessName}/privateEndpointConnections/?api-version=2023-10-02:
    get:
      tags:
        - DiskAccesses
      operationId: DiskAccesses_ListPrivateEndpointConnections
      description: List information about private endpoint connections under a disk access resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/DiskAccessNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/logAnalytics/apiAccess/getRequestRateByInterval/?api-version=2024-03-01:
    post:
      tags:
        - LogAnalytics
      operationId: LogAnalytics_ExportRequestRateByInterval
      description: Export logs that show Api requests made by this subscription in the given time window to show throttling activities.
      requestBody:
        description: Parameters supplied to the LogAnalytics getRequestRateByInterval Api.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRateByIntervalInput'
      parameters:
        - name: location
          in: path
          description: The location upon which virtual-machine-sizes is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsOperationResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/logAnalytics/apiAccess/getThrottledRequests/?api-version=2024-03-01:
    post:
      tags:
        - LogAnalytics
      operationId: LogAnalytics_ExportThrottledRequests
      description: Export logs that show total throttled Api requests for this subscription in the given time window.
      requestBody:
        description: Parameters supplied to the LogAnalytics getThrottledRequests Api.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThrottledRequestsInput'
      parameters:
        - name: location
          in: path
          description: The location upon which virtual-machine-sizes is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogAnalyticsOperationResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/?api-version=2024-03-01:
    put:
      tags:
        - RestorePointCollections
      operationId: RestorePointCollections_CreateOrUpdate
      description: The operation to create or update the restore point collection. Please refer to https://aka.ms/RestorePoints for more details. When updating a restore point collection, only tags may be modified.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: restorePointCollectionName
          in: path
          description: The name of the restore point collection.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Create or Update restore point collection operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePointCollection'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePointCollection'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePointCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - RestorePointCollections
      operationId: RestorePointCollections_Update
      description: The operation to update the restore point collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: restorePointCollectionName
          in: path
          description: The name of the restore point collection.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Update restore point collection operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePointCollectionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePointCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - RestorePointCollections
      operationId: RestorePointCollections_Delete
      description: The operation to delete the restore point collection. This operation will also delete all the contained restore points.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: restorePointCollectionName
          in: path
          description: The name of the Restore Point Collection.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - RestorePointCollections
      operationId: RestorePointCollections_Get
      description: The operation to get the restore point collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: restorePointCollectionName
          in: path
          description: The name of the restore point collection.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. If expand=restorePoints, server will return all contained restore points in the restorePointCollection.
          required: false
          schema:
            enum:
              - restorePoints
            x-ms-enum:
              name: RestorePointCollectionExpandOptions
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePointCollection'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/?api-version=2024-03-01:
    get:
      tags:
        - RestorePointCollections
      operationId: RestorePointCollections_List
      description: Gets the list of restore point collections in a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePointCollectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/restorePointCollections/?api-version=2024-03-01:
    get:
      tags:
        - RestorePointCollections
      operationId: RestorePointCollections_ListAll
      description: Gets the list of restore point collections in the subscription. Use nextLink property in the response to get the next page of restore point collections. Do this till nextLink is not null to fetch all the restore point collections.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePointCollectionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{restorePointName}/?api-version=2024-03-01:
    put:
      operationId: RestorePoints_Create
      description: The operation to create the restore point. Updating properties of an existing restore point is not allowed
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: restorePointCollectionName
          in: path
          description: The name of the restore point collection.
          required: true
          schema:
            type: string
        - name: restorePointName
          in: path
          description: The name of the restore point.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Create restore point operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestorePoint'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      operationId: RestorePoints_Delete
      description: The operation to delete the restore point.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: restorePointCollectionName
          in: path
          description: The name of the Restore Point Collection.
          required: true
          schema:
            type: string
        - name: restorePointName
          in: path
          description: The name of the restore point.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      operationId: RestorePoints_Get
      description: The operation to get the restore point.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: restorePointCollectionName
          in: path
          description: The name of the restore point collection.
          required: true
          schema:
            type: string
        - name: restorePointName
          in: path
          description: The name of the restore point.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' retrieves information about the run-time state of a restore point.
          required: false
          schema:
            enum:
              - instanceView
            x-ms-enum:
              name: RestorePointExpandOptions
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorePoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Compute/operations/?api-version=2024-03-01:
    get:
      tags:
        - ComputeOperations
      operationId: Operations_List
      description: Gets a list of compute operations.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeOperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/usages/?api-version=2024-03-01:
    get:
      tags:
        - Usage
      operationId: Usage_List
      description: Gets, for the specified location, the current compute resource usage information as well as the limits for compute resources under the subscription.
      parameters:
        - name: location
          in: path
          description: The location for which resource usage is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsagesResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/vmSizes/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineSizes
      operationId: VirtualMachineSizes_List
      description: This API is deprecated. Use [Resources Skus](https://docs.microsoft.com/rest/api/compute/resourceskus/list)
      parameters:
        - name: location
          in: path
          description: The location upon which virtual-machine-sizes is queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineSizeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/?api-version=2023-07-03:
    get:
      tags:
        - CommunityGalleries
      operationId: CommunityGalleries_Get
      description: Get a community gallery by gallery public name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/PublicGalleryNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityGallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/images/{galleryImageName}/?api-version=2023-07-03:
    get:
      tags:
        - CommunityGalleryImages
      operationId: CommunityGalleryImages_Get
      description: Get a community gallery image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/PublicGalleryNameParameter'
        - $ref: '#/components/parameters/GalleryImageNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityGalleryImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}/?api-version=2023-07-03:
    get:
      tags:
        - CommunityGalleryImageVersions
      operationId: CommunityGalleryImageVersions_Get
      description: Get a community gallery image version.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/PublicGalleryNameParameter'
        - $ref: '#/components/parameters/GalleryImageNameParameter'
        - $ref: '#/components/parameters/GalleryImageVersionNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityGalleryImageVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/images/?api-version=2023-07-03:
    get:
      tags:
        - CommunityGalleryImages
      operationId: CommunityGalleryImages_List
      description: List community gallery images inside a gallery.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/PublicGalleryNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityGalleryImageList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/communityGalleries/{publicGalleryName}/images/{galleryImageName}/versions/?api-version=2023-07-03:
    get:
      tags:
        - CommunityGalleryImageVersions
      operationId: CommunityGalleryImageVersions_List
      description: List community gallery image versions inside an image.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - $ref: '#/components/parameters/PublicGalleryNameParameter'
        - $ref: '#/components/parameters/GalleryImageNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityGalleryImageVersionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}/?api-version=2024-03-01:
    put:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_CreateOrUpdate
      description: Create or update an availability set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: availabilitySetName
          in: path
          description: The name of the availability set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Availability Set operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilitySet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Update
      description: Update an availability set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: availabilitySetName
          in: path
          description: The name of the availability set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Availability Set operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilitySetUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Delete
      description: Delete an availability set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: availabilitySetName
          in: path
          description: The name of the availability set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_Get
      description: Retrieves information about an availability set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: availabilitySetName
          in: path
          description: The name of the availability set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/availabilitySets/?api-version=2024-03-01:
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_ListBySubscription
      description: Lists all availability sets in a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: The expand expression to apply to the operation. Allowed values are 'instanceView'.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/?api-version=2024-03-01:
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_List
      description: Lists all availability sets in a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilitySetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}/vmSizes/?api-version=2024-03-01:
    get:
      tags:
        - AvailabilitySets
      operationId: AvailabilitySets_ListAvailableSizes
      description: Lists all available virtual machine sizes that can be used to create a new virtual machine in an existing availability set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: availabilitySetName
          in: path
          description: The name of the availability set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineSizeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/{version}/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImages_Get
      description: Gets a virtual machine image.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - name: offer
          in: path
          description: A valid image publisher offer.
          required: true
          schema:
            type: string
        - name: skus
          in: path
          description: A valid image SKU.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: A valid image SKU version.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImages_List
      description: Gets a list of all virtual machine image versions for the specified location, publisher, offer, and SKU.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - name: offer
          in: path
          description: A valid image publisher offer.
          required: true
          schema:
            type: string
        - name: skus
          in: path
          description: A valid image SKU.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          required: false
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImages_ListOffers
      description: Gets a list of virtual machine image offers for the specified location and publisher.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImages_ListPublishers
      description: Gets a list of virtual machine image publishers for the specified Azure location.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImages_ListSkus
      description: Gets a list of virtual machine image SKUs for the specified location, publisher, and offer.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - name: offer
          in: path
          description: A valid image publisher offer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/{version}/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImagesEdgeZone_Get
      description: Gets a virtual machine image in an edge zone.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: edgeZone
          in: path
          description: The name of the edge zone.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - name: offer
          in: path
          description: A valid image publisher offer.
          required: true
          schema:
            type: string
        - name: skus
          in: path
          description: A valid image SKU.
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: A valid image SKU version.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/{skus}/versions/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImagesEdgeZone_List
      description: Gets a list of all virtual machine image versions for the specified location, edge zone, publisher, offer, and SKU.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: edgeZone
          in: path
          description: The name of the edge zone.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - name: offer
          in: path
          description: A valid image publisher offer.
          required: true
          schema:
            type: string
        - name: skus
          in: path
          description: A valid image SKU.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - name: $top
          in: query
          description: An integer value specifying the number of images to return that matches supplied values.
          required: false
          schema:
            format: int32
            type: integer
        - name: $orderby
          in: query
          description: Specifies the order of the results returned. Formatted as an OData query.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImagesEdgeZone_ListOffers
      description: Gets a list of virtual machine image offers for the specified location, edge zone and publisher.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: edgeZone
          in: path
          description: The name of the edge zone.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImagesEdgeZone_ListPublishers
      description: Gets a list of virtual machine image publishers for the specified Azure location and edge zone.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: edgeZone
          in: path
          description: The name of the edge zone.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/vmimages/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImages_ListByEdgeZone
      description: Gets a list of all virtual machine image versions for the specified edge zone
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: edgeZone
          in: path
          description: The name of the edge zone.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VmImagesInEdgeZoneListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/edgeZones/{edgeZone}/publishers/{publisherName}/artifacttypes/vmimage/offers/{offer}/skus/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineImages
      operationId: VirtualMachineImagesEdgeZone_ListSkus
      description: Gets a list of virtual machine image SKUs for the specified location, edge zone, publisher, and offer.
      parameters:
        - name: location
          in: path
          description: The name of a supported Azure region.
          required: true
          schema:
            type: string
        - name: edgeZone
          in: path
          description: The name of the edge zone.
          required: true
          schema:
            type: string
        - name: publisherName
          in: path
          description: A valid image publisher.
          required: true
          schema:
            type: string
        - name: offer
          in: path
          description: A valid image publisher offer.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VirtualMachineImageResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/virtualMachineScaleSets/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ListByLocation
      description: Gets all the VM scale sets under the specified subscription for the specified location.
      parameters:
        - name: location
          in: path
          description: The location for which VM scale sets under the subscription are queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_CreateOrUpdate
      description: Create or update a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: The scale set object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSet'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Update
      description: Update a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: The scale set object.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Delete
      description: Deletes a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete a VM scale set. (Feature in Preview)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Get
      description: Display information about a virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'UserData' retrieves the UserData property of the VM scale set that was provided by the user during the VM scale set Create/Update operation
          required: false
          schema:
            enum:
              - userData
            x-ms-enum:
              name: ExpandTypesForGetVMScaleSets
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSet'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/deallocate/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Deallocate
      description: Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: hibernate
          in: query
          description: Optional parameter to hibernate a virtual machine from the VM scale set. (This feature is available for VMSS with Flexible OrchestrationMode only)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/delete/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_DeleteInstances
      description: Deletes virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete virtual machines from the VM scale set. (Feature in Preview)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: true
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceRequiredIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/instanceView/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_GetInstanceView
      description: Gets the status of a VM scale set instance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetInstanceView'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_List
      description: Gets a list of all VM scale sets under a resource group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/{vmssExtensionName}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_CreateOrUpdate
      description: The operation to create or update an extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be create or updated.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create VM scale set Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_Update
      description: The operation to update an extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be updated.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update VM scale set Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetExtensionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_Delete
      description: The operation to delete the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be deleted.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_Get
      description: The operation to get the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set containing the extension.
          required: true
          schema:
            type: string
        - name: vmssExtensionName
          in: path
          description: The name of the VM scale set extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensions/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSetExtensions
      operationId: VirtualMachineScaleSetExtensions_List
      description: Gets a list of all extensions in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set containing the extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetExtensionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachineScaleSets/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ListAll
      description: Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListWithLinkResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/skus/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ListSkus
      description: Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListSkusResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osUpgradeHistory/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_GetOSUpgradeHistory
      description: Gets list of OS upgrades on a VM scale set instance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetListOSUpgradeHistory'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/poweroff/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_PowerOff
      description: Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: skipShutdown
          in: query
          description: The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/restart/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Restart
      description: Restarts one or more virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/start/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Start
      description: Starts one or more virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reapply/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Reapply
      description: Reapplies the Virtual Machine Scale Set Virtual Machine Profile to the Virtual Machine Instances
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/redeploy/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Redeploy
      description: Shuts down all the virtual machines in the virtual machine scale set, moves them to a new node, and powers them back on.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/performMaintenance/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_PerformMaintenance
      description: 'Perform maintenance on one or more virtual machines in a VM scale set. Operation on instances which are not eligible for perform maintenance will be failed. Please refer to best practices for more details: https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/manualupgrade/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_UpdateInstances
      description: Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: true
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceRequiredIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimage/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_Reimage
      description: Reimages (upgrade the operating system) one or more virtual machines in a VM scale set which don't have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for Reimaging VM ScaleSet.
        required: false
        x-ms-requestBody-name: vmScaleSetReimageInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetReimageParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/reimageall/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ReimageAll
      description: Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/approveRollingUpgrade/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ApproveRollingUpgrade
      description: Approve upgrade on deferred rolling upgrades for OS disks in the virtual machines in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: A list of virtual machine instance IDs from the VM scale set.
        required: false
        x-ms-requestBody-name: vmInstanceIDs
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceIDs'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/cancel/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_Cancel
      description: Cancels the current virtual machine scale set rolling upgrade.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/osRollingUpgrade/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_StartOSUpgrade
      description: Starts a rolling upgrade to move all virtual machine scale set instances to the latest available Platform Image OS version. Instances which are already running the latest available OS version are not affected.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/extensionRollingUpgrade/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_StartExtensionUpgrade
      description: Starts a rolling upgrade to move all extensions for all virtual machine scale set instances to the latest available extension version. Instances which are already running the latest extension versions are not affected.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/rollingUpgrades/latest/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSetRollingUpgrades
      operationId: VirtualMachineScaleSetRollingUpgrades_GetLatest
      description: Gets the status of the latest virtual machine scale set rolling upgrade.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RollingUpgradeStatusInfo'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/forceRecoveryServiceFabricPlatformUpdateDomainWalk/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ForceRecoveryServiceFabricPlatformUpdateDomainWalk
      description: Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: platformUpdateDomain
          in: query
          description: The platform update domain for which a manual recovery walk is requested
          required: true
          schema:
            type: integer
        - name: zone
          in: query
          description: The zone in which the manual recovery walk is requested for cross zone virtual machine scale set
          required: false
          schema:
            type: string
        - name: placementGroupId
          in: query
          description: The placement group id for which the manual recovery walk is requested.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecoveryWalkResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/convertToSinglePlacementGroup/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_ConvertToSinglePlacementGroup
      description: Converts SinglePlacementGroup property to false for a existing virtual machine scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the virtual machine scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The input object for ConvertToSinglePlacementGroup API.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VMScaleSetConvertToSinglePlacementGroupInput'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/setOrchestrationServiceState/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSets
      operationId: VirtualMachineScaleSets_SetOrchestrationServiceState
      description: Changes ServiceState property for a given service
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the virtual machine scale set to create or update.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The input object for SetOrchestrationServiceState API.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrchestrationServiceStateInput'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/{vmExtensionName}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_CreateOrUpdate
      description: The operation to create or update the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_Update
      description: The operation to update the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMExtensionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_Delete
      description: The operation to delete the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_Get
      description: The operation to get the VMSS VM extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/extensions/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSetVMExtensions
      operationId: VirtualMachineScaleSetVMExtensions_List
      description: The operation to get all extensions of an instance in Virtual Machine Scaleset.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMExtensionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/reimage/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Reimage
      description: Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters for the Reimaging Virtual machine in ScaleSet.
        required: false
        x-ms-requestBody-name: vmScaleSetVMReimageInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVMReimageParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/reimageall/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_ReimageAll
      description: Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/approveRollingUpgrade/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_ApproveRollingUpgrade
      description: Approve upgrade on deferred rolling upgrade for OS disk on a VM scale set instance.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/deallocate/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Deallocate
      description: Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Update
      description: Updates a virtual machine of a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set where the extension should be create or updated.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Update Virtual Machine Scale Sets VM operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineScaleSetVM'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVM'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVM'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Delete
      description: Deletes a virtual machine from a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete a virtual machine from a VM scale set. (Feature in Preview)
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Get
      description: Gets a virtual machine from a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' will retrieve the instance view of the virtual machine. 'UserData' will retrieve the UserData of the virtual machine.
          required: false
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVM'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/instanceView/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_GetInstanceView
      description: Gets the status of a virtual machine from a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMInstanceView'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{virtualMachineScaleSetName}/virtualMachines/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_List
      description: Gets a list of all virtual machines in a VM scale sets.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: virtualMachineScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply to the operation. Allowed values are 'startswith(instanceView/statuses/code, 'PowerState') eq true', 'properties/latestModelApplied eq true', 'properties/latestModelApplied eq false'.
          required: false
          schema:
            type: string
        - name: $select
          in: query
          description: The list parameters. Allowed values are 'instanceView', 'instanceView/statuses'.
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply to the operation. Allowed values are 'instanceView'.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineScaleSetVMListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/VirtualMachineScaleSetVM'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/poweroff/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_PowerOff
      description: Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: skipShutdown
          in: query
          description: The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/restart/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Restart
      description: Restarts a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/start/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Start
      description: Starts a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/redeploy/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_Redeploy
      description: Shuts down the virtual machine in the virtual machine scale set, moves it to a new node, and powers it back on.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/retrieveBootDiagnosticsData/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_RetrieveBootDiagnosticsData
      description: The operation to retrieve SAS URIs of boot diagnostic logs for a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - name: sasUriExpirationTimeInMinutes
          in: query
          description: Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes. **Note:** If not specified, SAS URIs will be generated with a default expiration duration of 120 minutes.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveBootDiagnosticsDataResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/performMaintenance/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_PerformMaintenance
      description: Performs maintenance on a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualMachines/{instanceId}/simulateEviction/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_SimulateEviction
      description: The operation to simulate the eviction of spot virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}/virtualmachines/{instanceId}/attachDetachDataDisks/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachineScaleSetVMs
      operationId: VirtualMachineScaleSetVMs_AttachDetachDataDisks
      description: Attach and detach data disks to/from a virtual machine in a VM scale set.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmScaleSetName
          in: path
          description: The name of the VM scale set.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The instance ID of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the attach and detach data disks operation on a Virtual Machine Scale Sets VM.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachDataDisksRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageProfile'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/?api-version=2023-10-02:
    get:
      tags:
        - IncrementalRestorePoints
      operationId: DiskRestorePoint_Get
      description: Get disk restorePoint resource
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RestorePointCollectionNameParameter'
        - $ref: '#/components/parameters/VmRestorePointNameParameter'
        - $ref: '#/components/parameters/DiskRestorePointNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskRestorePoint'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/?api-version=2023-10-02:
    get:
      tags:
        - IncrementalRestorePoints
      operationId: DiskRestorePoint_ListByRestorePoint
      description: Lists diskRestorePoints under a vmRestorePoint.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RestorePointCollectionNameParameter'
        - $ref: '#/components/parameters/VmRestorePointNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiskRestorePointList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/beginGetAccess/?api-version=2023-10-02:
    post:
      tags:
        - IncrementalRestorePoints
      operationId: DiskRestorePoint_GrantAccess
      description: Grants access to a diskRestorePoint.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RestorePointCollectionNameParameter'
        - $ref: '#/components/parameters/VmRestorePointNameParameter'
        - $ref: '#/components/parameters/DiskRestorePointNameParameter'
      requestBody:
        description: Access data object supplied in the body of the get disk access operation.
        required: true
        x-ms-requestBody-name: grantAccessData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantAccessData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUri'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/restorePointCollections/{restorePointCollectionName}/restorePoints/{vmRestorePointName}/diskRestorePoints/{diskRestorePointName}/endGetAccess/?api-version=2023-10-02:
    post:
      tags:
        - IncrementalRestorePoints
      operationId: DiskRestorePoint_RevokeAccess
      description: Revokes access to a diskRestorePoint.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RestorePointCollectionNameParameter'
        - $ref: '#/components/parameters/VmRestorePointNameParameter'
        - $ref: '#/components/parameters/DiskRestorePointNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_CreateOrUpdate
      description: The operation to create or update the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the extension should be created or updated.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineExtension'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_Update
      description: The operation to update the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the extension should be updated.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Virtual Machine Extension operation.
        required: true
        x-ms-requestBody-name: extensionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineExtensionUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_Delete
      description: The operation to delete the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine where the extension should be deleted.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_Get
      description: The operation to get the extension.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine containing the extension.
          required: true
          schema:
            type: string
        - name: vmExtensionName
          in: path
          description: The name of the virtual machine extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtension'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachineExtensions
      operationId: VirtualMachineExtensions_List
      description: The operation to get all extensions of a Virtual Machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine containing the extension.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineExtensionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/virtualMachines/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListByLocation
      description: Gets all the virtual machines under the specified subscription for the specified location.
      parameters:
        - name: location
          in: path
          description: The location for which virtual machines under the subscription are queried.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/capture/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Capture
      description: Captures the VM by copying virtual hard disks of the VM and outputs a template that can be used to create similar VMs.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Capture Virtual Machine operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineCaptureParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineCaptureResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/?api-version=2024-03-01:
    put:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_CreateOrUpdate
      description: The operation to create or update a virtual machine. Please note some properties can be set only during virtual machine creation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Create Virtual Machine operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachine'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Update
      description: The operation to update a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: If-Match
          in: header
          description: The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
          required: false
          x-ms-client-name: IfMatch
          schema:
            type: string
        - name: If-None-Match
          in: header
          description: Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported.
          required: false
          x-ms-client-name: IfNoneMatch
          schema:
            type: string
      requestBody:
        description: Parameters supplied to the Update Virtual Machine operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Delete
      description: The operation to delete a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: forceDeletion
          in: query
          description: Optional parameter to force delete virtual machines.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Get
      description: Retrieves information about the model view or the instance view of a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation.
          required: false
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachine'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/instanceView/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_InstanceView
      description: Retrieves information about the run-time state of a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstanceView'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/convertToManagedDisks/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ConvertToManagedDisks
      description: Converts virtual machine disks from blob-based to managed disks. Virtual machine must be stop-deallocated before invoking this operation.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/deallocate/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Deallocate
      description: Shuts down the virtual machine and releases the compute resources. You are not billed for the compute resources that this virtual machine uses.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: hibernate
          in: query
          description: Optional parameter to hibernate a virtual machine.
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/generalize/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Generalize
      description: Sets the OS state of the virtual machine to generalized. It is recommended to sysprep the virtual machine before performing this operation. For Windows, please refer to [Create a managed image of a generalized VM in Azure](https://docs.microsoft.com/azure/virtual-machines/windows/capture-image-resource). For Linux, please refer to [How to create an image of a virtual machine or VHD](https://docs.microsoft.com/azure/virtual-machines/linux/capture-image).
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_List
      description: Lists all of the virtual machines in the specified resource group. Use the nextLink property in the response to get the next page of virtual machines.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}'
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on operation. 'instanceView' enables fetching run time status of all Virtual Machines, this can only be specified if a valid $filter option is specified
          required: false
          schema:
            enum:
              - instanceView
            x-ms-enum:
              name: ExpandTypeForListVMs
              modelAsString: true
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/virtualMachines/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListAll
      description: Lists all of the virtual machines in the specified subscription. Use the nextLink property in the response to get the next page of virtual machines.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: statusOnly
          in: query
          description: statusOnly=true enables fetching run time status of all Virtual Machines in the subscription.
          required: false
          schema:
            type: string
        - name: $filter
          in: query
          description: The system query option to filter VMs returned in the response. Allowed value is 'virtualMachineScaleSet/id' eq /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmssName}'
          required: false
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on operation. 'instanceView' enables fetching run time status of all Virtual Machines, this can only be specified if a valid $filter option is specified
          required: false
          schema:
            enum:
              - instanceView
            x-ms-enum:
              name: ExpandTypesForListVMs
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/vmSizes/?api-version=2024-03-01:
    get:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_ListAvailableSizes
      description: Lists all available virtual machine sizes to which the specified virtual machine can be resized.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineSizeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/powerOff/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_PowerOff
      description: The operation to power off (stop) a virtual machine. The virtual machine can be restarted with the same provisioned resources. You are still charged for this virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: skipShutdown
          in: query
          description: The parameter to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Default value for this flag is false if not specified
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/reapply/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Reapply
      description: The operation to reapply a virtual machine's state.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/restart/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Restart
      description: The operation to restart a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/start/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Start
      description: The operation to start a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/redeploy/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Redeploy
      description: Shuts down the virtual machine, moves it to a new node, and powers it back on.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/reimage/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_Reimage
      description: 'Reimages (upgrade the operating system) a virtual machine which don''t have a ephemeral OS disk, for virtual machines who have a ephemeral OS disk the virtual machine is reset to initial state. NOTE: The retaining of old OS disk depends on the value of deleteOption of OS disk. If deleteOption is detach, the old OS disk will be preserved after reimage. If deleteOption is delete, the old OS disk will be deleted after reimage. The deleteOption of the OS disk should be updated accordingly before performing the reimage.'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Reimage Virtual Machine operation.
        required: false
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineReimageParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/retrieveBootDiagnosticsData/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_RetrieveBootDiagnosticsData
      description: The operation to retrieve SAS URIs for a virtual machine's boot diagnostic logs.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - name: sasUriExpirationTimeInMinutes
          in: query
          description: Expiration duration in minutes for the SAS URIs with a value between 1 to 1440 minutes. **Note:** If not specified, SAS URIs will be generated with a default expiration duration of 120 minutes.
          required: false
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveBootDiagnosticsDataResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/performMaintenance/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_PerformMaintenance
      description: The operation to perform maintenance on a virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/simulateEviction/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_SimulateEviction
      description: The operation to simulate the eviction of spot virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: false
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/assessPatches/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_AssessPatches
      description: Assess patches on the VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineAssessPatchesResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/installPatches/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_InstallPatches
      description: Installs patches on the VM.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Input for InstallPatches as directly received by the API
        required: true
        x-ms-requestBody-name: installPatchesInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualMachineInstallPatchesParameters'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualMachineInstallPatchesResult'
        '202':
          description: Accepted
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/attachDetachDataDisks/?api-version=2024-03-01:
    post:
      tags:
        - VirtualMachines
      operationId: VirtualMachines_AttachDetachDataDisks
      description: Attach and detach data disks to/from the virtual machine.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: vmName
          in: path
          description: The name of the virtual machine.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the attach and detach data disks operation on the virtual machine.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDetachDataDisksRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageProfile'
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}/?api-version=2024-03-01:
    put:
      tags:
        - Images
      operationId: Images_CreateOrUpdate
      description: Create or update an image.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: imageName
          in: path
          description: The name of the image.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Image operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Images
      operationId: Images_Update
      description: Update an image.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: imageName
          in: path
          description: The name of the image.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Image operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Images
      operationId: Images_Delete
      description: Deletes an Image.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: imageName
          in: path
          description: The name of the image.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - Images
      operationId: Images_Get
      description: Gets an image.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: imageName
          in: path
          description: The name of the image.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation.
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/?api-version=2024-03-01:
    get:
      tags:
        - Images
      operationId: Images_ListByResourceGroup
      description: Gets the list of images under a resource group. Use nextLink property in the response to get the next page of Images. Do this till nextLink is null to fetch all the Images.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/images/?api-version=2024-03-01:
    get:
      tags:
        - Images
      operationId: Images_List
      description: Gets the list of Images in the subscription. Use nextLink property in the response to get the next page of Images. Do this till nextLink is null to fetch all the Images.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/?api-version=2023-10-02:
    put:
      tags:
        - Snapshots
      operationId: Snapshots_CreateOrUpdate
      description: Creates or updates a snapshot.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      requestBody:
        description: Snapshot object supplied in the body of the Put disk operation.
        required: true
        x-ms-requestBody-name: snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snapshot'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Snapshots
      operationId: Snapshots_Update
      description: Updates (patches) a snapshot.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      requestBody:
        description: Snapshot object supplied in the body of the Patch snapshot operation.
        required: true
        x-ms-requestBody-name: snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnapshotUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
      x-ms-long-running-operation: true
    get:
      tags:
        - Snapshots
      operationId: Snapshots_Get
      description: Gets information about a snapshot.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snapshot'
    delete:
      tags:
        - Snapshots
      operationId: Snapshots_Delete
      description: Deletes a snapshot.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: If the snapshot is deleted, this is an expected error code.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/?api-version=2023-10-02:
    get:
      tags:
        - Snapshots
      operationId: Snapshots_ListByResourceGroup
      description: Lists snapshots under a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots/?api-version=2023-10-02:
    get:
      tags:
        - Snapshots
      operationId: Snapshots_List
      description: Lists snapshots under a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotList'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess/?api-version=2023-10-02:
    post:
      tags:
        - Snapshots
      operationId: Snapshots_GrantAccess
      description: Grants access to a snapshot.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      requestBody:
        description: Access data object supplied in the body of the get snapshot access operation.
        required: true
        x-ms-requestBody-name: grantAccessData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrantAccessData'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUri'
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess/?api-version=2023-10-02:
    post:
      tags:
        - Snapshots
      operationId: Snapshots_RevokeAccess
      description: Revokes access to a snapshot.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SnapshotNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/?api-version=2024-03-01:
    put:
      tags:
        - DedicatedHostGroups
      operationId: DedicatedHostGroups_CreateOrUpdate
      description: Create or update a dedicated host group. For details of Dedicated Host and Dedicated Host Groups please see [Dedicated Host Documentation] (https://go.microsoft.com/fwlink/?linkid=2082596)
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Dedicated Host Group.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DedicatedHostGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostGroup'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - DedicatedHostGroups
      operationId: DedicatedHostGroups_Update
      description: Update an dedicated host group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Dedicated Host Group operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DedicatedHostGroupUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - DedicatedHostGroups
      operationId: DedicatedHostGroups_Delete
      description: Delete a dedicated host group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - DedicatedHostGroups
      operationId: DedicatedHostGroups_Get
      description: Retrieves information about a dedicated host group.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' will retrieve the list of instance views of the dedicated hosts under the dedicated host group. 'UserData' is not supported for dedicated host group.
          required: false
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostGroup'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/?api-version=2024-03-01:
    get:
      tags:
        - DedicatedHostGroups
      operationId: DedicatedHostGroups_ListByResourceGroup
      description: Lists all of the dedicated host groups in the specified resource group. Use the nextLink property in the response to get the next page of dedicated host groups.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/hostGroups/?api-version=2024-03-01:
    get:
      tags:
        - DedicatedHostGroups
      operationId: DedicatedHostGroups_ListBySubscription
      description: Lists all of the dedicated host groups in the subscription. Use the nextLink property in the response to get the next page of dedicated host groups.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostGroupListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}/?api-version=2024-03-01:
    put:
      tags:
        - DedicatedHosts
      operationId: DedicatedHosts_CreateOrUpdate
      description: Create or update a dedicated host .
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - name: hostName
          in: path
          description: The name of the dedicated host .
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Create Dedicated Host.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DedicatedHost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHost'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHost'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - DedicatedHosts
      operationId: DedicatedHosts_Update
      description: Update a dedicated host .
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - name: hostName
          in: path
          description: The name of the dedicated host .
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Parameters supplied to the Update Dedicated Host operation.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DedicatedHostUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHost'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - DedicatedHosts
      operationId: DedicatedHosts_Delete
      description: Delete a dedicated host.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - name: hostName
          in: path
          description: The name of the dedicated host.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - DedicatedHosts
      operationId: DedicatedHosts_Get
      description: Retrieves information about a dedicated host.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - name: hostName
          in: path
          description: The name of the dedicated host.
          required: true
          schema:
            type: string
        - name: $expand
          in: query
          description: The expand expression to apply on the operation. 'InstanceView' will retrieve the list of instance views of the dedicated host. 'UserData' is not supported for dedicated host.
          required: false
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHost'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/?api-version=2024-03-01:
    get:
      tags:
        - DedicatedHost
      operationId: DedicatedHosts_ListByHostGroup
      description: Lists all of the dedicated hosts in the specified dedicated host group. Use the nextLink property in the response to get the next page of dedicated hosts.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}/restart/?api-version=2024-03-01:
    post:
      tags:
        - DedicatedHost
      operationId: DedicatedHosts_Restart
      description: Restart the dedicated host. The operation will complete successfully once the dedicated host has restarted and is running. To determine the health of VMs deployed on the dedicated host after the restart check the Resource Health Center in the Azure Portal. Please refer to https://docs.microsoft.com/azure/service-health/resource-health-overview for more details.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            type: string
        - name: hostName
          in: path
          description: The name of the dedicated host.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}/redeploy/?api-version=2024-03-01:
    post:
      tags:
        - DedicatedHost
      operationId: DedicatedHosts_Redeploy
      description: Redeploy the dedicated host. The operation will complete successfully once the dedicated host has migrated to a new node and is running. To determine the health of VMs deployed on the dedicated host after the redeploy check the Resource Health Center in the Azure Portal. Please refer to https://docs.microsoft.com/azure/service-health/resource-health-overview for more details.
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - name: hostName
          in: path
          description: The name of the dedicated host.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}/hostSizes/?api-version=2024-03-01:
    get:
      tags:
        - DedicatedHost
      operationId: DedicatedHosts_ListAvailableSizes
      description: 'Lists all available dedicated host sizes to which the specified dedicated host can be resized. NOTE: The dedicated host sizes provided can be used to only scale up the existing dedicated host.'
      parameters:
        - name: resourceGroupName
          in: path
          description: The name of the resource group.
          required: true
          schema:
            type: string
        - name: hostGroupName
          in: path
          description: The name of the dedicated host group.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - name: hostName
          in: path
          description: The name of the dedicated host.
          required: true
          schema:
            pattern: ^[-\w\._]+$
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DedicatedHostSizeListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/?api-version=2023-07-03:
    get:
      tags:
        - SharedGalleries
      operationId: SharedGalleries_List
      description: List shared galleries by subscription id or tenant id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - name: sharedTo
          in: query
          description: The query parameter to decide what shared galleries to fetch when doing listing operations.
          required: false
          schema:
            enum:
              - tenant
            x-ms-enum:
              name: SharedToValues
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedGalleryList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/?api-version=2023-07-03:
    get:
      tags:
        - SharedGalleryImages
      operationId: SharedGalleryImages_List
      description: List shared gallery images by subscription id or tenant id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - name: galleryUniqueName
          in: path
          description: The unique name of the Shared Gallery.
          required: true
          schema:
            type: string
        - name: sharedTo
          in: query
          description: The query parameter to decide what shared galleries to fetch when doing listing operations.
          required: false
          schema:
            enum:
              - tenant
            x-ms-enum:
              name: SharedToValues
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedGalleryImageList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/{galleryImageName}/versions/?api-version=2023-07-03:
    get:
      tags:
        - SharedGalleryImageVersions
      operationId: SharedGalleryImageVersions_List
      description: List shared gallery image versions by subscription id or tenant id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - name: galleryUniqueName
          in: path
          description: The unique name of the Shared Gallery.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the Shared Gallery Image Definition from which the Image Versions are to be listed.
          required: true
          schema:
            type: string
        - name: sharedTo
          in: query
          description: The query parameter to decide what shared galleries to fetch when doing listing operations.
          required: false
          schema:
            enum:
              - tenant
            x-ms-enum:
              name: SharedToValues
              modelAsString: true
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedGalleryImageVersionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/?api-version=2023-07-03:
    get:
      tags:
        - SharedGalleries
      operationId: SharedGalleries_Get
      description: Get a shared gallery by subscription id or tenant id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - name: galleryUniqueName
          in: path
          description: The unique name of the Shared Gallery.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedGallery'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/{galleryImageName}/?api-version=2023-07-03:
    get:
      tags:
        - SharedGalleryImages
      operationId: SharedGalleryImages_Get
      description: Get a shared gallery image by subscription id or tenant id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - name: galleryUniqueName
          in: path
          description: The unique name of the Shared Gallery.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the Shared Gallery Image Definition from which the Image Versions are to be listed.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedGalleryImage'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/sharedGalleries/{galleryUniqueName}/images/{galleryImageName}/versions/{galleryImageVersionName}/?api-version=2023-07-03:
    get:
      tags:
        - SharedGalleryImageVersions
      operationId: SharedGalleryImageVersions_Get
      description: Get a shared gallery image version by subscription id or tenant id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/LocationNameParameter'
        - name: galleryUniqueName
          in: path
          description: The unique name of the Shared Gallery.
          required: true
          schema:
            type: string
        - name: galleryImageName
          in: path
          description: The name of the Shared Gallery Image Definition from which the Image Versions are to be listed.
          required: true
          schema:
            type: string
        - name: galleryImageVersionName
          in: path
          description: 'The name of the gallery image version to be created. Needs to follow semantic version name pattern: The allowed characters are digit and period. Digits must be within the range of a 32-bit integer. Format: <MajorVersion>.<MinorVersion>.<Patch>'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedGalleryImageVersion'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/?api-version=2022-09-04:
    delete:
      tags:
        - CloudServiceRoleInstances
      description: Deletes a role instance from a cloud service.
      operationId: CloudServiceRoleInstances_Delete
      parameters:
        - name: roleInstanceName
          in: path
          description: Name of the role instance.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - CloudServiceRoleInstances
      description: Gets a role instance from a cloud service.
      operationId: CloudServiceRoleInstances_Get
      parameters:
        - name: roleInstanceName
          in: path
          description: Name of the role instance.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: The expand expression to apply to the operation. 'UserData' is not supported for cloud services.
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInstance'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/instanceView/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceRoleInstances
      description: Retrieves information about the run-time state of a role instance in a cloud service.
      operationId: CloudServiceRoleInstances_GetInstanceView
      parameters:
        - name: roleInstanceName
          in: path
          description: Name of the role instance.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInstanceInstanceView'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceRoleInstances
      description: Gets the list of all role instances in a cloud service. Use nextLink property in the response to get the next page of role instances. Do this till nextLink is null to fetch all the role instances.
      operationId: CloudServiceRoleInstances_List
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: $expand
          in: query
          description: The expand expression to apply to the operation. 'UserData' is not supported for cloud services.
          schema:
            enum:
              - instanceView
              - userData
            x-ms-enum:
              name: InstanceViewTypes
              modelAsString: false
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInstanceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/restart/?api-version=2022-09-04:
    post:
      tags:
        - CloudServiceRoleInstances
      description: The Reboot Role Instance asynchronous operation requests a reboot of a role instance in the cloud service.
      operationId: CloudServiceRoleInstances_Restart
      parameters:
        - name: roleInstanceName
          in: path
          description: Name of the role instance.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/reimage/?api-version=2022-09-04:
    post:
      tags:
        - CloudServiceRoleInstances
      description: The Reimage Role Instance asynchronous operation reinstalls the operating system on instances of web roles or worker roles.
      operationId: CloudServiceRoleInstances_Reimage
      parameters:
        - name: roleInstanceName
          in: path
          description: Name of the role instance.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/rebuild/?api-version=2022-09-04:
    post:
      tags:
        - CloudServiceRoleInstances
      description: The Rebuild Role Instance asynchronous operation reinstalls the operating system on instances of web roles or worker roles and initializes the storage resources that are used by them. If you do not want to initialize storage resources, you can use Reimage Role Instance.
      operationId: CloudServiceRoleInstances_Rebuild
      parameters:
        - name: roleInstanceName
          in: path
          description: Name of the role instance.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roleInstances/{roleInstanceName}/remoteDesktopFile/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceRoleInstances
      description: Gets a remote desktop file for a role instance in a cloud service.
      operationId: CloudServiceRoleInstances_GetRemoteDesktopFile
      parameters:
        - name: roleInstanceName
          in: path
          description: Name of the role instance.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/x-rdp:
              schema:
                format: binary
                type: file
        default:
          description: Error
          content:
            application/x-rdp:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roles/{roleName}/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceRoles
      description: Gets a role from a cloud service.
      operationId: CloudServiceRoles_Get
      parameters:
        - name: roleName
          in: path
          description: Name of the role.
          required: true
          schema:
            type: string
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServiceRole'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/roles/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceRoles
      description: Gets a list of all roles in a cloud service. Use nextLink property in the response to get the next page of roles. Do this till nextLink is null to fetch all the roles.
      operationId: CloudServiceRoles_List
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServiceRoleListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/?api-version=2022-09-04:
    put:
      tags:
        - CloudServices
      description: Create or update a cloud service. Please note some properties can be set only during cloud service creation.
      operationId: CloudServices_CreateOrUpdate
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The cloud service object.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudService'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudService'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudService'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    patch:
      tags:
        - CloudServices
      description: Update a cloud service.
      operationId: CloudServices_Update
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The cloud service object.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudServiceUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudService'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    delete:
      tags:
        - CloudServices
      description: Deletes a cloud service.
      operationId: CloudServices_Delete
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - CloudServices
      description: Display information about a cloud service.
      operationId: CloudServices_Get
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudService'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/instanceView/?api-version=2022-09-04:
    get:
      tags:
        - CloudServices
      description: Gets the status of a cloud service.
      operationId: CloudServices_GetInstanceView
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServiceInstanceView'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/cloudServices/?api-version=2022-09-04:
    get:
      tags:
        - CloudServices
      description: Gets a list of all cloud services in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of Cloud Services. Do this till nextLink is null to fetch all the Cloud Services.
      operationId: CloudServices_ListAll
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServiceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/?api-version=2022-09-04:
    get:
      tags:
        - CloudServices
      description: Gets a list of all cloud services under a resource group. Use nextLink property in the response to get the next page of Cloud Services. Do this till nextLink is null to fetch all the Cloud Services.
      operationId: CloudServices_List
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServiceListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/start/?api-version=2022-09-04:
    post:
      tags:
        - CloudServices
      description: Starts the cloud service.
      operationId: CloudServices_Start
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/poweroff/?api-version=2022-09-04:
    post:
      tags:
        - CloudServices
      description: Power off the cloud service. Note that resources are still attached and you are getting charged for the resources.
      operationId: CloudServices_PowerOff
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/restart/?api-version=2022-09-04:
    post:
      tags:
        - CloudServices
      description: Restarts one or more role instances in a cloud service.
      operationId: CloudServices_Restart
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: List of cloud service role instance names.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInstances'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/reimage/?api-version=2022-09-04:
    post:
      tags:
        - CloudServices
      description: Reimage asynchronous operation reinstalls the operating system on instances of web roles or worker roles.
      operationId: CloudServices_Reimage
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: List of cloud service role instance names.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInstances'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/rebuild/?api-version=2022-09-04:
    post:
      tags:
        - CloudServices
      description: Rebuild Role Instances reinstalls the operating system on instances of web roles or worker roles and initializes the storage resources that are used by them. If you do not want to initialize storage resources, you can use Reimage Role Instances.
      operationId: CloudServices_Rebuild
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: List of cloud service role instance names.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInstances'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/delete/?api-version=2022-09-04:
    post:
      tags:
        - CloudServices
      description: Deletes role instances in a cloud service.
      operationId: CloudServices_DeleteInstances
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: List of cloud service role instance names.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInstances'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/{updateDomain}/?api-version=2022-09-04:
    put:
      tags:
        - CloudServicesUpdateDomain
      description: Updates the role instances in the specified update domain.
      operationId: CloudServicesUpdateDomain_WalkUpdateDomain
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - name: updateDomain
          in: path
          description: 'Specifies an integer value that identifies the update domain. Update domains are identified with a zero-based index: the first update domain has an ID of 0, the second has an ID of 1, and so on.'
          required: true
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The update domain object.
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDomain'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
    get:
      tags:
        - CloudServicesUpdateDomain
      description: Gets the specified update domain of a cloud service. Use nextLink property in the response to get the next page of update domains. Do this till nextLink is null to fetch all the update domains.
      operationId: CloudServicesUpdateDomain_GetUpdateDomain
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - name: updateDomain
          in: path
          description: 'Specifies an integer value that identifies the update domain. Update domains are identified with a zero-based index: the first update domain has an ID of 0, the second has an ID of 1, and so on.'
          required: true
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomain'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/cloudServices/{cloudServiceName}/updateDomains/?api-version=2022-09-04:
    get:
      tags:
        - CloudServicesUpdateDomain
      description: Gets a list of all update domains in a cloud service.
      operationId: CloudServicesUpdateDomain_ListUpdateDomains
      parameters:
        - name: resourceGroupName
          in: path
          description: Name of the resource group.
          required: true
          schema:
            type: string
        - name: cloudServiceName
          in: path
          description: Name of the cloud service.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDomainListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsVersions/{osVersionName}/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceOperatingSystems
      description: Gets properties of a guest operating system version that can be specified in the XML service configuration (.cscfg) for a cloud service.
      operationId: CloudServiceOperatingSystems_GetOSVersion
      parameters:
        - name: location
          in: path
          description: Name of the location that the OS version pertains to.
          required: true
          schema:
            type: string
        - name: osVersionName
          in: path
          description: Name of the OS version.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSVersion'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsVersions/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceOperatingSystems
      description: Gets a list of all guest operating system versions available to be specified in the XML service configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next page of OS versions. Do this till nextLink is null to fetch all the OS versions.
      operationId: CloudServiceOperatingSystems_ListOSVersions
      parameters:
        - name: location
          in: path
          description: Name of the location that the OS versions pertain to.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSVersionListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsFamilies/{osFamilyName}/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceOperatingSystems
      description: Gets properties of a guest operating system family that can be specified in the XML service configuration (.cscfg) for a cloud service.
      operationId: CloudServiceOperatingSystems_GetOSFamily
      parameters:
        - name: location
          in: path
          description: Name of the location that the OS family pertains to.
          required: true
          schema:
            type: string
        - name: osFamilyName
          in: path
          description: Name of the OS family.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSFamily'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.Compute/locations/{location}/cloudServiceOsFamilies/?api-version=2022-09-04:
    get:
      tags:
        - CloudServiceOperatingSystems
      description: Gets a list of all guest operating system families available to be specified in the XML service configuration (.cscfg) for a cloud service. Use nextLink property in the response to get the next page of OS Families. Do this till nextLink is null to fetch all the OS Families.
      operationId: CloudServiceOperatingSystems_ListOSFamilies
      parameters:
        - name: location
          in: path
          description: Name of the location that the OS families pertain to.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSFamilyListResult'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
