openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Terraform Resource Provider Client
  description: The Azure Terraform management API provides a RESTful set of web services that used to manage your Azure Terraform resources.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          format: uri
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    BaseExportModel:
      type: object
      description: The base export parameter
      properties:
        type:
          $ref: '#/components/schemas/Type'
          description: The parameter type
        targetProvider:
          type: string
          description: The target Azure Terraform Provider
          default: azurerm
          enum:
            - azurerm
            - azapi
          x-ms-enum:
            name: targetProvider
            modelAsString: true
            values:
              - name: azurerm
                value: azurerm
                description: https://registry.terraform.io/providers/hashicorp/azurerm/latest
              - name: azapi
                value: azapi
                description: https://registry.terraform.io/providers/Azure/azapi/latest
        fullProperties:
          type: boolean
          description: Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications to make it valid
          default: true
        maskSensitive:
          type: boolean
          description: Mask sensitive attributes in the Terraform configuration
          default: true
      discriminator:
        propertyName: type
      required:
        - type
    ExportQuery:
      description: Export parameter for resources queried by ARG (Azure Resource Graph)
      required:
        - query
      x-ms-discriminator-value: ExportQuery
      properties:
        query:
          type: string
          description: The ARG where predicate. Note that you can combine multiple conditions in one `where` predicate, e.g. `resourceGroup =~ "my-rg" and type =~ "microsoft.network/virtualnetworks"`
        namePattern:
          type: string
          description: The name pattern of the Terraform resources
          default: res-
        recursive:
          type: boolean
          description: Whether to recursively list child resources of the query result
          default: false
        type:
          $ref: '#/components/schemas/Type'
          description: The parameter type
        targetProvider:
          type: string
          description: The target Azure Terraform Provider
          default: azurerm
          enum:
            - azurerm
            - azapi
          x-ms-enum:
            name: targetProvider
            modelAsString: true
            values:
              - name: azurerm
                value: azurerm
                description: https://registry.terraform.io/providers/hashicorp/azurerm/latest
              - name: azapi
                value: azapi
                description: https://registry.terraform.io/providers/Azure/azapi/latest
        fullProperties:
          type: boolean
          description: Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications to make it valid
          default: true
        maskSensitive:
          type: boolean
          description: Mask sensitive attributes in the Terraform configuration
          default: true
      type: object
    ExportResource:
      description: Export parameter for individual resources.
      required:
        - resourceIds
      x-ms-discriminator-value: ExportResource
      properties:
        resourceIds:
          type: array
          description: The id of the resource to be exported
          items:
            type: string
        resourceName:
          type: string
          description: The Terraform resource name. Only works when `resourceIds` contains only one item.
          default: res-0
        resourceType:
          type: string
          description: The Terraform resource type. Only works when `resourceIds` contains only one item.
        namePattern:
          type: string
          description: The name pattern of the Terraform resources
          default: res-
        type:
          $ref: '#/components/schemas/Type'
          description: The parameter type
        targetProvider:
          type: string
          description: The target Azure Terraform Provider
          default: azurerm
          enum:
            - azurerm
            - azapi
          x-ms-enum:
            name: targetProvider
            modelAsString: true
            values:
              - name: azurerm
                value: azurerm
                description: https://registry.terraform.io/providers/hashicorp/azurerm/latest
              - name: azapi
                value: azapi
                description: https://registry.terraform.io/providers/Azure/azapi/latest
        fullProperties:
          type: boolean
          description: Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications to make it valid
          default: true
        maskSensitive:
          type: boolean
          description: Mask sensitive attributes in the Terraform configuration
          default: true
      type: object
    ExportResourceGroup:
      description: Export parameter for a resource group
      required:
        - resourceGroupName
      x-ms-discriminator-value: ExportResourceGroup
      properties:
        resourceGroupName:
          type: string
          description: The name of the resource group to be exported
        namePattern:
          type: string
          description: The name pattern of the Terraform resources
          default: res-
        type:
          $ref: '#/components/schemas/Type'
          description: The parameter type
        targetProvider:
          type: string
          description: The target Azure Terraform Provider
          default: azurerm
          enum:
            - azurerm
            - azapi
          x-ms-enum:
            name: targetProvider
            modelAsString: true
            values:
              - name: azurerm
                value: azurerm
                description: https://registry.terraform.io/providers/hashicorp/azurerm/latest
              - name: azapi
                value: azapi
                description: https://registry.terraform.io/providers/Azure/azapi/latest
        fullProperties:
          type: boolean
          description: Whether to output all non-computed properties in the generated Terraform configuration? This probably needs manual modifications to make it valid
          default: true
        maskSensitive:
          type: boolean
          description: Mask sensitive attributes in the Terraform configuration
          default: true
      type: object
    ExportResult:
      type: object
      description: The Terraform export result
      properties:
        configuration:
          type: string
          description: The Terraform configuration content
        skippedResources:
          type: array
          description: A list of Azure resources which are not exported to Terraform due to there is no corresponding resources in Terraform
          items:
            type: string
        errors:
          type: array
          description: A list of errors derived during exporting each resource
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers: []
    OperationStatus:
      description: The status of the LRO operation.
      properties:
        id:
          type: string
          description: The operation status resource id.
        resourceId:
          type: string
          description: The fully qualified resource id of the resource for which the operation was performed.
          readOnly: true
        name:
          type: string
          description: The operation name.
        startTime:
          type: string
          format: date-time
          description: The start time of the operation.
          readOnly: true
        endTime:
          type: string
          format: date-time
          description: The end time of the operation.
          readOnly: true
        status:
          type: string
          description: The status of the operation.
        percentComplete:
          type: number
          format: double
          description: The progress percentage of the operation, ranges from 0 to 100
        properties:
          $ref: '#/components/schemas/ExportResult'
          description: The Terraform export result
        error:
          $ref: '#/components/schemas/ErrorDetail'
          description: The error object.
      type: object
    Type:
      type: string
      description: The parameter type
      enum:
        - ExportResource
        - ExportResourceGroup
        - ExportQuery
      x-ms-enum:
        name: Type
        modelAsString: true
        values:
          - name: ExportResource
            value: ExportResource
          - name: ExportResourceGroup
            value: ExportResourceGroup
          - name: ExportQuery
            value: ExportQuery
  x-stackQL-resources:
    operations:
      id: azure.terraform.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.AzureTerraform~1operations?api-version=2023-07-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
        export_terraform:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureTerraform~1exportTerraform?api-version=2023-07-01-preview/post'
            operationId: Operations_ExportTerraform
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operation_status:
      id: azure.terraform.operation_status
      name: operation_status
      title: operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.AzureTerraform~1operationStatuses~1{operationId}?api-version=2023-07-01-preview/get'
            operationId: OperationStatuses_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_operation_status:
      id: azure.terraform.vw_operation_status
      name: vw_operation_status
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              resourceId as resource_id,
              startTime as start_time,
              endTime as end_time,
              status as status,
              percentComplete as percent_complete,
              error as error,
              JSON_EXTRACT(properties, '$.configuration') as "configuration",
              JSON_EXTRACT(properties, '$.skippedResources') as "skipped_resources",
              JSON_EXTRACT(properties, '$.errors') as "errors",
              subscriptionId,
              operationId
              FROM azure.terraform.operation_status
              WHERE subscriptionId = 'replace-me' AND operationId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                resourceId as resource_id,
                startTime as start_time,
                endTime as end_time,
                status as status,
                percentComplete as percent_complete,
                error as error,
                json_extract_path_text(properties, '$.configuration') as "configuration",
                json_extract_path_text(properties, '$.skippedResources') as "skipped_resources",
                json_extract_path_text(properties, '$.errors') as "errors",
                subscriptionId,
                operationId
                FROM azure.terraform.operation_status
                WHERE subscriptionId = 'replace-me' AND operationId = 'replace-me';
paths:
  /providers/Microsoft.AzureTerraform/operations?api-version=2023-07-01-preview:
    get:
      operationId: Operations_List
      tags:
        - Operations
      description: List the operations for the provider
      parameters: []
      responses:
        '200':
          description: Azure operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureTerraform/exportTerraform?api-version=2023-07-01-preview:
    post:
      operationId: Operations_ExportTerraform
      tags:
        - ExportTerraform
      description: Exports the Terraform configuration of the specified resource(s).
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: The export parameter
        required: true
        x-ms-requestBody-name: exportParameter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseExportModel'
      responses:
        '202':
          description: Export request accepted.
          headers:
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: A link to the status monitor
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
        final-state-schema: file:///mnt/c/LocalGitRepos/stackql/openapi-conversion/stackql-azure-openapi/azure-rest-api-specs/specification/terraform/resource-manager/Microsoft.AzureTerraform/preview/2023-07-01-preview/export.json#/components/schemas/OperationStatus
      x-ms-long-running-operation: true
      x-ms-original-operationId: ExportTerraform
  /subscriptions/{subscriptionId}/providers/Microsoft.AzureTerraform/operationStatuses/{operationId}?api-version=2023-07-01-preview:
    get:
      operationId: OperationStatuses_Get
      tags:
        - OperationStatuses
      description: Get the status of a long running azure asynchronous operation.
      parameters:
        - $ref: '#/components/parameters/OperationIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
        '202':
          description: InProgress operation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          headers:
            Azure-AsyncOperation:
              schema:
                format: uri
                type: string
              description: A link to the status monitor
            Location:
              schema:
                type: string
              description: The Location header contains the URL where the status of the long running operation can be checked.
            Retry-After:
              schema:
                format: int32
                type: integer
              description: The Retry-After header can indicate how long the client should wait before polling the operation status.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
