openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Front Door Service
  description: Azure Front Door Service enables you to define, manage, and monitor the global routing for your web traffic by optimizing for best performance and instant global failover for high availability. With Front Door, you can transform your global (multi-region) consumer and enterprise applications into robust, high-performance personalized modern applications, APIs, and content that reach a global audience with Azure.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-18-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
      required: true
      schema:
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: Client API version.
      required: false
      schema:
        type: string
    PolicyNameParameter:
      name: policyName
      in: path
      description: The name of the Web Application Firewall Policy.
      required: true
      x-ms-parameter-location: method
      schema:
        maxLength: 128
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of the Resource group within the Azure subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
        minLength: 1
        maxLength: 80
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of the Resource group within the Azure subscription.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
        minLength: 1
        maxLength: 80
        type: string
    frontDoorNameParameter:
      name: frontDoorName
      in: path
      description: Name of the Front Door which is globally unique.
      required: true
      x-new-pattern: ^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+([-a-zA-Z0-9]?[a-zA-Z0-9])*$
        minLength: 5
        maxLength: 64
        type: string
    routingRuleNameParameter:
      name: routingRuleName
      in: path
      description: Name of the Routing Rule which is unique within the Front Door.
      required: true
      x-previous-pattern: ^[-\w\d\._]+$
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 90
        type: string
    healthProbeSettingsNameParameter:
      name: healthProbeSettingsName
      in: path
      description: Name of the health probe settings which is unique within the Front Door.
      required: true
      x-previous-pattern: ^[-\w\d\._]+$
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 90
        type: string
    loadBalancingSettingsNameParameter:
      name: loadBalancingSettingsName
      in: path
      description: Name of the load balancing settings which is unique within the Front Door.
      required: true
      x-previous-pattern: ^[-\w\d\._]+$
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 90
        type: string
    backendPoolNameParameter:
      name: backendPoolName
      in: path
      description: Name of the Backend Pool which is unique within the Front Door.
      required: true
      x-previous-pattern: ^[-\w\d\._]+$
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 90
        type: string
    frontendEndpointNameParameter:
      name: frontendEndpointName
      in: path
      description: Name of the Frontend endpoint which is unique within the Front Door.
      required: true
      x-previous-pattern: ^[-\w\d\._]+$
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 255
        type: string
    rulesEngineNameParameter:
      name: rulesEngineName
      in: path
      description: Name of the Rules Engine which is unique within the Front Door.
      required: true
      x-previous-pattern: ^[-\w\d\._]+$
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$
        minLength: 1
        maxLength: 90
        type: string
    ProfileNameParameter:
      name: profileName
      in: path
      description: The Profile identifier associated with the Tenant and Partner
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
        type: string
    ExperimentNameParameter:
      name: experimentName
      in: path
      description: The Experiment identifier associated with the Experiment
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[a-zA-Z0-9_\-\(\)\.]*[^\.]$
        type: string
  schemas:
    ErrorDetails:
      properties:
        code:
          type: string
        target:
          type: string
        message:
          type: string
      type: object
    Error:
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
        innerError:
          type: string
      type: object
    AzureAsyncOperationResult:
      properties:
        status:
          type: string
          description: 'Status of the Azure async operation. Possible values are: ''InProgress'', ''Succeeded'', and ''Failed''.'
          enum:
            - InProgress
            - Succeeded
            - Failed
          x-ms-enum:
            name: NetworkOperationStatus
            modelAsString: true
        error:
          $ref: '#/components/schemas/Error'
      description: The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is in progress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure.
      type: object
    Resource:
      properties:
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Common resource representation.
      x-ms-azure-resource: true
      type: object
    SubResource:
      properties:
        id:
          type: string
          description: Resource ID.
      description: Reference to another subresource.
      x-ms-azure-resource: true
      type: object
    TagsObject:
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      description: Tags object for patch operations.
      type: object
    WebApplicationFirewallPolicy:
      description: Defines web application firewall policy.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties of the web application firewall policy.
          $ref: '#/components/schemas/WebApplicationFirewallPolicyProperties'
        etag:
          type: string
          description: Gets a unique read-only string that changes whenever the resource is updated.
        sku:
          description: The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified.
          $ref: '#/components/schemas/Sku'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    WebApplicationFirewallPolicyProperties:
      description: Defines web application firewall policy properties.
      properties:
        policySettings:
          description: Describes settings for the policy.
          $ref: '#/components/schemas/PolicySettings'
        customRules:
          description: Describes custom rules inside the policy.
          $ref: '#/components/schemas/CustomRuleList'
        managedRules:
          description: Describes managed rules inside the policy.
          $ref: '#/components/schemas/ManagedRuleSetList'
        frontendEndpointLinks:
          description: Describes Frontend Endpoints associated with this Web Application Firewall policy.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FrontendEndpointLink'
        routingRuleLinks:
          description: Describes Routing Rules associated with this Web Application Firewall policy.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RoutingRuleLink'
        securityPolicyLinks:
          description: Describes Security Policy associated with this Web Application Firewall policy.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SecurityPolicyLink'
        provisioningState:
          readOnly: true
          type: string
          description: Provisioning state of the policy.
        resourceState:
          title: Resource status of the policy.
          readOnly: true
          enum:
            - Creating
            - Enabling
            - Enabled
            - Disabling
            - Disabled
            - Deleting
          type: string
          x-ms-enum:
            name: PolicyResourceState
            modelAsString: true
      type: object
    Sku:
      description: The pricing tier of the web application firewall policy.
      properties:
        name:
          description: Name of the pricing tier.
          enum:
            - Classic_AzureFrontDoor
            - Standard_AzureFrontDoor
            - Premium_AzureFrontDoor
          type: string
          x-ms-enum:
            name: SkuName
            modelAsString: true
      type: object
    WebApplicationFirewallPolicyList:
      description: Defines a list of WebApplicationFirewallPolicies. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/WebApplicationFirewallPolicy'
          description: List of WebApplicationFirewallPolicies within a resource group.
        nextLink:
          type: string
          description: URL to get the next set of WebApplicationFirewallPolicy objects if there are any.
      type: object
    PolicySettings:
      description: Defines top-level WebApplicationFirewallPolicy configuration settings.
      properties:
        enabledState:
          description: Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: PolicyEnabledState
            modelAsString: true
        mode:
          description: Describes if it is in detection mode or prevention mode at policy level.
          type: string
          enum:
            - Prevention
            - Detection
          x-ms-enum:
            name: PolicyMode
            modelAsString: true
        redirectUrl:
          description: If action type is redirect, this field represents redirect URL for the client.
          type: string
        customBlockResponseStatusCode:
          description: If the action type is block, customer can override the response status code.
          type: integer
        customBlockResponseBody:
          description: If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
          type: string
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$
        requestBodyCheck:
          description: Describes if policy managed rules will inspect the request body content.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: PolicyRequestBodyCheck
            modelAsString: true
        javascriptChallengeExpirationInMinutes:
          description: Defines the JavaScript challenge cookie validity lifetime in minutes. This setting is only applicable to Premium_AzureFrontDoor. Value must be an integer between 5 and 1440 with the default value being 30.
          type: integer
          format: int32
          minimum: 5
          maximum: 1440
        logScrubbing:
          description: Defines rules that scrub sensitive fields in the Web Application Firewall logs.
          type: object
          x-ms-client-flatten: true
          properties:
            state:
              type: string
              description: State of the log scrubbing config. Default value is Enabled.
              enum:
                - Enabled
                - Disabled
              x-ms-enum:
                name: WebApplicationFirewallScrubbingState
                modelAsString: true
            scrubbingRules:
              type: array
              items:
                $ref: '#/components/schemas/WebApplicationFirewallScrubbingRules'
              x-ms-identifiers: []
              description: List of log scrubbing rules applied to the Web Application Firewall logs.
      type: object
    CustomRuleList:
      description: Defines contents of custom rules
      properties:
        rules:
          description: List of rules
          type: array
          items:
            $ref: '#/components/schemas/CustomRule'
      type: object
    CustomRule:
      description: Defines contents of a web application rule
      required:
        - priority
        - ruleType
        - matchConditions
        - action
      properties:
        name:
          type: string
          description: Describes the name of the rule.
          maxLength: 128
        priority:
          description: Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
          type: integer
        enabledState:
          description: Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
          type: string
          enum:
            - Disabled
            - Enabled
          x-ms-enum:
            name: CustomRuleEnabledState
            modelAsString: true
        ruleType:
          description: Describes type of rule.
          type: string
          enum:
            - MatchRule
            - RateLimitRule
          x-ms-enum:
            name: RuleType
            modelAsString: true
        rateLimitDurationInMinutes:
          description: Time window for resetting the rate limit count. Default is 1 minute.
          type: integer
          minimum: 0
          maximum: 5
        rateLimitThreshold:
          description: Number of allowed requests per client within the time window.
          type: integer
          minimum: 0
        groupBy:
          description: Describes the list of variables to group the rate limit requests
          type: array
          items:
            $ref: '#/components/schemas/GroupByVariable'
          x-ms-identifiers: []
        matchConditions:
          description: List of match conditions.
          type: array
          items:
            $ref: '#/components/schemas/MatchCondition'
        action:
          description: Describes what action to be applied when rule matches.
          $ref: '#/components/schemas/ActionType'
      type: object
    GroupByVariable:
      description: Describes the variables available to group the rate limit requests
      required:
        - variableName
      type: object
      properties:
        variableName:
          description: Describes the supported variable for group by
          type: string
          enum:
            - SocketAddr
            - GeoLocation
            - None
          x-ms-enum:
            name: VariableName
            modelAsString: true
    TransformType:
      description: Describes what transforms applied before matching.
      type: string
      enum:
        - Lowercase
        - Uppercase
        - Trim
        - UrlDecode
        - UrlEncode
        - RemoveNulls
      x-ms-enum:
        name: TransformType
        modelAsString: true
    MatchCondition:
      description: Define a match condition.
      required:
        - matchVariable
        - operator
        - matchValue
      properties:
        matchVariable:
          description: Request variable to compare with.
          type: string
          enum:
            - RemoteAddr
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestHeader
            - RequestBody
            - Cookies
            - SocketAddr
          x-ms-enum:
            name: MatchVariable
            modelAsString: true
        selector:
          description: Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
          type: string
        operator:
          description: Comparison type to use for matching with the variable value.
          type: string
          enum:
            - Any
            - IPMatch
            - GeoMatch
            - Equal
            - Contains
            - LessThan
            - GreaterThan
            - LessThanOrEqual
            - GreaterThanOrEqual
            - BeginsWith
            - EndsWith
            - RegEx
          x-ms-enum:
            name: Operator
            modelAsString: true
        negateCondition:
          description: Describes if the result of this condition should be negated.
          type: boolean
        matchValue:
          description: List of possible match values.
          type: array
          items:
            type: string
        transforms:
          description: List of transforms.
          type: array
          items:
            $ref: '#/components/schemas/TransformType'
      type: object
    ManagedRuleSetList:
      description: Defines the list of managed rule sets for the policy.
      properties:
        managedRuleSets:
          description: List of rule sets.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleSet'
      type: object
    ManagedRuleSet:
      type: object
      description: Defines a managed rule set.
      required:
        - ruleSetType
        - ruleSetVersion
      properties:
        ruleSetType:
          description: Defines the rule set type to use.
          type: string
        ruleSetVersion:
          description: Defines the version of the rule set to use.
          type: string
        ruleSetAction:
          description: Defines the rule set action.
          title: ruleSetAction
          $ref: '#/components/schemas/ManagedRuleSetActionType'
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleExclusion'
          description: Describes the exclusions that are applied to all rules in the set.
        ruleGroupOverrides:
          description: Defines the rule group overrides to apply to the rule set.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleGroupOverride'
    ManagedRuleGroupOverride:
      description: Defines a managed rule group override setting.
      required:
        - ruleGroupName
      properties:
        ruleGroupName:
          description: Describes the managed rule group to override.
          type: string
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleExclusion'
          description: Describes the exclusions that are applied to all rules in the group.
        rules:
          description: List of rules that will be disabled. If none specified, all rules in the group will be disabled.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleOverride'
      type: object
    ManagedRuleOverride:
      description: Defines a managed rule group override setting.
      required:
        - ruleId
      properties:
        ruleId:
          description: Identifier for the managed rule.
          type: string
        enabledState:
          description: Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
          $ref: '#/components/schemas/ManagedRuleEnabledState'
        action:
          description: Describes the override action to be applied when rule matches.
          $ref: '#/components/schemas/ActionType'
        exclusions:
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleExclusion'
          description: Describes the exclusions that are applied to this specific rule.
      type: object
    ManagedRuleSetDefinitionList:
      description: List of managed rule set definitions available for use in a policy.
      properties:
        value:
          description: List of managed rule set definitions.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleSetDefinition'
        nextLink:
          type: string
          description: URL to retrieve next set of managed rule set definitions.
      type: object
    ManagedRuleSetDefinition:
      description: Describes the a managed rule set definition.
      properties:
        properties:
          description: Properties for a managed rule set definition.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedRuleSetDefinitionProperties'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ManagedRuleSetDefinitionProperties:
      description: Properties for a managed rule set definition.
      properties:
        provisioningState:
          type: string
          readOnly: true
          description: Provisioning state of the managed rule set.
        ruleSetId:
          type: string
          readOnly: true
          description: Id of the managed rule set.
        ruleSetType:
          type: string
          readOnly: true
          description: Type of the managed rule set.
        ruleSetVersion:
          type: string
          readOnly: true
          description: Version of the managed rule set type.
        ruleGroups:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ManagedRuleGroupDefinition'
          description: Rule groups of the managed rule set.
      type: object
    ManagedRuleGroupDefinition:
      description: Describes a managed rule group.
      properties:
        ruleGroupName:
          type: string
          readOnly: true
          description: Name of the managed rule group.
        description:
          type: string
          readOnly: true
          description: Description of the managed rule group.
        rules:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ManagedRuleDefinition'
          description: List of rules within the managed rule group.
      type: object
    ManagedRuleDefinition:
      description: Describes a managed rule definition.
      properties:
        ruleId:
          description: Identifier for the managed rule.
          readOnly: true
          type: string
        defaultState:
          description: Describes the default state for the managed rule.
          readOnly: true
          $ref: '#/components/schemas/ManagedRuleEnabledState'
        defaultAction:
          description: Describes the default action to be applied when the managed rule matches.
          readOnly: true
          $ref: '#/components/schemas/ActionType'
        description:
          description: Describes the functionality of the managed rule.
          readOnly: true
          type: string
      type: object
    ManagedRuleExclusion:
      required:
        - matchVariable
        - selectorMatchOperator
        - selector
      description: Exclude variables from managed rule evaluation.
      properties:
        matchVariable:
          type: string
          enum:
            - RequestHeaderNames
            - RequestCookieNames
            - QueryStringArgNames
            - RequestBodyPostArgNames
            - RequestBodyJsonArgNames
          description: The variable type to be excluded.
          x-ms-enum:
            name: ManagedRuleExclusionMatchVariable
            modelAsString: true
        selectorMatchOperator:
          type: string
          enum:
            - Equals
            - Contains
            - StartsWith
            - EndsWith
            - EqualsAny
          description: Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
          x-ms-enum:
            name: ManagedRuleExclusionSelectorMatchOperator
            modelAsString: true
        selector:
          type: string
          description: Selector value for which elements in the collection this exclusion applies to.
      type: object
    ActionType:
      description: Defines the action to take on rule match.
      type: string
      enum:
        - Allow
        - Block
        - Log
        - Redirect
        - AnomalyScoring
        - JSChallenge
      x-ms-enum:
        name: ActionType
        modelAsString: true
    WebApplicationFirewallScrubbingRules:
      description: Defines the contents of the log scrubbing rules.
      type: object
      required:
        - matchVariable
        - selectorMatchOperator
      properties:
        matchVariable:
          type: string
          enum:
            - RequestIPAddress
            - RequestUri
            - QueryStringArgNames
            - RequestHeaderNames
            - RequestCookieNames
            - RequestBodyPostArgNames
            - RequestBodyJsonArgNames
          description: The variable to be scrubbed from the logs.
          x-ms-enum:
            name: scrubbingRuleEntryMatchVariable
            modelAsString: true
        selectorMatchOperator:
          type: string
          enum:
            - EqualsAny
            - Equals
          description: When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to.
          x-ms-enum:
            name: ' scrubbingRuleEntryMatchOperator'
            modelAsString: true
        selector:
          type: string
          description: When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to.
        state:
          type: string
          enum:
            - Enabled
            - Disabled
          description: Defines the state of a log scrubbing rule. Default value is enabled.
          x-ms-enum:
            name: ' scrubbingRuleEntryState'
            modelAsString: true
    ManagedRuleSetActionType:
      description: Defines the action to take when a managed rule set score threshold is met.
      type: string
      enum:
        - Block
        - Log
        - Redirect
      x-ms-enum:
        name: ManagedRuleSetActionType
        modelAsString: true
    ManagedRuleEnabledState:
      description: Describes if the managed rule is in enabled or disabled state.
      type: string
      enum:
        - Disabled
        - Enabled
      x-ms-enum:
        name: ManagedRuleEnabledState
        modelAsString: true
    ErrorResponse:
      description: Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        code:
          description: Error code.
          readOnly: true
          type: string
        message:
          description: Error message indicating why the operation failed.
          readOnly: true
          type: string
    DefaultErrorResponse:
      description: Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.
      type: object
      properties:
        error:
          description: Error model.
          type: object
          properties:
            code:
              description: Error code.
              readOnly: true
              type: string
            message:
              description: Error message indicating why the operation failed.
              readOnly: true
              type: string
    FrontendEndpointLink:
      description: Defines the Resource ID for a Frontend Endpoint.
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: Resource ID.
    RoutingRuleLink:
      description: Defines the Resource ID for a Routing Rule.
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: Resource ID.
    SecurityPolicyLink:
      description: Defines the Resource ID for a Security Policy.
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: Resource ID.
    FrontDoor:
      description: Front Door represents a collection of backend endpoints to route traffic to along with rules that specify how traffic is sent there.
      properties:
        properties:
          description: Properties of the Front Door Load Balancer
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FrontDoorProperties'
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    FrontDoorUpdateParameters:
      description: The properties needed to update a Front Door
      properties:
        friendlyName:
          description: A friendly name for the frontDoor
          type: string
        routingRules:
          description: Routing rules associated with this Front Door.
          type: array
          items:
            description: A routing rule
            $ref: '#/components/schemas/RoutingRule'
        loadBalancingSettings:
          description: Load balancing settings associated with this Front Door instance.
          type: array
          items:
            description: A load balancing settings
            $ref: '#/components/schemas/LoadBalancingSettingsModel'
        healthProbeSettings:
          description: Health probe settings associated with this Front Door instance.
          type: array
          items:
            description: A health probe settings
            $ref: '#/components/schemas/HealthProbeSettingsModel'
        backendPools:
          description: Backend pools available to routing rules.
          type: array
          items:
            description: A backend pool
            $ref: '#/components/schemas/BackendPool'
        frontendEndpoints:
          description: Frontend endpoints available to routing rules.
          type: array
          items:
            description: A frontend endpoint
            $ref: '#/components/schemas/FrontendEndpoint'
        backendPoolsSettings:
          description: Settings for all backendPools
          $ref: '#/components/schemas/BackendPoolsSettings'
        enabledState:
          description: Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: FrontDoorEnabledState
            modelAsString: true
      type: object
    FrontDoorProperties:
      description: The JSON object that contains the properties required to create an endpoint.
      properties:
        friendlyName:
          description: A friendly name for the frontDoor
          type: string
        routingRules:
          description: Routing rules associated with this Front Door.
          type: array
          items:
            description: A routing rule
            $ref: '#/components/schemas/RoutingRule'
        loadBalancingSettings:
          description: Load balancing settings associated with this Front Door instance.
          type: array
          items:
            description: A load balancing settings
            $ref: '#/components/schemas/LoadBalancingSettingsModel'
        healthProbeSettings:
          description: Health probe settings associated with this Front Door instance.
          type: array
          items:
            description: A health probe settings
            $ref: '#/components/schemas/HealthProbeSettingsModel'
        backendPools:
          description: Backend pools available to routing rules.
          type: array
          items:
            description: A backend pool
            $ref: '#/components/schemas/BackendPool'
        frontendEndpoints:
          description: Frontend endpoints available to routing rules.
          type: array
          items:
            description: A frontend endpoint
            $ref: '#/components/schemas/FrontendEndpoint'
        backendPoolsSettings:
          description: Settings for all backendPools
          $ref: '#/components/schemas/BackendPoolsSettings'
        enabledState:
          description: Operational status of the Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: FrontDoorEnabledState
            modelAsString: true
        resourceState:
          description: Resource status of the Front Door.
          $ref: '#/components/schemas/ResourceState'
        provisioningState:
          readOnly: true
          type: string
          description: Provisioning state of the Front Door.
        cname:
          readOnly: true
          type: string
          description: The host that each frontendEndpoint must CNAME to.
        frontdoorId:
          readOnly: true
          type: string
          description: The Id of the frontdoor.
        rulesEngines:
          readOnly: true
          description: Rules Engine Configurations available to routing rules.
          type: array
          items:
            description: A rules engine configuration.
            $ref: '#/components/schemas/RulesEngine'
        extendedProperties:
          description: Key-Value pair representing additional properties for frontdoor.
          type: object
          readOnly: true
          additionalProperties:
            type: string
      type: object
    FrontDoorListResult:
      description: Result of the request to list Front Doors. It contains a list of Front Door objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FrontDoor'
          description: List of Front Doors within a resource group.
        nextLink:
          type: string
          description: URL to get the next set of Front Door objects if there are any.
      type: object
    PurgeParameters:
      type: object
      description: Parameters required for content purge.
      required:
        - contentPaths
      properties:
        contentPaths:
          description: The path to the content to be purged. Can describe a file path or a wild card directory.
          type: array
          items:
            type: string
    RoutingRule:
      description: A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
      properties:
        properties:
          description: Properties of the Front Door Routing Rule
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoutingRuleProperties'
        name:
          type: string
          description: Resource name.
        type:
          type: string
          readOnly: true
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    RoutingRuleProperties:
      description: The JSON object that contains the properties required to create a routing rule.
      properties:
        frontendEndpoints:
          description: Frontend endpoints associated with this rule
          type: array
          items:
            description: A reference to a frontend endpoint
            $ref: '#/components/schemas/SubResource'
        acceptedProtocols:
          description: Protocol schemes to match for this rule
          type: array
          items:
            type: string
            description: Accepted protocol schemes.
            enum:
              - Http
              - Https
            x-ms-enum:
              name: FrontDoorProtocol
              modelAsString: true
        patternsToMatch:
          description: The route patterns of the rule.
          type: array
          items:
            type: string
            description: A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.
        enabledState:
          description: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: routingRuleEnabledState
            modelAsString: true
        routeConfiguration:
          description: A reference to the routing configuration.
          $ref: '#/components/schemas/RouteConfiguration'
        rulesEngine:
          description: A reference to a specific Rules Engine Configuration to apply to this route.
          $ref: '#/components/schemas/SubResource'
        webApplicationFirewallPolicyLink:
          description: Defines the Web Application Firewall policy for each routing rule (if applicable)
          type: object
          properties:
            id:
              type: string
              description: Resource ID.
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/ResourceState'
      type: object
    RoutingRuleListResult:
      description: Result of the request to list Routing Rules. It contains a list of Routing Rule objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RoutingRule'
          description: List of Routing Rules within a Front Door.
        nextLink:
          type: string
          description: URL to get the next set of RoutingRule objects if there are any.
      type: object
    RoutingRuleUpdateParameters:
      description: Routing rules to apply to an endpoint
      type: object
      properties:
        frontendEndpoints:
          description: Frontend endpoints associated with this rule
          type: array
          items:
            description: A reference to a frontend endpoint
            $ref: '#/components/schemas/SubResource'
        acceptedProtocols:
          description: Protocol schemes to match for this rule
          type: array
          items:
            type: string
            description: Accepted protocol schemes.
            enum:
              - Http
              - Https
            x-ms-enum:
              name: FrontDoorProtocol
              modelAsString: true
        patternsToMatch:
          description: The route patterns of the rule.
          type: array
          items:
            type: string
            description: A route pattern of the rule. Must not have any * except possibly after the final / at the end of the path.
        enabledState:
          description: Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: routingRuleEnabledState
            modelAsString: true
        routeConfiguration:
          description: A reference to the routing configuration.
          $ref: '#/components/schemas/RouteConfiguration'
        rulesEngine:
          description: A reference to a specific Rules Engine Configuration to apply to this route.
          $ref: '#/components/schemas/SubResource'
        webApplicationFirewallPolicyLink:
          description: Defines the Web Application Firewall policy for each routing rule (if applicable)
          type: object
          properties:
            id:
              type: string
              description: Resource ID.
    RouteConfiguration:
      discriminator:
        propertyName: '@odata.type'
      description: Base class for all types of Route.
      properties:
        '@odata.type':
          type: string
      required:
        - '@odata.type'
      type: object
    ForwardingConfiguration:
      description: Describes Forwarding Route.
      x-ms-discriminator-value: '#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration'
      properties:
        customForwardingPath:
          description: A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
          type: string
        forwardingProtocol:
          description: Protocol this rule will use when forwarding traffic to backends.
          type: string
          enum:
            - HttpOnly
            - HttpsOnly
            - MatchRequest
          x-ms-enum:
            name: FrontDoorForwardingProtocol
            modelAsString: true
        cacheConfiguration:
          description: The caching configuration associated with this rule.
          $ref: '#/components/schemas/CacheConfiguration'
        backendPool:
          description: A reference to the BackendPool which this rule routes to.
          $ref: '#/components/schemas/SubResource'
        '@odata.type':
          type: string
      type: object
    RedirectConfiguration:
      description: Describes Redirect Route.
      x-ms-discriminator-value: '#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration'
      properties:
        redirectType:
          description: The redirect type the rule will use when redirecting traffic.
          type: string
          enum:
            - Moved
            - Found
            - TemporaryRedirect
            - PermanentRedirect
          x-ms-enum:
            name: FrontDoorRedirectType
            modelAsString: true
        redirectProtocol:
          description: The protocol of the destination to where the traffic is redirected
          type: string
          enum:
            - HttpOnly
            - HttpsOnly
            - MatchRequest
          x-ms-enum:
            name: FrontDoorRedirectProtocol
            modelAsString: true
        customHost:
          type: string
          description: Host to redirect. Leave empty to use the incoming host as the destination host.
        customPath:
          type: string
          description: The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
        customFragment:
          type: string
          description: 'Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.'
        customQueryString:
          description: The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
          type: string
        '@odata.type':
          type: string
      type: object
    Backend:
      description: Backend address of a frontDoor load balancer.
      type: object
      properties:
        address:
          description: Location of the backend (IP address or FQDN)
          type: string
        privateLinkAlias:
          description: The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
          type: string
        privateLinkResourceId:
          description: The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
          type: string
        privateLinkLocation:
          description: The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
          type: string
        privateEndpointStatus:
          description: The Approval status for the connection to the Private Link
          type: string
          readOnly: true
          enum:
            - Pending
            - Approved
            - Rejected
            - Disconnected
            - Timeout
          x-ms-enum:
            name: PrivateEndpointStatus
            modelAsString: true
        privateLinkApprovalMessage:
          description: A custom message to be included in the approval request to connect to the Private Link
          type: string
        httpPort:
          description: The HTTP TCP port number. Must be between 1 and 65535.
          type: integer
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        httpsPort:
          description: The HTTPS TCP port number. Must be between 1 and 65535.
          type: integer
          maximum: 65535
          exclusiveMaximum: false
          minimum: 1
          exclusiveMinimum: false
        enabledState:
          description: Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: backendEnabledState
            modelAsString: true
        priority:
          description: Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
          type: integer
          maximum: 5
          minimum: 1
        weight:
          description: Weight of this endpoint for load balancing purposes.
          type: integer
          maximum: 1000
          minimum: 1
        backendHostHeader:
          description: The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
          type: string
    LoadBalancingSettingsModel:
      description: Load balancing settings for a backend pool
      properties:
        properties:
          description: Properties of the load balancing settings
          x-ms-client-flatten: true
          $ref: '#/components/schemas/LoadBalancingSettingsProperties'
        name:
          type: string
          description: Resource name.
        type:
          type: string
          readOnly: true
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    LoadBalancingSettingsProperties:
      description: The JSON object that contains the properties required to create load balancing settings
      properties:
        sampleSize:
          description: The number of samples to consider for load balancing decisions
          type: integer
        successfulSamplesRequired:
          description: The number of samples within the sample period that must succeed
          type: integer
        additionalLatencyMilliseconds:
          description: The additional latency in milliseconds for probes to fall into the lowest latency bucket
          type: integer
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/ResourceState'
      type: object
    LoadBalancingSettingsListResult:
      description: Result of the request to list load balancing settings. It contains a list of load balancing settings objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/LoadBalancingSettingsModel'
          description: List of Backend Pools within a Front Door.
        nextLink:
          type: string
          description: URL to get the next set of LoadBalancingSettings objects if there are any.
      type: object
    LoadBalancingSettingsUpdateParameters:
      description: Round-Robin load balancing settings for a backend pool
      type: object
      properties:
        sampleSize:
          description: The number of samples to consider for load balancing decisions
          type: integer
        successfulSamplesRequired:
          description: The number of samples within the sample period that must succeed
          type: integer
        additionalLatencyMilliseconds:
          description: The additional latency in milliseconds for probes to fall into the lowest latency bucket
          type: integer
    HealthProbeSettingsModel:
      description: Load balancing settings for a backend pool
      properties:
        properties:
          description: Properties of the health probe settings
          x-ms-client-flatten: true
          $ref: '#/components/schemas/HealthProbeSettingsProperties'
        name:
          type: string
          description: Resource name.
        type:
          type: string
          readOnly: true
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    HealthProbeSettingsProperties:
      description: The JSON object that contains the properties required to create a health probe settings.
      properties:
        path:
          description: The path to use for the health probe. Default is /
          type: string
        protocol:
          description: Protocol scheme to use for this probe
          type: string
          enum:
            - Http
            - Https
          x-ms-enum:
            name: FrontDoorProtocol
            modelAsString: true
        intervalInSeconds:
          description: The number of seconds between health probes.
          type: integer
        healthProbeMethod:
          description: Configures which HTTP method to use to probe the backends defined under backendPools.
          type: string
          enum:
            - GET
            - HEAD
          x-ms-enum:
            name: FrontDoorHealthProbeMethod
            modelAsString: true
          default: HEAD
        enabledState:
          description: Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: HealthProbeEnabled
            modelAsString: true
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/ResourceState'
      type: object
    HealthProbeSettingsListResult:
      description: Result of the request to list HealthProbeSettings. It contains a list of HealthProbeSettings objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/HealthProbeSettingsModel'
          description: List of HealthProbeSettings within a Front Door.
        nextLink:
          type: string
          description: URL to get the next set of HealthProbeSettings objects if there are any.
      type: object
    HealthProbeSettingsUpdateParameters:
      description: L7 health probe settings for a backend pool
      type: object
      properties:
        path:
          description: The path to use for the health probe. Default is /
          type: string
        protocol:
          description: Protocol scheme to use for this probe
          type: string
          enum:
            - Http
            - Https
          x-ms-enum:
            name: FrontDoorProtocol
            modelAsString: true
        intervalInSeconds:
          description: The number of seconds between health probes.
          type: integer
        healthProbeMethod:
          description: Configures which HTTP method to use to probe the backends defined under backendPools.
          type: string
          enum:
            - GET
            - HEAD
          x-ms-enum:
            name: FrontDoorHealthProbeMethod
            modelAsString: true
          default: HEAD
        enabledState:
          description: Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
          type: string
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: HealthProbeEnabled
            modelAsString: true
    BackendPool:
      description: A backend pool is a collection of backends that can be routed to.
      properties:
        properties:
          description: Properties of the Front Door Backend Pool
          x-ms-client-flatten: true
          $ref: '#/components/schemas/BackendPoolProperties'
        name:
          type: string
          description: Resource name.
        type:
          type: string
          readOnly: true
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    BackendPoolUpdateParameters:
      description: A collection of backends that can be routed to.
      type: object
      properties:
        backends:
          description: The set of backends for this pool
          type: array
          items:
            $ref: '#/components/schemas/Backend'
        loadBalancingSettings:
          description: Load balancing settings for a backend pool
          $ref: '#/components/schemas/SubResource'
        healthProbeSettings:
          description: L7 health probe settings for a backend pool
          $ref: '#/components/schemas/SubResource'
    BackendPoolProperties:
      description: The JSON object that contains the properties required to create a Backend Pool.
      properties:
        backends:
          description: The set of backends for this pool
          type: array
          items:
            $ref: '#/components/schemas/Backend'
        loadBalancingSettings:
          description: Load balancing settings for a backend pool
          $ref: '#/components/schemas/SubResource'
        healthProbeSettings:
          description: L7 health probe settings for a backend pool
          $ref: '#/components/schemas/SubResource'
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/ResourceState'
      type: object
    BackendPoolListResult:
      description: Result of the request to list Backend Pools. It contains a list of Backend Pools objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/BackendPool'
          description: List of Backend Pools within a Front Door.
        nextLink:
          type: string
          description: URL to get the next set of BackendPool objects if there are any.
      type: object
    CacheConfiguration:
      description: Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
      type: object
      properties:
        queryParameterStripDirective:
          description: Treatment of URL query terms when forming the cache key.
          enum:
            - StripNone
            - StripAll
            - StripOnly
            - StripAllExcept
          type: string
          x-ms-enum:
            name: FrontDoorQuery
            modelAsString: true
        queryParameters:
          description: query parameters to include or exclude (comma separated).
          type: string
        dynamicCompression:
          description: Whether to use dynamic compression for cached content
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: DynamicCompressionEnabled
            modelAsString: true
        cacheDuration:
          description: The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
          type: string
          format: duration
    KeyVaultCertificateSourceParameters:
      description: Parameters required for bring-your-own-certification via Key Vault
      type: object
      properties:
        vault:
          description: The Key Vault containing the SSL certificate
          type: object
          properties:
            id:
              type: string
              description: Resource ID.
        secretName:
          type: string
          description: The name of the Key Vault secret representing the full certificate PFX
        secretVersion:
          type: string
          description: The version of the Key Vault secret representing the full certificate PFX
    FrontDoorCertificateSourceParameters:
      description: Parameters required for enabling SSL with Front Door-managed certificates
      type: object
      properties:
        certificateType:
          description: Defines the type of the certificate used for secure connections to a frontendEndpoint
          enum:
            - Dedicated
          type: string
          x-ms-enum:
            name: FrontDoorCertificateType
            modelAsString: true
    CustomHttpsConfiguration:
      description: Https settings for a domain
      type: object
      required:
        - minimumTlsVersion
        - certificateSource
        - protocolType
      properties:
        certificateSource:
          description: Defines the source of the SSL certificate
          enum:
            - AzureKeyVault
            - FrontDoor
          type: string
          x-ms-enum:
            name: FrontDoorCertificateSource
            modelAsString: true
        protocolType:
          description: Defines the TLS extension protocol that is used for secure delivery
          enum:
            - ServerNameIndication
          type: string
          x-ms-enum:
            name: FrontDoorTlsProtocolType
            modelAsString: true
        minimumTlsVersion:
          description: The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
          enum:
            - '1.0'
            - '1.2'
          type: string
          x-ms-enum:
            name: MinimumTLSVersion
            modelAsString: true
        keyVaultCertificateSourceParameters:
          description: KeyVault certificate source parameters (if certificateSource=AzureKeyVault)
          x-ms-client-flatten: true
          $ref: '#/components/schemas/KeyVaultCertificateSourceParameters'
        frontDoorCertificateSourceParameters:
          description: Parameters required for enabling SSL with Front Door-managed certificates (if certificateSource=FrontDoor)
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FrontDoorCertificateSourceParameters'
    FrontendEndpoint:
      description: A frontend endpoint used for routing.
      properties:
        properties:
          description: Properties of the Frontend endpoint
          x-ms-client-flatten: true
          $ref: '#/components/schemas/FrontendEndpointProperties'
        name:
          type: string
          description: Resource name.
        type:
          type: string
          readOnly: true
          description: Resource type.
        id:
          type: string
          description: Resource ID.
      type: object
    FrontendEndpointProperties:
      description: The JSON object that contains the properties required to create a frontend endpoint.
      properties:
        hostName:
          description: The host name of the frontendEndpoint. Must be a domain name.
          type: string
        sessionAffinityEnabledState:
          description: Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: SessionAffinityEnabledState
            modelAsString: true
        sessionAffinityTtlSeconds:
          description: UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
          type: integer
        webApplicationFirewallPolicyLink:
          description: Defines the Web Application Firewall policy for each host (if applicable)
          type: object
          properties:
            id:
              type: string
              description: Resource ID.
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/ResourceState'
        customHttpsProvisioningState:
          description: Provisioning status of Custom Https of the frontendEndpoint.
          readOnly: true
          enum:
            - Enabling
            - Enabled
            - Disabling
            - Disabled
            - Failed
          type: string
          x-ms-enum:
            name: CustomHttpsProvisioningState
            modelAsString: true
        customHttpsProvisioningSubstate:
          description: Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
          readOnly: true
          enum:
            - SubmittingDomainControlValidationRequest
            - PendingDomainControlValidationREquestApproval
            - DomainControlValidationRequestApproved
            - DomainControlValidationRequestRejected
            - DomainControlValidationRequestTimedOut
            - IssuingCertificate
            - DeployingCertificate
            - CertificateDeployed
            - DeletingCertificate
            - CertificateDeleted
          type: string
          x-ms-enum:
            name: CustomHttpsProvisioningSubstate
            modelAsString: true
        customHttpsConfiguration:
          description: The configuration specifying how to enable HTTPS
          readOnly: true
          $ref: '#/components/schemas/CustomHttpsConfiguration'
      type: object
    FrontendEndpointUpdateParameters:
      description: Frontend endpoint used in routing rule
      type: object
      properties:
        hostName:
          description: The host name of the frontendEndpoint. Must be a domain name.
          type: string
        sessionAffinityEnabledState:
          description: Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: SessionAffinityEnabledState
            modelAsString: true
        sessionAffinityTtlSeconds:
          description: UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
          type: integer
        webApplicationFirewallPolicyLink:
          description: Defines the Web Application Firewall policy for each host (if applicable)
          type: object
          properties:
            id:
              type: string
              description: Resource ID.
    FrontendEndpointsListResult:
      description: Result of the request to list frontend endpoints. It contains a list of Frontend endpoint objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/FrontendEndpoint'
          description: List of Frontend endpoints within a Front Door.
        nextLink:
          type: string
          description: URL to get the next set of frontend endpoints if there are any.
      type: object
    BackendPoolsSettings:
      description: Settings that apply to all backend pools.
      type: object
      properties:
        enforceCertificateNameCheck:
          description: Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            name: enforceCertificateNameCheckEnabledState
            modelAsString: true
          default: Enabled
        sendRecvTimeoutSeconds:
          description: Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
          type: integer
          minimum: 16
          exclusiveMinimum: false
    HeaderAction:
      description: An action that can manipulate an http header.
      required:
        - headerActionType
        - headerName
      properties:
        headerActionType:
          description: Which type of manipulation to apply to the header.
          type: string
          enum:
            - Append
            - Delete
            - Overwrite
          x-ms-enum:
            name: headerActionType
            modelAsString: true
        headerName:
          description: The name of the header this action will apply to.
          type: string
        value:
          description: The value to update the given header name with. This value is not used if the actionType is Delete.
          type: string
      type: object
    RulesEngineMatchCondition:
      description: Define a match condition
      required:
        - rulesEngineMatchVariable
        - rulesEngineOperator
        - rulesEngineMatchValue
      properties:
        rulesEngineMatchVariable:
          description: Match Variable
          type: string
          enum:
            - IsMobile
            - RemoteAddr
            - RequestMethod
            - QueryString
            - PostArgs
            - RequestUri
            - RequestPath
            - RequestFilename
            - RequestFilenameExtension
            - RequestHeader
            - RequestBody
            - RequestScheme
          x-ms-enum:
            name: RulesEngineMatchVariable
            modelAsString: true
        selector:
          description: Name of selector in RequestHeader or RequestBody to be matched
          type: string
        rulesEngineOperator:
          description: Describes operator to apply to the match condition.
          type: string
          enum:
            - Any
            - IPMatch
            - GeoMatch
            - Equal
            - Contains
            - LessThan
            - GreaterThan
            - LessThanOrEqual
            - GreaterThanOrEqual
            - BeginsWith
            - EndsWith
          x-ms-enum:
            name: RulesEngineOperator
            modelAsString: true
        negateCondition:
          description: Describes if this is negate condition or not
          type: boolean
        rulesEngineMatchValue:
          description: Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
          type: array
          items:
            type: string
        transforms:
          description: List of transforms
          type: array
          items:
            $ref: '#/components/schemas/transform'
      type: object
    ResourceState:
      title: Resource status of the Front Door or Front Door SubResource.
      readOnly: true
      enum:
        - Creating
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Deleting
        - Migrating
        - Migrated
      type: string
      x-ms-enum:
        name: FrontDoorResourceState
        modelAsString: true
    RulesEngineAction:
      description: One or more actions that will execute, modifying the request and/or response.
      properties:
        requestHeaderActions:
          description: A list of header actions to apply from the request from AFD to the origin.
          type: array
          items:
            $ref: '#/components/schemas/HeaderAction'
        responseHeaderActions:
          description: A list of header actions to apply from the response from AFD to the client.
          type: array
          items:
            $ref: '#/components/schemas/HeaderAction'
        routeConfigurationOverride:
          description: Override the route configuration.
          $ref: '#/components/schemas/RouteConfiguration'
      type: object
    RulesEngine:
      description: A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
      x-ms-azure-resource: true
      properties:
        properties:
          description: Properties of the Rules Engine Configuration.
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RulesEngineProperties'
        name:
          type: string
          readOnly: true
          description: Resource name.
        type:
          type: string
          readOnly: true
          description: Resource type.
        id:
          type: string
          readOnly: true
          description: Resource ID.
      type: object
    RulesEngineListResult:
      description: Result of the request to list Rules Engine Configurations. It contains a list of RulesEngine objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RulesEngine'
          description: List of rulesEngines within a Front Door.
        nextLink:
          type: string
          description: URL to get the next set of RulesEngine objects if there are any.
      type: object
    RulesEngineProperties:
      description: The JSON object that contains the properties required to create a Rules Engine Configuration.
      properties:
        rules:
          description: A list of rules that define a particular Rules Engine Configuration.
          type: array
          items:
            $ref: '#/components/schemas/RulesEngineRule'
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/ResourceState'
      type: object
    RulesEngineRule:
      description: Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
      required:
        - action
        - name
        - priority
      properties:
        name:
          description: A name to refer to this specific rule.
          type: string
        priority:
          description: 'A priority assigned to this rule. '
          type: integer
        action:
          description: Actions to perform on the request and response if all of the match conditions are met.
          $ref: '#/components/schemas/RulesEngineAction'
        matchConditions:
          description: A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
          type: array
          items:
            $ref: '#/components/schemas/RulesEngineMatchCondition'
        matchProcessingBehavior:
          description: If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
          type: string
          enum:
            - Continue
            - Stop
          x-ms-enum:
            name: MatchProcessingBehavior
            modelAsString: true
      type: object
    RulesEngineUpdateParameters:
      description: Rules Engine Configuration to apply to a Routing Rule.
      type: object
      properties:
        rules:
          description: A list of rules that define a particular Rules Engine Configuration.
          type: array
          items:
            $ref: '#/components/schemas/RulesEngineRule'
    transform:
      description: Describes what transforms are applied before matching
      type: string
      enum:
        - Lowercase
        - Uppercase
        - Trim
        - UrlDecode
        - UrlEncode
        - RemoveNulls
      x-ms-enum:
        name: transform
        modelAsString: true
    ValidateCustomDomainInput:
      description: Input of the custom domain to be validated for DNS mapping.
      type: object
      required:
        - hostName
      properties:
        hostName:
          description: The host name of the custom domain. Must be a domain name.
          type: string
    ValidateCustomDomainOutput:
      description: Output of custom domain validation.
      type: object
      properties:
        customDomainValidated:
          description: Indicates whether the custom domain is valid or not.
          readOnly: true
          type: boolean
        reason:
          description: The reason why the custom domain is not valid.
          readOnly: true
          type: string
        message:
          description: Error message describing why the custom domain is not valid.
          readOnly: true
          type: string
    CheckNameAvailabilityInput:
      description: Input of CheckNameAvailability API.
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: The resource name to validate.
          type: string
        type:
          description: The type of the resource whose name is to be validated.
          $ref: '#/components/schemas/ResourceType'
    CheckNameAvailabilityOutput:
      description: Output of check name availability API.
      type: object
      properties:
        nameAvailability:
          description: Indicates whether the name is available.
          readOnly: true
          enum:
            - Available
            - Unavailable
          type: string
          x-ms-enum:
            name: Availability
            modelAsString: true
        reason:
          description: The reason why the name is not available.
          readOnly: true
          type: string
        message:
          description: The detailed error message describing why the name is not available.
          readOnly: true
          type: string
    ResourceType:
      description: Type of Front Door resource used in CheckNameAvailability.
      enum:
        - Microsoft.Network/frontDoors
        - Microsoft.Network/frontDoors/frontendEndpoints
      type: string
      x-ms-enum:
        name: ResourceType
        modelAsString: false
    ProfileProperties:
      description: Defines the properties of an experiment
      type: object
      properties:
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/NetworkExperimentResourceState'
        enabledState:
          type: string
          description: The state of the Experiment
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: state
            modelAsString: true
    ProfileList:
      description: Defines a list of Profiles. It contains a list of Profile objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Profile'
          description: List of Profiles within a resource group.
        nextLink:
          type: string
          description: URL to get the next set of Profile objects if there are any.
      type: object
    Profile:
      description: Defines an Network Experiment Profile and lists of Experiments
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name.
        properties:
          description: The properties of a Profile
          $ref: '#/components/schemas/ProfileProperties'
          x-ms-client-flatten: true
        etag:
          type: string
          description: Gets a unique read-only string that changes whenever the resource is updated.
        id:
          readOnly: true
          type: string
          description: Resource ID.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    Endpoint:
      description: Defines the endpoint properties
      type: object
      properties:
        name:
          description: The name of the endpoint
          type: string
        endpoint:
          description: The endpoint URL
          type: string
    ProfileUpdateProperties:
      description: Defines the properties of an experiment
      type: object
      properties:
        enabledState:
          type: string
          description: The enabled state of the Profile
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: state
            modelAsString: true
    ProfileUpdateModel:
      description: Defines modifiable attributes of a Profile
      properties:
        properties:
          description: The properties of a Profile
          $ref: '#/components/schemas/ProfileUpdateProperties'
          x-ms-client-flatten: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    ExperimentUpdateProperties:
      description: Defines the properties of an experiment
      type: object
      properties:
        description:
          description: The description of the intent or details of the Experiment
          type: string
        enabledState:
          type: string
          description: The state of the Experiment
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: state
            modelAsString: true
    ExperimentUpdateModel:
      description: Defines modifiable attributes of an Experiment
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
        properties:
          description: The properties of a Profile
          $ref: '#/components/schemas/ExperimentUpdateProperties'
          x-ms-client-flatten: true
      type: object
    ExperimentProperties:
      description: Defines the properties of an experiment
      type: object
      properties:
        description:
          description: The description of the details or intents of the Experiment
          type: string
        endpointA:
          description: The endpoint A of an experiment
          $ref: '#/components/schemas/Endpoint'
        endpointB:
          description: The endpoint B of an experiment
          $ref: '#/components/schemas/Endpoint'
        enabledState:
          type: string
          description: The state of the Experiment
          enum:
            - Enabled
            - Disabled
          x-ms-enum:
            name: state
            modelAsString: true
        resourceState:
          description: Resource status.
          $ref: '#/components/schemas/NetworkExperimentResourceState'
        status:
          description: The description of Experiment status from the server side
          type: string
          readOnly: true
        scriptFileUri:
          description: The uri to the Script used in the Experiment
          type: string
          readOnly: true
    ExperimentList:
      description: Defines a list of Experiments. It contains a list of Experiment objects and a URL link to get the next set of results.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Experiment'
          description: List of Experiments within a resource group.
        nextLink:
          type: string
          description: URL to get the next set of Experiment objects if there are any.
      type: object
    Experiment:
      description: Defines the properties of an Experiment
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name.
        properties:
          description: The properties of an Experiment
          $ref: '#/components/schemas/ExperimentProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    LatencyScorecard:
      description: Defines the LatencyScorecard
      properties:
        properties:
          description: The properties of a latency scorecard
          $ref: '#/components/schemas/LatencyScorecardProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    NetworkExperimentResourceState:
      description: Defines the server side resource status
      readOnly: true
      enum:
        - Creating
        - Enabling
        - Enabled
        - Disabling
        - Disabled
        - Deleting
      type: string
      x-ms-enum:
        name: NetworkExperimentResourceState
        modelAsString: true
    LatencyScorecardProperties:
      description: Defines a the properties of a Latency Scorecard
      type: object
      properties:
        id:
          description: The unique identifier of the Latency Scorecard
          type: string
          readOnly: true
        name:
          description: The name of the Latency Scorecard
          type: string
          readOnly: true
        description:
          description: The description of the Latency Scorecard
          type: string
          readOnly: true
        endpointA:
          description: The A endpoint in the scorecard
          type: string
          readOnly: true
        endpointB:
          description: The B endpoint in the scorecard
          type: string
          readOnly: true
        startDateTimeUTC:
          description: The start time of the Latency Scorecard in UTC
          type: string
          format: date-time
          readOnly: true
        endDateTimeUTC:
          description: The end time of the Latency Scorecard in UTC
          type: string
          format: date-time
          readOnly: true
        country:
          description: The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html
          type: string
          readOnly: true
        latencyMetrics:
          description: The latency metrics of the Latency Scorecard
          type: array
          items:
            $ref: '#/components/schemas/LatencyMetric'
    LatencyMetric:
      description: Defines the properties of a latency metric used in the latency scorecard
      type: object
      properties:
        name:
          description: The name of the Latency Metric
          type: string
          readOnly: true
        endDateTimeUTC:
          description: The end time of the Latency Scorecard in UTC
          type: string
          readOnly: true
        aValue:
          description: The metric value of the A endpoint
          type: number
          readOnly: true
        bValue:
          description: The metric value of the B endpoint
          type: number
          readOnly: true
        delta:
          description: The difference in value between endpoint A and B
          type: number
          readOnly: true
        deltaPercent:
          description: The percent difference between endpoint A and B
          type: number
          readOnly: true
        aCLower95CI:
          description: The lower end of the 95% confidence interval for endpoint A
          type: number
          readOnly: true
        aHUpper95CI:
          description: The upper end of the 95% confidence interval for endpoint A
          type: number
          readOnly: true
        bCLower95CI:
          description: The lower end of the 95% confidence interval for endpoint B
          type: number
          readOnly: true
        bUpper95CI:
          description: The upper end of the 95% confidence interval for endpoint B
          type: number
          readOnly: true
    Timeseries:
      description: Defines the Timeseries
      properties:
        properties:
          description: The properties of a Timeseries
          $ref: '#/components/schemas/TimeseriesProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        name:
          readOnly: true
          type: string
          description: Resource name.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    TimeseriesProperties:
      description: Defines the properties of a timeseries
      type: object
      properties:
        endpoint:
          type: string
          description: The endpoint associated with the Timeseries data point
        startDateTimeUTC:
          type: string
          description: The start DateTime of the Timeseries in UTC
        endDateTimeUTC:
          type: string
          description: The end DateTime of the Timeseries in UTC
        aggregationInterval:
          type: string
          description: The aggregation interval of the Timeseries
          enum:
            - Hourly
            - Daily
          x-ms-enum:
            name: aggregationInterval
            modelAsString: true
        timeseriesType:
          type: string
          description: The type of Timeseries
          enum:
            - MeasurementCounts
            - LatencyP50
            - LatencyP75
            - LatencyP95
          x-ms-enum:
            name: timeseriesType
            modelAsString: true
        country:
          type: string
          description: The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html
        timeseriesData:
          description: The set of data points for the timeseries
          type: array
          items:
            $ref: '#/components/schemas/TimeseriesDataPoint'
    TimeseriesDataPoint:
      description: Defines a timeseries datapoint used in a timeseries
      type: object
      properties:
        dateTimeUTC:
          description: The DateTime of the Timeseries data point in UTC
          type: string
        value:
          description: The Value of the Timeseries data point
          type: number
    PreconfiguredEndpointList:
      description: Defines a list of preconfigured endpoints.
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/PreconfiguredEndpoint'
          description: List of PreconfiguredEndpoints supported by NetworkExperiment.
        nextLink:
          type: string
          description: URL to get the next set of PreconfiguredEndpoints if there are any.
      type: object
    PreconfiguredEndpoint:
      description: Defines the properties of a preconfigured endpoint
      properties:
        name:
          readOnly: true
          type: string
          description: Resource name.
        properties:
          description: The properties of a preconfiguredEndpoint
          $ref: '#/components/schemas/PreconfiguredEndpointProperties'
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: Resource ID.
        type:
          readOnly: true
          type: string
          description: Resource type.
        location:
          type: string
          description: Resource location.
        tags:
          type: object
          additionalProperties:
            type: string
          description: Resource tags.
      type: object
    PreconfiguredEndpointProperties:
      description: Defines the properties of a preconfigured endpoint
      type: object
      properties:
        description:
          description: The description of the endpoint
          type: string
        endpoint:
          description: The endpoint that is preconfigured
          type: string
        endpointType:
          description: The type of endpoint
          type: string
          enum:
            - AFD
            - AzureRegion
            - CDN
            - ATM
          x-ms-enum:
            name: endpointType
            modelAsString: true
        backend:
          description: The preconfigured endpoint backend
          type: string
  x-stackQL-resources:
    policies:
      id: azure.front_door.policies
      name: policies
      title: policies
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoorWebApplicationFirewallPolicies?api-version=2024-02-01/get'
            operationId: Policies_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebApplicationFirewallPolicyList
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1frontDoorWebApplicationFirewallPolicies?api-version=2024-02-01/get'
            operationId: Policies_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebApplicationFirewallPolicyList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1FrontDoorWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/get'
            operationId: Policies_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebApplicationFirewallPolicy
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1FrontDoorWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/put'
            operationId: Policies_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebApplicationFirewallPolicy
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1FrontDoorWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/patch'
            operationId: Policies_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: WebApplicationFirewallPolicy
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1FrontDoorWebApplicationFirewallPolicies~1{policyName}?api-version=2024-02-01/delete'
            operationId: Policies_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/policies/methods/get'
          - $ref: '#/components/x-stackQL-resources/policies/methods/list'
          - $ref: '#/components/x-stackQL-resources/policies/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/policies/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/policies/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/policies/methods/delete'
    managed_rule_sets:
      id: azure.front_door.managed_rule_sets
      name: managed_rule_sets
      title: managed_rule_sets
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1FrontDoorWebApplicationFirewallManagedRuleSets?api-version=2024-02-01/get'
            operationId: ManagedRuleSets_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedRuleSetDefinitionList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_rule_sets/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.front_door.operations
      name: operations
      title: operations
      methods:
        check_name_availability:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Network~1checkFrontDoorNameAvailability?api-version=2021-06-01/post'
            operationId: Operations_CheckNameAvailability
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityOutput
        check_name_availability_with_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1checkFrontDoorNameAvailability?api-version=2021-06-01/post'
            operationId: Operations_CheckNameAvailabilityWithSubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CheckNameAvailabilityOutput
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    front_doors:
      id: azure.front_door.front_doors
      name: front_doors
      title: front_doors
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1frontDoors?api-version=2021-06-01/get'
            operationId: FrontDoors_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FrontDoorListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors?api-version=2021-06-01/get'
            operationId: FrontDoors_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FrontDoorListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}?api-version=2021-06-01/get'
            operationId: FrontDoors_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FrontDoor
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}?api-version=2021-06-01/put'
            operationId: FrontDoors_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FrontDoor
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}?api-version=2021-06-01/delete'
            operationId: FrontDoors_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        validate_custom_domain:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1validateCustomDomain?api-version=2021-06-01/post'
            operationId: FrontDoors_ValidateCustomDomain
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ValidateCustomDomainOutput
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/front_doors/methods/get'
          - $ref: '#/components/x-stackQL-resources/front_doors/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/front_doors/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/front_doors/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/front_doors/methods/delete'
    frontend_endpoints:
      id: azure.front_door.frontend_endpoints
      name: frontend_endpoints
      title: frontend_endpoints
      methods:
        list_by_front_door:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1frontendEndpoints?api-version=2021-06-01/get'
            operationId: FrontendEndpoints_ListByFrontDoor
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FrontendEndpointsListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1frontendEndpoints~1{frontendEndpointName}?api-version=2021-06-01/get'
            operationId: FrontendEndpoints_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: FrontendEndpoint
        enable_https:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1frontendEndpoints~1{frontendEndpointName}~1enableHttps?api-version=2021-06-01/post'
            operationId: FrontendEndpoints_EnableHttps
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        disable_https:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1frontendEndpoints~1{frontendEndpointName}~1disableHttps?api-version=2021-06-01/post'
            operationId: FrontendEndpoints_DisableHttps
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/frontend_endpoints/methods/get'
          - $ref: '#/components/x-stackQL-resources/frontend_endpoints/methods/list_by_front_door'
        insert: []
        update: []
        replace: []
        delete: []
    endpoints:
      id: azure.front_door.endpoints
      name: endpoints
      title: endpoints
      methods:
        purge_content:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1purge?api-version=2021-06-01/post'
            operationId: Endpoints_PurgeContent
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    rules_engines:
      id: azure.front_door.rules_engines
      name: rules_engines
      title: rules_engines
      methods:
        list_by_front_door:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1rulesEngines?api-version=2021-06-01/get'
            operationId: RulesEngines_ListByFrontDoor
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RulesEngineListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1rulesEngines~1{rulesEngineName}?api-version=2021-06-01/get'
            operationId: RulesEngines_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RulesEngine
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1rulesEngines~1{rulesEngineName}?api-version=2021-06-01/put'
            operationId: RulesEngines_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RulesEngine
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1frontDoors~1{frontDoorName}~1rulesEngines~1{rulesEngineName}?api-version=2021-06-01/delete'
            operationId: RulesEngines_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rules_engines/methods/get'
          - $ref: '#/components/x-stackQL-resources/rules_engines/methods/list_by_front_door'
        insert:
          - $ref: '#/components/x-stackQL-resources/rules_engines/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rules_engines/methods/delete'
    network_experiment_profiles:
      id: azure.front_door.network_experiment_profiles
      name: network_experiment_profiles
      title: network_experiment_profiles
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Network~1NetworkExperimentProfiles?api-version=2019-11-01/get'
            operationId: NetworkExperimentProfiles_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProfileList
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles?api-version=2019-11-01/get'
            operationId: NetworkExperimentProfiles_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ProfileList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}?api-version=2019-11-01/get'
            operationId: NetworkExperimentProfiles_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}?api-version=2019-11-01/put'
            operationId: NetworkExperimentProfiles_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}?api-version=2019-11-01/patch'
            operationId: NetworkExperimentProfiles_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Profile
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}?api-version=2019-11-01/delete'
            operationId: NetworkExperimentProfiles_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_experiment_profiles/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_experiment_profiles/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/network_experiment_profiles/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/network_experiment_profiles/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/network_experiment_profiles/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/network_experiment_profiles/methods/delete'
    preconfigured_endpoints:
      id: azure.front_door.preconfigured_endpoints
      name: preconfigured_endpoints
      title: preconfigured_endpoints
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1PreconfiguredEndpoints?api-version=2019-11-01/get'
            operationId: PreconfiguredEndpoints_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PreconfiguredEndpointList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/preconfigured_endpoints/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    experiments:
      id: azure.front_door.experiments
      name: experiments
      title: experiments
      methods:
        list_by_profile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1Experiments?api-version=2019-11-01/get'
            operationId: Experiments_ListByProfile
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ExperimentList
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1Experiments~1{experimentName}?api-version=2019-11-01/get'
            operationId: Experiments_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Experiment
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1Experiments~1{experimentName}?api-version=2019-11-01/put'
            operationId: Experiments_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Experiment
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1Experiments~1{experimentName}?api-version=2019-11-01/patch'
            operationId: Experiments_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Experiment
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1Experiments~1{experimentName}?api-version=2019-11-01/delete'
            operationId: Experiments_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/get'
          - $ref: '#/components/x-stackQL-resources/experiments/methods/list_by_profile'
        insert:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/delete'
    reports_latency_scorecards:
      id: azure.front_door.reports_latency_scorecards
      name: reports_latency_scorecards
      title: reports_latency_scorecards
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1Experiments~1{experimentName}~1LatencyScorecard?api-version=2019-11-01/get'
            operationId: ReportsLatencyScorecards_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LatencyScorecard
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports_latency_scorecards/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    reports_timeseries:
      id: azure.front_door.reports_timeseries
      name: reports_timeseries
      title: reports_timeseries
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Network~1NetworkExperimentProfiles~1{profileName}~1Experiments~1{experimentName}~1Timeseries?api-version=2019-11-01/get'
            operationId: ReportsTimeseries_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: Timeseries
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/reports_timeseries/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    vw_policies:
      id: azure.front_door.vw_policies
      name: vw_policies
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              etag as etag,
              sku as sku,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.policySettings') as "policy_settings",
              JSON_EXTRACT(properties, '$.customRules') as "custom_rules",
              JSON_EXTRACT(properties, '$.managedRules') as "managed_rules",
              JSON_EXTRACT(properties, '$.frontendEndpointLinks') as "frontend_endpoint_links",
              JSON_EXTRACT(properties, '$.routingRuleLinks') as "routing_rule_links",
              JSON_EXTRACT(properties, '$.securityPolicyLinks') as "security_policy_links",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              subscriptionId,
              resourceGroupName,
              policyName
              FROM azure.front_door.policies
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                etag as etag,
                sku as sku,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.policySettings') as "policy_settings",
                json_extract_path_text(properties, '$.customRules') as "custom_rules",
                json_extract_path_text(properties, '$.managedRules') as "managed_rules",
                json_extract_path_text(properties, '$.frontendEndpointLinks') as "frontend_endpoint_links",
                json_extract_path_text(properties, '$.routingRuleLinks') as "routing_rule_links",
                json_extract_path_text(properties, '$.securityPolicyLinks') as "security_policy_links",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                subscriptionId,
                resourceGroupName,
                policyName
                FROM azure.front_door.policies
                WHERE subscriptionId = 'replace-me';
    vw_front_doors:
      id: azure.front_door.vw_front_doors
      name: vw_front_doors
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.friendlyName') as "friendly_name",
              JSON_EXTRACT(properties, '$.routingRules') as "routing_rules",
              JSON_EXTRACT(properties, '$.loadBalancingSettings') as "load_balancing_settings",
              JSON_EXTRACT(properties, '$.healthProbeSettings') as "health_probe_settings",
              JSON_EXTRACT(properties, '$.backendPools') as "backend_pools",
              JSON_EXTRACT(properties, '$.frontendEndpoints') as "frontend_endpoints",
              JSON_EXTRACT(properties, '$.backendPoolsSettings') as "backend_pools_settings",
              JSON_EXTRACT(properties, '$.enabledState') as "enabled_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.cname') as "cname",
              JSON_EXTRACT(properties, '$.frontdoorId') as "frontdoor_id",
              JSON_EXTRACT(properties, '$.rulesEngines') as "rules_engines",
              JSON_EXTRACT(properties, '$.extendedProperties') as "extended_properties",
              subscriptionId,
              resourceGroupName,
              frontDoorName
              FROM azure.front_door.front_doors
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.friendlyName') as "friendly_name",
                json_extract_path_text(properties, '$.routingRules') as "routing_rules",
                json_extract_path_text(properties, '$.loadBalancingSettings') as "load_balancing_settings",
                json_extract_path_text(properties, '$.healthProbeSettings') as "health_probe_settings",
                json_extract_path_text(properties, '$.backendPools') as "backend_pools",
                json_extract_path_text(properties, '$.frontendEndpoints') as "frontend_endpoints",
                json_extract_path_text(properties, '$.backendPoolsSettings') as "backend_pools_settings",
                json_extract_path_text(properties, '$.enabledState') as "enabled_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.cname') as "cname",
                json_extract_path_text(properties, '$.frontdoorId') as "frontdoor_id",
                json_extract_path_text(properties, '$.rulesEngines') as "rules_engines",
                json_extract_path_text(properties, '$.extendedProperties') as "extended_properties",
                subscriptionId,
                resourceGroupName,
                frontDoorName
                FROM azure.front_door.front_doors
                WHERE subscriptionId = 'replace-me';
    vw_frontend_endpoints:
      id: azure.front_door.vw_frontend_endpoints
      name: vw_frontend_endpoints
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.hostName') as "host_name",
              JSON_EXTRACT(properties, '$.sessionAffinityEnabledState') as "session_affinity_enabled_state",
              JSON_EXTRACT(properties, '$.sessionAffinityTtlSeconds') as "session_affinity_ttl_seconds",
              JSON_EXTRACT(properties, '$.webApplicationFirewallPolicyLink') as "web_application_firewall_policy_link",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.customHttpsProvisioningState') as "custom_https_provisioning_state",
              JSON_EXTRACT(properties, '$.customHttpsProvisioningSubstate') as "custom_https_provisioning_substate",
              JSON_EXTRACT(properties, '$.customHttpsConfiguration') as "custom_https_configuration",
              subscriptionId,
              resourceGroupName,
              frontDoorName,
              frontendEndpointName
              FROM azure.front_door.frontend_endpoints
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND frontDoorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.hostName') as "host_name",
                json_extract_path_text(properties, '$.sessionAffinityEnabledState') as "session_affinity_enabled_state",
                json_extract_path_text(properties, '$.sessionAffinityTtlSeconds') as "session_affinity_ttl_seconds",
                json_extract_path_text(properties, '$.webApplicationFirewallPolicyLink') as "web_application_firewall_policy_link",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.customHttpsProvisioningState') as "custom_https_provisioning_state",
                json_extract_path_text(properties, '$.customHttpsProvisioningSubstate') as "custom_https_provisioning_substate",
                json_extract_path_text(properties, '$.customHttpsConfiguration') as "custom_https_configuration",
                subscriptionId,
                resourceGroupName,
                frontDoorName,
                frontendEndpointName
                FROM azure.front_door.frontend_endpoints
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND frontDoorName = 'replace-me';
    vw_rules_engines:
      id: azure.front_door.vw_rules_engines
      name: vw_rules_engines
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.rules') as "rules",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              subscriptionId,
              resourceGroupName,
              frontDoorName,
              rulesEngineName
              FROM azure.front_door.rules_engines
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND frontDoorName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.rules') as "rules",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                subscriptionId,
                resourceGroupName,
                frontDoorName,
                rulesEngineName
                FROM azure.front_door.rules_engines
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND frontDoorName = 'replace-me';
    vw_network_experiment_profiles:
      id: azure.front_door.vw_network_experiment_profiles
      name: vw_network_experiment_profiles
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              etag as etag,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.enabledState') as "enabled_state",
              subscriptionId,
              resourceGroupName,
              profileName
              FROM azure.front_door.network_experiment_profiles
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                etag as etag,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.enabledState') as "enabled_state",
                subscriptionId,
                resourceGroupName,
                profileName
                FROM azure.front_door.network_experiment_profiles
                WHERE subscriptionId = 'replace-me';
    vw_experiments:
      id: azure.front_door.vw_experiments
      name: vw_experiments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.endpointA') as "endpointa",
              JSON_EXTRACT(properties, '$.endpointB') as "endpointb",
              JSON_EXTRACT(properties, '$.enabledState') as "enabled_state",
              JSON_EXTRACT(properties, '$.resourceState') as "resource_state",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.scriptFileUri') as "script_file_uri",
              subscriptionId,
              resourceGroupName,
              profileName,
              experimentName
              FROM azure.front_door.experiments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.endpointA') as "endpointa",
                json_extract_path_text(properties, '$.endpointB') as "endpointb",
                json_extract_path_text(properties, '$.enabledState') as "enabled_state",
                json_extract_path_text(properties, '$.resourceState') as "resource_state",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.scriptFileUri') as "script_file_uri",
                subscriptionId,
                resourceGroupName,
                profileName,
                experimentName
                FROM azure.front_door.experiments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me';
    vw_reports_latency_scorecards:
      id: azure.front_door.vw_reports_latency_scorecards
      name: vw_reports_latency_scorecards
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.id') as "id",
              JSON_EXTRACT(properties, '$.name') as "name",
              JSON_EXTRACT(properties, '$.description') as "description",
              JSON_EXTRACT(properties, '$.endpointA') as "endpointa",
              JSON_EXTRACT(properties, '$.endpointB') as "endpointb",
              JSON_EXTRACT(properties, '$.startDateTimeUTC') as "start_date_time_utc",
              JSON_EXTRACT(properties, '$.endDateTimeUTC') as "end_date_time_utc",
              JSON_EXTRACT(properties, '$.country') as "country",
              JSON_EXTRACT(properties, '$.latencyMetrics') as "latency_metrics",
              subscriptionId,
              resourceGroupName,
              profileName,
              experimentName,
              aggregationInterval
              FROM azure.front_door.reports_latency_scorecards
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND experimentName = 'replace-me' AND aggregationInterval = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.id') as "id",
                json_extract_path_text(properties, '$.name') as "name",
                json_extract_path_text(properties, '$.description') as "description",
                json_extract_path_text(properties, '$.endpointA') as "endpointa",
                json_extract_path_text(properties, '$.endpointB') as "endpointb",
                json_extract_path_text(properties, '$.startDateTimeUTC') as "start_date_time_utc",
                json_extract_path_text(properties, '$.endDateTimeUTC') as "end_date_time_utc",
                json_extract_path_text(properties, '$.country') as "country",
                json_extract_path_text(properties, '$.latencyMetrics') as "latency_metrics",
                subscriptionId,
                resourceGroupName,
                profileName,
                experimentName,
                aggregationInterval
                FROM azure.front_door.reports_latency_scorecards
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND experimentName = 'replace-me' AND aggregationInterval = 'replace-me';
    vw_reports_timeseries:
      id: azure.front_door.vw_reports_timeseries
      name: vw_reports_timeseries
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.endpoint') as "endpoint",
              JSON_EXTRACT(properties, '$.startDateTimeUTC') as "start_date_time_utc",
              JSON_EXTRACT(properties, '$.endDateTimeUTC') as "end_date_time_utc",
              JSON_EXTRACT(properties, '$.aggregationInterval') as "aggregation_interval",
              JSON_EXTRACT(properties, '$.timeseriesType') as "timeseries_type",
              JSON_EXTRACT(properties, '$.country') as "country",
              JSON_EXTRACT(properties, '$.timeseriesData') as "timeseries_data",
              subscriptionId,
              resourceGroupName,
              profileName,
              experimentName,
              startDateTimeUTC,
              endDateTimeUTC,
              aggregationInterval,
              timeseriesType
              FROM azure.front_door.reports_timeseries
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND experimentName = 'replace-me' AND startDateTimeUTC = 'replace-me' AND endDateTimeUTC = 'replace-me' AND aggregationInterval = 'replace-me' AND timeseriesType = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.endpoint') as "endpoint",
                json_extract_path_text(properties, '$.startDateTimeUTC') as "start_date_time_utc",
                json_extract_path_text(properties, '$.endDateTimeUTC') as "end_date_time_utc",
                json_extract_path_text(properties, '$.aggregationInterval') as "aggregation_interval",
                json_extract_path_text(properties, '$.timeseriesType') as "timeseries_type",
                json_extract_path_text(properties, '$.country') as "country",
                json_extract_path_text(properties, '$.timeseriesData') as "timeseries_data",
                subscriptionId,
                resourceGroupName,
                profileName,
                experimentName,
                startDateTimeUTC,
                endDateTimeUTC,
                aggregationInterval,
                timeseriesType
                FROM azure.front_door.reports_timeseries
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND profileName = 'replace-me' AND experimentName = 'replace-me' AND startDateTimeUTC = 'replace-me' AND endDateTimeUTC = 'replace-me' AND aggregationInterval = 'replace-me' AND timeseriesType = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies?api-version=2024-02-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Lists all of the protection policies within a resource group.
      operationId: Policies_List
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicyList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/frontDoorWebApplicationFirewallPolicies?api-version=2024-02-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Lists all of the protection policies within a subscription.
      operationId: Policies_ListBySubscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicyList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}?api-version=2024-02-01:
    get:
      tags:
        - WebApplicationFirewallPolicies
      description: Retrieve protection policy with specified name within a resource group.
      operationId: Policies_Get
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - WebApplicationFirewallPolicies
      description: Create or update policy with specified rule set name within a resource group.
      operationId: Policies_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Policy to be created.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApplicationFirewallPolicy'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        '201':
          description: Created. The request has been fulfilled and a new protection policy has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - WebApplicationFirewallPolicies
      description: Patch a specific frontdoor webApplicationFirewall policy for tags update under the specified subscription and resource group.
      operationId: Policies_Update
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: FrontdoorWebApplicationFirewallPolicy parameters to be patched.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsObject'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplicationFirewallPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - WebApplicationFirewallPolicies
      description: Deletes Policy
      operationId: Policies_Delete
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/PolicyNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
        '204':
          description: No Content. The request has been accepted but the policy was not found.
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallManagedRuleSets?api-version=2024-02-01:
    get:
      tags:
        - WebApplicationFirewallManagedRuleSets
      description: Lists all available managed rule sets.
      operationId: ManagedRuleSets_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Success. The operation returns a list of all available web application firewall managed rule sets.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedRuleSetDefinitionList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Network/checkFrontDoorNameAvailability?api-version=2021-06-01:
    post:
      tags:
        - CheckFrontDoorNameAvailability
      description: Check the availability of a Front Door resource name.
      operationId: Operations_CheckNameAvailability
      requestBody:
        description: Input to check.
        required: true
        x-ms-requestBody-name: checkFrontDoorNameAvailabilityInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityInput'
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityOutput'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: FrontDoorNameAvailability_Check
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/checkFrontDoorNameAvailability?api-version=2021-06-01:
    post:
      tags:
        - CheckFrontDoorNameAvailabilityWithSubscription
      description: Check the availability of a Front Door subdomain.
      operationId: Operations_CheckNameAvailabilityWithSubscription
      requestBody:
        description: Input to check.
        required: true
        x-ms-requestBody-name: checkFrontDoorNameAvailabilityInput
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityInput'
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityOutput'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: FrontDoorNameAvailabilityWithSubscription_Check
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/frontDoors?api-version=2021-06-01:
    get:
      tags:
        - FrontDoors
      description: Lists all of the Front Doors within an Azure subscription.
      operationId: FrontDoors_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontDoorListResult'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors?api-version=2021-06-01:
    get:
      tags:
        - FrontDoors
      description: Lists all of the Front Doors within a resource group under a subscription.
      operationId: FrontDoors_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontDoorListResult'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}?api-version=2021-06-01:
    get:
      tags:
        - FrontDoors
      description: Gets a Front Door with the specified Front Door name under the specified subscription and resource group.
      operationId: FrontDoors_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontDoor'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - FrontDoors
      description: Creates a new Front Door with a Front Door name under the specified subscription and resource group.
      operationId: FrontDoors_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
      requestBody:
        description: Front Door properties needed to create a new Front Door.
        required: true
        x-ms-requestBody-name: frontDoorParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrontDoor'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontDoor'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontDoor'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontDoor'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - FrontDoors
      description: Deletes an existing Front Door with the specified parameters.
      operationId: FrontDoors_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints?api-version=2021-06-01:
    get:
      tags:
        - FrontDoors
      description: Lists all of the frontend endpoints within a Front Door.
      operationId: FrontendEndpoints_ListByFrontDoor
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontendEndpointsListResult'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}?api-version=2021-06-01:
    get:
      tags:
        - FrontDoors
      description: Gets a Frontend endpoint with the specified name within the specified Front Door.
      operationId: FrontendEndpoints_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
        - $ref: '#/components/parameters/frontendEndpointNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrontendEndpoint'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/purge?api-version=2021-06-01:
    post:
      tags:
        - FrontDoors
      description: Removes a content from Front Door.
      operationId: Endpoints_PurgeContent
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
      requestBody:
        description: The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.
        required: true
        x-ms-requestBody-name: contentFilePaths
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurgeParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/enableHttps?api-version=2021-06-01:
    post:
      tags:
        - FrontDoors
      description: Enables a frontendEndpoint for HTTPS traffic
      operationId: FrontendEndpoints_EnableHttps
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
        - $ref: '#/components/parameters/frontendEndpointNameParameter'
      requestBody:
        description: The configuration specifying how to enable HTTPS
        required: true
        x-ms-requestBody-name: customHttpsConfiguration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomHttpsConfiguration'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/frontendEndpoints/{frontendEndpointName}/disableHttps?api-version=2021-06-01:
    post:
      tags:
        - FrontDoors
      description: Disables a frontendEndpoint for HTTPS traffic
      operationId: FrontendEndpoints_DisableHttps
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
        - $ref: '#/components/parameters/frontendEndpointNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/validateCustomDomain?api-version=2021-06-01:
    post:
      tags:
        - FrontDoors
      description: Validates the custom domain mapping to ensure it maps to the correct Front Door endpoint in DNS.
      operationId: FrontDoors_ValidateCustomDomain
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
      requestBody:
        description: Custom domain to be validated.
        required: true
        x-ms-requestBody-name: customDomainProperties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateCustomDomainInput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCustomDomainOutput'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/rulesEngines?api-version=2021-06-01:
    get:
      tags:
        - FrontDoors
      description: Lists all of the Rules Engine Configurations within a Front Door.
      operationId: RulesEngines_ListByFrontDoor
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesEngineListResult'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/frontDoors/{frontDoorName}/rulesEngines/{rulesEngineName}?api-version=2021-06-01:
    get:
      tags:
        - FrontDoors
      description: Gets a Rules Engine Configuration with the specified name within the specified Front Door.
      operationId: RulesEngines_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
        - $ref: '#/components/parameters/rulesEngineNameParameter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesEngine'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - FrontDoors
      description: Creates a new Rules Engine Configuration with the specified name within the specified Front Door.
      operationId: RulesEngines_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
        - $ref: '#/components/parameters/rulesEngineNameParameter'
      requestBody:
        description: Rules Engine Configuration properties needed to create a new Rules Engine Configuration.
        required: true
        x-ms-requestBody-name: rulesEngineParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RulesEngine'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesEngine'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesEngine'
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesEngine'
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
    delete:
      tags:
        - FrontDoors
      description: Deletes an existing Rules Engine Configuration with the specified parameters.
      operationId: RulesEngines_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/frontDoorNameParameter'
        - $ref: '#/components/parameters/rulesEngineNameParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          description: Front Door error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
  /subscriptions/{subscriptionId}/providers/Microsoft.Network/NetworkExperimentProfiles?api-version=2019-11-01:
    get:
      tags:
        - NetworkExperimentProfiles
      summary: Gets a list of Network Experiment Profiles under a subscription
      operationId: NetworkExperimentProfiles_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles?api-version=2019-11-01:
    get:
      tags:
        - NetworkExperimentProfiles
      summary: Gets a list of Network Experiment Profiles within a resource group under a subscription
      operationId: NetworkExperimentProfiles_ListByResourceGroup
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}?api-version=2019-11-01:
    get:
      tags:
        - NetworkExperimentProfiles
      summary: Gets an NetworkExperiment Profile by ProfileName
      operationId: NetworkExperimentProfiles_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NetworkExperimentProfiles
      summary: Creates an NetworkExperiment Profile
      operationId: NetworkExperimentProfiles_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/ProfileNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      requestBody:
        description: An Network Experiment Profile
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '201':
          description: Created. The request has been fulfilled and a new protection policy has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - NetworkExperimentProfiles
      description: Updates an NetworkExperimentProfiles
      summary: Updates an NetworkExperimentProfiles by NetworkExperimentProfile name
      operationId: NetworkExperimentProfiles_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
      requestBody:
        description: The Profile Update Model
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateModel'
      responses:
        '200':
          description: OK. successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - NetworkExperimentProfiles
      summary: Deletes an NetworkExperiment Profile by ProfileName
      operationId: NetworkExperimentProfiles_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
        '204':
          description: No Content. The request has been accepted but the profile was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/PreconfiguredEndpoints?api-version=2019-11-01:
    get:
      tags:
        - PreconfiguredEndpoints
      summary: Gets a list of Preconfigured Endpoints
      operationId: PreconfiguredEndpoints_List
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreconfiguredEndpointList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments?api-version=2019-11-01:
    get:
      tags:
        - Experiments
      summary: Gets a list of Experiments
      operationId: Experiments_ListByProfile
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperimentList'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}?api-version=2019-11-01:
    get:
      tags:
        - Experiments
      summary: Gets an Experiment by ExperimentName
      operationId: Experiments_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
        - $ref: '#/components/parameters/ExperimentNameParameter'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Experiments
      summary: Creates or updates an Experiment
      operationId: Experiments_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
        - $ref: '#/components/parameters/ExperimentNameParameter'
      requestBody:
        description: The Experiment resource
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experiment'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '201':
          description: Created. The request has been fulfilled and a new experiment has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    patch:
      tags:
        - Experiments
      description: Updates an Experiment
      summary: Updates an Experiment by Experiment id
      operationId: Experiments_Update
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
        - $ref: '#/components/parameters/ExperimentNameParameter'
      requestBody:
        description: The Experiment Update Model
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExperimentUpdateModel'
      responses:
        '200':
          description: OK. successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experiment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - Experiments
      summary: Deletes an Experiment
      operationId: Experiments_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
        - $ref: '#/components/parameters/ExperimentNameParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted. The request has been accepted for processing and the operation will complete asynchronously.
        '204':
          description: No Content. The request has been accepted but the policy was not found.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/LatencyScorecard?api-version=2019-11-01:
    get:
      tags:
        - Reports
      summary: Gets a Latency Scorecard for a given Experiment
      operationId: ReportsLatencyScorecards_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
        - $ref: '#/components/parameters/ExperimentNameParameter'
        - name: endDateTimeUTC
          in: query
          description: The end DateTime of the Latency Scorecard in UTC
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html
          required: false
          schema:
            type: string
        - name: aggregationInterval
          in: query
          description: The aggregation interval of the Latency Scorecard
          required: true
          schema:
            enum:
              - Daily
              - Weekly
              - Monthly
            x-ms-enum:
              name: latencyScorecardAggregationInterval
              modelAsString: true
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LatencyScorecard'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Reports_GetLatencyScorecards
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/Timeseries?api-version=2019-11-01:
    get:
      tags:
        - Reports
      summary: Gets a Timeseries for a given Experiment
      operationId: ReportsTimeseries_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ProfileNameParameter'
        - $ref: '#/components/parameters/ExperimentNameParameter'
        - name: startDateTimeUTC
          in: query
          description: The start DateTime of the Timeseries in UTC
          required: true
          schema:
            format: date-time
            type: string
        - name: endDateTimeUTC
          in: query
          description: The end DateTime of the Timeseries in UTC
          required: true
          schema:
            format: date-time
            type: string
        - name: aggregationInterval
          in: query
          description: The aggregation interval of the Timeseries
          required: true
          schema:
            enum:
              - Hourly
              - Daily
            x-ms-enum:
              name: timeseriesAggregationInterval
              modelAsString: true
            type: string
        - name: timeseriesType
          in: query
          description: The type of Timeseries
          required: true
          schema:
            enum:
              - MeasurementCounts
              - LatencyP50
              - LatencyP75
              - LatencyP95
            x-ms-enum:
              name: timeseriesType
              modelAsString: true
            type: string
        - name: endpoint
          in: query
          description: The specific endpoint
          required: false
          schema:
            type: string
        - name: country
          in: query
          description: The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Timeseries'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: Reports_GetTimeseries
