openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Authorization
  description: You use role-based access control to manage the actions users in your organization can take on resources. This set of operations enables you to define roles, assign roles to users or groups, and get information about permissions.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-06-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    RoleAssignmentFilterParameter:
      name: $filter
      in: query
      description: The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.
      required: false
      allowReserved: true
      x-ms-parameter-location: method
      schema:
        type: string
    RoleAssignmentNameParameter:
      name: roleAssignmentName
      in: path
      description: The name of the role assignment. It can be any valid GUID.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    RoleAssignmentIdParameter:
      name: roleAssignmentId
      in: path
      description: 'The fully qualified ID of the role assignment including scope, resource name, and resource type. Format: /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}. Example: /subscriptions/<SUB_ID>/resourcegroups/<RESOURCE_GROUP>/providers/Microsoft.Authorization/roleAssignments/<ROLE_ASSIGNMENT_NAME>'
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    TenantIdQueryParameter:
      name: tenantId
      in: query
      description: Tenant ID for cross-tenant request
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    PaginationSkipToken:
      name: $skipToken
      in: query
      description: The skipToken to apply on the operation. Use $skipToken={skiptoken} to return paged role assignments following the skipToken passed. Only supported on provider level calls.
      required: false
      allowReserved: true
      x-ms-parameter-location: method
      schema:
        type: string
    FilterParameter:
      name: $filter
      in: query
      description: The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceProviderNamespaceParameter:
      name: resourceProviderNamespace
      in: path
      description: The namespace of the resource provider.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceTypeParameter:
      name: resourceType
      in: path
      description: The resource type name. For example the type name of a web app is 'sites' (from Microsoft.Web/sites).
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceNameParameter:
      name: resourceName
      in: path
      description: The resource name.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: 'The scope of the operation or resource. Valid scopes are: subscription (format: ''/subscriptions/{subscriptionId}''), resource group (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'', or resource (format: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'''
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription.
      required: true
      schema:
        minLength: 1
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: true
      schema:
        minLength: 1
        type: string
    AccessReviewsFilterParameter:
      name: $filter
      in: query
      description: 'The filter to apply on the operation. Other than standard filters, one custom filter option is supported : ''assignedToMeToReview()''. When one specified $filter=assignedToMeToReview(), only items that are assigned to the calling user to review are returned'
      required: false
      allowReserved: true
      x-ms-parameter-location: method
      schema:
        type: string
    AccessReviewsHistoryFilterParameter:
      name: $filter
      in: query
      description: The filter to apply on the operation. Only standard filters on definition name and created date are supported
      required: false
      allowReserved: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
  schemas:
    ValidationResponseErrorInfo:
      type: object
      description: Failed validation result details
      properties:
        code:
          readOnly: true
          type: string
          description: Error code indicating why validation failed
        message:
          readOnly: true
          type: string
          description: Message indicating why validation failed
    ValidationResponse:
      type: object
      description: Validation response
      properties:
        isValid:
          readOnly: true
          type: boolean
          description: Whether or not validation succeeded
        errorInfo:
          description: Failed validation result details
          $ref: '#/components/schemas/ValidationResponseErrorInfo'
    RoleAssignmentFilter:
      properties:
        principalId:
          type: string
          description: Returns role assignment of the specific principal.
      type: object
      description: Role Assignments filter
    RoleAssignmentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignment'
          description: Role assignment list.
        nextLink:
          readOnly: true
          type: string
          description: The skipToken to use for getting the next set of results.
      type: object
      description: Role assignment list operation result.
    RoleAssignmentProperties:
      properties:
        scope:
          readOnly: true
          type: string
          description: The role assignment scope.
        roleDefinitionId:
          type: string
          description: The role definition ID.
        principalId:
          type: string
          description: The principal ID.
        principalType:
          type: string
          description: The principal type of the assigned principal ID.
          enum:
            - User
            - Group
            - ServicePrincipal
            - ForeignGroup
            - Device
          default: User
          x-ms-enum:
            name: PrincipalType
            modelAsString: true
        description:
          type: string
          description: Description of role assignment
        condition:
          type: string
          description: 'The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition. Currently the only accepted value is '2.0'
        createdOn:
          readOnly: true
          type: string
          description: Time it was created
          format: date-time
        updatedOn:
          readOnly: true
          type: string
          description: Time it was updated
          format: date-time
        createdBy:
          readOnly: true
          type: string
          description: Id of the user who created the assignment
        updatedBy:
          readOnly: true
          type: string
          description: Id of the user who updated the assignment
        delegatedManagedIdentityResourceId:
          type: string
          description: Id of the delegated managed identity resource
      required:
        - roleDefinitionId
        - principalId
      type: object
      description: Role assignment properties.
    RoleAssignment:
      x-ms-azure-resource: true
      description: Role Assignments
      properties:
        id:
          type: string
          readOnly: true
          description: The role assignment ID.
        name:
          type: string
          readOnly: true
          description: The role assignment name.
        type:
          type: string
          readOnly: true
          description: The role assignment type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleAssignmentProperties'
          description: Role assignment properties.
      type: object
    RoleAssignmentCreateParameters:
      required:
        - properties
      description: Role assignment create parameters.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleAssignmentProperties'
          description: Role assignment properties.
      type: object
    RoleAssignmentScheduleRequestFilter:
      properties:
        principalId:
          type: string
          description: Returns role assignment requests of the specific principal.
        roleDefinitionId:
          type: string
          description: Returns role assignment requests of the specific role definition.
        requestorId:
          type: string
          description: Returns role assignment requests created by specific principal.
        status:
          type: string
          description: Returns role assignment requests of specific status.
      type: object
      description: Role assignment schedule request filter
    RoleAssignmentScheduleRequestProperties:
      properties:
        scope:
          type: string
          readOnly: true
          description: The role assignment schedule request scope.
        roleDefinitionId:
          type: string
          description: The role definition ID.
        principalId:
          type: string
          description: The principal ID.
        principalType:
          type: string
          readOnly: true
          description: The principal type of the assigned principal ID.
          enum:
            - User
            - Group
            - ServicePrincipal
            - ForeignGroup
            - Device
          x-ms-enum:
            name: principalType
            modelAsString: true
        requestType:
          type: string
          description: 'The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc'
          enum:
            - AdminAssign
            - AdminRemove
            - AdminUpdate
            - AdminExtend
            - AdminRenew
            - SelfActivate
            - SelfDeactivate
            - SelfExtend
            - SelfRenew
          x-ms-enum:
            name: RequestType
            modelAsString: true
        status:
          type: string
          readOnly: true
          description: The status of the role assignment schedule request.
          enum:
            - Accepted
            - PendingEvaluation
            - Granted
            - Denied
            - PendingProvisioning
            - Provisioned
            - PendingRevocation
            - Revoked
            - Canceled
            - Failed
            - PendingApprovalProvisioning
            - PendingApproval
            - FailedAsResourceIsLocked
            - PendingAdminDecision
            - AdminApproved
            - AdminDenied
            - TimedOut
            - ProvisioningStarted
            - Invalid
            - PendingScheduleCreation
            - ScheduleCreated
            - PendingExternalProvisioning
          x-ms-enum:
            name: Status
            modelAsString: true
        approvalId:
          type: string
          readOnly: true
          description: The approvalId of the role assignment schedule request.
        targetRoleAssignmentScheduleId:
          type: string
          description: The resultant role assignment schedule id or the role assignment schedule id being updated
        targetRoleAssignmentScheduleInstanceId:
          type: string
          description: The role assignment schedule instance id being updated
        scheduleInfo:
          properties:
            startDateTime:
              type: string
              format: date-time
              description: Start DateTime of the role assignment schedule.
            expiration:
              properties:
                type:
                  type: string
                  description: Type of the role assignment schedule expiration
                  enum:
                    - AfterDuration
                    - AfterDateTime
                    - NoExpiration
                  x-ms-enum:
                    name: Type
                    modelAsString: true
                endDateTime:
                  type: string
                  format: date-time
                  description: End DateTime of the role assignment schedule.
                duration:
                  type: string
                  description: Duration of the role assignment schedule in TimeSpan.
              type: object
              description: Expiration of the role assignment schedule
          type: object
          description: Schedule info of the role assignment schedule
        linkedRoleEligibilityScheduleId:
          type: string
          description: The linked role eligibility schedule id - to activate an eligibility.
        justification:
          type: string
          description: Justification for the role assignment
        ticketInfo:
          properties:
            ticketNumber:
              type: string
              description: Ticket number for the role assignment
            ticketSystem:
              type: string
              description: Ticket system name for the role assignment
          type: object
          description: Ticket Info of the role assignment
        condition:
          type: string
          description: 'The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition. Currently accepted value is '2.0'
        createdOn:
          type: string
          format: date-time
          readOnly: true
          description: DateTime when role assignment schedule request was created
        requestorId:
          type: string
          readOnly: true
          description: Id of the user who created this request
        expandedProperties:
          type: object
          readOnly: true
          description: Additional properties of principal, scope and role definition
          $ref: '#/components/schemas/ExpandedProperties'
      required:
        - roleDefinitionId
        - principalId
        - requestType
      type: object
      description: Role assignment schedule request properties with scope.
    RoleAssignmentScheduleRequest:
      description: Role Assignment schedule request
      properties:
        id:
          type: string
          readOnly: true
          description: The role assignment schedule request ID.
        name:
          type: string
          readOnly: true
          description: The role assignment schedule request name.
        type:
          type: string
          readOnly: true
          description: The role assignment schedule request type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleAssignmentScheduleRequestProperties'
          description: Role assignment schedule request properties.
      type: object
    RoleAssignmentScheduleRequestListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignmentScheduleRequest'
          description: Role assignment schedule request list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role assignment schedule request list operation result.
    CloudError:
      x-ms-external: true
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
      type: object
      description: An error response from the service.
    CloudErrorBody:
      x-ms-external: true
      properties:
        code:
          type: string
          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
        message:
          type: string
          description: A message describing the error, intended to be suitable for display in a user interface.
      type: object
      description: An error response from the service.
    ExpandedProperties:
      properties:
        scope:
          type: object
          description: Details of the resource scope
          properties:
            id:
              type: string
              description: Scope id of the resource
            displayName:
              type: string
              description: Display name of the resource
            type:
              type: string
              description: Type of the resource
        roleDefinition:
          type: object
          description: Details of role definition
          properties:
            id:
              type: string
              description: Id of the role definition
            displayName:
              type: string
              description: Display name of the role definition
            type:
              type: string
              description: Type of the role definition
        principal:
          type: object
          description: Details of the principal
          properties:
            id:
              type: string
              description: Id of the principal
            displayName:
              type: string
              description: Display name of the principal
            email:
              type: string
              description: Email id of the principal
            type:
              type: string
              description: Type of the principal
      type: object
    Alert:
      description: The alert.
      properties:
        id:
          type: string
          readOnly: true
          description: The alert ID.
        name:
          type: string
          readOnly: true
          description: The alert name.
        type:
          type: string
          readOnly: true
          description: The alert type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertProperties'
          description: Alert properties.
      type: object
    AlertProperties:
      properties:
        scope:
          type: string
          readOnly: true
          description: The alert scope.
        isActive:
          type: boolean
          description: False by default; true if the alert is active.
        incidentCount:
          type: integer
          format: int32
          readOnly: true
          description: The number of generated incidents of the alert.
        lastModifiedDateTime:
          type: string
          format: date-time
          readOnly: true
          description: The date time when the alert configuration was updated or new incidents were generated.
        lastScannedDateTime:
          type: string
          format: date-time
          readOnly: true
          description: The date time when the alert was last scanned.
        alertDefinition:
          $ref: '#/components/schemas/AlertDefinition'
          readOnly: true
          description: The alert definition.
        alertIncidents:
          type: array
          items:
            $ref: '#/components/schemas/AlertIncident'
          readOnly: true
          description: The alert incidents.
        alertConfiguration:
          $ref: '#/components/schemas/AlertConfiguration'
          readOnly: true
          description: The alert configuration.
      type: object
      description: Alert properties.
    AlertListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
          description: Alert list
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Alert list operation result.
    AlertConfiguration:
      description: Alert configuration.
      properties:
        id:
          type: string
          readOnly: true
          description: The alert configuration ID.
        name:
          type: string
          readOnly: true
          description: The alert configuration name.
        type:
          type: string
          readOnly: true
          description: The alert configuration type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertConfigurationProperties'
          description: Alert configuration properties.
      type: object
    AlertConfigurationProperties:
      properties:
        alertDefinitionId:
          type: string
          readOnly: true
          description: The alert definition ID.
        scope:
          type: string
          readOnly: true
          description: The alert scope.
        isEnabled:
          type: boolean
          readOnly: false
          description: True if the alert is enabled, false will disable the scanning for the specific alert.
        alertConfigurationType:
          type: string
          readOnly: false
          description: The alert configuration type.
        alertDefinition:
          $ref: '#/components/schemas/AlertDefinition'
          readOnly: true
          description: The alert definition.
      required:
        - alertConfigurationType
      type: object
      description: Alert configuration properties.
      discriminator:
        propertyName: alertConfigurationType
    AzureRolesAssignedOutsidePimAlertConfigurationProperties:
      x-ms-discriminator-value: AzureRolesAssignedOutsidePimAlertConfiguration
      description: The Azure roles assigned outside PIM alert configuration properties.
      properties:
        alertDefinitionId:
          type: string
          readOnly: true
          description: The alert definition ID.
        scope:
          type: string
          readOnly: true
          description: The alert scope.
        isEnabled:
          type: boolean
          readOnly: false
          description: True if the alert is enabled, false will disable the scanning for the specific alert.
        alertConfigurationType:
          type: string
          readOnly: false
          description: The alert configuration type.
        alertDefinition:
          $ref: '#/components/schemas/AlertDefinition'
          readOnly: true
          description: The alert definition.
      type: object
    DuplicateRoleCreatedAlertConfigurationProperties:
      x-ms-discriminator-value: DuplicateRoleCreatedAlertConfiguration
      description: The duplicate role created alert configuration.
      properties:
        alertDefinitionId:
          type: string
          readOnly: true
          description: The alert definition ID.
        scope:
          type: string
          readOnly: true
          description: The alert scope.
        isEnabled:
          type: boolean
          readOnly: false
          description: True if the alert is enabled, false will disable the scanning for the specific alert.
        alertConfigurationType:
          type: string
          readOnly: false
          description: The alert configuration type.
        alertDefinition:
          $ref: '#/components/schemas/AlertDefinition'
          readOnly: true
          description: The alert definition.
      type: object
    TooManyOwnersAssignedToResourceAlertConfigurationProperties:
      x-ms-discriminator-value: TooManyOwnersAssignedToResourceAlertConfiguration
      description: Too many owners assigned to resource alert configuration properties.
      properties:
        alertDefinitionId:
          type: string
          readOnly: true
          description: The alert definition ID.
        scope:
          type: string
          readOnly: true
          description: The alert scope.
        isEnabled:
          type: boolean
          readOnly: false
          description: True if the alert is enabled, false will disable the scanning for the specific alert.
        alertConfigurationType:
          type: string
          readOnly: false
          description: The alert configuration type.
        alertDefinition:
          $ref: '#/components/schemas/AlertDefinition'
          readOnly: true
          description: The alert definition.
        thresholdNumberOfOwners:
          type: integer
          format: int32
          readOnly: false
          description: The threshold number of owners.
        thresholdPercentageOfOwnersOutOfAllRoleMembers:
          type: integer
          format: int32
          readOnly: false
          description: The threshold percentage of owners out of all role members.
      type: object
    TooManyPermanentOwnersAssignedToResourceAlertConfigurationProperties:
      x-ms-discriminator-value: TooManyPermanentOwnersAssignedToResourceAlertConfiguration
      description: Too many permanent owners assigned to resource alert configuration properties.
      properties:
        alertDefinitionId:
          type: string
          readOnly: true
          description: The alert definition ID.
        scope:
          type: string
          readOnly: true
          description: The alert scope.
        isEnabled:
          type: boolean
          readOnly: false
          description: True if the alert is enabled, false will disable the scanning for the specific alert.
        alertConfigurationType:
          type: string
          readOnly: false
          description: The alert configuration type.
        alertDefinition:
          $ref: '#/components/schemas/AlertDefinition'
          readOnly: true
          description: The alert definition.
        thresholdNumberOfPermanentOwners:
          type: integer
          format: int32
          readOnly: false
          description: The threshold number of permanent owners.
        thresholdPercentageOfPermanentOwnersOutOfAllOwners:
          type: integer
          format: int32
          readOnly: false
          description: The threshold percentage of permanent owners out of all owners.
      type: object
    AlertDefinition:
      description: Alert definition
      properties:
        id:
          type: string
          readOnly: true
          description: The alert definition ID.
        name:
          type: string
          readOnly: true
          description: The alert definition name.
        type:
          type: string
          readOnly: true
          description: The alert definition type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertDefinitionProperties'
          description: Alert definition properties.
      type: object
    AlertDefinitionProperties:
      properties:
        displayName:
          type: string
          readOnly: true
          description: The alert display name.
        scope:
          type: string
          readOnly: true
          description: The alert scope.
        description:
          type: string
          readOnly: true
          description: The alert description.
        severityLevel:
          type: string
          readOnly: true
          description: Severity level of the alert.
          enum:
            - Low
            - Medium
            - High
          x-ms-enum:
            name: SeverityLevel
            modelAsString: true
        securityImpact:
          type: string
          readOnly: true
          description: Security impact of the alert.
        mitigationSteps:
          type: string
          readOnly: true
          description: The methods to mitigate the alert.
        howToPrevent:
          type: string
          readOnly: true
          description: The ways to prevent the alert.
        isRemediatable:
          type: boolean
          readOnly: true
          description: True if the alert can be remediated; false, otherwise.
        isConfigurable:
          type: boolean
          readOnly: true
          description: True if the alert configuration can be configured; false, otherwise.
      type: object
      description: Alert definition properties.
    AlertDefinitionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AlertDefinition'
          description: Alert definition list
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Alert definition list operation result.
    AlertConfigurationListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AlertConfiguration'
          description: Alert configuration list
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Alert configuration list operation result.
    AlertIncident:
      description: Alert incident
      properties:
        id:
          type: string
          readOnly: true
          description: The alert incident ID.
        name:
          type: string
          readOnly: true
          description: The alert incident name.
        type:
          type: string
          readOnly: true
          description: The alert incident type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AlertIncidentProperties'
          description: Alert incident properties.
      type: object
    AlertIncidentProperties:
      properties:
        alertIncidentType:
          type: string
          readOnly: false
          description: The alert incident type.
      required:
        - alertIncidentType
      type: object
      description: Alert incident properties
      discriminator:
        propertyName: alertIncidentType
    AzureRolesAssignedOutsidePimAlertIncidentProperties:
      x-ms-discriminator-value: AzureRolesAssignedOutsidePimAlertIncident
      description: Azure roles assigned outside PIM alert incident properties.
      properties:
        alertIncidentType:
          type: string
          readOnly: false
          description: The alert incident type.
        assigneeDisplayName:
          type: string
          readOnly: true
          description: The assignee display name.
        assigneeUserPrincipalName:
          type: string
          readOnly: true
          description: The assignee user principal name.
        assigneeId:
          type: string
          readOnly: true
          description: The assignee ID.
        roleDisplayName:
          type: string
          readOnly: true
          description: The role display name.
        roleTemplateId:
          type: string
          readOnly: true
          description: The role template ID.
        roleDefinitionId:
          type: string
          readOnly: true
          description: The role definition ID.
        assignmentActivatedDate:
          type: string
          format: date-time
          readOnly: true
          description: The date the assignment was activated.
        requestorId:
          type: string
          readOnly: true
          description: The requestor ID.
        requestorDisplayName:
          type: string
          readOnly: true
          description: The requestor display name.
        requestorUserPrincipalName:
          type: string
          readOnly: true
          description: The requestor user principal name.
      type: object
    DuplicateRoleCreatedAlertIncidentProperties:
      x-ms-discriminator-value: DuplicateRoleCreatedAlertIncident
      description: Duplicate role created alert incident properties.
      properties:
        alertIncidentType:
          type: string
          readOnly: false
          description: The alert incident type.
        roleName:
          type: string
          readOnly: true
          description: The role name.
        duplicateRoles:
          type: string
          readOnly: true
          description: The duplicate roles.
        reason:
          type: string
          readOnly: true
          description: The reason for the incident.
      type: object
    TooManyOwnersAssignedToResourceAlertIncidentProperties:
      x-ms-discriminator-value: TooManyOwnersAssignedToResourceAlertIncident
      description: Too many owners assigned to resource alert incident properties.
      properties:
        alertIncidentType:
          type: string
          readOnly: false
          description: The alert incident type.
        assigneeName:
          type: string
          readOnly: true
          description: The assignee name.
        assigneeType:
          type: string
          readOnly: true
          description: The assignee type.
      type: object
    TooManyPermanentOwnersAssignedToResourceAlertIncidentProperties:
      x-ms-discriminator-value: TooManyPermanentOwnersAssignedToResourceAlertIncident
      description: Too many permanent owners assigned to resource alert incident properties.
      properties:
        alertIncidentType:
          type: string
          readOnly: false
          description: The alert incident type.
        assigneeName:
          type: string
          readOnly: true
          description: The assignee name.
        assigneeType:
          type: string
          readOnly: true
          description: The assignee type.
      type: object
    AlertIncidentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AlertIncident'
          description: Alert incident list
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Alert incident list operation result.
    AlertOperationResult:
      properties:
        id:
          type: string
          readOnly: true
          description: The id of the alert operation.
        status:
          type: string
          readOnly: true
          description: The status of the alert operation.
        statusDetail:
          type: string
          readOnly: true
          description: The status detail of the alert operation.
        createdDateTime:
          type: string
          format: date-time
          readOnly: true
          description: The created date of the alert operation.
        lastActionDateTime:
          type: string
          format: date-time
          readOnly: true
          description: The last action date of the alert operation.
        resourceLocation:
          type: string
          readOnly: true
          description: The location of the alert associated with the operation.
      type: object
      description: Alert operation result
    RoleAssignmentScheduleInstanceFilter:
      properties:
        principalId:
          type: string
          description: Returns role assignment schedule instances of the specific principal.
        roleDefinitionId:
          type: string
          description: Returns role assignment schedule instances of the specific role definition.
        status:
          type: string
          description: Returns role assignment schedule instances of the specific status.
        roleAssignmentScheduleId:
          type: string
          description: Returns role assignment schedule instances belonging to a specific role assignment schedule.
      type: object
      description: Role assignment schedule instance filter
    RoleAssignmentScheduleInstanceProperties:
      properties:
        scope:
          type: string
          description: The role assignment schedule scope.
        roleDefinitionId:
          type: string
          description: The role definition ID.
        principalId:
          type: string
          description: The principal ID.
        principalType:
          type: string
          description: The principal type of the assigned principal ID.
          enum:
            - User
            - Group
            - ServicePrincipal
            - ForeignGroup
            - Device
          x-ms-enum:
            name: principalType
            modelAsString: true
        roleAssignmentScheduleId:
          type: string
          description: Id of the master role assignment schedule
        originRoleAssignmentId:
          type: string
          description: Role Assignment Id in external system
        status:
          type: string
          description: The status of the role assignment schedule instance.
          enum:
            - Accepted
            - PendingEvaluation
            - Granted
            - Denied
            - PendingProvisioning
            - Provisioned
            - PendingRevocation
            - Revoked
            - Canceled
            - Failed
            - PendingApprovalProvisioning
            - PendingApproval
            - FailedAsResourceIsLocked
            - PendingAdminDecision
            - AdminApproved
            - AdminDenied
            - TimedOut
            - ProvisioningStarted
            - Invalid
            - PendingScheduleCreation
            - ScheduleCreated
            - PendingExternalProvisioning
          x-ms-enum:
            name: Status
            modelAsString: true
        startDateTime:
          type: string
          format: date-time
          description: The startDateTime of the role assignment schedule instance
        endDateTime:
          type: string
          format: date-time
          description: The endDateTime of the role assignment schedule instance
        linkedRoleEligibilityScheduleId:
          type: string
          description: roleEligibilityScheduleId used to activate
        linkedRoleEligibilityScheduleInstanceId:
          type: string
          description: roleEligibilityScheduleInstanceId linked to this roleAssignmentScheduleInstance
        assignmentType:
          type: string
          description: Assignment type of the role assignment schedule
          enum:
            - Activated
            - Assigned
          x-ms-enum:
            name: AssignmentType
            modelAsString: true
        memberType:
          type: string
          description: Membership type of the role assignment schedule
          enum:
            - Inherited
            - Direct
            - Group
          x-ms-enum:
            name: MemberType
            modelAsString: true
        condition:
          type: string
          description: 'The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition. Currently accepted value is '2.0'
        createdOn:
          type: string
          format: date-time
          description: DateTime when role assignment schedule was created
        expandedProperties:
          type: object
          description: Additional properties of principal, scope and role definition
          $ref: '#/components/schemas/ExpandedProperties'
      type: object
      description: Role assignment schedule properties with scope.
    RoleAssignmentScheduleInstance:
      description: Information about current or upcoming role assignment schedule instance
      properties:
        id:
          type: string
          readOnly: true
          description: The role assignment schedule instance ID.
        name:
          type: string
          readOnly: true
          description: The role assignment schedule instance name.
        type:
          type: string
          readOnly: true
          description: The role assignment schedule instance type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleAssignmentScheduleInstanceProperties'
          description: Role assignment schedule instance properties.
      type: object
    RoleAssignmentScheduleInstanceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignmentScheduleInstance'
          description: Role assignment schedule instance list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role assignment schedule instance list operation result.
    EligibleChildResourcesListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/EligibleChildResource'
          description: Eligible child resource list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Eligible child resources list operation result.
    EligibleChildResource:
      properties:
        id:
          type: string
          readOnly: true
          description: The resource scope Id.
        name:
          type: string
          readOnly: true
          description: The resource name.
        type:
          type: string
          readOnly: true
          description: The resource type.
      type: object
      description: Eligible child resource
    RoleDefinitionFilter:
      properties:
        roleName:
          type: string
          description: Returns role definition with the specific name.
        type:
          type: string
          description: Returns role definition with the specific type.
      type: object
      description: Role Definitions filter
    RoleDefinitionProperties:
      properties:
        roleName:
          type: string
          description: The role name.
        description:
          type: string
          description: The role definition description.
        type:
          type: string
          description: The role type.
          x-ms-client-name: roleType
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          x-ms-identifiers: []
          description: Role definition permissions.
        assignableScopes:
          type: array
          items:
            type: string
          description: Role definition assignable scopes.
        createdOn:
          readOnly: true
          type: string
          description: Time it was created
          format: date-time
        updatedOn:
          readOnly: true
          type: string
          description: Time it was updated
          format: date-time
        createdBy:
          readOnly: true
          type: string
          description: Id of the user who created the assignment
        updatedBy:
          readOnly: true
          type: string
          description: Id of the user who updated the assignment
      type: object
      description: Role definition properties.
    RoleDefinition:
      x-ms-azure-resource: true
      description: Role definition.
      properties:
        id:
          type: string
          readOnly: true
          description: The role definition ID.
        name:
          type: string
          readOnly: true
          description: The role definition name.
        type:
          type: string
          readOnly: true
          description: The role definition type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleDefinitionProperties'
          description: Role definition properties.
      type: object
    RoleDefinitionListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleDefinition'
          description: Role definition list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role definition list operation result.
    PermissionGetResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          x-ms-identifiers: []
          description: An array of permissions.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Permissions information.
    RoleAssignmentScheduleFilter:
      properties:
        principalId:
          type: string
          description: Returns role assignment schedule of the specific principal.
        roleDefinitionId:
          type: string
          description: Returns role assignment schedule of the specific role definition.
        status:
          type: string
          description: Returns role assignment schedule instances of the specific status.
      type: object
      description: Role assignment schedule filter
    RoleAssignmentScheduleProperties:
      properties:
        scope:
          type: string
          description: The role assignment schedule scope.
        roleDefinitionId:
          type: string
          description: The role definition ID.
        principalId:
          type: string
          description: The principal ID.
        principalType:
          type: string
          description: The principal type of the assigned principal ID.
          enum:
            - User
            - Group
            - ServicePrincipal
            - ForeignGroup
            - Device
          x-ms-enum:
            name: principalType
            modelAsString: true
        roleAssignmentScheduleRequestId:
          type: string
          description: The id of roleAssignmentScheduleRequest used to create this roleAssignmentSchedule
        linkedRoleEligibilityScheduleId:
          type: string
          description: The id of roleEligibilitySchedule used to activated this roleAssignmentSchedule
        assignmentType:
          type: string
          description: Assignment type of the role assignment schedule
          enum:
            - Activated
            - Assigned
          x-ms-enum:
            name: AssignmentType
            modelAsString: true
        memberType:
          type: string
          description: Membership type of the role assignment schedule
          enum:
            - Inherited
            - Direct
            - Group
          x-ms-enum:
            name: MemberType
            modelAsString: true
        status:
          type: string
          description: The status of the role assignment schedule.
          enum:
            - Accepted
            - PendingEvaluation
            - Granted
            - Denied
            - PendingProvisioning
            - Provisioned
            - PendingRevocation
            - Revoked
            - Canceled
            - Failed
            - PendingApprovalProvisioning
            - PendingApproval
            - FailedAsResourceIsLocked
            - PendingAdminDecision
            - AdminApproved
            - AdminDenied
            - TimedOut
            - ProvisioningStarted
            - Invalid
            - PendingScheduleCreation
            - ScheduleCreated
            - PendingExternalProvisioning
          x-ms-enum:
            name: Status
            modelAsString: true
        startDateTime:
          type: string
          format: date-time
          description: Start DateTime when role assignment schedule
        endDateTime:
          type: string
          format: date-time
          description: End DateTime when role assignment schedule
        condition:
          type: string
          description: 'The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition. Currently accepted value is '2.0'
        createdOn:
          type: string
          format: date-time
          description: DateTime when role assignment schedule was created
        updatedOn:
          type: string
          format: date-time
          description: DateTime when role assignment schedule was modified
        expandedProperties:
          type: object
          description: Additional properties of principal, scope and role definition
          $ref: '#/components/schemas/ExpandedProperties'
      type: object
      description: Role assignment schedule properties with scope.
    RoleAssignmentSchedule:
      description: Role Assignment schedule
      properties:
        id:
          type: string
          readOnly: true
          description: The role assignment schedule Id.
        name:
          type: string
          readOnly: true
          description: The role assignment schedule name.
        type:
          type: string
          readOnly: true
          description: The role assignment schedule type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleAssignmentScheduleProperties'
          description: Role assignment schedule properties.
      type: object
    RoleAssignmentScheduleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignmentSchedule'
          description: Role assignment schedule list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role assignment schedule list operation result.
    Permission:
      properties:
        actions:
          type: array
          items:
            type: string
          description: Allowed actions.
        notActions:
          type: array
          items:
            type: string
          description: Denied actions.
        dataActions:
          type: array
          items:
            type: string
          description: Allowed Data actions.
        notDataActions:
          type: array
          items:
            type: string
          description: Denied Data actions.
        condition:
          readOnly: true
          type: string
          description: 'The conditions on the role definition. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          readOnly: true
          type: string
          description: Version of the condition. Currently the only accepted value is '2.0'
      type: object
      description: Role definition permissions.
    Principal:
      readOnly: true
      type: object
      description: The name of the entity last modified it
      properties:
        id:
          type: string
          description: The id of the principal made changes
        displayName:
          type: string
          description: The name of the principal made changes
        type:
          type: string
          description: Type of principal such as user , group etc
        email:
          type: string
          description: Email of principal
    RoleManagementPolicyRule:
      description: The role management policy rule.
      type: object
      required:
        - ruleType
      discriminator:
        propertyName: ruleType
      properties:
        id:
          type: string
          description: The id of the rule.
        ruleType:
          description: The type of rule
          $ref: '#/components/schemas/RoleManagementPolicyRuleType'
        target:
          $ref: '#/components/schemas/RoleManagementPolicyRuleTarget'
          description: The target of the current rule.
    RoleManagementPolicyApprovalRule:
      description: The role management policy approval rule.
      properties:
        id:
          type: string
          description: The id of the rule.
        ruleType:
          description: The type of rule
          $ref: '#/components/schemas/RoleManagementPolicyRuleType'
        target:
          $ref: '#/components/schemas/RoleManagementPolicyRuleTarget'
          description: The target of the current rule.
        setting:
          $ref: '#/components/schemas/ApprovalSettings'
          description: The approval setting
      type: object
    ApprovalSettings:
      description: The approval settings.
      type: object
      properties:
        isApprovalRequired:
          type: boolean
          description: Determines whether approval is required or not.
        isApprovalRequiredForExtension:
          type: boolean
          description: Determines whether approval is required for assignment extension.
        isRequestorJustificationRequired:
          type: boolean
          description: Determine whether requestor justification is required.
        approvalMode:
          type: string
          description: The type of rule
          enum:
            - SingleStage
            - Serial
            - Parallel
            - NoApproval
          x-ms-enum:
            name: ApprovalMode
            modelAsString: true
        approvalStages:
          type: array
          items:
            $ref: '#/components/schemas/ApprovalStage'
          x-ms-identifiers: []
          description: The approval stages of the request.
    ApprovalStage:
      description: The approval stage.
      type: object
      properties:
        approvalStageTimeOutInDays:
          type: integer
          format: int32
          description: The time in days when approval request would be timed out
        isApproverJustificationRequired:
          type: boolean
          description: Determines whether approver need to provide justification for his decision.
        escalationTimeInMinutes:
          type: integer
          format: int32
          description: The time in minutes when the approval request would be escalated if the primary approver does not approve
        primaryApprovers:
          type: array
          description: The primary approver of the request.
          items:
            $ref: '#/components/schemas/UserSet'
        isEscalationEnabled:
          type: boolean
          description: The value determine whether escalation feature is enabled.
        escalationApprovers:
          type: array
          description: The escalation approver of the request.
          items:
            $ref: '#/components/schemas/UserSet'
    UserSet:
      description: The detail of a user.
      type: object
      properties:
        userType:
          type: string
          description: The type of user.
          enum:
            - User
            - Group
          x-ms-enum:
            name: UserType
            modelAsString: true
        isBackup:
          type: boolean
          description: The value indicating whether the user is a backup fallback approver
        id:
          type: string
          description: The object id of the user.
        description:
          type: string
          description: The description of the user.
    RoleManagementPolicyAuthenticationContextRule:
      description: The role management policy authentication context rule.
      properties:
        id:
          type: string
          description: The id of the rule.
        ruleType:
          description: The type of rule
          $ref: '#/components/schemas/RoleManagementPolicyRuleType'
        target:
          $ref: '#/components/schemas/RoleManagementPolicyRuleTarget'
          description: The target of the current rule.
        isEnabled:
          type: boolean
          description: The value indicating if rule is enabled.
        claimValue:
          type: string
          description: The claim value.
      type: object
    RoleManagementPolicyEnablementRule:
      description: The role management policy enablement rule.
      properties:
        id:
          type: string
          description: The id of the rule.
        ruleType:
          description: The type of rule
          $ref: '#/components/schemas/RoleManagementPolicyRuleType'
        target:
          $ref: '#/components/schemas/RoleManagementPolicyRuleTarget'
          description: The target of the current rule.
        enabledRules:
          type: array
          items:
            type: string
            description: The type of enablement rule
            enum:
              - MultiFactorAuthentication
              - Justification
              - Ticketing
            x-ms-enum:
              name: EnablementRules
              modelAsString: true
          description: The list of enabled rules.
      type: object
    RoleManagementPolicyExpirationRule:
      description: The role management policy expiration rule.
      properties:
        id:
          type: string
          description: The id of the rule.
        ruleType:
          description: The type of rule
          $ref: '#/components/schemas/RoleManagementPolicyRuleType'
        target:
          $ref: '#/components/schemas/RoleManagementPolicyRuleTarget'
          description: The target of the current rule.
        isExpirationRequired:
          type: boolean
          description: The value indicating whether expiration is required.
        maximumDuration:
          type: string
          description: The maximum duration of expiration in timespan.
      type: object
    RoleManagementPolicyNotificationRule:
      description: The role management policy notification rule.
      properties:
        id:
          type: string
          description: The id of the rule.
        ruleType:
          description: The type of rule
          $ref: '#/components/schemas/RoleManagementPolicyRuleType'
        target:
          $ref: '#/components/schemas/RoleManagementPolicyRuleTarget'
          description: The target of the current rule.
        notificationType:
          type: string
          description: The type of notification.
          enum:
            - Email
          x-ms-enum:
            name: NotificationDeliveryMechanism
            modelAsString: true
        notificationLevel:
          type: string
          description: The notification level.
          enum:
            - None
            - Critical
            - All
          x-ms-enum:
            name: NotificationLevel
            modelAsString: true
        recipientType:
          type: string
          description: The recipient type.
          enum:
            - Requestor
            - Approver
            - Admin
          x-ms-enum:
            name: RecipientType
            modelAsString: true
        notificationRecipients:
          type: array
          items:
            type: string
          description: The list of notification recipients.
        isDefaultRecipientsEnabled:
          type: boolean
          description: Determines if the notification will be sent to the recipient type specified in the policy rule.
      type: object
    RoleManagementPolicyRuleTarget:
      description: The role management policy rule target.
      type: object
      properties:
        caller:
          type: string
          description: The caller of the setting.
        operations:
          type: array
          items:
            type: string
          description: The type of operation.
        level:
          type: string
          description: The assignment level to which rule is applied.
        targetObjects:
          type: array
          items:
            type: string
          description: The list of target objects.
        inheritableSettings:
          type: array
          items:
            type: string
          description: The list of inheritable settings.
        enforcedSettings:
          type: array
          items:
            type: string
          description: The list of enforced settings.
    RoleManagementPolicyRuleType:
      type: string
      description: The type of rule
      enum:
        - RoleManagementPolicyApprovalRule
        - RoleManagementPolicyAuthenticationContextRule
        - RoleManagementPolicyEnablementRule
        - RoleManagementPolicyExpirationRule
        - RoleManagementPolicyNotificationRule
      x-ms-enum:
        name: RoleManagementPolicyRuleType
        modelAsString: true
    ClassicAdministratorProperties:
      properties:
        emailAddress:
          type: string
          description: The email address of the administrator.
        role:
          type: string
          description: The role of the administrator.
      description: Classic Administrator properties.
      type: object
    ClassicAdministrator:
      description: Classic Administrators
      properties:
        id:
          type: string
          description: The ID of the administrator.
        name:
          type: string
          description: The name of the administrator.
        type:
          type: string
          description: The type of the administrator.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ClassicAdministratorProperties'
          description: Properties for the classic administrator.
      type: object
    ClassicAdministratorListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ClassicAdministrator'
          description: An array of administrators.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: ClassicAdministrator list result information.
      type: object
    RoleEligibilityScheduleRequestFilter:
      properties:
        principalId:
          type: string
          description: Returns role eligibility requests of the specific principal.
        roleDefinitionId:
          type: string
          description: Returns role eligibility requests of the specific role definition.
        requestorId:
          type: string
          description: Returns role eligibility requests created by specific principal.
        status:
          type: string
          description: Returns role eligibility requests of specific status.
      type: object
      description: Role eligibility schedule request filter
    RoleEligibilityScheduleRequestProperties:
      properties:
        scope:
          type: string
          readOnly: true
          description: The role eligibility schedule request scope.
        roleDefinitionId:
          type: string
          description: The role definition ID.
        principalId:
          type: string
          description: The principal ID.
        principalType:
          type: string
          readOnly: true
          description: The principal type of the assigned principal ID.
          enum:
            - User
            - Group
            - ServicePrincipal
            - ForeignGroup
            - Device
          x-ms-enum:
            name: principalType
            modelAsString: true
        requestType:
          type: string
          description: 'The type of the role assignment schedule request. Eg: SelfActivate, AdminAssign etc'
          enum:
            - AdminAssign
            - AdminRemove
            - AdminUpdate
            - AdminExtend
            - AdminRenew
            - SelfActivate
            - SelfDeactivate
            - SelfExtend
            - SelfRenew
          x-ms-enum:
            name: RequestType
            modelAsString: true
        status:
          type: string
          readOnly: true
          description: The status of the role eligibility schedule request.
          enum:
            - Accepted
            - PendingEvaluation
            - Granted
            - Denied
            - PendingProvisioning
            - Provisioned
            - PendingRevocation
            - Revoked
            - Canceled
            - Failed
            - PendingApprovalProvisioning
            - PendingApproval
            - FailedAsResourceIsLocked
            - PendingAdminDecision
            - AdminApproved
            - AdminDenied
            - TimedOut
            - ProvisioningStarted
            - Invalid
            - PendingScheduleCreation
            - ScheduleCreated
            - PendingExternalProvisioning
          x-ms-enum:
            name: Status
            modelAsString: true
        approvalId:
          type: string
          readOnly: true
          description: The approvalId of the role eligibility schedule request.
        scheduleInfo:
          properties:
            startDateTime:
              type: string
              format: date-time
              description: Start DateTime of the role eligibility schedule.
            expiration:
              properties:
                type:
                  type: string
                  description: Type of the role eligibility schedule expiration
                  enum:
                    - AfterDuration
                    - AfterDateTime
                    - NoExpiration
                  x-ms-enum:
                    name: Type
                    modelAsString: true
                endDateTime:
                  type: string
                  format: date-time
                  description: End DateTime of the role eligibility schedule.
                duration:
                  type: string
                  description: Duration of the role eligibility schedule in TimeSpan.
              type: object
              description: Expiration of the role eligibility schedule
          type: object
          description: Schedule info of the role eligibility schedule
        targetRoleEligibilityScheduleId:
          type: string
          description: The resultant role eligibility schedule id or the role eligibility schedule id being updated
        targetRoleEligibilityScheduleInstanceId:
          type: string
          description: The role eligibility schedule instance id being updated
        justification:
          type: string
          description: Justification for the role eligibility
        ticketInfo:
          properties:
            ticketNumber:
              type: string
              description: Ticket number for the role eligibility
            ticketSystem:
              type: string
              description: Ticket system name for the role eligibility
          type: object
          description: Ticket Info of the role eligibility
        condition:
          type: string
          description: 'The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition. Currently accepted value is '2.0'
        createdOn:
          type: string
          readOnly: true
          format: date-time
          description: DateTime when role eligibility schedule request was created
        requestorId:
          type: string
          readOnly: true
          description: Id of the user who created this request
        expandedProperties:
          readOnly: true
          type: object
          description: Additional properties of principal, scope and role definition
          $ref: '#/components/schemas/ExpandedProperties'
      required:
        - roleDefinitionId
        - principalId
        - requestType
      type: object
      description: Role eligibility schedule request properties with scope.
    RoleEligibilityScheduleRequest:
      description: Role Eligibility schedule request
      properties:
        id:
          type: string
          readOnly: true
          description: The role eligibility schedule request ID.
        name:
          type: string
          readOnly: true
          description: The role eligibility schedule request name.
        type:
          type: string
          readOnly: true
          description: The role eligibility schedule request type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleEligibilityScheduleRequestProperties'
          description: Role eligibility schedule request properties.
      type: object
    RoleEligibilityScheduleRequestListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleEligibilityScheduleRequest'
          description: Role eligibility schedule request list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role eligibility schedule request list operation result.
    DenyAssignmentFilter:
      properties:
        denyAssignmentName:
          type: string
          description: Return deny assignment with specified name.
        principalId:
          type: string
          description: Return all deny assignments where the specified principal is listed in the principals list of deny assignments.
        gdprExportPrincipalId:
          type: string
          description: Return all deny assignments where the specified principal is listed either in the principals list or exclude principals list of deny assignments.
      type: object
      description: Deny Assignments filter
    DenyAssignmentProperties:
      properties:
        denyAssignmentName:
          type: string
          description: The display name of the deny assignment.
        description:
          type: string
          description: The description of the deny assignment.
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/DenyAssignmentPermission'
          x-ms-identifiers: []
          description: An array of permissions that are denied by the deny assignment.
        scope:
          type: string
          description: The deny assignment scope.
        doNotApplyToChildScopes:
          type: boolean
          description: Determines if the deny assignment applies to child scopes. Default value is false.
        principals:
          type: array
          items:
            $ref: '#/components/schemas/Principal'
          description: Array of principals to which the deny assignment applies.
        excludePrincipals:
          type: array
          items:
            $ref: '#/components/schemas/Principal'
          description: Array of principals to which the deny assignment does not apply.
        isSystemProtected:
          type: boolean
          description: Specifies whether this deny assignment was created by Azure and cannot be edited or deleted.
        condition:
          type: string
          description: 'The conditions on the deny assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition.
        createdOn:
          readOnly: true
          type: string
          description: Time it was created
          format: date-time
        updatedOn:
          readOnly: true
          type: string
          description: Time it was updated
          format: date-time
        createdBy:
          readOnly: true
          type: string
          description: Id of the user who created the assignment
        updatedBy:
          readOnly: true
          type: string
          description: Id of the user who updated the assignment
      type: object
      description: Deny assignment properties.
    DenyAssignment:
      description: Deny Assignment
      properties:
        id:
          type: string
          readOnly: true
          description: The deny assignment ID.
        name:
          type: string
          readOnly: true
          description: The deny assignment name.
        type:
          type: string
          readOnly: true
          description: The deny assignment type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DenyAssignmentProperties'
          description: Deny assignment properties.
      type: object
    DenyAssignmentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/DenyAssignment'
          description: Deny assignment list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Deny assignment list operation result.
    DenyAssignmentPermission:
      properties:
        actions:
          type: array
          items:
            type: string
          description: Actions to which the deny assignment does not grant access.
        notActions:
          type: array
          items:
            type: string
          description: Actions to exclude from that the deny assignment does not grant access.
        dataActions:
          type: array
          items:
            type: string
          description: Data actions to which the deny assignment does not grant access.
        notDataActions:
          type: array
          items:
            type: string
          description: Data actions to exclude from that the deny assignment does not grant access.
        condition:
          type: string
          description: The conditions on the Deny assignment permission. This limits the resources it applies to.
        conditionVersion:
          type: string
          description: Version of the condition.
      type: object
      description: Deny assignment permissions.
    RoleEligibilityScheduleInstanceFilter:
      properties:
        principalId:
          type: string
          description: Returns role eligibility schedule instances of the specific principal.
        roleDefinitionId:
          type: string
          description: Returns role eligibility schedule instances of the specific role definition.
        status:
          type: string
          description: Returns role eligibility schedule instances of the specific status.
        roleEligibilityScheduleId:
          type: string
          description: Returns role eligibility schedule instances belonging to a specific role eligibility schedule.
      type: object
      description: Role eligibility schedule instance filter
    RoleEligibilityScheduleInstanceProperties:
      properties:
        scope:
          type: string
          description: The role eligibility schedule scope.
        roleDefinitionId:
          type: string
          description: The role definition ID.
        principalId:
          type: string
          description: The principal ID.
        principalType:
          type: string
          description: The principal type of the assigned principal ID.
          enum:
            - User
            - Group
            - ServicePrincipal
            - ForeignGroup
            - Device
          x-ms-enum:
            name: principalType
            modelAsString: true
        roleEligibilityScheduleId:
          type: string
          description: Id of the master role eligibility schedule
        status:
          type: string
          description: The status of the role eligibility schedule instance
          enum:
            - Accepted
            - PendingEvaluation
            - Granted
            - Denied
            - PendingProvisioning
            - Provisioned
            - PendingRevocation
            - Revoked
            - Canceled
            - Failed
            - PendingApprovalProvisioning
            - PendingApproval
            - FailedAsResourceIsLocked
            - PendingAdminDecision
            - AdminApproved
            - AdminDenied
            - TimedOut
            - ProvisioningStarted
            - Invalid
            - PendingScheduleCreation
            - ScheduleCreated
            - PendingExternalProvisioning
          x-ms-enum:
            name: Status
            modelAsString: true
        startDateTime:
          type: string
          format: date-time
          description: The startDateTime of the role eligibility schedule instance
        endDateTime:
          type: string
          format: date-time
          description: The endDateTime of the role eligibility schedule instance
        memberType:
          type: string
          description: Membership type of the role eligibility schedule
          enum:
            - Inherited
            - Direct
            - Group
          x-ms-enum:
            name: MemberType
            modelAsString: true
        condition:
          type: string
          description: 'The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition. Currently accepted value is '2.0'
        createdOn:
          type: string
          format: date-time
          description: DateTime when role eligibility schedule was created
        expandedProperties:
          type: object
          description: Additional properties of principal, scope and role definition
          $ref: '#/components/schemas/ExpandedProperties'
      type: object
      description: Role eligibility schedule properties with scope.
    RoleEligibilityScheduleInstance:
      description: Information about current or upcoming role eligibility schedule instance
      properties:
        id:
          type: string
          readOnly: true
          description: The role eligibility schedule instance ID.
        name:
          type: string
          readOnly: true
          description: The role eligibility schedule instance name.
        type:
          type: string
          readOnly: true
          description: The role eligibility schedule instance type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleEligibilityScheduleInstanceProperties'
          description: Role eligibility schedule instance properties.
      type: object
    RoleEligibilityScheduleInstanceListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleEligibilityScheduleInstance'
          description: Role eligibility schedule instance list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role eligibility schedule instance list operation result.
    AccessReviewScheduleDefinition:
      x-ms-azure-resource: true
      description: Access Review Schedule Definition.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review schedule definition id.
        name:
          type: string
          readOnly: true
          description: The access review schedule definition unique id.
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewScheduleDefinitionProperties'
          description: Access Review properties.
      type: object
    AccessReviewScheduleDefinitionProperties:
      type: object
      properties:
        displayName:
          type: string
          description: The display name for the schedule definition.
        status:
          type: string
          readOnly: true
          description: This read-only field specifies the status of an accessReview.
          enum:
            - NotStarted
            - InProgress
            - Completed
            - Applied
            - Initializing
            - Applying
            - Completing
            - Scheduled
            - AutoReviewing
            - AutoReviewed
            - Starting
          x-ms-enum:
            name: AccessReviewScheduleDefinitionStatus
            modelAsString: true
        descriptionForAdmins:
          type: string
          description: The description provided by the access review creator and visible to admins.
        descriptionForReviewers:
          type: string
          description: The description provided by the access review creator to be shown to reviewers.
        createdBy:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewActorIdentity'
          description: The user or other identity who created this review.
        settings:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewScheduleSettings'
          description: Access Review Settings.
        scope:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewScope'
          description: This is used to define what to include in scope of the review. The scope definition includes the resourceId and roleDefinitionId.
        reviewers:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewReviewer'
          x-ms-identifiers:
            - principalId
          description: This is the collection of reviewers.
        backupReviewers:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewReviewer'
          x-ms-identifiers:
            - principalId
          description: This is the collection of backup reviewers.
        reviewersType:
          type: string
          readOnly: true
          description: This field specifies the type of reviewers for a review. Usually for a review, reviewers are explicitly assigned. However, in some cases, the reviewers may not be assigned and instead be chosen dynamically. For example managers review or self review.
          enum:
            - Assigned
            - Self
            - Managers
          x-ms-enum:
            name: AccessReviewScheduleDefinitionReviewersType
            modelAsString: true
        instances:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewInstance'
          description: This is the collection of instances returned when one does an expand on it.
      description: Access Review.
    AccessReviewInstance:
      x-ms-azure-resource: true
      description: Access Review Instance.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review instance id.
        name:
          type: string
          readOnly: true
          description: The access review instance name.
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewInstanceProperties'
          description: Access Review properties.
      type: object
    AccessReviewInstanceProperties:
      type: object
      properties:
        status:
          type: string
          readOnly: true
          description: This read-only field specifies the status of an access review instance.
          enum:
            - NotStarted
            - InProgress
            - Completed
            - Applied
            - Initializing
            - Applying
            - Completing
            - Scheduled
            - AutoReviewing
            - AutoReviewed
            - Starting
          x-ms-enum:
            name: AccessReviewInstanceStatus
            modelAsString: true
        startDateTime:
          type: string
          format: date-time
          description: The DateTime when the review instance is scheduled to be start.
          nullable: false
        endDateTime:
          type: string
          format: date-time
          description: The DateTime when the review instance is scheduled to end.
          nullable: false
        reviewers:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewReviewer'
          x-ms-identifiers:
            - principalId
          description: This is the collection of reviewers.
        backupReviewers:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewReviewer'
          x-ms-identifiers:
            - principalId
          description: This is the collection of backup reviewers.
        reviewersType:
          type: string
          readOnly: true
          description: This field specifies the type of reviewers for a review. Usually for a review, reviewers are explicitly assigned. However, in some cases, the reviewers may not be assigned and instead be chosen dynamically. For example managers review or self review.
          enum:
            - Assigned
            - Self
            - Managers
          x-ms-enum:
            name: AccessReviewInstanceReviewersType
            modelAsString: true
      description: Access Review Instance properties.
    AccessReviewScheduleSettings:
      type: object
      properties:
        mailNotificationsEnabled:
          type: boolean
          description: Flag to indicate whether sending mails to reviewers and the review creator is enabled.
        reminderNotificationsEnabled:
          type: boolean
          description: Flag to indicate whether sending reminder emails to reviewers are enabled.
        defaultDecisionEnabled:
          type: boolean
          description: Flag to indicate whether reviewers are required to provide a justification when reviewing access.
        justificationRequiredOnApproval:
          type: boolean
          description: Flag to indicate whether the reviewer is required to pass justification when recording a decision.
        defaultDecision:
          type: string
          description: This specifies the behavior for the autoReview feature when an access review completes.
          enum:
            - Approve
            - Deny
            - Recommendation
          x-ms-enum:
            name: DefaultDecisionType
            modelAsString: true
        autoApplyDecisionsEnabled:
          type: boolean
          description: Flag to indicate whether auto-apply capability, to automatically change the target object access resource, is enabled. If not enabled, a user must, after the review completes, apply the access review.
        recommendationsEnabled:
          type: boolean
          description: Flag to indicate whether showing recommendations to reviewers is enabled.
        recommendationLookBackDuration:
          type: string
          format: duration
          description: 'Recommendations for access reviews are calculated by looking back at 30 days of data(w.r.t the start date of the review) by default. However, in some scenarios, customers want to change how far back to look at and want to configure 60 days, 90 days, etc. instead. This setting allows customers to configure this duration. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))'
        instanceDurationInDays:
          type: integer
          format: int32
          description: The duration in days for an instance.
        recurrence:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewRecurrenceSettings'
          description: Access Review Settings.
      description: Settings of an Access Review.
    AccessReviewDefaultSettings:
      x-ms-azure-resource: true
      description: Access Review Default Settings.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review default settings id. This is only going to be default
        name:
          type: string
          readOnly: true
          description: The access review default settings name. This is always going to be Access Review Default Settings
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewScheduleSettings'
          description: Access Review properties.
      type: object
    AccessReviewRecurrenceSettings:
      type: object
      properties:
        pattern:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewRecurrencePattern'
          description: Access Review schedule definition recurrence pattern.
        range:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewRecurrenceRange'
          description: Access Review schedule definition recurrence range.
      description: Recurrence Settings of an Access Review Schedule Definition.
    AccessReviewRecurrencePattern:
      type: object
      properties:
        type:
          type: string
          description: 'The recurrence type : weekly, monthly, etc.'
          enum:
            - weekly
            - absoluteMonthly
          x-ms-enum:
            name: AccessReviewRecurrencePatternType
            modelAsString: true
        interval:
          type: integer
          format: int32
          description: 'The interval for recurrence. For a quarterly review, the interval is 3 for type : absoluteMonthly.'
      description: Recurrence Pattern of an Access Review Schedule Definition.
    AccessReviewRecurrenceRange:
      type: object
      properties:
        type:
          type: string
          description: 'The recurrence range type. The possible values are: endDate, noEnd, numbered.'
          enum:
            - endDate
            - noEnd
            - numbered
          x-ms-enum:
            name: AccessReviewRecurrenceRangeType
            modelAsString: true
        numberOfOccurrences:
          type: integer
          format: int32
          description: The number of times to repeat the access review. Required and must be positive if type is numbered.
        startDate:
          type: string
          format: date-time
          description: The DateTime when the review is scheduled to be start. This could be a date in the future. Required on create.
          nullable: true
        endDate:
          type: string
          format: date-time
          description: The DateTime when the review is scheduled to end. Required if type is endDate
          nullable: true
      description: Recurrence Range of an Access Review Schedule Definition.
    AccessReviewHistoryDefinition:
      x-ms-azure-resource: true
      description: Access Review History Definition.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review history definition id.
        name:
          type: string
          readOnly: true
          description: The access review history definition unique id.
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewHistoryDefinitionProperties'
          description: Access Review History Definition properties.
      type: object
    AccessReviewHistoryDefinitionProperties:
      type: object
      properties:
        displayName:
          type: string
          description: The display name for the history definition.
        reviewHistoryPeriodStartDateTime:
          type: string
          format: date-time
          description: Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
          nullable: true
          readOnly: true
        reviewHistoryPeriodEndDateTime:
          type: string
          format: date-time
          description: Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
          nullable: true
          readOnly: true
        decisions:
          type: array
          items:
            type: string
            description: Represents a reviewer's decision for a given review
            enum:
              - Approve
              - Deny
              - NotReviewed
              - DontKnow
              - NotNotified
            x-ms-enum:
              name: AccessReviewResult
              modelAsString: true
          description: Collection of review decisions which the history data should be filtered on. For example if Approve and Deny are supplied the data will only contain review results in which the decision maker approved or denied a review request.
          nullable: true
        status:
          type: string
          readOnly: true
          description: This read-only field specifies the of the requested review history data. This is either requested, in-progress, done or error.
          enum:
            - Requested
            - InProgress
            - Done
            - Error
          x-ms-enum:
            name: AccessReviewHistoryDefinitionStatus
            modelAsString: true
        createdDateTime:
          type: string
          format: date-time
          description: Date time when history definition was created
          nullable: true
          readOnly: true
        createdBy:
          nullable: true
          x-nullable: true
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewActorIdentity'
          description: The user or other identity who created this history definition.
        scopes:
          nullable: false
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewScope'
          description: A collection of scopes used when selecting review history data
          x-ms-identifiers: []
        settings:
          x-ms-client-flatten: true
          nullable: true
          x-nullable: true
          $ref: '#/components/schemas/AccessReviewHistoryScheduleSettings'
          description: Recurrence settings for recurring history reports, skip for one-time reports.
        instances:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewHistoryInstance'
          description: Set of access review history instances for this history definition.
      description: Access Review History Instances.
    AccessReviewHistoryInstance:
      x-ms-azure-resource: true
      description: Access Review History Definition Instance.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review history definition instance id.
        name:
          type: string
          readOnly: true
          description: The access review history definition instance unique id.
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewHistoryInstanceProperties'
          description: Access Review History Definition Instance properties.
      type: object
    AccessReviewHistoryInstanceProperties:
      type: object
      properties:
        reviewHistoryPeriodStartDateTime:
          type: string
          format: date-time
          readOnly: false
          description: Date time used when selecting review data, all reviews included in data start on or after this date. For use only with one-time/non-recurring reports.
        reviewHistoryPeriodEndDateTime:
          type: string
          format: date-time
          readOnly: false
          description: Date time used when selecting review data, all reviews included in data end on or before this date. For use only with one-time/non-recurring reports.
        displayName:
          type: string
          description: The display name for the parent history definition.
        status:
          type: string
          readOnly: true
          description: Status of the requested review history instance data. This is either requested, in-progress, done or error. The state transitions are as follows - Requested -> InProgress -> Done -> Expired
          enum:
            - Requested
            - InProgress
            - Done
            - Error
          x-ms-enum:
            name: AccessReviewHistoryDefinitionStatus
            modelAsString: true
        runDateTime:
          type: string
          format: date-time
          description: Date time when the history data report is scheduled to be generated.
          nullable: true
        fulfilledDateTime:
          type: string
          format: date-time
          description: Date time when the history data report is scheduled to be generated.
          nullable: true
        downloadUri:
          readOnly: true
          type: string
          description: Uri which can be used to retrieve review history data. To generate this Uri, generateDownloadUri() must be called for a specific accessReviewHistoryDefinitionInstance. The link expires after a 24 hour period. Callers can see the expiration date time by looking at the 'se' parameter in the generated uri.
        expiration:
          type: string
          format: date-time
          description: Date time when history data report expires and the associated data is deleted.
          nullable: true
      description: Access Review History Definition Instance properties.
    AccessReviewHistoryScheduleSettings:
      type: object
      properties:
        pattern:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewRecurrencePattern'
          description: Access Review History Definition recurrence settings.
        range:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewRecurrenceRange'
          description: Access Review History Definition recurrence settings.
      description: Recurrence settings of an Access Review History Definition.
    AccessReviewScope:
      type: object
      properties:
        resourceId:
          type: string
          readOnly: true
          description: ResourceId in which this review is getting created
        roleDefinitionId:
          type: string
          readOnly: true
          description: This is used to indicate the role being reviewed
        principalType:
          type: string
          readOnly: true
          description: The identity type user/servicePrincipal to review
          enum:
            - user
            - guestUser
            - servicePrincipal
            - user,group
            - redeemedGuestUser
          x-ms-enum:
            name: AccessReviewScopePrincipalType
            modelAsString: true
        assignmentState:
          type: string
          readOnly: true
          description: The role assignment state eligible/active to review
          enum:
            - eligible
            - active
          x-ms-enum:
            name: AccessReviewScopeAssignmentState
            modelAsString: true
        inactiveDuration:
          type: string
          format: duration
          description: 'Duration users are inactive for. The value should be in ISO  8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations).This code can be used to convert TimeSpan to a valid interval string: XmlConvert.ToString(new TimeSpan(hours, minutes, seconds))'
        expandNestedMemberships:
          type: boolean
          description: Flag to indicate whether to expand nested memberships or not.
        includeInheritedAccess:
          type: boolean
          description: Flag to indicate whether to expand nested memberships or not.
        includeAccessBelowResource:
          type: boolean
          description: Flag to indicate whether to expand nested memberships or not.
        excludeResourceId:
          type: string
          description: This is used to indicate the resource id(s) to exclude
        excludeRoleDefinitionId:
          type: string
          description: This is used to indicate the role definition id(s) to exclude
      description: Descriptor for what needs to be reviewed
    AccessReviewReviewer:
      type: object
      properties:
        principalId:
          type: string
          description: The id of the reviewer(user/servicePrincipal)
        principalType:
          type: string
          readOnly: true
          description: 'The identity type : user/servicePrincipal'
          enum:
            - user
            - servicePrincipal
          x-ms-enum:
            name: AccessReviewReviewerType
            modelAsString: true
      description: Descriptor for what needs to be reviewed
    AccessReviewDecision:
      x-ms-azure-resource: true
      description: Access Review.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review decision id.
        name:
          type: string
          readOnly: true
          description: The access review decision name.
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewDecisionProperties'
          description: Access Review Decision properties.
      type: object
    AccessReviewDecisionProperties:
      type: object
      properties:
        principal:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewDecisionIdentity'
          description: Principal associated with the decision record. Can be AccessReviewDecisionUserIdentity or AccessReviewDecisionServicePrincipalIdentity
          nullable: true
          x-nullable: true
        resource:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewDecisionResource'
          description: Resource associated with this decision record.
          nullable: true
          x-nullable: true
        recommendation:
          type: string
          readOnly: true
          description: The feature- generated recommendation shown to the reviewer.
          enum:
            - Approve
            - Deny
            - NoInfoAvailable
          x-ms-enum:
            name: AccessRecommendationType
            modelAsString: true
        decision:
          type: string
          description: The decision on the approval step. This value is initially set to NotReviewed. Approvers can take action of Approve/Deny
          enum:
            - Approve
            - Deny
            - NotReviewed
            - DontKnow
            - NotNotified
          x-ms-enum:
            name: AccessReviewResult
            modelAsString: true
        justification:
          type: string
          description: Justification provided by approvers for their action
        reviewedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: Date Time when a decision was taken.
          nullable: true
        reviewedBy:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewActorIdentity'
          description: Details of the approver.
          nullable: true
          x-nullable: true
        applyResult:
          type: string
          readOnly: true
          description: The outcome of applying the decision.
          enum:
            - New
            - Applying
            - AppliedSuccessfully
            - AppliedWithUnknownFailure
            - AppliedSuccessfullyButObjectNotFound
            - ApplyNotSupported
          x-ms-enum:
            name: AccessReviewApplyResult
            modelAsString: true
        appliedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The date and time when the review decision was applied.
          nullable: true
        appliedBy:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewActorIdentity'
          description: Details of the approver.
          nullable: true
          x-nullable: true
        insights:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewDecisionInsight'
          description: This is the collection of insights for this decision item.
        principalResourceMembership:
          readOnly: true
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewDecisionPrincipalResourceMembership'
          description: Details of the membership type.
          nullable: true
          x-nullable: true
      description: Approval Step.
    AccessReviewDecisionInsight:
      x-ms-azure-resource: true
      description: Access Review Decision Insight.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review insight id.
        name:
          type: string
          readOnly: true
          description: The access review insight name.
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewDecisionInsightProperties'
          description: Access Review Decision Insight properties.
      type: object
    AccessReviewDecisionInsightProperties:
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          description: The type of insight
          enum:
            - userSignInInsight
          x-ms-enum:
            name: AccessReviewDecisionInsightType
            modelAsString: true
        insightCreatedDateTime:
          readOnly: true
          format: date-time
          description: Date Time when the insight was created.
          nullable: true
      description: Details of the Insight.
    AccessReviewDecisionUserSignInInsightProperties:
      x-ms-discriminator-value: userSignInInsight
      description: User Decision Target
      properties:
        type:
          type: string
          description: The type of insight
          enum:
            - userSignInInsight
          x-ms-enum:
            name: AccessReviewDecisionInsightType
            modelAsString: true
        insightCreatedDateTime:
          readOnly: true
          format: date-time
          description: Date Time when the insight was created.
          nullable: true
        lastSignInDateTime:
          readOnly: true
          format: date-time
          description: Date Time when the user signed into the tenant.
          nullable: true
      type: object
    AccessReviewDecisionResource:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: The type of resource
          enum:
            - azureRole
          x-ms-enum:
            name: DecisionResourceType
            modelAsString: true
        id:
          type: string
          readOnly: true
          description: The id of resource associated with a decision record.
        displayName:
          type: string
          readOnly: true
          description: The display name of resource associated with a decision record.
      description: Target of the decision.
    RecordAllDecisionsProperties:
      type: object
      properties:
        principalId:
          type: string
          readOnly: true
          description: The id of principal which needs to be approved/denied.
        resourceId:
          type: string
          readOnly: true
          description: The id of resource which needs to be approved/denied.
        decision:
          type: string
          description: The decision to make. Approvers can take action of Approve/Deny
          enum:
            - Approve
            - Deny
          x-ms-enum:
            name: RecordAllDecisionsResult
            modelAsString: true
        justification:
          type: string
          description: Justification provided by approvers for their action
      description: Record All Decisions payload.
    AccessReviewDecisionPrincipalResourceMembership:
      type: object
      properties:
        membershipTypes:
          type: array
          description: Every decision item in an access review represents a principal's membership to a resource. This property represents details of the membership. Examples of this detail might be whether the principal has direct access or indirect access
          items:
            type: string
            enum:
              - direct
              - indirect
            x-ms-enum:
              name: AccessReviewDecisionPrincipalResourceMembershipType
              modelAsString: true
      description: Target of the decision.
    AccessReviewDecisionIdentity:
      type: object
      discriminator:
        propertyName: type
      required:
        - type
      properties:
        type:
          type: string
          description: 'The type of decision target : User/ServicePrincipal'
          enum:
            - user
            - servicePrincipal
          x-ms-enum:
            name: DecisionTargetType
            modelAsString: true
        id:
          type: string
          readOnly: true
          description: The id of principal whose access was reviewed.
        displayName:
          type: string
          readOnly: true
          description: The display name of the user whose access was reviewed.
      description: Target of the decision.
    AccessReviewDecisionUserIdentity:
      x-ms-discriminator-value: user
      description: User Decision Target
      properties:
        type:
          type: string
          description: 'The type of decision target : User/ServicePrincipal'
          enum:
            - user
            - servicePrincipal
          x-ms-enum:
            name: DecisionTargetType
            modelAsString: true
        id:
          type: string
          readOnly: true
          description: The id of principal whose access was reviewed.
        displayName:
          type: string
          readOnly: true
          description: The display name of the user whose access was reviewed.
        userPrincipalName:
          type: string
          readOnly: true
          description: The user principal name of the user whose access was reviewed.
      type: object
    AccessReviewDecisionServicePrincipalIdentity:
      x-ms-discriminator-value: servicePrincipal
      description: Service Principal Decision Target
      properties:
        type:
          type: string
          description: 'The type of decision target : User/ServicePrincipal'
          enum:
            - user
            - servicePrincipal
          x-ms-enum:
            name: DecisionTargetType
            modelAsString: true
        id:
          type: string
          readOnly: true
          description: The id of principal whose access was reviewed.
        displayName:
          type: string
          readOnly: true
          description: The display name of the user whose access was reviewed.
        appId:
          type: string
          readOnly: true
          description: The appId for the service principal entity being reviewed
      type: object
    AccessReviewActorIdentity:
      type: object
      properties:
        principalId:
          type: string
          readOnly: true
          description: The identity id
        principalType:
          type: string
          readOnly: true
          description: 'The identity type : user/servicePrincipal'
          enum:
            - user
            - servicePrincipal
          x-ms-enum:
            name: AccessReviewActorIdentityType
            modelAsString: true
        principalName:
          type: string
          readOnly: true
          description: The identity display name
        userPrincipalName:
          type: string
          readOnly: true
          description: The user principal name(if valid)
      description: Details of the actor identity
    AccessReviewContactedReviewer:
      x-ms-azure-resource: true
      description: Access Review Contacted Reviewer.
      properties:
        id:
          type: string
          readOnly: true
          description: The access review reviewer id.
        name:
          type: string
          readOnly: true
          description: The access review reviewer id.
        type:
          type: string
          readOnly: true
          description: The resource type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/AccessReviewContactedReviewerProperties'
          description: Access Review Contacted Reviewer properties.
      type: object
    AccessReviewContactedReviewerProperties:
      type: object
      properties:
        userDisplayName:
          type: string
          description: The display name of the reviewer
          readOnly: true
        userPrincipalName:
          type: string
          description: The user principal name of the reviewer
          readOnly: true
        createdDateTime:
          type: string
          readOnly: true
          format: date-time
          description: Date Time when the reviewer was contacted.
          nullable: true
      description: Properties of access review contacted reviewer.
    AccessReviewScheduleDefinitionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewScheduleDefinition'
          description: Access Review Schedule Definition list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of Access Review Schedule Definitions.
    AccessReviewInstanceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewInstance'
          description: Access Review Instance list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of Access Review Instances.
    AccessReviewHistoryDefinitionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewHistoryDefinition'
          description: Access Review History Definition list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of Access Review History Definitions.
    AccessReviewHistoryDefinitionInstanceListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewHistoryInstance'
          description: Access Review History Definition's Instance list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of Access Review History Instances.
    AccessReviewDecisionListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewDecision'
          description: Access Review Decision list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of access review decisions.
    AccessReviewContactedReviewerListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/AccessReviewContactedReviewer'
          description: Access Review Contacted Reviewer.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: List of access review contacted reviewers.
    ErrorDefinition:
      type: object
      title: Error
      description: Error description and code explaining why an operation failed.
      properties:
        error:
          $ref: '#/components/schemas/ErrorDefinitionProperties'
          description: Error of the list gateway status.
    ErrorDefinitionProperties:
      type: object
      title: Error
      description: Error description and code explaining why an operation failed.
      properties:
        message:
          type: string
          readOnly: true
          description: Description of the error.
        code:
          type: string
          description: Error code of list gateway.
    Operation:
      title: REST API Operation
      description: Details of a REST API operation, returned from the Resource Provider Operations API
      type: object
      properties:
        name:
          description: 'The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"'
          type: string
          readOnly: true
        isDataAction:
          description: Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
          type: boolean
          readOnly: true
        display:
          description: Localized display information for this particular operation.
          type: object
          properties:
            provider:
              description: The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
              type: string
              readOnly: true
            resource:
              description: The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
              type: string
              readOnly: true
            operation:
              description: The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
              type: string
              readOnly: true
            description:
              description: The short, localized friendly description of the operation; suitable for tool tips and detailed views.
              type: string
              readOnly: true
        origin:
          description: The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
          type: string
          readOnly: true
          enum:
            - user
            - system
            - user,system
          x-ms-enum:
            name: Origin
            modelAsString: true
        actionType:
          description: Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
          type: string
          readOnly: true
          enum:
            - Internal
          x-ms-enum:
            name: ActionType
            modelAsString: true
    OperationDisplay:
      description: The display information for a Microsoft.Authorization operation.
      type: object
      properties:
        provider:
          description: 'The resource provider name: Microsoft.Authorization.'
          type: string
          readOnly: true
        resource:
          description: The resource on which the operation is performed.
          type: string
          readOnly: true
        operation:
          description: The operation that users can perform.
          type: string
          readOnly: true
        description:
          description: The description for the operation.
          type: string
          readOnly: true
    OperationListResult:
      description: A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          x-ms-identifiers:
            - name
          description: List of operations supported by the resource provider
          readOnly: true
        nextLink:
          type: string
          description: URL to get the next set of operation list results (if there are any).
          readOnly: true
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      type: object
      properties:
        id:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          x-ms-mutability:
            - read
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
      x-ms-azure-resource: true
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. Ex - P3. It is typically a letter+number code
        tier:
          type: string
          enum:
            - Free
            - Basic
            - Standard
            - Premium
          x-ms-enum:
            name: SkuTier
            modelAsString: false
          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal ID of resource identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant ID of resource.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    ErrorResponse:
      title: Error response
      description: Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).
      type: object
      properties:
        error:
          description: The error object.
          $ref: '#/components/schemas/ErrorDetail'
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    RoleEligibilityScheduleFilter:
      properties:
        principalId:
          type: string
          description: Returns role eligibility schedule of the specific principal.
        roleDefinitionId:
          type: string
          description: Returns role eligibility schedule of the specific role definition.
        status:
          type: string
          description: Returns role eligibility schedule of the specific status.
      type: object
      description: Role eligibility schedule filter
    RoleEligibilityScheduleProperties:
      properties:
        scope:
          type: string
          description: The role eligibility schedule scope.
        roleDefinitionId:
          type: string
          description: The role definition ID.
        principalId:
          type: string
          description: The principal ID.
        principalType:
          type: string
          description: The principal type of the assigned principal ID.
          enum:
            - User
            - Group
            - ServicePrincipal
            - ForeignGroup
            - Device
          x-ms-enum:
            name: principalType
            modelAsString: true
        roleEligibilityScheduleRequestId:
          type: string
          description: The id of roleEligibilityScheduleRequest used to create this roleAssignmentSchedule
        memberType:
          type: string
          description: Membership type of the role eligibility schedule
          enum:
            - Inherited
            - Direct
            - Group
          x-ms-enum:
            name: MemberType
            modelAsString: true
        status:
          type: string
          description: The status of the role eligibility schedule.
          enum:
            - Accepted
            - PendingEvaluation
            - Granted
            - Denied
            - PendingProvisioning
            - Provisioned
            - PendingRevocation
            - Revoked
            - Canceled
            - Failed
            - PendingApprovalProvisioning
            - PendingApproval
            - FailedAsResourceIsLocked
            - PendingAdminDecision
            - AdminApproved
            - AdminDenied
            - TimedOut
            - ProvisioningStarted
            - Invalid
            - PendingScheduleCreation
            - ScheduleCreated
            - PendingExternalProvisioning
          x-ms-enum:
            name: Status
            modelAsString: true
        startDateTime:
          type: string
          format: date-time
          description: Start DateTime when role eligibility schedule
        endDateTime:
          type: string
          format: date-time
          description: End DateTime when role eligibility schedule
        condition:
          type: string
          description: 'The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase ''foo_storage_container'''
        conditionVersion:
          type: string
          description: Version of the condition. Currently accepted value is '2.0'
        createdOn:
          type: string
          format: date-time
          description: DateTime when role eligibility schedule was created
        updatedOn:
          type: string
          format: date-time
          description: DateTime when role eligibility schedule was modified
        expandedProperties:
          type: object
          description: Additional properties of principal, scope and role definition
          $ref: '#/components/schemas/ExpandedProperties'
      type: object
      description: Role eligibility schedule properties with scope.
    RoleEligibilitySchedule:
      description: Role eligibility schedule
      properties:
        id:
          type: string
          readOnly: true
          description: The role eligibility schedule Id.
        name:
          type: string
          readOnly: true
          description: The role eligibility schedule name.
        type:
          type: string
          readOnly: true
          description: The role eligibility schedule type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleEligibilityScheduleProperties'
          description: role eligibility schedule properties.
      type: object
    RoleEligibilityScheduleListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleEligibilitySchedule'
          description: role eligibility schedule list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: role eligibility schedule list operation result.
    RoleManagementPolicyProperties:
      properties:
        scope:
          type: string
          description: The role management policy scope.
        displayName:
          type: string
          description: The role management policy display name.
        description:
          type: string
          description: The role management policy description.
        isOrganizationDefault:
          type: boolean
          description: The role management policy is default policy.
        lastModifiedBy:
          $ref: '#/components/schemas/Principal'
        lastModifiedDateTime:
          type: string
          readOnly: true
          format: date-time
          description: The last modified date time.
        rules:
          type: array
          items:
            $ref: '#/components/schemas/RoleManagementPolicyRule'
          description: The rule applied to the policy.
        effectiveRules:
          type: array
          items:
            $ref: '#/components/schemas/RoleManagementPolicyRule'
          readOnly: true
          description: The readonly computed rule applied to the policy.
        policyProperties:
          readOnly: true
          type: object
          description: Additional properties of scope
          $ref: '#/components/schemas/PolicyProperties'
      type: object
      description: Role management policy properties with scope.
    RoleManagementPolicy:
      description: Role management policy
      properties:
        id:
          type: string
          readOnly: true
          description: The role management policy Id.
        name:
          type: string
          readOnly: true
          description: The role management policy name.
        type:
          type: string
          readOnly: true
          description: The role management policy type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleManagementPolicyProperties'
          description: Role management policy properties.
      type: object
    RoleManagementPolicyListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleManagementPolicy'
          description: Role management policy list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role management policy list operation result.
    PolicyProperties:
      properties:
        scope:
          type: object
          description: Details of the resource scope
          readOnly: true
          properties:
            id:
              type: string
              description: Scope id of the resource
            displayName:
              type: string
              description: Display name of the resource
            type:
              type: string
              description: Type of the resource
      type: object
    RoleManagementPolicyAssignment:
      description: Role management policy
      properties:
        id:
          type: string
          readOnly: true
          description: The role management policy Id.
        name:
          type: string
          readOnly: true
          description: The role management policy name.
        type:
          type: string
          readOnly: true
          description: The role management policy type.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/RoleManagementPolicyAssignmentProperties'
          description: Role management policy properties.
      type: object
    RoleManagementPolicyAssignmentProperties:
      properties:
        scope:
          type: string
          description: The role management policy scope.
        roleDefinitionId:
          type: string
          description: The role definition of management policy assignment.
        policyId:
          type: string
          description: The policy id role management policy assignment.
        policyAssignmentProperties:
          readOnly: true
          type: object
          description: Additional properties of scope, role definition and policy
          $ref: '#/components/schemas/PolicyAssignmentProperties'
      type: object
      description: Role management policy assignment properties with scope.
    RoleManagementPolicyAssignmentListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleManagementPolicyAssignment'
          description: Role management policy assignment list.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Role management policy assignment list operation result.
    PolicyAssignmentProperties:
      properties:
        scope:
          type: object
          description: Details of the resource scope
          properties:
            id:
              type: string
              description: Scope id of the resource
            displayName:
              type: string
              description: Display name of the resource
            type:
              type: string
              description: Type of the resource
        roleDefinition:
          type: object
          description: Details of role definition
          properties:
            id:
              type: string
              description: Id of the role definition
            displayName:
              type: string
              description: Display name of the role definition
            type:
              type: string
              description: Type of the role definition
        policy:
          type: object
          description: Details of the policy
          properties:
            id:
              type: string
              description: Id of the policy
            lastModifiedBy:
              $ref: '#/components/schemas/Principal'
            lastModifiedDateTime:
              type: string
              format: date-time
              description: The last modified date time.
      type: object
    ResourceType:
      properties:
        name:
          type: string
          description: The resource type name.
        displayName:
          type: string
          description: The resource type display name.
        operations:
          type: array
          items:
            $ref: '#/components/schemas/ProviderOperation'
          x-ms-identifiers: []
          description: The resource type operations.
      type: object
      description: Resource Type
    ProviderOperation:
      description: Operation
      properties:
        name:
          type: string
          description: The operation name.
        displayName:
          type: string
          description: The operation display name.
        description:
          type: string
          description: The operation description.
        origin:
          type: string
          description: The operation origin.
        properties:
          type: object
          x-ms-client-flatten: true
          description: The operation properties.
        isDataAction:
          type: boolean
          description: The dataAction flag to specify the operation type.
      type: object
    ProviderOperationsMetadata:
      properties:
        id:
          type: string
          description: The provider id.
        name:
          type: string
          description: The provider name.
        type:
          type: string
          description: The provider type.
        displayName:
          type: string
          description: The provider display name.
        resourceTypes:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-ms-identifiers:
            - name
          description: The provider resource types
        operations:
          type: array
          items:
            $ref: '#/components/schemas/ProviderOperation'
          x-ms-identifiers: []
          description: The provider operations.
      type: object
      description: Provider Operations metadata
    ProviderOperationsMetadataListResult:
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ProviderOperationsMetadata'
          description: The list of providers.
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      type: object
      description: Provider operations metadata list
  x-stackQL-resources:
    role_assignments_for_subscription:
      id: azure.authorization.role_assignments_for_subscription
      name: role_assignments_for_subscription
      title: role_assignments_for_subscription
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1roleAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignments_for_subscription/methods/list'
        insert: []
        update: []
        delete: []
    role_assignments_for_resource_group:
      id: azure.authorization.role_assignments_for_resource_group
      name: role_assignments_for_resource_group
      title: role_assignments_for_resource_group
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Authorization~1roleAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignments_for_resource_group/methods/list'
        insert: []
        update: []
        delete: []
    role_assignments_for_resource:
      id: azure.authorization.role_assignments_for_resource
      name: role_assignments_for_resource
      title: role_assignments_for_resource
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{resourceType}~1{resourceName}~1providers~1Microsoft.Authorization~1roleAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignments_for_resource/methods/list'
        insert: []
        update: []
        delete: []
    role_assignments:
      id: azure.authorization.role_assignments
      name: role_assignments
      title: role_assignments
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignments~1{roleAssignmentName}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignments~1{roleAssignmentName}~1?api-version=2022-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignments~1{roleAssignmentName}~1?api-version=2022-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_by_id:
          operation:
            $ref: '#/paths/~1{roleAssignmentId}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_by_id:
          operation:
            $ref: '#/paths/~1{roleAssignmentId}~1?api-version=2022-04-01/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_by_id:
          operation:
            $ref: '#/paths/~1{roleAssignmentId}~1?api-version=2022-04-01/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/delete'
          - $ref: '#/components/x-stackQL-resources/role_assignments/methods/delete_by_id'
    role_assignments_for_scope:
      id: azure.authorization.role_assignments_for_scope
      name: role_assignments_for_scope
      title: role_assignments_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignments_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    role_assignment_schedule_requests:
      id: azure.authorization.role_assignment_schedule_requests
      name: role_assignment_schedule_requests
      title: role_assignment_schedule_requests
      methods:
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentScheduleRequests~1{roleAssignmentScheduleRequestName}~1?api-version=2022-04-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentScheduleRequests~1{roleAssignmentScheduleRequestName}~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentScheduleRequests~1{roleAssignmentScheduleRequestName}~1cancel~1?api-version=2022-04-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentScheduleRequests~1{roleAssignmentScheduleRequestName}~1validate~1?api-version=2022-04-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignment_schedule_requests/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/role_assignment_schedule_requests/methods/create'
        update: []
        delete: []
    role_assignment_schedule_requests_for_scope:
      id: azure.authorization.role_assignment_schedule_requests_for_scope
      name: role_assignment_schedule_requests_for_scope
      title: role_assignment_schedule_requests_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentScheduleRequests~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignment_schedule_requests_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    alerts:
      id: azure.authorization.alerts
      name: alerts
      title: alerts
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1{alertId}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1{alertId}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1{alertId}~1refresh~1?api-version=2022-08-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        refresh_all:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1refresh~1?api-version=2022-08-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/get'
        insert: []
        update: []
        delete: []
    alerts_for_scope:
      id: azure.authorization.alerts_for_scope
      name: alerts_for_scope
      title: alerts_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alerts_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    alert_configurations:
      id: azure.authorization.alert_configurations
      name: alert_configurations
      title: alert_configurations
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlertConfigurations~1{alertId}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlertConfigurations~1{alertId}~1?api-version=2022-08-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_configurations/methods/get'
        insert: []
        update: []
        delete: []
    alert_configurations_for_scope:
      id: azure.authorization.alert_configurations_for_scope
      name: alert_configurations_for_scope
      title: alert_configurations_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlertConfigurations~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_configurations_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    alert_definitions:
      id: azure.authorization.alert_definitions
      name: alert_definitions
      title: alert_definitions
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlertDefinitions~1{alertDefinitionId}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_definitions/methods/get'
        insert: []
        update: []
        delete: []
    alert_definitions_for_scope:
      id: azure.authorization.alert_definitions_for_scope
      name: alert_definitions_for_scope
      title: alert_definitions_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlertDefinitions~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_definitions_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    alert_incidents:
      id: azure.authorization.alert_incidents
      name: alert_incidents
      title: alert_incidents
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1{alertId}~1alertIncidents~1{alertIncidentId}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remediate:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1{alertId}~1alertIncidents~1{alertIncidentId}~1remediate~1?api-version=2022-08-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_incidents/methods/get'
        insert: []
        update: []
        delete: []
    alert_incidents_for_scope:
      id: azure.authorization.alert_incidents_for_scope
      name: alert_incidents_for_scope
      title: alert_incidents_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlerts~1{alertId}~1alertIncidents~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_incidents_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    alert_operation:
      id: azure.authorization.alert_operation
      name: alert_operation
      title: alert_operation
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementAlertOperations~1{operationId}~1?api-version=2022-08-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/alert_operation/methods/get'
        insert: []
        update: []
        delete: []
    role_assignment_schedule_instances_for_scope:
      id: azure.authorization.role_assignment_schedule_instances_for_scope
      name: role_assignment_schedule_instances_for_scope
      title: role_assignment_schedule_instances_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentScheduleInstances~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignment_schedule_instances_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    role_assignment_schedule_instances:
      id: azure.authorization.role_assignment_schedule_instances
      name: role_assignment_schedule_instances
      title: role_assignment_schedule_instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentScheduleInstances~1{roleAssignmentScheduleInstanceName}~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignment_schedule_instances/methods/get'
        insert: []
        update: []
        delete: []
    eligible_child_resources:
      id: azure.authorization.eligible_child_resources
      name: eligible_child_resources
      title: eligible_child_resources
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1eligibleChildResources~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/eligible_child_resources/methods/get'
        insert: []
        update: []
        delete: []
    permissions_for_resource_group:
      id: azure.authorization.permissions_for_resource_group
      name: permissions_for_resource_group
      title: permissions_for_resource_group
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Authorization~1permissions~1?api-version=2022-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/permissions_for_resource_group/methods/list'
        insert: []
        update: []
        delete: []
    permissions_for_resource:
      id: azure.authorization.permissions_for_resource
      name: permissions_for_resource
      title: permissions_for_resource
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourcePath}~1{resourceType}~1{resourceName}~1providers~1Microsoft.Authorization~1permissions~1?api-version=2022-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/permissions_for_resource/methods/list'
        insert: []
        update: []
        delete: []
    role_definitions:
      id: azure.authorization.role_definitions
      name: role_definitions
      title: role_definitions
      methods:
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleDefinitions~1{roleDefinitionId}~1?api-version=2022-05-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleDefinitions~1{roleDefinitionId}~1?api-version=2022-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleDefinitions~1{roleDefinitionId}~1?api-version=2022-05-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleDefinitions~1?api-version=2022-05-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/role_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/role_definitions/methods/create_or_update'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/role_definitions/methods/delete'
    role_assignment_schedules:
      id: azure.authorization.role_assignment_schedules
      name: role_assignment_schedules
      title: role_assignment_schedules
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentSchedules~1{roleAssignmentScheduleName}~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignment_schedules/methods/get'
        insert: []
        update: []
        delete: []
    role_assignment_schedules_for_scope:
      id: azure.authorization.role_assignment_schedules_for_scope
      name: role_assignment_schedules_for_scope
      title: role_assignment_schedules_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleAssignmentSchedules~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_assignment_schedules_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    classic_administrators:
      id: azure.authorization.classic_administrators
      name: classic_administrators
      title: classic_administrators
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1classicAdministrators~1?api-version=2015-07-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/classic_administrators/methods/list'
        insert: []
        update: []
        delete: []
    role_eligibility_schedule_requests:
      id: azure.authorization.role_eligibility_schedule_requests
      name: role_eligibility_schedule_requests
      title: role_eligibility_schedule_requests
      methods:
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilityScheduleRequests~1{roleEligibilityScheduleRequestName}~1?api-version=2022-04-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilityScheduleRequests~1{roleEligibilityScheduleRequestName}~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        cancel:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilityScheduleRequests~1{roleEligibilityScheduleRequestName}~1cancel~1?api-version=2022-04-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilityScheduleRequests~1{roleEligibilityScheduleRequestName}~1validate~1?api-version=2022-04-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_eligibility_schedule_requests/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/role_eligibility_schedule_requests/methods/create'
        update: []
        delete: []
    role_eligibility_schedule_requests_for_scope:
      id: azure.authorization.role_eligibility_schedule_requests_for_scope
      name: role_eligibility_schedule_requests_for_scope
      title: role_eligibility_schedule_requests_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilityScheduleRequests~1?api-version=2022-04-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_eligibility_schedule_requests_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    deny_assignments_for_resource:
      id: azure.authorization.deny_assignments_for_resource
      name: deny_assignments_for_resource
      title: deny_assignments_for_resource
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1{resourceProviderNamespace}~1{parentResourcePath}~1{resourceType}~1{resourceName}~1providers~1Microsoft.Authorization~1denyAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deny_assignments_for_resource/methods/list'
        insert: []
        update: []
        delete: []
    deny_assignments_for_resource_group:
      id: azure.authorization.deny_assignments_for_resource_group
      name: deny_assignments_for_resource_group
      title: deny_assignments_for_resource_group
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Authorization~1denyAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deny_assignments_for_resource_group/methods/list'
        insert: []
        update: []
        delete: []
    deny_assignments:
      id: azure.authorization.deny_assignments
      name: deny_assignments
      title: deny_assignments
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1denyAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1denyAssignments~1{denyAssignmentId}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_by_id:
          operation:
            $ref: '#/paths/~1{denyAssignmentId}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deny_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/deny_assignments/methods/list'
        insert: []
        update: []
        delete: []
    deny_assignments_for_scope:
      id: azure.authorization.deny_assignments_for_scope
      name: deny_assignments_for_scope
      title: deny_assignments_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1denyAssignments~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/deny_assignments_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    role_eligibility_schedule_instances_for_scope:
      id: azure.authorization.role_eligibility_schedule_instances_for_scope
      name: role_eligibility_schedule_instances_for_scope
      title: role_eligibility_schedule_instances_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilityScheduleInstances~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_eligibility_schedule_instances_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    role_eligibility_schedule_instances:
      id: azure.authorization.role_eligibility_schedule_instances
      name: role_eligibility_schedule_instances
      title: role_eligibility_schedule_instances
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilityScheduleInstances~1{roleEligibilityScheduleInstanceName}~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_eligibility_schedule_instances/methods/get'
        insert: []
        update: []
        delete: []
    operations:
      id: azure.authorization.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1operations~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        delete: []
    access_review_history_definitions:
      id: azure.authorization.access_review_history_definitions
      name: access_review_history_definitions
      title: access_review_history_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_history_definitions/methods/list'
        insert: []
        update: []
        delete: []
    access_review_history_definition:
      id: azure.authorization.access_review_history_definition
      name: access_review_history_definition
      title: access_review_history_definition
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_by_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1?api-version=2021-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/access_review_history_definition/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_review_history_definition/methods/delete_by_id'
    access_review_history_definition_instance:
      id: azure.authorization.access_review_history_definition_instance
      name: access_review_history_definition_instance
      title: access_review_history_definition_instance
      methods:
        generate_download_uri:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1instances~1{instanceId}~1generateDownloadUri~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    access_review_history_definition_instances:
      id: azure.authorization.access_review_history_definition_instances
      name: access_review_history_definition_instances
      title: access_review_history_definition_instances
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1instances~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_history_definition_instances/methods/list'
        insert: []
        update: []
        delete: []
    access_review_schedule_definitions:
      id: azure.authorization.access_review_schedule_definitions
      name: access_review_schedule_definitions
      title: access_review_schedule_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_by_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1?api-version=2021-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_by_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1stop~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_schedule_definitions/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/access_review_schedule_definitions/methods/delete_by_id'
    access_review_instances:
      id: azure.authorization.access_review_instances
      name: access_review_instances
      title: access_review_instances
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_review_instances/methods/create'
        update: []
        delete: []
    access_review_instance:
      id: azure.authorization.access_review_instance
      name: access_review_instance
      title: access_review_instance
      methods:
        stop:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1stop~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_decisions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1resetDecisions~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        apply_decisions:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1applyDecisions~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_reminders:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1sendReminders~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        accept_recommendations:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1acceptRecommendations~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    access_review_instance_decisions:
      id: azure.authorization.access_review_instance_decisions
      name: access_review_instance_decisions
      title: access_review_instance_decisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1decisions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_instance_decisions/methods/list'
        insert: []
        update: []
        delete: []
    access_review_instance_contacted_reviewers:
      id: azure.authorization.access_review_instance_contacted_reviewers
      name: access_review_instance_contacted_reviewers
      title: access_review_instance_contacted_reviewers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1contactedReviewers~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_instance_contacted_reviewers/methods/list'
        insert: []
        update: []
        delete: []
    access_review_default_settings:
      id: azure.authorization.access_review_default_settings
      name: access_review_default_settings
      title: access_review_default_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleSettings~1default~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Authorization~1accessReviewScheduleSettings~1default~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_default_settings/methods/get'
        insert: []
        update: []
        delete: []
    scope_access_review_history_definitions:
      id: azure.authorization.scope_access_review_history_definitions
      name: scope_access_review_history_definitions
      title: scope_access_review_history_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_history_definitions/methods/list'
        insert: []
        update: []
        delete: []
    scope_access_review_history_definition:
      id: azure.authorization.scope_access_review_history_definition
      name: scope_access_review_history_definition
      title: scope_access_review_history_definition
      methods:
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_by_id:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1?api-version=2021-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_history_definition/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_history_definition/methods/delete_by_id'
    scope_access_review_history_definition_instance:
      id: azure.authorization.scope_access_review_history_definition_instance
      name: scope_access_review_history_definition_instance
      title: scope_access_review_history_definition_instance
      methods:
        generate_download_uri:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1instances~1{instanceId}~1generateDownloadUri~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    scope_access_review_history_definition_instances:
      id: azure.authorization.scope_access_review_history_definition_instances
      name: scope_access_review_history_definition_instances
      title: scope_access_review_history_definition_instances
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewHistoryDefinitions~1{historyDefinitionId}~1instances~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_history_definition_instances/methods/list'
        insert: []
        update: []
        delete: []
    scope_access_review_schedule_definitions:
      id: azure.authorization.scope_access_review_schedule_definitions
      name: scope_access_review_schedule_definitions
      title: scope_access_review_schedule_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_by_id:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1?api-version=2021-12-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_or_update_by_id:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        stop:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1stop~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_schedule_definitions/methods/list'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_schedule_definitions/methods/delete_by_id'
    scope_access_review_instances:
      id: azure.authorization.scope_access_review_instances
      name: scope_access_review_instances
      title: scope_access_review_instances
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_instances/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_instances/methods/create'
        update: []
        delete: []
    scope_access_review_instance:
      id: azure.authorization.scope_access_review_instance
      name: scope_access_review_instance
      title: scope_access_review_instance
      methods:
        stop:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1stop~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        record_all_decisions:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1recordAllDecisions~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_decisions:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1resetDecisions~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        apply_decisions:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1applyDecisions~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_reminders:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1sendReminders~1?api-version=2021-12-01-preview/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    scope_access_review_instance_decisions:
      id: azure.authorization.scope_access_review_instance_decisions
      name: scope_access_review_instance_decisions
      title: scope_access_review_instance_decisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1decisions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_instance_decisions/methods/list'
        insert: []
        update: []
        delete: []
    scope_access_review_instance_contacted_reviewers:
      id: azure.authorization.scope_access_review_instance_contacted_reviewers
      name: scope_access_review_instance_contacted_reviewers
      title: scope_access_review_instance_contacted_reviewers
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1contactedReviewers~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_instance_contacted_reviewers/methods/list'
        insert: []
        update: []
        delete: []
    scope_access_review_default_settings:
      id: azure.authorization.scope_access_review_default_settings
      name: scope_access_review_default_settings
      title: scope_access_review_default_settings
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleSettings~1default~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        put:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1accessReviewScheduleSettings~1default~1?api-version=2021-12-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/scope_access_review_default_settings/methods/get'
        insert: []
        update: []
        delete: []
    access_review_schedule_definitions_assigned_for_my_approval:
      id: azure.authorization.access_review_schedule_definitions_assigned_for_my_approval
      name: access_review_schedule_definitions_assigned_for_my_approval
      title: access_review_schedule_definitions_assigned_for_my_approval
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_schedule_definitions_assigned_for_my_approval/methods/list'
        insert: []
        update: []
        delete: []
    access_review_instances_assigned_for_my_approval:
      id: azure.authorization.access_review_instances_assigned_for_my_approval
      name: access_review_instances_assigned_for_my_approval
      title: access_review_instances_assigned_for_my_approval
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_instances_assigned_for_my_approval/methods/list'
        insert: []
        update: []
        delete: []
    access_review_instance_my_decisions:
      id: azure.authorization.access_review_instance_my_decisions
      name: access_review_instance_my_decisions
      title: access_review_instance_my_decisions
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1decisions~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
        get_by_id:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1decisions~1{decisionId}~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        patch:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1decisions~1{decisionId}~1?api-version=2021-12-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/access_review_instance_my_decisions/methods/list'
        insert: []
        update: []
        delete: []
    tenant_level_access_review_instance_contacted_reviewers:
      id: azure.authorization.tenant_level_access_review_instance_contacted_reviewers
      name: tenant_level_access_review_instance_contacted_reviewers
      title: tenant_level_access_review_instance_contacted_reviewers
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1accessReviewScheduleDefinitions~1{scheduleDefinitionId}~1instances~1{id}~1contactedReviewers~1?api-version=2021-12-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tenant_level_access_review_instance_contacted_reviewers/methods/list'
        insert: []
        update: []
        delete: []
    role_eligibility_schedules:
      id: azure.authorization.role_eligibility_schedules
      name: role_eligibility_schedules
      title: role_eligibility_schedules
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilitySchedules~1{roleEligibilityScheduleName}~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_eligibility_schedules/methods/get'
        insert: []
        update: []
        delete: []
    role_eligibility_schedules_for_scope:
      id: azure.authorization.role_eligibility_schedules_for_scope
      name: role_eligibility_schedules_for_scope
      title: role_eligibility_schedules_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleEligibilitySchedules~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_eligibility_schedules_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    role_management_policies:
      id: azure.authorization.role_management_policies
      name: role_management_policies
      title: role_management_policies
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicies~1{roleManagementPolicyName}~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicies~1{roleManagementPolicyName}~1?api-version=2020-10-01-preview/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicies~1{roleManagementPolicyName}~1?api-version=2020-10-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_management_policies/methods/get'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/role_management_policies/methods/delete'
    role_management_policies_for_scope:
      id: azure.authorization.role_management_policies_for_scope
      name: role_management_policies_for_scope
      title: role_management_policies_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicies~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_management_policies_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    role_management_policy_assignments:
      id: azure.authorization.role_management_policy_assignments
      name: role_management_policy_assignments
      title: role_management_policy_assignments
      methods:
        get:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicyAssignments~1{roleManagementPolicyAssignmentName}~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicyAssignments~1{roleManagementPolicyAssignmentName}~1?api-version=2020-10-01-preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicyAssignments~1{roleManagementPolicyAssignmentName}~1?api-version=2020-10-01-preview/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_management_policy_assignments/methods/get'
        insert:
          - $ref: '#/components/x-stackQL-resources/role_management_policy_assignments/methods/create'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/role_management_policy_assignments/methods/delete'
    role_management_policy_assignments_for_scope:
      id: azure.authorization.role_management_policy_assignments_for_scope
      name: role_management_policy_assignments_for_scope
      title: role_management_policy_assignments_for_scope
      methods:
        list:
          operation:
            $ref: '#/paths/~1{scope}~1providers~1Microsoft.Authorization~1roleManagementPolicyAssignments~1?api-version=2020-10-01-preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/role_management_policy_assignments_for_scope/methods/list'
        insert: []
        update: []
        delete: []
    global_administrator:
      id: azure.authorization.global_administrator
      name: global_administrator
      title: global_administrator
      methods:
        elevate_access:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1elevateAccess~1?api-version=2015-07-01/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
    provider_operations_metadata:
      id: azure.authorization.provider_operations_metadata
      name: provider_operations_metadata
      title: provider_operations_metadata
      methods:
        get:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1providerOperations~1{resourceProviderNamespace}~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.Authorization~1providerOperations~1?api-version=2022-04-01/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/provider_operations_metadata/methods/get'
          - $ref: '#/components/x-stackQL-resources/provider_operations_metadata/methods/list'
        insert: []
        update: []
        delete: []
paths:
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments/?api-version=2022-04-01:
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_ListForSubscription
      description: List all role assignments that apply to a subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/RoleAssignmentFilterParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
      responses:
        '200':
          description: Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-odata: '#/components/schemas/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments/?api-version=2022-04-01:
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_ListForResourceGroup
      description: List all role assignments that apply to a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/RoleAssignmentFilterParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
      responses:
        '200':
          description: Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-odata: '#/components/schemas/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments/?api-version=2022-04-01:
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_ListForResource
      description: List all role assignments that apply to a resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - $ref: '#/components/parameters/ResourceTypeParameter'
        - $ref: '#/components/parameters/ResourceNameParameter'
        - $ref: '#/components/parameters/RoleAssignmentFilterParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
      responses:
        '200':
          description: Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-odata: '#/components/schemas/RoleAssignmentFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}/?api-version=2022-04-01:
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_Get
      description: Get a role assignment by scope and name.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/RoleAssignmentNameParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
      responses:
        '200':
          description: Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_Create
      description: Create or update a role assignment by scope and name.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/RoleAssignmentNameParameter'
      requestBody:
        description: Parameters for the role assignment.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
      responses:
        '200':
          description: Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        '201':
          description: Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_Delete
      description: Delete a role assignment by scope and name.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/RoleAssignmentNameParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
      responses:
        '200':
          description: Returns the deleted role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        '204':
          description: Role assignment was already deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Authorization/roleAssignments/?api-version=2022-04-01:
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_ListForScope
      description: List all role assignments that apply to a scope.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/RoleAssignmentFilterParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
        - $ref: '#/components/parameters/PaginationSkipToken'
      responses:
        '200':
          description: Returns an array of role assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleAssignmentFilter'
  /{roleAssignmentId}/?api-version=2022-04-01:
    get:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_GetById
      description: Get a role assignment by ID.
      parameters:
        - $ref: '#/components/parameters/RoleAssignmentIdParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
      responses:
        '200':
          description: Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_CreateById
      description: Create or update a role assignment by ID.
      parameters:
        - $ref: '#/components/parameters/RoleAssignmentIdParameter'
      requestBody:
        description: Parameters for the role assignment.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentCreateParameters'
      responses:
        '200':
          description: Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        '201':
          description: Returns the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - RoleAssignments
      operationId: RoleAssignments_DeleteById
      description: Delete a role assignment by ID.
      parameters:
        - $ref: '#/components/parameters/RoleAssignmentIdParameter'
        - $ref: '#/components/parameters/TenantIdQueryParameter'
      responses:
        '200':
          description: Returns the deleted role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'
        '204':
          description: Role assignment already deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/?api-version=2022-04-01-preview:
    put:
      tags:
        - RoleAssignmentScheduleRequests
      operationId: RoleAssignmentScheduleRequests_Create
      description: Creates a role assignment schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignment schedule request to create. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleAssignmentScheduleRequestName
          in: path
          description: A GUID for the role assignment to create. The name must be unique and different for each role assignment.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for the role assignment schedule request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentScheduleRequest'
      responses:
        '201':
          description: Created - Returns information about the role assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentScheduleRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - RoleAssignmentScheduleRequests
      operationId: RoleAssignmentScheduleRequests_Get
      description: Get the specified role assignment schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignment schedule request.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleAssignmentScheduleRequestName
          in: path
          description: The name (guid) of the role assignment schedule request to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role assignment schedule request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentScheduleRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/?api-version=2022-04-01-preview:
    get:
      tags:
        - RoleAssignmentScheduleRequests
      operationId: RoleAssignmentScheduleRequests_ListForScope
      description: Gets role assignment schedule requests for a scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignments schedule requests.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role assignment schedule requests requested by the current user. Use $filter=asTarget() to return all role assignment schedule requests created for the current user. Use $filter=asApprover() to return all role assignment schedule requests where the current user is an approver.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of role assignments schedule requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentScheduleRequestListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleAssignmentScheduleRequestFilter'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/cancel/?api-version=2022-04-01-preview:
    post:
      tags:
        - RoleAssignmentScheduleRequests
      operationId: RoleAssignmentScheduleRequests_Cancel
      description: Cancels a pending role assignment schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignment request to cancel.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleAssignmentScheduleRequestName
          in: path
          description: The name of the role assignment request to cancel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns success.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleRequests/{roleAssignmentScheduleRequestName}/validate/?api-version=2022-04-01-preview:
    post:
      tags:
        - RoleAssignmentScheduleRequests
      operationId: RoleAssignmentScheduleRequests_Validate
      description: Validates a new role assignment schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignment request to validate.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleAssignmentScheduleRequestName
          in: path
          description: The name of the role assignment request to validate.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for the role assignment schedule request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignmentScheduleRequest'
      responses:
        '200':
          description: OK - Returns information about the role assignment request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentScheduleRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/?api-version=2022-08-01-preview:
    get:
      tags:
        - Alerts
      operationId: Alerts_Get
      description: Get the specified alert.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert to get.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the alert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - Alerts
      operationId: Alerts_Update
      description: Update an alert.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert to dismiss.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      requestBody:
        description: Parameters for the alert.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
      responses:
        '204':
          description: NoContent - Successfully updated the alert.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementAlerts/?api-version=2022-08-01-preview:
    get:
      tags:
        - Alerts
      operationId: Alerts_ListForScope
      description: Gets alerts for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of alerts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/refresh/?api-version=2022-08-01-preview:
    post:
      tags:
        - Alerts
      operationId: Alerts_Refresh
      description: Refresh an alert.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert to refresh.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted. The response indicates the alert is refreshing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertOperationResult'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /{scope}/providers/Microsoft.Authorization/roleManagementAlerts/refresh/?api-version=2022-08-01-preview:
    post:
      tags:
        - Alerts
      operationId: Alerts_RefreshAll
      description: Refresh all alerts for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted. The response indicates the alerts are refreshing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertOperationResult'
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /{scope}/providers/Microsoft.Authorization/roleManagementAlertConfigurations/{alertId}/?api-version=2022-08-01-preview:
    get:
      tags:
        - AlertConfigurations
      operationId: AlertConfigurations_Get
      description: Get the specified alert configuration.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert configuration. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert configuration to get.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the alert configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - AlertConfigurations
      operationId: AlertConfigurations_Update
      description: Update an alert configuration.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert configuration.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert configuration to update.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      requestBody:
        description: Parameters for the alert configuration.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertConfiguration'
      responses:
        '204':
          description: NoContent - Successfully updated the alert.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementAlertConfigurations/?api-version=2022-08-01-preview:
    get:
      tags:
        - AlertConfigurations
      operationId: AlertConfigurations_ListForScope
      description: Gets alert configurations for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert configuration.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of alert configurations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleManagementAlertDefinitions/{alertDefinitionId}/?api-version=2022-08-01-preview:
    get:
      tags:
        - AlertDefinitions
      operationId: AlertDefinitions_Get
      description: Get the specified alert definition.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert definition. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertDefinitionId
          in: path
          description: The name of the alert definition to get.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the alert definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementAlertDefinitions/?api-version=2022-08-01-preview:
    get:
      tags:
        - AlertDefinitions
      operationId: AlertDefinitions_ListForScope
      description: Gets alert definitions for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert definition.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of alert definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/alertIncidents/{alertIncidentId}/?api-version=2022-08-01-preview:
    get:
      tags:
        - AlertIncidents
      operationId: AlertIncidents_Get
      description: Get the specified alert incident.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert incident. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertIncidentId
          in: path
          description: The name of the alert incident to get.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the alert incident.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertIncident'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/alertIncidents/?api-version=2022-08-01-preview:
    get:
      tags:
        - AlertIncidents
      operationId: AlertIncidents_ListForScope
      description: Gets alert incidents for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert incident.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of alert incidents.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertIncidentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleManagementAlerts/{alertId}/alertIncidents/{alertIncidentId}/remediate/?api-version=2022-08-01-preview:
    post:
      tags:
        - AlertIncidents
      operationId: AlertIncidents_Remediate
      description: Remediate an alert incident.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert incident.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertId
          in: path
          description: The name of the alert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: alertIncidentId
          in: path
          description: The name of the alert incident to remediate.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '204':
          description: OK - Returns success.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementAlertOperations/{operationId}/?api-version=2022-08-01-preview:
    get:
      tags:
        - AlertOperations
      operationId: AlertOperation_Get
      description: Get the specified alert operation.
      parameters:
        - name: scope
          in: path
          description: The scope of the alert operation.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: operationId
          in: path
          description: The id of the alert operation.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the status of the operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertOperationResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleAssignmentScheduleInstances
      operationId: RoleAssignmentScheduleInstances_ListForScope
      description: Gets role assignment schedule instances of a role assignment schedule.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignment schedule.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal.  Use $filter=assignedTo('{userId}') to return all role assignment schedule instances for the user. Use $filter=asTarget() to return all role assignment schedule instances created for the current user.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns array of role assignment schedule instances.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentScheduleInstanceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleAssignmentScheduleInstanceFilter'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentScheduleInstances/{roleAssignmentScheduleInstanceName}/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleAssignmentScheduleInstances
      operationId: RoleAssignmentScheduleInstances_Get
      description: Gets the specified role assignment schedule instance.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignments schedules.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleAssignmentScheduleInstanceName
          in: path
          description: The name (hash of schedule name + time) of the role assignment schedule to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role assignment schedule instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentScheduleInstance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/eligibleChildResources/?api-version=2020-10-01-preview:
    get:
      tags:
        - eligibleChildResources
      operationId: EligibleChildResources_Get
      description: Get the child resources of a resource on which user has eligible access
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use $filter=resourceType+eq+'Subscription' to filter on only resource of type = 'Subscription'. Use $filter=resourceType+eq+'subscription'+or+resourceType+eq+'resourcegroup' to filter on resource of type = 'Subscription' or 'ResourceGroup'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role management policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EligibleChildResourcesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions/?api-version=2022-05-01-preview:
    get:
      tags:
        - Permissions
      operationId: Permissions_ListForResourceGroup
      description: Gets all permissions the caller has for a resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions/?api-version=2022-05-01-preview:
    get:
      tags:
        - Permissions
      operationId: Permissions_ListForResource
      description: Gets all permissions the caller has for a resource.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - name: parentResourcePath
          in: path
          description: The parent resource identity.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The resource type of the resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: The name of the resource to get the permissions for.
          required: true
          schema:
            pattern: .+
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: OK - Returns an array of permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionGetResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}/?api-version=2022-05-01-preview:
    delete:
      tags:
        - RoleDefinitions
      operationId: RoleDefinitions_Delete
      description: Deletes a role definition.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: roleDefinitionId
          in: path
          description: The ID of the role definition to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
        '204':
          description: Role definition already deleted or does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - RoleDefinitions
      operationId: RoleDefinitions_Get
      description: Get role definition by ID (GUID).
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: roleDefinitionId
          in: path
          description: The ID of the role definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - RoleDefinitions
      operationId: RoleDefinitions_CreateOrUpdate
      description: Creates or updates a role definition.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: roleDefinitionId
          in: path
          description: The ID of the role definition.
          required: true
          schema:
            type: string
      requestBody:
        description: The values for the role definition.
        required: true
        x-ms-requestBody-name: roleDefinition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDefinition'
      responses:
        '201':
          description: OK - Returns information about the created or updated role definition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinition'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Authorization/roleDefinitions/?api-version=2022-05-01-preview:
    get:
      tags:
        - RoleDefinitions
      operationId: RoleDefinitions_List
      description: Get all role definitions that are applicable at scope and above.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of role definitions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleDefinitionFilter'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/{roleAssignmentScheduleName}/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleAssignmentSchedules
      operationId: RoleAssignmentSchedules_Get
      description: Get the specified role assignment schedule for a resource scope
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignment schedule.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleAssignmentScheduleName
          in: path
          description: The name (guid) of the role assignment schedule to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role assignment schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentSchedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleAssignmentSchedules/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleAssignmentSchedules
      operationId: RoleAssignmentSchedules_ListForScope
      description: Gets role assignment schedules for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the role assignments schedules.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role assignment schedules for the current user. Use $filter=asTarget() to return all role assignment schedules created for the current user.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of role assignments schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignmentScheduleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleAssignmentScheduleFilter'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/classicAdministrators/?api-version=2015-07-01:
    get:
      tags:
        - ClassicAdministrators
      operationId: ClassicAdministrators_List
      description: Gets service administrator, account administrator, and co-administrators for the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Returns an array of administrators.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassicAdministratorListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/?api-version=2022-04-01-preview:
    put:
      tags:
        - RoleEligibilityScheduleRequests
      operationId: RoleEligibilityScheduleRequests_Create
      description: Creates a role eligibility schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility schedule request to create. The scope can be any REST resource instance. For example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription, '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleEligibilityScheduleRequestName
          in: path
          description: The name of the role eligibility to create. It can be any valid GUID.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for the role eligibility schedule request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleEligibilityScheduleRequest'
      responses:
        '201':
          description: Created - Returns information about the role eligibility schedule request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilityScheduleRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - RoleEligibilityScheduleRequests
      operationId: RoleEligibilityScheduleRequests_Get
      description: Get the specified role eligibility schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility schedule request.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleEligibilityScheduleRequestName
          in: path
          description: The name (guid) of the role eligibility schedule request to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role eligibility schedule request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilityScheduleRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/?api-version=2022-04-01-preview:
    get:
      tags:
        - RoleEligibilityScheduleRequests
      operationId: RoleEligibilityScheduleRequests_ListForScope
      description: Gets role eligibility schedule requests for a scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility schedule requests.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedule requests at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedule requests at, above or below the scope for the specified principal. Use $filter=asRequestor() to return all role eligibility schedule requests requested by the current user. Use $filter=asTarget() to return all role eligibility schedule requests created for the current user. Use $filter=asApprover() to return all role eligibility schedule requests where the current user is an approver.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of role eligibility schedule requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilityScheduleRequestListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleEligibilityScheduleRequestFilter'
  /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/cancel/?api-version=2022-04-01-preview:
    post:
      tags:
        - RoleEligibilityScheduleRequests
      operationId: RoleEligibilityScheduleRequests_Cancel
      description: Cancels a pending role eligibility schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility request to cancel.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleEligibilityScheduleRequestName
          in: path
          description: The name of the role eligibility request to cancel.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns success.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleRequests/{roleEligibilityScheduleRequestName}/validate/?api-version=2022-04-01-preview:
    post:
      tags:
        - RoleEligibilityScheduleRequests
      operationId: RoleEligibilityScheduleRequests_Validate
      description: Validates a new role eligibility schedule request.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility request to validate.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleEligibilityScheduleRequestName
          in: path
          description: The name of the role eligibility request to validate.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for the role eligibility schedule request.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleEligibilityScheduleRequest'
      responses:
        '200':
          description: OK - Returns information about the role eligibility schedule request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilityScheduleRequest'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/denyAssignments/?api-version=2022-04-01:
    get:
      tags:
        - DenyAssignments
      operationId: DenyAssignments_ListForResource
      description: Gets deny assignments for a resource.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - name: parentResourcePath
          in: path
          description: The parent resource identity.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceType
          in: path
          description: The resource type of the resource.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: resourceName
          in: path
          description: The name of the resource to get deny assignments for.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK - Returns an array of deny assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DenyAssignmentFilter'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/denyAssignments/?api-version=2022-04-01:
    get:
      tags:
        - DenyAssignments
      operationId: DenyAssignments_ListForResourceGroup
      description: Gets deny assignments for a resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK - Returns an array of deny assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DenyAssignmentFilter'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/denyAssignments/?api-version=2022-04-01:
    get:
      tags:
        - DenyAssignments
      operationId: DenyAssignments_List
      description: Gets all deny assignments for the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK - Returns an array of deny assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DenyAssignmentFilter'
  /{scope}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId}/?api-version=2022-04-01:
    get:
      tags:
        - DenyAssignments
      operationId: DenyAssignments_Get
      description: Get the specified deny assignment.
      parameters:
        - name: scope
          in: path
          description: The scope of the deny assignment.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: denyAssignmentId
          in: path
          description: The ID of the deny assignment to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the deny assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{denyAssignmentId}/?api-version=2022-04-01:
    get:
      tags:
        - DenyAssignments
      operationId: DenyAssignments_GetById
      description: Gets a deny assignment by ID.
      parameters:
        - name: denyAssignmentId
          in: path
          description: The fully qualified deny assignment ID. For example, use the format, /subscriptions/{guid}/providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId} for subscription level deny assignments, or /providers/Microsoft.Authorization/denyAssignments/{denyAssignmentId} for tenant level deny assignments.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns the deny assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /{scope}/providers/Microsoft.Authorization/denyAssignments/?api-version=2022-04-01:
    get:
      tags:
        - DenyAssignments
      operationId: DenyAssignments_ListForScope
      description: Gets deny assignments for a scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the deny assignments.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - $ref: '#/components/parameters/FilterParameter'
      responses:
        '200':
          description: OK - Returns an array of deny assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DenyAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/DenyAssignmentFilter'
  /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleEligibilityScheduleInstances
      operationId: RoleEligibilityScheduleInstances_ListForScope
      description: Gets role eligibility schedule instances of a role eligibility schedule.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility schedule.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use $filter=atScope() to return all role assignment schedules at or above the scope. Use $filter=principalId eq {id} to return all role assignment schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns array of role eligibility schedule instances.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilityScheduleInstanceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleEligibilityScheduleInstanceFilter'
  /{scope}/providers/Microsoft.Authorization/roleEligibilityScheduleInstances/{roleEligibilityScheduleInstanceName}/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleEligibilityScheduleInstances
      operationId: RoleEligibilityScheduleInstances_Get
      description: Gets the specified role eligibility schedule instance.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility schedules.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleEligibilityScheduleInstanceName
          in: path
          description: The name (hash of schedule name + time) of the role eligibility schedule to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role eligibility schedule instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilityScheduleInstance'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /providers/Microsoft.Authorization/operations/?api-version=2021-12-01-preview:
    get:
      operationId: Operations_List
      description: Lists the operations available from this provider.
      parameters: []
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewHistoryDefinitions
      operationId: AccessReviewHistoryDefinitions_List
      description: Lists the accessReviewHistoryDefinitions available from this provider, definition instances are only available for 30 days after creation.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessReviewsHistoryFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinitionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewHistoryDefinition
      operationId: AccessReviewHistoryDefinitions_GetById
      description: Get access review history definition by definition Id
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: AccessReviewHistoryDefinition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewHistoryDefinition
      operationId: AccessReviewHistoryDefinition_Create
      description: Create a scheduled or one-time Access Review History Definition
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      requestBody:
        description: Access review history definition properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewHistoryDefinitionProperties'
      responses:
        '200':
          description: AccessReviewHistoryDefinition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    delete:
      tags:
        - DeleteAccessReviewHistoryDefinition
      operationId: AccessReviewHistoryDefinition_DeleteById
      description: Delete an access review history definition
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully
        '204':
          description: Request is well formed but the resource does not exist
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}/instances/{instanceId}/generateDownloadUri/?api-version=2021-12-01-preview:
    post:
      tags:
        - PostAccessReviewHistoryDefinitionInstance
      operationId: AccessReviewHistoryDefinitionInstance_GenerateDownloadUri
      description: Generates a uri which can be used to retrieve review history data. This URI has a TTL of 1 day and can be retrieved by fetching the accessReviewHistoryDefinition object.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The id of the access review history definition instance to generate a URI for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: AccessReviewHistoryInstance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryInstance'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}/instances/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewHistoryDefinitionInstances
      operationId: AccessReviewHistoryDefinitionInstances_List
      description: Get access review history definition instances by definition Id
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinitionInstanceListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewScheduleDefinitions
      operationId: AccessReviewScheduleDefinitions_List
      description: Get access review schedule definitions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewScheduleDefinitionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewScheduleDefinition
      operationId: AccessReviewScheduleDefinitions_GetById
      description: Get single access review definition
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewScheduleDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    delete:
      tags:
        - DeleteAccessReviewScheduleDefinition
      operationId: AccessReviewScheduleDefinitions_DeleteById
      description: Delete access review schedule definition
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully
        '204':
          description: Request is well formed but the resource does not exist
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewScheduleDefinition
      operationId: AccessReviewScheduleDefinitions_CreateOrUpdateById
      description: Create or Update access review schedule definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      requestBody:
        description: Access review schedule definition properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewScheduleDefinitionProperties'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewScheduleDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/stop/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewScheduleDefinitionStop
      operationId: AccessReviewScheduleDefinitions_Stop
      description: Stop access review definition
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstances
      operationId: AccessReviewInstances_List
      description: Get access review instances
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstanceListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstance
      operationId: AccessReviewInstances_GetById
      description: Get access review instances
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstance'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewInstance
      operationId: AccessReviewInstances_Create
      description: Update access review instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      requestBody:
        description: Access review instance properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewInstanceProperties'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstance'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/stop/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceStop
      operationId: AccessReviewInstance_Stop
      description: An action to stop an access review instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/resetDecisions/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceResetDecisions
      operationId: AccessReviewInstance_ResetDecisions
      description: An action to reset all decisions for an access review instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/applyDecisions/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceApplyDecisions
      operationId: AccessReviewInstance_ApplyDecisions
      description: An action to apply all decisions for an access review instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/sendReminders/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceSendReminders
      operationId: AccessReviewInstance_SendReminders
      description: An action to send reminders for an access review instance.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/decisions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstanceDecisions
      operationId: AccessReviewInstanceDecisions_List
      description: Get access review instance decisions
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDecisionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/contactedReviewers/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstanceContactedReviewers
      operationId: AccessReviewInstanceContactedReviewers_List
      description: Get access review instance contacted reviewers
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewContactedReviewerListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/accessReviewScheduleSettings/default/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewDefaultSettings
      operationId: AccessReviewDefaultSettings_Get
      description: Get access review default settings for the subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDefaultSettings'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewDefaultSettings
      operationId: AccessReviewDefaultSettings_Put
      description: Get access review default settings for the subscription
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      requestBody:
        description: Access review schedule settings.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewScheduleSettings'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDefaultSettings'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewHistoryDefinitions
      operationId: ScopeAccessReviewHistoryDefinitions_List
      description: Lists the accessReviewHistoryDefinitions available from this provider, definition instances are only available for 30 days after creation.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/AccessReviewsHistoryFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinitionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewHistoryDefinition
      operationId: ScopeAccessReviewHistoryDefinitions_GetById
      description: Get access review history definition by definition Id
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: AccessReviewHistoryDefinition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewHistoryDefinition
      operationId: ScopeAccessReviewHistoryDefinition_Create
      description: Create a scheduled or one-time Access Review History Definition
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      requestBody:
        description: Access review history definition properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewHistoryDefinitionProperties'
      responses:
        '200':
          description: AccessReviewHistoryDefinition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    delete:
      tags:
        - DeleteAccessReviewHistoryDefinition
      operationId: ScopeAccessReviewHistoryDefinition_DeleteById
      description: Delete an access review history definition
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully
        '204':
          description: Request is well formed but the resource does not exist
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}/instances/{instanceId}/generateDownloadUri/?api-version=2021-12-01-preview:
    post:
      tags:
        - PostAccessReviewHistoryDefinitionInstance
      operationId: ScopeAccessReviewHistoryDefinitionInstance_GenerateDownloadUri
      description: Generates a uri which can be used to retrieve review history data. This URI has a TTL of 1 day and can be retrieved by fetching the accessReviewHistoryDefinition object.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
        - name: instanceId
          in: path
          description: The id of the access review history definition instance to generate a URI for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: AccessReviewHistoryInstance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryInstance'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewHistoryDefinitions/{historyDefinitionId}/instances/?api-version=2021-12-01-preview:
    get:
      tags:
        - ScopeGetAccessReviewHistoryDefinitionInstances
      operationId: ScopeAccessReviewHistoryDefinitionInstances_List
      description: Get access review history definition instances by definition Id
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: historyDefinitionId
          in: path
          description: The id of the access review history definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewHistoryDefinitionInstanceListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewScheduleDefinitions
      operationId: ScopeAccessReviewScheduleDefinitions_List
      description: Get access review schedule definitions
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewScheduleDefinitionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewScheduleDefinition
      operationId: ScopeAccessReviewScheduleDefinitions_GetById
      description: Get single access review definition
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewScheduleDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    delete:
      tags:
        - DeleteAccessReviewScheduleDefinition
      operationId: ScopeAccessReviewScheduleDefinitions_DeleteById
      description: Delete access review schedule definition
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully
        '204':
          description: Request is well formed but the resource does not exist
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewScheduleDefinition
      operationId: ScopeAccessReviewScheduleDefinitions_CreateOrUpdateById
      description: Create or Update access review schedule definition.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      requestBody:
        description: Access review schedule definition properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewScheduleDefinitionProperties'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewScheduleDefinition'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/stop/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewScheduleDefinitionStop
      operationId: ScopeAccessReviewScheduleDefinitions_Stop
      description: Stop access review definition
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstances
      operationId: ScopeAccessReviewInstances_List
      description: Get access review instances
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstanceListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstance
      operationId: ScopeAccessReviewInstances_GetById
      description: Get access review instances
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstance'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewInstance
      operationId: ScopeAccessReviewInstances_Create
      description: Update access review instance.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      requestBody:
        description: Access review instance properties.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewInstanceProperties'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstance'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/stop/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceStop
      operationId: ScopeAccessReviewInstance_Stop
      description: An action to stop an access review instance.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/recordAllDecisions/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceRecordAllDecisions
      operationId: ScopeAccessReviewInstance_RecordAllDecisions
      description: An action to approve/deny all decisions for a review with certain filters.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      requestBody:
        description: Record all decisions payload.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordAllDecisionsProperties'
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/resetDecisions/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceResetDecisions
      operationId: ScopeAccessReviewInstance_ResetDecisions
      description: An action to reset all decisions for an access review instance.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/applyDecisions/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceApplyDecisions
      operationId: ScopeAccessReviewInstance_ApplyDecisions
      description: An action to apply all decisions for an access review instance.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/sendReminders/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceSendReminders
      operationId: ScopeAccessReviewInstance_SendReminders
      description: An action to send reminders for an access review instance.
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/decisions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstanceDecisions
      operationId: ScopeAccessReviewInstanceDecisions_List
      description: Get access review instance decisions
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDecisionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/contactedReviewers/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstanceContactedReviewers
      operationId: ScopeAccessReviewInstanceContactedReviewers_List
      description: Get access review instance contacted reviewers
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewContactedReviewerListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/accessReviewScheduleSettings/default/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewDefaultSettings
      operationId: ScopeAccessReviewDefaultSettings_Get
      description: Get access review default settings for the subscription
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDefaultSettings'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    put:
      tags:
        - PutAccessReviewDefaultSettings
      operationId: ScopeAccessReviewDefaultSettings_Put
      description: Get access review default settings for the subscription
      parameters:
        - $ref: '#/components/parameters/ScopeParameter'
      requestBody:
        description: Access review schedule settings.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewScheduleSettings'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDefaultSettings'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /providers/Microsoft.Authorization/accessReviewScheduleDefinitions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewScheduleDefinitionsAssignedForMyApproval
      operationId: AccessReviewScheduleDefinitionsAssignedForMyApproval_List
      description: Get access review instances assigned for my approval.
      parameters:
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewScheduleDefinitionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstancesAssignedForMyApproval
      operationId: AccessReviewInstancesAssignedForMyApproval_List
      description: Get access review instances assigned for my approval.
      parameters:
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstanceListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewInstance
      operationId: AccessReviewInstancesAssignedForMyApproval_GetById
      description: Get single access review instance assigned for my approval.
      parameters:
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewInstance'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/acceptRecommendations/?api-version=2021-12-01-preview:
    post:
      tags:
        - AccessReviewInstanceAcceptRecommmendations
      operationId: AccessReviewInstance_AcceptRecommendations
      description: An action to accept recommendations for decision in an access review instance.
      parameters:
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Describe the result of a successful operation.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/decisions/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewMyInstanceDecisions
      operationId: AccessReviewInstanceMyDecisions_List
      description: Get my access review instance decisions.
      parameters:
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/AccessReviewsFilterParameter'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDecisionListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/contactedReviewers/?api-version=2021-12-01-preview:
    get:
      tags:
        - TenantLevelGetAccessReviewInstanceContactedReviewers
      operationId: TenantLevelAccessReviewInstanceContactedReviewers_List
      description: Get access review instance contacted reviewers
      parameters:
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewContactedReviewerListResult'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Authorization/accessReviewScheduleDefinitions/{scheduleDefinitionId}/instances/{id}/decisions/{decisionId}/?api-version=2021-12-01-preview:
    get:
      tags:
        - GetAccessReviewMyInstanceDecision
      operationId: AccessReviewInstanceMyDecisions_GetById
      description: Get my single access review instance decision.
      parameters:
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
        - name: decisionId
          in: path
          description: The id of the decision record.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDecision'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
    patch:
      tags:
        - PatchAccessReviewMyInstanceDecision
      operationId: AccessReviewInstanceMyDecisions_Patch
      description: Record a decision.
      parameters:
        - name: scheduleDefinitionId
          in: path
          description: The id of the access review schedule definition.
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: The id of the access review instance.
          required: true
          schema:
            type: string
        - name: decisionId
          in: path
          description: The id of the decision record.
          required: true
          schema:
            type: string
      requestBody:
        description: Access review decision properties to patch.
        required: true
        x-ms-requestBody-name: properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessReviewDecisionProperties'
      responses:
        '200':
          description: Describe the result of a successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReviewDecision'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDefinition'
  /{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/{roleEligibilityScheduleName}/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleEligibilitySchedules
      operationId: RoleEligibilitySchedules_Get
      description: Get the specified role eligibility schedule for a resource scope
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility schedule.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleEligibilityScheduleName
          in: path
          description: The name (guid) of the role eligibility schedule to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role eligibility schedule.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilitySchedule'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleEligibilitySchedules/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleEligibilitySchedules
      operationId: RoleEligibilitySchedules_ListForScope
      description: Gets role eligibility schedules for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the role eligibility schedules.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: $filter
          in: query
          description: The filter to apply on the operation. Use $filter=atScope() to return all role eligibility schedules at or above the scope. Use $filter=principalId eq {id} to return all role eligibility schedules at, above or below the scope for the specified principal. Use $filter=assignedTo('{userId}') to return all role eligibility schedules for the user. Use $filter=asTarget() to return all role eligibility schedules created for the current user.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of role eligibility schedules.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleEligibilityScheduleListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
      x-ms-odata: '#/components/schemas/RoleEligibilityScheduleFilter'
  /{scope}/providers/Microsoft.Authorization/roleManagementPolicies/{roleManagementPolicyName}/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleManagementPolicies
      operationId: RoleManagementPolicies_Get
      description: Get the specified role management policy for a resource scope
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleManagementPolicyName
          in: path
          description: The name (guid) of the role management policy to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role management policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleManagementPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      tags:
        - roleManagementPolicies
      operationId: RoleManagementPolicies_Update
      description: Update a role management policy
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy to upsert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleManagementPolicyName
          in: path
          description: The name (guid) of the role management policy to upsert.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for the role management policy.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleManagementPolicy'
      responses:
        '200':
          description: Ok - Returns the updated policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleManagementPolicy'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - roleManagementPolicies
      operationId: RoleManagementPolicies_Delete
      description: Delete a role management policy
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy to upsert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleManagementPolicyName
          in: path
          description: The name (guid) of the role management policy to upsert.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Successfully deleted the policy.
        '204':
          description: NoContent - policy does not exists.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementPolicies/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleManagementPolicies
      operationId: RoleManagementPolicies_ListForScope
      description: Gets role management policies for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of role management policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleManagementPolicyListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/{roleManagementPolicyAssignmentName}/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleManagementPolicyAssignments
      operationId: RoleManagementPolicyAssignments_Get
      description: Get the specified role management policy assignment for a resource scope
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleManagementPolicyAssignmentName
          in: path
          description: The name of format {guid_guid} the role management policy assignment to get.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns information about the role management policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleManagementPolicyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      tags:
        - roleManagementPolicyAssignments
      operationId: RoleManagementPolicyAssignments_Create
      description: Create a role management policy assignment
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy assignment to upsert.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleManagementPolicyAssignmentName
          in: path
          description: The name of format {guid_guid} the role management policy assignment to upsert.
          required: true
          schema:
            type: string
      requestBody:
        description: Parameters for the role management policy assignment.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleManagementPolicyAssignment'
      responses:
        '201':
          description: Created - Returns the created or updated policy assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleManagementPolicyAssignment'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - roleManagementPolicyAssignments
      operationId: RoleManagementPolicyAssignments_Delete
      description: Delete a role management policy assignment
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy assignment to delete.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
        - name: roleManagementPolicyAssignmentName
          in: path
          description: The name of format {guid_guid} the role management policy assignment to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Successfully deleted the policy assignment.
        '204':
          description: NoContent - policy assignment does not exists.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /{scope}/providers/Microsoft.Authorization/roleManagementPolicyAssignments/?api-version=2020-10-01-preview:
    get:
      tags:
        - roleManagementPolicyAssignments
      operationId: RoleManagementPolicyAssignments_ListForScope
      description: Gets role management assignment policies for a resource scope.
      parameters:
        - name: scope
          in: path
          description: The scope of the role management policy.
          required: true
          x-ms-skip-url-encoding: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Returns an array of role management policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleManagementPolicyAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: nextLink
  /providers/Microsoft.Authorization/elevateAccess/?api-version=2015-07-01:
    post:
      tags:
        - ElevateAccess
      operationId: GlobalAdministrator_ElevateAccess
      description: Elevates access for a Global Administrator.
      parameters: []
      responses:
        '200':
          description: OK - Returns an HttpResponseMessage with HttpStatusCode 200.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-azure-rbac-permissions-required:
        actions: Microsoft.Authorization/elevateAccess/action
        dataActions: ''
        rolesWithThesePermissions:
          - Owner
        moreInfoLink: '[Elevate access to manage all Azure subscriptions and management groups](https://docs.microsoft.com/azure/role-based-access-control/elevate-access-global-admin)'
  /providers/Microsoft.Authorization/providerOperations/{resourceProviderNamespace}/?api-version=2022-04-01:
    get:
      tags:
        - ProviderOperationsMetadata
      operationId: ProviderOperationsMetadata_Get
      description: Gets provider operations metadata for the specified resource provider.
      parameters:
        - $ref: '#/components/parameters/ResourceProviderNamespaceParameter'
        - name: $expand
          in: query
          description: Specifies whether to expand the values.
          required: false
          schema:
            default: resourceTypes
            type: string
      responses:
        '200':
          description: OK - Returns the operations metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationsMetadata'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /providers/Microsoft.Authorization/providerOperations/?api-version=2022-04-01:
    get:
      tags:
        - ProviderOperationsMetadata
      operationId: ProviderOperationsMetadata_List
      description: Gets provider operations metadata for all resource providers.
      parameters:
        - name: $expand
          in: query
          description: Specifies whether to expand the values.
          required: false
          schema:
            default: resourceTypes
            type: string
      responses:
        '200':
          description: OK - Returns an array of the operations metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationsMetadataListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
