openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Service Fabric Managed Clusters
  description: Service Fabric is a distributed systems platform that makes it easy to package, deploy, and manage scalable and reliable microservices.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-11-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    api-version:
      name: api-version
      in: query
      description: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be "2024-06-01-preview" for this specification.
      required: false
      x-ms-parameter-location: client
      schema:
        type: string
    applicationName:
      name: applicationName
      in: path
      description: The name of the application resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    applicationTypeName:
      name: applicationTypeName
      in: path
      description: The name of the application type name resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    clusterNameParameter:
      name: clusterName
      in: path
      description: The name of the cluster resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    serviceName:
      name: serviceName
      in: path
      description: The name of the service resource in the format of {applicationName}~{serviceName}.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionId:
      name: subscriptionId
      in: path
      description: The customer subscription identifier.
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
    version:
      name: version
      in: path
      description: The application type version.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    nodeTypeNameParameter:
      name: nodeTypeName
      in: path
      description: The name of the node type.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    clusterVersion:
      name: clusterVersion
      in: path
      description: The cluster code version.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    environment:
      name: environment
      in: path
      description: The operating system of the cluster. The default means all.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - Windows
        x-ms-enum:
          name: ManagedClusterVersionEnvironment
          modelAsString: true
          values:
            - value: Windows
              description: Windows.
        type: string
    locationForClusterCodeVersions:
      name: location
      in: path
      description: The location for the cluster code versions. This is different from cluster location.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    operationId:
      name: operationId
      in: path
      description: operation identifier.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    vmSize:
      name: vmSize
      in: path
      description: VM Size name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    RuntimeFailureAction:
      type: string
      description: |
        The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations.
        Rollback specifies that the upgrade will start rolling back automatically.
        Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.
      enum:
        - Rollback
        - Manual
      x-ms-enum:
        name: FailureAction
        modelAsString: true
        values:
          - value: Rollback
            description: The upgrade will start rolling back automatically. The value is 0
          - value: Manual
            description: The upgrade will switch to UnmonitoredManual upgrade mode. The value is 1
    RuntimeResumeApplicationUpgradeParameters:
      type: object
      properties:
        upgradeDomainName:
          description: The upgrade domain name. Expected to be the next upgrade domain if the application is upgrading.
          type: string
      description: Parameters for Resume Upgrade action. The upgrade domain name must be specified.
    RuntimeUpgradeMode:
      type: string
      description: The mode used to monitor health during a rolling upgrade. The values are UnmonitoredAuto, UnmonitoredManual, Monitored, and UnmonitoredDeferred.
      enum:
        - UnmonitoredAuto
        - UnmonitoredManual
        - Monitored
      default: Monitored
      x-ms-enum:
        name: UpgradeMode
        modelAsString: true
        values:
          - value: UnmonitoredAuto
            description: The upgrade will proceed automatically without performing any health monitoring. The value is 0
          - value: UnmonitoredManual
            description: The upgrade will stop after completing each upgrade domain, giving the opportunity to manually monitor health before proceeding. The value is 1
          - value: Monitored
            description: The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 2
    AddRemoveIncrementalNamedPartitionScalingMechanism:
      description: Represents a scaling mechanism for adding or removing named partitions of a stateless service. Partition names are in the format '0','1'...'N-1'.
      x-ms-discriminator-value: AddRemoveIncrementalNamedPartition
      required:
        - minPartitionCount
        - maxPartitionCount
        - scaleIncrement
      properties:
        kind:
          $ref: '#/components/schemas/ServiceScalingMechanismKind'
          description: Specifies the mechanism associated with this scaling policy.
        minPartitionCount:
          type: integer
          format: int32
          description: Minimum number of named partitions of the service.
        maxPartitionCount:
          type: integer
          format: int32
          description: Maximum number of named partitions of the service.
        scaleIncrement:
          type: integer
          format: int32
          description: The number of instances to add or remove during a scaling operation.
      type: object
    ApplicationHealthPolicy:
      type: object
      description: |
        Defines a health policy used to evaluate the health of an application or one of its children entities.
      required:
        - considerWarningAsError
        - maxPercentUnhealthyDeployedApplications
      properties:
        considerWarningAsError:
          type: boolean
          description: Indicates whether warnings are treated with the same severity as errors.
        maxPercentUnhealthyDeployedApplications:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.
            The percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.
            This is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.
        defaultServiceTypeHealthPolicy:
          $ref: '#/components/schemas/ServiceTypeHealthPolicy'
          description: The health policy used by default to evaluate the health of a service type.
        serviceTypeHealthPolicyMap:
          $ref: '#/components/schemas/ServiceTypeHealthPolicyMap'
          description: The map with service type health policy per service type name. The map is empty by default.
    ApplicationParameterList:
      description: List of application parameters with overridden values from their default values specified in the application manifest.
      additionalProperties:
        type: string
      properties: {}
      type: object
    ApplicationResource:
      description: The application resource.
      properties:
        identity:
          $ref: '#/components/schemas/ManagedIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ApplicationResourceList:
      type: object
      description: The list of application resources.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationResource'
        nextLink:
          type: string
          description: URL to get the next set of application list results if there are any.
          readOnly: true
    ApplicationResourceProperties:
      type: object
      description: The application resource properties.
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        version:
          $ref: '#/components/schemas/ApplicationTypeVersion'
        parameters:
          $ref: '#/components/schemas/ApplicationParameterList'
        upgradePolicy:
          $ref: '#/components/schemas/ApplicationUpgradePolicy'
        managedIdentities:
          description: List of user assigned identities for the application, each mapped to a friendly name.
          type: array
          items:
            $ref: '#/components/schemas/ApplicationUserAssignedIdentity'
          x-ms-identifiers: []
    ApplicationTypeResource:
      description: The application type name resource
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationTypeResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ApplicationTypeResourceList:
      type: object
      description: The list of application type names.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTypeResource'
        nextLink:
          type: string
          description: URL to get the next set of application type list results if there are any.
          readOnly: true
    ApplicationTypeResourceProperties:
      type: object
      description: The application type name properties
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response.
    ApplicationTypeUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          description: Application type update parameters
          additionalProperties:
            type: string
      description: Application type update request
    ApplicationTypeVersion:
      type: string
      description: |
        The version of the application type as defined in the application manifest.
        This name must be the full Arm Resource ID for the referenced application type version.
    ApplicationTypeVersionResource:
      description: An application type version resource for the specified application type name resource.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ApplicationTypeVersionResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ApplicationTypeVersionResourceList:
      type: object
      description: The list of application type version resources for the specified application type name resource.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTypeVersionResource'
        nextLink:
          type: string
          description: URL to get the next set of application type version list results if there are any.
          readOnly: true
    ApplicationTypeVersionResourceProperties:
      type: object
      description: The properties of the application type version resource.
      required:
        - appPackageUrl
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        appPackageUrl:
          type: string
          description: The URL to the application package
    ApplicationTypeVersionUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          description: Application type version update parameters
          additionalProperties:
            type: string
      description: Application type version update request
    ApplicationUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          description: Application update parameters
          additionalProperties:
            type: string
      description: Application update request
    ApplicationUpgradePolicy:
      type: object
      description: Describes the policy for a monitored application upgrade.
      properties:
        applicationHealthPolicy:
          $ref: '#/components/schemas/ApplicationHealthPolicy'
        forceRestart:
          $ref: '#/components/schemas/ForceRestart'
        rollingUpgradeMonitoringPolicy:
          $ref: '#/components/schemas/RollingUpgradeMonitoringPolicy'
        instanceCloseDelayDuration:
          type: integer
          format: int64
          description: Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description.
        upgradeMode:
          $ref: '#/components/schemas/RollingUpgradeMode'
        upgradeReplicaSetCheckTimeout:
          type: integer
          format: int64
          description: The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer).
        recreateApplication:
          type: boolean
          description: Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed.
    ApplicationUserAssignedIdentity:
      type: object
      required:
        - name
        - principalId
      properties:
        name:
          type: string
          description: The friendly name of user assigned identity.
        principalId:
          type: string
          description: The principal id of user assigned identity.
    AveragePartitionLoadScalingTrigger:
      description: Represents a scaling trigger related to an average load of a metric/resource of a partition.
      x-ms-discriminator-value: AveragePartitionLoadTrigger
      required:
        - metricName
        - lowerLoadThreshold
        - upperLoadThreshold
        - scaleInterval
      properties:
        kind:
          $ref: '#/components/schemas/ServiceScalingTriggerKind'
          description: Specifies the trigger associated with this scaling policy.
        metricName:
          type: string
          description: The name of the metric for which usage should be tracked.
        lowerLoadThreshold:
          type: number
          format: double
          description: The lower limit of the load below which a scale in operation should be performed.
        upperLoadThreshold:
          type: number
          format: double
          description: The upper limit of the load beyond which a scale out operation should be performed.
        scaleInterval:
          type: string
          description: The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format "hh:mm:ss".
      type: object
    AverageServiceLoadScalingTrigger:
      description: Represents a scaling policy related to an average load of a metric/resource of a service.
      x-ms-discriminator-value: AverageServiceLoadTrigger
      required:
        - metricName
        - lowerLoadThreshold
        - upperLoadThreshold
        - scaleInterval
        - useOnlyPrimaryLoad
      properties:
        kind:
          $ref: '#/components/schemas/ServiceScalingTriggerKind'
          description: Specifies the trigger associated with this scaling policy.
        metricName:
          type: string
          description: The name of the metric for which usage should be tracked.
        lowerLoadThreshold:
          type: number
          format: double
          description: The lower limit of the load below which a scale in operation should be performed.
        upperLoadThreshold:
          type: number
          format: double
          description: The upper limit of the load beyond which a scale out operation should be performed.
        scaleInterval:
          type: string
          description: The period in seconds on which a decision is made whether to scale or not. This property should come in ISO 8601 format "hh:mm:ss".
        useOnlyPrimaryLoad:
          type: boolean
          description: Flag determines whether only the load of primary replica should be considered for scaling. If set to true, then trigger will only consider the load of primary replicas of stateful service. If set to false, trigger will consider load of all replicas. This parameter cannot be set to true for stateless service.
      type: object
    CorrelationSchemeList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceCorrelation'
      x-ms-identifiers:
        - serviceName
      description: A list that describes the correlation of the service with other services.
    ForceRestart:
      type: boolean
      description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
      default: false
    HealthCheckRetryTimeout:
      type: string
      description: The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format "hh:mm:ss.fff".
    HealthCheckStableDuration:
      type: string
      x-ms-format: duration-constant
      description: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format "hh:mm:ss.fff".
    HealthCheckWaitDuration:
      type: string
      x-ms-format: duration-constant
      description: The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format "hh:mm:ss.fff".
    ManagedIdentity:
      type: object
      description: Describes the managed identities for an Azure resource.
      properties:
        principalId:
          type: string
          readOnly: true
          description: The principal id of the managed identity. This property will only be provided for a system assigned identity.
        tenantId:
          type: string
          readOnly: true
          description: The tenant id of the managed identity. This property will only be provided for a system assigned identity.
        type:
          $ref: '#/components/schemas/ManagedIdentityType'
        userAssignedIdentities:
          $ref: '#/components/schemas/UserAssignedIdentityMap'
    ManagedIdentityType:
      type: string
      description: The type of managed identity for the resource.
      enum:
        - None
        - SystemAssigned
        - UserAssigned
        - SystemAssigned, UserAssigned
      x-ms-enum:
        name: ManagedIdentityType
        modelAsString: false
        values:
          - value: None
            description: Indicates that no identity is associated with the resource.
          - value: SystemAssigned
            description: Indicates that system assigned identity is associated with the resource.
          - value: UserAssigned
            description: Indicates that user assigned identity is associated with the resource.
          - value: SystemAssigned, UserAssigned
            description: Indicates that both system assigned and user assigned identity are associated with the resource.
    MoveCost:
      type: string
      description: Specifies the move cost for the service.
      enum:
        - Zero
        - Low
        - Medium
        - High
      x-ms-enum:
        name: MoveCost
        modelAsString: true
        values:
          - value: Zero
            description: Zero move cost. This value is zero.
          - value: Low
            description: Specifies the move cost of the service as Low. The value is 1.
          - value: Medium
            description: Specifies the move cost of the service as Medium. The value is 2.
          - value: High
            description: Specifies the move cost of the service as High. The value is 3.
    NamedPartitionScheme:
      description: Describes the named partition scheme of the service.
      x-ms-discriminator-value: Named
      required:
        - names
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
        names:
          type: array
          items:
            type: string
          description: Array for the names of the partitions.
      type: object
    Partition:
      type: object
      discriminator:
        propertyName: partitionScheme
      description: Describes how the service is partitioned.
      required:
        - partitionScheme
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
    PartitionInstanceCountScaleMechanism:
      description: Represents a scaling mechanism for adding or removing instances of stateless service partition.
      x-ms-discriminator-value: ScalePartitionInstanceCount
      required:
        - minInstanceCount
        - maxInstanceCount
        - scaleIncrement
      properties:
        kind:
          $ref: '#/components/schemas/ServiceScalingMechanismKind'
          description: Specifies the mechanism associated with this scaling policy.
        minInstanceCount:
          type: integer
          format: int32
          description: Minimum number of instances of the partition.
        maxInstanceCount:
          type: integer
          format: int32
          description: Maximum number of instances of the partition.
        scaleIncrement:
          type: integer
          format: int32
          description: The number of instances to add or remove during a scaling operation.
      type: object
    PartitionScheme:
      type: string
      description: Enumerates the ways that a service can be partitioned.
      enum:
        - Singleton
        - UniformInt64Range
        - Named
      x-ms-enum:
        name: PartitionScheme
        modelAsString: true
        values:
          - value: Singleton
            description: Indicates that the partition is based on string names, and is a SingletonPartitionScheme object, The value is 0.
          - value: UniformInt64Range
            description: Indicates that the partition is based on Int64 key ranges, and is a UniformInt64RangePartitionScheme object. The value is 1.
          - value: Named
            description: Indicates that the partition is based on string names, and is a NamedPartitionScheme object. The value is 2.
    ProxyResource:
      type: object
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        systemData:
          $ref: '#/components/schemas/SystemData'
      description: The resource model definition for proxy-only resource.
      x-ms-azure-resource: true
    RollingUpgradeMode:
      type: string
      description: The mode used to monitor health during a rolling upgrade. The values are Monitored, and UnmonitoredAuto.
      enum:
        - Monitored
        - UnmonitoredAuto
      x-ms-enum:
        name: RollingUpgradeMode
        modelAsString: true
        values:
          - value: Monitored
            description: The upgrade will stop after completing each upgrade domain and automatically monitor health before proceeding. The value is 0.
          - value: UnmonitoredAuto
            description: The upgrade will proceed automatically without performing any health monitoring. The value is 1.
    RollingUpgradeMonitoringPolicy:
      type: object
      description: The policy used for monitoring the application upgrade
      required:
        - failureAction
        - healthCheckWaitDuration
        - healthCheckStableDuration
        - healthCheckRetryTimeout
        - upgradeTimeout
        - upgradeDomainTimeout
      properties:
        failureAction:
          type: string
          description: The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode.
          enum:
            - Rollback
            - Manual
          x-ms-enum:
            name: FailureAction
            modelAsString: true
            values:
              - value: Rollback
                description: Indicates that a rollback of the upgrade will be performed by Service Fabric if the upgrade fails.
              - value: Manual
                description: Indicates that a manual repair will need to be performed by the administrator if the upgrade fails. Service Fabric will not proceed to the next upgrade domain automatically.
        healthCheckWaitDuration:
          $ref: '#/components/schemas/HealthCheckWaitDuration'
        healthCheckStableDuration:
          $ref: '#/components/schemas/HealthCheckStableDuration'
        healthCheckRetryTimeout:
          $ref: '#/components/schemas/HealthCheckRetryTimeout'
        upgradeTimeout:
          $ref: '#/components/schemas/UpgradeTimeout'
        upgradeDomainTimeout:
          $ref: '#/components/schemas/UpgradeDomainTimeout'
    ScalingMechanism:
      type: object
      discriminator:
        propertyName: kind
      description: Describes the mechanism for performing a scaling operation.
      required:
        - kind
      properties:
        kind:
          $ref: '#/components/schemas/ServiceScalingMechanismKind'
          description: Specifies the mechanism associated with this scaling policy.
    ScalingPolicy:
      type: object
      description: Specifies a metric to load balance a service during runtime.
      required:
        - scalingMechanism
        - scalingTrigger
      properties:
        scalingMechanism:
          $ref: '#/components/schemas/ScalingMechanism'
          description: Specifies the mechanism associated with this scaling policy
        scalingTrigger:
          $ref: '#/components/schemas/ScalingTrigger'
          description: Specifies the trigger associated with this scaling policy.
    ScalingPolicyList:
      type: array
      items:
        $ref: '#/components/schemas/ScalingPolicy'
      x-ms-identifiers: []
      description: Scaling policies for this service.
    ScalingTrigger:
      type: object
      discriminator:
        propertyName: kind
      description: Describes the trigger for performing a scaling operation.
      required:
        - kind
      properties:
        kind:
          $ref: '#/components/schemas/ServiceScalingTriggerKind'
          description: Specifies the trigger associated with this scaling policy.
    ServiceCorrelation:
      type: object
      description: Creates a particular correlation between services.
      required:
        - scheme
        - serviceName
      properties:
        scheme:
          $ref: '#/components/schemas/ServiceCorrelationScheme'
          description: The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName.
        serviceName:
          $ref: '#/components/schemas/ServiceName'
          description: The Arm Resource ID of the service that the correlation relationship is established with.
    ServiceCorrelationScheme:
      type: string
      description: The service correlation scheme.
      enum:
        - AlignedAffinity
        - NonAlignedAffinity
      x-ms-enum:
        name: ServiceCorrelationScheme
        modelAsString: true
        values:
          - value: AlignedAffinity
            description: Aligned affinity ensures that the primaries of the partitions of the affinitized services are collocated on the same nodes. This is the default and is the same as selecting the Affinity scheme. The value is 0.
          - value: NonAlignedAffinity
            description: Non-Aligned affinity guarantees that all replicas of each service will be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee that replicas of particular role will be collocated. The value is 1.
    ServiceKind:
      type: string
      description: The kind of service (Stateless or Stateful).
      enum:
        - Stateless
        - Stateful
      x-ms-enum:
        name: ServiceKind
        modelAsString: true
        values:
          - value: Stateless
            description: Does not use Service Fabric to make its state highly available or reliable. The value is 0.
          - value: Stateful
            description: Uses Service Fabric to make its state or part of its state highly available and reliable. The value is 1.
    ServiceLoadMetric:
      type: object
      description: Specifies a metric to load balance a service during runtime.
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
        weight:
          $ref: '#/components/schemas/ServiceLoadMetricWeight'
          description: The service load metric relative weight, compared to other metrics configured for this service, as a number.
        primaryDefaultLoad:
          type: integer
          format: int32
          description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
        secondaryDefaultLoad:
          type: integer
          format: int32
          description: Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
        defaultLoad:
          type: integer
          format: int32
          description: Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
    ServiceLoadMetricsList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceLoadMetric'
      x-ms-identifiers: []
      description: The service load metrics is given as an array of ServiceLoadMetric objects.
    ServiceLoadMetricWeight:
      type: string
      description: Determines the metric weight relative to the other metrics that are configured for this service. During runtime, if two metrics end up in conflict, the Cluster Resource Manager prefers the metric with the higher weight.
      enum:
        - Zero
        - Low
        - Medium
        - High
      x-ms-enum:
        name: ServiceLoadMetricWeight
        modelAsString: true
        values:
          - value: Zero
            description: Disables resource balancing for this metric. This value is zero.
          - value: Low
            description: Specifies the metric weight of the service load as Low. The value is 1.
          - value: Medium
            description: Specifies the metric weight of the service load as Medium. The value is 2.
          - value: High
            description: Specifies the metric weight of the service load as High. The value is 3.
    ServiceName:
      type: string
      description: The full ARM Resource ID describing the service resource
      x-sf-clientlib:
        typeName: ServiceName
    ServicePlacementInvalidDomainPolicy:
      description: Describes the policy to be used for placement of a Service Fabric service where a particular fault or upgrade domain should not be used for placement of the instances or replicas of that service.
      x-ms-discriminator-value: InvalidDomain
      required:
        - domainName
      properties:
        type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
        domainName:
          type: string
          description: The name of the domain that should not be used for placement.
      type: object
    ServicePlacementNonPartiallyPlaceServicePolicy:
      description: The name of the domain that should used for placement as per this policy.
      x-ms-discriminator-value: NonPartiallyPlaceService
      properties:
        type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
      type: object
    ServicePlacementPoliciesList:
      type: array
      items:
        $ref: '#/components/schemas/ServicePlacementPolicy'
      x-ms-identifiers: []
      description: A list that describes the correlation of the service with other services.
    ServicePlacementPolicy:
      type: object
      discriminator:
        propertyName: type
      description: Describes the policy to be used for placement of a Service Fabric service.
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
    ServicePlacementPolicyType:
      type: string
      description: The type of placement policy for a service fabric service. Following are the possible values.
      enum:
        - InvalidDomain
        - RequiredDomain
        - PreferredPrimaryDomain
        - RequiredDomainDistribution
        - NonPartiallyPlaceService
      x-ms-enum:
        name: ServicePlacementPolicyType
        modelAsString: true
        values:
          - value: InvalidDomain
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementInvalidDomainPolicyDescription, which indicates that a particular fault or upgrade domain cannot be used for placement of this service. The value is 0.
          - value: RequiredDomain
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription indicating that the replicas of the service must be placed in a specific domain. The value is 1.
          - value: PreferredPrimaryDomain
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementPreferPrimaryDomainPolicyDescription, which indicates that if possible the Primary replica for the partitions of the service should be located in a particular domain as an optimization. The value is 2.
          - value: RequiredDomainDistribution
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementRequireDomainDistributionPolicyDescription, indicating that the system will disallow placement of any two replicas from the same partition in the same domain at any time. The value is 3.
          - value: NonPartiallyPlaceService
            description: Indicates that the ServicePlacementPolicyDescription is of type ServicePlacementNonPartiallyPlaceServicePolicyDescription, which indicates that if possible all replicas of a particular partition of the service should be placed atomically. The value is 4.
    ServicePlacementPreferPrimaryDomainPolicy:
      description: |
        Describes the policy to be used for placement of a Service Fabric service where the service's 
        Primary replicas should optimally be placed in a particular domain.

        This placement policy is usually used with fault domains in scenarios where the Service Fabric
        cluster is geographically distributed in order to indicate that a service's primary replica should
        be located in a particular fault domain, which in geo-distributed scenarios usually aligns with regional
        or datacenter boundaries. Note that since this is an optimization it is possible that the Primary replica
        may not end up located in this domain due to failures, capacity limits, or other constraints.
      x-ms-discriminator-value: PreferredPrimaryDomain
      required:
        - domainName
      properties:
        type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
        domainName:
          type: string
          description: The name of the domain that should used for placement as per this policy.
      type: object
    ServicePlacementRequiredDomainPolicy:
      description: Describes the policy to be used for placement of a Service Fabric service where the instances or replicas of that service must be placed in a particular domain.
      x-ms-discriminator-value: RequiredDomain
      required:
        - domainName
      properties:
        type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
        domainName:
          type: string
          description: The name of the domain that should used for placement as per this policy.
      type: object
    ServicePlacementRequireDomainDistributionPolicy:
      description: |
        Describes the policy to be used for placement of a Service Fabric service where two replicas
        from the same partition should never be placed in the same fault or upgrade domain.

        While this is not common it can expose the service to an increased risk of concurrent failures
        due to unplanned outages or other cases of subsequent/concurrent failures. As an example, consider
        a case where replicas are deployed across different data center, with one replica per location.
        In the event that one of the datacenters goes offline, normally the replica that was placed in that
        datacenter will be packed into one of the remaining datacenters. If this is not desirable then this
        policy should be set.
      x-ms-discriminator-value: RequiredDomainDistribution
      required:
        - domainName
      properties:
        type:
          $ref: '#/components/schemas/ServicePlacementPolicyType'
        domainName:
          type: string
          description: The name of the domain that should used for placement as per this policy.
      type: object
    ServiceResource:
      description: The service resource.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceResourceProperties'
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Resource location depends on the parent resource.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        systemData:
          $ref: '#/components/schemas/SystemData'
      type: object
    ServiceResourceList:
      type: object
      description: The list of service resources.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceResource'
        nextLink:
          type: string
          description: URL to get the next set of service list results if there are any.
          readOnly: true
    ServiceResourceProperties:
      description: The service resource properties.
      required:
        - serviceKind
        - serviceTypeName
        - partitionDescription
      discriminator:
        propertyName: serviceKind
      properties:
        placementConstraints:
          type: string
          description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        correlationScheme:
          $ref: '#/components/schemas/CorrelationSchemeList'
        serviceLoadMetrics:
          $ref: '#/components/schemas/ServiceLoadMetricsList'
        servicePlacementPolicies:
          $ref: '#/components/schemas/ServicePlacementPoliciesList'
        defaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
        scalingPolicies:
          $ref: '#/components/schemas/ScalingPolicyList'
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        serviceTypeName:
          type: string
          description: The name of the service type
        partitionDescription:
          $ref: '#/components/schemas/Partition'
        servicePackageActivationMode:
          type: string
          description: The activation Mode of the service package
          enum:
            - SharedProcess
            - ExclusiveProcess
          x-ms-enum:
            name: ServicePackageActivationMode
            modelAsString: true
            values:
              - value: SharedProcess
                description: Indicates the application package activation mode will use shared process.
              - value: ExclusiveProcess
                description: Indicates the application package activation mode will use exclusive process.
        serviceDnsName:
          type: string
          description: |
            Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).
            When updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.
            When removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.
      type: object
    ServiceResourcePropertiesBase:
      type: object
      description: The common service resource properties.
      properties:
        placementConstraints:
          type: string
          description: 'The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: "NodeColor == blue)".'
        correlationScheme:
          $ref: '#/components/schemas/CorrelationSchemeList'
        serviceLoadMetrics:
          $ref: '#/components/schemas/ServiceLoadMetricsList'
        servicePlacementPolicies:
          $ref: '#/components/schemas/ServicePlacementPoliciesList'
        defaultMoveCost:
          $ref: '#/components/schemas/MoveCost'
        scalingPolicies:
          $ref: '#/components/schemas/ScalingPolicyList'
    ServiceScalingMechanismKind:
      type: string
      description: Enumerates the ways that a service can be partitioned.
      enum:
        - ScalePartitionInstanceCount
        - AddRemoveIncrementalNamedPartition
      x-ms-enum:
        name: ServiceScalingMechanismKind
        modelAsString: true
        values:
          - value: ScalePartitionInstanceCount
            description: Represents a scaling mechanism for adding or removing instances of stateless service partition. The value is 0.
          - value: AddRemoveIncrementalNamedPartition
            description: Represents a scaling mechanism for adding or removing named partitions of a stateless service. The value is 1.
    ServiceScalingTriggerKind:
      type: string
      description: Enumerates the ways that a service can be partitioned.
      enum:
        - AveragePartitionLoadTrigger
        - AverageServiceLoadTrigger
      x-ms-enum:
        name: ServiceScalingTriggerKind
        modelAsString: true
        values:
          - value: AveragePartitionLoadTrigger
            description: Represents a scaling trigger related to an average load of a metric/resource of a partition. The value is 0.
          - value: AverageServiceLoadTrigger
            description: Represents a scaling policy related to an average load of a metric/resource of a service. The value is 1.
    ServiceTypeHealthPolicy:
      type: object
      description: |
        Represents the health policy used to evaluate the health of services belonging to a service type.
      required:
        - maxPercentUnhealthyServices
        - maxPercentUnhealthyPartitionsPerService
        - maxPercentUnhealthyReplicasPerPartition
      properties:
        maxPercentUnhealthyServices:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy services.

            The percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.
            If the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.
            This is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.
            The computation rounds up to tolerate one failure on small numbers of services.
          minimum: 0
          maximum: 100
        maxPercentUnhealthyPartitionsPerService:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy partitions per service.

            The percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.
            If the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.
            The computation rounds up to tolerate one failure on small numbers of partitions.
          minimum: 0
          maximum: 100
        maxPercentUnhealthyReplicasPerPartition:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy replicas per partition.

            The percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.
            If the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.
            The computation rounds up to tolerate one failure on small numbers of replicas.
          minimum: 0
          maximum: 100
    ServiceTypeHealthPolicyMap:
      description: |
        Defines a ServiceTypeHealthPolicy per service type name.

        The entries in the map replace the default service type health policy for each specified service type.
        For example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.
        With policy per service type, there's more granular control of the health of the service.

        If no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.
      additionalProperties:
        $ref: '#/components/schemas/ServiceTypeHealthPolicy'
      properties: {}
      type: object
    ServiceUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          description: Service update parameters
          additionalProperties:
            type: string
      description: Service update request
    SingletonPartitionScheme:
      description: Describes the partition scheme of a singleton-partitioned, or non-partitioned service.
      x-ms-discriminator-value: Singleton
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
      type: object
    StatefulServiceProperties:
      description: The properties of a stateful service resource.
      x-ms-discriminator-value: Stateful
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        serviceTypeName:
          type: string
          description: The name of the service type
        partitionDescription:
          $ref: '#/components/schemas/Partition'
        servicePackageActivationMode:
          type: string
          description: The activation Mode of the service package
          enum:
            - SharedProcess
            - ExclusiveProcess
          x-ms-enum:
            name: ServicePackageActivationMode
            modelAsString: true
            values:
              - value: SharedProcess
                description: Indicates the application package activation mode will use shared process.
              - value: ExclusiveProcess
                description: Indicates the application package activation mode will use exclusive process.
        serviceDnsName:
          type: string
          description: |
            Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).
            When updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.
            When removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.
        hasPersistedState:
          type: boolean
          description: A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false.
        targetReplicaSetSize:
          type: integer
          format: int32
          minimum: 1
          description: The target replica set size as a number.
        minReplicaSetSize:
          type: integer
          format: int32
          minimum: 1
          description: The minimum replica set size as a number.
        replicaRestartWaitDuration:
          type: string
          description: The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format "hh:mm:ss".
        quorumLossWaitDuration:
          type: string
          description: The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format "hh:mm:ss".
        standByReplicaKeepDuration:
          type: string
          description: The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format "hh:mm:ss".
        servicePlacementTimeLimit:
          type: string
          description: The duration for which replicas can stay InBuild before reporting that build is stuck, represented in ISO 8601 format "hh:mm:ss".
      type: object
    StatelessServiceProperties:
      description: The properties of a stateless service resource.
      x-ms-discriminator-value: Stateless
      required:
        - instanceCount
      properties:
        provisioningState:
          readOnly: true
          type: string
          description: The current deployment or provisioning state, which only appears in the response
        serviceKind:
          $ref: '#/components/schemas/ServiceKind'
        serviceTypeName:
          type: string
          description: The name of the service type
        partitionDescription:
          $ref: '#/components/schemas/Partition'
        servicePackageActivationMode:
          type: string
          description: The activation Mode of the service package
          enum:
            - SharedProcess
            - ExclusiveProcess
          x-ms-enum:
            name: ServicePackageActivationMode
            modelAsString: true
            values:
              - value: SharedProcess
                description: Indicates the application package activation mode will use shared process.
              - value: ExclusiveProcess
                description: Indicates the application package activation mode will use exclusive process.
        serviceDnsName:
          type: string
          description: |
            Dns name used for the service. If this is specified, then the DNS name can be used to return the IP addresses of service endpoints for application layer protocols (e.g., HTTP).
            When updating serviceDnsName, old name may be temporarily resolvable. However, rely on new name.
            When removing serviceDnsName, removed name may temporarily be resolvable. Do not rely on the name being unresolvable.
        instanceCount:
          type: integer
          format: int32
          minimum: -1
          description: The instance count.
        minInstanceCount:
          type: integer
          format: int32
          description: MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service.
        minInstancePercentage:
          type: integer
          format: int32
          description: MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service.
      type: object
    UniformInt64RangePartitionScheme:
      description: Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions.
      x-ms-discriminator-value: UniformInt64Range
      required:
        - count
        - lowKey
        - highKey
      properties:
        partitionScheme:
          $ref: '#/components/schemas/PartitionScheme'
          description: Specifies how the service is partitioned.
        count:
          type: integer
          format: int32
          description: The number of partitions.
        lowKey:
          type: integer
          format: int64
          description: |
            The lower bound of the partition key range that
            should be split between the partition ‘Count’
        highKey:
          type: integer
          format: int64
          description: |
            The upper bound of the partition key range that
            should be split between the partition ‘Count’
      type: object
    UpgradeDomainTimeout:
      type: string
      description: The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format "hh:mm:ss.fff".
    UpgradeTimeout:
      type: string
      description: The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format "hh:mm:ss.fff".
    UserAssignedIdentity:
      type: object
      properties:
        principalId:
          type: string
          readOnly: true
          description: The principal id of user assigned identity.
        clientId:
          type: string
          readOnly: true
          description: The client id of user assigned identity.
    UserAssignedIdentityMap:
      description: |
        The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
      additionalProperties:
        $ref: '#/components/schemas/UserAssignedIdentity'
      properties: {}
      type: object
    AvailableOperationDisplay:
      type: object
      properties:
        provider:
          type: string
          description: The name of the provider.
        resource:
          type: string
          description: The resource on which the operation is performed
        operation:
          type: string
          description: The operation that can be performed.
        description:
          type: string
          description: Operation description
      description: Operation supported by the Service Fabric resource provider
    ErrorModel:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorModelError'
          description: The error details.
      description: The structure of the error.
    ErrorModelError:
      type: object
      properties:
        code:
          type: string
          description: The error code.
        message:
          type: string
          description: The error message.
      description: The error details.
    OperationResult:
      type: object
      properties:
        name:
          type: string
          description: The name of the operation.
        isDataAction:
          type: boolean
          description: Indicates whether the operation is a data action
        display:
          $ref: '#/components/schemas/AvailableOperationDisplay'
          description: The object that represents the operation.
        origin:
          type: string
          description: Origin result
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: Available operation list result
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC).
    AdditionalNetworkInterfaceConfiguration:
      type: object
      required:
        - name
        - ipConfigurations
      properties:
        name:
          type: string
          description: Name of the network interface.
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        dscpConfiguration:
          $ref: '#/components/schemas/SubResource'
          description: Specifies the DSCP configuration to apply to the network interface.
        ipConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/IpConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the IP configurations of the network interface.
      description: Specifies the settings for a network interface to attach to the node type.
    DiskType:
      type: string
      description: |
        Managed data disk type. IOPS and throughput are given by the disk size, to see more information go to https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types.
      enum:
        - Standard_LRS
        - StandardSSD_LRS
        - Premium_LRS
      default: StandardSSD_LRS
      x-ms-enum:
        name: DiskType
        modelAsString: true
        values:
          - value: Standard_LRS
            description: Standard HDD locally redundant storage. Best for backup, non-critical, and infrequent access.
          - value: StandardSSD_LRS
            description: Standard SSD locally redundant storage. Best for web servers, lightly used enterprise applications and dev/test.
          - value: Premium_LRS
            description: Premium SSD locally redundant storage. Best for production and performance sensitive workloads.
    EvictionPolicyType:
      type: string
      description: Specifies the eviction policy for virtual machines in a SPOT node type.
      enum:
        - Delete
        - Deallocate
      x-ms-enum:
        name: EvictionPolicyType
        modelAsString: true
        values:
          - value: Delete
            description: Eviction policy will be Delete for SPOT vms.
          - value: Deallocate
            description: Eviction policy will be Deallocate for SPOT vms.
    FrontendConfiguration:
      type: object
      properties:
        ipAddressType:
          $ref: '#/components/schemas/IPAddressType'
          description: The IP address type of this frontend configuration. If omitted the default value is IPv4.
        loadBalancerBackendAddressPoolId:
          type: string
          format: arm-id
          description: The resource Id of the Load Balancer backend address pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/backendAddressPools/<backendAddressPoolName>'.
        loadBalancerInboundNatPoolId:
          type: string
          format: arm-id
          description: The resource Id of the Load Balancer inbound NAT pool that the VM instances of the node type are associated with. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/loadBalancers/<loadBalancerName>/inboundNatPools/<inboundNatPoolName>'.
        applicationGatewayBackendAddressPoolId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/applicationGateways/backendAddressPools
          description: The resource Id of application gateway backend address pool. The format of the resource Id is '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/applicationGateways/<applicationGatewayName>/backendAddressPools/<backendAddressPoolName>'.
      description: Describes the frontend configurations for the node type.
    IPAddressType:
      type: string
      description: |
        The IP address type.
      enum:
        - IPv4
        - IPv6
      default: IPv4
      x-ms-enum:
        name: IPAddressType
        modelAsString: true
        values:
          - value: IPv4
            description: IPv4 address type.
          - value: IPv6
            description: IPv6 address type.
    IpConfiguration:
      type: object
      required:
        - name
      description: Specifies an IP configuration of the network interface.
      properties:
        name:
          type: string
          description: Name of the network interface.
        applicationGatewayBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to backend address pools of application gateways. A node type can reference backend address pools of multiple application gateways. Multiple node types cannot use the same application gateway.
        loadBalancerBackendAddressPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: "Specifies an array of references to backend address pools of load balancers. A node type can reference backend address pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.\t"
        loadBalancerInboundNatPools:
          type: array
          items:
            $ref: '#/components/schemas/SubResource'
          description: Specifies an array of references to inbound Nat pools of the load balancers. A node type can reference inbound nat pools of one public and one internal load balancer. Multiple node types cannot use the same basic sku load balancer.
        subnet:
          $ref: '#/components/schemas/SubResource'
          description: Specifies the subnet of the network interface.
        privateIPAddressVersion:
          type: string
          description: Specifies whether the IP configuration's private IP is IPv4 or IPv6. Default is IPv4.
          enum:
            - IPv4
            - IPv6
          default: IPv4
          x-ms-enum:
            name: privateIPAddressVersion
            modelAsString: true
            values:
              - value: IPv4
              - value: IPv6
        publicIPAddressConfiguration:
          type: object
          required:
            - name
          description: The public IP address configuration of the network interface.
          properties:
            name:
              type: string
              description: Name of the network interface.
            ipTags:
              type: array
              items:
                $ref: '#/components/schemas/IpTag'
              x-ms-identifiers: []
              description: Specifies the list of IP tags associated with the public IP address.
            publicIPAddressVersion:
              type: string
              description: Specifies whether the IP configuration's public IP is IPv4 or IPv6. Default is IPv4.
              enum:
                - IPv4
                - IPv6
              default: IPv4
              x-ms-enum:
                name: publicIPAddressVersion
                modelAsString: true
                values:
                  - value: IPv4
                  - value: IPv6
    ManagedProxyResource:
      type: object
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        systemData:
          $ref: '#/components/schemas/SystemData'
      description: The resource model definition for proxy-only resource.
      x-ms-azure-resource: true
    NodeType:
      description: Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Azure resource tags.
          x-ms-mutability:
            - create
            - read
        systemData:
          $ref: '#/components/schemas/SystemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/NodeTypeProperties'
          description: The node type properties
        sku:
          $ref: '#/components/schemas/NodeTypeSku'
          description: The node type sku.
      type: object
    NodeTypeActionParameters:
      type: object
      properties:
        nodes:
          description: List of node names from the node type.
          type: array
          items:
            type: string
        force:
          description: Force the action to go through.
          type: boolean
        updateType:
          type: string
          description: Specifies the way the operation will be performed.
          enum:
            - Default
            - ByUpgradeDomain
          x-ms-enum:
            name: updateType
            modelAsString: true
            values:
              - value: Default
                description: The operation will proceed in all specified nodes at the same time.
              - value: ByUpgradeDomain
                description: The operation will proceed one upgrade domain at a time, checking the health in between each to continue.
      description: Parameters for Node type action. If nodes are not specified on the parameters, the operation will be performed in all nodes of the node type one upgrade domain at a time.
    NodeTypeProperties:
      type: object
      required:
        - isPrimary
        - vmInstanceCount
      properties:
        isPrimary:
          type: boolean
          description: Indicates the Service Fabric system services for the cluster will run on this node type. This setting cannot be changed once the node type is created.
        vmInstanceCount:
          type: integer
          format: int32
          description: The number of nodes in the node type. <br /><br />**Values:** <br />-1 - Use when auto scale rules are configured or sku.capacity is defined <br /> 0 - Not supported <br /> >0 - Use for manual scale.
          minimum: -1
          maximum: 2147483647
        dataDiskSizeGB:
          type: integer
          format: int32
          description: Disk size for the managed disk attached to the vms on the node type in GBs.
        dataDiskType:
          $ref: '#/components/schemas/DiskType'
          description: Managed data disk type. Specifies the storage account type for the managed disk
        dataDiskLetter:
          type: string
          pattern: ^[a-zA-Z]{1}$
          description: Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.
        placementProperties:
          type: object
          description: The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.
          additionalProperties:
            type: string
            description: Placement tag value
        capacities:
          type: object
          description: The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.
          additionalProperties:
            type: string
            description: Capacity tag value
        applicationPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
          description: The range of ports from which cluster assigned port to Service Fabric applications.
        ephemeralPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
          description: The range of ephemeral ports that nodes in this node type should be configured with.
        vmSize:
          type: string
          description: The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3.
        vmImagePublisher:
          type: string
          description: The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer.
        vmImageOffer:
          type: string
          description: The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer.
        vmImageSku:
          type: string
          description: The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.
        vmImageVersion:
          type: string
          description: The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
        vmSecrets:
          type: array
          title: virtual machine secretes.
          description: The secrets to install in the virtual machines.
          items:
            $ref: '#/components/schemas/VaultSecretGroup'
          x-ms-identifiers:
            - sourceVault
        vmExtensions:
          type: array
          title: virtual machine extensions.
          description: Set of extensions that should be installed onto the virtual machines.
          items:
            $ref: '#/components/schemas/VMSSExtension'
          x-ms-identifiers:
            - name
        vmManagedIdentity:
          $ref: '#/components/schemas/VmManagedIdentity'
          description: Identities to assign to the virtual machine scale set under the node type.
        isStateless:
          type: boolean
          description: Indicates if the node type can only host Stateless workloads.
          default: false
        multiplePlacementGroups:
          type: boolean
          description: Indicates if scale set associated with the node type can be composed of multiple placement groups.
          default: false
        frontendConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/FrontendConfiguration'
          x-ms-identifiers: []
          description: Indicates the node type uses its own frontend configurations instead of the default one for the cluster. This setting can only be specified for non-primary node types and can not be added or removed after the node type is created.
        networkSecurityRules:
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityRule'
          x-ms-identifiers: []
          description: The Network Security Rules for this node type. This setting can only be specified for node types that are configured with frontend configurations.
        additionalDataDisks:
          type: array
          items:
            $ref: '#/components/schemas/VmssDataDisk'
          x-ms-identifiers:
            - lun
          description: Additional managed data disks.
        enableEncryptionAtHost:
          type: boolean
          description: 'Enable or disable the Host Encryption for the virtual machines on the node type. This will enable the encryption for all the disks including Resource/Temp disk at host itself. Default: The Encryption at host will be disabled unless this property is set to true for the resource.'
          default: false
        provisioningState:
          $ref: '#/components/schemas/ManagedResourceProvisioningState'
          readOnly: true
          description: The provisioning state of the node type resource.
        enableAcceleratedNetworking:
          type: boolean
          description: Specifies whether the network interface is accelerated networking-enabled.
        useDefaultPublicLoadBalancer:
          type: boolean
          description: Specifies whether the use public load balancer. If not specified and the node type doesn't have its own frontend configuration, it will be attached to the default load balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is true, then the frontend has to be an Internal Load Balancer. If the node type uses its own Load balancer and useDefaultPublicLoadBalancer is false or not set, then the custom load balancer must include a public load balancer to provide outbound connectivity.
        useTempDataDisk:
          type: boolean
          description: Specifies whether to use the temporary disk for the service fabric data root, in which case no managed data disk will be attached and the temporary disk will be used. It is only allowed for stateless node types.
        enableOverProvisioning:
          type: boolean
          description: Specifies whether the node type should be overprovisioned. It is only allowed for stateless node types.
        zones:
          type: array
          items:
            type: string
          description: Specifies the availability zones where the node type would span across. If the cluster is not spanning across availability zones, initiates az migration for the cluster.
        isSpotVM:
          type: boolean
          description: Indicates whether the node type will be Spot Virtual Machines. Azure will allocate the VMs if there is capacity available and the VMs can be evicted at any time.
        hostGroupId:
          type: string
          description: Specifies the full host group resource Id. This property is used for deploying on azure dedicated hosts.
        useEphemeralOSDisk:
          type: boolean
          description: Indicates whether to use ephemeral os disk. The sku selected on the vmSize property needs to support this feature.
        spotRestoreTimeout:
          type: string
          description: Indicates the time duration after which the platform will not try to restore the VMSS SPOT instances specified as ISO 8601.
        evictionPolicy:
          $ref: '#/components/schemas/EvictionPolicyType'
          description: Specifies the eviction policy for virtual machines in a SPOT node type. Default is Delete.
        vmImageResourceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Compute/images
              - type: Microsoft.Compute/galleries/images
              - type: Microsoft.Compute/galleries/images/versions
          description: Indicates the resource id of the vm image. This parameter is used for custom vm image.
        subnetId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/virtualNetworks/subnets
          description: Indicates the resource id of the subnet for the node type.
        vmSetupActions:
          type: array
          items:
            $ref: '#/components/schemas/VmSetupAction'
          description: Specifies the actions to be performed on the vms before bootstrapping the service fabric runtime.
        securityType:
          type: string
          description: Specifies the security type of the nodeType. Only Standard and TrustedLaunch are currently supported
          enum:
            - TrustedLaunch
            - Standard
          x-ms-enum:
            name: securityType
            modelAsString: true
            values:
              - value: TrustedLaunch
                description: Trusted Launch is a security type that secures generation 2 virtual machines.
              - value: Standard
                description: Standard is the default security type for all machines.
        secureBootEnabled:
          type: boolean
          description: Specifies whether secure boot should be enabled on the nodeType. Can only be used with TrustedLaunch SecurityType
        enableNodePublicIP:
          type: boolean
          description: Specifies whether each node is allocated its own public IPv4 address. This is only supported on secondary node types with custom Load Balancers.
        enableNodePublicIPv6:
          type: boolean
          description: Specifies whether each node is allocated its own public IPv6 address. This is only supported on secondary node types with custom Load Balancers.
        vmSharedGalleryImageId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Compute/sharedGalleries/images
              - type: Microsoft.Compute/sharedGalleries/images/versions
          description: Indicates the resource id of the vm shared galleries image. This parameter is used for custom vm image.
        natGatewayId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/natGateways
          description: Specifies the resource id of a NAT Gateway to attach to the subnet of this node type. Node type must use custom load balancer.
        natConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/NodeTypeNatConfig'
          x-ms-identifiers: []
          description: Specifies the NAT configuration on default public Load Balancer for the node type. This is only supported for node types use the default public Load Balancer.
        vmImagePlan:
          $ref: '#/components/schemas/VmImagePlan'
          description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.
        serviceArtifactReferenceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Compute/galleries/serviceArtifacts/vmArtifactsProfiles
          description: Specifies the service artifact reference id used to set same image version for all virtual machines in the scale set when using 'latest' image version.
        dscpConfigurationId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/dscpConfigurations
          description: Specifies the resource id of the DSCP configuration to apply to the node type network interface.
        additionalNetworkInterfaceConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalNetworkInterfaceConfiguration'
          x-ms-identifiers:
            - name
          description: Specifies the settings for any additional secondary network interfaces to attach to the node type.
        computerNamePrefix:
          type: string
          description: Specifies the computer name prefix. Limited to 9 characters. If specified, allows for a longer name to be specified for the node type name.
        vmApplications:
          type: array
          items:
            $ref: '#/components/schemas/VmApplication'
          x-ms-identifiers:
            - name
          description: Specifies the gallery applications that should be made available to the underlying VMSS.
      description: Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.
    NodeTypeListResult:
      type: object
      properties:
        value:
          type: array
          title: node type list value.
          description: The list of node types.
          items:
            $ref: '#/components/schemas/NodeType'
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: Node type list results
    NodeTypeNatConfig:
      type: object
      properties:
        backendPort:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          description: The internal port for the NAT configuration.
        frontendPortRangeStart:
          type: integer
          format: int32
          minimum: 1
          maximum: 65534
          description: The port range start for the external endpoint.
        frontendPortRangeEnd:
          type: integer
          format: int32
          minimum: 1
          maximum: 65534
          description: The port range end for the external endpoint.
      description: Provides information about NAT configuration on the default public Load Balancer for the node type.
    NodeTypeUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          description: Node type update parameters
          additionalProperties:
            type: string
        sku:
          $ref: '#/components/schemas/NodeTypeSku'
          description: The node type sku.
      description: Node type update request
    NodeTypeSku:
      type: object
      required:
        - capacity
      properties:
        name:
          type: string
          description: The sku name. <br /><br />Name is internally generated and is used in auto-scale scenarios.<br /> Property does not allow to be changed to other values than generated.<br /> To avoid deployment errors please omit the property.
        tier:
          type: string
          description: Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**
        capacity:
          type: integer
          format: int32
          description: The number of nodes in the node type.<br /><br />If present in request it will override properties.vmInstanceCount.
          minimum: 1
          maximum: 2147483647
      description: Describes a node type sku.
    NodeTypeSkuCapacity:
      type: object
      properties:
        minimum:
          type: integer
          format: int32
          readOnly: true
          description: Lowest permitted node count in a node type.
        maximum:
          type: integer
          format: int32
          readOnly: true
          description: Highest permitted node count in a node type.
        default:
          type: integer
          format: int32
          readOnly: true
          description: Default node count in a node type.
        scaleType:
          $ref: '#/components/schemas/NodeTypeSkuScaleType'
          readOnly: true
          description: Node type capacity scale type.
      description: Provides information about how node type can be scaled.
    NodeTypeSkuScaleType:
      type: string
      description: |
        Node type capacity scale type.
      enum:
        - None
        - Manual
        - Automatic
      default: None
      x-ms-enum:
        name: NodeTypeSkuScaleType
        modelAsString: true
        values:
          - value: None
            description: Node count is not adjustable in any way (e.g. it is fixed).
          - value: Manual
            description: The user must manually scale out/in.
          - value: Automatic
            description: Automatic scale is allowed.
    NodeTypeAvailableSku:
      type: object
      properties:
        resourceType:
          type: string
          readOnly: true
          description: 'The type of resource the sku applies to.  <br /><br />Value: Microsoft.ServiceFabric/managedClusters/nodeTypes.'
        sku:
          $ref: '#/components/schemas/NodeTypeSupportedSku'
          description: The supported SKU for a for node type.
          readOnly: true
        capacity:
          $ref: '#/components/schemas/NodeTypeSkuCapacity'
          description: Provides information about how the node count can be scaled.
          readOnly: true
      description: Defines the type of sku available for a node type
    NodeTypeSupportedSku:
      type: object
      properties:
        name:
          type: string
          description: The sku name.
          readOnly: true
        tier:
          type: string
          description: Specifies the tier of the node type. <br /><br /> Possible Values:<br /> **Standard**
          readOnly: true
      description: Describes a node type supported sku.
    NodeTypeListSkuResult:
      type: object
      properties:
        value:
          type: array
          title: Node type sku list value.
          description: The list of available node type SKUs.
          items:
            $ref: '#/components/schemas/NodeTypeAvailableSku'
          x-ms-identifiers: []
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: Node type available sku list results
    SubResource:
      type: object
      properties:
        id:
          type: string
          description: Azure resource identifier.
      description: Azure resource identifier.
      x-ms-azure-resource: true
    VaultCertificate:
      type: object
      required:
        - certificateUrl
        - certificateStore
      properties:
        certificateUrl:
          type: string
          description: 'This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>  "password":"<pfx-file-password>"<br>}'
        certificateStore:
          type: string
          description: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted.
      description: Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.
    VaultSecretGroup:
      type: object
      required:
        - sourceVault
        - vaultCertificates
      properties:
        sourceVault:
          $ref: '#/components/schemas/SubResource'
          description: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.
        vaultCertificates:
          type: array
          items:
            $ref: '#/components/schemas/VaultCertificate'
          x-ms-identifiers: []
          description: The list of key vault references in SourceVault which contain certificates.
      description: Specifies set of certificates that should be installed onto the virtual machines.
    VmApplication:
      type: object
      required:
        - packageReferenceId
      properties:
        configurationReference:
          format: uri
          type: string
          description: Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided.
        enableAutomaticUpgrade:
          type: boolean
          description: If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the underlying VMSS.
        order:
          type: integer
          format: int32
          description: Optional, Specifies the order in which the packages have to be installed.
        packageReferenceId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Compute/galleries/applications/versions
          description: Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}.
        vmGalleryTags:
          type: string
          description: Optional, Specifies a passthrough value for more generic context. Accepts a JSON-formatted string e.g. '{"Tag1":"Value1","Tag2":"Value2"}'.
        treatFailureAsDeploymentFailure:
          type: boolean
          description: Optional, If true, any failure for any operation in the VmApplication will fail the deployment.
      description: Specifies the gallery application that should be made available to the underlying VMSS.
    VmImagePlan:
      type: object
      properties:
        name:
          type: string
          description: The plan ID.
        product:
          type: string
          description: Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
        promotionCode:
          type: string
          description: The promotion code.
        publisher:
          type: string
          description: The publisher ID.
      description: Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use. In the Azure portal, find the marketplace image that you want to use and then click Want to deploy programmatically, Get Started ->. Enter any required information and then click Save.
    VmManagedIdentity:
      type: object
      properties:
        userAssignedIdentities:
          type: array
          description: 'The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
          items:
            type: string
      description: Identities for the virtual machine scale set under the node type.
    VmssDataDisk:
      type: object
      required:
        - lun
        - diskSizeGB
        - diskType
        - diskLetter
      properties:
        lun:
          type: integer
          format: int32
          minimum: 1
          description: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. Lun 0 is reserved for the service fabric data disk.
        diskSizeGB:
          type: integer
          format: int32
          description: Disk size for each vm in the node type in GBs.
        diskType:
          $ref: '#/components/schemas/DiskType'
          description: Managed data disk type. Specifies the storage account type for the managed disk
        diskLetter:
          type: string
          pattern: ^[a-zA-Z]{1}$
          description: Managed data disk letter. It can not use the reserved letter C or D and it can not change after created.
      description: Managed data disk description.
    VmSetupAction:
      type: string
      description: action to be performed on the vms before bootstrapping the service fabric runtime.
      enum:
        - EnableContainers
        - EnableHyperV
      x-ms-enum:
        name: VmSetupAction
        modelAsString: true
        values:
          - value: EnableContainers
            description: Enable windows containers feature.
          - value: EnableHyperV
            description: Enables windows HyperV feature.
    VMSSExtension:
      required:
        - name
        - properties
      description: Specifies set of extensions that should be installed onto the virtual machines.
      properties:
        name:
          type: string
          description: The name of the extension.
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/VMSSExtensionProperties'
          description: Describes the properties of a Virtual Machine Scale Set Extension.
      type: object
    VMSSExtensionProperties:
      type: object
      required:
        - publisher
        - type
        - typeHandlerVersion
      properties:
        publisher:
          type: string
          description: The name of the extension handler publisher.
        type:
          type: string
          description: Specifies the type of the extension; an example is "CustomScriptExtension".
        typeHandlerVersion:
          type: string
          description: Specifies the version of the script handler.
        autoUpgradeMinorVersion:
          type: boolean
          description: Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
        settings:
          type: object
          description: Json formatted public settings for the extension.
        protectedSettings:
          type: object
          description: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
        forceUpdateTag:
          type: string
          description: If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.
        provisionAfterExtensions:
          type: array
          items:
            type: string
          description: Collection of extension names after which this extension needs to be provisioned.
        provisioningState:
          readOnly: true
          type: string
          description: The provisioning state, which only appears in the response.
        enableAutomaticUpgrade:
          type: boolean
          description: Indicates whether the extension should be automatically upgraded by the platform if there is a newer version of the extension available.
        setupOrder:
          type: array
          items:
            $ref: '#/components/schemas/VmssExtensionSetupOrder'
          x-ms-identifiers: []
          description: Indicates the setup order for the extension.
      description: Describes the properties of a Virtual Machine Scale Set Extension.
    VmssExtensionSetupOrder:
      type: string
      description: |
        Vm extension setup order.
      enum:
        - BeforeSFRuntime
      x-ms-enum:
        name: VmssExtensionSetupOrder
        modelAsString: true
        values:
          - value: BeforeSFRuntime
            description: Indicates that the vm extension should run before the service fabric runtime starts.
    EndpointRangeDescription:
      type: object
      required:
        - endPort
        - startPort
      properties:
        startPort:
          type: integer
          format: int32
          description: Starting port of a range of ports
        endPort:
          type: integer
          format: int32
          description: End port of a range of ports
      description: Port range details
    IpTag:
      type: object
      required:
        - ipTagType
        - tag
      properties:
        ipTagType:
          type: string
          description: 'IP tag type. Example: FirstPartyUsage.'
        tag:
          type: string
          description: 'IP tag associated with the public IP. Example: SQL, Storage etc.'
      description: The IP tag associated with the public IP address.
    ManagedResourceProvisioningState:
      type: string
      description: The provisioning state of the managed resource.
      enum:
        - None
        - Creating
        - Created
        - Updating
        - Succeeded
        - Failed
        - Canceled
        - Deleting
        - Deleted
        - Other
      x-ms-enum:
        name: ManagedResourceProvisioningState
        modelAsString: true
    NetworkSecurityRule:
      type: object
      required:
        - name
        - protocol
        - access
        - priority
        - direction
      properties:
        name:
          type: string
          description: Network security rule name.
        description:
          type: string
          description: Network security rule description.
        protocol:
          type: string
          description: Network protocol this rule applies to.
          enum:
            - http
            - https
            - tcp
            - udp
            - icmp
            - ah
            - esp
          x-ms-enum:
            name: nsgProtocol
            modelAsString: true
        sourceAddressPrefixes:
          type: array
          items:
            type: string
          description: The CIDR or source IP ranges.
        destinationAddressPrefixes:
          type: array
          items:
            type: string
          description: The destination address prefixes. CIDR or destination IP ranges.
        sourcePortRanges:
          type: array
          items:
            type: string
          description: The source port ranges.
        destinationPortRanges:
          type: array
          items:
            type: string
          description: The destination port ranges.
        sourceAddressPrefix:
          type: string
          description: The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
        destinationAddressPrefix:
          type: string
          description: The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
        sourcePortRange:
          type: string
          description: The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        destinationPortRange:
          type: string
          description: he destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
        access:
          type: string
          description: The network traffic is allowed or denied.
          enum:
            - allow
            - deny
          x-ms-enum:
            name: access
            modelAsString: true
        priority:
          type: integer
          format: int32
          description: The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
          minimum: 1000
          maximum: 3000
        direction:
          type: string
          description: Network security rule direction.
          enum:
            - inbound
            - outbound
          x-ms-enum:
            name: direction
            modelAsString: true
      description: Describes a network security rule.
    ManagedClusterAddOnFeature:
      type: string
      description: Available cluster add-on features
      enum:
        - DnsService
        - BackupRestoreService
        - ResourceMonitorService
      x-ms-enum:
        name: ManagedClusterAddOnFeature
        modelAsString: true
        values:
          - value: DnsService
            description: Dns service
          - value: BackupRestoreService
            description: Backup and restore service
          - value: ResourceMonitorService
            description: Resource monitor service
    ApplicationTypeVersionsCleanupPolicy:
      type: object
      required:
        - maxUnusedVersionsToKeep
      properties:
        maxUnusedVersionsToKeep:
          type: integer
          format: int32
          minimum: 0
          description: Number of unused versions per application type to keep.
      description: The policy used to clean up unused versions. When the policy is not specified explicitly, the default unused application versions to keep will be 3.
    AutoGeneratedDomainNameLabelScope:
      type: string
      enum:
        - TenantReuse
        - SubscriptionReuse
        - ResourceGroupReuse
        - NoReuse
      x-ms-enum:
        name: AutoGeneratedDomainNameLabelScope
        modelAsString: true
        values:
          - value: TenantReuse
            description: TenantReuse allows for the same hash to be created if the resource is created in the same Tenant with the same resource name.
          - value: SubscriptionReuse
            description: SubscriptionReuse allows for the same hash to be created if the resource is created in the same Subscription with the same resource name.
          - value: ResourceGroupReuse
            description: ResourceGroupReuse allows for the same hash to be created if the resource is created in the same Resource Group with the same resource name.
          - value: NoReuse
            description: NoReuse will create a new hash regardless of the Subscription, Resource Group, Tenant and Resource name.
      description: |
        This enum is the entrypoint to using a certificate from a public CA for your cluster. This property was introduced to solve the
        domain squatting problem with new domains. A domain name will be generated in the following format: <cluster-name>.<hash>.<region-name>.<sfmc-domain>.
        The hash portion comes from Azure DNS' Deterministic Name Library. The library creates a hash using the cluster's Tenant, Subscription, Resource Group
        and Resource Name using the AutoGeneratedDomainNameLabelScope/reuse policy chosen.
    AzureActiveDirectory:
      type: object
      properties:
        tenantId:
          type: string
          description: Azure active directory tenant id.
        clusterApplication:
          type: string
          description: Azure active directory cluster application id.
        clientApplication:
          type: string
          description: Azure active directory client application id.
      description: The settings to enable AAD authentication on the cluster.
    ClientCertificate:
      type: object
      required:
        - isAdmin
      properties:
        isAdmin:
          type: boolean
          description: Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster.
        thumbprint:
          type: string
          description: Certificate thumbprint.
        commonName:
          type: string
          description: Certificate common name.
        issuerThumbprint:
          type: string
          description: Issuer thumbprint for the certificate. Only used together with CommonName.
      description: Client certificate definition.
    ClusterHealthPolicy:
      type: object
      required:
        - maxPercentUnhealthyNodes
        - maxPercentUnhealthyApplications
      description: |
        Defines a health policy used to evaluate the health of the cluster or of a cluster node.
      properties:
        maxPercentUnhealthyNodes:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10.

            The percentage represents the maximum tolerated percentage of nodes that can be unhealthy before the cluster is considered in error.
            If the percentage is respected but there is at least one unhealthy node, the health is evaluated as Warning.
            The percentage is calculated by dividing the number of unhealthy nodes over the total number of nodes in the cluster.
            The computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.

            In large clusters, some nodes will always be down or out for repairs, so this percentage should be configured to tolerate that.
          default: 0
          minimum: 0
          maximum: 100
        maxPercentUnhealthyApplications:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10.

            The percentage represents the maximum tolerated percentage of applications that can be unhealthy before the cluster is considered in error.
            If the percentage is respected but there is at least one unhealthy application, the health is evaluated as Warning.
            This is calculated by dividing the number of unhealthy applications over the total number of application instances in the cluster, excluding applications of application types that are included in the ApplicationTypeHealthPolicyMap.
            The computation rounds up to tolerate one failure on small numbers of applications. Default percentage is zero.
          default: 0
          minimum: 0
          maximum: 100
    ClusterMonitoringPolicy:
      type: object
      description: Describes the monitoring policies for the cluster upgrade.
      required:
        - healthCheckWaitDuration
        - healthCheckStableDuration
        - healthCheckRetryTimeout
        - upgradeTimeout
        - upgradeDomainTimeout
      properties:
        healthCheckWaitDuration:
          type: string
          x-ms-format: duration-constant
          description: The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        healthCheckStableDuration:
          type: string
          x-ms-format: duration-constant
          description: The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        healthCheckRetryTimeout:
          type: string
          description: The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        upgradeTimeout:
          type: string
          description: The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        upgradeDomainTimeout:
          type: string
          description: The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
    ClusterState:
      type: string
      description: |
        The current state of the cluster.
      enum:
        - WaitingForNodes
        - Deploying
        - BaselineUpgrade
        - Upgrading
        - UpgradeFailed
        - Ready
      x-ms-enum:
        name: ClusterState
        modelAsString: true
        values:
          - value: WaitingForNodes
            description: Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
          - value: Deploying
            description: Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
          - value: BaselineUpgrade
            description: Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
          - value: Upgrading
            description: Indicates that the cluster is being upgraded with the user provided configuration.
          - value: UpgradeFailed
            description: Indicates that the last upgrade for the cluster has failed.
          - value: Ready
            description: Indicates that the cluster is in a stable state.
    ClusterUpgradeCadence:
      type: string
      enum:
        - Wave0
        - Wave1
        - Wave2
      x-ms-enum:
        name: clusterUpgradeCadence
        modelAsString: true
        values:
          - value: Wave0
            description: Cluster upgrade starts immediately after a new version is rolled out. Recommended for Test/Dev clusters.
          - value: Wave1
            description: Cluster upgrade starts 7 days after a new version is rolled out. Recommended for Pre-prod clusters.
          - value: Wave2
            description: Cluster upgrade starts 14 days after a new version is rolled out. Recommended for Production clusters.
      description: Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0.
    ClusterUpgradeDeltaHealthPolicy:
      type: object
      description: Describes the delta health policies for the cluster upgrade.
      required:
        - maxPercentDeltaUnhealthyNodes
      properties:
        maxPercentDeltaUnhealthyNodes:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of nodes health degradation allowed during cluster upgrades.
            The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits.
          minimum: 0
          maximum: 100
        maxPercentUpgradeDomainDeltaUnhealthyNodes:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades.
            The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits.
          minimum: 0
          maximum: 100
        maxPercentDeltaUnhealthyApplications:
          type: integer
          format: int32
          description: |
            The maximum allowed percentage of applications health degradation allowed during cluster upgrades.
            The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation.
            The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this.
            NOTE: This value will overwrite the value specified in properties.UpgradeDescription.HealthPolicy.MaxPercentUnhealthyApplications
          minimum: 0
          maximum: 100
    ClusterUpgradeMode:
      type: string
      description: |
        The upgrade mode of the cluster when new Service Fabric runtime version is available.
      enum:
        - Automatic
        - Manual
      default: Automatic
      x-ms-enum:
        name: ClusterUpgradeMode
        modelAsString: true
        values:
          - value: Automatic
            description: The cluster will be automatically upgraded to the latest Service Fabric runtime version, **clusterUpgradeCadence** will determine when the upgrade starts after the new version becomes available.
          - value: Manual
            description: The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
    ClusterUpgradePolicy:
      type: object
      properties:
        forceRestart:
          type: boolean
          description: If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data).
        healthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
          description: The cluster health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
        deltaHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeDeltaHealthPolicy'
          description: The cluster delta health policy defines a health policy used to evaluate the health of the cluster during a cluster upgrade.
        monitoringPolicy:
          $ref: '#/components/schemas/ClusterMonitoringPolicy'
          description: The cluster monitoring policy describes the parameters for monitoring an upgrade in Monitored mode.
        upgradeReplicaSetCheckTimeout:
          type: string
          description: |
            The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues.
            When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues.
            The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
            This value must be between 00:00:00 and 49710.06:28:15 (unsigned 32 bit integer for seconds)
      description: Describes the policy used when upgrading the cluster.
    LoadBalancingRule:
      type: object
      required:
        - frontendPort
        - backendPort
        - protocol
        - probeProtocol
      properties:
        frontendPort:
          type: integer
          format: int32
          description: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
          minimum: 1
          maximum: 65534
        backendPort:
          type: integer
          format: int32
          description: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
          minimum: 1
          maximum: 65534
        protocol:
          type: string
          description: The reference to the transport protocol used by the load balancing rule.
          enum:
            - tcp
            - udp
          x-ms-enum:
            name: protocol
            modelAsString: true
        probePort:
          type: integer
          format: int32
          description: The prob port used by the load balancing rule. Acceptable values are between 1 and 65535.
          minimum: 1
          maximum: 65534
        probeProtocol:
          type: string
          description: the reference to the load balancer probe used by the load balancing rule.
          enum:
            - tcp
            - http
            - https
          x-ms-enum:
            name: probeProtocol
            modelAsString: true
        probeRequestPath:
          type: string
          description: The probe request path. Only supported for HTTP/HTTPS probes.
        loadDistribution:
          type: string
          description: The load distribution policy for this rule.
      description: Describes a load balancing rule.
    LongRunningOperationResult:
      type: object
      properties:
        name:
          type: string
          description: The name of the operation.
        startTime:
          type: string
          description: The start time of the operation.
          format: date-time
        endTime:
          type: string
          description: The end time of the operation.
          format: date-time
        percentComplete:
          type: number
          format: double
          description: The completion percentage of the operation.
        status:
          type: string
          description: The status of the operation.
        error:
          $ref: '#/components/schemas/ErrorModelError'
          description: The operation error.
      description: Long running operation result.
    ManagedCluster:
      required:
        - sku
      description: |
        The managed cluster resource
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Azure resource location.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedClusterProperties'
          description: The managed cluster resource properties
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku of the managed cluster
      type: object
    ManagedClusterCodeVersionListResult:
      type: array
      items:
        $ref: '#/components/schemas/ManagedClusterCodeVersionResult'
      description: The list results of the Service Fabric runtime versions.
    ManagedClusterCodeVersionResult:
      description: The result of the Service Fabric runtime versions
      properties:
        id:
          type: string
          description: The identification of the result
        name:
          type: string
          description: The name of the result
        type:
          type: string
          description: The result resource type
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ManagedClusterVersionDetails'
      type: object
    ManagedClusterListResult:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ManagedCluster'
        nextLink:
          type: string
          description: The URL to use for getting the next set of results.
      description: Managed Cluster list results
    ManagedClusterProperties:
      type: object
      required:
        - dnsName
        - adminUserName
      properties:
        dnsName:
          type: string
          description: The cluster dns name.
        fqdn:
          type: string
          description: The fully qualified domain name associated with the public load balancer of the cluster.
          readOnly: true
        ipv4Address:
          type: string
          description: The IPv4 address associated with the public load balancer of the cluster.
          readOnly: true
        clusterId:
          type: string
          description: A service generated unique identifier for the cluster resource.
          readOnly: true
        clusterState:
          readOnly: true
          $ref: '#/components/schemas/ClusterState'
          description: The current state of the cluster.
        clusterCertificateThumbprints:
          type: array
          items:
            type: string
          description: List of thumbprints of the cluster certificates.
          readOnly: true
        clientConnectionPort:
          type: integer
          format: int32
          description: The port used for client connections to the cluster.
          default: 19000
        httpGatewayConnectionPort:
          type: integer
          format: int32
          description: The port used for HTTP connections to the cluster.
          default: 19080
        adminUserName:
          type: string
          description: VM admin user name.
        adminPassword:
          type: string
          x-ms-secret: true
          format: password
          description: VM admin user password.
        loadBalancingRules:
          type: array
          items:
            $ref: '#/components/schemas/LoadBalancingRule'
          x-ms-identifiers: []
          description: Load balancing rules that are applied to the public load balancer of the cluster.
        allowRdpAccess:
          type: boolean
          description: Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to Internet which can be overridden with custom Network Security Rules. The default value for this setting is false.
        networkSecurityRules:
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityRule'
          x-ms-identifiers: []
          description: Custom Network Security Rules that are applied to the Virtual Network of the cluster.
        clients:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertificate'
          x-ms-identifiers: []
          description: Client certificates that are allowed to manage the cluster.
        azureActiveDirectory:
          $ref: '#/components/schemas/AzureActiveDirectory'
          description: The AAD authentication settings of the cluster.
        fabricSettings:
          type: array
          items:
            $ref: '#/components/schemas/SettingsSectionDescription'
          x-ms-identifiers: []
          description: The list of custom fabric settings to configure the cluster.
        provisioningState:
          $ref: '#/components/schemas/ManagedResourceProvisioningState'
          readOnly: true
          description: The provisioning state of the managed cluster resource.
        clusterCodeVersion:
          type: string
          description: The Service Fabric runtime version of the cluster. This property is required when **clusterUpgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.
        clusterUpgradeMode:
          $ref: '#/components/schemas/ClusterUpgradeMode'
        clusterUpgradeCadence:
          $ref: '#/components/schemas/ClusterUpgradeCadence'
          description: Indicates when new cluster runtime version upgrades will be applied after they are released. By default is Wave0. Only applies when **clusterUpgradeMode** is set to 'Automatic'.
        addonFeatures:
          type: array
          items:
            $ref: '#/components/schemas/ManagedClusterAddOnFeature'
          description: List of add-on features to enable on the cluster.
        enableAutoOSUpgrade:
          type: boolean
          description: Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false.
        zonalResiliency:
          type: boolean
          description: Indicates if the cluster has zone resiliency.
          default: false
        applicationTypeVersionsCleanupPolicy:
          $ref: '#/components/schemas/ApplicationTypeVersionsCleanupPolicy'
          description: The policy used to clean up unused versions.
        enableIpv6:
          type: boolean
          description: Setting this to true creates IPv6 address space for the default VNet used by the cluster. This setting cannot be changed once the cluster is created. The default value for this setting is false.
        subnetId:
          type: string
          description: If specified, the node types for the cluster are created in this subnet instead of the default VNet. The **networkSecurityRules** specified for the cluster are also applied to this subnet. This setting cannot be changed once the cluster is created.
        ipTags:
          type: array
          items:
            $ref: '#/components/schemas/IpTag'
          x-ms-identifiers: []
          description: The list of IP tags associated with the default public IP address of the cluster.
        ipv6Address:
          type: string
          description: IPv6 address for the cluster if IPv6 is enabled.
          readOnly: true
        enableServicePublicIP:
          type: boolean
          description: Setting this to true will link the IPv4 address as the ServicePublicIP of the IPv6 address. It can only be set to True if IPv6 is enabled on the cluster.
        auxiliarySubnets:
          type: array
          items:
            $ref: '#/components/schemas/Subnet'
          x-ms-identifiers: []
          description: Auxiliary subnets for the cluster.
        serviceEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/ServiceEndpoint'
          x-ms-identifiers: []
          description: Service endpoints for subnets in the cluster.
        zonalUpdateMode:
          $ref: '#/components/schemas/ZonalUpdateMode'
          description: Indicates the update mode for Cross Az clusters.
        useCustomVnet:
          type: boolean
          description: For new clusters, this parameter indicates that it uses Bring your own VNet, but the subnet is specified at node type level; and for such clusters, the subnetId property is required for node types.
        publicIPPrefixId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/publicIPPrefixes
          description: Specify the resource id of a public IPv4 prefix that the load balancer will allocate a public IPv4 address from. This setting cannot be changed once the cluster is created.
        publicIPv6PrefixId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/publicIPPrefixes
          description: Specify the resource id of a public IPv6 prefix that the load balancer will allocate a public IPv6 address from. This setting cannot be changed once the cluster is created.
        ddosProtectionPlanId:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/ddosProtectionPlans
          description: Specify the resource id of a DDoS network protection plan that will be associated with the virtual network of the cluster.
        upgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradePolicy'
          description: The policy to use when upgrading the cluster.
        httpGatewayTokenAuthConnectionPort:
          type: integer
          format: int32
          description: The port used for token-auth based HTTPS connections to the cluster. Cannot be set to the same port as HttpGatewayEndpoint.
        enableHttpGatewayExclusiveAuthMode:
          type: boolean
          description: If true, token-based authentication is not allowed on the HttpGatewayEndpoint. This is required to support TLS versions 1.3 and above. If token-based authentication is used, HttpGatewayTokenAuthConnectionPort must be defined.
        autoGeneratedDomainNameLabelScope:
          $ref: '#/components/schemas/AutoGeneratedDomainNameLabelScope'
          description: This property is the entry point to using a public CA cert for your cluster cert. It specifies the level of reuse allowed for the custom FQDN created, matching the subject of the public CA cert.
        customFqdn:
          type: string
          description: If using autoGeneratedDomainNameLabelScope, this is the fully qualified domain name using SFMC's domain, pointing to the public load balancer of the cluster.
      description: Describes the managed cluster resource properties.
    ManagedClusterUpdateParameters:
      type: object
      properties:
        tags:
          type: object
          description: Managed cluster update parameters
          additionalProperties:
            type: string
      description: Managed cluster update request
    ManagedClusterVersionDetails:
      type: object
      properties:
        clusterCodeVersion:
          type: string
          description: The Service Fabric runtime version of the cluster.
        supportExpiryUtc:
          type: string
          description: The date of expiry of support of the version.
        osType:
          $ref: '#/components/schemas/OsType'
      description: The detail of the Service Fabric runtime version result
    ManagedVMSize:
      description: Describes a VM Sizes.
      properties:
        properties:
          description: VM Size properties.
          $ref: '#/components/schemas/VMSize'
          readOnly: true
        id:
          type: string
          description: VM Size id.
          readOnly: true
        name:
          type: string
          description: VM Size name.
          readOnly: true
        type:
          type: string
          description: VM Size type.
          readOnly: true
      type: object
    ManagedVMSizesResult:
      type: object
      properties:
        value:
          type: array
          description: List of Managed VM Sizes for Service Fabric Managed Clusters.
          items:
            $ref: '#/components/schemas/ManagedVMSize'
        nextLink:
          type: string
          description: URL to get the next set of Managed VM Sizes if there are any.
          readOnly: true
      description: Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.
    ManagedAzResiliencyStatus:
      type: object
      properties:
        baseResourceStatus:
          type: array
          description: List of Managed VM Sizes for Service Fabric Managed Clusters.
          items:
            $ref: '#/components/schemas/ResourceAzStatus'
          x-ms-identifiers: []
        isClusterZoneResilient:
          type: boolean
          description: URL to get the next set of Managed VM Sizes if there are any.
          readOnly: true
      description: Describes the result of the request to list Managed VM Sizes for Service Fabric Managed Clusters.
    ManagedMaintenanceWindowStatus:
      type: object
      properties:
        isWindowEnabled:
          type: boolean
          description: If maintenance window is enabled on this cluster.
          readOnly: true
        isRegionReady:
          type: boolean
          description: Indicates if the region is ready to configure maintenance windows.
          readOnly: true
        isWindowActive:
          type: boolean
          description: If maintenance window is active.
          readOnly: true
        canApplyUpdates:
          type: boolean
          description: If updates can be applied.
          readOnly: true
        lastWindowStatusUpdateAtUTC:
          type: string
          format: date-time
          description: Last window update time in UTC.
          readOnly: true
        lastWindowStartTimeUTC:
          type: string
          format: date-time
          description: Last window start time in UTC.
          readOnly: true
        lastWindowEndTimeUTC:
          type: string
          format: date-time
          description: Last window end time in UTC.
          readOnly: true
      description: Describes the maintenance window status of the Service Fabric Managed Cluster.
    ResourceAzStatus:
      type: object
      properties:
        resourceName:
          type: string
          description: VM Size properties.
          readOnly: true
        resourceType:
          type: string
          description: VM Size id.
          readOnly: true
        isZoneResilient:
          type: boolean
          description: VM Size name.
          readOnly: true
        details:
          type: string
          description: Zone resiliency status details for the resource.
          readOnly: true
      description: Describes Az Resiliency status of Base resources
    OsType:
      type: string
      description: Cluster operating system, the default will be Windows
      enum:
        - Windows
      x-ms-enum:
        name: OsType
        modelAsString: true
        values:
          - value: Windows
            description: Indicates os is Windows.
    ServiceEndpoint:
      type: object
      required:
        - service
      properties:
        service:
          type: string
          description: The type of the endpoint service.
        locations:
          type: array
          items:
            type: string
          description: A list of locations.
      description: The service endpoint properties.
    Sku:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
          description: Sku Name.
      description: Service Fabric managed cluster Sku definition
    SkuName:
      type: string
      description: Sku Name.
      enum:
        - Basic
        - Standard
      x-ms-enum:
        name: SkuName
        modelAsString: true
        values:
          - value: Basic
            description: Basic requires a minimum of 3 nodes and allows only 1 node type.
          - value: Standard
            description: Requires a minimum of 5 nodes and allows 1 or more node type.
    Subnet:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Subnet name.
        enableIpv6:
          type: boolean
          description: Indicates wether to enable Ipv6 or not. If not provided, it will take the same configuration as the cluster.
        privateEndpointNetworkPolicies:
          type: string
          description: Enable or Disable apply network policies on private end point in the subnet.
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: privateEndpointNetworkPolicies
            modelAsString: true
        privateLinkServiceNetworkPolicies:
          type: string
          description: Enable or Disable apply network policies on private link service in the subnet.
          enum:
            - enabled
            - disabled
          x-ms-enum:
            name: privateLinkServiceNetworkPolicies
            modelAsString: true
        networkSecurityGroupId:
          type: string
          description: Full resource id for the network security group.
      description: Describes a Subnet.
    VMSize:
      type: object
      properties:
        size:
          type: string
          description: VM Size name.
          readOnly: true
      description: VM Sizes properties.
    ZonalUpdateMode:
      type: string
      description: Indicates the update mode for Cross Az clusters.
      enum:
        - Standard
        - Fast
      x-ms-enum:
        name: ZonalUpdateMode
        modelAsString: true
        values:
          - value: Standard
            description: The cluster will use 5 upgrade domains for Cross Az Node types.
          - value: Fast
            description: The cluster will use a maximum of 3 upgrade domains per zone instead of 5 for Cross Az Node types for faster deployments.
    OperationListResult:
      type: object
      properties:
        value:
          type: array
          description: List of operations supported by the Service Fabric resource provider.
          items:
            $ref: '#/components/schemas/OperationResult'
          x-ms-identifiers: []
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
      description: Describes the result of the request to list Service Fabric resource provider operations.
    Resource:
      type: object
      required:
        - location
      properties:
        id:
          type: string
          description: Azure resource identifier.
          readOnly: true
        name:
          type: string
          description: Azure resource name.
          readOnly: true
        type:
          type: string
          description: Azure resource type.
          readOnly: true
        location:
          type: string
          description: Azure resource location.
          x-ms-mutability:
            - create
            - read
        tags:
          type: object
          description: Azure resource tags.
          additionalProperties:
            type: string
        etag:
          type: string
          description: Azure resource etag.
          readOnly: true
        systemData:
          $ref: '#/components/schemas/SystemData'
      description: The resource model definition.
      x-ms-azure-resource: true
    SettingsParameterDescription:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: The parameter name of fabric setting.
        value:
          type: string
          description: The parameter value of fabric setting.
      description: Describes a parameter in fabric settings of the cluster.
    SettingsSectionDescription:
      type: object
      required:
        - name
        - parameters
      properties:
        name:
          type: string
          description: The section name of the fabric settings.
        parameters:
          type: array
          description: The collection of parameters in the section.
          items:
            $ref: '#/components/schemas/SettingsParameterDescription'
          x-ms-identifiers:
            - name
      description: Describes a section in the fabric settings of the cluster.
  x-stackQL-resources:
    application_types:
      id: azure.service_fabric_managed_clusters.application_types
      name: application_types
      title: application_types
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}?api-version=2024-06-01-preview/get'
            operationId: ApplicationTypes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}?api-version=2024-06-01-preview/put'
            operationId: ApplicationTypes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}?api-version=2024-06-01-preview/patch'
            operationId: ApplicationTypes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}?api-version=2024-06-01-preview/delete'
            operationId: ApplicationTypes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes?api-version=2024-06-01-preview/get'
            operationId: ApplicationTypes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeResourceList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_types/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_types/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/application_types/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_types/methods/delete'
    application_type_versions:
      id: azure.service_fabric_managed_clusters.application_type_versions
      name: application_type_versions
      title: application_type_versions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1{version}?api-version=2024-06-01-preview/get'
            operationId: ApplicationTypeVersions_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeVersionResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1{version}?api-version=2024-06-01-preview/put'
            operationId: ApplicationTypeVersions_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeVersionResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1{version}?api-version=2024-06-01-preview/patch'
            operationId: ApplicationTypeVersions_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeVersionResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions~1{version}?api-version=2024-06-01-preview/delete'
            operationId: ApplicationTypeVersions_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_application_types:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applicationTypes~1{applicationTypeName}~1versions?api-version=2024-06-01-preview/get'
            operationId: ApplicationTypeVersions_ListByApplicationTypes
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationTypeVersionResourceList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/list_by_application_types'
        insert:
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/application_type_versions/methods/delete'
    applications:
      id: azure.service_fabric_managed_clusters.applications
      name: applications
      title: applications
      methods:
        read_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1applications~1{applicationName}~1fetchUpgradeStatus?api-version=2024-06-01-preview/post'
            operationId: Applications_ReadUpgrade
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        start_rollback:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1applications~1{applicationName}~1startRollback?api-version=2024-06-01-preview/post'
            operationId: Applications_StartRollback
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        resume_upgrade:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1applications~1{applicationName}~1resumeUpgrade?api-version=2024-06-01-preview/post'
            operationId: Applications_ResumeUpgrade
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}?api-version=2024-06-01-preview/get'
            operationId: Applications_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}?api-version=2024-06-01-preview/put'
            operationId: Applications_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}?api-version=2024-06-01-preview/patch'
            operationId: Applications_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}?api-version=2024-06-01-preview/delete'
            operationId: Applications_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications?api-version=2024-06-01-preview/get'
            operationId: Applications_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ApplicationResourceList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/applications/methods/get'
          - $ref: '#/components/x-stackQL-resources/applications/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete'
    services:
      id: azure.service_fabric_managed_clusters.services
      name: services
      title: services
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}?api-version=2024-06-01-preview/get'
            operationId: Services_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}?api-version=2024-06-01-preview/put'
            operationId: Services_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}?api-version=2024-06-01-preview/patch'
            operationId: Services_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}~1services~1{serviceName}?api-version=2024-06-01-preview/delete'
            operationId: Services_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_by_applications:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedclusters~1{clusterName}~1applications~1{applicationName}~1services?api-version=2024-06-01-preview/get'
            operationId: Services_ListByApplications
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceResourceList
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list_by_applications'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/services/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    node_types:
      id: azure.service_fabric_managed_clusters.node_types
      name: node_types
      title: node_types
      methods:
        list_by_managed_clusters:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes?api-version=2024-06-01-preview/get'
            operationId: NodeTypes_ListByManagedClusters
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NodeTypeListResult
            objectKey: $.value
        restart:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}~1restart?api-version=2024-06-01-preview/post'
            operationId: NodeTypes_Restart
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reimage:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}~1reimage?api-version=2024-06-01-preview/post'
            operationId: NodeTypes_Reimage
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}?api-version=2024-06-01-preview/get'
            operationId: NodeTypes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NodeType
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}?api-version=2024-06-01-preview/put'
            operationId: NodeTypes_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NodeType
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}?api-version=2024-06-01-preview/patch'
            operationId: NodeTypes_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NodeType
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}?api-version=2024-06-01-preview/delete'
            operationId: NodeTypes_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/node_types/methods/get'
          - $ref: '#/components/x-stackQL-resources/node_types/methods/list_by_managed_clusters'
        insert:
          - $ref: '#/components/x-stackQL-resources/node_types/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/node_types/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/node_types/methods/delete'
    node_types_nodes:
      id: azure.service_fabric_managed_clusters.node_types_nodes
      name: node_types_nodes
      title: node_types_nodes
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}~1deleteNode?api-version=2024-06-01-preview/post'
            operationId: NodeTypesNode_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    node_type_skus:
      id: azure.service_fabric_managed_clusters.node_type_skus
      name: node_type_skus
      title: node_type_skus
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1nodeTypes~1{nodeTypeName}~1skus?api-version=2024-06-01-preview/get'
            operationId: NodeTypeSkus_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NodeTypeListSkuResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/node_type_skus/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managed_clusters:
      id: azure.service_fabric_managed_clusters.managed_clusters
      name: managed_clusters
      title: managed_clusters
      methods:
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters?api-version=2024-06-01-preview/get'
            operationId: ManagedClusters_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedClusterListResult
            objectKey: $.value
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1managedClusters?api-version=2024-06-01-preview/get'
            operationId: ManagedClusters_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedClusterListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}?api-version=2024-06-01-preview/get'
            operationId: ManagedClusters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedCluster
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}?api-version=2024-06-01-preview/put'
            operationId: ManagedClusters_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedCluster
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}?api-version=2024-06-01-preview/patch'
            operationId: ManagedClusters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedCluster
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}?api-version=2024-06-01-preview/delete'
            operationId: ManagedClusters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        apply_maintenance_window:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1applyMaintenanceWindow?api-version=2024-06-01-preview/post'
            operationId: ManagedClusters_ApplyMaintenanceWindow
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/managed_clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_clusters/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/managed_clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_clusters/methods/delete'
    managed_az_resiliency_status:
      id: azure.service_fabric_managed_clusters.managed_az_resiliency_status
      name: managed_az_resiliency_status
      title: managed_az_resiliency_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1getazresiliencystatus?api-version=2024-06-01-preview/post'
            operationId: managedAzResiliencyStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedAzResiliencyStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_az_resiliency_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managed_maintenance_window_status:
      id: azure.service_fabric_managed_clusters.managed_maintenance_window_status
      name: managed_maintenance_window_status
      title: managed_maintenance_window_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceFabric~1managedClusters~1{clusterName}~1getMaintenanceWindowStatus?api-version=2024-06-01-preview/post'
            operationId: managedMaintenanceWindowStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedMaintenanceWindowStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_maintenance_window_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    managed_cluster_versions:
      id: azure.service_fabric_managed_clusters.managed_cluster_versions
      name: managed_cluster_versions
      title: managed_cluster_versions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1managedClusterVersions~1{clusterVersion}?api-version=2024-06-01-preview/get'
            operationId: ManagedClusterVersion_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedClusterCodeVersionResult
        get_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1environments~1{environment}~1managedClusterVersions~1{clusterVersion}?api-version=2024-06-01-preview/get'
            operationId: ManagedClusterVersion_GetByEnvironment
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedClusterCodeVersionResult
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1managedClusterVersions?api-version=2024-06-01-preview/get'
            operationId: ManagedClusterVersion_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedClusterCodeVersionListResult
        list_by_environment:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1environments~1{environment}~1managedClusterVersions?api-version=2024-06-01-preview/get'
            operationId: ManagedClusterVersion_ListByEnvironment
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedClusterCodeVersionListResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_cluster_versions/methods/get_by_environment'
          - $ref: '#/components/x-stackQL-resources/managed_cluster_versions/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_cluster_versions/methods/list_by_environment'
          - $ref: '#/components/x-stackQL-resources/managed_cluster_versions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    managed_unsupported_vm_sizes:
      id: azure.service_fabric_managed_clusters.managed_unsupported_vm_sizes
      name: managed_unsupported_vm_sizes
      title: managed_unsupported_vm_sizes
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1managedUnsupportedVMSizes?api-version=2024-06-01-preview/get'
            operationId: managedUnsupportedVMSizes_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedVMSizesResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1managedUnsupportedVMSizes~1{vmSize}?api-version=2024-06-01-preview/get'
            operationId: managedUnsupportedVMSizes_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ManagedVMSize
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/managed_unsupported_vm_sizes/methods/get'
          - $ref: '#/components/x-stackQL-resources/managed_unsupported_vm_sizes/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operation_status:
      id: azure.service_fabric_managed_clusters.operation_status
      name: operation_status
      title: operation_status
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1managedClusterOperations~1{operationId}?api-version=2024-06-01-preview/get'
            operationId: OperationStatus_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LongRunningOperationResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operation_status/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    operation_results:
      id: azure.service_fabric_managed_clusters.operation_results
      name: operation_results
      title: operation_results
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ServiceFabric~1locations~1{location}~1managedClusterOperationResults~1{operationId}?api-version=2024-06-01-preview/get'
            operationId: OperationResults_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.service_fabric_managed_clusters.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.ServiceFabric~1operations?api-version=2024-06-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    vw_application_types:
      id: azure.service_fabric_managed_clusters.vw_application_types
      name: vw_application_types
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationTypeName
              FROM azure.service_fabric_managed_clusters.application_types
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationTypeName
                FROM azure.service_fabric_managed_clusters.application_types
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_application_type_versions:
      id: azure.service_fabric_managed_clusters.vw_application_type_versions
      name: vw_application_type_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.appPackageUrl') as "app_package_url",
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationTypeName,
              version
              FROM azure.service_fabric_managed_clusters.application_type_versions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationTypeName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.appPackageUrl') as "app_package_url",
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationTypeName,
                version
                FROM azure.service_fabric_managed_clusters.application_type_versions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationTypeName = 'replace-me';
    vw_applications:
      id: azure.service_fabric_managed_clusters.vw_applications
      name: vw_applications
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              identity as identity,
              type as type,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.version') as "version",
              JSON_EXTRACT(properties, '$.parameters') as "parameters",
              JSON_EXTRACT(properties, '$.upgradePolicy') as "upgrade_policy",
              JSON_EXTRACT(properties, '$.managedIdentities') as "managed_identities",
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationName
              FROM azure.service_fabric_managed_clusters.applications
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                identity as identity,
                type as type,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.version') as "version",
                json_extract_path_text(properties, '$.parameters') as "parameters",
                json_extract_path_text(properties, '$.upgradePolicy') as "upgrade_policy",
                json_extract_path_text(properties, '$.managedIdentities') as "managed_identities",
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationName
                FROM azure.service_fabric_managed_clusters.applications
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_services:
      id: azure.service_fabric_managed_clusters.vw_services
      name: vw_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              systemData as system_data,
              JSON_EXTRACT(properties, '$.placementConstraints') as "placement_constraints",
              JSON_EXTRACT(properties, '$.correlationScheme') as "correlation_scheme",
              JSON_EXTRACT(properties, '$.serviceLoadMetrics') as "service_load_metrics",
              JSON_EXTRACT(properties, '$.servicePlacementPolicies') as "service_placement_policies",
              JSON_EXTRACT(properties, '$.defaultMoveCost') as "default_move_cost",
              JSON_EXTRACT(properties, '$.scalingPolicies') as "scaling_policies",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.serviceKind') as "service_kind",
              JSON_EXTRACT(properties, '$.serviceTypeName') as "service_type_name",
              JSON_EXTRACT(properties, '$.partitionDescription') as "partition_description",
              JSON_EXTRACT(properties, '$.servicePackageActivationMode') as "service_package_activation_mode",
              JSON_EXTRACT(properties, '$.serviceDnsName') as "service_dns_name",
              subscriptionId,
              resourceGroupName,
              clusterName,
              applicationName,
              serviceName
              FROM azure.service_fabric_managed_clusters.services
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                systemData as system_data,
                json_extract_path_text(properties, '$.placementConstraints') as "placement_constraints",
                json_extract_path_text(properties, '$.correlationScheme') as "correlation_scheme",
                json_extract_path_text(properties, '$.serviceLoadMetrics') as "service_load_metrics",
                json_extract_path_text(properties, '$.servicePlacementPolicies') as "service_placement_policies",
                json_extract_path_text(properties, '$.defaultMoveCost') as "default_move_cost",
                json_extract_path_text(properties, '$.scalingPolicies') as "scaling_policies",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.serviceKind') as "service_kind",
                json_extract_path_text(properties, '$.serviceTypeName') as "service_type_name",
                json_extract_path_text(properties, '$.partitionDescription') as "partition_description",
                json_extract_path_text(properties, '$.servicePackageActivationMode') as "service_package_activation_mode",
                json_extract_path_text(properties, '$.serviceDnsName') as "service_dns_name",
                subscriptionId,
                resourceGroupName,
                clusterName,
                applicationName,
                serviceName
                FROM azure.service_fabric_managed_clusters.services
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me' AND applicationName = 'replace-me';
    vw_node_types:
      id: azure.service_fabric_managed_clusters.vw_node_types
      name: vw_node_types
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              tags as tags,
              systemData as system_data,
              sku as sku,
              JSON_EXTRACT(properties, '$.isPrimary') as "is_primary",
              JSON_EXTRACT(properties, '$.vmInstanceCount') as "vm_instance_count",
              JSON_EXTRACT(properties, '$.dataDiskSizeGB') as "data_disk_size_gb",
              JSON_EXTRACT(properties, '$.dataDiskType') as "data_disk_type",
              JSON_EXTRACT(properties, '$.dataDiskLetter') as "data_disk_letter",
              JSON_EXTRACT(properties, '$.placementProperties') as "placement_properties",
              JSON_EXTRACT(properties, '$.capacities') as "capacities",
              JSON_EXTRACT(properties, '$.applicationPorts') as "application_ports",
              JSON_EXTRACT(properties, '$.ephemeralPorts') as "ephemeral_ports",
              JSON_EXTRACT(properties, '$.vmSize') as "vm_size",
              JSON_EXTRACT(properties, '$.vmImagePublisher') as "vm_image_publisher",
              JSON_EXTRACT(properties, '$.vmImageOffer') as "vm_image_offer",
              JSON_EXTRACT(properties, '$.vmImageSku') as "vm_image_sku",
              JSON_EXTRACT(properties, '$.vmImageVersion') as "vm_image_version",
              JSON_EXTRACT(properties, '$.vmSecrets') as "vm_secrets",
              JSON_EXTRACT(properties, '$.vmExtensions') as "vm_extensions",
              JSON_EXTRACT(properties, '$.vmManagedIdentity') as "vm_managed_identity",
              JSON_EXTRACT(properties, '$.isStateless') as "is_stateless",
              JSON_EXTRACT(properties, '$.multiplePlacementGroups') as "multiple_placement_groups",
              JSON_EXTRACT(properties, '$.frontendConfigurations') as "frontend_configurations",
              JSON_EXTRACT(properties, '$.networkSecurityRules') as "network_security_rules",
              JSON_EXTRACT(properties, '$.additionalDataDisks') as "additional_data_disks",
              JSON_EXTRACT(properties, '$.enableEncryptionAtHost') as "enable_encryption_at_host",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.enableAcceleratedNetworking') as "enable_accelerated_networking",
              JSON_EXTRACT(properties, '$.useDefaultPublicLoadBalancer') as "use_default_public_load_balancer",
              JSON_EXTRACT(properties, '$.useTempDataDisk') as "use_temp_data_disk",
              JSON_EXTRACT(properties, '$.enableOverProvisioning') as "enable_over_provisioning",
              JSON_EXTRACT(properties, '$.zones') as "zones",
              JSON_EXTRACT(properties, '$.isSpotVM') as "is_spot_vm",
              JSON_EXTRACT(properties, '$.hostGroupId') as "host_group_id",
              JSON_EXTRACT(properties, '$.useEphemeralOSDisk') as "use_ephemeral_os_disk",
              JSON_EXTRACT(properties, '$.spotRestoreTimeout') as "spot_restore_timeout",
              JSON_EXTRACT(properties, '$.evictionPolicy') as "eviction_policy",
              JSON_EXTRACT(properties, '$.vmImageResourceId') as "vm_image_resource_id",
              JSON_EXTRACT(properties, '$.subnetId') as "subnet_id",
              JSON_EXTRACT(properties, '$.vmSetupActions') as "vm_setup_actions",
              JSON_EXTRACT(properties, '$.securityType') as "security_type",
              JSON_EXTRACT(properties, '$.secureBootEnabled') as "secure_boot_enabled",
              JSON_EXTRACT(properties, '$.enableNodePublicIP') as "enable_node_public_ip",
              JSON_EXTRACT(properties, '$.enableNodePublicIPv6') as "enable_node_public_ipv6",
              JSON_EXTRACT(properties, '$.vmSharedGalleryImageId') as "vm_shared_gallery_image_id",
              JSON_EXTRACT(properties, '$.natGatewayId') as "nat_gateway_id",
              JSON_EXTRACT(properties, '$.natConfigurations') as "nat_configurations",
              JSON_EXTRACT(properties, '$.vmImagePlan') as "vm_image_plan",
              JSON_EXTRACT(properties, '$.serviceArtifactReferenceId') as "service_artifact_reference_id",
              JSON_EXTRACT(properties, '$.dscpConfigurationId') as "dscp_configuration_id",
              JSON_EXTRACT(properties, '$.additionalNetworkInterfaceConfigurations') as "additional_network_interface_configurations",
              JSON_EXTRACT(properties, '$.computerNamePrefix') as "computer_name_prefix",
              JSON_EXTRACT(properties, '$.vmApplications') as "vm_applications",
              subscriptionId,
              resourceGroupName,
              clusterName,
              nodeTypeName
              FROM azure.service_fabric_managed_clusters.node_types
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                tags as tags,
                systemData as system_data,
                sku as sku,
                json_extract_path_text(properties, '$.isPrimary') as "is_primary",
                json_extract_path_text(properties, '$.vmInstanceCount') as "vm_instance_count",
                json_extract_path_text(properties, '$.dataDiskSizeGB') as "data_disk_size_gb",
                json_extract_path_text(properties, '$.dataDiskType') as "data_disk_type",
                json_extract_path_text(properties, '$.dataDiskLetter') as "data_disk_letter",
                json_extract_path_text(properties, '$.placementProperties') as "placement_properties",
                json_extract_path_text(properties, '$.capacities') as "capacities",
                json_extract_path_text(properties, '$.applicationPorts') as "application_ports",
                json_extract_path_text(properties, '$.ephemeralPorts') as "ephemeral_ports",
                json_extract_path_text(properties, '$.vmSize') as "vm_size",
                json_extract_path_text(properties, '$.vmImagePublisher') as "vm_image_publisher",
                json_extract_path_text(properties, '$.vmImageOffer') as "vm_image_offer",
                json_extract_path_text(properties, '$.vmImageSku') as "vm_image_sku",
                json_extract_path_text(properties, '$.vmImageVersion') as "vm_image_version",
                json_extract_path_text(properties, '$.vmSecrets') as "vm_secrets",
                json_extract_path_text(properties, '$.vmExtensions') as "vm_extensions",
                json_extract_path_text(properties, '$.vmManagedIdentity') as "vm_managed_identity",
                json_extract_path_text(properties, '$.isStateless') as "is_stateless",
                json_extract_path_text(properties, '$.multiplePlacementGroups') as "multiple_placement_groups",
                json_extract_path_text(properties, '$.frontendConfigurations') as "frontend_configurations",
                json_extract_path_text(properties, '$.networkSecurityRules') as "network_security_rules",
                json_extract_path_text(properties, '$.additionalDataDisks') as "additional_data_disks",
                json_extract_path_text(properties, '$.enableEncryptionAtHost') as "enable_encryption_at_host",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.enableAcceleratedNetworking') as "enable_accelerated_networking",
                json_extract_path_text(properties, '$.useDefaultPublicLoadBalancer') as "use_default_public_load_balancer",
                json_extract_path_text(properties, '$.useTempDataDisk') as "use_temp_data_disk",
                json_extract_path_text(properties, '$.enableOverProvisioning') as "enable_over_provisioning",
                json_extract_path_text(properties, '$.zones') as "zones",
                json_extract_path_text(properties, '$.isSpotVM') as "is_spot_vm",
                json_extract_path_text(properties, '$.hostGroupId') as "host_group_id",
                json_extract_path_text(properties, '$.useEphemeralOSDisk') as "use_ephemeral_os_disk",
                json_extract_path_text(properties, '$.spotRestoreTimeout') as "spot_restore_timeout",
                json_extract_path_text(properties, '$.evictionPolicy') as "eviction_policy",
                json_extract_path_text(properties, '$.vmImageResourceId') as "vm_image_resource_id",
                json_extract_path_text(properties, '$.subnetId') as "subnet_id",
                json_extract_path_text(properties, '$.vmSetupActions') as "vm_setup_actions",
                json_extract_path_text(properties, '$.securityType') as "security_type",
                json_extract_path_text(properties, '$.secureBootEnabled') as "secure_boot_enabled",
                json_extract_path_text(properties, '$.enableNodePublicIP') as "enable_node_public_ip",
                json_extract_path_text(properties, '$.enableNodePublicIPv6') as "enable_node_public_ipv6",
                json_extract_path_text(properties, '$.vmSharedGalleryImageId') as "vm_shared_gallery_image_id",
                json_extract_path_text(properties, '$.natGatewayId') as "nat_gateway_id",
                json_extract_path_text(properties, '$.natConfigurations') as "nat_configurations",
                json_extract_path_text(properties, '$.vmImagePlan') as "vm_image_plan",
                json_extract_path_text(properties, '$.serviceArtifactReferenceId') as "service_artifact_reference_id",
                json_extract_path_text(properties, '$.dscpConfigurationId') as "dscp_configuration_id",
                json_extract_path_text(properties, '$.additionalNetworkInterfaceConfigurations') as "additional_network_interface_configurations",
                json_extract_path_text(properties, '$.computerNamePrefix') as "computer_name_prefix",
                json_extract_path_text(properties, '$.vmApplications') as "vm_applications",
                subscriptionId,
                resourceGroupName,
                clusterName,
                nodeTypeName
                FROM azure.service_fabric_managed_clusters.node_types
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND clusterName = 'replace-me';
    vw_managed_clusters:
      id: azure.service_fabric_managed_clusters.vw_managed_clusters
      name: vw_managed_clusters
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              etag as etag,
              systemData as system_data,
              sku as sku,
              JSON_EXTRACT(properties, '$.dnsName') as "dns_name",
              JSON_EXTRACT(properties, '$.fqdn') as "fqdn",
              JSON_EXTRACT(properties, '$.ipv4Address') as "ipv4_address",
              JSON_EXTRACT(properties, '$.clusterId') as "cluster_id",
              JSON_EXTRACT(properties, '$.clusterState') as "cluster_state",
              JSON_EXTRACT(properties, '$.clusterCertificateThumbprints') as "cluster_certificate_thumbprints",
              JSON_EXTRACT(properties, '$.clientConnectionPort') as "client_connection_port",
              JSON_EXTRACT(properties, '$.httpGatewayConnectionPort') as "http_gateway_connection_port",
              JSON_EXTRACT(properties, '$.adminUserName') as "admin_user_name",
              JSON_EXTRACT(properties, '$.adminPassword') as "admin_password",
              JSON_EXTRACT(properties, '$.loadBalancingRules') as "load_balancing_rules",
              JSON_EXTRACT(properties, '$.allowRdpAccess') as "allow_rdp_access",
              JSON_EXTRACT(properties, '$.networkSecurityRules') as "network_security_rules",
              JSON_EXTRACT(properties, '$.clients') as "clients",
              JSON_EXTRACT(properties, '$.azureActiveDirectory') as "azure_active_directory",
              JSON_EXTRACT(properties, '$.fabricSettings') as "fabric_settings",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.clusterCodeVersion') as "cluster_code_version",
              JSON_EXTRACT(properties, '$.clusterUpgradeMode') as "cluster_upgrade_mode",
              JSON_EXTRACT(properties, '$.clusterUpgradeCadence') as "cluster_upgrade_cadence",
              JSON_EXTRACT(properties, '$.addonFeatures') as "addon_features",
              JSON_EXTRACT(properties, '$.enableAutoOSUpgrade') as "enable_auto_os_upgrade",
              JSON_EXTRACT(properties, '$.zonalResiliency') as "zonal_resiliency",
              JSON_EXTRACT(properties, '$.applicationTypeVersionsCleanupPolicy') as "application_type_versions_cleanup_policy",
              JSON_EXTRACT(properties, '$.enableIpv6') as "enable_ipv6",
              JSON_EXTRACT(properties, '$.subnetId') as "subnet_id",
              JSON_EXTRACT(properties, '$.ipTags') as "ip_tags",
              JSON_EXTRACT(properties, '$.ipv6Address') as "ipv6_address",
              JSON_EXTRACT(properties, '$.enableServicePublicIP') as "enable_service_public_ip",
              JSON_EXTRACT(properties, '$.auxiliarySubnets') as "auxiliary_subnets",
              JSON_EXTRACT(properties, '$.serviceEndpoints') as "service_endpoints",
              JSON_EXTRACT(properties, '$.zonalUpdateMode') as "zonal_update_mode",
              JSON_EXTRACT(properties, '$.useCustomVnet') as "use_custom_vnet",
              JSON_EXTRACT(properties, '$.publicIPPrefixId') as "public_ip_prefix_id",
              JSON_EXTRACT(properties, '$.publicIPv6PrefixId') as "public_ipv6_prefix_id",
              JSON_EXTRACT(properties, '$.ddosProtectionPlanId') as "ddos_protection_plan_id",
              JSON_EXTRACT(properties, '$.upgradeDescription') as "upgrade_description",
              JSON_EXTRACT(properties, '$.httpGatewayTokenAuthConnectionPort') as "http_gateway_token_auth_connection_port",
              JSON_EXTRACT(properties, '$.enableHttpGatewayExclusiveAuthMode') as "enable_http_gateway_exclusive_auth_mode",
              JSON_EXTRACT(properties, '$.autoGeneratedDomainNameLabelScope') as "auto_generated_domain_name_label_scope",
              JSON_EXTRACT(properties, '$.customFqdn') as "custom_fqdn",
              subscriptionId,
              resourceGroupName,
              clusterName
              FROM azure.service_fabric_managed_clusters.managed_clusters
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                etag as etag,
                systemData as system_data,
                sku as sku,
                json_extract_path_text(properties, '$.dnsName') as "dns_name",
                json_extract_path_text(properties, '$.fqdn') as "fqdn",
                json_extract_path_text(properties, '$.ipv4Address') as "ipv4_address",
                json_extract_path_text(properties, '$.clusterId') as "cluster_id",
                json_extract_path_text(properties, '$.clusterState') as "cluster_state",
                json_extract_path_text(properties, '$.clusterCertificateThumbprints') as "cluster_certificate_thumbprints",
                json_extract_path_text(properties, '$.clientConnectionPort') as "client_connection_port",
                json_extract_path_text(properties, '$.httpGatewayConnectionPort') as "http_gateway_connection_port",
                json_extract_path_text(properties, '$.adminUserName') as "admin_user_name",
                json_extract_path_text(properties, '$.adminPassword') as "admin_password",
                json_extract_path_text(properties, '$.loadBalancingRules') as "load_balancing_rules",
                json_extract_path_text(properties, '$.allowRdpAccess') as "allow_rdp_access",
                json_extract_path_text(properties, '$.networkSecurityRules') as "network_security_rules",
                json_extract_path_text(properties, '$.clients') as "clients",
                json_extract_path_text(properties, '$.azureActiveDirectory') as "azure_active_directory",
                json_extract_path_text(properties, '$.fabricSettings') as "fabric_settings",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.clusterCodeVersion') as "cluster_code_version",
                json_extract_path_text(properties, '$.clusterUpgradeMode') as "cluster_upgrade_mode",
                json_extract_path_text(properties, '$.clusterUpgradeCadence') as "cluster_upgrade_cadence",
                json_extract_path_text(properties, '$.addonFeatures') as "addon_features",
                json_extract_path_text(properties, '$.enableAutoOSUpgrade') as "enable_auto_os_upgrade",
                json_extract_path_text(properties, '$.zonalResiliency') as "zonal_resiliency",
                json_extract_path_text(properties, '$.applicationTypeVersionsCleanupPolicy') as "application_type_versions_cleanup_policy",
                json_extract_path_text(properties, '$.enableIpv6') as "enable_ipv6",
                json_extract_path_text(properties, '$.subnetId') as "subnet_id",
                json_extract_path_text(properties, '$.ipTags') as "ip_tags",
                json_extract_path_text(properties, '$.ipv6Address') as "ipv6_address",
                json_extract_path_text(properties, '$.enableServicePublicIP') as "enable_service_public_ip",
                json_extract_path_text(properties, '$.auxiliarySubnets') as "auxiliary_subnets",
                json_extract_path_text(properties, '$.serviceEndpoints') as "service_endpoints",
                json_extract_path_text(properties, '$.zonalUpdateMode') as "zonal_update_mode",
                json_extract_path_text(properties, '$.useCustomVnet') as "use_custom_vnet",
                json_extract_path_text(properties, '$.publicIPPrefixId') as "public_ip_prefix_id",
                json_extract_path_text(properties, '$.publicIPv6PrefixId') as "public_ipv6_prefix_id",
                json_extract_path_text(properties, '$.ddosProtectionPlanId') as "ddos_protection_plan_id",
                json_extract_path_text(properties, '$.upgradeDescription') as "upgrade_description",
                json_extract_path_text(properties, '$.httpGatewayTokenAuthConnectionPort') as "http_gateway_token_auth_connection_port",
                json_extract_path_text(properties, '$.enableHttpGatewayExclusiveAuthMode') as "enable_http_gateway_exclusive_auth_mode",
                json_extract_path_text(properties, '$.autoGeneratedDomainNameLabelScope') as "auto_generated_domain_name_label_scope",
                json_extract_path_text(properties, '$.customFqdn') as "custom_fqdn",
                subscriptionId,
                resourceGroupName,
                clusterName
                FROM azure.service_fabric_managed_clusters.managed_clusters
                WHERE subscriptionId = 'replace-me';
    vw_managed_cluster_versions:
      id: azure.service_fabric_managed_clusters.vw_managed_cluster_versions
      name: vw_managed_cluster_versions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.clusterCodeVersion') as "cluster_code_version",
              JSON_EXTRACT(properties, '$.supportExpiryUtc') as "support_expiry_utc",
              JSON_EXTRACT(properties, '$.osType') as "os_type",
              subscriptionId,
              location,
              environment,
              clusterVersion
              FROM azure.service_fabric_managed_clusters.managed_cluster_versions
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.clusterCodeVersion') as "cluster_code_version",
                json_extract_path_text(properties, '$.supportExpiryUtc') as "support_expiry_utc",
                json_extract_path_text(properties, '$.osType') as "os_type",
                subscriptionId,
                location,
                environment,
                clusterVersion
                FROM azure.service_fabric_managed_clusters.managed_cluster_versions
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
    vw_managed_unsupported_vm_sizes:
      id: azure.service_fabric_managed_clusters.vw_managed_unsupported_vm_sizes
      name: vw_managed_unsupported_vm_sizes
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.size') as "size",
              subscriptionId,
              location,
              vmSize
              FROM azure.service_fabric_managed_clusters.managed_unsupported_vm_sizes
              WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.size') as "size",
                subscriptionId,
                location,
                vmSize
                FROM azure.service_fabric_managed_clusters.managed_unsupported_vm_sizes
                WHERE subscriptionId = 'replace-me' AND location = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes/{applicationTypeName}?api-version=2024-06-01-preview:
    get:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_Get
      summary: Gets a Service Fabric managed application type name resource.
      description: Get a Service Fabric application type name resource created or in the process of being created in the Service Fabric managed cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_CreateOrUpdate
      summary: Creates or updates a Service Fabric managed application type name resource.
      description: Create or update a Service Fabric managed application type name resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application type name resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTypeResource'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_Update
      summary: Updates the tags of an application type resource of a given managed cluster.
      description: Updates the tags of an application type resource of a given managed cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application type resource updated tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTypeUpdateParameters'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_Delete
      summary: Deletes a Service Fabric managed application type name resource.
      description: Delete a Service Fabric managed application type name resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes?api-version=2024-06-01-preview:
    get:
      tags:
        - ApplicationType
      operationId: ApplicationTypes_List
      summary: Gets the list of application type name resources created in the specified Service Fabric managed cluster resource.
      description: Gets all application type name resources created or in the process of being created in the Service Fabric managed cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}?api-version=2024-06-01-preview:
    get:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_Get
      summary: Gets a Service Fabric managed application type version resource.
      description: Get a Service Fabric managed application type version resource created or in the process of being created in the Service Fabric managed application type name resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_CreateOrUpdate
      summary: Creates or updates a Service Fabric managed application type version resource.
      description: Create or update a Service Fabric managed application type version resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application type version resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTypeVersionResource'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResource'
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_Update
      summary: Updates the tags of an application type version resource of a given managed cluster.
      description: Updates the tags of an application type version resource of a given managed cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application type version resource updated tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationTypeVersionUpdateParameters'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_Delete
      summary: Deletes a Service Fabric managed application type version resource.
      description: Delete a Service Fabric managed application type version resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applicationTypes/{applicationTypeName}/versions?api-version=2024-06-01-preview:
    get:
      tags:
        - ApplicationTypeVersion
      operationId: ApplicationTypeVersions_ListByApplicationTypes
      summary: Gets the list of application type version resources created in the specified Service Fabric managed application type name resource.
      description: Gets all application type version resources created or in the process of being created in the Service Fabric managed application type name resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationTypeName'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTypeVersionResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/fetchUpgradeStatus?api-version=2024-06-01-preview:
    post:
      tags:
        - Application
      operationId: Applications_ReadUpgrade
      summary: Get the status of the latest application upgrade.
      description: Get the status of the latest application upgrade. It will query the cluster to find the status of the latest application upgrade.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '202':
          description: The operation was accepted.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/startRollback?api-version=2024-06-01-preview:
    post:
      tags:
        - Application
      operationId: Applications_StartRollback
      summary: Send a request to start a rollback of the current application upgrade.
      description: Send a request to start a rollback of the current application upgrade. This will start rolling back the application to the previous version.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '202':
          description: The operation was accepted.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applications/{applicationName}/resumeUpgrade?api-version=2024-06-01-preview:
    post:
      tags:
        - Application
      operationId: Applications_ResumeUpgrade
      summary: Send a request to resume the current application upgrade.
      description: Send a request to resume the current application upgrade. This will resume the application upgrade from where it was paused.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters for resuming an application upgrade.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuntimeResumeApplicationUpgradeParameters'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '202':
          description: The operation was accepted.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications/{applicationName}?api-version=2024-06-01-preview:
    get:
      tags:
        - Application
      operationId: Applications_Get
      summary: Gets a Service Fabric managed application resource.
      description: Get a Service Fabric managed application resource created or in the process of being created in the Service Fabric cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - Application
      operationId: Applications_CreateOrUpdate
      summary: Creates or updates a Service Fabric managed application resource.
      description: Create or update a Service Fabric managed application resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResource'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - Application
      operationId: Applications_Update
      summary: Updates the tags of an application resource of a given managed cluster.
      description: Updates the tags of an application resource of a given managed cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The application resource updated tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateParameters'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - Application
      operationId: Applications_Delete
      summary: Deletes a Service Fabric managed application resource.
      description: Delete a Service Fabric managed application resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications?api-version=2024-06-01-preview:
    get:
      tags:
        - Application
      operationId: Applications_List
      summary: Gets the list of managed application resources created in the specified Service Fabric cluster resource.
      description: Gets all managed application resources created or in the process of being created in the Service Fabric cluster resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications/{applicationName}/services/{serviceName}?api-version=2024-06-01-preview:
    get:
      tags:
        - Service
      operationId: Services_Get
      summary: Gets a Service Fabric managed service resource.
      description: Get a Service Fabric service resource created or in the process of being created in the Service Fabric managed application resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - Service
      operationId: Services_CreateOrUpdate
      summary: Creates or updates a Service Fabric managed service resource.
      description: Create or update a Service Fabric managed service resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The service resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResource'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - Services
      operationId: Services_Update
      summary: Updates the tags of a service resource of a given managed cluster.
      description: Updates the tags of a service resource of a given managed cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The service resource updated tags.
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceUpdateParameters'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - Service
      operationId: Services_Delete
      summary: Deletes a Service Fabric managed service resource.
      description: Delete a Service Fabric managed service resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/serviceName'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedclusters/{clusterName}/applications/{applicationName}/services?api-version=2024-06-01-preview:
    get:
      tags:
        - Service
      operationId: Services_ListByApplications
      summary: Gets the list of service resources created in the specified Service Fabric managed application resource.
      description: Gets all service resources created or in the process of being created in the Service Fabric managed application resource.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/applicationName'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceList'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes?api-version=2024-06-01-preview:
    get:
      operationId: NodeTypes_ListByManagedClusters
      summary: Gets the list of Node types of the specified managed cluster.
      description: Gets all Node types of the specified managed cluster.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
      tags:
        - NodeType
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeTypeListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/restart?api-version=2024-06-01-preview:
    post:
      tags:
        - NodeType
      operationId: NodeTypes_Restart
      summary: Restarts one or more nodes on the node type.
      description: Restarts one or more nodes on the node type. It will disable the fabric nodes, trigger a restart on the VMs and activate the nodes back again.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: parameters for restart action.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeTypeActionParameters'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/reimage?api-version=2024-06-01-preview:
    post:
      tags:
        - NodeType
      operationId: NodeTypes_Reimage
      summary: Reimages one or more nodes on the node type.
      description: Reimages one or more nodes on the node type. It will disable the fabric nodes, trigger a reimage on the VMs and activate the nodes back again.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: parameters for reimage action.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeTypeActionParameters'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/deleteNode?api-version=2024-06-01-preview:
    post:
      tags:
        - NodeType
      operationId: NodeTypesNode_Delete
      summary: Deletes one or more nodes on the node type.
      description: Deletes one or more nodes on the node type. It will disable the fabric nodes, trigger a delete on the VMs and removes the state from the cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: parameters for delete action.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeTypeActionParameters'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-original-operationId: NodeTypes_DeleteNode
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}/skus?api-version=2024-06-01-preview:
    get:
      tags:
        - NodeType
      operationId: NodeTypeSkus_List
      summary: Gets a Service Fabric node type SKUs.
      description: Get a Service Fabric node type supported SKUs.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeTypeListSkuResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/nodeTypes/{nodeTypeName}?api-version=2024-06-01-preview:
    get:
      tags:
        - NodeType
      operationId: NodeTypes_Get
      summary: Gets a Service Fabric node type.
      description: Get a Service Fabric node type of a given managed cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - NodeType
      operationId: NodeTypes_CreateOrUpdate
      summary: Creates or updates a Service Fabric node type.
      description: Create or update a Service Fabric node type of a given managed cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The node type resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeType'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - NodeType
      operationId: NodeTypes_Update
      summary: Update the tags of a node type resource of a given managed cluster.
      description: Update the configuration of a node type of a given managed cluster, only updating tags.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      requestBody:
        description: The parameters to update the node type configuration.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeTypeUpdateParameters'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeType'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - NodeType
      operationId: NodeTypes_Delete
      summary: Deletes a Service Fabric node type.
      description: Delete a Service Fabric node type of a given managed cluster.
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/nodeTypeNameParameter'
        - $ref: '#/components/parameters/api-version'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters?api-version=2024-06-01-preview:
    get:
      operationId: ManagedClusters_ListByResourceGroup
      summary: Gets the list of Service Fabric cluster resources created in the specified resource group.
      description: Gets all Service Fabric cluster resources created or in the process of being created in the resource group.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - ManagedCluster
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/managedClusters?api-version=2024-06-01-preview:
    get:
      operationId: ManagedClusters_ListBySubscription
      summary: Gets the list of Service Fabric cluster resources created in the specified subscription.
      description: Gets all Service Fabric cluster resources created or in the process of being created in the subscription.
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - ManagedCluster
      x-ms-pageable:
        nextLinkName: nextLink
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}?api-version=2024-06-01-preview:
    get:
      tags:
        - ManagedCluster
      operationId: ManagedClusters_Get
      summary: Gets a Service Fabric managed cluster resource.
      description: Get a Service Fabric managed cluster resource created or in the process of being created in the specified resource group.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    put:
      tags:
        - ManagedCluster
      operationId: ManagedClusters_CreateOrUpdate
      summary: Creates or updates a Service Fabric managed cluster resource.
      description: Create or update a Service Fabric managed cluster resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      requestBody:
        description: The cluster resource.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedCluster'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    patch:
      tags:
        - ManagedCluster
      operationId: ManagedClusters_Update
      summary: Updates the tags of of a Service Fabric managed cluster resource.
      description: Update the tags of of a Service Fabric managed cluster resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      requestBody:
        description: The managed cluster resource updated tags.
        required: true
        x-ms-requestBody-name: parameters
        x-ms-parameter-location: method
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedClusterUpdateParameters'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
        - ManagedCluster
      operationId: ManagedClusters_Delete
      summary: Deletes a Service Fabric managed cluster resource.
      description: Delete a Service Fabric managed cluster resource with the specified name.
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      responses:
        '200':
          description: The operation completed successfully.
        '202':
          description: The request was accepted and the operation will complete asynchronously.
          headers:
            Azure-AsyncOperation:
              schema:
                type: string
              description: The URL to get the status of an ongoing long-running operation.
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        '204':
          description: The resource was not found.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getazresiliencystatus?api-version=2024-06-01-preview:
    post:
      tags:
        - managedAzResiliencyStatus
      summary: Action to get Az Resiliency Status of all the Base resources constituting Service Fabric Managed Clusters.
      description: Action to get Az Resiliency Status of all the Base resources constituting Service Fabric Managed Clusters.
      operationId: managedAzResiliencyStatus_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedAzResiliencyStatus'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/getMaintenanceWindowStatus?api-version=2024-06-01-preview:
    post:
      tags:
        - managedMaintenanceWindowStatus
      summary: Action to get Maintenance Window Status of the Service Fabric Managed Clusters.
      description: Action to get Maintenance Window Status of the Service Fabric Managed Clusters.
      operationId: managedMaintenanceWindowStatus_Get
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedMaintenanceWindowStatus'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/managedClusters/{clusterName}/applyMaintenanceWindow?api-version=2024-06-01-preview:
    post:
      tags:
        - managedApplyMaintenanceWindow
      summary: Action to Apply Maintenance window on the Service Fabric Managed Clusters, right now. Any pending update will be applied.
      description: Action to Apply Maintenance window on the Service Fabric Managed Clusters, right now. Any pending update will be applied.
      operationId: ManagedClusters_ApplyMaintenanceWindow
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-original-operationId: managedApplyMaintenanceWindow_Post
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions/{clusterVersion}?api-version=2024-06-01-preview:
    get:
      operationId: ManagedClusterVersion_Get
      summary: Gets information about a Service Fabric managed cluster code version available in the specified location.
      description: Gets information about an available Service Fabric managed cluster code version.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/clusterVersion'
      tags:
        - ManagedClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterCodeVersionResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions/{clusterVersion}?api-version=2024-06-01-preview:
    get:
      operationId: ManagedClusterVersion_GetByEnvironment
      summary: Gets information about a Service Fabric cluster code version available for the specified environment.
      description: Gets information about an available Service Fabric cluster code version by environment.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/clusterVersion'
      tags:
        - ManagedClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterCodeVersionResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterVersions?api-version=2024-06-01-preview:
    get:
      operationId: ManagedClusterVersion_List
      summary: Gets the list of Service Fabric cluster code versions available for the specified location.
      description: Gets all available code versions for Service Fabric cluster resources by location.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - ManagedClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterCodeVersionListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/managedClusterVersions?api-version=2024-06-01-preview:
    get:
      operationId: ManagedClusterVersion_ListByEnvironment
      summary: Gets the list of Service Fabric cluster code versions available for the specified environment.
      description: Gets all available code versions for Service Fabric cluster resources by environment.
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      tags:
        - ManagedClusterVersion
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClusterCodeVersionListResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes?api-version=2024-06-01-preview:
    get:
      tags:
        - managedVMSizes
      summary: Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
      description: Get the lists of unsupported vm sizes for Service Fabric Managed Clusters.
      operationId: managedUnsupportedVMSizes_List
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedVMSizesResult'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedUnsupportedVMSizes/{vmSize}?api-version=2024-06-01-preview:
    get:
      tags:
        - managedVMSizes
      summary: Get unsupported vm size for Service Fabric Managed Clusters.
      description: Get unsupported vm size for Service Fabric Managed Clusters.
      operationId: managedUnsupportedVMSizes_Get
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/vmSize'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedVMSize'
        default:
          description: The detailed error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperations/{operationId}?api-version=2024-06-01-preview:
    get:
      tags:
        - LongRunningOperations
      summary: Get long running operation status.
      description: Get long running operation status.
      operationId: OperationStatus_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/operationId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongRunningOperationResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/managedClusterOperationResults/{operationId}?api-version=2024-06-01-preview:
    get:
      tags:
        - LongRunningOperations
      summary: Get long running operation result.
      description: Get long running operation result.
      operationId: OperationResults_Get
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/operationId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK. The request has succeeded.
        '202':
          description: Accepted. The request is still running.
          headers:
            Location:
              schema:
                type: string
              description: The URL to get the status of a completed long-running operation.
        '204':
          description: No Content. For Delete operation results.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /providers/Microsoft.ServiceFabric/operations?api-version=2024-06-01-preview:
    get:
      tags:
        - Operations
      summary: Lists all of the available Service Fabric resource provider API operations.
      description: Get the list of available Service Fabric resource provider API operations.
      operationId: Operations_List
      parameters:
        - name: api-version
          in: query
          description: The version of the Service Fabric resource provider API
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-ms-pageable:
        nextLinkName: nextLink
