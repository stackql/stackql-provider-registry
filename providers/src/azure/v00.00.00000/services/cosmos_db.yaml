openapi: 3.0.0
servers:
  - url: https://management.azure.com/
info:
  title: Azure Cosmos DB
  description: Azure Cosmos DB is a globally distributed multi-model database that supports the document, graph, and key-value data models.
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  version: 2024-10-15-stackql-generated
security:
  - azure_auth:
      - user_impersonation
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  parameters:
    SubscriptionIdParameter:
      name: subscriptionId
      in: path
      description: The ID of the target subscription. The value must be an UUID.
      required: true
      schema:
        format: uuid
        type: string
    ApiVersionParameter:
      name: api-version
      in: query
      description: The API version to use for this operation.
      required: false
      schema:
        minLength: 1
        type: string
    ResourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: The name of the resource group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    roleDefinitionIdParameter:
      name: roleDefinitionId
      in: path
      description: The GUID for the Role Definition.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    roleAssignmentIdParameter:
      name: roleAssignmentId
      in: path
      description: The GUID for the Role Assignment.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    accountNameParameter:
      name: accountName
      in: path
      description: Cosmos DB database account name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 50
        pattern: ^[a-z0-9]+(-[a-z0-9]+)*
        type: string
    serviceNameParameter:
      name: serviceName
      in: path
      description: Cosmos DB service name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 50
        type: string
    PrivateEndpointConnectionNameParameter:
      name: privateEndpointConnectionName
      in: path
      description: The name of the private endpoint connection.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    chaosFault:
      name: chaosFault
      in: path
      description: The name of the ChaosFault.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    restorableSqlDatabaseRidParameter:
      name: restorableSqlDatabaseRid
      in: query
      description: The resource ID of the SQL database.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableMongodbDatabaseRidParameter:
      name: restorableMongodbDatabaseRid
      in: query
      description: The resource ID of the MongoDB database.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restoreLocationParameter:
      name: restoreLocation
      in: query
      description: The location where the restorable resources are located.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restoreTimestampInUtcParameter:
      name: restoreTimestampInUtc
      in: query
      description: The timestamp when the restorable resources existed.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableSqlContainersEventFeedStartTime:
      name: startTime
      in: query
      description: Restorable Sql containers event feed start time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableSqlContainersEventFeedEndTime:
      name: endTime
      in: query
      description: Restorable Sql containers event feed end time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableMongoDBCollectionsEventFeedStartTime:
      name: startTime
      in: query
      description: Restorable MongoDB collections event feed start time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableMongoDBCollectionsEventFeedEndTime:
      name: endTime
      in: query
      description: Restorable MongoDB collections event feed end time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableGremlinGraphsEventFeedStartTime:
      name: startTime
      in: query
      description: Restorable Gremlin graphs event feed start time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableGremlinGraphsEventFeedEndTime:
      name: endTime
      in: query
      description: Restorable Gremlin graphs event feed end time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableTablesEventFeedStartTime:
      name: startTime
      in: query
      description: Restorable Tables event feed start time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restorableTablesEventFeedEndTime:
      name: endTime
      in: query
      description: Restorable Tables event feed end time.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restoreStartTime:
      name: startTime
      in: query
      description: The snapshot create timestamp after which snapshots need to be listed.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    restoreEndTime:
      name: endTime
      in: query
      description: The snapshot create timestamp before which snapshots need to be listed.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    locationParameter:
      name: location
      in: path
      description: Cosmos DB region, with spaces between words and each word capitalized.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    instanceIdParameter:
      name: instanceId
      in: path
      description: The instanceId GUID of a restorable database account.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    restorableGremlinDatabaseRidParameter:
      name: restorableGremlinDatabaseRid
      in: query
      description: The resource ID of the Gremlin database.
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    OperationIdParameter:
      name: operationId
      in: path
      description: The ID of an ongoing async operation.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    LocationParameter:
      name: location
      in: path
      description: The name of the Azure region.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    NotebookWorkspaceNameParameter:
      name: notebookWorkspaceName
      in: path
      description: The name of the notebook workspace resource.
      required: true
      x-ms-parameter-location: method
      schema:
        enum:
          - default
        x-ms-enum:
          name: NotebookWorkspaceName
          modelAsString: true
        type: string
    ManagementGroupNameParameter:
      name: managementGroupName
      in: path
      description: The name of the management group. The name is case insensitive.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 90
        type: string
    ScopeParameter:
      name: scope
      in: path
      description: The scope at which the operation is performed.
      required: true
      x-ms-skip-url-encoding: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        type: string
    TenantIdParameter:
      name: tenantId
      in: path
      description: The Azure tenant ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)
      required: true
      x-ms-parameter-location: method
      schema:
        format: uuid
        type: string
    If-Match:
      name: ifMatch
      in: header
      description: The If-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    If-None-Match:
      name: ifNoneMatch
      in: header
      description: The If-None-Match header that makes a request conditional.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    NetworkSecurityPerimeterConfigurationNameParameter:
      name: networkSecurityPerimeterConfigurationName
      in: path
      description: The name for a network security perimeter configuration
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 512
        type: string
    ThroughputPoolNameParameter:
      name: throughputPoolName
      in: path
      description: Cosmos DB Throughput Pool name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 50
        pattern: ^[a-z0-9]+(-[a-z0-9]+)*
        type: string
    ThroughputPoolAccountNameParameter:
      name: throughputPoolAccountName
      in: path
      description: Cosmos DB global database account in a Throughput Pool
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 3
        maxLength: 50
        pattern: ^[a-z0-9]+(-[a-z0-9]+)*
        type: string
    JobNameParameter:
      name: jobName
      in: path
      description: Name of the Data Transfer Job
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    resourceGroupNameParameter:
      name: resourceGroupName
      in: path
      description: Name of an Azure resource group.
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^[-\w\._\(\)]+$
        minLength: 1
        maxLength: 90
        type: string
    filterParameter:
      name: $filter
      in: query
      description: An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    usageFilterParameter:
      name: $filter
      in: query
      description: An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names).
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    databaseRidParameter:
      name: databaseRid
      in: path
      description: Cosmos DB database rid.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    collectionRidParameter:
      name: collectionRid
      in: path
      description: Cosmos DB collection rid.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    graphResourceNameParameter:
      name: graphName
      in: path
      description: Cosmos DB graph resource name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    databaseNameParameter:
      name: databaseName
      in: path
      description: Cosmos DB database name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    clientEncryptionKeyNameParameter:
      name: clientEncryptionKeyName
      in: path
      description: Cosmos DB ClientEncryptionKey name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    containerNameParameter:
      name: containerName
      in: path
      description: Cosmos DB container name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    storedProcedureNameParameter:
      name: storedProcedureName
      in: path
      description: Cosmos DB storedProcedure name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    userDefinedFunctionNameParameter:
      name: userDefinedFunctionName
      in: path
      description: Cosmos DB userDefinedFunction name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    triggerNameParameter:
      name: triggerName
      in: path
      description: Cosmos DB trigger name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    tableNameParameter:
      name: tableName
      in: path
      description: Cosmos DB table name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    collectionNameParameter:
      name: collectionName
      in: path
      description: Cosmos DB collection name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    keyspaceNameParameter:
      name: keyspaceName
      in: path
      description: Cosmos DB keyspace name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    graphNameParameter:
      name: graphName
      in: path
      description: Cosmos DB graph name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    regionParameter:
      name: region
      in: path
      description: Cosmos DB region, with spaces between words and each word capitalized.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    sourceRegionParameter:
      name: sourceRegion
      in: path
      description: Source region from which data is written. Cosmos DB region, with spaces between words and each word capitalized.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    targetRegionParameter:
      name: targetRegion
      in: path
      description: Target region to which data is written. Cosmos DB region, with spaces between words and each word capitalized.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    partitionKeyRangeIdParameter:
      name: partitionKeyRangeId
      in: path
      description: Partition Key Range Id for which to get data.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    viewNameParameter:
      name: viewName
      in: path
      description: Cosmos DB view name.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    mongoRoleDefinitionIdParameter:
      name: mongoRoleDefinitionId
      in: path
      description: The ID for the Role Definition {dbName.roleName}.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    mongoUserDefinitionIdParameter:
      name: mongoUserDefinitionId
      in: path
      description: The ID for the User Definition {dbName.userName}.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    networkSecurityPerimeterConfigurationName:
      name: networkSecurityPerimeterConfigurationName
      in: path
      description: The name for Network Security Perimeter configuration
      required: true
      x-ms-parameter-location: method
      schema:
        pattern: ^.*$
        type: string
    clusterNameParameter:
      name: clusterName
      in: path
      description: Managed Cassandra cluster name.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$
        type: string
    commandId:
      name: commandId
      in: path
      description: Managed Cassandra cluster command id.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$
        type: string
    forceDeallocate:
      name: x-ms-force-deallocate
      in: header
      description: Force to deallocate a cluster of Cluster Type Production. Force to deallocate a cluster of Cluster Type Production might cause data loss
      required: false
      x-ms-parameter-location: method
      schema:
        type: string
    dataCenterNameParameter:
      name: dataCenterName
      in: path
      description: Data center name in a managed Cassandra cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 100
        pattern: ^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$
        type: string
    backupNameParameter:
      name: backupId
      in: path
      description: Id of a restorable backup of a Cassandra cluster.
      required: true
      x-ms-parameter-location: method
      schema:
        minLength: 1
        maxLength: 15
        pattern: ^[0-9]+$
        type: string
    GroupNameParameter:
      name: groupName
      in: path
      description: The name of the private link resource.
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  schemas:
    Resource:
      title: Resource
      description: Common fields that are returned in the response for all Azure Resource Manager resources
      type: object
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      x-ms-azure-resource: true
    AzureEntityResource:
      x-ms-client-name: AzureEntityResource
      title: Entity Resource
      description: The resource model definition for an Azure Resource Manager resource with an etag.
      properties:
        etag:
          type: string
          readOnly: true
          description: Resource Etag.
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    TrackedResource:
      title: Tracked Resource
      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'
      required:
        - location
      properties:
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ProxyResource:
      title: Proxy Resource
      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location
      properties:
        id:
          readOnly: true
          type: string
          format: arm-id
          description: Fully qualified resource ID for the resource. E.g. "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        name:
          readOnly: true
          type: string
          description: The name of the resource
        type:
          readOnly: true
          type: string
          description: The type of the resource. E.g. "Microsoft.Compute/virtualMachines" or "Microsoft.Storage/storageAccounts"
        systemData:
          readOnly: true
          description: Azure Resource Manager metadata containing createdBy and modifiedBy information.
          $ref: '#/components/schemas/systemData'
      type: object
    ResourceModelWithAllowedPropertySet:
      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.
      x-ms-azure-resource: true
      properties:
        managedBy:
          type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.
        kind:
          type: string
          x-ms-mutability:
            - read
            - create
          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type. E.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.
          pattern: ^[-\w\._,\(\)]+$
        etag:
          readOnly: true
          type: string
          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '
        identity:
          allOf:
            - $ref: '#/components/schemas/Identity'
        sku:
          allOf:
            - $ref: '#/components/schemas/Sku'
        plan:
          allOf:
            - $ref: '#/components/schemas/Plan'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    Sku:
      description: The resource model definition representing SKU
      type: object
      properties:
        name:
          type: string
          description: The name of the SKU. E.g. P3. It is typically a letter+number code
        tier:
          $ref: '#/components/schemas/SkuTier'
        size:
          type: string
          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '
        family:
          type: string
          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.
        capacity:
          type: integer
          format: int32
          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
      required:
        - name
    Identity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          format: uuid
          description: The principal ID of resource identity. The value must be an UUID.
        tenantId:
          readOnly: true
          type: string
          format: uuid
          description: The tenant ID of resource. The value must be an UUID.
        type:
          type: string
          description: The identity type.
          enum:
            - SystemAssigned
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
    Plan:
      type: object
      properties:
        name:
          type: string
          description: A user defined name of the 3rd Party Artifact that is being procured.
        publisher:
          type: string
          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic
        product:
          type: string
          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '
        promotionCode:
          type: string
          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.
        version:
          type: string
          description: The version of the desired product/artifact.
      description: Plan for the resource.
      required:
        - name
        - publisher
        - product
    ErrorResponse:
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message indicating why the operation failed.
          type: string
      description: Error Response.
      type: object
    ErrorAdditionalInfo:
      type: object
      properties:
        type:
          readOnly: true
          type: string
          description: The additional info type.
        info:
          readOnly: true
          type: object
          description: The additional info.
      description: The resource management error additional info.
    Operation:
      description: REST API operation
      type: object
      properties:
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
        display:
          description: The object that represents the operation.
          type: object
          properties:
            Provider:
              description: 'Service provider: Microsoft.ResourceProvider'
              type: string
            Resource:
              description: 'Resource on which the operation is performed: Profile, endpoint, etc.'
              type: string
            Operation:
              description: 'Operation type: Read, write, delete, etc.'
              type: string
            Description:
              description: Description of operation
              type: string
    OperationListResult:
      description: Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
          description: List of operations supported by the Resource Provider.
        nextLink:
          type: string
          description: URL to get the next set of operation list results if there are any.
      type: object
    locationData:
      description: Metadata pertaining to the geographic location of the resource.
      type: object
      properties:
        name:
          type: string
          maxLength: 256
          description: A canonical name for the geographic or physical location.
        city:
          type: string
          description: The city or locality where the resource is located.
        district:
          type: string
          description: The district, state, or province where the resource is located.
        countryOrRegion:
          type: string
          description: The country or region where the resource is located
      required:
        - name
    systemData:
      description: Metadata pertaining to creation and last modification of the resource.
      type: object
      readOnly: true
      properties:
        createdBy:
          type: string
          description: The identity that created the resource.
        createdByType:
          type: string
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        createdAt:
          type: string
          format: date-time
          description: The timestamp of resource creation (UTC).
        lastModifiedBy:
          type: string
          description: The identity that last modified the resource.
        lastModifiedByType:
          type: string
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          x-ms-enum:
            name: createdByType
            modelAsString: true
        lastModifiedAt:
          type: string
          format: date-time
          description: The timestamp of resource last modification (UTC)
    encryptionProperties:
      description: Configuration of key for data encryption
      type: object
      properties:
        status:
          description: Indicates whether or not the encryption is enabled for container registry.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            name: EncryptionStatus
            modelAsString: true
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Key vault properties.
    KeyVaultProperties:
      type: object
      properties:
        keyIdentifier:
          description: Key vault uri to access the encryption key.
          type: string
        identity:
          description: The client ID of the identity which will be used to access key vault.
          type: string
    SqlRoleDefinitionResource:
      properties:
        roleName:
          type: string
          description: A user-friendly name for the Role Definition. Must be unique for the database account.
        type:
          type: string
          enum:
            - BuiltInRole
            - CustomRole
          description: Indicates whether the Role Definition was built-in or user created.
          x-ms-enum:
            name: RoleDefinitionType
            modelAsString: false
        assignableScopes:
          type: array
          items:
            type: string
          description: A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          description: The set of operations allowed through this Role Definition.
      description: Azure Cosmos DB SQL Role Definition resource object.
      type: object
    SqlRoleDefinitionCreateUpdateParameters:
      description: Parameters to create and update an Azure Cosmos DB SQL Role Definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update an Azure Cosmos DB SQL Role Definition.
          $ref: '#/components/schemas/SqlRoleDefinitionResource'
      type: object
    SqlRoleDefinitionGetResults:
      description: An Azure Cosmos DB SQL Role Definition.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SqlRoleDefinitionResource'
          description: Properties related to the Role Definition.
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    Permission:
      type: object
      properties:
        dataActions:
          type: array
          items:
            type: string
          description: An array of data actions that are allowed.
        notDataActions:
          type: array
          items:
            type: string
          description: An array of data actions that are denied.
      description: The set of data plane operations permitted through this Role Definition.
    SqlRoleDefinitionListResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SqlRoleDefinitionGetResults'
          description: List of Role Definitions and their properties.
      description: The relevant Role Definitions.
      type: object
    SqlRoleAssignmentResource:
      type: object
      properties:
        roleDefinitionId:
          type: string
          description: The unique identifier for the associated Role Definition.
        scope:
          type: string
          description: The data plane resource path for which access is being granted through this Role Assignment.
        principalId:
          type: string
          description: The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.
      description: Azure Cosmos DB SQL Role Assignment resource object.
    SqlRoleAssignmentCreateUpdateParameters:
      description: Parameters to create and update an Azure Cosmos DB SQL Role Assignment.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update an Azure Cosmos DB SQL Role Assignment.
          $ref: '#/components/schemas/SqlRoleAssignmentResource'
      type: object
    SqlRoleAssignmentGetResults:
      description: An Azure Cosmos DB Role Assignment
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/SqlRoleAssignmentResource'
          description: Properties related to the Role Assignment.
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    SqlRoleAssignmentListResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/SqlRoleAssignmentGetResults'
          description: List of Role Assignments and their properties
      description: The relevant Role Assignments.
      type: object
    ServiceResourceProperties:
      description: Services response resource.
      type: object
      discriminator:
        propertyName: serviceType
      properties:
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Time of the last state change (ISO-8601 format).
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
      additionalProperties: true
      required:
        - serviceType
    ServiceResourceCreateUpdateParameters:
      description: Parameters for Create or Update request for ServiceResource
      properties:
        properties:
          $ref: '#/components/schemas/ServiceResourceCreateUpdateProperties'
      type: object
    ServiceResourceCreateUpdateProperties:
      description: Properties in ServiceResourceCreateUpdateParameters.
      type: object
      discriminator:
        propertyName: serviceType
      properties:
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
      required:
        - serviceType
    ServiceResource:
      description: Properties for the database account.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/ServiceResourceProperties'
      type: object
    ServiceResourceListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceResource'
          description: List of Service Resource and their properties.
      description: The List operation response, that contains the Service Resource and their properties.
    DataTransferServiceResource:
      description: Describes the service response property.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/DataTransferServiceResourceProperties'
      type: object
    DataTransferServiceResourceProperties:
      description: Properties for DataTransferServiceResource.
      x-ms-discriminator-value: DataTransfer
      properties:
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Time of the last state change (ISO-8601 format).
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
        locations:
          type: array
          readOnly: true
          description: An array that contains all of the locations for the service.
          items:
            $ref: '#/components/schemas/DataTransferRegionalServiceResource'
      type: object
    DataTransferServiceResourceCreateUpdateProperties:
      description: Properties for Create or Update request for DataTransferServiceResource
      x-ms-discriminator-value: DataTransfer
      properties:
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
      type: object
    SqlDedicatedGatewayServiceResourceCreateUpdateProperties:
      description: Properties for Create or Update request for SqlDedicatedGatewayServiceResource
      x-ms-discriminator-value: SqlDedicatedGateway
      properties:
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        dedicatedGatewayType:
          $ref: '#/components/schemas/SqlDedicatedGatewayType'
      type: object
    SqlDedicatedGatewayType:
      type: string
      enum:
        - IntegratedCache
        - DistributedQuery
      description: DedicatedGatewayType for the service.
      x-ms-enum:
        modelAsString: true
        name: DedicatedGatewayType
    SqlDedicatedGatewayServiceResource:
      description: Describes the service response property for SqlDedicatedGateway.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/SqlDedicatedGatewayServiceResourceProperties'
      type: object
    SqlDedicatedGatewayServiceResourceProperties:
      description: Properties for SqlDedicatedGatewayServiceResource.
      x-ms-discriminator-value: SqlDedicatedGateway
      properties:
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Time of the last state change (ISO-8601 format).
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
        sqlDedicatedGatewayEndpoint:
          type: string
          description: SqlDedicatedGateway endpoint for the service.
        dedicatedGatewayType:
          $ref: '#/components/schemas/SqlDedicatedGatewayType'
        locations:
          type: array
          readOnly: true
          description: An array that contains all of the locations for the service.
          items:
            $ref: '#/components/schemas/SqlDedicatedGatewayRegionalServiceResource'
      type: object
    GraphAPIComputeServiceResource:
      description: Describes the service response property for GraphAPICompute.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/GraphAPIComputeServiceResourceProperties'
      type: object
    GraphAPIComputeServiceResourceProperties:
      description: Properties for GraphAPIComputeServiceResource.
      x-ms-discriminator-value: GraphAPICompute
      properties:
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Time of the last state change (ISO-8601 format).
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
        graphApiComputeEndpoint:
          type: string
          description: GraphAPICompute endpoint for the service.
        locations:
          type: array
          readOnly: true
          description: An array that contains all of the locations for the service.
          items:
            $ref: '#/components/schemas/GraphAPIComputeRegionalServiceResource'
      type: object
    GraphAPIComputeServiceResourceCreateUpdateProperties:
      description: Properties for Create or Update request for GraphAPIComputeServiceResource
      x-ms-discriminator-value: GraphAPICompute
      properties:
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
      type: object
    MaterializedViewsBuilderServiceResource:
      description: Describes the service response property for MaterializedViewsBuilder.
      properties:
        properties:
          x-ms-client-flatten: false
          $ref: '#/components/schemas/MaterializedViewsBuilderServiceResourceProperties'
      type: object
    MaterializedViewsBuilderServiceResourceProperties:
      description: Properties for MaterializedViewsBuilderServiceResource.
      x-ms-discriminator-value: MaterializedViewsBuilder
      properties:
        creationTime:
          readOnly: true
          type: string
          format: date-time
          description: Time of the last state change (ISO-8601 format).
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
        locations:
          type: array
          readOnly: true
          description: An array that contains all of the locations for the service.
          items:
            $ref: '#/components/schemas/MaterializedViewsBuilderRegionalServiceResource'
      type: object
    MaterializedViewsBuilderServiceResourceCreateUpdateProperties:
      description: Properties for Create or Update request for MaterializedViewsBuilderServiceResource
      x-ms-discriminator-value: MaterializedViewsBuilder
      properties:
        instanceSize:
          $ref: '#/components/schemas/ServiceResourceInstanceSize'
        instanceCount:
          description: Instance count for the service.
          type: integer
          minimum: 0
          format: int32
        serviceType:
          $ref: '#/components/schemas/ServiceType'
      type: object
    RegionalServiceResource:
      description: Resource for a regional service location.
      type: object
      readOnly: true
      properties:
        name:
          readOnly: true
          type: string
          description: The regional service name.
        location:
          readOnly: true
          type: string
          description: The location name.
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
    SqlDedicatedGatewayRegionalServiceResource:
      description: Resource for a regional service location.
      properties:
        name:
          readOnly: true
          type: string
          description: The regional service name.
        location:
          readOnly: true
          type: string
          description: The location name.
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
        sqlDedicatedGatewayEndpoint:
          readOnly: true
          type: string
          description: The regional endpoint for SqlDedicatedGateway.
      type: object
    GraphAPIComputeRegionalServiceResource:
      description: Resource for a regional service location.
      properties:
        name:
          readOnly: true
          type: string
          description: The regional service name.
        location:
          readOnly: true
          type: string
          description: The location name.
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
        graphApiComputeEndpoint:
          readOnly: true
          type: string
          description: The regional endpoint for GraphAPICompute.
      type: object
    DataTransferRegionalServiceResource:
      description: Resource for a regional service location.
      properties:
        name:
          readOnly: true
          type: string
          description: The regional service name.
        location:
          readOnly: true
          type: string
          description: The location name.
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
      type: object
    MaterializedViewsBuilderRegionalServiceResource:
      description: Resource for a regional service location.
      properties:
        name:
          readOnly: true
          type: string
          description: The regional service name.
        location:
          readOnly: true
          type: string
          description: The location name.
        status:
          readOnly: true
          $ref: '#/components/schemas/ServiceResourceStatus'
      type: object
    ServiceResourceStatus:
      type: string
      enum:
        - Creating
        - Running
        - Updating
        - Deleting
        - Error
        - Stopped
      readOnly: true
      description: Describes the status of a service.
      x-ms-enum:
        modelAsString: true
        name: ServiceStatus
    ServiceResourceInstanceSize:
      type: string
      enum:
        - Cosmos.D4s
        - Cosmos.D8s
        - Cosmos.D16s
      description: Instance type for the service.
      x-ms-enum:
        modelAsString: true
        name: ServiceSize
    ServiceType:
      type: string
      enum:
        - SqlDedicatedGateway
        - DataTransfer
        - GraphAPICompute
        - MaterializedViewsBuilder
      description: ServiceType for the service.
      x-ms-enum:
        modelAsString: true
        name: ServiceType
    PrivateEndpointConnectionListResult:
      description: A list of private endpoint connections
      type: object
      properties:
        value:
          type: array
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
    PrivateEndpointConnection:
      description: A private endpoint connection
      properties:
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    PrivateEndpointConnectionProperties:
      description: Properties of a private endpoint connection.
      type: object
      properties:
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpointProperty'
          description: Private endpoint which the connection belongs to.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionStateProperty'
          description: Connection State of the Private Endpoint Connection.
        groupId:
          type: string
          description: Group id of the private endpoint.
        provisioningState:
          type: string
          description: Provisioning state of the private endpoint.
    PrivateEndpointProperty:
      type: object
      description: Private endpoint which the connection belongs to.
      properties:
        id:
          type: string
          description: Resource id of the private endpoint.
    PrivateLinkServiceConnectionStateProperty:
      type: object
      description: Connection State of the Private Endpoint Connection.
      properties:
        status:
          type: string
          description: The private link service connection status.
        description:
          type: string
          description: The private link service connection description.
        actionsRequired:
          type: string
          description: Any action that is required beyond basic workflow (approve/ reject/ disconnect)
          readOnly: true
    ProvisioningState:
      type: string
      readOnly: true
      description: The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed.
    chaosFaultResource:
      description: A request object to enable/disable the chaos fault
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/chaosFaultProperties'
      type: object
    chaosFaultProperties:
      type: object
      properties:
        action:
          type: string
          enum:
            - Enable
            - Disable
          description: Indicates whether what action to take for the Chaos Fault.
          x-ms-enum:
            name: SupportedActions
            modelAsString: false
        region:
          type: string
          description: Region of the account where the Chaos Fault is to be enabled/disabled.
        databaseName:
          type: string
          description: Database name.
        containerName:
          type: string
          description: Container name.
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: A provisioning state of the Chaos Fault.
      description: A request object to enable/disable the chaos fault.
    chaosFaultListResponse:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/chaosFaultResource'
          description: List of Chaos Faults.
        nextLink:
          description: The link used to get the next page of results.
          type: string
          readOnly: true
      description: Chaos Fault List Response.
    RestorableDatabaseAccountsListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableDatabaseAccountGetResult'
          description: List of restorable database accounts and their properties.
      description: The List operation response, that contains the restorable database accounts and their properties.
    RestorableDatabaseAccountGetResult:
      description: A Azure Cosmos DB restorable database account.
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a restorable database account.
          $ref: '#/components/schemas/RestorableDatabaseAccountProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
      type: object
    RestorableDatabaseAccountProperties:
      type: object
      description: The properties of a restorable database account.
      properties:
        accountName:
          type: string
          description: The name of the global database account
        creationTime:
          type: string
          format: date-time
          description: The creation time of the restorable database account (ISO-8601 format).
        oldestRestorableTime:
          type: string
          format: date-time
          description: The least recent time at which the database account can be restored to (ISO-8601 format).
        deletionTime:
          type: string
          format: date-time
          description: The time at which the restorable database account has been deleted (ISO-8601 format).
        apiType:
          type: string
          readOnly: true
          description: The API type of the restorable database account.
          $ref: '#/components/schemas/ApiType'
        restorableLocations:
          type: array
          readOnly: true
          description: List of regions where the of the database account can be restored from.
          items:
            $ref: '#/components/schemas/RestorableLocationResource'
    ApiType:
      description: Enum to indicate the API type of the restorable database account.
      type: string
      readOnly: true
      enum:
        - MongoDB
        - Gremlin
        - Cassandra
        - Table
        - Sql
        - GremlinV2
      x-ms-enum:
        name: ApiType
        modelAsString: true
    RestorableLocationResource:
      type: object
      description: Properties of the regional restorable account.
      properties:
        locationName:
          type: string
          readOnly: true
          description: The location of the regional restorable account.
        regionalDatabaseAccountInstanceId:
          type: string
          readOnly: true
          description: The instance id of the regional restorable account.
        creationTime:
          type: string
          readOnly: true
          format: date-time
          description: The creation time of the regional restorable database account (ISO-8601 format).
        deletionTime:
          type: string
          readOnly: true
          format: date-time
          description: The time at which the regional restorable database account has been deleted (ISO-8601 format).
    RestorableSqlDatabasesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableSqlDatabaseGetResult'
          description: List of SQL database events and their properties.
      description: The List operation response, that contains the SQL database events and their properties.
    RestorableSqlDatabaseGetResult:
      description: An Azure Cosmos DB SQL database event
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a SQL database event.
          $ref: '#/components/schemas/RestorableSqlDatabaseProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource Identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    RestorableSqlDatabaseProperties:
      description: The properties of an Azure Cosmos DB SQL database event
      type: object
      properties:
        resource:
          type: object
          description: The resource of an Azure Cosmos DB SQL database event
          properties:
            _rid:
              type: string
              readOnly: true
              description: A system generated property. A unique identifier.
            operationType:
              type: string
              readOnly: true
              description: The operation type of this database event.
              $ref: '#/components/schemas/OperationType'
            canUndelete:
              type: string
              readOnly: true
              description: A state of this database to identify if this database is restorable in same account.
            canUndeleteReason:
              type: string
              readOnly: true
              description: The reason why this database can not be restored in same account.
            eventTimestamp:
              type: string
              readOnly: true
              description: The time when this database event happened.
            ownerId:
              type: string
              readOnly: true
              description: The name of the SQL database.
            ownerResourceId:
              type: string
              readOnly: true
              description: The resource ID of the SQL database.
            database:
              type: object
              description: Cosmos DB SQL database resource object
              properties:
                _colls:
                  type: string
                  readOnly: true
                  description: A system generated property that specified the addressable path of the collections resource.
                _users:
                  type: string
                  readOnly: true
                  description: A system generated property that specifies the addressable path of the users resource.
                _self:
                  type: string
                  readOnly: true
                  description: A system generated property that specifies the addressable path of the database resource.
              allOf:
                - $ref: '#/components/schemas/SqlDatabaseResource'
                - $ref: '#/components/schemas/ExtendedResourceProperties'
    RestorableSqlContainersListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableSqlContainerGetResult'
          description: List of SQL container events and their properties.
      description: The List operation response, that contains the SQL container events and their properties.
    RestorableSqlContainerGetResult:
      description: An Azure Cosmos DB SQL container event
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a SQL container event.
          $ref: '#/components/schemas/RestorableSqlContainerProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource Identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    RestorableSqlContainerProperties:
      description: The properties of an Azure Cosmos DB SQL container event
      type: object
      properties:
        resource:
          description: The resource of an Azure Cosmos DB SQL container event
          type: object
          properties:
            _rid:
              type: string
              readOnly: true
              description: A system generated property. A unique identifier.
            operationType:
              type: string
              readOnly: true
              description: The operation type of this container event.
              $ref: '#/components/schemas/OperationType'
            canUndelete:
              type: string
              readOnly: true
              description: A state of this container to identify if this container is restorable in same account.
            canUndeleteReason:
              type: string
              readOnly: true
              description: The reason why this container can not be restored in same account.
            eventTimestamp:
              type: string
              readOnly: true
              description: The when this container event happened.
            ownerId:
              type: string
              readOnly: true
              description: The name of this SQL container.
            ownerResourceId:
              type: string
              readOnly: true
              description: The resource ID of this SQL container.
            container:
              type: object
              description: Cosmos DB SQL container resource object
              properties:
                _self:
                  type: string
                  readOnly: true
                  description: A system generated property that specifies the addressable path of the container resource.
              allOf:
                - $ref: '#/components/schemas/SqlContainerResource'
                - $ref: '#/components/schemas/ExtendedResourceProperties'
    RestorableSqlResourcesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableSqlResourcesGetResult'
          description: List of restorable SQL resources, including the database and collection names.
      description: The List operation response, that contains the restorable SQL resources.
    RestorableSqlResourcesGetResult:
      type: object
      description: Specific Databases to restore.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        databaseName:
          type: string
          description: The name of the database available for restore.
        collectionNames:
          type: array
          description: The names of the collections available for restore.
          items:
            $ref: '#/components/schemas/CollectionName'
    RestorableMongodbDatabasesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableMongodbDatabaseGetResult'
          description: List of MongoDB database events and their properties.
      description: The List operation response, that contains the MongoDB database events and their properties.
    RestorableMongodbDatabaseGetResult:
      description: An Azure Cosmos DB MongoDB database event
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a MongoDB database event.
          $ref: '#/components/schemas/RestorableMongodbDatabaseProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource Identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    RestorableMongodbDatabaseProperties:
      description: The properties of an Azure Cosmos DB MongoDB database event
      type: object
      properties:
        resource:
          description: The resource of an Azure Cosmos DB MongoDB database event
          type: object
          properties:
            _rid:
              type: string
              readOnly: true
              description: A system generated property. A unique identifier.
            operationType:
              type: string
              readOnly: true
              description: The operation type of this database event.
              $ref: '#/components/schemas/OperationType'
            canUndelete:
              type: string
              readOnly: true
              description: A state of this database to identify if this database is restorable in same account.
            canUndeleteReason:
              type: string
              readOnly: true
              description: The reason why this database can not be restored in same account.
            eventTimestamp:
              type: string
              readOnly: true
              description: The time when this database event happened.
            ownerId:
              type: string
              readOnly: true
              description: The name of this MongoDB database.
            ownerResourceId:
              type: string
              readOnly: true
              description: The resource ID of this MongoDB database.
    RestorableMongodbCollectionsListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableMongodbCollectionGetResult'
          description: List of MongoDB collection events and their properties.
      description: The List operation response, that contains the MongoDB collection events and their properties.
    RestorableMongodbCollectionGetResult:
      description: An Azure Cosmos DB MongoDB collection event
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a MongoDB collection event.
          $ref: '#/components/schemas/RestorableMongodbCollectionProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource Identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    RestorableMongodbCollectionProperties:
      description: The properties of an Azure Cosmos DB MongoDB collection event
      type: object
      properties:
        resource:
          description: The resource of an Azure Cosmos DB MongoDB collection event
          type: object
          properties:
            _rid:
              type: string
              readOnly: true
              description: A system generated property. A unique identifier.
            operationType:
              type: string
              readOnly: true
              description: The operation type of this collection event.
              $ref: '#/components/schemas/OperationType'
            canUndelete:
              type: string
              readOnly: true
              description: A state of this collection to identify if this container is restorable in same account.
            canUndeleteReason:
              type: string
              readOnly: true
              description: The reason why this collection can not be restored in same account.
            eventTimestamp:
              type: string
              readOnly: true
              description: The time when this collection event happened.
            ownerId:
              type: string
              readOnly: true
              description: The name of this MongoDB collection.
            ownerResourceId:
              type: string
              readOnly: true
              description: The resource ID of this MongoDB collection.
    RestorableMongodbResourcesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableMongodbResourcesGetResult'
          description: List of restorable MongoDB resources, including the database and collection names.
      description: The List operation response, that contains the restorable MongoDB resources.
    RestorableMongodbResourcesGetResult:
      type: object
      description: Specific Databases to restore.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        databaseName:
          type: string
          description: The name of the database available for restore.
        collectionNames:
          type: array
          description: The names of the collections available for restore.
          items:
            $ref: '#/components/schemas/CollectionName'
    RestorableGremlinDatabasesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableGremlinDatabaseGetResult'
          description: List of Gremlin database events and their properties.
      description: The List operation response, that contains the Gremlin database events and their properties.
    RestorableGremlinDatabaseGetResult:
      description: An Azure Cosmos DB Gremlin database event
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a Gremlin database event.
          $ref: '#/components/schemas/RestorableGremlinDatabaseProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource Identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    RestorableGremlinDatabaseProperties:
      description: The properties of an Azure Cosmos DB Gremlin database event
      type: object
      properties:
        resource:
          description: The resource of an Azure Cosmos DB Gremlin database event
          type: object
          properties:
            _rid:
              type: string
              readOnly: true
              description: A system generated property. A unique identifier.
            operationType:
              type: string
              readOnly: true
              description: The operation type of this database event.
              $ref: '#/components/schemas/OperationType'
            canUndelete:
              type: string
              readOnly: true
              description: A state of this database to identify if this database is restorable in same account.
            canUndeleteReason:
              type: string
              readOnly: true
              description: The reason why this database can not be restored in same account.
            eventTimestamp:
              type: string
              readOnly: true
              description: The time when this database event happened.
            ownerId:
              type: string
              readOnly: true
              description: The name of this Gremlin database.
            ownerResourceId:
              type: string
              readOnly: true
              description: The resource ID of this Gremlin database.
    RestorableGremlinGraphsListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableGremlinGraphGetResult'
          description: List of Gremlin graph events and their properties.
      description: The List operation response, that contains the Gremlin graph events and their properties.
    RestorableGremlinGraphGetResult:
      description: An Azure Cosmos DB Gremlin graph event
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a Gremlin graph event.
          $ref: '#/components/schemas/RestorableGremlinGraphProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource Identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    RestorableGremlinGraphProperties:
      description: The properties of an Azure Cosmos DB Gremlin graph event
      type: object
      properties:
        resource:
          description: The resource of an Azure Cosmos DB Gremlin graph event
          type: object
          properties:
            _rid:
              type: string
              readOnly: true
              description: A system generated property. A unique identifier.
            operationType:
              type: string
              readOnly: true
              description: The operation type of this graph event.
              $ref: '#/components/schemas/OperationType'
            canUndelete:
              type: string
              readOnly: true
              description: A state of this graph to identify if this graph is restorable in same account.
            canUndeleteReason:
              type: string
              readOnly: true
              description: The reason why this graph can not be restored in same account.
            eventTimestamp:
              type: string
              readOnly: true
              description: The time when this graph event happened.
            ownerId:
              type: string
              readOnly: true
              description: The name of this Gremlin graph.
            ownerResourceId:
              type: string
              readOnly: true
              description: The resource ID of this Gremlin graph.
    RestorableGremlinResourcesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableGremlinResourcesGetResult'
          description: List of restorable Gremlin resources, including the gremlin database and graph names.
      description: The List operation response, that contains the restorable Gremlin resources.
    RestorableGremlinResourcesGetResult:
      type: object
      description: Specific Databases to restore.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        databaseName:
          type: string
          description: The name of the gremlin database available for restore.
        graphNames:
          type: array
          description: The names of the graphs available for restore.
          items:
            $ref: '#/components/schemas/GraphName'
    RestorableTablesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableTableGetResult'
          description: List of Table events and their properties.
      description: The List operation response, that contains the Table events and their properties.
    RestorableTableGetResult:
      description: An Azure Cosmos DB Table event
      properties:
        properties:
          type: object
          x-ms-client-flatten: true
          description: The properties of a Table event.
          $ref: '#/components/schemas/RestorableTableProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource Identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    RestorableTableProperties:
      description: The properties of an Azure Cosmos DB Table event
      type: object
      properties:
        resource:
          description: The resource of an Azure Cosmos DB Table event
          type: object
          properties:
            _rid:
              type: string
              readOnly: true
              description: A system generated property. A unique identifier.
            operationType:
              type: string
              readOnly: true
              description: The operation type of this table event.
              $ref: '#/components/schemas/OperationType'
            canUndelete:
              type: string
              readOnly: true
              description: A state of this table to identify if this table is restorable in same account.
            canUndeleteReason:
              type: string
              readOnly: true
              description: The reason why this table can not be restored in same account.
            eventTimestamp:
              type: string
              readOnly: true
              description: The time when this table event happened.
            ownerId:
              type: string
              readOnly: true
              description: The name of this Table.
            ownerResourceId:
              type: string
              readOnly: true
              description: The resource ID of this Table.
    RestorableTableResourcesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/RestorableTableResourcesGetResult'
          description: List of restorable table names.
      description: List of restorable table names.
    RestorableTableResourcesGetResult:
      type: object
      description: Specific Databases to restore.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the Table.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
    OperationType:
      description: Enum to indicate the operation type of the event.
      type: string
      readOnly: true
      enum:
        - Create
        - Replace
        - Delete
        - Recreate
        - SystemOperation
      x-ms-enum:
        name: OperationType
        modelAsString: true
    ContinuousBackupRestoreLocation:
      type: object
      description: Properties of the regional restorable account.
      properties:
        location:
          type: string
          description: The name of the continuous backup restore location.
    BackupInformation:
      description: Backup information of a resource.
      type: object
      properties:
        continuousBackupInformation:
          description: Information about the status of continuous backups.
          type: object
          $ref: '#/components/schemas/ContinuousBackupInformation'
    ContinuousBackupInformation:
      description: Information about the status of continuous backups.
      type: object
      readOnly: true
      properties:
        latestRestorableTimestamp:
          type: string
          description: The latest restorable timestamp for a resource.
    SkuTier:
      type: string
      enum:
        - Free
        - Basic
        - Standard
        - Premium
      x-ms-enum:
        name: SkuTier
        modelAsString: false
      description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
    ErrorDetail:
      description: The error detail.
      type: object
      properties:
        code:
          readOnly: true
          type: string
          description: The error code.
        message:
          readOnly: true
          type: string
          description: The error message.
        target:
          readOnly: true
          type: string
          description: The error target.
        details:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          x-ms-identifiers:
            - message
            - target
          description: The error details.
        additionalInfo:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ErrorAdditionalInfo'
          x-ms-identifiers: []
          description: The error additional info.
    OperationStatusResult:
      description: The current status of an async operation.
      type: object
      required:
        - status
      properties:
        id:
          description: Fully qualified ID for the async operation.
          type: string
          format: arm-id
        resourceId:
          description: Fully qualified ID of the resource against which the original async operation was started.
          type: string
          format: arm-id
          readOnly: true
        name:
          description: Name of the async operation.
          type: string
        status:
          description: Operation status.
          type: string
        percentComplete:
          description: Percent of the operation that is complete.
          type: number
          minimum: 0
          maximum: 100
        startTime:
          description: The start time of the operation.
          type: string
          format: date-time
        endTime:
          description: The end time of the operation.
          type: string
          format: date-time
        operations:
          description: The operations list.
          type: array
          items:
            $ref: '#/components/schemas/OperationStatusResult'
        error:
          description: If present, details of the operation error.
          $ref: '#/components/schemas/ErrorDetail'
    CheckNameAvailabilityRequest:
      description: The check availability request body.
      type: object
      properties:
        name:
          description: The name of the resource for which availability needs to be checked.
          type: string
        type:
          description: The resource type.
          type: string
    CheckNameAvailabilityResponse:
      description: The check availability result.
      type: object
      properties:
        nameAvailable:
          description: Indicates if the resource name is available.
          type: boolean
        reason:
          description: The reason why the given name is not available.
          type: string
          enum:
            - Invalid
            - AlreadyExists
          x-ms-enum:
            name: CheckNameAvailabilityReason
            modelAsString: true
        message:
          description: Detailed reason why the given name is available.
          type: string
    NotebookWorkspaceCreateUpdateParameters:
      description: Parameters to create a notebook workspace resource
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    NotebookWorkspaceListResult:
      description: A list of notebook workspace resources
      type: object
      properties:
        value:
          type: array
          description: Array of notebook workspace resources
          items:
            $ref: '#/components/schemas/NotebookWorkspace'
    NotebookWorkspace:
      description: A notebook workspace resource
      properties:
        properties:
          $ref: '#/components/schemas/NotebookWorkspaceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    NotebookWorkspaceProperties:
      description: Properties of a notebook workspace resource.
      type: object
      properties:
        notebookServerEndpoint:
          description: Specifies the endpoint of Notebook server.
          type: string
          readOnly: true
        status:
          description: 'Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.'
          type: string
          readOnly: true
    NotebookWorkspaceConnectionInfoResult:
      description: The connection info for the given notebook workspace
      properties:
        authToken:
          type: string
          description: Specifies auth token used for connecting to Notebook server (uses token-based auth).
          readOnly: true
        notebookServerEndpoint:
          type: string
          description: Specifies the endpoint of Notebook server.
          readOnly: true
      type: object
    PublicNetworkAccess:
      type: string
      description: Whether requests from Public Network are allowed
      enum:
        - Enabled
        - Disabled
        - SecuredByPerimeter
      x-ms-enum:
        modelAsString: true
        name: PublicNetworkAccess
    NetworkSecurityPerimeterConfigurationListResult:
      description: Result of a list NSP (network security perimeter) configurations request.
      type: object
      properties:
        value:
          description: Array of network security perimeter results.
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        nextLink:
          description: The link used to get the next page of results.
          type: string
          format: uri
    NetworkSecurityPerimeterConfiguration:
      description: Network security perimeter (NSP) configuration resource
      properties:
        properties:
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProperties'
      type: object
    NetworkSecurityPerimeterConfigurationProvisioningState:
      description: Provisioning state of a network security perimeter configuration that is being created or updated.
      enum:
        - Succeeded
        - Creating
        - Updating
        - Deleting
        - Accepted
        - Failed
        - Canceled
      type: string
      readOnly: true
      x-ms-enum:
        name: NetworkSecurityPerimeterConfigurationProvisioningState
        modelAsString: true
    NetworkSecurityPerimeterConfigurationProperties:
      description: Network security configuration properties.
      type: object
      properties:
        provisioningState:
          readOnly: true
          $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationProvisioningState'
        provisioningIssues:
          description: List of provisioning issues, if any
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ProvisioningIssue'
          x-ms-identifiers: []
        networkSecurityPerimeter:
          $ref: '#/components/schemas/NetworkSecurityPerimeter'
        resourceAssociation:
          $ref: '#/components/schemas/ResourceAssociation'
        profile:
          $ref: '#/components/schemas/NetworkSecurityProfile'
    ProvisioningIssue:
      description: Describes a provisioning issue for a network security perimeter configuration
      readOnly: true
      properties:
        name:
          description: Name of the issue
          type: string
          readOnly: true
        properties:
          $ref: '#/components/schemas/ProvisioningIssueProperties'
      type: object
    ProvisioningIssueProperties:
      description: Details of a provisioning issue for a network security perimeter (NSP) configuration. Resource providers should generate separate provisioning issue elements for each separate issue detected, and include a meaningful and distinctive description, as well as any appropriate suggestedResourceIds and suggestedAccessRules
      type: object
      readOnly: true
      properties:
        issueType:
          description: Type of issue
          type: string
          readOnly: true
          enum:
            - Unknown
            - ConfigurationPropagationFailure
            - MissingPerimeterConfiguration
            - MissingIdentityConfiguration
          x-ms-enum:
            name: IssueType
            modelAsString: true
            values:
              - value: Unknown
                description: Unknown issue type
              - value: ConfigurationPropagationFailure
                description: An error occurred while applying the network security perimeter (NSP) configuration.
              - value: MissingPerimeterConfiguration
                description: A network connectivity issue is happening on the resource which could be addressed either by adding new resources to the network security perimeter (NSP) or by modifying access rules.
              - value: MissingIdentityConfiguration
                description: An managed identity hasn't been associated with the resource. The resource will still be able to validate inbound traffic from the network security perimeter (NSP) or matching inbound access rules, but it won't be able to perform outbound access as a member of the NSP.
        severity:
          description: Severity of the issue.
          enum:
            - Warning
            - Error
          type: string
          readOnly: true
          x-ms-enum:
            name: Severity
            modelAsString: true
        description:
          description: Description of the issue
          type: string
          readOnly: true
        suggestedResourceIds:
          description: Fully qualified resource IDs of suggested resources that can be associated to the network security perimeter (NSP) to remediate the issue.
          type: array
          readOnly: true
          items:
            description: Fully qualified resource ID of the suggested resource
            type: string
            format: arm-id
            readOnly: true
        suggestedAccessRules:
          description: Access rules that can be added to the network security profile (NSP) to remediate the issue.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AccessRule'
          x-ms-identifiers: []
    NetworkSecurityPerimeter:
      description: Information about a network security perimeter (NSP)
      type: object
      properties:
        id:
          description: Fully qualified Azure resource ID of the NSP resource
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - resourceType: Microsoft.Network/networkSecurityPerimeters
        perimeterGuid:
          description: Universal unique ID (UUID) of the network security perimeter
          type: string
          format: uuid
        location:
          description: Location of the network security perimeter
          type: string
          x-ms-mutability:
            - create
            - read
    ResourceAssociationAccessMode:
      description: Access mode of the resource association
      enum:
        - Enforced
        - Learning
        - Audit
      type: string
      x-ms-enum:
        name: ResourceAssociationAccessMode
        modelAsString: true
        values:
          - value: Enforced
            description: Enforced access mode - traffic to the resource that failed access checks is blocked
          - value: Learning
            description: Learning access mode - traffic to the resource is enabled for analysis but not blocked
          - value: Audit
            description: Audit access mode - traffic to the resource that fails access checks is logged but not blocked
    ResourceAssociation:
      description: Information about resource association
      type: object
      properties:
        name:
          description: Name of the resource association
          type: string
        accessMode:
          $ref: '#/components/schemas/ResourceAssociationAccessMode'
    NetworkSecurityProfile:
      description: Network security perimeter configuration profile
      type: object
      properties:
        name:
          description: Name of the profile
          type: string
        accessRulesVersion:
          description: Current access rules version
          type: integer
          format: int32
        accessRules:
          description: List of Access Rules
          type: array
          items:
            $ref: '#/components/schemas/AccessRule'
          x-ms-identifiers:
            - name
        diagnosticSettingsVersion:
          description: Current diagnostic settings version
          type: integer
          format: int32
        enabledLogCategories:
          description: List of log categories that are enabled
          type: array
          items:
            description: Log category
            type: string
    AccessRule:
      description: Access rule in a network security perimeter configuration profile
      properties:
        name:
          description: Name of the access rule
          type: string
        properties:
          $ref: '#/components/schemas/AccessRuleProperties'
      type: object
    AccessRuleDirection:
      description: Direction of Access Rule
      enum:
        - Inbound
        - Outbound
      type: string
      x-ms-enum:
        name: AccessRuleDirection
        modelAsString: true
        values:
          - value: Inbound
            description: Applies to inbound network traffic to the secured resources.
          - value: Outbound
            description: Applies to outbound network traffic from the secured resources
    AccessRuleProperties:
      description: Properties of Access Rule
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/AccessRuleDirection'
        addressPrefixes:
          description: Address prefixes in the CIDR format for inbound rules
          type: array
          items:
            description: An IP address prefix (CIDR) for inbound rules
            type: string
        subscriptions:
          description: Subscriptions for inbound rules
          type: array
          items:
            description: Subscription identifiers
            type: object
            properties:
              id:
                description: 'The fully qualified Azure resource ID of the subscription e.g. (''/subscriptions/00000000-0000-0000-0000-000000000000'') '
                type: string
                format: arm-id
        networkSecurityPerimeters:
          description: Network security perimeters for inbound rules
          type: array
          items:
            $ref: '#/components/schemas/NetworkSecurityPerimeter'
        fullyQualifiedDomainNames:
          description: Fully qualified domain names (FQDN) for outbound rules
          type: array
          items:
            description: A fully qualified domain name (FQDN)
            type: string
        emailAddresses:
          description: Email addresses for outbound rules
          type: array
          items:
            description: An email address
            type: string
        phoneNumbers:
          description: Phone numbers for outbound rules
          type: array
          items:
            description: A phone number
            type: string
    ThroughputPoolsListResult:
      description: The List operation response, that contains the throughput pools and their properties.
      type: object
      properties:
        value:
          description: List of throughput pools and their properties.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ThroughputPoolResource'
        nextLink:
          description: The link used to get the next page of results.
          type: string
          readOnly: true
    ThroughputPoolResource:
      description: An Azure Cosmos DB Throughputpool.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ThroughputPoolProperties'
        tags:
          type: object
          additionalProperties:
            type: string
          x-ms-mutability:
            - read
            - create
            - update
          description: Resource tags.
        location:
          type: string
          x-ms-mutability:
            - read
            - create
          description: The geo-location where the resource lives
      type: object
    ThroughputPoolUpdate:
      description: Represents a throughput pool resource for updates.
      properties:
        properties:
          $ref: '#/components/schemas/ThroughputPoolProperties'
          x-ms-client-flatten: true
          description: Properties of the throughput pool.
      type: object
    ThroughputPoolProperties:
      description: Properties to update Azure Cosmos DB throughput pool.
      type: object
      x-ms-mutability:
        - read
        - create
        - update
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: A provisioning state of the ThroughputPool.
        maxThroughput:
          type: integer
          format: int32
          description: Value for throughput to be shared among CosmosDB resources in the pool.
    ThroughputPoolAccountsListResult:
      description: The List operation response, that contains the global database accounts and their properties.
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ThroughputPoolAccountResource'
          description: List of global database accounts in a throughput pool and their properties.
        nextLink:
          description: The link used to get the next page of results.
          type: string
          readOnly: true
    ThroughputPoolAccountCreateParameters:
      description: Parameters for creating a Azure Cosmos DB throughput pool account.
      x-ms-mutability:
        - create
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ThroughputPoolAccountCreateProperties'
      type: object
    ThroughputPoolAccountCreateProperties:
      description: Properties to update Azure Cosmos DB throughput pool.
      type: object
      x-ms-mutability:
        - create
      properties:
        accountResourceIdentifier:
          description: The resource identifier of global database account in the throughputPool.
          type: string
        accountLocation:
          description: The location of global database account in the throughputPool.
          type: string
    ThroughputPoolAccountResource:
      description: An Azure Cosmos DB Throughputpool Account
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/ThroughputPoolAccountProperties'
      type: object
    ThroughputPoolAccountProperties:
      description: An Azure Cosmos DB Global Database Account which is part of a Throughputpool.
      type: object
      x-ms-mutability:
        - read
        - create
        - update
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
          description: A provisioning state of the ThroughputPool Account.
        accountResourceIdentifier:
          description: The resource identifier of global database account in the throughputPool.
          type: string
        accountLocation:
          description: The location of  global database account in the throughputPool.
          type: string
        accountInstanceId:
          description: The instance id of global database account in the throughputPool.
          type: string
          readOnly: true
    DataTransferDataSourceSink:
      type: object
      description: Base class for all DataTransfer source/sink
      properties:
        component:
          type: string
          enum:
            - CosmosDBCassandra
            - CosmosDBMongo
            - CosmosDBMongoVCore
            - CosmosDBSql
            - AzureBlobStorage
          x-ms-enum:
            name: DataTransferComponent
            modelAsString: true
          default: CosmosDBCassandra
      discriminator:
        propertyName: component
      required:
        - component
    BaseCosmosDataTransferDataSourceSink:
      description: A base CosmosDB data source/sink
      properties:
        remoteAccountName:
          type: string
        component:
          type: string
          enum:
            - CosmosDBCassandra
            - CosmosDBMongo
            - CosmosDBMongoVCore
            - CosmosDBSql
            - AzureBlobStorage
          x-ms-enum:
            name: DataTransferComponent
            modelAsString: true
          default: CosmosDBCassandra
      type: object
    CosmosCassandraDataTransferDataSourceSink:
      description: A CosmosDB Cassandra API data source/sink
      required:
        - keyspaceName
        - tableName
      x-ms-discriminator-value: CosmosDBCassandra
      properties:
        keyspaceName:
          type: string
        tableName:
          type: string
        remoteAccountName:
          type: string
      type: object
    CosmosMongoDataTransferDataSourceSink:
      description: A CosmosDB Mongo API data source/sink
      required:
        - databaseName
        - collectionName
      x-ms-discriminator-value: CosmosDBMongo
      properties:
        databaseName:
          type: string
        collectionName:
          type: string
        remoteAccountName:
          type: string
      type: object
    CosmosMongoVCoreDataTransferDataSourceSink:
      description: A CosmosDB Mongo vCore API data source/sink
      required:
        - databaseName
        - collectionName
      x-ms-discriminator-value: CosmosDBMongoVCore
      properties:
        databaseName:
          type: string
        collectionName:
          type: string
        hostName:
          type: string
        connectionStringKeyVaultUri:
          type: string
        component:
          type: string
          enum:
            - CosmosDBCassandra
            - CosmosDBMongo
            - CosmosDBMongoVCore
            - CosmosDBSql
            - AzureBlobStorage
          x-ms-enum:
            name: DataTransferComponent
            modelAsString: true
          default: CosmosDBCassandra
      type: object
    CosmosSqlDataTransferDataSourceSink:
      description: A CosmosDB No Sql API data source/sink
      required:
        - databaseName
        - containerName
      x-ms-discriminator-value: CosmosDBSql
      properties:
        databaseName:
          type: string
        containerName:
          type: string
        remoteAccountName:
          type: string
      type: object
    AzureBlobDataTransferDataSourceSink:
      description: An Azure Blob Storage data source/sink
      required:
        - containerName
      x-ms-discriminator-value: AzureBlobStorage
      properties:
        component:
          type: string
          enum:
            - CosmosDBCassandra
            - CosmosDBMongo
            - CosmosDBMongoVCore
            - CosmosDBSql
            - AzureBlobStorage
          x-ms-enum:
            name: DataTransferComponent
            modelAsString: true
          default: CosmosDBCassandra
        containerName:
          type: string
        endpointUrl:
          type: string
      type: object
    DataTransferJobProperties:
      description: The properties of a DataTransfer Job
      type: object
      properties:
        jobName:
          readOnly: true
          type: string
          description: Job Name
        source:
          $ref: '#/components/schemas/DataTransferDataSourceSink'
          description: Source DataStore details
        destination:
          $ref: '#/components/schemas/DataTransferDataSourceSink'
          description: Destination DataStore details
        status:
          readOnly: true
          type: string
          description: Job Status
        processedCount:
          readOnly: true
          type: integer
          description: Processed Count.
          format: int64
        totalCount:
          readOnly: true
          type: integer
          description: Total Count.
          format: int64
        lastUpdatedUtcTime:
          readOnly: true
          type: string
          format: date-time
          description: Last Updated Time (ISO-8601 format).
        workerCount:
          description: Worker count
          type: integer
          minimum: 0
          format: int32
        error:
          readOnly: true
          $ref: '#/components/schemas/ErrorResponse'
          description: Error response for Faulted job
        duration:
          x-ms-format: duration-constant
          description: Total Duration of Job
          type: string
          readOnly: true
        mode:
          description: Mode of job execution
          type: string
          enum:
            - Offline
            - Online
          x-ms-enum:
            name: DataTransferJobMode
            modelAsString: true
      required:
        - source
        - destination
    CreateJobRequest:
      description: Parameters to create Data Transfer Job
      required:
        - properties
      properties:
        properties:
          $ref: '#/components/schemas/DataTransferJobProperties'
          description: Data Transfer Create Job Properties
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    DataTransferJobGetResults:
      description: A Cosmos DB Data Transfer Job
      properties:
        properties:
          x-ms-client-flatten: true
          type: object
          $ref: '#/components/schemas/DataTransferJobProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    DataTransferJobFeedResults:
      description: The List operation response, that contains the Data Transfer jobs and their properties.
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DataTransferJobGetResults'
          description: List of Data Transfer jobs and their properties.
        nextLink:
          readOnly: true
          type: string
          description: URL to get the next set of Data Transfer job list results if there are any.
    ClientEncryptionKeysListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/ClientEncryptionKeyGetResults'
          description: List of client encryption keys and their properties.
      description: The List operation response, that contains the client encryption keys and their properties.
    DatabaseAccountsListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/DatabaseAccountGetResults'
          description: List of database account and their properties.
      description: The List operation response, that contains the database accounts and their properties.
      type: object
    GraphResourcesListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GraphResourceGetResults'
          description: List of Graph resource and their properties.
      description: The List operation response, that contains the Graph resource and their properties.
    SqlDatabaseListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SqlDatabaseGetResults'
          description: List of SQL databases and their properties.
      description: The List operation response, that contains the SQL databases and their properties.
      type: object
    SqlContainerListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SqlContainerGetResults'
          description: List of containers and their properties.
      description: The List operation response, that contains the containers and their properties.
      type: object
    SqlStoredProcedureListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SqlStoredProcedureGetResults'
          description: List of storedProcedures and their properties.
      description: The List operation response, that contains the storedProcedures and their properties.
      type: object
    SqlUserDefinedFunctionListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SqlUserDefinedFunctionGetResults'
          description: List of userDefinedFunctions and their properties.
      description: The List operation response, that contains the userDefinedFunctions and their properties.
      type: object
    SqlTriggerListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SqlTriggerGetResults'
          description: List of triggers and their properties.
      description: The List operation response, that contains the triggers and their properties.
      type: object
    MongoDBDatabaseListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MongoDBDatabaseGetResults'
          description: List of MongoDB databases and their properties.
      description: The List operation response, that contains the MongoDB databases and their properties.
      type: object
    MongoDBCollectionListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MongoDBCollectionGetResults'
          description: List of MongoDB collections and their properties.
      description: The List operation response, that contains the MongoDB collections and their properties.
      type: object
    TableListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/TableGetResults'
          description: List of Table and their properties.
      description: The List operation response, that contains the Table and their properties.
      type: object
    CassandraKeyspaceListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CassandraKeyspaceGetResults'
          description: List of Cassandra keyspaces and their properties.
      description: The List operation response, that contains the Cassandra keyspaces and their properties.
      type: object
    CassandraTableListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CassandraTableGetResults'
          description: List of Cassandra tables and their properties.
      description: The List operation response, that contains the Cassandra tables and their properties.
      type: object
    GremlinDatabaseListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GremlinDatabaseGetResults'
          description: List of Gremlin databases and their properties.
      description: The List operation response, that contains the Gremlin databases and their properties.
      type: object
    GremlinGraphListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/GremlinGraphGetResults'
          description: List of graphs and their properties.
      description: The List operation response, that contains the graphs and their properties.
      type: object
    CassandraViewListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/CassandraViewGetResults'
          description: List of Cassandra views and their properties.
      description: The List operation response, that contains the Cassandra views and their properties.
    CloudError:
      x-ms-external: true
      description: An error response from the service.
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
      type: object
    FailoverPolicies:
      properties:
        failoverPolicies:
          type: array
          description: List of failover policies.
          items:
            $ref: '#/components/schemas/FailoverPolicy'
      required:
        - failoverPolicies
      description: The list of new failover policies for the failover priority change.
      type: object
    FailoverPolicy:
      type: object
      description: The failover policy for a given region of a database account.
      properties:
        id:
          type: string
          readOnly: true
          description: 'The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;.'
        locationName:
          type: string
          description: The name of the region in which the database account exists.
        failoverPriority:
          type: integer
          minimum: 0
          format: int32
          description: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
    RegionForOnlineOffline:
      properties:
        region:
          type: string
          description: Cosmos DB region, with spaces between words and each word capitalized.
      required:
        - region
      description: Cosmos DB region to online or offline.
      type: object
    Location:
      description: A region in which the Azure Cosmos DB database account is deployed.
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: 'The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.'
        locationName:
          type: string
          description: The name of the region.
        documentEndpoint:
          type: string
          readOnly: true
          description: 'The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/'
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
        failoverPriority:
          description: The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
          format: int32
          type: integer
          minimum: 0
        isZoneRedundant:
          type: boolean
          description: Flag to indicate whether or not this region is an AvailabilityZone region
    ARMResourceProperties:
      type: object
      description: The core properties of ARM resources.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      x-ms-azure-resource: true
    ARMProxyResource:
      type: object
      description: The resource model definition for a ARM proxy resource. It will have everything other than required location and tags
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      x-ms-azure-resource: true
    ClientEncryptionKeyCreateUpdateParameters:
      description: Parameters to create and update ClientEncryptionKey.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update ClientEncryptionKey.
          $ref: '#/components/schemas/ClientEncryptionKeyCreateUpdateProperties'
      type: object
    ClientEncryptionKeyCreateUpdateProperties:
      description: Properties to create and update ClientEncryptionKey.
      type: object
      properties:
        resource:
          description: The standard JSON format of a ClientEncryptionKey
          $ref: '#/components/schemas/ClientEncryptionKeyResource'
      required:
        - resource
    ClientEncryptionKeyGetResults:
      description: Client Encryption Key.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of a ClientEncryptionKey
          $ref: '#/components/schemas/ClientEncryptionKeyGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    ClientEncryptionKeyGetProperties:
      description: The properties of a ClientEncryptionKey resource
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/ClientEncryptionKeyResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
    DatabaseAccountGetResults:
      description: An Azure Cosmos DB database account.
      properties:
        kind:
          description: Indicates the type of database account. This can only be set at database account creation.
          type: string
          default: GlobalDocumentDB
          enum:
            - GlobalDocumentDB
            - MongoDB
            - Parse
          x-ms-enum:
            name: DatabaseAccountKind
            modelAsString: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DatabaseAccountGetProperties'
        systemData:
          readOnly: true
          description: The system meta data relating to this resource.
          $ref: '#/components/schemas/systemData'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
      type: object
    ExtendedResourceProperties:
      description: The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.
      type: object
      properties:
        _rid:
          type: string
          description: A system generated property. A unique identifier.
          readOnly: true
        _ts:
          type: number
          description: A system generated property that denotes the last updated timestamp of the resource.
          readOnly: true
        _etag:
          type: string
          description: A system generated property representing the resource etag required for optimistic concurrency control.
          readOnly: true
    ThroughputSettingsGetResults:
      description: An Azure Cosmos DB resource throughput.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB resource throughput
          $ref: '#/components/schemas/ThroughputSettingsGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    ThroughputSettingsGetProperties:
      description: The properties of an Azure Cosmos DB resource throughput
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/ThroughputSettingsResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
    SqlDatabaseGetResults:
      description: An Azure Cosmos DB SQL database.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB SQL database
          $ref: '#/components/schemas/SqlDatabaseGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    GraphResourceGetProperties:
      description: The properties of an Azure Cosmos DB SQL database
      type: object
      properties:
        resource:
          type: object
          allOf:
            - $ref: '#/components/schemas/GraphResource'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    GraphResourceGetResults:
      description: An Azure Cosmos DB Graph resource.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB Graph resource.
          $ref: '#/components/schemas/GraphResourceGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlDatabaseGetProperties:
      description: The properties of an Azure Cosmos DB SQL database
      type: object
      properties:
        resource:
          properties:
            _colls:
              type: string
              description: A system generated property that specified the addressable path of the collections resource.
            _users:
              type: string
              description: A system generated property that specifies the addressable path of the users resource.
          allOf:
            - $ref: '#/components/schemas/SqlDatabaseResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    SqlContainerGetResults:
      description: An Azure Cosmos DB container.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB container
          $ref: '#/components/schemas/SqlContainerGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlContainerGetProperties:
      description: The properties of an Azure Cosmos DB container
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/SqlContainerResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    SqlStoredProcedureGetResults:
      description: An Azure Cosmos DB storedProcedure.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB storedProcedure
          $ref: '#/components/schemas/SqlStoredProcedureGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlStoredProcedureGetProperties:
      description: The properties of an Azure Cosmos DB StoredProcedure
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/SqlStoredProcedureResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
    SqlUserDefinedFunctionGetResults:
      description: An Azure Cosmos DB userDefinedFunction.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB userDefinedFunction
          $ref: '#/components/schemas/SqlUserDefinedFunctionGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlUserDefinedFunctionGetProperties:
      description: The properties of an Azure Cosmos DB userDefinedFunction
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/SqlUserDefinedFunctionResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
    SqlTriggerGetResults:
      description: An Azure Cosmos DB trigger.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB trigger
          $ref: '#/components/schemas/SqlTriggerGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlTriggerGetProperties:
      description: The properties of an Azure Cosmos DB trigger
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/SqlTriggerResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
    MongoDBDatabaseGetResults:
      description: An Azure Cosmos DB MongoDB database.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB MongoDB database
          $ref: '#/components/schemas/MongoDBDatabaseGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    MongoDBDatabaseGetProperties:
      description: The properties of an Azure Cosmos DB MongoDB database
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/MongoDBDatabaseResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    MongoDBCollectionGetResults:
      description: An Azure Cosmos DB MongoDB collection.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB MongoDB collection
          $ref: '#/components/schemas/MongoDBCollectionGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    MongoDBCollectionGetProperties:
      description: The properties of an Azure Cosmos DB MongoDB collection
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/MongoDBCollectionResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    TableGetResults:
      description: An Azure Cosmos DB Table.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB Table
          $ref: '#/components/schemas/TableGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    TableGetProperties:
      description: The properties of an Azure Cosmos Table
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/TableResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    CassandraKeyspaceGetResults:
      description: An Azure Cosmos DB Cassandra keyspace.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB Cassandra keyspace
          $ref: '#/components/schemas/CassandraKeyspaceGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    CassandraKeyspaceGetProperties:
      description: The properties of an Azure Cosmos DB Cassandra keyspace
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/CassandraKeyspaceResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    CassandraTableGetResults:
      description: An Azure Cosmos DB Cassandra table.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB Cassandra table
          $ref: '#/components/schemas/CassandraTableGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    CassandraTableGetProperties:
      description: The properties of an Azure Cosmos DB Cassandra table
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/CassandraTableResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    GremlinDatabaseGetResults:
      description: An Azure Cosmos DB Gremlin database.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB SQL database
          $ref: '#/components/schemas/GremlinDatabaseGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    GremlinDatabaseGetProperties:
      description: The properties of an Azure Cosmos DB SQL database
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/GremlinDatabaseResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    GremlinGraphGetResults:
      description: An Azure Cosmos DB Gremlin graph.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB Gremlin graph
          $ref: '#/components/schemas/GremlinGraphGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    GremlinGraphGetProperties:
      description: The properties of an Azure Cosmos DB Gremlin graph
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/GremlinGraphResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    CassandraViewGetResults:
      description: An Azure Cosmos DB Cassandra view.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB Cassandra view
          $ref: '#/components/schemas/CassandraViewGetProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    CassandraViewGetProperties:
      description: The properties of an Azure Cosmos DB Cassandra view
      type: object
      properties:
        resource:
          allOf:
            - $ref: '#/components/schemas/CassandraViewResource'
            - $ref: '#/components/schemas/ExtendedResourceProperties'
        options:
          allOf:
            - $ref: '#/components/schemas/OptionsResource'
    ConsistencyPolicy:
      type: object
      description: The consistency policy for the Cosmos DB database account.
      properties:
        defaultConsistencyLevel:
          description: The default consistency level and configuration settings of the Cosmos DB account.
          type: string
          enum:
            - Eventual
            - Session
            - BoundedStaleness
            - Strong
            - ConsistentPrefix
          x-ms-enum:
            name: DefaultConsistencyLevel
            modelAsString: false
        maxStalenessPrefix:
          description: When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
          type: integer
          minimum: 1
          maximum: 2147483647
          format: int64
        maxIntervalInSeconds:
          description: When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
          type: integer
          minimum: 5
          maximum: 86400
          format: int32
      required:
        - defaultConsistencyLevel
    CorsPolicy:
      type: object
      description: The CORS policy for the Cosmos DB database account.
      properties:
        allowedOrigins:
          description: The origin domains that are permitted to make a request against the service via CORS.
          type: string
        allowedMethods:
          description: The methods (HTTP request verbs) that the origin domain may use for a CORS request.
          type: string
        allowedHeaders:
          description: The request headers that the origin domain may specify on the CORS request.
          type: string
        exposedHeaders:
          description: The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.
          type: string
        maxAgeInSeconds:
          description: The maximum amount time that a browser should cache the preflight OPTIONS request.
          type: integer
          minimum: 1
          maximum: 2147483647
          format: int64
      required:
        - allowedOrigins
    DatabaseAccountGetProperties:
      description: Properties for the database account.
      type: object
      properties:
        provisioningState:
          $ref: '#/components/schemas/ProvisioningState'
        documentEndpoint:
          description: The connection endpoint for the Cosmos DB database account.
          type: string
          readOnly: true
        databaseAccountOfferType:
          description: 'The offer type for the Cosmos DB database account. Default value: Standard.'
          readOnly: true
          $ref: '#/components/schemas/DatabaseAccountOfferType'
        ipRules:
          description: List of IpRules.
          $ref: '#/components/schemas/IPRules'
        isVirtualNetworkFilterEnabled:
          description: Flag to indicate whether to enable/disable Virtual Network ACL rules.
          type: boolean
        enableAutomaticFailover:
          description: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
          type: boolean
        consistencyPolicy:
          description: The consistency policy for the Cosmos DB database account.
          $ref: '#/components/schemas/ConsistencyPolicy'
        capabilities:
          type: array
          description: List of Cosmos DB capabilities for the account
          items:
            $ref: '#/components/schemas/Capability'
        writeLocations:
          type: array
          readOnly: true
          description: An array that contains the write location for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/Location'
        readLocations:
          type: array
          readOnly: true
          description: An array that contains of the read locations enabled for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/Location'
        locations:
          type: array
          readOnly: true
          description: An array that contains all of the locations enabled for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/Location'
        failoverPolicies:
          type: array
          readOnly: true
          description: An array that contains the regions ordered by their failover priorities.
          items:
            $ref: '#/components/schemas/FailoverPolicy'
        virtualNetworkRules:
          type: array
          description: List of Virtual Network ACL rules configured for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
        privateEndpointConnections:
          type: array
          readOnly: true
          description: List of Private Endpoint Connections configured for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
        enableMultipleWriteLocations:
          description: Enables the account to write in multiple locations
          type: boolean
        enableCassandraConnector:
          description: Enables the cassandra connector on the Cosmos DB C* account
          type: boolean
        connectorOffer:
          description: The cassandra connector offer type for the Cosmos DB database C* account.
          $ref: '#/components/schemas/ConnectorOffer'
        disableKeyBasedMetadataWriteAccess:
          description: Disable write operations on metadata resources (databases, containers, throughput) via account keys
          type: boolean
        keyVaultKeyUri:
          description: The URI of the key vault
          type: string
        defaultIdentity:
          description: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be "FirstPartyIdentity", "SystemAssignedIdentity" and more.
          type: string
        publicNetworkAccess:
          description: Whether requests from Public Network are allowed
          $ref: '#/components/schemas/PublicNetworkAccess'
        enableFreeTier:
          description: Flag to indicate whether Free Tier is enabled.
          type: boolean
        apiProperties:
          description: API specific properties.
          type: object
          $ref: '#/components/schemas/ApiProperties'
        enableAnalyticalStorage:
          description: Flag to indicate whether to enable storage analytics.
          type: boolean
        analyticalStorageConfiguration:
          description: Analytical storage specific properties.
          type: object
          $ref: '#/components/schemas/AnalyticalStorageConfiguration'
        instanceId:
          description: A unique identifier assigned to the database account
          type: string
          readOnly: true
        createMode:
          description: Enum to indicate the mode of account creation.
          type: string
          default: Default
          $ref: '#/components/schemas/CreateMode'
        restoreParameters:
          description: Parameters to indicate the information about the restore.
          type: object
          $ref: '#/components/schemas/RestoreParameters'
        backupPolicy:
          description: The object representing the policy for taking backups on an account.
          type: object
          $ref: '#/components/schemas/BackupPolicy'
        cors:
          type: array
          description: The CORS policy for the Cosmos DB database account.
          items:
            $ref: '#/components/schemas/CorsPolicy'
        networkAclBypass:
          description: Indicates what services are allowed to bypass firewall checks.
          $ref: '#/components/schemas/NetworkAclBypass'
        networkAclBypassResourceIds:
          type: array
          description: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.
          items:
            type: string
            format: arm-id
        diagnosticLogSettings:
          type: object
          description: The Object representing the different Diagnostic log settings for the Cosmos DB Account.
          $ref: '#/components/schemas/DiagnosticLogSettings'
        disableLocalAuth:
          description: Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
          type: boolean
        capacity:
          description: The object that represents all properties related to capacity enforcement on an account.
          type: object
          $ref: '#/components/schemas/Capacity'
        capacityMode:
          description: Indicates the capacityMode of the Cosmos DB account.
          type: string
          $ref: '#/components/schemas/CapacityMode'
        capacityModeChangeTransitionState:
          description: The object that represents the migration state for the CapacityMode of the Cosmos DB account.
          type: object
          $ref: '#/components/schemas/CapacityModeChangeTransitionState'
        enableMaterializedViews:
          description: Flag to indicate whether to enable MaterializedViews on the Cosmos DB account
          type: boolean
        keysMetadata:
          description: The object that represents the metadata for the Account Keys of the Cosmos DB account.
          type: object
          $ref: '#/components/schemas/DatabaseAccountKeysMetadata'
        enablePartitionMerge:
          description: Flag to indicate enabling/disabling of Partition Merge feature on the account
          type: boolean
        enableBurstCapacity:
          description: Flag to indicate enabling/disabling of Burst Capacity Preview feature on the account
          type: boolean
        minimalTlsVersion:
          description: Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2.
          type: string
          $ref: '#/components/schemas/MinimalTlsVersion'
        customerManagedKeyStatus:
          description: Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.
          type: string
        enablePriorityBasedExecution:
          description: Flag to indicate enabling/disabling of Priority Based Execution Preview feature on the account
          type: boolean
        defaultPriorityLevel:
          description: Enum to indicate default Priority Level of request for Priority Based Execution.
          type: string
          $ref: '#/components/schemas/DefaultPriorityLevel'
        enablePerRegionPerPartitionAutoscale:
          description: Flag to indicate enabling/disabling of Per-Region Per-partition autoscale Preview feature on the account
          type: boolean
    DatabaseAccountCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB database accounts.
      type: object
      properties:
        consistencyPolicy:
          description: The consistency policy for the Cosmos DB account.
          $ref: '#/components/schemas/ConsistencyPolicy'
        locations:
          type: array
          description: An array that contains the georeplication locations enabled for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/Location'
        databaseAccountOfferType:
          description: The offer type for the database
          $ref: '#/components/schemas/DatabaseAccountOfferType'
        ipRules:
          description: List of IpRules.
          $ref: '#/components/schemas/IPRules'
        isVirtualNetworkFilterEnabled:
          description: Flag to indicate whether to enable/disable Virtual Network ACL rules.
          type: boolean
        enableAutomaticFailover:
          description: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
          type: boolean
        capabilities:
          type: array
          description: List of Cosmos DB capabilities for the account
          items:
            $ref: '#/components/schemas/Capability'
        virtualNetworkRules:
          type: array
          description: List of Virtual Network ACL rules configured for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
        enableMultipleWriteLocations:
          description: Enables the account to write in multiple locations
          type: boolean
        enableCassandraConnector:
          description: Enables the cassandra connector on the Cosmos DB C* account
          type: boolean
        connectorOffer:
          description: The cassandra connector offer type for the Cosmos DB database C* account.
          $ref: '#/components/schemas/ConnectorOffer'
        disableKeyBasedMetadataWriteAccess:
          description: Disable write operations on metadata resources (databases, containers, throughput) via account keys
          type: boolean
        keyVaultKeyUri:
          description: The URI of the key vault
          type: string
        defaultIdentity:
          description: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be "FirstPartyIdentity", "SystemAssignedIdentity" and more.
          type: string
        publicNetworkAccess:
          description: Whether requests from Public Network are allowed
          $ref: '#/components/schemas/PublicNetworkAccess'
        enableFreeTier:
          description: Flag to indicate whether Free Tier is enabled.
          type: boolean
        apiProperties:
          description: API specific properties. Currently, supported only for MongoDB API.
          type: object
          $ref: '#/components/schemas/ApiProperties'
        enableAnalyticalStorage:
          description: Flag to indicate whether to enable storage analytics.
          type: boolean
        analyticalStorageConfiguration:
          description: Analytical storage specific properties.
          type: object
          $ref: '#/components/schemas/AnalyticalStorageConfiguration'
        createMode:
          description: Enum to indicate the mode of account creation.
          type: string
          default: Default
          $ref: '#/components/schemas/CreateMode'
        backupPolicy:
          description: The object representing the policy for taking backups on an account.
          type: object
          $ref: '#/components/schemas/BackupPolicy'
        cors:
          type: array
          description: The CORS policy for the Cosmos DB database account.
          items:
            $ref: '#/components/schemas/CorsPolicy'
        networkAclBypass:
          description: Indicates what services are allowed to bypass firewall checks.
          $ref: '#/components/schemas/NetworkAclBypass'
        networkAclBypassResourceIds:
          type: array
          description: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.
          items:
            type: string
        diagnosticLogSettings:
          type: object
          description: The Object representing the different Diagnostic log settings for the Cosmos DB Account.
          $ref: '#/components/schemas/DiagnosticLogSettings'
        disableLocalAuth:
          description: Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
          type: boolean
        restoreParameters:
          description: Parameters to indicate the information about the restore.
          type: object
          $ref: '#/components/schemas/RestoreParameters'
        capacity:
          description: The object that represents all properties related to capacity enforcement on an account.
          type: object
          $ref: '#/components/schemas/Capacity'
        capacityMode:
          description: Indicates the capacityMode of the Cosmos DB account.
          type: string
          $ref: '#/components/schemas/CapacityMode'
        enableMaterializedViews:
          description: Flag to indicate whether to enable MaterializedViews on the Cosmos DB account
          type: boolean
        keysMetadata:
          description: This property is ignored during the update/create operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.
          type: object
          $ref: '#/components/schemas/DatabaseAccountKeysMetadata'
        enablePartitionMerge:
          description: Flag to indicate enabling/disabling of Partition Merge feature on the account
          type: boolean
        enableBurstCapacity:
          description: Flag to indicate enabling/disabling of Burst Capacity Preview feature on the account
          type: boolean
        minimalTlsVersion:
          description: Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2.
          type: string
          $ref: '#/components/schemas/MinimalTlsVersion'
        customerManagedKeyStatus:
          description: Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.
          type: string
        enablePriorityBasedExecution:
          description: Flag to indicate enabling/disabling of Priority Based Execution Preview feature on the account
          type: boolean
        defaultPriorityLevel:
          description: Enum to indicate default Priority Level of request for Priority Based Execution.
          type: string
          $ref: '#/components/schemas/DefaultPriorityLevel'
        enablePerRegionPerPartitionAutoscale:
          description: Flag to indicate enabling/disabling of Per-Region Per-partition autoscale Preview feature on the account
          type: boolean
      required:
        - locations
        - databaseAccountOfferType
    DatabaseAccountCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB database accounts.
      required:
        - properties
      properties:
        kind:
          description: Indicates the type of database account. This can only be set at database account creation.
          type: string
          default: GlobalDocumentDB
          enum:
            - GlobalDocumentDB
            - MongoDB
            - Parse
          x-ms-enum:
            name: DatabaseAccountKind
            modelAsString: true
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DatabaseAccountCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
      type: object
    DatabaseAccountUpdateProperties:
      description: Properties to update Azure Cosmos DB database accounts.
      type: object
      properties:
        consistencyPolicy:
          description: The consistency policy for the Cosmos DB account.
          $ref: '#/components/schemas/ConsistencyPolicy'
        locations:
          type: array
          description: An array that contains the georeplication locations enabled for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/Location'
        ipRules:
          description: List of IpRules.
          $ref: '#/components/schemas/IPRules'
        isVirtualNetworkFilterEnabled:
          description: Flag to indicate whether to enable/disable Virtual Network ACL rules.
          type: boolean
        enableAutomaticFailover:
          description: Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
          type: boolean
        capabilities:
          type: array
          description: List of Cosmos DB capabilities for the account
          items:
            $ref: '#/components/schemas/Capability'
        virtualNetworkRules:
          type: array
          description: List of Virtual Network ACL rules configured for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
        enableMultipleWriteLocations:
          description: Enables the account to write in multiple locations
          type: boolean
        enableCassandraConnector:
          description: Enables the cassandra connector on the Cosmos DB C* account
          type: boolean
        connectorOffer:
          description: The cassandra connector offer type for the Cosmos DB database C* account.
          $ref: '#/components/schemas/ConnectorOffer'
        disableKeyBasedMetadataWriteAccess:
          description: Disable write operations on metadata resources (databases, containers, throughput) via account keys
          type: boolean
        keyVaultKeyUri:
          description: The URI of the key vault
          type: string
        defaultIdentity:
          description: The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be "FirstPartyIdentity", "SystemAssignedIdentity" and more.
          type: string
        publicNetworkAccess:
          description: Whether requests from Public Network are allowed
          $ref: '#/components/schemas/PublicNetworkAccess'
        enableFreeTier:
          description: Flag to indicate whether Free Tier is enabled.
          type: boolean
        apiProperties:
          description: API specific properties. Currently, supported only for MongoDB API.
          type: object
          $ref: '#/components/schemas/ApiProperties'
        enableAnalyticalStorage:
          description: Flag to indicate whether to enable storage analytics.
          type: boolean
        analyticalStorageConfiguration:
          description: Analytical storage specific properties.
          type: object
          $ref: '#/components/schemas/AnalyticalStorageConfiguration'
        backupPolicy:
          description: The object representing the policy for taking backups on an account.
          type: object
          $ref: '#/components/schemas/BackupPolicy'
        cors:
          type: array
          description: The CORS policy for the Cosmos DB database account.
          items:
            $ref: '#/components/schemas/CorsPolicy'
        networkAclBypass:
          description: Indicates what services are allowed to bypass firewall checks.
          $ref: '#/components/schemas/NetworkAclBypass'
        networkAclBypassResourceIds:
          type: array
          description: An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.
          items:
            type: string
        diagnosticLogSettings:
          type: object
          description: The Object representing the different Diagnostic log settings for the Cosmos DB Account.
          $ref: '#/components/schemas/DiagnosticLogSettings'
        disableLocalAuth:
          description: Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.
          type: boolean
        capacity:
          description: The object that represents all properties related to capacity enforcement on an account.
          type: object
          $ref: '#/components/schemas/Capacity'
        capacityMode:
          description: Indicates the capacityMode of the Cosmos DB account.
          type: string
          $ref: '#/components/schemas/CapacityMode'
        enableMaterializedViews:
          description: Flag to indicate whether to enable MaterializedViews on the Cosmos DB account
          type: boolean
        keysMetadata:
          description: This property is ignored during the update operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.
          type: object
          $ref: '#/components/schemas/DatabaseAccountKeysMetadata'
        enablePartitionMerge:
          description: Flag to indicate enabling/disabling of Partition Merge feature on the account
          type: boolean
        enableBurstCapacity:
          description: Flag to indicate enabling/disabling of Burst Capacity Preview feature on the account
          type: boolean
        minimalTlsVersion:
          description: Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2.
          type: string
          $ref: '#/components/schemas/MinimalTlsVersion'
        customerManagedKeyStatus:
          description: Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.
          type: string
        enablePriorityBasedExecution:
          description: Flag to indicate enabling/disabling of Priority Based Execution Preview feature on the account
          type: boolean
        defaultPriorityLevel:
          description: Enum to indicate default Priority Level of request for Priority Based Execution.
          type: string
          $ref: '#/components/schemas/DefaultPriorityLevel'
        enablePerRegionPerPartitionAutoscale:
          description: Flag to indicate enabling/disabling of Per-Region Per-partition autoscale Preview feature on the account
          type: boolean
    DatabaseAccountUpdateParameters:
      description: Parameters for patching Azure Cosmos DB database account properties.
      properties:
        tags:
          $ref: '#/components/schemas/Tags'
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/DatabaseAccountUpdateProperties'
      type: object
    DatabaseAccountListReadOnlyKeysResult:
      description: The read-only access keys for the given database account.
      properties:
        primaryReadonlyMasterKey:
          readOnly: true
          type: string
          description: Base 64 encoded value of the primary read-only key.
        secondaryReadonlyMasterKey:
          readOnly: true
          type: string
          description: Base 64 encoded value of the secondary read-only key.
      type: object
    DatabaseAccountListKeysResult:
      description: The access keys for the given database account.
      properties:
        primaryMasterKey:
          readOnly: true
          type: string
          description: Base 64 encoded value of the primary read-write key.
        secondaryMasterKey:
          readOnly: true
          type: string
          description: Base 64 encoded value of the secondary read-write key.
        primaryReadonlyMasterKey:
          readOnly: true
          type: string
          description: Base 64 encoded value of the primary read-only key.
        secondaryReadonlyMasterKey:
          readOnly: true
          type: string
          description: Base 64 encoded value of the secondary read-only key.
      type: object
    DatabaseAccountConnectionString:
      description: Connection string for the Cosmos DB account
      properties:
        connectionString:
          readOnly: true
          type: string
          description: Value of the connection string
        description:
          readOnly: true
          type: string
          description: Description of the connection string
        keyKind:
          readOnly: true
          type: string
          description: Kind of the connection string key
          enum:
            - Primary
            - Secondary
            - PrimaryReadonly
            - SecondaryReadonly
          x-ms-enum:
            name: Kind
            modelAsString: true
        type:
          readOnly: true
          type: string
          description: Type of the connection string
          enum:
            - Sql
            - Table
            - MongoDB
            - Cassandra
            - CassandraConnectorMetadata
            - Gremlin
            - SqlDedicatedGateway
            - GremlinV2
            - Undefined
          x-ms-enum:
            name: Type
            modelAsString: true
      type: object
    DatabaseAccountListConnectionStringsResult:
      description: The connection strings for the given database account.
      properties:
        connectionStrings:
          type: array
          description: An array that contains the connection strings for the Cosmos DB account.
          items:
            $ref: '#/components/schemas/DatabaseAccountConnectionString'
      type: object
    DatabaseAccountRegenerateKeyParameters:
      type: object
      description: Parameters to regenerate the keys within the database account.
      properties:
        keyKind:
          type: string
          description: The access key to regenerate.
          enum:
            - primary
            - secondary
            - primaryReadonly
            - secondaryReadonly
          x-ms-enum:
            name: KeyKind
            modelAsString: true
      required:
        - keyKind
    DatabaseAccountOfferType:
      description: The offer type for the Cosmos DB database account.
      type: string
      enum:
        - Standard
      x-ms-enum:
        name: DatabaseAccountOfferType
        modelAsString: false
    ThroughputSettingsUpdateParameters:
      description: Parameters to update Cosmos DB resource throughput.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to update Azure Cosmos DB resource throughput.
          $ref: '#/components/schemas/ThroughputSettingsUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    ThroughputSettingsUpdateProperties:
      description: Properties to update Azure Cosmos DB resource throughput.
      type: object
      properties:
        resource:
          description: The standard JSON format of a resource throughput
          $ref: '#/components/schemas/ThroughputSettingsResource'
      required:
        - resource
    GraphResourceCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Graph resource.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB Graph resource.
          $ref: '#/components/schemas/GraphResourceCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    GraphResourceCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Graph resource.
      type: object
      properties:
        resource:
          description: The standard JSON format of a Graph resource
          $ref: '#/components/schemas/GraphResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    GraphResource:
      type: object
      description: Cosmos DB Graph resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB Graph
      required:
        - id
    SqlDatabaseCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB SQL database.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB SQL database.
          $ref: '#/components/schemas/SqlDatabaseCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlDatabaseCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB SQL database.
      type: object
      properties:
        resource:
          description: The standard JSON format of a SQL database
          $ref: '#/components/schemas/SqlDatabaseResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    SqlContainerCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB container.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB container.
          $ref: '#/components/schemas/SqlContainerCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlContainerCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB container.
      type: object
      properties:
        resource:
          description: The standard JSON format of a container
          $ref: '#/components/schemas/SqlContainerResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    SqlStoredProcedureCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB storedProcedure.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB storedProcedure.
          $ref: '#/components/schemas/SqlStoredProcedureCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlStoredProcedureCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB storedProcedure.
      type: object
      properties:
        resource:
          description: The standard JSON format of a storedProcedure
          $ref: '#/components/schemas/SqlStoredProcedureResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    SqlUserDefinedFunctionCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB userDefinedFunction.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB userDefinedFunction.
          $ref: '#/components/schemas/SqlUserDefinedFunctionCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlUserDefinedFunctionCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB userDefinedFunction.
      type: object
      properties:
        resource:
          description: The standard JSON format of a userDefinedFunction
          $ref: '#/components/schemas/SqlUserDefinedFunctionResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    SqlTriggerCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB trigger.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB trigger.
          $ref: '#/components/schemas/SqlTriggerCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    SqlTriggerCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB trigger.
      type: object
      properties:
        resource:
          description: The standard JSON format of a trigger
          $ref: '#/components/schemas/SqlTriggerResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    MongoDBDatabaseCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB MongoDB database.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB MongoDB database.
          $ref: '#/components/schemas/MongoDBDatabaseCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    MongoDBDatabaseCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB MongoDB database.
      type: object
      properties:
        resource:
          description: The standard JSON format of a MongoDB database
          $ref: '#/components/schemas/MongoDBDatabaseResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    MongoDBCollectionCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB MongoDB collection.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB MongoDB collection.
          $ref: '#/components/schemas/MongoDBCollectionCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    MongoDBCollectionCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB MongoDB collection.
      type: object
      properties:
        resource:
          description: The standard JSON format of a MongoDB collection
          $ref: '#/components/schemas/MongoDBCollectionResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    TableCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Table.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB Table.
          $ref: '#/components/schemas/TableCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    TableCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Table.
      type: object
      properties:
        resource:
          description: The standard JSON format of a Table
          $ref: '#/components/schemas/TableResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    CassandraKeyspaceCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Cassandra keyspace.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB Cassandra keyspace.
          $ref: '#/components/schemas/CassandraKeyspaceCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    CassandraKeyspaceCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Cassandra keyspace.
      type: object
      properties:
        resource:
          description: The standard JSON format of a Cassandra keyspace
          $ref: '#/components/schemas/CassandraKeyspaceResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    CassandraTableCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Cassandra table.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB Cassandra table.
          $ref: '#/components/schemas/CassandraTableCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    CassandraTableCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Cassandra table.
      type: object
      properties:
        resource:
          description: The standard JSON format of a Cassandra table
          $ref: '#/components/schemas/CassandraTableResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    GremlinDatabaseCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Gremlin database.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB Gremlin database.
          $ref: '#/components/schemas/GremlinDatabaseCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    GremlinDatabaseCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Gremlin database.
      type: object
      properties:
        resource:
          description: The standard JSON format of a Gremlin database
          $ref: '#/components/schemas/GremlinDatabaseResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    GremlinGraphCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Gremlin graph.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB Gremlin graph.
          $ref: '#/components/schemas/GremlinGraphCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    GremlinGraphCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Gremlin graph.
      type: object
      properties:
        resource:
          description: The standard JSON format of a Gremlin graph
          $ref: '#/components/schemas/GremlinGraphResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    CassandraViewCreateUpdateParameters:
      description: Parameters to create and update Cosmos DB Cassandra view.
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update Azure Cosmos DB Cassandra view.
          $ref: '#/components/schemas/CassandraViewCreateUpdateProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    CassandraViewCreateUpdateProperties:
      description: Properties to create and update Azure Cosmos DB Cassandra view.
      type: object
      properties:
        resource:
          description: The standard JSON format of a Cassandra view
          $ref: '#/components/schemas/CassandraViewResource'
        options:
          description: A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.
          $ref: '#/components/schemas/CreateUpdateOptions'
      required:
        - resource
    ThroughputSettingsResource:
      type: object
      description: Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.
      properties:
        throughput:
          type: integer
          description: Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both.
        autoscaleSettings:
          description: Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.
          $ref: '#/components/schemas/AutoscaleSettingsResource'
        minimumThroughput:
          type: string
          description: The minimum throughput of the resource
          readOnly: true
        offerReplacePending:
          type: string
          description: The throughput replace is pending
          readOnly: true
        instantMaximumThroughput:
          type: string
          description: The offer throughput value to instantly scale up without triggering splits
          readOnly: true
        softAllowedMaximumThroughput:
          type: string
          description: The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified
          readOnly: true
    AutoscaleSettingsResource:
      type: object
      description: Cosmos DB provisioned throughput settings object
      properties:
        maxThroughput:
          type: integer
          description: Represents maximum throughput container can scale up to.
        autoUpgradePolicy:
          description: Cosmos DB resource auto-upgrade policy
          $ref: '#/components/schemas/AutoUpgradePolicyResource'
        targetMaxThroughput:
          type: integer
          description: Represents target maximum throughput container can scale up to once offer is no longer in pending state.
          readOnly: true
      required:
        - maxThroughput
    AutoUpgradePolicyResource:
      type: object
      description: Cosmos DB resource auto-upgrade policy
      properties:
        throughputPolicy:
          description: Represents throughput policy which service must adhere to for auto-upgrade
          $ref: '#/components/schemas/ThroughputPolicyResource'
    ThroughputPolicyResource:
      type: object
      description: Cosmos DB resource throughput policy
      properties:
        isEnabled:
          type: boolean
          description: Determines whether the ThroughputPolicy is active or not
        incrementPercent:
          type: integer
          description: Represents the percentage by which throughput can increase every time throughput policy kicks in.
    OptionsResource:
      type: object
      description: Cosmos DB options resource object
      readOnly: true
      properties:
        throughput:
          type: integer
          description: Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details.
        autoscaleSettings:
          type: object
          $ref: '#/components/schemas/AutoscaleSettings'
          description: Specifies the Autoscale settings.
    RedistributeThroughputParameters:
      description: Cosmos DB redistribute throughput parameters object
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to redistribute throughput parameters object
          $ref: '#/components/schemas/RedistributeThroughputProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    RedistributeThroughputProperties:
      description: Properties to redistribute throughput for Azure Cosmos DB resource.
      type: object
      properties:
        resource:
          description: The standard JSON format of a resource throughput
          $ref: '#/components/schemas/RedistributeThroughputPropertiesResource'
      required:
        - resource
    RedistributeThroughputPropertiesResource:
      type: object
      description: Resource to redistribute throughput for Azure Cosmos DB resource
      properties:
        throughputPolicy:
          description: ThroughputPolicy to apply for throughput redistribution
          type: string
          enum:
            - none
            - equal
            - custom
          x-ms-enum:
            name: ThroughputPolicyType
            modelAsString: true
        targetPhysicalPartitionThroughputInfo:
          type: array
          description: Array of PhysicalPartitionThroughputInfoResource objects.
          items:
            $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResource'
        sourcePhysicalPartitionThroughputInfo:
          type: array
          description: Array of PhysicalPartitionThroughputInfoResource objects.
          items:
            $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResource'
      required:
        - throughputPolicy
        - targetPhysicalPartitionThroughputInfo
        - sourcePhysicalPartitionThroughputInfo
    RetrieveThroughputParameters:
      description: Cosmos DB retrieve throughput parameters object
      required:
        - properties
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to retrieve throughput parameters object
          $ref: '#/components/schemas/RetrieveThroughputProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    RetrieveThroughputProperties:
      description: Properties to retrieve throughput for Azure Cosmos DB resource.
      type: object
      properties:
        resource:
          description: The standard JSON format of a resource throughput
          $ref: '#/components/schemas/RetrieveThroughputPropertiesResource'
      required:
        - resource
    RetrieveThroughputPropertiesResource:
      type: object
      description: Resource to retrieve throughput information for Cosmos DB resource
      properties:
        physicalPartitionIds:
          type: array
          description: Array of PhysicalPartitionId objects.
          items:
            $ref: '#/components/schemas/PhysicalPartitionId'
      required:
        - physicalPartitionIds
    PhysicalPartitionId:
      type: object
      description: PhysicalPartitionId object
      properties:
        id:
          type: string
          description: Id of a physical partition
      required:
        - id
    PhysicalPartitionThroughputInfoResult:
      description: An Azure Cosmos DB PhysicalPartitionThroughputInfoResult object.
      properties:
        properties:
          x-ms-client-flatten: true
          description: The properties of an Azure Cosmos DB PhysicalPartitionThroughputInfoResult object
          $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResultProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
      type: object
    PhysicalPartitionThroughputInfoResultProperties:
      description: The properties of an Azure Cosmos DB PhysicalPartitionThroughputInfoResult object
      type: object
      properties:
        resource:
          description: properties of physical partition throughput info
          allOf:
            - $ref: '#/components/schemas/PhysicalPartitionThroughputInfoProperties'
    PhysicalPartitionThroughputInfoProperties:
      description: The properties of an Azure Cosmos DB PhysicalPartitionThroughputInfoProperties object
      type: object
      properties:
        physicalPartitionThroughputInfo:
          type: array
          description: Array of physical partition throughput info objects
          items:
            $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResource'
    PhysicalPartitionThroughputInfoResource:
      type: object
      description: PhysicalPartitionThroughputInfo object
      properties:
        id:
          type: string
          description: Id of a physical partition
        throughput:
          type: number
          format: double
          description: Throughput of a physical partition
      required:
        - id
    ClientEncryptionKeyResource:
      type: object
      description: Cosmos DB client encryption key resource object.
      properties:
        id:
          type: string
          description: Name of the ClientEncryptionKey
        encryptionAlgorithm:
          type: string
          description: Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data.
        wrappedDataEncryptionKey:
          type: string
          format: byte
          description: Wrapped (encrypted) form of the key represented as a byte array.
        keyWrapMetadata:
          description: Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.
          $ref: '#/components/schemas/KeyWrapMetadata'
    KeyWrapMetadata:
      type: object
      description: Represents key wrap metadata that a key wrapping provider can use to wrap/unwrap a client encryption key.
      properties:
        name:
          type: string
          description: The name of associated KeyEncryptionKey (aka CustomerManagedKey).
        type:
          type: string
          description: ProviderName of KeyStoreProvider.
        value:
          type: string
          description: Reference / link to the KeyEncryptionKey.
        algorithm:
          type: string
          description: Algorithm used in wrapping and unwrapping of the data encryption key.
    SqlDatabaseResource:
      type: object
      description: Cosmos DB SQL database resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB SQL database
        restoreParameters:
          description: Parameters to indicate the information about the restore
          $ref: '#/components/schemas/ResourceRestoreParameters'
        createMode:
          description: Enum to indicate the mode of resource creation.
          $ref: '#/components/schemas/CreateMode'
      required:
        - id
    SqlContainerResource:
      type: object
      description: Cosmos DB SQL container resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB SQL container
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
          description: The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container
        partitionKey:
          $ref: '#/components/schemas/ContainerPartitionKey'
          description: The configuration of the partition key to be used for partitioning data into multiple partitions
        defaultTtl:
          type: integer
          description: Default time to live
        uniqueKeyPolicy:
          $ref: '#/components/schemas/UniqueKeyPolicy'
          description: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
        conflictResolutionPolicy:
          $ref: '#/components/schemas/ConflictResolutionPolicy'
          description: The conflict resolution policy for the container.
        clientEncryptionPolicy:
          $ref: '#/components/schemas/ClientEncryptionPolicy'
          description: The client encryption policy for the container.
        analyticalStorageTtl:
          type: integer
          format: int64
          description: Analytical TTL.
        restoreParameters:
          description: Parameters to indicate the information about the restore
          $ref: '#/components/schemas/ResourceRestoreParameters'
        createMode:
          description: Enum to indicate the mode of resource creation.
          $ref: '#/components/schemas/CreateMode'
        materializedViewDefinition:
          $ref: '#/components/schemas/MaterializedViewDefinition'
          description: The configuration for defining Materialized Views. This must be specified only for creating a Materialized View container.
        computedProperties:
          description: List of computed properties
          type: array
          items:
            $ref: '#/components/schemas/ComputedProperty'
      required:
        - id
    IndexingPolicy:
      type: object
      description: Cosmos DB indexing policy
      properties:
        automatic:
          type: boolean
          description: Indicates if the indexing policy is automatic
        indexingMode:
          description: Indicates the indexing mode.
          type: string
          default: consistent
          enum:
            - consistent
            - lazy
            - none
          x-ms-enum:
            name: IndexingMode
            modelAsString: true
        includedPaths:
          description: List of paths to include in the indexing
          type: array
          items:
            $ref: '#/components/schemas/IncludedPath'
        excludedPaths:
          description: List of paths to exclude from indexing
          type: array
          items:
            $ref: '#/components/schemas/ExcludedPath'
        compositeIndexes:
          description: List of composite path list
          type: array
          items:
            $ref: '#/components/schemas/CompositePathList'
        spatialIndexes:
          description: List of spatial specifics
          type: array
          items:
            $ref: '#/components/schemas/SpatialSpec'
    ExcludedPath:
      type: object
      properties:
        path:
          type: string
          description: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
    IncludedPath:
      type: object
      description: The paths that are included in indexing
      properties:
        path:
          type: string
          description: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
        indexes:
          description: List of indexes for this path
          type: array
          items:
            $ref: '#/components/schemas/Indexes'
    Indexes:
      type: object
      description: The indexes for the path.
      properties:
        dataType:
          description: The datatype for which the indexing behavior is applied to.
          type: string
          default: String
          enum:
            - String
            - Number
            - Point
            - Polygon
            - LineString
            - MultiPolygon
          x-ms-enum:
            name: DataType
            modelAsString: true
        precision:
          description: The precision of the index. -1 is maximum precision.
          type: integer
        kind:
          description: Indicates the type of index.
          type: string
          default: Hash
          enum:
            - Hash
            - Range
            - Spatial
          x-ms-enum:
            name: IndexKind
            modelAsString: true
    CompositePathList:
      description: List of composite path
      type: array
      items:
        $ref: '#/components/schemas/CompositePath'
    CompositePath:
      type: object
      properties:
        path:
          type: string
          description: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
        order:
          description: Sort order for composite paths.
          type: string
          enum:
            - ascending
            - descending
          x-ms-enum:
            name: CompositePathSortOrder
            modelAsString: true
    SpatialSpec:
      type: object
      properties:
        path:
          type: string
          description: The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
        types:
          description: List of path's spatial type
          type: array
          items:
            $ref: '#/components/schemas/SpatialType'
    SpatialType:
      description: Indicates the spatial type of index.
      type: string
      enum:
        - Point
        - LineString
        - Polygon
        - MultiPolygon
      x-ms-enum:
        name: SpatialType
        modelAsString: true
    ComputedProperty:
      type: object
      description: The definition of a computed property
      properties:
        name:
          type: string
          description: The name of a computed property, for example - "cp_lowerName"
        query:
          type: string
          description: The query that evaluates the value for computed property, for example - "SELECT VALUE LOWER(c.name) FROM c"
    ContainerPartitionKey:
      type: object
      description: The configuration of the partition key to be used for partitioning data into multiple partitions
      properties:
        paths:
          description: List of paths using which data within the container can be partitioned
          type: array
          items:
            $ref: '#/components/schemas/Path'
        kind:
          description: Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create
          type: string
          default: Hash
          enum:
            - Hash
            - Range
            - MultiHash
          x-ms-enum:
            name: PartitionKind
            modelAsString: true
        version:
          description: Indicates the version of the partition key definition
          type: integer
          minimum: 1
          maximum: 2
          format: int32
        systemKey:
          description: Indicates if the container is using a system generated partition key
          type: boolean
          readOnly: true
    Path:
      type: string
      description: A path. These typically start with root (/path)
    UniqueKeyPolicy:
      type: object
      description: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
      properties:
        uniqueKeys:
          description: List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
          type: array
          items:
            $ref: '#/components/schemas/UniqueKey'
    UniqueKey:
      type: object
      description: The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.
      properties:
        paths:
          description: List of paths must be unique for each document in the Azure Cosmos DB service
          type: array
          items:
            $ref: '#/components/schemas/Path'
    ConflictResolutionPolicy:
      type: object
      description: The conflict resolution policy for the container.
      properties:
        mode:
          description: Indicates the conflict resolution mode.
          type: string
          default: LastWriterWins
          enum:
            - LastWriterWins
            - Custom
          x-ms-enum:
            name: ConflictResolutionMode
            modelAsString: true
        conflictResolutionPath:
          type: string
          description: The conflict resolution path in the case of LastWriterWins mode.
        conflictResolutionProcedure:
          type: string
          description: The procedure to resolve conflicts in the case of custom mode.
    ClientEncryptionPolicy:
      type: object
      description: Cosmos DB client encryption policy.
      properties:
        includedPaths:
          description: Paths of the item that need encryption along with path-specific settings.
          type: array
          items:
            $ref: '#/components/schemas/ClientEncryptionIncludedPath'
          x-ms-identifiers: []
        policyFormatVersion:
          description: 'Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. '
          type: integer
          minimum: 1
          maximum: 2
          format: int32
      required:
        - includedPaths
        - policyFormatVersion
    ClientEncryptionIncludedPath:
      type: object
      description: .
      properties:
        path:
          description: Path that needs to be encrypted.
          type: string
        clientEncryptionKeyId:
          description: The identifier of the Client Encryption Key to be used to encrypt the path.
          type: string
        encryptionType:
          description: The type of encryption to be performed. Eg - Deterministic, Randomized.
          type: string
        encryptionAlgorithm:
          description: The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.
          type: string
      required:
        - path
        - clientEncryptionKeyId
        - encryptionType
        - encryptionAlgorithm
    MaterializedViewDefinition:
      type: object
      description: Materialized View definition for the container.
      properties:
        sourceCollectionRid:
          description: An unique identifier for the source collection. This is a system generated property.
          type: string
          readOnly: true
        sourceCollectionId:
          description: The name of the source container on which the Materialized View will be created.
          type: string
        definition:
          description: The definition should be an SQL query which would be used to fetch data from the source container to populate into the Materialized View container.
          type: string
      required:
        - sourceCollectionId
        - definition
    SqlStoredProcedureResource:
      type: object
      description: Cosmos DB SQL storedProcedure resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB SQL storedProcedure
        body:
          type: string
          description: Body of the Stored Procedure
      required:
        - id
    SqlUserDefinedFunctionResource:
      type: object
      description: Cosmos DB SQL userDefinedFunction resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB SQL userDefinedFunction
        body:
          type: string
          description: Body of the User Defined Function
      required:
        - id
    SqlTriggerResource:
      type: object
      description: Cosmos DB SQL trigger resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB SQL trigger
        body:
          type: string
          description: Body of the Trigger
        triggerType:
          type: string
          enum:
            - Pre
            - Post
          description: Type of the Trigger
          x-ms-enum:
            name: triggerType
            modelAsString: true
        triggerOperation:
          type: string
          enum:
            - All
            - Create
            - Update
            - Delete
            - Replace
          description: The operation the trigger is associated with
          x-ms-enum:
            name: triggerOperation
            modelAsString: true
      required:
        - id
    MongoDBDatabaseResource:
      type: object
      description: Cosmos DB MongoDB database resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB MongoDB database
        restoreParameters:
          description: Parameters to indicate the information about the restore
          $ref: '#/components/schemas/ResourceRestoreParameters'
        createMode:
          description: Enum to indicate the mode of resource creation.
          $ref: '#/components/schemas/CreateMode'
      required:
        - id
    MongoDBCollectionResource:
      type: object
      description: Cosmos DB MongoDB collection resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB MongoDB collection
        shardKey:
          description: A key-value pair of shard keys to be applied for the request.
          $ref: '#/components/schemas/ShardKeys'
        indexes:
          description: List of index keys
          type: array
          items:
            $ref: '#/components/schemas/MongoIndex'
        analyticalStorageTtl:
          type: integer
          description: Analytical TTL.
        restoreParameters:
          description: Parameters to indicate the information about the restore
          $ref: '#/components/schemas/ResourceRestoreParameters'
        createMode:
          description: Enum to indicate the mode of resource creation.
          $ref: '#/components/schemas/CreateMode'
      required:
        - id
    ShardKeys:
      additionalProperties:
        type: string
      description: The shard key and partition kind pair, only support "Hash" partition kind
      properties: {}
      type: object
    MongoIndex:
      type: object
      description: Cosmos DB MongoDB collection index key
      properties:
        key:
          description: Cosmos DB MongoDB collection index keys
          $ref: '#/components/schemas/MongoIndexKeys'
        options:
          description: Cosmos DB MongoDB collection index key options
          $ref: '#/components/schemas/MongoIndexOptions'
    MongoIndexKeys:
      type: object
      description: Cosmos DB MongoDB collection resource object
      properties:
        keys:
          description: List of keys for each MongoDB collection in the Azure Cosmos DB service
          type: array
          items:
            $ref: '#/components/schemas/Key'
    Key:
      type: string
      description: A Key.
    MongoIndexOptions:
      type: object
      description: Cosmos DB MongoDB collection index options
      properties:
        expireAfterSeconds:
          description: Expire after seconds
          type: integer
        unique:
          description: Is unique or not
          type: boolean
    TableResource:
      type: object
      description: Cosmos DB table resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB table
        restoreParameters:
          description: Parameters to indicate the information about the restore
          $ref: '#/components/schemas/ResourceRestoreParameters'
        createMode:
          description: Enum to indicate the mode of resource creation.
          $ref: '#/components/schemas/CreateMode'
      required:
        - id
    CassandraKeyspaceResource:
      type: object
      description: Cosmos DB Cassandra keyspace resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB Cassandra keyspace
      required:
        - id
    CassandraTableResource:
      type: object
      description: Cosmos DB Cassandra table resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB Cassandra table
        defaultTtl:
          type: integer
          description: Time to live of the Cosmos DB Cassandra table
        schema:
          description: Schema of the Cosmos DB Cassandra table
          $ref: '#/components/schemas/CassandraSchema'
        analyticalStorageTtl:
          type: integer
          description: Analytical TTL.
      required:
        - id
    CassandraSchema:
      type: object
      description: Cosmos DB Cassandra table schema
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/Column'
          description: List of Cassandra table columns.
        partitionKeys:
          type: array
          items:
            $ref: '#/components/schemas/CassandraPartitionKey'
          description: List of partition key.
        clusterKeys:
          type: array
          items:
            $ref: '#/components/schemas/ClusterKey'
          description: List of cluster key.
    Column:
      type: object
      description: Cosmos DB Cassandra table column
      properties:
        name:
          type: string
          description: Name of the Cosmos DB Cassandra table column
        type:
          type: string
          description: Type of the Cosmos DB Cassandra table column
    CassandraPartitionKey:
      type: object
      description: Cosmos DB Cassandra table partition key
      properties:
        name:
          type: string
          description: Name of the Cosmos DB Cassandra table partition key
    ClusterKey:
      type: object
      description: Cosmos DB Cassandra table cluster key
      properties:
        name:
          type: string
          description: Name of the Cosmos DB Cassandra table cluster key
        orderBy:
          type: string
          description: Order of the Cosmos DB Cassandra table cluster key, only support "Asc" and "Desc"
    GremlinDatabaseResource:
      type: object
      description: Cosmos DB Gremlin database resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB Gremlin database
        restoreParameters:
          description: Parameters to indicate the information about the restore
          $ref: '#/components/schemas/ResourceRestoreParameters'
        createMode:
          description: Enum to indicate the mode of resource creation.
          $ref: '#/components/schemas/CreateMode'
      required:
        - id
    GremlinGraphResource:
      type: object
      description: Cosmos DB Gremlin graph resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB Gremlin graph
        indexingPolicy:
          $ref: '#/components/schemas/IndexingPolicy'
          description: The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph
        partitionKey:
          $ref: '#/components/schemas/ContainerPartitionKey'
          description: The configuration of the partition key to be used for partitioning data into multiple partitions
        defaultTtl:
          type: integer
          description: Default time to live
        uniqueKeyPolicy:
          $ref: '#/components/schemas/UniqueKeyPolicy'
          description: The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.
        conflictResolutionPolicy:
          $ref: '#/components/schemas/ConflictResolutionPolicy'
          description: The conflict resolution policy for the graph.
        analyticalStorageTtl:
          type: integer
          format: int64
          description: Analytical TTL.
        restoreParameters:
          description: Parameters to indicate the information about the restore
          $ref: '#/components/schemas/ResourceRestoreParameters'
        createMode:
          description: Enum to indicate the mode of resource creation.
          $ref: '#/components/schemas/CreateMode'
      required:
        - id
    CassandraViewResource:
      type: object
      description: Cosmos DB Cassandra view resource object
      properties:
        id:
          type: string
          description: Name of the Cosmos DB Cassandra view
        viewDefinition:
          type: string
          description: View Definition of the Cosmos DB Cassandra view
      required:
        - id
        - viewDefinition
    CreateUpdateOptions:
      type: object
      properties:
        throughput:
          type: integer
          description: 'Request Units per second. For example, "throughput": 10000.'
        autoscaleSettings:
          $ref: '#/components/schemas/AutoscaleSettings'
          description: 'Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.'
      description: CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are "If-Match", "If-None-Match", "Session-Token" and "Throughput"
    AutoscaleSettings:
      type: object
      properties:
        maxThroughput:
          type: integer
          description: Represents maximum throughput, the resource can scale up to.
    Capability:
      type: object
      description: Cosmos DB capability object
      properties:
        name:
          type: string
          description: 'Name of the Cosmos DB capability. For example, "name": "EnableCassandra". Current values also include "EnableTable" and "EnableGremlin".'
    Capacity:
      type: object
      description: The object that represents all properties related to capacity enforcement on an account.
      properties:
        totalThroughputLimit:
          type: integer
          minimum: -1
          format: int32
          description: The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.
    CapacityMode:
      description: Indicates the capacity mode of the account.
      type: string
      enum:
        - None
        - Provisioned
        - Serverless
      x-ms-enum:
        name: CapacityMode
        modelAsString: true
    CapacityModeChangeTransitionState:
      description: The transition state information related capacity mode change with update request.
      type: object
      properties:
        capacityModeTransitionStatus:
          type: string
          description: The transition status of capacity mode.
          enum:
            - Invalid
            - Initialized
            - InProgress
            - Completed
            - Failed
          x-ms-enum:
            name: CapacityModeTransitionStatus
            modelAsString: true
        currentCapacityMode:
          description: Indicates the current capacity mode of the account.
          type: string
          enum:
            - None
            - Provisioned
            - Serverless
          x-ms-enum:
            name: CapacityMode
            modelAsString: true
        previousCapacityMode:
          description: Indicates the previous capacity mode of the account before successful transition.
          type: string
          enum:
            - None
            - Provisioned
            - Serverless
          x-ms-enum:
            name: CapacityMode
            modelAsString: true
        capacityModeTransitionBeginTimestamp:
          readOnly: true
          type: string
          format: date-time
          description: Begin time in UTC of the capacity mode change.
        capacityModeTransitionEndTimestamp:
          readOnly: true
          type: string
          format: date-time
          description: End time in UTC of the capacity mode change.
        capacityModeLastSuccessfulTransitionEndTimestamp:
          readOnly: true
          type: string
          format: date-time
          description: End time in UTC of the last successful capacity mode change.
    Tags:
      additionalProperties:
        type: string
      description: 'Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with "defaultExperience": "Cassandra". Current "defaultExperience" values also include "Table", "Graph", "DocumentDB", and "MongoDB".'
      properties: {}
      type: object
    ManagedServiceIdentity:
      properties:
        principalId:
          readOnly: true
          type: string
          description: The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
        type:
          type: string
          description: The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.
          enum:
            - SystemAssigned
            - UserAssigned
            - SystemAssigned,UserAssigned
            - None
          x-ms-enum:
            name: ResourceIdentityType
            modelAsString: false
        userAssignedIdentities:
          type: object
          additionalProperties:
            type: object
            properties:
              principalId:
                readOnly: true
                type: string
                description: The principal id of user assigned identity.
              clientId:
                readOnly: true
                type: string
                description: The client id of user assigned identity.
          description: 'The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
      description: Identity for the resource.
      type: object
    IPRules:
      type: array
      description: Array of IpAddressOrRange objects.
      items:
        $ref: '#/components/schemas/IpAddressOrRange'
    IpAddressOrRange:
      type: object
      description: IpAddressOrRange object
      properties:
        ipAddressOrRange:
          type: string
          description: 'A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.'
    VirtualNetworkRule:
      type: object
      description: Virtual Network ACL Rule object
      properties:
        id:
          type: string
          format: arm-id
          x-ms-arm-id-details:
            allowedResources:
              - type: Microsoft.Network/virtualNetworks/subnets
          description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.'
        ignoreMissingVNetServiceEndpoint:
          type: boolean
          description: Create firewall rule before the virtual network has vnet service endpoint enabled.
    NetworkAclBypass:
      description: Indicates what services are allowed to bypass firewall checks.
      type: string
      enum:
        - None
        - AzureServices
      x-ms-enum:
        name: NetworkAclBypass
        modelAsString: false
    AccountKeyMetadata:
      description: The metadata related to an access key for a given database account.
      type: object
      properties:
        generationTime:
          readOnly: true
          type: string
          format: date-time
          description: Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18.
    DatabaseAccountKeysMetadata:
      description: The metadata related to each access key for the given Cosmos DB database account.
      type: object
      readOnly: true
      properties:
        primaryMasterKey:
          readOnly: true
          description: The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.
          $ref: '#/components/schemas/AccountKeyMetadata'
        secondaryMasterKey:
          readOnly: true
          description: The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.
          $ref: '#/components/schemas/AccountKeyMetadata'
        primaryReadonlyMasterKey:
          readOnly: true
          description: The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.
          $ref: '#/components/schemas/AccountKeyMetadata'
        secondaryReadonlyMasterKey:
          readOnly: true
          description: The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.
          $ref: '#/components/schemas/AccountKeyMetadata'
    DiagnosticLogSettings:
      type: object
      description: Indicates what diagnostic log settings are to be enabled.
      properties:
        enableFullTextQuery:
          description: Describe the level of detail with which queries are to be logged.
          type: string
          enum:
            - None
            - 'True'
            - 'False'
          x-ms-enum:
            name: EnableFullTextQuery
            modelAsString: false
    UsagesResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Usage'
          description: The list of usages for the database. A usage is a point in time metric
      description: The response to a list usage request.
      type: object
    Usage:
      properties:
        unit:
          description: The unit of the metric.
          $ref: '#/components/schemas/UnitType'
        name:
          $ref: '#/components/schemas/MetricName'
          readOnly: true
          description: The name information for the metric.
        quotaPeriod:
          type: string
          readOnly: true
          description: The quota period used to summarize the usage values.
        limit:
          type: integer
          format: int64
          readOnly: true
          description: Maximum value for this metric
        currentValue:
          type: integer
          format: int64
          readOnly: true
          description: Current value for this metric
      description: The usage data for a usage request.
      type: object
    PartitionUsagesResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/PartitionUsage'
          description: The list of partition-level usages for the database. A usage is a point in time metric
      description: The response to a list partition level usage request.
      type: object
    PartitionUsage:
      description: The partition level usage data for a usage request.
      properties:
        unit:
          description: The unit of the metric.
          $ref: '#/components/schemas/UnitType'
        name:
          $ref: '#/components/schemas/MetricName'
          readOnly: true
          description: The name information for the metric.
        quotaPeriod:
          type: string
          readOnly: true
          description: The quota period used to summarize the usage values.
        limit:
          type: integer
          format: int64
          readOnly: true
          description: Maximum value for this metric
        currentValue:
          type: integer
          format: int64
          readOnly: true
          description: Current value for this metric
        partitionId:
          readOnly: true
          type: string
          description: The partition id (GUID identifier) of the usages.
        partitionKeyRangeId:
          readOnly: true
          type: string
          description: The partition key range id (integer identifier) of the usages.
      type: object
    MetricDefinitionsListResult:
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MetricDefinition'
          description: The list of metric definitions for the account.
      description: The response to a list metric definitions request.
      type: object
    MetricDefinition:
      properties:
        metricAvailabilities:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MetricAvailability'
          description: The list of metric availabilities for the account.
        primaryAggregationType:
          readOnly: true
          type: string
          description: The primary aggregation type of the metric.
          enum:
            - None
            - Average
            - Total
            - Minimum
            - Maximum
            - Last
          x-ms-enum:
            modelAsString: true
            name: PrimaryAggregationType
        unit:
          description: The unit of the metric.
          $ref: '#/components/schemas/UnitType'
        resourceUri:
          readOnly: true
          type: string
          description: The resource uri of the database.
        name:
          readOnly: true
          $ref: '#/components/schemas/MetricName'
          description: The name information for the metric.
      description: The definition of a metric.
      type: object
    MetricAvailability:
      properties:
        timeGrain:
          readOnly: true
          type: string
          description: The time grain to be used to summarize the metric values.
        retention:
          readOnly: true
          type: string
          description: The retention for the metric values.
      description: The availability of the metric.
      type: object
    MetricListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Metric'
          description: The list of metrics for the account.
      description: The response to a list metrics request.
      type: object
    Metric:
      properties:
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: The start time for the metric (ISO-8601 format).
        endTime:
          readOnly: true
          type: string
          format: date-time
          description: The end time for the metric (ISO-8601 format).
        timeGrain:
          readOnly: true
          type: string
          description: The time grain to be used to summarize the metric values.
        unit:
          $ref: '#/components/schemas/UnitType'
          description: The unit of the metric.
        name:
          readOnly: true
          $ref: '#/components/schemas/MetricName'
          description: The name information for the metric.
        metricValues:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MetricValue'
          description: The metric values for the specified time window and timestep.
      description: Metric data
      type: object
    MetricName:
      properties:
        value:
          readOnly: true
          type: string
          description: The name of the metric.
        localizedValue:
          readOnly: true
          type: string
          description: The friendly name of the metric.
      description: A metric name.
      type: object
    MetricValue:
      properties:
        _count:
          readOnly: true
          type: number
          format: int32
          description: The number of values for the metric.
        average:
          readOnly: true
          type: number
          format: double
          description: The average value of the metric.
        maximum:
          readOnly: true
          type: number
          format: double
          description: The max value of the metric.
        minimum:
          readOnly: true
          type: number
          format: double
          description: The min value of the metric.
        timestamp:
          readOnly: true
          type: string
          format: date-time
          description: The metric timestamp (ISO-8601 format).
        total:
          readOnly: true
          type: number
          format: double
          description: The total value of the metric.
      description: Represents metrics values.
      type: object
    PercentileMetricListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PercentileMetric'
          description: The list of percentile metrics for the account.
      description: The response to a list percentile metrics request.
      type: object
    PercentileMetric:
      properties:
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: The start time for the metric (ISO-8601 format).
        endTime:
          readOnly: true
          type: string
          format: date-time
          description: The end time for the metric (ISO-8601 format).
        timeGrain:
          readOnly: true
          type: string
          description: The time grain to be used to summarize the metric values.
        unit:
          $ref: '#/components/schemas/UnitType'
          description: The unit of the metric.
        name:
          readOnly: true
          $ref: '#/components/schemas/MetricName'
          description: The name information for the metric.
        metricValues:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PercentileMetricValue'
          description: The percentile metric values for the specified time window and timestep.
      description: Percentile Metric data
      type: object
    PercentileMetricValue:
      description: Represents percentile metrics values.
      properties:
        _count:
          readOnly: true
          type: number
          format: int32
          description: The number of values for the metric.
        average:
          readOnly: true
          type: number
          format: double
          description: The average value of the metric.
        maximum:
          readOnly: true
          type: number
          format: double
          description: The max value of the metric.
        minimum:
          readOnly: true
          type: number
          format: double
          description: The min value of the metric.
        timestamp:
          readOnly: true
          type: string
          format: date-time
          description: The metric timestamp (ISO-8601 format).
        total:
          readOnly: true
          type: number
          format: double
          description: The total value of the metric.
        P10:
          readOnly: true
          type: number
          format: double
          description: The 10th percentile value for the metric.
        P25:
          readOnly: true
          type: number
          format: double
          description: The 25th percentile value for the metric.
        P50:
          readOnly: true
          type: number
          format: double
          description: The 50th percentile value for the metric.
        P75:
          readOnly: true
          type: number
          format: double
          description: The 75th percentile value for the metric.
        P90:
          readOnly: true
          type: number
          format: double
          description: The 90th percentile value for the metric.
        P95:
          readOnly: true
          type: number
          format: double
          description: The 95th percentile value for the metric.
        P99:
          readOnly: true
          type: number
          format: double
          description: The 99th percentile value for the metric.
      type: object
    PartitionMetricListResult:
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/PartitionMetric'
          description: The list of partition-level metrics for the account.
      description: The response to a list partition metrics request.
      type: object
    PartitionMetric:
      description: The metric values for a single partition.
      properties:
        startTime:
          readOnly: true
          type: string
          format: date-time
          description: The start time for the metric (ISO-8601 format).
        endTime:
          readOnly: true
          type: string
          format: date-time
          description: The end time for the metric (ISO-8601 format).
        timeGrain:
          readOnly: true
          type: string
          description: The time grain to be used to summarize the metric values.
        unit:
          $ref: '#/components/schemas/UnitType'
          description: The unit of the metric.
        name:
          readOnly: true
          $ref: '#/components/schemas/MetricName'
          description: The name information for the metric.
        metricValues:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/MetricValue'
          description: The metric values for the specified time window and timestep.
        partitionId:
          readOnly: true
          type: string
          description: The partition id (GUID identifier) of the metric values.
        partitionKeyRangeId:
          readOnly: true
          type: string
          description: The partition key range id (integer identifier) of the metric values.
      type: object
    UnitType:
      type: string
      readOnly: true
      description: The unit of the metric.
      enum:
        - Count
        - Bytes
        - Seconds
        - Percent
        - CountPerSecond
        - BytesPerSecond
        - Milliseconds
      x-ms-enum:
        modelAsString: true
        name: UnitType
    ConnectorOffer:
      description: The cassandra connector offer type for the Cosmos DB C* database account.
      type: string
      enum:
        - Small
      x-ms-enum:
        name: ConnectorOffer
        modelAsString: true
    ApiProperties:
      type: object
      properties:
        serverVersion:
          type: string
          enum:
            - '3.2'
            - '3.6'
            - '4.0'
            - '4.2'
            - '5.0'
            - '6.0'
            - '7.0'
          description: Describes the version of the MongoDB account.
          x-ms-enum:
            modelAsString: true
            name: ServerVersion
    AnalyticalStorageConfiguration:
      type: object
      description: Analytical storage specific properties.
      properties:
        schemaType:
          type: string
          $ref: '#/components/schemas/AnalyticalStorageSchemaType'
    AnalyticalStorageSchemaType:
      type: string
      description: Describes the types of schema for analytical storage.
      enum:
        - WellDefined
        - FullFidelity
      x-ms-enum:
        modelAsString: true
        name: AnalyticalStorageSchemaType
    CreateMode:
      description: Enum to indicate the mode of account creation.
      type: string
      default: Default
      enum:
        - Default
        - Restore
      x-ms-enum:
        name: CreateMode
        modelAsString: true
    RestoreParameters:
      description: Parameters to indicate the information about the restore.
      x-ms-mutability:
        - read
        - create
      properties:
        restoreMode:
          type: string
          enum:
            - PointInTime
          description: Describes the mode of the restore.
          x-ms-enum:
            modelAsString: true
            name: RestoreMode
        restoreSource:
          type: string
          description: 'The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}'
        restoreTimestampInUtc:
          type: string
          format: date-time
          description: Time to which the account has to be restored (ISO-8601 format).
        databasesToRestore:
          type: array
          description: List of specific databases available for restore.
          items:
            $ref: '#/components/schemas/DatabaseRestoreResource'
        gremlinDatabasesToRestore:
          type: array
          description: List of specific gremlin databases available for restore.
          items:
            $ref: '#/components/schemas/GremlinDatabaseRestoreResource'
        tablesToRestore:
          type: array
          description: List of specific tables available for restore.
          items:
            $ref: '#/components/schemas/TableName'
        sourceBackupLocation:
          type: string
          description: The source backup location for restore.
        restoreWithTtlDisabled:
          type: boolean
          description: Specifies whether the restored account will have Time-To-Live disabled upon the successful restore.
      type: object
    RestoreParametersBase:
      type: object
      description: Parameters to indicate the information about the restore.
      x-ms-mutability:
        - read
        - create
      properties:
        restoreSource:
          type: string
          description: 'The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}'
        restoreTimestampInUtc:
          type: string
          format: date-time
          description: Time to which the account has to be restored (ISO-8601 format).
        restoreWithTtlDisabled:
          type: boolean
          description: Specifies whether the restored account will have Time-To-Live disabled upon the successful restore.
    ResourceRestoreParameters:
      description: Parameters to indicate the information about the restore.
      x-ms-mutability:
        - read
        - create
      properties:
        restoreSource:
          type: string
          description: 'The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}'
        restoreTimestampInUtc:
          type: string
          format: date-time
          description: Time to which the account has to be restored (ISO-8601 format).
        restoreWithTtlDisabled:
          type: boolean
          description: Specifies whether the restored account will have Time-To-Live disabled upon the successful restore.
      type: object
    DatabaseRestoreResource:
      type: object
      description: Specific Databases to restore.
      properties:
        databaseName:
          type: string
          description: The name of the database available for restore.
        collectionNames:
          type: array
          description: The names of the collections available for restore.
          items:
            $ref: '#/components/schemas/CollectionName'
    GremlinDatabaseRestoreResource:
      type: object
      description: Specific Gremlin Databases to restore.
      properties:
        databaseName:
          type: string
          description: The name of the gremlin database available for restore.
        graphNames:
          type: array
          description: The names of the graphs available for restore.
          items:
            $ref: '#/components/schemas/GraphName'
    CollectionName:
      type: string
      description: The name of the collection.
    GraphName:
      type: string
      description: The name of the graph.
    TableName:
      type: string
      description: The name of the table.
    BackupPolicy:
      type: object
      description: The object representing the policy for taking backups on an account.
      discriminator:
        propertyName: type
      properties:
        type:
          description: Describes the mode of backups.
          type: string
          $ref: '#/components/schemas/BackupPolicyType'
        migrationState:
          description: The object representing the state of the migration between the backup policies.
          type: object
          $ref: '#/components/schemas/BackupPolicyMigrationState'
      required:
        - type
    BackupPolicyType:
      description: Describes the mode of backups.
      type: string
      enum:
        - Periodic
        - Continuous
      x-ms-enum:
        modelAsString: true
        name: BackupPolicyType
    BackupPolicyMigrationState:
      type: object
      description: The object representing the state of the migration between the backup policies.
      properties:
        status:
          description: Describes the status of migration between backup policy types.
          type: string
          $ref: '#/components/schemas/BackupPolicyMigrationStatus'
        targetType:
          description: Describes the target backup policy type of the backup policy migration.
          type: string
          $ref: '#/components/schemas/BackupPolicyType'
        startTime:
          type: string
          format: date-time
          description: Time at which the backup policy migration started (ISO-8601 format).
    BackupPolicyMigrationStatus:
      description: Describes the status of migration between backup policy types.
      type: string
      enum:
        - Invalid
        - InProgress
        - Completed
        - Failed
      x-ms-enum:
        modelAsString: true
        name: BackupPolicyMigrationStatus
    PeriodicModeBackupPolicy:
      description: The object representing periodic mode backup policy.
      x-ms-discriminator-value: Periodic
      properties:
        type:
          description: Describes the mode of backups.
          type: string
          $ref: '#/components/schemas/BackupPolicyType'
        migrationState:
          description: The object representing the state of the migration between the backup policies.
          type: object
          $ref: '#/components/schemas/BackupPolicyMigrationState'
        periodicModeProperties:
          type: object
          description: Configuration values for periodic mode backup
          $ref: '#/components/schemas/PeriodicModeProperties'
      type: object
    ContinuousModeBackupPolicy:
      description: The object representing continuous mode backup policy.
      x-ms-discriminator-value: Continuous
      properties:
        type:
          description: Describes the mode of backups.
          type: string
          $ref: '#/components/schemas/BackupPolicyType'
        migrationState:
          description: The object representing the state of the migration between the backup policies.
          type: object
          $ref: '#/components/schemas/BackupPolicyMigrationState'
        continuousModeProperties:
          type: object
          description: Configuration values for continuous mode backup
          $ref: '#/components/schemas/ContinuousModeProperties'
      type: object
    PeriodicModeProperties:
      type: object
      description: Configuration values for periodic mode backup
      properties:
        backupIntervalInMinutes:
          type: integer
          format: int32
          minimum: 0
          description: An integer representing the interval in minutes between two backups
        backupRetentionIntervalInHours:
          type: integer
          format: int32
          minimum: 0
          description: An integer representing the time (in hours) that each backup is retained
        backupStorageRedundancy:
          description: Enum to indicate type of backup residency
          type: string
          $ref: '#/components/schemas/BackupStorageRedundancy'
    ContinuousModeProperties:
      type: object
      description: Configuration values for periodic mode backup
      properties:
        tier:
          description: Enum to indicate type of Continuos backup mode
          type: string
          $ref: '#/components/schemas/ContinuousTier'
    MergeParameters:
      description: The properties of an Azure Cosmos DB merge operations
      type: object
      properties:
        isDryRun:
          type: boolean
          description: Specifies whether the operation is a real merge operation or a simulation.
    PhysicalPartitionStorageInfoCollection:
      type: object
      description: List of physical partitions and their properties returned by a merge operation.
      properties:
        physicalPartitionStorageInfoCollection:
          description: List of physical partitions and their properties.
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/physicalPartitionStorageInfo'
    physicalPartitionStorageInfo:
      description: The storage of a physical partition
      type: object
      properties:
        id:
          readOnly: true
          type: string
          description: The unique identifier of the partition.
        storageInKB:
          readOnly: true
          type: number
          format: double
          description: The storage in KB for the physical partition.
    LocationListResult:
      type: object
      properties:
        value:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/LocationGetResult'
          description: List of Cosmos DB locations and their properties.
      description: The List operation response, that contains Cosmos DB locations and their properties.
    LocationGetResult:
      description: Cosmos DB location get result
      properties:
        properties:
          type: object
          description: Cosmos DB location metadata
          $ref: '#/components/schemas/LocationProperties'
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    LocationProperties:
      description: Cosmos DB location metadata
      type: object
      properties:
        supportsAvailabilityZone:
          type: boolean
          readOnly: true
          description: Flag indicating whether the location supports availability zones or not.
        isResidencyRestricted:
          type: boolean
          readOnly: true
          description: Flag indicating whether the location is residency sensitive.
        backupStorageRedundancies:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/BackupStorageRedundancy'
          description: The properties of available backup storage redundancies.
        isSubscriptionRegionAccessAllowedForRegular:
          type: boolean
          readOnly: true
          description: Flag indicating whether the subscription have access in region for Non-Availability Zones.
        isSubscriptionRegionAccessAllowedForAz:
          type: boolean
          readOnly: true
          description: Flag indicating whether the subscription have access in region for Availability Zones(Az).
        status:
          readOnly: true
          type: string
          description: Enum to indicate current buildout status of the region.
          enum:
            - Uninitialized
            - Initializing
            - InternallyReady
            - Online
            - Deleting
          x-ms-enum:
            name: Status
            modelAsString: true
    BackupStorageRedundancy:
      description: Enum to indicate type of backup storage redundancy.
      type: string
      enum:
        - Geo
        - Local
        - Zone
      x-ms-enum:
        name: BackupStorageRedundancy
        modelAsString: true
    ContinuousTier:
      description: Enum to indicate type of Continuous backup tier.
      type: string
      enum:
        - Continuous7Days
        - Continuous30Days
      x-ms-enum:
        name: ContinuousTier
        modelAsString: true
    MinimalTlsVersion:
      description: Indicates the minimum allowed Tls version. The default is Tls 1.0, except for Cassandra and Mongo API's, which only work with Tls 1.2.
      type: string
      enum:
        - Tls
        - Tls11
        - Tls12
      x-ms-enum:
        name: MinimalTlsVersion
        modelAsString: true
    DefaultPriorityLevel:
      description: Enum to indicate default priorityLevel of requests
      type: string
      enum:
        - High
        - Low
      x-ms-enum:
        name: DefaultPriorityLevel
        modelAsString: true
    MongoRoleDefinitionResource:
      type: object
      properties:
        roleName:
          type: string
          description: A user-friendly name for the Role Definition. Must be unique for the database account.
        type:
          type: string
          enum:
            - BuiltInRole
            - CustomRole
          description: Indicates whether the Role Definition was built-in or user created.
          x-ms-enum:
            name: MongoRoleDefinitionType
            modelAsString: false
        databaseName:
          type: string
          description: The database name for which access is being granted for this Role Definition.
        privileges:
          type: array
          items:
            $ref: '#/components/schemas/Privilege'
          description: A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege.
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: The set of roles inherited by this Role Definition.
      description: Azure Cosmos DB Mongo Role Definition resource object.
    MongoRoleDefinitionCreateUpdateParameters:
      description: Parameters to create and update an Azure Cosmos DB Mongo Role Definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update an Azure Cosmos DB Mongo Role Definition.
          $ref: '#/components/schemas/MongoRoleDefinitionResource'
      type: object
    MongoRoleDefinitionGetResults:
      description: An Azure Cosmos DB Mongo Role Definition.
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoRoleDefinitionResource'
          description: Properties related to the Mongo Role Definition.
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    Privilege:
      type: object
      properties:
        resource:
          type: object
          properties:
            db:
              type: string
              description: The database name the role is applied.
            collection:
              type: string
              description: The collection name the role is applied.
          description: An Azure Cosmos DB Mongo DB Resource.
        actions:
          type: array
          items:
            type: string
          description: An array of actions that are allowed.
      description: The set of data plane operations permitted through this Role Definition.
    Role:
      type: object
      properties:
        db:
          type: string
          description: The database name the role is applied.
        role:
          type: string
          description: The role name.
      description: The set of roles permitted through this Role Definition.
    MongoRoleDefinitionListResult:
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MongoRoleDefinitionGetResults'
          description: List of Mongo Role Definitions and their properties.
      description: The relevant Mongo Role Definitions.
    MongoUserDefinitionResource:
      type: object
      properties:
        userName:
          type: string
          description: The user name for User Definition.
        password:
          type: string
          description: The password for User Definition. Response does not contain user password.
        databaseName:
          type: string
          description: The database name for which access is being granted for this User Definition.
        customData:
          type: string
          description: A custom definition for the USer Definition.
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          description: The set of roles inherited by the User Definition.
        mechanisms:
          type: string
          description: The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256.
      description: Azure Cosmos DB Mongo User Definition resource object.
    MongoUserDefinitionCreateUpdateParameters:
      description: Parameters to create and update an Azure Cosmos DB Mongo User Definition.
      properties:
        properties:
          x-ms-client-flatten: true
          description: Properties to create and update an Azure Cosmos DB Mongo User Definition.
          $ref: '#/components/schemas/MongoUserDefinitionResource'
      type: object
    MongoUserDefinitionGetResults:
      description: An Azure Cosmos DB User Definition
      properties:
        properties:
          x-ms-client-flatten: true
          $ref: '#/components/schemas/MongoUserDefinitionResource'
          description: Properties related to the User Definition.
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    MongoUserDefinitionListResult:
      type: object
      properties:
        value:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/MongoUserDefinitionGetResults'
          description: List of User Definition and their properties
      description: The relevant User Definition.
    ListClusters:
      description: List of managed Cassandra clusters.
      readOnly: true
      type: object
      properties:
        value:
          description: Container for the array of clusters.
          type: array
          items:
            $ref: '#/components/schemas/ClusterResource'
    ManagedCassandraARMResourceProperties:
      type: object
      description: The core properties of ARM resources.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedCassandraManagedServiceIdentity'
      x-ms-azure-resource: true
    ManagedCassandraManagedServiceIdentity:
      description: Identity for the resource.
      type: object
      properties:
        principalId:
          readOnly: true
          type: string
          description: The object id of the identity resource.
        tenantId:
          readOnly: true
          type: string
          description: The tenant id of the resource.
        type:
          type: string
          description: The type of the resource.
          enum:
            - SystemAssigned
            - None
          x-ms-enum:
            name: ManagedCassandraResourceIdentityType
            modelAsString: true
    ManagedCassandraProvisioningState:
      description: The status of the resource at the time the operation was called.
      type: string
      enum:
        - Creating
        - Updating
        - Deleting
        - Succeeded
        - Failed
        - Canceled
      x-ms-enum:
        name: ManagedCassandraProvisioningState
        modelAsString: true
    ClusterResource:
      description: Representation of a managed Cassandra cluster.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the ARM resource.
        name:
          readOnly: true
          type: string
          description: The name of the ARM resource.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        location:
          type: string
          description: The location of the resource group to which the resource belongs.
        tags:
          $ref: '#/components/schemas/Tags'
        identity:
          $ref: '#/components/schemas/ManagedCassandraManagedServiceIdentity'
        properties:
          type: object
          description: Properties of a managed Cassandra cluster.
          properties:
            provisioningState:
              $ref: '#/components/schemas/ManagedCassandraProvisioningState'
            restoreFromBackupId:
              type: string
              x-ms-mutability:
                - create
              description: To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.
            delegatedManagementSubnetId:
              type: string
              x-ms-mutability:
                - create
                - read
              description: Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'
            cassandraVersion:
              type: string
              description: Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.
            clusterNameOverride:
              type: string
              x-ms-mutability:
                - create
                - read
              description: If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.
            authenticationMethod:
              type: string
              description: Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.
              enum:
                - None
                - Cassandra
                - Ldap
              x-ms-enum:
                name: AuthenticationMethod
                modelAsString: true
            initialCassandraAdminPassword:
              x-ms-mutability:
                - create
              x-ms-secret: true
              description: Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.
              type: string
            prometheusEndpoint:
              $ref: '#/components/schemas/SeedNode'
              description: Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.
            repairEnabled:
              type: boolean
              description: Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.
            autoReplicate:
              type: string
              description: The form of AutoReplicate that is being used by this cluster.
              enum:
                - None
                - SystemKeyspaces
                - AllKeyspaces
              x-ms-enum:
                name: AutoReplicate
                modelAsString: true
            clientCertificates:
              description: List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.
              type: array
              items:
                $ref: '#/components/schemas/Certificate'
            externalGossipCertificates:
              description: List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.
              type: array
              items:
                $ref: '#/components/schemas/Certificate'
            gossipCertificates:
              readOnly: true
              x-ms-mutability:
                - read
              description: List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.
              type: array
              items:
                $ref: '#/components/schemas/Certificate'
            externalSeedNodes:
              type: array
              description: List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.
              items:
                $ref: '#/components/schemas/SeedNode'
            seedNodes:
              readOnly: true
              type: array
              items:
                $ref: '#/components/schemas/SeedNode'
              description: List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes.
            externalDataCenters:
              type: array
              description: List of the data center names for unmanaged data centers in this cluster to be included in auto-replication.
              items:
                type: string
            hoursBetweenBackups:
              type: integer
              format: int32
              description: (Deprecated) Number of hours to wait between taking a backup of the cluster.
            deallocated:
              type: boolean
              description: Whether the cluster and associated data centers has been deallocated.
            cassandraAuditLoggingEnabled:
              type: boolean
              description: Whether Cassandra audit logging is enabled
            clusterType:
              type: string
              description: Type of the cluster. If set to Production, some operations might not be permitted on cluster.
              enum:
                - Production
                - NonProduction
              x-ms-enum:
                name: ClusterType
                modelAsString: true
            provisionError:
              $ref: '#/components/schemas/CassandraError'
              description: Error related to resource provisioning.
            extensions:
              type: array
              description: Extensions to be added or updated on cluster.
              items:
                type: string
            backupSchedules:
              type: array
              items:
                $ref: '#/components/schemas/BackupSchedule'
              description: List of backup schedules that define when you want to back up your data.
            scheduledEventStrategy:
              type: string
              description: How the nodes in the cluster react to scheduled events
              enum:
                - Ignore
                - StopAny
                - StopByRack
              x-ms-enum:
                name: ScheduledEventStrategy
                modelAsString: true
            azureConnectionMethod:
              type: string
              description: How to connect to the azure services needed for running the cluster
              enum:
                - None
                - VPN
              x-ms-enum:
                name: AzureConnectionType
                modelAsString: true
            privateLinkResourceId:
              readOnly: true
              type: string
              format: arm-id
              x-ms-arm-id-details:
                allowedResources:
                  - type: Microsoft.Network/privateLinkServices
              description: If the Connection Method is Vpn, this is the Id of the private link resource that the datacenters need to connect to.
      type: object
    ManagedCassandraNodeStatus:
      type: string
      description: Indicates whether the node is functioning or not.
      enum:
        - Up
        - Down
      x-ms-enum:
        name: NodeStatus
        modelAsString: true
    ManagedCassandraNodeState:
      type: string
      description: The state of the node in Cassandra ring.
      enum:
        - Normal
        - Leaving
        - Joining
        - Moving
        - Stopped
      x-ms-enum:
        name: NodeState
        modelAsString: true
    CassandraClusterPublicStatus:
      type: object
      description: Properties of a managed Cassandra cluster public status.
      properties:
        eTag:
          type: string
        reaperStatus:
          $ref: '#/components/schemas/ManagedCassandraReaperStatus'
        connectionErrors:
          type: array
          description: List relevant information about any connection errors to the Datacenters.
          items:
            $ref: '#/components/schemas/ConnectionError'
        errors:
          type: array
          description: List relevant information about any errors about cluster, data center and connection error.
          items:
            $ref: '#/components/schemas/CassandraError'
        dataCenters:
          type: array
          description: List of the status of each datacenter in this cluster.
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of this Datacenter.
              seedNodes:
                type: array
                description: A list of all seed nodes in the cluster, managed and unmanaged.
                items:
                  type: string
              nodes:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      description: The node's IP address.
                    state:
                      $ref: '#/components/schemas/ManagedCassandraNodeState'
                    status:
                      type: string
                    cassandraProcessStatus:
                      type: string
                      description: Cassandra service status on this node
                    load:
                      type: string
                      description: The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones) is counted.
                    tokens:
                      type: array
                      description: List of tokens this node covers.
                      items:
                        type: string
                    size:
                      type: integer
                      format: int32
                    hostID:
                      description: The network ID of the node.
                      type: string
                    rack:
                      description: The rack this node is part of.
                      type: string
                    timestamp:
                      description: The timestamp when these statistics were captured.
                      type: string
                    diskUsedKB:
                      description: The amount of disk used, in kB, of the directory /var/lib/cassandra.
                      type: integer
                      format: int64
                    diskFreeKB:
                      description: The amount of disk free, in kB, of the directory /var/lib/cassandra.
                      type: integer
                      format: int64
                    memoryUsedKB:
                      description: Used memory (calculated as total - free - buffers - cache), in kB.
                      type: integer
                      format: int64
                    memoryBuffersAndCachedKB:
                      description: Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo), in kB.
                      type: integer
                      format: int64
                    memoryFreeKB:
                      description: Unused memory (MemFree and SwapFree in /proc/meminfo), in kB.
                      type: integer
                      format: int64
                    memoryTotalKB:
                      description: Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB.
                      type: integer
                      format: int64
                    cpuUsage:
                      description: A float representing the current system-wide CPU utilization as a percentage.
                      type: number
                      format: double
                    isLatestModel:
                      type: boolean
                      description: If node has been updated to latest model
    ManagedCassandraReaperStatus:
      type: object
      properties:
        healthy:
          type: boolean
        repairRunIds:
          type: object
          additionalProperties:
            type: string
        repairSchedules:
          type: object
          additionalProperties:
            type: string
    ConnectionError:
      type: object
      properties:
        connectionState:
          description: The kind of connection error that occurred.
          type: string
          enum:
            - Unknown
            - OK
            - OperatorToDataCenterNetworkError
            - DatacenterToDatacenterNetworkError
            - InternalOperatorToDataCenterCertificateError
            - InternalError
          x-ms-enum:
            name: ConnectionState
            modelAsString: true
        iPFrom:
          description: The IP of host that originated the failed connection.
          type: string
        iPTo:
          description: The IP that the connection attempted to reach.
          type: string
        port:
          description: The TCP port the connection was attempted on.
          type: integer
          format: int32
        exception:
          description: Detailed error message about the failed connection.
          type: string
    CassandraError:
      type: object
      properties:
        code:
          description: The code of error that occurred.
          type: string
        message:
          description: The message of the error.
          type: string
        target:
          description: The target resource of the error.
          type: string
        additionalErrorInfo:
          description: Additional information about the error.
          type: string
    CommandPostBody:
      description: Specification of which command to run where
      type: object
      required:
        - command
        - host
      properties:
        command:
          type: string
          description: The command which should be run
        arguments:
          type: object
          description: The arguments for the command to be run
        host:
          type: string
          description: IP address of the cassandra host to run the command on
        cassandra-stop-start:
          type: boolean
          description: If true, stops cassandra before executing the command and then start it again
        readWrite:
          type: boolean
          description: If true, allows the command to *write* to the cassandra directory, otherwise read-only.
    CommandPublicResource:
      description: resource representing a command
      type: object
      properties:
        command:
          type: string
          description: The command which should be run
        commandId:
          type: string
          description: The unique id of command
        arguments:
          type: object
          description: The arguments for the command to be run
        host:
          type: string
          description: IP address of the cassandra host to run the command on
        isAdmin:
          type: boolean
          description: Whether command has admin privileges
        cassandraStopStart:
          type: boolean
          description: If true, stops cassandra before executing the command and then start it again
        readWrite:
          type: boolean
          description: If true, allows the command to *write* to the cassandra directory, otherwise read-only.
        result:
          type: string
          description: Result output of the command.
        status:
          type: string
          description: Status of the command.
          enum:
            - Done
            - Running
            - Enqueue
            - Processing
            - Finished
            - Failed
          x-ms-enum:
            name: CommandStatus
            modelAsString: true
        outputFile:
          type: string
          description: The name of the file where the result is written.
    ListCommands:
      description: List of commands for cluster.
      type: object
      properties:
        value:
          description: Container for array of commands.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CommandPublicResource'
    CommandOutput:
      description: Response of /command api
      type: object
      properties:
        commandOutput:
          type: string
          description: Output of the command.
    ListDataCenters:
      description: List of managed Cassandra data centers and their properties.
      type: object
      properties:
        value:
          description: Container for array of data centers.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/DataCenterResource'
    BackupResource:
      description: A restorable backup of a Cassandra cluster.
      type: object
      properties:
        backupId:
          description: The unique identifier of backup.
          type: string
        backupState:
          description: The current state of the backup.
          type: string
          enum:
            - Initiated
            - InProgress
            - Succeeded
            - Failed
          x-ms-enum:
            name: BackupState
            modelAsString: true
        backupStartTimestamp:
          description: The time at which the backup process begins.
          type: string
          format: date-time
        backupStopTimestamp:
          description: The time at which the backup process ends.
          type: string
          format: date-time
        backupExpiryTimestamp:
          description: The time at which the backup will expire.
          type: string
          format: date-time
    ListBackups:
      description: List of restorable backups for a Cassandra cluster.
      type: object
      properties:
        value:
          description: Container for array of backups.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/BackupResource'
    SeedNode:
      type: object
      properties:
        ipAddress:
          description: IP address of this seed node.
          type: string
    Certificate:
      type: object
      properties:
        pem:
          description: PEM formatted public key.
          type: string
    BackupSchedule:
      type: object
      properties:
        scheduleName:
          description: The unique identifier of backup schedule.
          type: string
        cronExpression:
          description: The cron expression that defines when you want to back up your data.
          type: string
        retentionInHours:
          description: The retention period (hours) of the backups. If you want to retain data forever, set retention to 0.
          type: integer
          format: int32
    DataCenterResource:
      description: A managed Cassandra data center.
      properties:
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
        properties:
          description: Properties of a managed Cassandra data center.
          type: object
          properties:
            provisioningState:
              $ref: '#/components/schemas/ManagedCassandraProvisioningState'
            dataCenterLocation:
              type: string
              x-ms-mutability:
                - create
                - read
              description: The region this data center should be created in.
            delegatedSubnetId:
              type: string
              x-ms-mutability:
                - create
                - read
              description: Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.
            nodeCount:
              type: integer
              format: int32
              description: The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.
            seedNodes:
              readOnly: true
              type: array
              description: IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.
              items:
                $ref: '#/components/schemas/SeedNode'
            base64EncodedCassandraYamlFragment:
              type: string
              description: A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.
            managedDiskCustomerKeyUri:
              type: string
              description: Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.
            backupStorageCustomerKeyUri:
              type: string
              description: Indicates the Key Uri of the customer key to use for encryption of the backup storage account.
            sku:
              type: string
              description: Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2
            diskSku:
              type: string
              description: Disk SKU used for data centers. Default value is P30.
            diskCapacity:
              type: integer
              format: int32
              description: Number of disks attached to each node. Default is 4.
            availabilityZone:
              type: boolean
              description: If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.
            authenticationMethodLdapProperties:
              $ref: '#/components/schemas/AuthenticationMethodLdapProperties'
            deallocated:
              type: boolean
              description: Whether the data center has been deallocated.
            provisionError:
              $ref: '#/components/schemas/CassandraError'
              description: Error related to resource provisioning.
            privateEndpointIpAddress:
              type: string
              description: Ip of the VPN Endpoint for this data center.
      type: object
    AuthenticationMethodLdapProperties:
      type: object
      description: Ldap authentication method properties. This feature is in preview.
      properties:
        serverHostname:
          description: Hostname of the LDAP server.
          type: string
        serverPort:
          description: Port of the LDAP server.
          type: integer
          format: int32
        serviceUserDistinguishedName:
          description: Distinguished name of the look up user account, who can look up user details on authentication.
          type: string
        serviceUserPassword:
          description: Password of the look up user.
          type: string
        searchBaseDistinguishedName:
          description: Distinguished name of the object to start the recursive search of users from.
          type: string
        searchFilterTemplate:
          description: Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.
          type: string
        serverCertificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
        connectionTimeoutInMs:
          description: Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.
          type: integer
          format: int32
    PrivateLinkResourceListResult:
      description: A list of private link resources
      type: object
      properties:
        value:
          type: array
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
    PrivateLinkResource:
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        id:
          readOnly: true
          type: string
          description: The unique resource identifier of the database account.
        name:
          readOnly: true
          type: string
          description: The name of the database account.
        type:
          readOnly: true
          type: string
          description: The type of Azure resource.
      type: object
    PrivateLinkResourceProperties:
      description: Properties of a private link resource.
      type: object
      properties:
        groupId:
          description: The private link resource group id.
          type: string
          readOnly: true
        requiredMembers:
          description: The private link resource required member names.
          type: array
          items:
            type: string
          readOnly: true
        requiredZoneNames:
          description: The private link resource required zone names.
          type: array
          items:
            type: string
          readOnly: true
  x-stackQL-resources:
    sql_role_definitions:
      id: azure.cosmos_db.sql_role_definitions
      name: sql_role_definitions
      title: sql_role_definitions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleDefinitions~1{roleDefinitionId}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlRoleDefinition_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRoleDefinitionGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleDefinitions~1{roleDefinitionId}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlRoleDefinition_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRoleDefinitionGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleDefinitions~1{roleDefinitionId}?api-version=2024-09-01-preview/delete'
            operationId: SqlResourcesSqlRoleDefinition_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleDefinitions?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlRoleDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRoleDefinitionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_role_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_role_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_role_definitions/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_role_definitions/methods/delete'
    sql_role_assignments:
      id: azure.cosmos_db.sql_role_assignments
      name: sql_role_assignments
      title: sql_role_assignments
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleAssignments~1{roleAssignmentId}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlRoleAssignment_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRoleAssignmentGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleAssignments~1{roleAssignmentId}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlRoleAssignment_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRoleAssignmentGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleAssignments~1{roleAssignmentId}?api-version=2024-09-01-preview/delete'
            operationId: SqlResourcesSqlRoleAssignment_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlRoleAssignments?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlRoleAssignments_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlRoleAssignmentListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_role_assignments/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_role_assignments/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_role_assignments/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_role_assignments/methods/delete'
    services:
      id: azure.cosmos_db.services
      name: services
      title: services
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1services?api-version=2024-09-01-preview/get'
            operationId: Service_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceResourceListResult
            objectKey: $.value
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1services~1{serviceName}?api-version=2024-09-01-preview/put'
            operationId: Service_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1services~1{serviceName}?api-version=2024-09-01-preview/get'
            operationId: Service_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ServiceResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1services~1{serviceName}?api-version=2024-09-01-preview/delete'
            operationId: Service_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/services/methods/get'
          - $ref: '#/components/x-stackQL-resources/services/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/services/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/services/methods/delete'
    private_endpoint_connections:
      id: azure.cosmos_db.private_endpoint_connections
      name: private_endpoint_connections
      title: private_endpoint_connections
      methods:
        list_by_database_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1privateEndpointConnections?api-version=2024-09-01-preview/get'
            operationId: PrivateEndpointConnections_ListByDatabaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-09-01-preview/get'
            operationId: PrivateEndpointConnections_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-09-01-preview/put'
            operationId: PrivateEndpointConnections_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateEndpointConnection
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}?api-version=2024-09-01-preview/delete'
            operationId: PrivateEndpointConnections_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/list_by_database_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/delete'
    chaos_faults:
      id: azure.cosmos_db.chaos_faults
      name: chaos_faults
      title: chaos_faults
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1chaosFaults?api-version=2024-09-01-preview/get'
            operationId: ChaosFault_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: chaosFaultListResponse
            objectKey: $.value
        enable_disable:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1chaosFaults~1{chaosFault}?api-version=2024-09-01-preview/put'
            operationId: ChaosFault_EnableDisable
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: chaosFaultResource
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1chaosFaults~1{chaosFault}?api-version=2024-09-01-preview/get'
            operationId: ChaosFault_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: chaosFaultResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/chaos_faults/methods/get'
          - $ref: '#/components/x-stackQL-resources/chaos_faults/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_database_accounts:
      id: azure.cosmos_db.restorable_database_accounts
      name: restorable_database_accounts
      title: restorable_database_accounts
      methods:
        list_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts?api-version=2024-09-01-preview/get'
            operationId: RestorableDatabaseAccounts_ListByLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableDatabaseAccountsListResult
            objectKey: $.value
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1restorableDatabaseAccounts?api-version=2024-09-01-preview/get'
            operationId: RestorableDatabaseAccounts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableDatabaseAccountsListResult
            objectKey: $.value
        get_by_location:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}?api-version=2024-09-01-preview/get'
            operationId: RestorableDatabaseAccounts_GetByLocation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableDatabaseAccountGetResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_database_accounts/methods/get_by_location'
          - $ref: '#/components/x-stackQL-resources/restorable_database_accounts/methods/list_by_location'
          - $ref: '#/components/x-stackQL-resources/restorable_database_accounts/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sql_resources:
      id: azure.cosmos_db.sql_resources
      name: sql_resources
      title: sql_resources
      methods:
        retrieve_continuous_backup_information:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1retrieveContinuousBackupInformation?api-version=2024-09-01-preview/post'
            operationId: SqlResources_RetrieveContinuousBackupInformation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupInformation
        migrate_sql_database_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: SqlResources_MigrateSqlDatabaseToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_sql_database_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: SqlResources_MigrateSqlDatabaseToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        sql_database_partition_merge:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1partitionMerge?api-version=2024-09-01-preview/post'
            operationId: SqlResources_SqlDatabasePartitionMerge
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionStorageInfoCollection
        migrate_sql_container_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: SqlResources_MigrateSqlContainerToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_sql_container_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: SqlResources_MigrateSqlContainerToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        sql_database_retrieve_throughput_distribution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1throughputSettings~1default~1retrieveThroughputDistribution?api-version=2024-09-01-preview/post'
            operationId: SqlResources_SqlDatabaseRetrieveThroughputDistribution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
        sql_database_redistribute_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1throughputSettings~1default~1redistributeThroughput?api-version=2024-09-01-preview/post'
            operationId: SqlResources_SqlDatabaseRedistributeThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
        sql_container_retrieve_throughput_distribution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1throughputSettings~1default~1retrieveThroughputDistribution?api-version=2024-09-01-preview/post'
            operationId: SqlResources_SqlContainerRetrieveThroughputDistribution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
        sql_container_redistribute_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1throughputSettings~1default~1redistributeThroughput?api-version=2024-09-01-preview/post'
            operationId: SqlResources_SqlContainerRedistributeThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    restorable_sql_databases:
      id: azure.cosmos_db.restorable_sql_databases
      name: restorable_sql_databases
      title: restorable_sql_databases
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableSqlDatabases?api-version=2024-09-01-preview/get'
            operationId: RestorableSqlDatabases_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableSqlDatabasesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_sql_databases/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_sql_containers:
      id: azure.cosmos_db.restorable_sql_containers
      name: restorable_sql_containers
      title: restorable_sql_containers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableSqlContainers?api-version=2024-09-01-preview/get'
            operationId: RestorableSqlContainers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableSqlContainersListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_sql_containers/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_sql_resources:
      id: azure.cosmos_db.restorable_sql_resources
      name: restorable_sql_resources
      title: restorable_sql_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableSqlResources?api-version=2024-09-01-preview/get'
            operationId: RestorableSqlResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableSqlResourcesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_sql_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    mongodb_resources:
      id: azure.cosmos_db.mongodb_resources
      name: mongodb_resources
      title: mongodb_resources
      methods:
        retrieve_continuous_backup_information:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1retrieveContinuousBackupInformation?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_RetrieveContinuousBackupInformation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupInformation
        migrate_mongodb_database_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MigrateMongoDBDatabaseToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_mongodb_database_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MigrateMongoDBDatabaseToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        mongodb_database_retrieve_throughput_distribution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1throughputSettings~1default~1retrieveThroughputDistribution?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MongoDBDatabaseRetrieveThroughputDistribution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
        mongodb_database_redistribute_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1throughputSettings~1default~1redistributeThroughput?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MongoDBDatabaseRedistributeThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
        mongodb_container_retrieve_throughput_distribution:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1throughputSettings~1default~1retrieveThroughputDistribution?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MongoDBContainerRetrieveThroughputDistribution
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
        mongodb_container_redistribute_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1throughputSettings~1default~1redistributeThroughput?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MongoDBContainerRedistributeThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionThroughputInfoResult
        mongodb_database_partition_merge:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1partitionMerge?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MongoDBDatabasePartitionMerge
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionStorageInfoCollection
        migrate_mongodb_collection_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MigrateMongoDBCollectionToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_mongodb_collection_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: MongoDBResources_MigrateMongoDBCollectionToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    restorable_mongodb_databases:
      id: azure.cosmos_db.restorable_mongodb_databases
      name: restorable_mongodb_databases
      title: restorable_mongodb_databases
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableMongodbDatabases?api-version=2024-09-01-preview/get'
            operationId: RestorableMongodbDatabases_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableMongodbDatabasesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_mongodb_databases/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_mongodb_collections:
      id: azure.cosmos_db.restorable_mongodb_collections
      name: restorable_mongodb_collections
      title: restorable_mongodb_collections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableMongodbCollections?api-version=2024-09-01-preview/get'
            operationId: RestorableMongodbCollections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableMongodbCollectionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_mongodb_collections/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_mongodb_resources:
      id: azure.cosmos_db.restorable_mongodb_resources
      name: restorable_mongodb_resources
      title: restorable_mongodb_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableMongodbResources?api-version=2024-09-01-preview/get'
            operationId: RestorableMongodbResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableMongodbResourcesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_mongodb_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    gremlin_resources:
      id: azure.cosmos_db.gremlin_resources
      name: gremlin_resources
      title: gremlin_resources
      methods:
        retrieve_continuous_backup_information:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}~1retrieveContinuousBackupInformation?api-version=2024-09-01-preview/post'
            operationId: GremlinResources_RetrieveContinuousBackupInformation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupInformation
        migrate_gremlin_database_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: GremlinResources_MigrateGremlinDatabaseToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_gremlin_database_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: GremlinResources_MigrateGremlinDatabaseToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_gremlin_graph_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: GremlinResources_MigrateGremlinGraphToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_gremlin_graph_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: GremlinResources_MigrateGremlinGraphToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    restorable_gremlin_databases:
      id: azure.cosmos_db.restorable_gremlin_databases
      name: restorable_gremlin_databases
      title: restorable_gremlin_databases
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableGremlinDatabases?api-version=2024-09-01-preview/get'
            operationId: RestorableGremlinDatabases_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableGremlinDatabasesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_gremlin_databases/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_gremlin_graphs:
      id: azure.cosmos_db.restorable_gremlin_graphs
      name: restorable_gremlin_graphs
      title: restorable_gremlin_graphs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableGraphs?api-version=2024-09-01-preview/get'
            operationId: RestorableGremlinGraphs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableGremlinGraphsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_gremlin_graphs/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_gremlin_resources:
      id: azure.cosmos_db.restorable_gremlin_resources
      name: restorable_gremlin_resources
      title: restorable_gremlin_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableGremlinResources?api-version=2024-09-01-preview/get'
            operationId: RestorableGremlinResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableGremlinResourcesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_gremlin_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    table_resources:
      id: azure.cosmos_db.table_resources
      name: table_resources
      title: table_resources
      methods:
        retrieve_continuous_backup_information:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}~1retrieveContinuousBackupInformation?api-version=2024-09-01-preview/post'
            operationId: TableResources_RetrieveContinuousBackupInformation
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupInformation
        migrate_table_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: TableResources_MigrateTableToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_table_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: TableResources_MigrateTableToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    restorable_tables:
      id: azure.cosmos_db.restorable_tables
      name: restorable_tables
      title: restorable_tables
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableTables?api-version=2024-09-01-preview/get'
            operationId: RestorableTables_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableTablesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_tables/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    restorable_table_resources:
      id: azure.cosmos_db.restorable_table_resources
      name: restorable_table_resources
      title: restorable_table_resources
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}~1restorableDatabaseAccounts~1{instanceId}~1restorableTableResources?api-version=2024-09-01-preview/get'
            operationId: RestorableTableResources_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: RestorableTableResourcesListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/restorable_table_resources/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    notebook_workspaces:
      id: azure.cosmos_db.notebook_workspaces
      name: notebook_workspaces
      title: notebook_workspaces
      methods:
        list_by_database_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1notebookWorkspaces?api-version=2024-09-01-preview/get'
            operationId: NotebookWorkspaces_ListByDatabaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotebookWorkspaceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1notebookWorkspaces~1{notebookWorkspaceName}?api-version=2024-09-01-preview/get'
            operationId: NotebookWorkspaces_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotebookWorkspace
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1notebookWorkspaces~1{notebookWorkspaceName}?api-version=2024-09-01-preview/put'
            operationId: NotebookWorkspaces_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotebookWorkspace
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1notebookWorkspaces~1{notebookWorkspaceName}?api-version=2024-09-01-preview/delete'
            operationId: NotebookWorkspaces_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        regenerate_auth_token:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1notebookWorkspaces~1{notebookWorkspaceName}~1regenerateAuthToken?api-version=2024-09-01-preview/post'
            operationId: NotebookWorkspaces_RegenerateAuthToken
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1notebookWorkspaces~1{notebookWorkspaceName}~1start?api-version=2024-09-01-preview/post'
            operationId: NotebookWorkspaces_Start
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notebook_workspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/notebook_workspaces/methods/list_by_database_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/notebook_workspaces/methods/create_or_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/notebook_workspaces/methods/delete'
    notebook_workspaces_connection_info:
      id: azure.cosmos_db.notebook_workspaces_connection_info
      name: notebook_workspaces_connection_info
      title: notebook_workspaces_connection_info
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1notebookWorkspaces~1{notebookWorkspaceName}~1listConnectionInfo?api-version=2024-09-01-preview/post'
            operationId: NotebookWorkspacesConnectionInfo_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NotebookWorkspaceConnectionInfoResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/notebook_workspaces_connection_info/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    throughput_pools:
      id: azure.cosmos_db.throughput_pools
      name: throughput_pools
      title: throughput_pools
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1throughputPools?api-version=2024-09-01-preview/get'
            operationId: ThroughputPools_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools?api-version=2024-09-01-preview/get'
            operationId: ThroughputPools_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolsListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}?api-version=2024-09-01-preview/get'
            operationId: ThroughputPool_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolResource
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}?api-version=2024-09-01-preview/put'
            operationId: ThroughputPool_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}?api-version=2024-09-01-preview/patch'
            operationId: ThroughputPool_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}?api-version=2024-09-01-preview/delete'
            operationId: ThroughputPool_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/throughput_pools/methods/get'
          - $ref: '#/components/x-stackQL-resources/throughput_pools/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/throughput_pools/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/throughput_pools/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/throughput_pools/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/throughput_pools/methods/delete'
    throughput_pool_accounts:
      id: azure.cosmos_db.throughput_pool_accounts
      name: throughput_pool_accounts
      title: throughput_pool_accounts
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}~1throughputPoolAccounts?api-version=2024-09-01-preview/get'
            operationId: ThroughputPoolAccounts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolAccountsListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}~1throughputPoolAccounts~1{throughputPoolAccountName}?api-version=2024-09-01-preview/get'
            operationId: ThroughputPoolAccount_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolAccountResource
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}~1throughputPoolAccounts~1{throughputPoolAccountName}?api-version=2024-09-01-preview/put'
            operationId: ThroughputPoolAccount_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputPoolAccountResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1throughputPools~1{throughputPoolName}~1throughputPoolAccounts~1{throughputPoolAccountName}?api-version=2024-09-01-preview/delete'
            operationId: ThroughputPoolAccount_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/throughput_pool_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/throughput_pool_accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/throughput_pool_accounts/methods/create'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/throughput_pool_accounts/methods/delete'
    data_transfer_jobs:
      id: azure.cosmos_db.data_transfer_jobs
      name: data_transfer_jobs
      title: data_transfer_jobs
      methods:
        create:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1dataTransferJobs~1{jobName}?api-version=2024-09-01-preview/put'
            operationId: DataTransferJobs_Create
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataTransferJobGetResults
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1dataTransferJobs~1{jobName}?api-version=2024-09-01-preview/get'
            operationId: DataTransferJobs_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataTransferJobGetResults
        pause:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1dataTransferJobs~1{jobName}~1pause?api-version=2024-09-01-preview/post'
            operationId: DataTransferJobs_Pause
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataTransferJobGetResults
        resume:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1dataTransferJobs~1{jobName}~1resume?api-version=2024-09-01-preview/post'
            operationId: DataTransferJobs_Resume
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataTransferJobGetResults
        cancel:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1dataTransferJobs~1{jobName}~1cancel?api-version=2024-09-01-preview/post'
            operationId: DataTransferJobs_Cancel
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataTransferJobGetResults
        complete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1dataTransferJobs~1{jobName}~1complete?api-version=2024-09-01-preview/post'
            operationId: DataTransferJobs_Complete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataTransferJobGetResults
        list_by_database_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1dataTransferJobs?api-version=2024-09-01-preview/get'
            operationId: DataTransferJobs_ListByDatabaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataTransferJobFeedResults
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/data_transfer_jobs/methods/get'
          - $ref: '#/components/x-stackQL-resources/data_transfer_jobs/methods/list_by_database_account'
        insert:
          - $ref: '#/components/x-stackQL-resources/data_transfer_jobs/methods/create'
        update: []
        replace: []
        delete: []
    database_accounts:
      id: azure.cosmos_db.database_accounts
      name: database_accounts
      title: database_accounts
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccounts_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}?api-version=2024-09-01-preview/patch'
            operationId: DatabaseAccounts_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountGetResults
        create_or_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}?api-version=2024-09-01-preview/put'
            operationId: DatabaseAccounts_CreateOrUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}?api-version=2024-09-01-preview/delete'
            operationId: DatabaseAccounts_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        failover_priority_change:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1failoverPriorityChange?api-version=2024-09-01-preview/post'
            operationId: DatabaseAccounts_FailoverPriorityChange
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1databaseAccounts?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccounts_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountsListResult
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccounts_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountsListResult
            objectKey: $.value
        offline_region:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1offlineRegion?api-version=2024-09-01-preview/post'
            operationId: DatabaseAccounts_OfflineRegion
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        online_region:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1onlineRegion?api-version=2024-09-01-preview/post'
            operationId: DatabaseAccounts_OnlineRegion
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        regenerate_key:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1regenerateKey?api-version=2024-09-01-preview/post'
            operationId: DatabaseAccounts_RegenerateKey
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_accounts/methods/get'
          - $ref: '#/components/x-stackQL-resources/database_accounts/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/database_accounts/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/database_accounts/methods/create_or_update'
        update:
          - $ref: '#/components/x-stackQL-resources/database_accounts/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/database_accounts/methods/delete'
    database_accounts_keys:
      id: azure.cosmos_db.database_accounts_keys
      name: database_accounts_keys
      title: database_accounts_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1listKeys?api-version=2024-09-01-preview/post'
            operationId: DatabaseAccountsKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountListKeysResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_accounts_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_accounts_connection_strings:
      id: azure.cosmos_db.database_accounts_connection_strings
      name: database_accounts_connection_strings
      title: database_accounts_connection_strings
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1listConnectionStrings?api-version=2024-09-01-preview/post'
            operationId: DatabaseAccountsConnectionStrings_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountListConnectionStringsResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_accounts_connection_strings/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_accounts_read_only_keys:
      id: azure.cosmos_db.database_accounts_read_only_keys
      name: database_accounts_read_only_keys
      title: database_accounts_read_only_keys
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1readonlykeys?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccountsReadOnlyKeys_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountListReadOnlyKeysResult
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1readonlykeys?api-version=2024-09-01-preview/post'
            operationId: DatabaseAccountsReadOnlyKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DatabaseAccountListReadOnlyKeysResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_accounts_read_only_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/database_accounts_read_only_keys/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    operations:
      id: azure.cosmos_db.operations
      name: operations
      title: operations
      methods:
        list:
          operation:
            $ref: '#/paths/~1providers~1Microsoft.DocumentDB~1operations?api-version=2024-09-01-preview/get'
            operationId: Operations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: OperationListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/operations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_accounts_metrics:
      id: azure.cosmos_db.database_accounts_metrics
      name: database_accounts_metrics
      title: database_accounts_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1metrics?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccountsMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_accounts_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_metrics:
      id: azure.cosmos_db.database_metrics
      name: database_metrics
      title: database_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1metrics?api-version=2024-09-01-preview/get'
            operationId: DatabaseMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    collection_metrics:
      id: azure.cosmos_db.collection_metrics
      name: collection_metrics
      title: collection_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1collections~1{collectionRid}~1metrics?api-version=2024-09-01-preview/get'
            operationId: CollectionMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    collection_region_metrics:
      id: azure.cosmos_db.collection_region_metrics
      name: collection_region_metrics
      title: collection_region_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1region~1{region}~1databases~1{databaseRid}~1collections~1{collectionRid}~1metrics?api-version=2024-09-01-preview/get'
            operationId: CollectionRegionMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_region_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_account_region_metrics:
      id: azure.cosmos_db.database_account_region_metrics
      name: database_account_region_metrics
      title: database_account_region_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1region~1{region}~1metrics?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccountRegionMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_account_region_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    percentile_source_target_metrics:
      id: azure.cosmos_db.percentile_source_target_metrics
      name: percentile_source_target_metrics
      title: percentile_source_target_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sourceRegion~1{sourceRegion}~1targetRegion~1{targetRegion}~1percentile~1metrics?api-version=2024-09-01-preview/get'
            operationId: PercentileSourceTargetMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PercentileMetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/percentile_source_target_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    percentile_target_metrics:
      id: azure.cosmos_db.percentile_target_metrics
      name: percentile_target_metrics
      title: percentile_target_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1targetRegion~1{targetRegion}~1percentile~1metrics?api-version=2024-09-01-preview/get'
            operationId: PercentileTargetMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PercentileMetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/percentile_target_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    percentile_metrics:
      id: azure.cosmos_db.percentile_metrics
      name: percentile_metrics
      title: percentile_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1percentile~1metrics?api-version=2024-09-01-preview/get'
            operationId: PercentileMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PercentileMetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/percentile_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    collection_partition_region_metrics:
      id: azure.cosmos_db.collection_partition_region_metrics
      name: collection_partition_region_metrics
      title: collection_partition_region_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1region~1{region}~1databases~1{databaseRid}~1collections~1{collectionRid}~1partitions~1metrics?api-version=2024-09-01-preview/get'
            operationId: CollectionPartitionRegionMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartitionMetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_partition_region_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    collection_partition_metrics:
      id: azure.cosmos_db.collection_partition_metrics
      name: collection_partition_metrics
      title: collection_partition_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1collections~1{collectionRid}~1partitions~1metrics?api-version=2024-09-01-preview/get'
            operationId: CollectionPartitionMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartitionMetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_partition_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    partition_key_range_id_metrics:
      id: azure.cosmos_db.partition_key_range_id_metrics
      name: partition_key_range_id_metrics
      title: partition_key_range_id_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1collections~1{collectionRid}~1partitionKeyRangeId~1{partitionKeyRangeId}~1metrics?api-version=2024-09-01-preview/get'
            operationId: PartitionKeyRangeIdMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartitionMetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partition_key_range_id_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    partition_key_range_id_region_metrics:
      id: azure.cosmos_db.partition_key_range_id_region_metrics
      name: partition_key_range_id_region_metrics
      title: partition_key_range_id_region_metrics
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1region~1{region}~1databases~1{databaseRid}~1collections~1{collectionRid}~1partitionKeyRangeId~1{partitionKeyRangeId}~1metrics?api-version=2024-09-01-preview/get'
            operationId: PartitionKeyRangeIdRegionMetrics_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartitionMetricListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/partition_key_range_id_region_metrics/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_accounts_usages:
      id: azure.cosmos_db.database_accounts_usages
      name: database_accounts_usages
      title: database_accounts_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1usages?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccountsUsages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_accounts_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_usages:
      id: azure.cosmos_db.database_usages
      name: database_usages
      title: database_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1usages?api-version=2024-09-01-preview/get'
            operationId: DatabaseUsages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    collection_usages:
      id: azure.cosmos_db.collection_usages
      name: collection_usages
      title: collection_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1collections~1{collectionRid}~1usages?api-version=2024-09-01-preview/get'
            operationId: CollectionUsages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: UsagesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    collection_partition_usages:
      id: azure.cosmos_db.collection_partition_usages
      name: collection_partition_usages
      title: collection_partition_usages
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1collections~1{collectionRid}~1partitions~1usages?api-version=2024-09-01-preview/get'
            operationId: CollectionPartitionUsages_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PartitionUsagesResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_partition_usages/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_metric_definitions:
      id: azure.cosmos_db.database_metric_definitions
      name: database_metric_definitions
      title: database_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1metricDefinitions?api-version=2024-09-01-preview/get'
            operationId: DatabaseMetricDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    collection_metric_definitions:
      id: azure.cosmos_db.collection_metric_definitions
      name: collection_metric_definitions
      title: collection_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1databases~1{databaseRid}~1collections~1{collectionRid}~1metricDefinitions?api-version=2024-09-01-preview/get'
            operationId: CollectionMetricDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/collection_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    database_accounts_metric_definitions:
      id: azure.cosmos_db.database_accounts_metric_definitions
      name: database_accounts_metric_definitions
      title: database_accounts_metric_definitions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1metricDefinitions?api-version=2024-09-01-preview/get'
            operationId: DatabaseAccountsMetricDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MetricDefinitionsListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/database_accounts_metric_definitions/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    graph_resources_graphs:
      id: azure.cosmos_db.graph_resources_graphs
      name: graph_resources_graphs
      title: graph_resources_graphs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1graphs?api-version=2024-09-01-preview/get'
            operationId: GraphResourcesGraphs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GraphResourcesListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1graphs~1{graphName}?api-version=2024-09-01-preview/get'
            operationId: GraphResourcesGraph_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GraphResourceGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1graphs~1{graphName}?api-version=2024-09-01-preview/put'
            operationId: GraphResourcesGraph_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GraphResourceGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/graph_resources_graphs/methods/get'
          - $ref: '#/components/x-stackQL-resources/graph_resources_graphs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/graph_resources_graphs/methods/create_update'
        update: []
        replace: []
        delete: []
    graph_resources_graph_resources:
      id: azure.cosmos_db.graph_resources_graph_resources
      name: graph_resources_graph_resources
      title: graph_resources_graph_resources
      methods:
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1graphs~1{graphName}?api-version=2024-09-01-preview/delete'
            operationId: GraphResourcesGraphResource_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/graph_resources_graph_resources/methods/delete'
    sql_databases:
      id: azure.cosmos_db.sql_databases
      name: sql_databases
      title: sql_databases
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlDatabases_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDatabaseListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlDatabase_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDatabaseGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlDatabase_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlDatabaseGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}?api-version=2024-09-01-preview/delete'
            operationId: SqlResourcesSqlDatabase_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_databases/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_databases/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_databases/methods/delete'
    sql_database_throughputs:
      id: azure.cosmos_db.sql_database_throughputs
      name: sql_database_throughputs
      title: sql_database_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlDatabaseThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlDatabaseThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_database_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/sql_database_throughputs/methods/update'
        delete: []
    client_encryption_keys:
      id: azure.cosmos_db.client_encryption_keys
      name: client_encryption_keys
      title: client_encryption_keys
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1clientEncryptionKeys?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesClientEncryptionKeys_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClientEncryptionKeysListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1clientEncryptionKeys~1{clientEncryptionKeyName}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesClientEncryptionKey_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClientEncryptionKeyGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1clientEncryptionKeys~1{clientEncryptionKeyName}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesClientEncryptionKey_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClientEncryptionKeyGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/client_encryption_keys/methods/get'
          - $ref: '#/components/x-stackQL-resources/client_encryption_keys/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/client_encryption_keys/methods/create_update'
        update: []
        replace: []
        delete: []
    sql_containers:
      id: azure.cosmos_db.sql_containers
      name: sql_containers
      title: sql_containers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlContainers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlContainerListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlContainer_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlContainerGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlContainer_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlContainerGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}?api-version=2024-09-01-preview/delete'
            operationId: SqlResourcesSqlContainer_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_containers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_containers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_containers/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_containers/methods/delete'
    sql_container_partition_merges:
      id: azure.cosmos_db.sql_container_partition_merges
      name: sql_container_partition_merges
      title: sql_container_partition_merges
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1partitionMerge?api-version=2024-09-01-preview/post'
            operationId: SqlResourcesSqlContainerPartitionMerge_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionStorageInfoCollection
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_container_partition_merges/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    sql_container_throughputs:
      id: azure.cosmos_db.sql_container_throughputs
      name: sql_container_throughputs
      title: sql_container_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlContainerThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlContainerThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_container_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/sql_container_throughputs/methods/update'
        delete: []
    sql_stored_procedures:
      id: azure.cosmos_db.sql_stored_procedures
      name: sql_stored_procedures
      title: sql_stored_procedures
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1storedProcedures?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlStoredProcedures_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlStoredProcedureListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1storedProcedures~1{storedProcedureName}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlStoredProcedure_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlStoredProcedureGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1storedProcedures~1{storedProcedureName}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlStoredProcedure_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlStoredProcedureGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1storedProcedures~1{storedProcedureName}?api-version=2024-09-01-preview/delete'
            operationId: SqlResourcesSqlStoredProcedure_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_stored_procedures/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_stored_procedures/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_stored_procedures/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_stored_procedures/methods/delete'
    sql_user_defined_functions:
      id: azure.cosmos_db.sql_user_defined_functions
      name: sql_user_defined_functions
      title: sql_user_defined_functions
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1userDefinedFunctions?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlUserDefinedFunctions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlUserDefinedFunctionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1userDefinedFunctions~1{userDefinedFunctionName}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlUserDefinedFunction_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlUserDefinedFunctionGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1userDefinedFunctions~1{userDefinedFunctionName}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlUserDefinedFunction_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlUserDefinedFunctionGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1userDefinedFunctions~1{userDefinedFunctionName}?api-version=2024-09-01-preview/delete'
            operationId: SqlResourcesSqlUserDefinedFunction_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_user_defined_functions/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_user_defined_functions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_user_defined_functions/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_user_defined_functions/methods/delete'
    sql_triggers:
      id: azure.cosmos_db.sql_triggers
      name: sql_triggers
      title: sql_triggers
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1triggers?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlTriggers_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlTriggerListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1triggers~1{triggerName}?api-version=2024-09-01-preview/get'
            operationId: SqlResourcesSqlTrigger_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlTriggerGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1triggers~1{triggerName}?api-version=2024-09-01-preview/put'
            operationId: SqlResourcesSqlTrigger_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: SqlTriggerGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1sqlDatabases~1{databaseName}~1containers~1{containerName}~1triggers~1{triggerName}?api-version=2024-09-01-preview/delete'
            operationId: SqlResourcesSqlTrigger_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/sql_triggers/methods/get'
          - $ref: '#/components/x-stackQL-resources/sql_triggers/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/sql_triggers/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/sql_triggers/methods/delete'
    mongodb_databases:
      id: azure.cosmos_db.mongodb_databases
      name: mongodb_databases
      title: mongodb_databases
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoDBDatabases_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoDBDatabaseListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoDBDatabase_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoDBDatabaseGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}?api-version=2024-09-01-preview/put'
            operationId: MongoDBResourcesMongoDBDatabase_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoDBDatabaseGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}?api-version=2024-09-01-preview/delete'
            operationId: MongoDBResourcesMongoDBDatabase_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongodb_databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/mongodb_databases/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/mongodb_databases/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mongodb_databases/methods/delete'
    mongodb_database_throughputs:
      id: azure.cosmos_db.mongodb_database_throughputs
      name: mongodb_database_throughputs
      title: mongodb_database_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoDBDatabaseThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: MongoDBResourcesMongoDBDatabaseThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongodb_database_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/mongodb_database_throughputs/methods/update'
        delete: []
    mongodb_collections:
      id: azure.cosmos_db.mongodb_collections
      name: mongodb_collections
      title: mongodb_collections
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoDBCollections_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoDBCollectionListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoDBCollection_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoDBCollectionGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}?api-version=2024-09-01-preview/put'
            operationId: MongoDBResourcesMongoDBCollection_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoDBCollectionGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}?api-version=2024-09-01-preview/delete'
            operationId: MongoDBResourcesMongoDBCollection_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongodb_collections/methods/get'
          - $ref: '#/components/x-stackQL-resources/mongodb_collections/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/mongodb_collections/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mongodb_collections/methods/delete'
    mongodb_collection_partition_merges:
      id: azure.cosmos_db.mongodb_collection_partition_merges
      name: mongodb_collection_partition_merges
      title: mongodb_collection_partition_merges
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1partitionMerge?api-version=2024-09-01-preview/post'
            operationId: MongoDBResourcesMongoDBCollectionPartitionMerge_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PhysicalPartitionStorageInfoCollection
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongodb_collection_partition_merges/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    mongodb_collection_throughputs:
      id: azure.cosmos_db.mongodb_collection_throughputs
      name: mongodb_collection_throughputs
      title: mongodb_collection_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoDBCollectionThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbDatabases~1{databaseName}~1collections~1{collectionName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: MongoDBResourcesMongoDBCollectionThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongodb_collection_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/mongodb_collection_throughputs/methods/update'
        delete: []
    tables:
      id: azure.cosmos_db.tables
      name: tables
      title: tables
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables?api-version=2024-09-01-preview/get'
            operationId: TableResourcesTables_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TableListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}?api-version=2024-09-01-preview/get'
            operationId: TableResourcesTable_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TableGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}?api-version=2024-09-01-preview/put'
            operationId: TableResourcesTable_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: TableGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}?api-version=2024-09-01-preview/delete'
            operationId: TableResourcesTable_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/tables/methods/get'
          - $ref: '#/components/x-stackQL-resources/tables/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/delete'
    table_throughputs:
      id: azure.cosmos_db.table_throughputs
      name: table_throughputs
      title: table_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: TableResourcesTableThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1tables~1{tableName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: TableResourcesTableThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/table_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/table_throughputs/methods/update'
        delete: []
    cassandra_keyspaces:
      id: azure.cosmos_db.cassandra_keyspaces
      name: cassandra_keyspaces
      title: cassandra_keyspaces
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraKeyspaces_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraKeyspaceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraKeyspace_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraKeyspaceGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}?api-version=2024-09-01-preview/put'
            operationId: CassandraResourcesCassandraKeyspace_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraKeyspaceGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}?api-version=2024-09-01-preview/delete'
            operationId: CassandraResourcesCassandraKeyspace_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_keyspaces/methods/get'
          - $ref: '#/components/x-stackQL-resources/cassandra_keyspaces/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cassandra_keyspaces/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cassandra_keyspaces/methods/delete'
    cassandra_keyspace_throughputs:
      id: azure.cosmos_db.cassandra_keyspace_throughputs
      name: cassandra_keyspace_throughputs
      title: cassandra_keyspace_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraKeyspaceThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: CassandraResourcesCassandraKeyspaceThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_keyspace_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/cassandra_keyspace_throughputs/methods/update'
        delete: []
    cassandra_resources:
      id: azure.cosmos_db.cassandra_resources
      name: cassandra_resources
      title: cassandra_resources
      methods:
        migrate_cassandra_keyspace_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: CassandraResources_MigrateCassandraKeyspaceToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_cassandra_keyspace_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: CassandraResources_MigrateCassandraKeyspaceToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_cassandra_table_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables~1{tableName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: CassandraResources_MigrateCassandraTableToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_cassandra_table_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables~1{tableName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: CassandraResources_MigrateCassandraTableToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_cassandra_view_to_autoscale:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views~1{viewName}~1throughputSettings~1default~1migrateToAutoscale?api-version=2024-09-01-preview/post'
            operationId: CassandraResources_MigrateCassandraViewToAutoscale
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        migrate_cassandra_view_to_manual_throughput:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views~1{viewName}~1throughputSettings~1default~1migrateToManualThroughput?api-version=2024-09-01-preview/post'
            operationId: CassandraResources_MigrateCassandraViewToManualThroughput
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select: []
        insert: []
        update: []
        replace: []
        delete: []
    cassandra_tables:
      id: azure.cosmos_db.cassandra_tables
      name: cassandra_tables
      title: cassandra_tables
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraTables_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraTableListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables~1{tableName}?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraTable_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraTableGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables~1{tableName}?api-version=2024-09-01-preview/put'
            operationId: CassandraResourcesCassandraTable_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraTableGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables~1{tableName}?api-version=2024-09-01-preview/delete'
            operationId: CassandraResourcesCassandraTable_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_tables/methods/get'
          - $ref: '#/components/x-stackQL-resources/cassandra_tables/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cassandra_tables/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cassandra_tables/methods/delete'
    cassandra_table_throughputs:
      id: azure.cosmos_db.cassandra_table_throughputs
      name: cassandra_table_throughputs
      title: cassandra_table_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables~1{tableName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraTableThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1tables~1{tableName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: CassandraResourcesCassandraTableThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_table_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/cassandra_table_throughputs/methods/update'
        delete: []
    gremlin_databases:
      id: azure.cosmos_db.gremlin_databases
      name: gremlin_databases
      title: gremlin_databases
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases?api-version=2024-09-01-preview/get'
            operationId: GremlinResourcesGremlinDatabases_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GremlinDatabaseListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}?api-version=2024-09-01-preview/get'
            operationId: GremlinResourcesGremlinDatabase_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GremlinDatabaseGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}?api-version=2024-09-01-preview/put'
            operationId: GremlinResourcesGremlinDatabase_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GremlinDatabaseGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}?api-version=2024-09-01-preview/delete'
            operationId: GremlinResourcesGremlinDatabase_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gremlin_databases/methods/get'
          - $ref: '#/components/x-stackQL-resources/gremlin_databases/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/gremlin_databases/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gremlin_databases/methods/delete'
    gremlin_database_throughputs:
      id: azure.cosmos_db.gremlin_database_throughputs
      name: gremlin_database_throughputs
      title: gremlin_database_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: GremlinResourcesGremlinDatabaseThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: GremlinResourcesGremlinDatabaseThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gremlin_database_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/gremlin_database_throughputs/methods/update'
        delete: []
    gremlin_graphs:
      id: azure.cosmos_db.gremlin_graphs
      name: gremlin_graphs
      title: gremlin_graphs
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs?api-version=2024-09-01-preview/get'
            operationId: GremlinResourcesGremlinGraphs_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GremlinGraphListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}?api-version=2024-09-01-preview/get'
            operationId: GremlinResourcesGremlinGraph_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GremlinGraphGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}?api-version=2024-09-01-preview/put'
            operationId: GremlinResourcesGremlinGraph_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: GremlinGraphGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}?api-version=2024-09-01-preview/delete'
            operationId: GremlinResourcesGremlinGraph_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gremlin_graphs/methods/get'
          - $ref: '#/components/x-stackQL-resources/gremlin_graphs/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/gremlin_graphs/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/gremlin_graphs/methods/delete'
    gremlin_graph_throughputs:
      id: azure.cosmos_db.gremlin_graph_throughputs
      name: gremlin_graph_throughputs
      title: gremlin_graph_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: GremlinResourcesGremlinGraphThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1gremlinDatabases~1{databaseName}~1graphs~1{graphName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: GremlinResourcesGremlinGraphThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/gremlin_graph_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/gremlin_graph_throughputs/methods/update'
        delete: []
    locations:
      id: azure.cosmos_db.locations
      name: locations
      title: locations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations?api-version=2024-09-01-preview/get'
            operationId: Locations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocationListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1locations~1{location}?api-version=2024-09-01-preview/get'
            operationId: Locations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: LocationGetResult
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/locations/methods/get'
          - $ref: '#/components/x-stackQL-resources/locations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cassandra_views:
      id: azure.cosmos_db.cassandra_views
      name: cassandra_views
      title: cassandra_views
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraViews_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraViewListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views~1{viewName}?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraView_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraViewGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views~1{viewName}?api-version=2024-09-01-preview/put'
            operationId: CassandraResourcesCassandraView_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraViewGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views~1{viewName}?api-version=2024-09-01-preview/delete'
            operationId: CassandraResourcesCassandraView_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_views/methods/get'
          - $ref: '#/components/x-stackQL-resources/cassandra_views/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cassandra_views/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cassandra_views/methods/delete'
    cassandra_view_throughputs:
      id: azure.cosmos_db.cassandra_view_throughputs
      name: cassandra_view_throughputs
      title: cassandra_view_throughputs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views~1{viewName}~1throughputSettings~1default?api-version=2024-09-01-preview/get'
            operationId: CassandraResourcesCassandraViewThroughput_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1cassandraKeyspaces~1{keyspaceName}~1views~1{viewName}~1throughputSettings~1default?api-version=2024-09-01-preview/put'
            operationId: CassandraResourcesCassandraViewThroughput_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ThroughputSettingsGetResults
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_view_throughputs/methods/get'
        insert: []
        update: []
        replace:
          - $ref: '#/components/x-stackQL-resources/cassandra_view_throughputs/methods/update'
        delete: []
    mongo_role_definitions:
      id: azure.cosmos_db.mongo_role_definitions
      name: mongo_role_definitions
      title: mongo_role_definitions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbRoleDefinitions~1{mongoRoleDefinitionId}?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoRoleDefinition_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoRoleDefinitionGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbRoleDefinitions~1{mongoRoleDefinitionId}?api-version=2024-09-01-preview/put'
            operationId: MongoDBResourcesMongoRoleDefinition_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoRoleDefinitionGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbRoleDefinitions~1{mongoRoleDefinitionId}?api-version=2024-09-01-preview/delete'
            operationId: MongoDBResourcesMongoRoleDefinition_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbRoleDefinitions?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoRoleDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoRoleDefinitionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongo_role_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/mongo_role_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/mongo_role_definitions/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mongo_role_definitions/methods/delete'
    mongo_user_definitions:
      id: azure.cosmos_db.mongo_user_definitions
      name: mongo_user_definitions
      title: mongo_user_definitions
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbUserDefinitions~1{mongoUserDefinitionId}?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoUserDefinition_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoUserDefinitionGetResults
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbUserDefinitions~1{mongoUserDefinitionId}?api-version=2024-09-01-preview/put'
            operationId: MongoDBResourcesMongoUserDefinition_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoUserDefinitionGetResults
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbUserDefinitions~1{mongoUserDefinitionId}?api-version=2024-09-01-preview/delete'
            operationId: MongoDBResourcesMongoUserDefinition_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1mongodbUserDefinitions?api-version=2024-09-01-preview/get'
            operationId: MongoDBResourcesMongoUserDefinitions_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: MongoUserDefinitionListResult
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/mongo_user_definitions/methods/get'
          - $ref: '#/components/x-stackQL-resources/mongo_user_definitions/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/mongo_user_definitions/methods/create_update'
        update: []
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/mongo_user_definitions/methods/delete'
    network_security_perimeter_configurations:
      id: azure.cosmos_db.network_security_perimeter_configurations
      name: network_security_perimeter_configurations
      title: network_security_perimeter_configurations
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1networkSecurityPerimeterConfigurations?api-version=2024-09-01-preview/get'
            operationId: NetworkSecurityPerimeterConfigurations_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfigurationListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}?api-version=2024-09-01-preview/get'
            operationId: NetworkSecurityPerimeterConfigurations_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: NetworkSecurityPerimeterConfiguration
        reconcile:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1networkSecurityPerimeterConfigurations~1{networkSecurityPerimeterConfigurationName}~1reconcile?api-version=2024-09-01-preview/post'
            operationId: NetworkSecurityPerimeterConfigurations_Reconcile
          response:
            mediaType: application/json
            openAPIDocKey: '202'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/get'
          - $ref: '#/components/x-stackQL-resources/network_security_perimeter_configurations/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cassandra_clusters:
      id: azure.cosmos_db.cassandra_clusters
      name: cassandra_clusters
      title: cassandra_clusters
      methods:
        list_by_subscription:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DocumentDB~1cassandraClusters?api-version=2024-09-01-preview/get'
            operationId: CassandraClusters_ListBySubscription
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListClusters
            objectKey: $.value
        list_by_resource_group:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters?api-version=2024-09-01-preview/get'
            operationId: CassandraClusters_ListByResourceGroup
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListClusters
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}?api-version=2024-09-01-preview/get'
            operationId: CassandraClusters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}?api-version=2024-09-01-preview/delete'
            operationId: CassandraClusters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}?api-version=2024-09-01-preview/put'
            operationId: CassandraClusters_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}?api-version=2024-09-01-preview/patch'
            operationId: CassandraClusters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ClusterResource
        invoke_command:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1invokeCommand?api-version=2024-09-01-preview/post'
            operationId: CassandraClusters_InvokeCommand
          response:
            mediaType: application/json
            openAPIDocKey: '202'
            schemaRef: CommandOutput
        invoke_command_async:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1invokeCommandAsync?api-version=2024-09-01-preview/post'
            operationId: CassandraClusters_InvokeCommandAsync
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CommandPublicResource
        deallocate:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1deallocate?api-version=2024-09-01-preview/post'
            operationId: CassandraClusters_Deallocate
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        start:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1start?api-version=2024-09-01-preview/post'
            operationId: CassandraClusters_Start
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        status:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1status?api-version=2024-09-01-preview/get'
            operationId: CassandraClusters_Status
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: CassandraClusterPublicStatus
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters/methods/get'
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters/methods/list_by_resource_group'
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters/methods/list_by_subscription'
        insert:
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters/methods/create_update'
        update:
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters/methods/delete'
    cassandra_clusters_commands:
      id: azure.cosmos_db.cassandra_clusters_commands
      name: cassandra_clusters_commands
      title: cassandra_clusters_commands
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1commands?api-version=2024-09-01-preview/get'
            operationId: CassandraClustersCommand_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListCommands
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters_commands/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cassandra_clusters_command_asyncs:
      id: azure.cosmos_db.cassandra_clusters_command_asyncs
      name: cassandra_clusters_command_asyncs
      title: cassandra_clusters_command_asyncs
      methods:
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1commands~1{commandId}?api-version=2024-09-01-preview/get'
            operationId: CassandraClustersCommandAsync_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListCommands
            objectKey: $.value
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters_command_asyncs/methods/get'
        insert: []
        update: []
        replace: []
        delete: []
    cassandra_clusters_backups:
      id: azure.cosmos_db.cassandra_clusters_backups
      name: cassandra_clusters_backups
      title: cassandra_clusters_backups
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1backups?api-version=2024-09-01-preview/get'
            operationId: CassandraClustersBackups_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListBackups
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1backups~1{backupId}?api-version=2024-09-01-preview/get'
            operationId: CassandraClustersBackup_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: BackupResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters_backups/methods/get'
          - $ref: '#/components/x-stackQL-resources/cassandra_clusters_backups/methods/list'
        insert: []
        update: []
        replace: []
        delete: []
    cassandra_data_center:
      id: azure.cosmos_db.cassandra_data_center
      name: cassandra_data_center
      title: cassandra_data_center
      methods:
        list:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1dataCenters?api-version=2024-09-01-preview/get'
            operationId: CassandraDataCenters_List
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: ListDataCenters
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1dataCenters~1{dataCenterName}?api-version=2024-09-01-preview/get'
            operationId: CassandraDataCenters_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataCenterResource
        delete:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1dataCenters~1{dataCenterName}?api-version=2024-09-01-preview/delete'
            operationId: CassandraDataCenters_Delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        create_update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1dataCenters~1{dataCenterName}?api-version=2024-09-01-preview/put'
            operationId: CassandraDataCenters_CreateUpdate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataCenterResource
        update:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1cassandraClusters~1{clusterName}~1dataCenters~1{dataCenterName}?api-version=2024-09-01-preview/patch'
            operationId: CassandraDataCenters_Update
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: DataCenterResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cassandra_data_center/methods/get'
          - $ref: '#/components/x-stackQL-resources/cassandra_data_center/methods/list'
        insert:
          - $ref: '#/components/x-stackQL-resources/cassandra_data_center/methods/create_update'
        update:
          - $ref: '#/components/x-stackQL-resources/cassandra_data_center/methods/update'
        replace: []
        delete:
          - $ref: '#/components/x-stackQL-resources/cassandra_data_center/methods/delete'
    private_link_resources:
      id: azure.cosmos_db.private_link_resources
      name: private_link_resources
      title: private_link_resources
      methods:
        list_by_database_account:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1privateLinkResources?api-version=2024-09-01-preview/get'
            operationId: PrivateLinkResources_ListByDatabaseAccount
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResourceListResult
            objectKey: $.value
        get:
          operation:
            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DocumentDB~1databaseAccounts~1{accountName}~1privateLinkResources~1{groupName}?api-version=2024-09-01-preview/get'
            operationId: PrivateLinkResources_Get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            schemaRef: PrivateLinkResource
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/get'
          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/list_by_database_account'
        insert: []
        update: []
        replace: []
        delete: []
    vw_sql_role_definitions:
      id: azure.cosmos_db.vw_sql_role_definitions
      name: vw_sql_role_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.roleName') as "role_name",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.assignableScopes') as "assignable_scopes",
              JSON_EXTRACT(properties, '$.permissions') as "permissions",
              subscriptionId,
              resourceGroupName,
              accountName,
              roleDefinitionId
              FROM azure.cosmos_db.sql_role_definitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.roleName') as "role_name",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.assignableScopes') as "assignable_scopes",
                json_extract_path_text(properties, '$.permissions') as "permissions",
                subscriptionId,
                resourceGroupName,
                accountName,
                roleDefinitionId
                FROM azure.cosmos_db.sql_role_definitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_sql_role_assignments:
      id: azure.cosmos_db.vw_sql_role_assignments
      name: vw_sql_role_assignments
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.roleDefinitionId') as "role_definition_id",
              JSON_EXTRACT(properties, '$.scope') as "scope",
              JSON_EXTRACT(properties, '$.principalId') as "principal_id",
              subscriptionId,
              resourceGroupName,
              accountName,
              roleAssignmentId
              FROM azure.cosmos_db.sql_role_assignments
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.roleDefinitionId') as "role_definition_id",
                json_extract_path_text(properties, '$.scope') as "scope",
                json_extract_path_text(properties, '$.principalId') as "principal_id",
                subscriptionId,
                resourceGroupName,
                accountName,
                roleAssignmentId
                FROM azure.cosmos_db.sql_role_assignments
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_services:
      id: azure.cosmos_db.vw_services
      name: vw_services
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.instanceSize') as "instance_size",
              JSON_EXTRACT(properties, '$.instanceCount') as "instance_count",
              JSON_EXTRACT(properties, '$.serviceType') as "service_type",
              JSON_EXTRACT(properties, '$.status') as "status",
              subscriptionId,
              resourceGroupName,
              accountName,
              serviceName
              FROM azure.cosmos_db.services
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.instanceSize') as "instance_size",
                json_extract_path_text(properties, '$.instanceCount') as "instance_count",
                json_extract_path_text(properties, '$.serviceType') as "service_type",
                json_extract_path_text(properties, '$.status') as "status",
                subscriptionId,
                resourceGroupName,
                accountName,
                serviceName
                FROM azure.cosmos_db.services
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_private_endpoint_connections:
      id: azure.cosmos_db.vw_private_endpoint_connections
      name: vw_private_endpoint_connections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.privateEndpoint') as "private_endpoint",
              JSON_EXTRACT(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              privateEndpointConnectionName
              FROM azure.cosmos_db.private_endpoint_connections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.privateEndpoint') as "private_endpoint",
                json_extract_path_text(properties, '$.privateLinkServiceConnectionState') as "private_link_service_connection_state",
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                privateEndpointConnectionName
                FROM azure.cosmos_db.private_endpoint_connections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_chaos_faults:
      id: azure.cosmos_db.vw_chaos_faults
      name: vw_chaos_faults
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.action') as "action",
              JSON_EXTRACT(properties, '$.region') as "region",
              JSON_EXTRACT(properties, '$.databaseName') as "database_name",
              JSON_EXTRACT(properties, '$.containerName') as "container_name",
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              subscriptionId,
              resourceGroupName,
              accountName,
              chaosFault
              FROM azure.cosmos_db.chaos_faults
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.action') as "action",
                json_extract_path_text(properties, '$.region') as "region",
                json_extract_path_text(properties, '$.databaseName') as "database_name",
                json_extract_path_text(properties, '$.containerName') as "container_name",
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                subscriptionId,
                resourceGroupName,
                accountName,
                chaosFault
                FROM azure.cosmos_db.chaos_faults
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_restorable_database_accounts:
      id: azure.cosmos_db.vw_restorable_database_accounts
      name: vw_restorable_database_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              JSON_EXTRACT(properties, '$.accountName') as "account_name",
              JSON_EXTRACT(properties, '$.creationTime') as "creation_time",
              JSON_EXTRACT(properties, '$.oldestRestorableTime') as "oldest_restorable_time",
              JSON_EXTRACT(properties, '$.deletionTime') as "deletion_time",
              JSON_EXTRACT(properties, '$.apiType') as "api_type",
              JSON_EXTRACT(properties, '$.restorableLocations') as "restorable_locations",
              subscriptionId,
              location,
              instanceId
              FROM azure.cosmos_db.restorable_database_accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                json_extract_path_text(properties, '$.accountName') as "account_name",
                json_extract_path_text(properties, '$.creationTime') as "creation_time",
                json_extract_path_text(properties, '$.oldestRestorableTime') as "oldest_restorable_time",
                json_extract_path_text(properties, '$.deletionTime') as "deletion_time",
                json_extract_path_text(properties, '$.apiType') as "api_type",
                json_extract_path_text(properties, '$.restorableLocations') as "restorable_locations",
                subscriptionId,
                location,
                instanceId
                FROM azure.cosmos_db.restorable_database_accounts
                WHERE subscriptionId = 'replace-me';
    vw_notebook_workspaces:
      id: azure.cosmos_db.vw_notebook_workspaces
      name: vw_notebook_workspaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.notebookServerEndpoint') as "notebook_server_endpoint",
              JSON_EXTRACT(properties, '$.status') as "status",
              subscriptionId,
              resourceGroupName,
              accountName,
              notebookWorkspaceName
              FROM azure.cosmos_db.notebook_workspaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.notebookServerEndpoint') as "notebook_server_endpoint",
                json_extract_path_text(properties, '$.status') as "status",
                subscriptionId,
                resourceGroupName,
                accountName,
                notebookWorkspaceName
                FROM azure.cosmos_db.notebook_workspaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_throughput_pools:
      id: azure.cosmos_db.vw_throughput_pools
      name: vw_throughput_pools
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              location as location,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.maxThroughput') as "max_throughput",
              subscriptionId,
              resourceGroupName,
              throughputPoolName
              FROM azure.cosmos_db.throughput_pools
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                location as location,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.maxThroughput') as "max_throughput",
                subscriptionId,
                resourceGroupName,
                throughputPoolName
                FROM azure.cosmos_db.throughput_pools
                WHERE subscriptionId = 'replace-me';
    vw_throughput_pool_accounts:
      id: azure.cosmos_db.vw_throughput_pool_accounts
      name: vw_throughput_pool_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.accountResourceIdentifier') as "account_resource_identifier",
              JSON_EXTRACT(properties, '$.accountLocation') as "account_location",
              JSON_EXTRACT(properties, '$.accountInstanceId') as "account_instance_id",
              subscriptionId,
              resourceGroupName,
              throughputPoolName,
              throughputPoolAccountName
              FROM azure.cosmos_db.throughput_pool_accounts
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND throughputPoolName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.accountResourceIdentifier') as "account_resource_identifier",
                json_extract_path_text(properties, '$.accountLocation') as "account_location",
                json_extract_path_text(properties, '$.accountInstanceId') as "account_instance_id",
                subscriptionId,
                resourceGroupName,
                throughputPoolName,
                throughputPoolAccountName
                FROM azure.cosmos_db.throughput_pool_accounts
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND throughputPoolName = 'replace-me';
    vw_data_transfer_jobs:
      id: azure.cosmos_db.vw_data_transfer_jobs
      name: vw_data_transfer_jobs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.jobName') as "job_name",
              JSON_EXTRACT(properties, '$.source') as "source",
              JSON_EXTRACT(properties, '$.destination') as "destination",
              JSON_EXTRACT(properties, '$.status') as "status",
              JSON_EXTRACT(properties, '$.processedCount') as "processed_count",
              JSON_EXTRACT(properties, '$.totalCount') as "total_count",
              JSON_EXTRACT(properties, '$.lastUpdatedUtcTime') as "last_updated_utc_time",
              JSON_EXTRACT(properties, '$.workerCount') as "worker_count",
              JSON_EXTRACT(properties, '$.error') as "error",
              JSON_EXTRACT(properties, '$.duration') as "duration",
              JSON_EXTRACT(properties, '$.mode') as "mode",
              subscriptionId,
              resourceGroupName,
              accountName,
              jobName
              FROM azure.cosmos_db.data_transfer_jobs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.jobName') as "job_name",
                json_extract_path_text(properties, '$.source') as "source",
                json_extract_path_text(properties, '$.destination') as "destination",
                json_extract_path_text(properties, '$.status') as "status",
                json_extract_path_text(properties, '$.processedCount') as "processed_count",
                json_extract_path_text(properties, '$.totalCount') as "total_count",
                json_extract_path_text(properties, '$.lastUpdatedUtcTime') as "last_updated_utc_time",
                json_extract_path_text(properties, '$.workerCount') as "worker_count",
                json_extract_path_text(properties, '$.error') as "error",
                json_extract_path_text(properties, '$.duration') as "duration",
                json_extract_path_text(properties, '$.mode') as "mode",
                subscriptionId,
                resourceGroupName,
                accountName,
                jobName
                FROM azure.cosmos_db.data_transfer_jobs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_database_accounts:
      id: azure.cosmos_db.vw_database_accounts
      name: vw_database_accounts
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              kind as kind,
              identity as identity,
              systemData as system_data,
              type as type,
              tags as tags,
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.documentEndpoint') as "document_endpoint",
              JSON_EXTRACT(properties, '$.databaseAccountOfferType') as "database_account_offer_type",
              JSON_EXTRACT(properties, '$.ipRules') as "ip_rules",
              JSON_EXTRACT(properties, '$.isVirtualNetworkFilterEnabled') as "is_virtual_network_filter_enabled",
              JSON_EXTRACT(properties, '$.enableAutomaticFailover') as "enable_automatic_failover",
              JSON_EXTRACT(properties, '$.consistencyPolicy') as "consistency_policy",
              JSON_EXTRACT(properties, '$.capabilities') as "capabilities",
              JSON_EXTRACT(properties, '$.writeLocations') as "write_locations",
              JSON_EXTRACT(properties, '$.readLocations') as "read_locations",
              JSON_EXTRACT(properties, '$.locations') as "locations",
              JSON_EXTRACT(properties, '$.failoverPolicies') as "failover_policies",
              JSON_EXTRACT(properties, '$.virtualNetworkRules') as "virtual_network_rules",
              JSON_EXTRACT(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
              JSON_EXTRACT(properties, '$.enableMultipleWriteLocations') as "enable_multiple_write_locations",
              JSON_EXTRACT(properties, '$.enableCassandraConnector') as "enable_cassandra_connector",
              JSON_EXTRACT(properties, '$.connectorOffer') as "connector_offer",
              JSON_EXTRACT(properties, '$.disableKeyBasedMetadataWriteAccess') as "disable_key_based_metadata_write_access",
              JSON_EXTRACT(properties, '$.keyVaultKeyUri') as "key_vault_key_uri",
              JSON_EXTRACT(properties, '$.defaultIdentity') as "default_identity",
              JSON_EXTRACT(properties, '$.publicNetworkAccess') as "public_network_access",
              JSON_EXTRACT(properties, '$.enableFreeTier') as "enable_free_tier",
              JSON_EXTRACT(properties, '$.apiProperties') as "api_properties",
              JSON_EXTRACT(properties, '$.enableAnalyticalStorage') as "enable_analytical_storage",
              JSON_EXTRACT(properties, '$.analyticalStorageConfiguration') as "analytical_storage_configuration",
              JSON_EXTRACT(properties, '$.instanceId') as "instance_id",
              JSON_EXTRACT(properties, '$.createMode') as "create_mode",
              JSON_EXTRACT(properties, '$.restoreParameters') as "restore_parameters",
              JSON_EXTRACT(properties, '$.backupPolicy') as "backup_policy",
              JSON_EXTRACT(properties, '$.cors') as "cors",
              JSON_EXTRACT(properties, '$.networkAclBypass') as "network_acl_bypass",
              JSON_EXTRACT(properties, '$.networkAclBypassResourceIds') as "network_acl_bypass_resource_ids",
              JSON_EXTRACT(properties, '$.diagnosticLogSettings') as "diagnostic_log_settings",
              JSON_EXTRACT(properties, '$.disableLocalAuth') as "disable_local_auth",
              JSON_EXTRACT(properties, '$.capacity') as "capacity",
              JSON_EXTRACT(properties, '$.capacityMode') as "capacity_mode",
              JSON_EXTRACT(properties, '$.capacityModeChangeTransitionState') as "capacity_mode_change_transition_state",
              JSON_EXTRACT(properties, '$.enableMaterializedViews') as "enable_materialized_views",
              JSON_EXTRACT(properties, '$.keysMetadata') as "keys_metadata",
              JSON_EXTRACT(properties, '$.enablePartitionMerge') as "enable_partition_merge",
              JSON_EXTRACT(properties, '$.enableBurstCapacity') as "enable_burst_capacity",
              JSON_EXTRACT(properties, '$.minimalTlsVersion') as "minimal_tls_version",
              JSON_EXTRACT(properties, '$.customerManagedKeyStatus') as "customer_managed_key_status",
              JSON_EXTRACT(properties, '$.enablePriorityBasedExecution') as "enable_priority_based_execution",
              JSON_EXTRACT(properties, '$.defaultPriorityLevel') as "default_priority_level",
              JSON_EXTRACT(properties, '$.enablePerRegionPerPartitionAutoscale') as "enable_per_region_per_partition_autoscale",
              subscriptionId,
              resourceGroupName,
              accountName
              FROM azure.cosmos_db.database_accounts
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                kind as kind,
                identity as identity,
                systemData as system_data,
                type as type,
                tags as tags,
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.documentEndpoint') as "document_endpoint",
                json_extract_path_text(properties, '$.databaseAccountOfferType') as "database_account_offer_type",
                json_extract_path_text(properties, '$.ipRules') as "ip_rules",
                json_extract_path_text(properties, '$.isVirtualNetworkFilterEnabled') as "is_virtual_network_filter_enabled",
                json_extract_path_text(properties, '$.enableAutomaticFailover') as "enable_automatic_failover",
                json_extract_path_text(properties, '$.consistencyPolicy') as "consistency_policy",
                json_extract_path_text(properties, '$.capabilities') as "capabilities",
                json_extract_path_text(properties, '$.writeLocations') as "write_locations",
                json_extract_path_text(properties, '$.readLocations') as "read_locations",
                json_extract_path_text(properties, '$.locations') as "locations",
                json_extract_path_text(properties, '$.failoverPolicies') as "failover_policies",
                json_extract_path_text(properties, '$.virtualNetworkRules') as "virtual_network_rules",
                json_extract_path_text(properties, '$.privateEndpointConnections') as "private_endpoint_connections",
                json_extract_path_text(properties, '$.enableMultipleWriteLocations') as "enable_multiple_write_locations",
                json_extract_path_text(properties, '$.enableCassandraConnector') as "enable_cassandra_connector",
                json_extract_path_text(properties, '$.connectorOffer') as "connector_offer",
                json_extract_path_text(properties, '$.disableKeyBasedMetadataWriteAccess') as "disable_key_based_metadata_write_access",
                json_extract_path_text(properties, '$.keyVaultKeyUri') as "key_vault_key_uri",
                json_extract_path_text(properties, '$.defaultIdentity') as "default_identity",
                json_extract_path_text(properties, '$.publicNetworkAccess') as "public_network_access",
                json_extract_path_text(properties, '$.enableFreeTier') as "enable_free_tier",
                json_extract_path_text(properties, '$.apiProperties') as "api_properties",
                json_extract_path_text(properties, '$.enableAnalyticalStorage') as "enable_analytical_storage",
                json_extract_path_text(properties, '$.analyticalStorageConfiguration') as "analytical_storage_configuration",
                json_extract_path_text(properties, '$.instanceId') as "instance_id",
                json_extract_path_text(properties, '$.createMode') as "create_mode",
                json_extract_path_text(properties, '$.restoreParameters') as "restore_parameters",
                json_extract_path_text(properties, '$.backupPolicy') as "backup_policy",
                json_extract_path_text(properties, '$.cors') as "cors",
                json_extract_path_text(properties, '$.networkAclBypass') as "network_acl_bypass",
                json_extract_path_text(properties, '$.networkAclBypassResourceIds') as "network_acl_bypass_resource_ids",
                json_extract_path_text(properties, '$.diagnosticLogSettings') as "diagnostic_log_settings",
                json_extract_path_text(properties, '$.disableLocalAuth') as "disable_local_auth",
                json_extract_path_text(properties, '$.capacity') as "capacity",
                json_extract_path_text(properties, '$.capacityMode') as "capacity_mode",
                json_extract_path_text(properties, '$.capacityModeChangeTransitionState') as "capacity_mode_change_transition_state",
                json_extract_path_text(properties, '$.enableMaterializedViews') as "enable_materialized_views",
                json_extract_path_text(properties, '$.keysMetadata') as "keys_metadata",
                json_extract_path_text(properties, '$.enablePartitionMerge') as "enable_partition_merge",
                json_extract_path_text(properties, '$.enableBurstCapacity') as "enable_burst_capacity",
                json_extract_path_text(properties, '$.minimalTlsVersion') as "minimal_tls_version",
                json_extract_path_text(properties, '$.customerManagedKeyStatus') as "customer_managed_key_status",
                json_extract_path_text(properties, '$.enablePriorityBasedExecution') as "enable_priority_based_execution",
                json_extract_path_text(properties, '$.defaultPriorityLevel') as "default_priority_level",
                json_extract_path_text(properties, '$.enablePerRegionPerPartitionAutoscale') as "enable_per_region_per_partition_autoscale",
                subscriptionId,
                resourceGroupName,
                accountName
                FROM azure.cosmos_db.database_accounts
                WHERE subscriptionId = 'replace-me';
    vw_graph_resources_graphs:
      id: azure.cosmos_db.vw_graph_resources_graphs
      name: vw_graph_resources_graphs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              graphName
              FROM azure.cosmos_db.graph_resources_graphs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                graphName
                FROM azure.cosmos_db.graph_resources_graphs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_sql_databases:
      id: azure.cosmos_db.vw_sql_databases
      name: vw_sql_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName
              FROM azure.cosmos_db.sql_databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName
                FROM azure.cosmos_db.sql_databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_sql_database_throughputs:
      id: azure.cosmos_db.vw_sql_database_throughputs
      name: vw_sql_database_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName
              FROM azure.cosmos_db.sql_database_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName
                FROM azure.cosmos_db.sql_database_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
    vw_client_encryption_keys:
      id: azure.cosmos_db.vw_client_encryption_keys
      name: vw_client_encryption_keys
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              clientEncryptionKeyName
              FROM azure.cosmos_db.client_encryption_keys
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                clientEncryptionKeyName
                FROM azure.cosmos_db.client_encryption_keys
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
    vw_sql_containers:
      id: azure.cosmos_db.vw_sql_containers
      name: vw_sql_containers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              containerName
              FROM azure.cosmos_db.sql_containers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                containerName
                FROM azure.cosmos_db.sql_containers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
    vw_sql_container_throughputs:
      id: azure.cosmos_db.vw_sql_container_throughputs
      name: vw_sql_container_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              containerName
              FROM azure.cosmos_db.sql_container_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                containerName
                FROM azure.cosmos_db.sql_container_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
    vw_sql_stored_procedures:
      id: azure.cosmos_db.vw_sql_stored_procedures
      name: vw_sql_stored_procedures
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              containerName,
              storedProcedureName
              FROM azure.cosmos_db.sql_stored_procedures
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                containerName,
                storedProcedureName
                FROM azure.cosmos_db.sql_stored_procedures
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
    vw_sql_user_defined_functions:
      id: azure.cosmos_db.vw_sql_user_defined_functions
      name: vw_sql_user_defined_functions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              containerName,
              userDefinedFunctionName
              FROM azure.cosmos_db.sql_user_defined_functions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                containerName,
                userDefinedFunctionName
                FROM azure.cosmos_db.sql_user_defined_functions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
    vw_sql_triggers:
      id: azure.cosmos_db.vw_sql_triggers
      name: vw_sql_triggers
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              containerName,
              triggerName
              FROM azure.cosmos_db.sql_triggers
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                containerName,
                triggerName
                FROM azure.cosmos_db.sql_triggers
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND containerName = 'replace-me';
    vw_mongodb_databases:
      id: azure.cosmos_db.vw_mongodb_databases
      name: vw_mongodb_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName
              FROM azure.cosmos_db.mongodb_databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName
                FROM azure.cosmos_db.mongodb_databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_mongodb_database_throughputs:
      id: azure.cosmos_db.vw_mongodb_database_throughputs
      name: vw_mongodb_database_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName
              FROM azure.cosmos_db.mongodb_database_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName
                FROM azure.cosmos_db.mongodb_database_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
    vw_mongodb_collections:
      id: azure.cosmos_db.vw_mongodb_collections
      name: vw_mongodb_collections
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              collectionName
              FROM azure.cosmos_db.mongodb_collections
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                collectionName
                FROM azure.cosmos_db.mongodb_collections
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
    vw_mongodb_collection_throughputs:
      id: azure.cosmos_db.vw_mongodb_collection_throughputs
      name: vw_mongodb_collection_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              collectionName
              FROM azure.cosmos_db.mongodb_collection_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND collectionName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                collectionName
                FROM azure.cosmos_db.mongodb_collection_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND collectionName = 'replace-me';
    vw_tables:
      id: azure.cosmos_db.vw_tables
      name: vw_tables
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              tableName
              FROM azure.cosmos_db.tables
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                tableName
                FROM azure.cosmos_db.tables
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_table_throughputs:
      id: azure.cosmos_db.vw_table_throughputs
      name: vw_table_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              tableName
              FROM azure.cosmos_db.table_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND tableName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                tableName
                FROM azure.cosmos_db.table_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND tableName = 'replace-me';
    vw_cassandra_keyspaces:
      id: azure.cosmos_db.vw_cassandra_keyspaces
      name: vw_cassandra_keyspaces
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              keyspaceName
              FROM azure.cosmos_db.cassandra_keyspaces
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                keyspaceName
                FROM azure.cosmos_db.cassandra_keyspaces
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_cassandra_keyspace_throughputs:
      id: azure.cosmos_db.vw_cassandra_keyspace_throughputs
      name: vw_cassandra_keyspace_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              keyspaceName
              FROM azure.cosmos_db.cassandra_keyspace_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                keyspaceName
                FROM azure.cosmos_db.cassandra_keyspace_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me';
    vw_cassandra_tables:
      id: azure.cosmos_db.vw_cassandra_tables
      name: vw_cassandra_tables
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              keyspaceName,
              tableName
              FROM azure.cosmos_db.cassandra_tables
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                keyspaceName,
                tableName
                FROM azure.cosmos_db.cassandra_tables
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me';
    vw_cassandra_table_throughputs:
      id: azure.cosmos_db.vw_cassandra_table_throughputs
      name: vw_cassandra_table_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              keyspaceName,
              tableName
              FROM azure.cosmos_db.cassandra_table_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me' AND tableName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                keyspaceName,
                tableName
                FROM azure.cosmos_db.cassandra_table_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me' AND tableName = 'replace-me';
    vw_gremlin_databases:
      id: azure.cosmos_db.vw_gremlin_databases
      name: vw_gremlin_databases
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName
              FROM azure.cosmos_db.gremlin_databases
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName
                FROM azure.cosmos_db.gremlin_databases
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_gremlin_database_throughputs:
      id: azure.cosmos_db.vw_gremlin_database_throughputs
      name: vw_gremlin_database_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName
              FROM azure.cosmos_db.gremlin_database_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName
                FROM azure.cosmos_db.gremlin_database_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
    vw_gremlin_graphs:
      id: azure.cosmos_db.vw_gremlin_graphs
      name: vw_gremlin_graphs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              graphName
              FROM azure.cosmos_db.gremlin_graphs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                graphName
                FROM azure.cosmos_db.gremlin_graphs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me';
    vw_gremlin_graph_throughputs:
      id: azure.cosmos_db.vw_gremlin_graph_throughputs
      name: vw_gremlin_graph_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              databaseName,
              graphName
              FROM azure.cosmos_db.gremlin_graph_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND graphName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                databaseName,
                graphName
                FROM azure.cosmos_db.gremlin_graph_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND databaseName = 'replace-me' AND graphName = 'replace-me';
    vw_locations:
      id: azure.cosmos_db.vw_locations
      name: vw_locations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.supportsAvailabilityZone') as "supports_availability_zone",
              JSON_EXTRACT(properties, '$.isResidencyRestricted') as "is_residency_restricted",
              JSON_EXTRACT(properties, '$.backupStorageRedundancies') as "backup_storage_redundancies",
              JSON_EXTRACT(properties, '$.isSubscriptionRegionAccessAllowedForRegular') as "is_subscription_region_access_allowed_for_regular",
              JSON_EXTRACT(properties, '$.isSubscriptionRegionAccessAllowedForAz') as "is_subscription_region_access_allowed_for_az",
              JSON_EXTRACT(properties, '$.status') as "status",
              subscriptionId,
              location
              FROM azure.cosmos_db.locations
              WHERE subscriptionId = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.supportsAvailabilityZone') as "supports_availability_zone",
                json_extract_path_text(properties, '$.isResidencyRestricted') as "is_residency_restricted",
                json_extract_path_text(properties, '$.backupStorageRedundancies') as "backup_storage_redundancies",
                json_extract_path_text(properties, '$.isSubscriptionRegionAccessAllowedForRegular') as "is_subscription_region_access_allowed_for_regular",
                json_extract_path_text(properties, '$.isSubscriptionRegionAccessAllowedForAz') as "is_subscription_region_access_allowed_for_az",
                json_extract_path_text(properties, '$.status') as "status",
                subscriptionId,
                location
                FROM azure.cosmos_db.locations
                WHERE subscriptionId = 'replace-me';
    vw_cassandra_views:
      id: azure.cosmos_db.vw_cassandra_views
      name: vw_cassandra_views
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              JSON_EXTRACT(properties, '$.options') as "options",
              subscriptionId,
              resourceGroupName,
              accountName,
              keyspaceName,
              viewName
              FROM azure.cosmos_db.cassandra_views
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                json_extract_path_text(properties, '$.options') as "options",
                subscriptionId,
                resourceGroupName,
                accountName,
                keyspaceName,
                viewName
                FROM azure.cosmos_db.cassandra_views
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me';
    vw_cassandra_view_throughputs:
      id: azure.cosmos_db.vw_cassandra_view_throughputs
      name: vw_cassandra_view_throughputs
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              location as location,
              type as type,
              tags as tags,
              identity as identity,
              JSON_EXTRACT(properties, '$.resource') as "resource",
              subscriptionId,
              resourceGroupName,
              accountName,
              keyspaceName,
              viewName
              FROM azure.cosmos_db.cassandra_view_throughputs
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me' AND viewName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                location as location,
                type as type,
                tags as tags,
                identity as identity,
                json_extract_path_text(properties, '$.resource') as "resource",
                subscriptionId,
                resourceGroupName,
                accountName,
                keyspaceName,
                viewName
                FROM azure.cosmos_db.cassandra_view_throughputs
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me' AND keyspaceName = 'replace-me' AND viewName = 'replace-me';
    vw_mongo_role_definitions:
      id: azure.cosmos_db.vw_mongo_role_definitions
      name: vw_mongo_role_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.roleName') as "role_name",
              JSON_EXTRACT(properties, '$.type') as "type",
              JSON_EXTRACT(properties, '$.databaseName') as "database_name",
              JSON_EXTRACT(properties, '$.privileges') as "privileges",
              JSON_EXTRACT(properties, '$.roles') as "roles",
              subscriptionId,
              resourceGroupName,
              accountName,
              mongoRoleDefinitionId
              FROM azure.cosmos_db.mongo_role_definitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.roleName') as "role_name",
                json_extract_path_text(properties, '$.type') as "type",
                json_extract_path_text(properties, '$.databaseName') as "database_name",
                json_extract_path_text(properties, '$.privileges') as "privileges",
                json_extract_path_text(properties, '$.roles') as "roles",
                subscriptionId,
                resourceGroupName,
                accountName,
                mongoRoleDefinitionId
                FROM azure.cosmos_db.mongo_role_definitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_mongo_user_definitions:
      id: azure.cosmos_db.vw_mongo_user_definitions
      name: vw_mongo_user_definitions
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.userName') as "user_name",
              JSON_EXTRACT(properties, '$.password') as "password",
              JSON_EXTRACT(properties, '$.databaseName') as "database_name",
              JSON_EXTRACT(properties, '$.customData') as "custom_data",
              JSON_EXTRACT(properties, '$.roles') as "roles",
              JSON_EXTRACT(properties, '$.mechanisms') as "mechanisms",
              subscriptionId,
              resourceGroupName,
              accountName,
              mongoUserDefinitionId
              FROM azure.cosmos_db.mongo_user_definitions
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.userName') as "user_name",
                json_extract_path_text(properties, '$.password') as "password",
                json_extract_path_text(properties, '$.databaseName') as "database_name",
                json_extract_path_text(properties, '$.customData') as "custom_data",
                json_extract_path_text(properties, '$.roles') as "roles",
                json_extract_path_text(properties, '$.mechanisms') as "mechanisms",
                subscriptionId,
                resourceGroupName,
                accountName,
                mongoUserDefinitionId
                FROM azure.cosmos_db.mongo_user_definitions
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_network_security_perimeter_configurations:
      id: azure.cosmos_db.vw_network_security_perimeter_configurations
      name: vw_network_security_perimeter_configurations
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              JSON_EXTRACT(properties, '$.provisioningState') as "provisioning_state",
              JSON_EXTRACT(properties, '$.provisioningIssues') as "provisioning_issues",
              JSON_EXTRACT(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
              JSON_EXTRACT(properties, '$.resourceAssociation') as "resource_association",
              JSON_EXTRACT(properties, '$.profile') as "profile",
              subscriptionId,
              resourceGroupName,
              accountName,
              networkSecurityPerimeterConfigurationName
              FROM azure.cosmos_db.network_security_perimeter_configurations
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                json_extract_path_text(properties, '$.provisioningState') as "provisioning_state",
                json_extract_path_text(properties, '$.provisioningIssues') as "provisioning_issues",
                json_extract_path_text(properties, '$.networkSecurityPerimeter') as "network_security_perimeter",
                json_extract_path_text(properties, '$.resourceAssociation') as "resource_association",
                json_extract_path_text(properties, '$.profile') as "profile",
                subscriptionId,
                resourceGroupName,
                accountName,
                networkSecurityPerimeterConfigurationName
                FROM azure.cosmos_db.network_security_perimeter_configurations
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
    vw_private_link_resources:
      id: azure.cosmos_db.vw_private_link_resources
      name: vw_private_link_resources
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              id as id,
              name as name,
              type as type,
              JSON_EXTRACT(properties, '$.groupId') as "group_id",
              JSON_EXTRACT(properties, '$.requiredMembers') as "required_members",
              JSON_EXTRACT(properties, '$.requiredZoneNames') as "required_zone_names",
              subscriptionId,
              resourceGroupName,
              accountName,
              groupName
              FROM azure.cosmos_db.private_link_resources
              WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                id as id,
                name as name,
                type as type,
                json_extract_path_text(properties, '$.groupId') as "group_id",
                json_extract_path_text(properties, '$.requiredMembers') as "required_members",
                json_extract_path_text(properties, '$.requiredZoneNames') as "required_zone_names",
                subscriptionId,
                resourceGroupName,
                accountName,
                groupName
                FROM azure.cosmos_db.private_link_resources
                WHERE subscriptionId = 'replace-me' AND resourceGroupName = 'replace-me' AND accountName = 'replace-me';
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleDefinitions/{roleDefinitionId}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlRoleDefinition_Get
      description: Retrieves the properties of an existing Azure Cosmos DB SQL Role Definition with the given Id.
      parameters:
        - $ref: '#/components/parameters/roleDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Role Definition was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRoleDefinitionGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_GetSqlRoleDefinition
    put:
      operationId: SqlResourcesSqlRoleDefinition_CreateUpdate
      x-ms-long-running-operation: true
      description: Creates or updates an Azure Cosmos DB SQL Role Definition.
      parameters:
        - $ref: '#/components/parameters/roleDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The properties required to create or update a Role Definition.
        required: true
        x-ms-requestBody-name: createUpdateSqlRoleDefinitionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlRoleDefinitionCreateUpdateParameters'
      responses:
        '200':
          description: The Role Definition create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRoleDefinitionGetResults'
        '202':
          description: The Role Definition create or update request was accepted and will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_CreateUpdateSqlRoleDefinition
    delete:
      operationId: SqlResourcesSqlRoleDefinition_Delete
      x-ms-long-running-operation: true
      description: Deletes an existing Azure Cosmos DB SQL Role Definition.
      parameters:
        - $ref: '#/components/parameters/roleDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Role Definition delete operation was completed successfully.
        '202':
          description: The Role Definition delete request was accepted and will complete asynchronously.
        '204':
          description: The requested Role Definition does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_DeleteSqlRoleDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleDefinitions?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlRoleDefinitions_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the list of all Azure Cosmos DB SQL Role Definitions.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The list operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRoleDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_ListSqlRoleDefinitions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleAssignments/{roleAssignmentId}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlRoleAssignment_Get
      description: Retrieves the properties of an existing Azure Cosmos DB SQL Role Assignment with the given Id.
      parameters:
        - $ref: '#/components/parameters/roleAssignmentIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Role Assignment was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRoleAssignmentGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_GetSqlRoleAssignment
    put:
      operationId: SqlResourcesSqlRoleAssignment_CreateUpdate
      x-ms-long-running-operation: true
      description: Creates or updates an Azure Cosmos DB SQL Role Assignment.
      parameters:
        - $ref: '#/components/parameters/roleAssignmentIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The properties required to create or update a Role Assignment.
        required: true
        x-ms-requestBody-name: createUpdateSqlRoleAssignmentParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlRoleAssignmentCreateUpdateParameters'
      responses:
        '200':
          description: The Role Assignment create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRoleAssignmentGetResults'
        '202':
          description: The Role Assignment create or update request was accepted and will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_CreateUpdateSqlRoleAssignment
    delete:
      operationId: SqlResourcesSqlRoleAssignment_Delete
      x-ms-long-running-operation: true
      description: Deletes an existing Azure Cosmos DB SQL Role Assignment.
      parameters:
        - $ref: '#/components/parameters/roleAssignmentIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Role Assignment delete operation was completed successfully.
        '202':
          description: The Role Assignment delete request was accepted and will complete asynchronously.
        '204':
          description: The requested Role Assignment does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_DeleteSqlRoleAssignment
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleAssignments?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlRoleAssignments_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the list of all Azure Cosmos DB SQL Role Assignments.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The list operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlRoleAssignmentListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_ListSqlRoleAssignments
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/services?api-version=2024-09-01-preview:
    get:
      operationId: Service_List
      description: Gets the status of service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The ServiceResource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/services/{serviceName}?api-version=2024-09-01-preview:
    put:
      tags:
        - DataTransfer
        - SqlDedicatedGateway
        - GraphAPICompute
        - MaterializedViewsBuilder
      operationId: Service_Create
      description: Creates a service.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/serviceNameParameter'
      requestBody:
        description: The Service resource parameters.
        required: true
        x-ms-requestBody-name: createUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceResourceCreateUpdateParameters'
      responses:
        '200':
          description: The service status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        '202':
          description: The job will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      tags:
        - DataTransfer
        - SqlDedicatedGateway
        - GraphAPICompute
        - MaterializedViewsBuilder
      operationId: Service_Get
      description: Gets the status of service.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/serviceNameParameter'
      responses:
        '200':
          description: The ServiceResource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      tags:
        - DataTransfer
        - SqlDedicatedGateway
        - GraphAPICompute
        - MaterializedViewsBuilder
      operationId: Service_Delete
      description: Deletes service with the given serviceName.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/serviceNameParameter'
      responses:
        '200':
          description: The response for service deletion.
        '202':
          description: The job will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The response for service deletion.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateEndpointConnections?api-version=2024-09-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      description: List all private endpoint connections on a Cosmos DB account.
      operationId: PrivateEndpointConnections_ListByDatabaseAccount
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: Successfully retrieved private endpoint connections.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}?api-version=2024-09-01-preview:
    get:
      tags:
        - PrivateEndpointConnections
      description: Gets a private endpoint connection.
      operationId: PrivateEndpointConnections_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
    put:
      tags:
        - PrivateEndpointConnections
      description: Approve or reject a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
      responses:
        '200':
          description: Successfully approved or rejected private endpoint connection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
        '202':
          description: Accepted. The private endpoint connection update will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
    delete:
      tags:
        - PrivateEndpointConnections
      description: Deletes a private endpoint connection with a given name.
      operationId: PrivateEndpointConnections_Delete
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/PrivateEndpointConnectionNameParameter'
      responses:
        '202':
          description: Accepted. The private endpoint connection delete will complete asynchronously.
        '204':
          description: Private endpoint connection does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/chaosFaults?api-version=2024-09-01-preview:
    get:
      operationId: ChaosFault_List
      description: List Chaos Faults for CosmosDB account.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chaosFaultListResponse'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/chaosFaults/{chaosFault}?api-version=2024-09-01-preview:
    put:
      operationId: ChaosFault_EnableDisable
      description: Enable, disable Chaos Fault in a CosmosDB account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/chaosFault'
      requestBody:
        description: A request object to enable/disable the chaos fault.
        required: true
        x-ms-requestBody-name: chaosFaultRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chaosFaultResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chaosFaultResource'
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chaosFaultResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
    get:
      operationId: ChaosFault_Get
      description: Get Chaos Fault for a CosmosdB account for a particular Chaos Fault.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/chaosFault'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chaosFaultResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts?api-version=2024-09-01-preview:
    get:
      operationId: RestorableDatabaseAccounts_ListByLocation
      description: Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region.  This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableDatabaseAccountsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/restorableDatabaseAccounts?api-version=2024-09-01-preview:
    get:
      operationId: RestorableDatabaseAccounts_List
      description: Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableDatabaseAccountsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}?api-version=2024-09-01-preview:
    get:
      operationId: RestorableDatabaseAccounts_GetByLocation
      description: Retrieves the properties of an existing Azure Cosmos DB restorable database account.  This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*' permission.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
      responses:
        '200':
          description: The restorable database account properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableDatabaseAccountGetResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/retrieveContinuousBackupInformation?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_RetrieveContinuousBackupInformation
      description: Retrieves continuous backup information for a container resource.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      requestBody:
        description: The name of the continuous backup restore location.
        required: true
        x-ms-requestBody-name: location
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousBackupRestoreLocation'
      responses:
        '200':
          description: The Sql container retrieve backup information operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupInformation'
        '202':
          description: The sql container retrieve backup information operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlDatabases?api-version=2024-09-01-preview:
    get:
      operationId: RestorableSqlDatabases_List
      description: Show the event feed of all mutations done on all the Azure Cosmos DB SQL databases under the restorable account.  This helps in scenario where database was accidentally deleted to get the deletion time.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableSqlDatabasesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlContainers?api-version=2024-09-01-preview:
    get:
      operationId: RestorableSqlContainers_List
      description: Show the event feed of all mutations done on all the Azure Cosmos DB SQL containers under a specific database.  This helps in scenario where container was accidentally deleted.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restorableSqlDatabaseRidParameter'
        - $ref: '#/components/parameters/restorableSqlContainersEventFeedStartTime'
        - $ref: '#/components/parameters/restorableSqlContainersEventFeedEndTime'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableSqlContainersListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlResources?api-version=2024-09-01-preview:
    get:
      operationId: RestorableSqlResources_List
      description: Return a list of database and container combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restoreLocationParameter'
        - $ref: '#/components/parameters/restoreTimestampInUtcParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableSqlResourcesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/retrieveContinuousBackupInformation?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_RetrieveContinuousBackupInformation
      description: Retrieves continuous backup information for a Mongodb collection.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      requestBody:
        description: The name of the continuous backup restore location.
        required: true
        x-ms-requestBody-name: location
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousBackupRestoreLocation'
      responses:
        '200':
          description: The Mongodb collection retrieve backup information operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupInformation'
        '202':
          description: The Mongodb collection retrieve backup information operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbDatabases?api-version=2024-09-01-preview:
    get:
      operationId: RestorableMongodbDatabases_List
      description: Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB databases under the restorable account.  This helps in scenario where database was accidentally deleted to get the deletion time.  This API requires  'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableMongodbDatabasesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbCollections?api-version=2024-09-01-preview:
    get:
      operationId: RestorableMongodbCollections_List
      description: Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a specific database.  This helps in scenario where container was accidentally deleted.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restorableMongodbDatabaseRidParameter'
        - $ref: '#/components/parameters/restorableMongoDBCollectionsEventFeedStartTime'
        - $ref: '#/components/parameters/restorableMongoDBCollectionsEventFeedEndTime'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableMongodbCollectionsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbResources?api-version=2024-09-01-preview:
    get:
      operationId: RestorableMongodbResources_List
      description: Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restoreLocationParameter'
        - $ref: '#/components/parameters/restoreTimestampInUtcParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableMongodbResourcesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/retrieveContinuousBackupInformation?api-version=2024-09-01-preview:
    post:
      operationId: GremlinResources_RetrieveContinuousBackupInformation
      description: Retrieves continuous backup information for a gremlin graph.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      requestBody:
        description: The name of the continuous backup restore location.
        required: true
        x-ms-requestBody-name: location
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousBackupRestoreLocation'
      responses:
        '200':
          description: The Gremlin graph retrieve backup information operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupInformation'
        '202':
          description: The Gremlin graph retrieve backup information operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGremlinDatabases?api-version=2024-09-01-preview:
    get:
      operationId: RestorableGremlinDatabases_List
      description: Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin databases under the restorable account. This helps in scenario where database was accidentally deleted to get the deletion time. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableGremlinDatabasesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGraphs?api-version=2024-09-01-preview:
    get:
      operationId: RestorableGremlinGraphs_List
      description: Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin graphs under a specific database. This helps in scenario where container was accidentally deleted. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restorableGremlinDatabaseRidParameter'
        - $ref: '#/components/parameters/restorableGremlinGraphsEventFeedStartTime'
        - $ref: '#/components/parameters/restorableGremlinGraphsEventFeedEndTime'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableGremlinGraphsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGremlinResources?api-version=2024-09-01-preview:
    get:
      operationId: RestorableGremlinResources_List
      description: Return a list of gremlin database and graphs combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restoreLocationParameter'
        - $ref: '#/components/parameters/restoreTimestampInUtcParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableGremlinResourcesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/retrieveContinuousBackupInformation?api-version=2024-09-01-preview:
    post:
      operationId: TableResources_RetrieveContinuousBackupInformation
      description: Retrieves continuous backup information for a table.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      requestBody:
        description: The name of the continuous backup restore location.
        required: true
        x-ms-requestBody-name: location
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousBackupRestoreLocation'
      responses:
        '200':
          description: The Table retrieve backup information operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupInformation'
        '202':
          description: The Table retrieve backup information operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableTables?api-version=2024-09-01-preview:
    get:
      operationId: RestorableTables_List
      description: Show the event feed of all mutations done on all the Azure Cosmos DB Tables. This helps in scenario where table was accidentally deleted. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restorableTablesEventFeedStartTime'
        - $ref: '#/components/parameters/restorableTablesEventFeedEndTime'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableTablesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableTableResources?api-version=2024-09-01-preview:
    get:
      operationId: RestorableTableResources_List
      description: Return a list of tables that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
        - $ref: '#/components/parameters/instanceIdParameter'
        - $ref: '#/components/parameters/restoreLocationParameter'
        - $ref: '#/components/parameters/restoreTimestampInUtcParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestorableTableResourcesListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces?api-version=2024-09-01-preview:
    get:
      tags:
        - NotebookWorkspacesResource
      description: Gets the notebook workspace resources of an existing Cosmos DB account.
      operationId: NotebookWorkspaces_ListByDatabaseAccount
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: Successfully retrieved notebook workspace resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookWorkspaceListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}?api-version=2024-09-01-preview:
    get:
      tags:
        - NotebookWorkspacesResource
      description: Gets the notebook workspace for a Cosmos DB account.
      operationId: NotebookWorkspaces_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/NotebookWorkspaceNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified notebook workspace resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookWorkspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - NotebookWorkspacesResource
      description: Creates the notebook workspace for a Cosmos DB account.
      operationId: NotebookWorkspaces_CreateOrUpdate
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/NotebookWorkspaceNameParameter'
      requestBody:
        description: The notebook workspace to create for the current database account.
        required: true
        x-ms-requestBody-name: notebookCreateUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotebookWorkspaceCreateUpdateParameters'
      responses:
        '200':
          description: Creation of notebook workspace will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookWorkspace'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - NotebookWorkspacesResource
      description: Deletes the notebook workspace for a Cosmos DB account.
      operationId: NotebookWorkspaces_Delete
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/NotebookWorkspaceNameParameter'
      responses:
        '202':
          description: The notebook workspace delete operation will complete asynchronously.
        '204':
          description: The specified notebook workspace does not exist in the database account.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/listConnectionInfo?api-version=2024-09-01-preview:
    post:
      tags:
        - NotebookWorkspacesResource
      operationId: NotebookWorkspacesConnectionInfo_List
      description: Retrieves the connection info for the notebook workspace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/NotebookWorkspaceNameParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotebookWorkspaceConnectionInfoResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-original-operationId: NotebookWorkspaces_ListConnectionInfo
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/regenerateAuthToken?api-version=2024-09-01-preview:
    post:
      tags:
        - NotebookWorkspacesResource
      operationId: NotebookWorkspaces_RegenerateAuthToken
      x-ms-long-running-operation: true
      description: Regenerates the auth token for the notebook workspace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/NotebookWorkspaceNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted. The regenerate auth token operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/start?api-version=2024-09-01-preview:
    post:
      tags:
        - NotebookWorkspacesResource
      operationId: NotebookWorkspaces_Start
      x-ms-long-running-operation: true
      description: Starts the notebook workspace
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/NotebookWorkspaceNameParameter'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted. The start operation will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/throughputPools?api-version=2024-09-01-preview:
    get:
      operationId: ThroughputPools_List
      x-ms-pageable:
        nextLinkName: nextLink
      description: Lists all the Azure Cosmos DB Throughput Pools available under the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools?api-version=2024-09-01-preview:
    get:
      tags:
        - ThroughputPools
      operationId: ThroughputPools_ListByResourceGroup
      description: List all the ThroughputPools in a given resource group.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}?api-version=2024-09-01-preview:
    get:
      operationId: ThroughputPool_Get
      description: Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
      responses:
        '200':
          description: The Throughput Pool properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ThroughputPool_CreateOrUpdate
      description: Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when performing updates on an account.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
      requestBody:
        description: The parameters to provide for the current ThroughputPool.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputPoolResource'
      responses:
        '200':
          description: Completed synchronously. This will only happen if the fields changed by patch require no changes to the actual ThroughputPool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolResource'
        '201':
          description: The throughput pool is being created or updated asynchronously. Poll for status=Succeeded to find when the operation completes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      operationId: ThroughputPool_Update
      description: Updates the properties of an existing Azure Cosmos DB Throughput Pool.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
      requestBody:
        description: The parameters to provide for the current Throughput Pool.
        required: false
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputPoolUpdate'
      responses:
        '200':
          description: Completed synchronously. This will only happen if the fields changed by patch require no changes to the actual ThroughputPool.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolResource'
        '202':
          description: The ThroughputPool update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ThroughputPool_Delete
      description: Deletes an existing Azure Cosmos DB Throughput Pool.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
      responses:
        '202':
          description: The Throughput Pool delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The specified Throughput Pool does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}/throughputPoolAccounts?api-version=2024-09-01-preview:
    get:
      operationId: ThroughputPoolAccounts_List
      x-ms-pageable:
        nextLinkName: nextLink
      description: Lists all the Azure Cosmos DB accounts available under the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolAccountsListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/throughputPools/{throughputPoolName}/throughputPoolAccounts/{throughputPoolAccountName}?api-version=2024-09-01-preview:
    get:
      operationId: ThroughputPoolAccount_Get
      description: Retrieves the properties of an existing Azure Cosmos DB Throughput Pool
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolAccountNameParameter'
      responses:
        '200':
          description: The Throughput Pool properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolAccountResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: ThroughputPoolAccount_Create
      description: Creates or updates an Azure Cosmos DB ThroughputPool account. The "Update" method is preferred when performing updates on an account.
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: azure-async-operation
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolAccountNameParameter'
      requestBody:
        description: The parameters to provide for the current ThroughputPoolAccount.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputPoolAccountResource'
      responses:
        '200':
          description: The Throughput Pool account resource was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolAccountResource'
        '201':
          description: The throughput pool account is being created or updated asynchronously. Poll for status=Succeeded to find when the operation completes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputPoolAccountResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: ThroughputPoolAccount_Delete
      description: Removes an existing Azure Cosmos DB database account from a throughput pool.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolNameParameter'
        - $ref: '#/components/parameters/ThroughputPoolAccountNameParameter'
      responses:
        '202':
          description: The Throughput Pool delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The specified Throughput Pool does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}?api-version=2024-09-01-preview:
    put:
      operationId: DataTransferJobs_Create
      description: Creates a Data Transfer Job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      requestBody:
        required: true
        x-ms-requestBody-name: jobCreateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
      responses:
        '200':
          description: Successful CreateJob response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferJobGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    get:
      operationId: DataTransferJobs_Get
      description: Get a Data Transfer Job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: The Data Transfer Job Properties retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferJobGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/pause?api-version=2024-09-01-preview:
    post:
      operationId: DataTransferJobs_Pause
      description: Pause a Data Transfer Job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: Successful Pause Job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferJobGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/resume?api-version=2024-09-01-preview:
    post:
      operationId: DataTransferJobs_Resume
      description: Resumes a Data Transfer Job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: Successful Resume Job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferJobGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/cancel?api-version=2024-09-01-preview:
    post:
      operationId: DataTransferJobs_Cancel
      description: Cancels a Data Transfer Job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: Successful Cancel Job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferJobGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs/{jobName}/complete?api-version=2024-09-01-preview:
    post:
      operationId: DataTransferJobs_Complete
      description: Completes a Data Transfer Online Job.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/JobNameParameter'
      responses:
        '200':
          description: Successful Complete Job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferJobGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/dataTransferJobs?api-version=2024-09-01-preview:
    get:
      operationId: DataTransferJobs_ListByDatabaseAccount
      description: Get a list of Data Transfer jobs.
      x-ms-pageable:
        nextLinkName: nextLink
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: All Data Transfer Jobs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataTransferJobFeedResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccounts_Get
      description: Retrieves the properties of an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The database account properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountGetResults'
    patch:
      operationId: DatabaseAccounts_Update
      description: Updates the properties of an existing Azure Cosmos DB database account.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The parameters to provide for the current database account.
        required: true
        x-ms-requestBody-name: updateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseAccountUpdateParameters'
      responses:
        '200':
          description: The database account update operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountGetResults'
    put:
      operationId: DatabaseAccounts_CreateOrUpdate
      description: Creates or updates an Azure Cosmos DB database account. The "Update" method is preferred when performing updates on an account.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The parameters to provide for the current database account.
        required: true
        x-ms-requestBody-name: createUpdateParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseAccountCreateUpdateParameters'
      responses:
        '200':
          description: The database account create or update operation will complete asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountGetResults'
    delete:
      operationId: DatabaseAccounts_Delete
      description: Deletes an existing Azure Cosmos DB database account.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '202':
          description: The database account delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The specified account does not exist in the subscription.
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange?api-version=2024-09-01-preview:
    post:
      operationId: DatabaseAccounts_FailoverPriorityChange
      description: Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The new failover policies for the database account.
        required: true
        x-ms-requestBody-name: failoverParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FailoverPolicies'
      responses:
        '202':
          description: Accepted. The failover policy change operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: No Content
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccounts_List
      description: Lists all the Azure Cosmos DB database accounts available under the subscription.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountsListResult'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccounts_ListByResourceGroup
      description: Lists all the Azure Cosmos DB database accounts available under the given resource group.
      parameters:
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountsListResult'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listKeys?api-version=2024-09-01-preview:
    post:
      operationId: DatabaseAccountsKeys_List
      description: Lists the access keys for the specified Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListKeysResult'
      x-ms-original-operationId: DatabaseAccounts_ListKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listConnectionStrings?api-version=2024-09-01-preview:
    post:
      operationId: DatabaseAccountsConnectionStrings_List
      description: Lists the connection strings for the specified Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListConnectionStringsResult'
      x-ms-original-operationId: DatabaseAccounts_ListConnectionStrings
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/offlineRegion?api-version=2024-09-01-preview:
    post:
      operationId: DatabaseAccounts_OfflineRegion
      description: Offline the specified region for the specified Azure Cosmos DB database account.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Cosmos DB region to offline for the database account.
        required: true
        x-ms-requestBody-name: regionParameterForOffline
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionForOnlineOffline'
      responses:
        '200':
          description: The offline region operation is completed successfully.
        '202':
          description: Accepted. The offline region operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/onlineRegion?api-version=2024-09-01-preview:
    post:
      operationId: DatabaseAccounts_OnlineRegion
      description: Online the specified region for the specified Azure Cosmos DB database account.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: Cosmos DB region to online for the database account.
        required: true
        x-ms-requestBody-name: regionParameterForOnline
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionForOnlineOffline'
      responses:
        '200':
          description: The online region operation is completed successfully.
        '202':
          description: Accepted. The online region operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccountsReadOnlyKeys_Get
      description: Lists the read-only access keys for the specified Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListReadOnlyKeysResult'
      x-ms-original-operationId: DatabaseAccounts_GetReadOnlyKeys
    post:
      operationId: DatabaseAccountsReadOnlyKeys_List
      description: Lists the read-only access keys for the specified Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseAccountListReadOnlyKeysResult'
      x-ms-original-operationId: DatabaseAccounts_ListReadOnlyKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey?api-version=2024-09-01-preview:
    post:
      operationId: DatabaseAccounts_RegenerateKey
      description: Regenerates an access key for the specified Azure Cosmos DB database account.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The name of the key to regenerate.
        required: true
        x-ms-requestBody-name: keyToRegenerate
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseAccountRegenerateKeyParameters'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted. The regenerate key operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
  /providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}?api-version=2024-09-01-preview:
    head:
      operationId: DatabaseAccounts_CheckNameExists
      description: Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase letters, numbers, and the '-' character, and must be between 3 and 50 characters.
      parameters:
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: OK. The account name is valid but is already in use.
        '404':
          description: Not Found. The account name is available and valid.
  /providers/Microsoft.DocumentDB/operations?api-version=2024-09-01-preview:
    get:
      tags:
        - Operations
      description: Lists all of the available Cosmos DB Resource Provider operations.
      operationId: Operations_List
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metrics?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccountsMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The metrics for the database account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
      x-ms-original-operationId: DatabaseAccounts_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metrics?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given database account and database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The metrics for the database account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
      x-ms-original-operationId: Database_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metrics?api-version=2024-09-01-preview:
    get:
      operationId: CollectionMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given database account and collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The metrics for the database account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
      x-ms-original-operationId: Collection_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/metrics?api-version=2024-09-01-preview:
    get:
      operationId: CollectionRegionMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given database account, collection and region.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/regionParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The metrics for the database account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
      x-ms-original-operationId: CollectionRegion_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/metrics?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccountRegionMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given database account and region.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/regionParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The metrics for the database account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricListResult'
      x-ms-original-operationId: DatabaseAccountRegion_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sourceRegion/{sourceRegion}/targetRegion/{targetRegion}/percentile/metrics?api-version=2024-09-01-preview:
    get:
      operationId: PercentileSourceTargetMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given account, source and target region. This url is only for PBS and Replication Latency data
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/sourceRegionParameter'
        - $ref: '#/components/parameters/targetRegionParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The percentile metrics for the account, source and target regions were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentileMetricListResult'
      x-ms-original-operationId: PercentileSourceTarget_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/targetRegion/{targetRegion}/percentile/metrics?api-version=2024-09-01-preview:
    get:
      operationId: PercentileTargetMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given account target region. This url is only for PBS and Replication Latency data
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/targetRegionParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The percentile metrics for the account and target regions were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentileMetricListResult'
      x-ms-original-operationId: PercentileTarget_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/percentile/metrics?api-version=2024-09-01-preview:
    get:
      operationId: PercentileMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and Replication Latency data
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The percentile metrics for the account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PercentileMetricListResult'
      x-ms-original-operationId: Percentile_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics?api-version=2024-09-01-preview:
    get:
      operationId: CollectionPartitionRegionMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given collection and region, split by partition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/regionParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The partition-level metrics for the collection and region were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
      x-ms-original-operationId: CollectionPartitionRegion_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics?api-version=2024-09-01-preview:
    get:
      operationId: CollectionPartitionMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given collection, split by partition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The partition-level metrics for the collection were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
      x-ms-original-operationId: CollectionPartition_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics?api-version=2024-09-01-preview:
    get:
      operationId: PartitionKeyRangeIdMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given partition key range id.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/partitionKeyRangeIdParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The partition-level metrics for the partition key range id were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
      x-ms-original-operationId: PartitionKeyRangeId_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics?api-version=2024-09-01-preview:
    get:
      operationId: PartitionKeyRangeIdRegionMetrics_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the metrics determined by the given filter for the given partition key range id and region.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/regionParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/partitionKeyRangeIdParameter'
        - $ref: '#/components/parameters/filterParameter'
      responses:
        '200':
          description: The partition-level metrics for the partition key range id and region were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionMetricListResult'
      x-ms-original-operationId: PartitionKeyRangeIdRegion_ListMetrics
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/usages?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccountsUsages_List
      description: Retrieves the usages (most recent data) for the given database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/usageFilterParameter'
      responses:
        '200':
          description: The usages for the database account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: DatabaseAccounts_ListUsages
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/usages?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseUsages_List
      description: Retrieves the usages (most recent data) for the given database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/usageFilterParameter'
      responses:
        '200':
          description: The usages for the database were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Database_ListUsages
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/usages?api-version=2024-09-01-preview:
    get:
      operationId: CollectionUsages_List
      description: Retrieves the usages (most recent storage data) for the given collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/usageFilterParameter'
      responses:
        '200':
          description: The usages for the collection were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Collection_ListUsages
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/usages?api-version=2024-09-01-preview:
    get:
      operationId: CollectionPartitionUsages_List
      description: Retrieves the usages (most recent storage data) for the given collection, split by partition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
        - $ref: '#/components/parameters/usageFilterParameter'
      responses:
        '200':
          description: The usages for the collection, per partition were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartitionUsagesResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: CollectionPartition_ListUsages
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metricDefinitions?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseMetricDefinitions_List
      description: Retrieves metric definitions for the given database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
      responses:
        '200':
          description: The metric definitions for the database were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionsListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Database_ListMetricDefinitions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metricDefinitions?api-version=2024-09-01-preview:
    get:
      operationId: CollectionMetricDefinitions_List
      description: Retrieves metric definitions for the given collection.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseRidParameter'
        - $ref: '#/components/parameters/collectionRidParameter'
      responses:
        '200':
          description: The metric definitions for the collection were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionsListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: Collection_ListMetricDefinitions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metricDefinitions?api-version=2024-09-01-preview:
    get:
      operationId: DatabaseAccountsMetricDefinitions_List
      description: Retrieves metric definitions for the given database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The metric definitions for the database account were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDefinitionsListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: DatabaseAccounts_ListMetricDefinitions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/graphs?api-version=2024-09-01-preview:
    get:
      operationId: GraphResourcesGraphs_List
      description: Lists the graphs under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The graph resource properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphResourcesListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: GraphResources_ListGraphs
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/graphs/{graphName}?api-version=2024-09-01-preview:
    get:
      operationId: GraphResourcesGraph_Get
      description: Gets the Graph resource under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/graphResourceNameParameter'
      responses:
        '200':
          description: The Graph resource property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphResourceGetResults'
      x-ms-original-operationId: GraphResources_GetGraph
    put:
      operationId: GraphResourcesGraph_CreateUpdate
      description: Create or update an Azure Cosmos DB Graph.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/graphResourceNameParameter'
      requestBody:
        description: The parameters to provide for the current graph.
        required: true
        x-ms-requestBody-name: createUpdateGraphParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphResourceCreateUpdateParameters'
      responses:
        '200':
          description: The Graph create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphResourceGetResults'
        '202':
          description: The graph create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: GraphResources_CreateUpdateGraph
    delete:
      operationId: GraphResourcesGraphResource_Delete
      description: Deletes an existing Azure Cosmos DB Graph Resource.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/graphResourceNameParameter'
      responses:
        '200':
          description: The graph delete operation was completed successfully.
        '202':
          description: The graph delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The graph delete operation was completed successfully.
      x-ms-original-operationId: GraphResources_DeleteGraphResource
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlDatabases_List
      description: Lists the SQL databases under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The SQL database properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabaseListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: SqlResources_ListSqlDatabases
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlDatabase_Get
      description: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The SQL database property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabaseGetResults'
      x-ms-original-operationId: SqlResources_GetSqlDatabase
    put:
      operationId: SqlResourcesSqlDatabase_CreateUpdate
      description: Create or update an Azure Cosmos DB SQL database
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for the current SQL database.
        required: true
        x-ms-requestBody-name: createUpdateSqlDatabaseParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlDatabaseCreateUpdateParameters'
      responses:
        '200':
          description: The SQL database create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlDatabaseGetResults'
        '202':
          description: The SQL database create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_CreateUpdateSqlDatabase
    delete:
      operationId: SqlResourcesSqlDatabase_Delete
      description: Deletes an existing Azure Cosmos DB SQL database.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '202':
          description: The SQL database delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The SQL database delete operation was completed successfully.
      x-ms-original-operationId: SqlResources_DeleteSqlDatabase
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlDatabaseThroughput_Get
      description: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The RUs per second of the SQL database was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: SqlResources_GetSqlDatabaseThroughput
    put:
      operationId: SqlResourcesSqlDatabaseThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB SQL database
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for the RUs per second of the current SQL database.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the SQL database update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the SQL database update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_UpdateSqlDatabaseThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_MigrateSqlDatabaseToAutoscale
      description: Migrate an Azure Cosmos DB SQL database from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The SQL database migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The SQL database migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_MigrateSqlDatabaseToManualThroughput
      description: Migrate an Azure Cosmos DB SQL database from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The SQL database migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The SQL database migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/clientEncryptionKeys?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesClientEncryptionKeys_List
      description: Lists the ClientEncryptionKeys under an existing Azure Cosmos DB SQL database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The ClientEncryptionKeys were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientEncryptionKeysListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: SqlResources_ListClientEncryptionKeys
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/clientEncryptionKeys/{clientEncryptionKeyName}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesClientEncryptionKey_Get
      description: Gets the ClientEncryptionKey under an existing Azure Cosmos DB SQL database.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/clientEncryptionKeyNameParameter'
      responses:
        '200':
          description: The ClientEncryptionKey was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientEncryptionKeyGetResults'
      x-ms-original-operationId: SqlResources_GetClientEncryptionKey
    put:
      operationId: SqlResourcesClientEncryptionKey_CreateUpdate
      description: Create or update a ClientEncryptionKey. This API is meant to be invoked via tools such as the Azure Powershell (instead of directly).
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/clientEncryptionKeyNameParameter'
      requestBody:
        description: The parameters to provide for the client encryption key.
        required: true
        x-ms-requestBody-name: createUpdateClientEncryptionKeyParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientEncryptionKeyCreateUpdateParameters'
      responses:
        '200':
          description: The client encryption key create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientEncryptionKeyGetResults'
        '202':
          description: The client encryption key create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_CreateUpdateClientEncryptionKey
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlContainers_List
      description: Lists the SQL container under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The SQL container properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlContainerListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: SqlResources_ListSqlContainers
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlContainer_Get
      description: Gets the SQL container under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '200':
          description: The SQL container property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlContainerGetResults'
      x-ms-original-operationId: SqlResources_GetSqlContainer
    put:
      operationId: SqlResourcesSqlContainer_CreateUpdate
      description: Create or update an Azure Cosmos DB SQL container
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      requestBody:
        description: The parameters to provide for the current SQL container.
        required: true
        x-ms-requestBody-name: createUpdateSqlContainerParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlContainerCreateUpdateParameters'
      responses:
        '200':
          description: The SQL container create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlContainerGetResults'
        '202':
          description: The SQL container create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_CreateUpdateSqlContainer
    delete:
      operationId: SqlResourcesSqlContainer_Delete
      description: Deletes an existing Azure Cosmos DB SQL container.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '202':
          description: The SQL container delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The SQL container delete operation was completed successfully.
      x-ms-original-operationId: SqlResources_DeleteSqlContainer
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/partitionMerge?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_SqlDatabasePartitionMerge
      description: Merges the partitions of a SQL database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters for the merge operation.
        required: true
        x-ms-requestBody-name: mergeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeParameters'
      responses:
        '200':
          description: The SQL database merge operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionStorageInfoCollection'
        '202':
          description: The SQL database merge operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/partitionMerge?api-version=2024-09-01-preview:
    post:
      operationId: SqlResourcesSqlContainerPartitionMerge_List
      description: Merges the partitions of a SQL Container
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      requestBody:
        description: The parameters for the merge operation.
        required: true
        x-ms-requestBody-name: mergeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeParameters'
      responses:
        '200':
          description: The SQL container merge operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionStorageInfoCollection'
        '202':
          description: The SQL container merge operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: SqlResources_ListSqlContainerPartitionMerge
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlContainerThroughput_Get
      description: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '200':
          description: The RUs per second of the SQL container was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: SqlResources_GetSqlContainerThroughput
    put:
      operationId: SqlResourcesSqlContainerThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB SQL container
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      requestBody:
        description: The parameters to provide for the RUs per second of the current SQL container.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the SQL container update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the SQL container update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_UpdateSqlContainerThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_MigrateSqlContainerToAutoscale
      description: Migrate an Azure Cosmos DB SQL container from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '200':
          description: The SQL container migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The SQL container migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_MigrateSqlContainerToManualThroughput
      description: Migrate an Azure Cosmos DB SQL container from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '200':
          description: The SQL container migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The SQL container migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/retrieveThroughputDistribution?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_SqlDatabaseRetrieveThroughputDistribution
      description: Retrieve throughput distribution for an Azure Cosmos DB SQL database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for retrieving throughput distribution for the current SQL database.
        required: true
        x-ms-requestBody-name: retrieveThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveThroughputParameters'
      responses:
        '200':
          description: The retrieve throughput distribution for SQL database operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The retrieve throughput distribution for SQL database operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/redistributeThroughput?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_SqlDatabaseRedistributeThroughput
      description: Redistribute throughput for an Azure Cosmos DB SQL database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for redistributing throughput for the current SQL database.
        required: true
        x-ms-requestBody-name: redistributeThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedistributeThroughputParameters'
      responses:
        '200':
          description: The redistribution throughput for SQL database operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The redistribution throughput for SQL database operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/retrieveThroughputDistribution?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_SqlContainerRetrieveThroughputDistribution
      description: Retrieve throughput distribution for an Azure Cosmos DB SQL container
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      requestBody:
        description: The parameters to provide for retrieving throughput distribution for the current SQL container.
        required: true
        x-ms-requestBody-name: retrieveThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveThroughputParameters'
      responses:
        '200':
          description: The retrieve throughput distribution for SQL container operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The retrieve throughput distribution for SQL container operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/redistributeThroughput?api-version=2024-09-01-preview:
    post:
      operationId: SqlResources_SqlContainerRedistributeThroughput
      description: Redistribute throughput for an Azure Cosmos DB SQL container
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      requestBody:
        description: The parameters to provide for redistributing throughput for the current SQL container.
        required: true
        x-ms-requestBody-name: redistributeThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedistributeThroughputParameters'
      responses:
        '200':
          description: The redistribution throughput for SQL container operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The redistribution throughput for SQL container operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlStoredProcedures_List
      description: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '200':
          description: The SQL stored procedure properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlStoredProcedureListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: SqlResources_ListSqlStoredProcedures
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures/{storedProcedureName}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlStoredProcedure_Get
      description: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/storedProcedureNameParameter'
      responses:
        '200':
          description: The SQL storedProcedure property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlStoredProcedureGetResults'
      x-ms-original-operationId: SqlResources_GetSqlStoredProcedure
    put:
      operationId: SqlResourcesSqlStoredProcedure_CreateUpdate
      description: Create or update an Azure Cosmos DB SQL storedProcedure
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/storedProcedureNameParameter'
      requestBody:
        description: The parameters to provide for the current SQL storedProcedure.
        required: true
        x-ms-requestBody-name: createUpdateSqlStoredProcedureParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlStoredProcedureCreateUpdateParameters'
      responses:
        '200':
          description: The SQL storedProcedure create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlStoredProcedureGetResults'
        '202':
          description: The SQL storedProcedure create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_CreateUpdateSqlStoredProcedure
    delete:
      operationId: SqlResourcesSqlStoredProcedure_Delete
      description: Deletes an existing Azure Cosmos DB SQL storedProcedure.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/storedProcedureNameParameter'
      responses:
        '202':
          description: The SQL storedProcedure delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The SQL storedProcedure delete operation was completed successfully.
      x-ms-original-operationId: SqlResources_DeleteSqlStoredProcedure
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlUserDefinedFunctions_List
      description: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '200':
          description: The SQL userDefinedFunction properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlUserDefinedFunctionListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: SqlResources_ListSqlUserDefinedFunctions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions/{userDefinedFunctionName}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlUserDefinedFunction_Get
      description: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/userDefinedFunctionNameParameter'
      responses:
        '200':
          description: The SQL userDefinedFunction property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlUserDefinedFunctionGetResults'
      x-ms-original-operationId: SqlResources_GetSqlUserDefinedFunction
    put:
      operationId: SqlResourcesSqlUserDefinedFunction_CreateUpdate
      description: Create or update an Azure Cosmos DB SQL userDefinedFunction
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/userDefinedFunctionNameParameter'
      requestBody:
        description: The parameters to provide for the current SQL userDefinedFunction.
        required: true
        x-ms-requestBody-name: createUpdateSqlUserDefinedFunctionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlUserDefinedFunctionCreateUpdateParameters'
      responses:
        '200':
          description: The SQL userDefinedFunction create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlUserDefinedFunctionGetResults'
        '202':
          description: The SQL userDefinedFunction create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_CreateUpdateSqlUserDefinedFunction
    delete:
      operationId: SqlResourcesSqlUserDefinedFunction_Delete
      description: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/userDefinedFunctionNameParameter'
      responses:
        '202':
          description: The SQL userDefinedFunction delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The SQL userDefinedFunction delete operation was completed successfully.
      x-ms-original-operationId: SqlResources_DeleteSqlUserDefinedFunction
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlTriggers_List
      description: Lists the SQL trigger under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
      responses:
        '200':
          description: The SQL trigger properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlTriggerListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: SqlResources_ListSqlTriggers
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers/{triggerName}?api-version=2024-09-01-preview:
    get:
      operationId: SqlResourcesSqlTrigger_Get
      description: Gets the SQL trigger under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/triggerNameParameter'
      responses:
        '200':
          description: The SQL trigger property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlTriggerGetResults'
      x-ms-original-operationId: SqlResources_GetSqlTrigger
    put:
      operationId: SqlResourcesSqlTrigger_CreateUpdate
      description: Create or update an Azure Cosmos DB SQL trigger
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/triggerNameParameter'
      requestBody:
        description: The parameters to provide for the current SQL trigger.
        required: true
        x-ms-requestBody-name: createUpdateSqlTriggerParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SqlTriggerCreateUpdateParameters'
      responses:
        '200':
          description: The SQL trigger create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SqlTriggerGetResults'
        '202':
          description: The SQL trigger create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: SqlResources_CreateUpdateSqlTrigger
    delete:
      operationId: SqlResourcesSqlTrigger_Delete
      description: Deletes an existing Azure Cosmos DB SQL trigger.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/containerNameParameter'
        - $ref: '#/components/parameters/triggerNameParameter'
      responses:
        '202':
          description: The SQL trigger delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The SQL trigger delete operation was completed successfully.
      x-ms-original-operationId: SqlResources_DeleteSqlTrigger
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoDBDatabases_List
      description: Lists the MongoDB databases under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The MongoDB database properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBDatabaseListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: MongoDBResources_ListMongoDBDatabases
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoDBDatabase_Get
      description: Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The MongoDB database property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBDatabaseGetResults'
      x-ms-original-operationId: MongoDBResources_GetMongoDBDatabase
    put:
      operationId: MongoDBResourcesMongoDBDatabase_CreateUpdate
      description: Create or updates Azure Cosmos DB MongoDB database
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for the current MongoDB database.
        required: true
        x-ms-requestBody-name: createUpdateMongoDBDatabaseParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoDBDatabaseCreateUpdateParameters'
      responses:
        '200':
          description: The MongoDB database create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBDatabaseGetResults'
        '202':
          description: The MongoDB database create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: MongoDBResources_CreateUpdateMongoDBDatabase
    delete:
      operationId: MongoDBResourcesMongoDBDatabase_Delete
      description: Deletes an existing Azure Cosmos DB MongoDB database.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '202':
          description: The MongoDB database delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The MongoDB database delete operation was completed successfully.
      x-ms-original-operationId: MongoDBResources_DeleteMongoDBDatabase
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoDBDatabaseThroughput_Get
      description: Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The RUs per second of the MongoDB database was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: MongoDBResources_GetMongoDBDatabaseThroughput
    put:
      operationId: MongoDBResourcesMongoDBDatabaseThroughput_Update
      description: Update RUs per second of the an Azure Cosmos DB MongoDB database
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The RUs per second of the parameters to provide for the current MongoDB database.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the MongoDB database update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the MongoDB database update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_UpdateMongoDBDatabaseThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MigrateMongoDBDatabaseToAutoscale
      description: Migrate an Azure Cosmos DB MongoDB database from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The MongoDB database migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The MongoDB database migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MigrateMongoDBDatabaseToManualThroughput
      description: Migrate an Azure Cosmos DB MongoDB database from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The MongoDB database migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The MongoDB database migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/retrieveThroughputDistribution?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MongoDBDatabaseRetrieveThroughputDistribution
      description: Retrieve throughput distribution for an Azure Cosmos DB MongoDB database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for retrieving throughput distribution for the current MongoDB database.
        required: true
        x-ms-requestBody-name: retrieveThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveThroughputParameters'
      responses:
        '200':
          description: The retrieve throughput distribution for MongoDB database operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The retrieve throughput distribution for MongoDB database operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/redistributeThroughput?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MongoDBDatabaseRedistributeThroughput
      description: Redistribute throughput for an Azure Cosmos DB MongoDB database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for redistributing throughput for the current MongoDB database.
        required: true
        x-ms-requestBody-name: redistributeThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedistributeThroughputParameters'
      responses:
        '200':
          description: The redistribution throughput for MongoDB database operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The redistribution throughput for MongoDB database operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/retrieveThroughputDistribution?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MongoDBContainerRetrieveThroughputDistribution
      description: Retrieve throughput distribution for an Azure Cosmos DB MongoDB container
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      requestBody:
        description: The parameters to provide for retrieving throughput distribution for the current MongoDB container.
        required: true
        x-ms-requestBody-name: retrieveThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveThroughputParameters'
      responses:
        '200':
          description: The retrieve throughput distribution for MongoDB container operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The retrieve throughput distribution for MongoDB container operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/redistributeThroughput?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MongoDBContainerRedistributeThroughput
      description: Redistribute throughput for an Azure Cosmos DB MongoDB container
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      requestBody:
        description: The parameters to provide for redistributing throughput for the current MongoDB container.
        required: true
        x-ms-requestBody-name: redistributeThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedistributeThroughputParameters'
      responses:
        '200':
          description: The redistribution throughput for MongoDB container operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionThroughputInfoResult'
        '202':
          description: The redistribution throughput for MongoDB container operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoDBCollections_List
      description: Lists the MongoDB collection under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The MongoDB collection properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBCollectionListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: MongoDBResources_ListMongoDBCollections
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoDBCollection_Get
      description: Gets the MongoDB collection under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      responses:
        '200':
          description: The MongoDB collection property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBCollectionGetResults'
      x-ms-original-operationId: MongoDBResources_GetMongoDBCollection
    put:
      operationId: MongoDBResourcesMongoDBCollection_CreateUpdate
      description: Create or update an Azure Cosmos DB MongoDB Collection
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      requestBody:
        description: The parameters to provide for the current MongoDB Collection.
        required: true
        x-ms-requestBody-name: createUpdateMongoDBCollectionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoDBCollectionCreateUpdateParameters'
      responses:
        '200':
          description: The MongoDB Collection create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoDBCollectionGetResults'
        '202':
          description: The MongoDB Collection create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: MongoDBResources_CreateUpdateMongoDBCollection
    delete:
      operationId: MongoDBResourcesMongoDBCollection_Delete
      description: Deletes an existing Azure Cosmos DB MongoDB Collection.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      responses:
        '202':
          description: The MongoDB collection delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The MongoDB collection delete operation was completed successfully.
      x-ms-original-operationId: MongoDBResources_DeleteMongoDBCollection
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/partitionMerge?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MongoDBDatabasePartitionMerge
      description: Merges the partitions of a MongoDB database
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters for the merge operation.
        required: true
        x-ms-requestBody-name: mergeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeParameters'
      responses:
        '200':
          description: The MongoDB database merge operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionStorageInfoCollection'
        '202':
          description: The MongoDB database merge operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/partitionMerge?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResourcesMongoDBCollectionPartitionMerge_List
      description: Merges the partitions of a MongoDB Collection
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      requestBody:
        description: The parameters for the merge operation.
        required: true
        x-ms-requestBody-name: mergeParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeParameters'
      responses:
        '200':
          description: The MongoDB collection merge operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhysicalPartitionStorageInfoCollection'
        '202':
          description: The MongoDB collection merge operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_ListMongoDBCollectionPartitionMerge
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoDBCollectionThroughput_Get
      description: Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      responses:
        '200':
          description: The RUs per second of the MongoDB collection was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: MongoDBResources_GetMongoDBCollectionThroughput
    put:
      operationId: MongoDBResourcesMongoDBCollectionThroughput_Update
      description: Update the RUs per second of an Azure Cosmos DB MongoDB collection
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      requestBody:
        description: The RUs per second of the parameters to provide for the current MongoDB collection.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the MongoDB collection update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the MongoDB collection update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: MongoDBResources_UpdateMongoDBCollectionThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MigrateMongoDBCollectionToAutoscale
      description: Migrate an Azure Cosmos DB MongoDB collection from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      responses:
        '200':
          description: The MongoDB collection migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The MongoDB collection migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: MongoDBResources_MigrateMongoDBCollectionToManualThroughput
      description: Migrate an Azure Cosmos DB MongoDB collection from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/collectionNameParameter'
      responses:
        '200':
          description: The MongoDB collection migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The MongoDB collection migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables?api-version=2024-09-01-preview:
    get:
      operationId: TableResourcesTables_List
      description: Lists the Tables under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Table properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: TableResources_ListTables
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}?api-version=2024-09-01-preview:
    get:
      operationId: TableResourcesTable_Get
      description: Gets the Tables under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The Table property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableGetResults'
      x-ms-original-operationId: TableResources_GetTable
    put:
      operationId: TableResourcesTable_CreateUpdate
      description: Create or update an Azure Cosmos DB Table
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      requestBody:
        description: The parameters to provide for the current Table.
        required: true
        x-ms-requestBody-name: createUpdateTableParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreateUpdateParameters'
      responses:
        '200':
          description: The Table create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableGetResults'
        '202':
          description: The Table create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: TableResources_CreateUpdateTable
    delete:
      operationId: TableResourcesTable_Delete
      description: Deletes an existing Azure Cosmos DB Table.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '202':
          description: The Table delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The Table delete operation was completed successfully.
      x-ms-original-operationId: TableResources_DeleteTable
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: TableResourcesTableThroughput_Get
      description: Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The RUs per second of the Table was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: TableResources_GetTableThroughput
    put:
      operationId: TableResourcesTableThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB Table
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      requestBody:
        description: The parameters to provide for the RUs per second of the current Table.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the Table update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the Table update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: TableResources_UpdateTableThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: TableResources_MigrateTableToAutoscale
      description: Migrate an Azure Cosmos DB Table from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The Table migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Table migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: TableResources_MigrateTableToManualThroughput
      description: Migrate an Azure Cosmos DB Table from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The Table migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Table migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraKeyspaces_List
      description: Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Cassandra keyspace properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraKeyspaceListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: CassandraResources_ListCassandraKeyspaces
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraKeyspace_Get
      description: Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      responses:
        '200':
          description: The Cassandra keyspace property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraKeyspaceGetResults'
      x-ms-original-operationId: CassandraResources_GetCassandraKeyspace
    put:
      operationId: CassandraResourcesCassandraKeyspace_CreateUpdate
      description: Create or update an Azure Cosmos DB Cassandra keyspace
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      requestBody:
        description: The parameters to provide for the current Cassandra keyspace.
        required: true
        x-ms-requestBody-name: createUpdateCassandraKeyspaceParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CassandraKeyspaceCreateUpdateParameters'
      responses:
        '200':
          description: The Cassandra keyspace create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraKeyspaceGetResults'
        '202':
          description: The Cassandra keyspace create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: CassandraResources_CreateUpdateCassandraKeyspace
    delete:
      operationId: CassandraResourcesCassandraKeyspace_Delete
      description: Deletes an existing Azure Cosmos DB Cassandra keyspace.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      responses:
        '202':
          description: The Cassandra keyspace delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The Cassandra keyspace delete operation was completed successfully.
      x-ms-original-operationId: CassandraResources_DeleteCassandraKeyspace
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraKeyspaceThroughput_Get
      description: Gets the RUs per second of the Cassandra Keyspace under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      responses:
        '200':
          description: The RUs per second of the Cassandra Keyspace was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: CassandraResources_GetCassandraKeyspaceThroughput
    put:
      operationId: CassandraResourcesCassandraKeyspaceThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      requestBody:
        description: The RUs per second of the parameters to provide for the current Cassandra Keyspace.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the Cassandra Keyspace update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the Cassandra Keyspace update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: CassandraResources_UpdateCassandraKeyspaceThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: CassandraResources_MigrateCassandraKeyspaceToAutoscale
      description: Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      responses:
        '200':
          description: The Cassandra Keyspace migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Cassandra Keyspace migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: CassandraResources_MigrateCassandraKeyspaceToManualThroughput
      description: Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      responses:
        '200':
          description: The Cassandra Keyspace migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Cassandra Keyspace migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraTables_List
      description: Lists the Cassandra table under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      responses:
        '200':
          description: The Cassandra table properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraTableListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: CassandraResources_ListCassandraTables
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraTable_Get
      description: Gets the Cassandra table under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The Cassandra table property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraTableGetResults'
      x-ms-original-operationId: CassandraResources_GetCassandraTable
    put:
      operationId: CassandraResourcesCassandraTable_CreateUpdate
      description: Create or update an Azure Cosmos DB Cassandra Table
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      requestBody:
        description: The parameters to provide for the current Cassandra Table.
        required: true
        x-ms-requestBody-name: createUpdateCassandraTableParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CassandraTableCreateUpdateParameters'
      responses:
        '200':
          description: The Cassandra Table create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraTableGetResults'
        '202':
          description: The Cassandra Table create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: CassandraResources_CreateUpdateCassandraTable
    delete:
      operationId: CassandraResourcesCassandraTable_Delete
      description: Deletes an existing Azure Cosmos DB Cassandra table.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '202':
          description: The Cassandra table delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The Cassandra table delete operation was completed successfully.
      x-ms-original-operationId: CassandraResources_DeleteCassandraTable
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraTableThroughput_Get
      description: Gets the RUs per second of the Cassandra table under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The RUs per second of the Cassandra table was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: CassandraResources_GetCassandraTableThroughput
    put:
      operationId: CassandraResourcesCassandraTableThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB Cassandra table
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      requestBody:
        description: The RUs per second of the parameters to provide for the current Cassandra table.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the Cassandra table update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the Cassandra table update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: CassandraResources_UpdateCassandraTableThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: CassandraResources_MigrateCassandraTableToAutoscale
      description: Migrate an Azure Cosmos DB Cassandra table from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The Cassandra table migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Cassandra table migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: CassandraResources_MigrateCassandraTableToManualThroughput
      description: Migrate an Azure Cosmos DB Cassandra table from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/tableNameParameter'
      responses:
        '200':
          description: The Cassandra table migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Cassandra table migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases?api-version=2024-09-01-preview:
    get:
      operationId: GremlinResourcesGremlinDatabases_List
      description: Lists the Gremlin databases under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Gremlin database properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinDatabaseListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: GremlinResources_ListGremlinDatabases
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}?api-version=2024-09-01-preview:
    get:
      operationId: GremlinResourcesGremlinDatabase_Get
      description: Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The Gremlin database property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinDatabaseGetResults'
      x-ms-original-operationId: GremlinResources_GetGremlinDatabase
    put:
      operationId: GremlinResourcesGremlinDatabase_CreateUpdate
      description: Create or update an Azure Cosmos DB Gremlin database
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The parameters to provide for the current Gremlin database.
        required: true
        x-ms-requestBody-name: createUpdateGremlinDatabaseParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GremlinDatabaseCreateUpdateParameters'
      responses:
        '200':
          description: The Gremlin database create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinDatabaseGetResults'
        '202':
          description: The Gremlin database create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: GremlinResources_CreateUpdateGremlinDatabase
    delete:
      operationId: GremlinResourcesGremlinDatabase_Delete
      description: Deletes an existing Azure Cosmos DB Gremlin database.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '202':
          description: The Gremlin database delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The Gremlin database delete operation was completed successfully.
      x-ms-original-operationId: GremlinResources_DeleteGremlinDatabase
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: GremlinResourcesGremlinDatabaseThroughput_Get
      description: Gets the RUs per second of the Gremlin database under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The RUs per second of the Gremlin database was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: GremlinResources_GetGremlinDatabaseThroughput
    put:
      operationId: GremlinResourcesGremlinDatabaseThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB Gremlin database
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      requestBody:
        description: The RUs per second of the parameters to provide for the current Gremlin database.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the Gremlin database update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the Gremlin database update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: GremlinResources_UpdateGremlinDatabaseThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: GremlinResources_MigrateGremlinDatabaseToAutoscale
      description: Migrate an Azure Cosmos DB Gremlin database from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The Gremlin database migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Gremlin database migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: GremlinResources_MigrateGremlinDatabaseToManualThroughput
      description: Migrate an Azure Cosmos DB Gremlin database from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The Gremlin database migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Gremlin database migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs?api-version=2024-09-01-preview:
    get:
      operationId: GremlinResourcesGremlinGraphs_List
      description: Lists the Gremlin graph under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
      responses:
        '200':
          description: The Gremlin graph properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinGraphListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: GremlinResources_ListGremlinGraphs
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}?api-version=2024-09-01-preview:
    get:
      operationId: GremlinResourcesGremlinGraph_Get
      description: Gets the Gremlin graph under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      responses:
        '200':
          description: The Gremlin graph property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinGraphGetResults'
      x-ms-original-operationId: GremlinResources_GetGremlinGraph
    put:
      operationId: GremlinResourcesGremlinGraph_CreateUpdate
      description: Create or update an Azure Cosmos DB Gremlin graph
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      requestBody:
        description: The parameters to provide for the current Gremlin graph.
        required: true
        x-ms-requestBody-name: createUpdateGremlinGraphParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GremlinGraphCreateUpdateParameters'
      responses:
        '200':
          description: The Gremlin graph create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GremlinGraphGetResults'
        '202':
          description: The Gremlin graph create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: GremlinResources_CreateUpdateGremlinGraph
    delete:
      operationId: GremlinResourcesGremlinGraph_Delete
      description: Deletes an existing Azure Cosmos DB Gremlin graph.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      responses:
        '202':
          description: The Gremlin graph delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The Gremlin graph delete operation was completed successfully.
      x-ms-original-operationId: GremlinResources_DeleteGremlinGraph
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: GremlinResourcesGremlinGraphThroughput_Get
      description: Gets the Gremlin graph throughput under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      responses:
        '200':
          description: The RUs per second of the Gremlin graph was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: GremlinResources_GetGremlinGraphThroughput
    put:
      operationId: GremlinResourcesGremlinGraphThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB Gremlin graph
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      requestBody:
        description: The RUs per second of the parameters to provide for the current Gremlin graph.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the Gremlin graph update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the Gremlin graph update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: GremlinResources_UpdateGremlinGraphThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: GremlinResources_MigrateGremlinGraphToAutoscale
      description: Migrate an Azure Cosmos DB Gremlin graph from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      responses:
        '200':
          description: The Gremlin graph migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Gremlin graph migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: GremlinResources_MigrateGremlinGraphToManualThroughput
      description: Migrate an Azure Cosmos DB Gremlin graph from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/databaseNameParameter'
        - $ref: '#/components/parameters/graphNameParameter'
      responses:
        '200':
          description: The Gremlin graph migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Gremlin graph migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations?api-version=2024-09-01-preview:
    get:
      operationId: Locations_List
      description: List Cosmos DB locations and their properties
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: The operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-pageable:
        nextLinkName: null
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}?api-version=2024-09-01-preview:
    get:
      operationId: Locations_Get
      description: Get the properties of an existing Cosmos DB location
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/locationParameter'
      responses:
        '200':
          description: The Cosmos DB location properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationGetResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraViews_List
      description: Lists the Cassandra materialized views under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
      responses:
        '200':
          description: The Cassandra view properties were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraViewListResult'
      x-ms-pageable:
        nextLinkName: null
      x-ms-original-operationId: CassandraResources_ListCassandraViews
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraView_Get
      description: Gets the Cassandra view under an existing Azure Cosmos DB database account.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/viewNameParameter'
      responses:
        '200':
          description: The Cassandra view property was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraViewGetResults'
      x-ms-original-operationId: CassandraResources_GetCassandraView
    put:
      operationId: CassandraResourcesCassandraView_CreateUpdate
      description: Create or update an Azure Cosmos DB Cassandra View
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/viewNameParameter'
      requestBody:
        description: The parameters to provide for the current Cassandra View.
        required: true
        x-ms-requestBody-name: createUpdateCassandraViewParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CassandraViewCreateUpdateParameters'
      responses:
        '200':
          description: The Cassandra View create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraViewGetResults'
        '202':
          description: The Cassandra View create or update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: CassandraResources_CreateUpdateCassandraView
    delete:
      operationId: CassandraResourcesCassandraView_Delete
      description: Deletes an existing Azure Cosmos DB Cassandra view.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/viewNameParameter'
      responses:
        '200':
          description: The Cassandra view delete operation completed successfully.
        '202':
          description: The Cassandra view delete operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        '204':
          description: The Cassandra view delete operation was completed successfully.
      x-ms-original-operationId: CassandraResources_DeleteCassandraView
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}/throughputSettings/default?api-version=2024-09-01-preview:
    get:
      operationId: CassandraResourcesCassandraViewThroughput_Get
      description: Gets the RUs per second of the Cassandra view under an existing Azure Cosmos DB database account with the provided name.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/viewNameParameter'
      responses:
        '200':
          description: The RUs per second of the Cassandra view was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
      x-ms-original-operationId: CassandraResources_GetCassandraViewThroughput
    put:
      operationId: CassandraResourcesCassandraViewThroughput_Update
      description: Update RUs per second of an Azure Cosmos DB Cassandra view
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/viewNameParameter'
      requestBody:
        description: The RUs per second of the parameters to provide for the current Cassandra view.
        required: true
        x-ms-requestBody-name: updateThroughputParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThroughputSettingsUpdateParameters'
      responses:
        '200':
          description: The RUs per second of the Cassandra view update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The RUs per second of the Cassandra view update operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
      x-ms-original-operationId: CassandraResources_UpdateCassandraViewThroughput
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}/throughputSettings/default/migrateToAutoscale?api-version=2024-09-01-preview:
    post:
      operationId: CassandraResources_MigrateCassandraViewToAutoscale
      description: Migrate an Azure Cosmos DB Cassandra view from manual throughput to autoscale
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/viewNameParameter'
      responses:
        '200':
          description: The Cassandra view migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Cassandra view migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/views/{viewName}/throughputSettings/default/migrateToManualThroughput?api-version=2024-09-01-preview:
    post:
      operationId: CassandraResources_MigrateCassandraViewToManualThroughput
      description: Migrate an Azure Cosmos DB Cassandra view from autoscale to manual throughput
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/keyspaceNameParameter'
        - $ref: '#/components/parameters/viewNameParameter'
      responses:
        '200':
          description: The Cassandra view migrate operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThroughputSettingsGetResults'
        '202':
          description: The Cassandra view migrate operation will complete asynchronously.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbRoleDefinitions/{mongoRoleDefinitionId}?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoRoleDefinition_Get
      description: Retrieves the properties of an existing Azure Cosmos DB Mongo Role Definition with the given Id.
      parameters:
        - $ref: '#/components/parameters/mongoRoleDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Mongo Role Definition was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoRoleDefinitionGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_GetMongoRoleDefinition
    put:
      operationId: MongoDBResourcesMongoRoleDefinition_CreateUpdate
      x-ms-long-running-operation: true
      description: Creates or updates an Azure Cosmos DB Mongo Role Definition.
      parameters:
        - $ref: '#/components/parameters/mongoRoleDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The properties required to create or update a Role Definition.
        required: true
        x-ms-requestBody-name: createUpdateMongoRoleDefinitionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoRoleDefinitionCreateUpdateParameters'
      responses:
        '200':
          description: The Mongo Role Definition create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoRoleDefinitionGetResults'
        '202':
          description: The Mongo Role Definition create or update request was accepted and will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_CreateUpdateMongoRoleDefinition
    delete:
      operationId: MongoDBResourcesMongoRoleDefinition_Delete
      x-ms-long-running-operation: true
      description: Deletes an existing Azure Cosmos DB Mongo Role Definition.
      parameters:
        - $ref: '#/components/parameters/mongoRoleDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The Mongo Role Definition delete operation was completed successfully.
        '202':
          description: The Mongo Role Definition delete request was accepted and will complete asynchronously.
        '204':
          description: The requested Mongo Role Definition does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_DeleteMongoRoleDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbRoleDefinitions?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoRoleDefinitions_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the list of all Azure Cosmos DB Mongo Role Definitions.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The list operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoRoleDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_ListMongoRoleDefinitions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbUserDefinitions/{mongoUserDefinitionId}?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoUserDefinition_Get
      description: Retrieves the properties of an existing Azure Cosmos DB Mongo User Definition with the given Id.
      parameters:
        - $ref: '#/components/parameters/mongoUserDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The User Definition was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoUserDefinitionGetResults'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_GetMongoUserDefinition
    put:
      operationId: MongoDBResourcesMongoUserDefinition_CreateUpdate
      x-ms-long-running-operation: true
      description: Creates or updates an Azure Cosmos DB Mongo User Definition.
      parameters:
        - $ref: '#/components/parameters/mongoUserDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      requestBody:
        description: The properties required to create or update a User Definition.
        required: true
        x-ms-requestBody-name: createUpdateMongoUserDefinitionParameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MongoUserDefinitionCreateUpdateParameters'
      responses:
        '200':
          description: The User Definition create or update operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoUserDefinitionGetResults'
        '202':
          description: The User Definition create or update request was accepted and will complete asynchronously.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_CreateUpdateMongoUserDefinition
    delete:
      operationId: MongoDBResourcesMongoUserDefinition_Delete
      x-ms-long-running-operation: true
      description: Deletes an existing Azure Cosmos DB Mongo User Definition.
      parameters:
        - $ref: '#/components/parameters/mongoUserDefinitionIdParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The User Definition delete operation was completed successfully.
        '202':
          description: The User Definition delete request was accepted and will complete asynchronously.
        '204':
          description: The requested User Definition does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_DeleteMongoUserDefinition
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbUserDefinitions?api-version=2024-09-01-preview:
    get:
      operationId: MongoDBResourcesMongoUserDefinitions_List
      x-ms-pageable:
        nextLinkName: null
      description: Retrieves the list of all Azure Cosmos DB Mongo User Definition.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: The list operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MongoUserDefinitionListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: MongoDBResources_ListMongoUserDefinitions
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/networkSecurityPerimeterConfigurations?api-version=2024-09-01-preview:
    get:
      tags:
        - NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_List
      description: Gets list of effective Network Security Perimeter Configuration for cosmos db account
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: Network Security Perimeter Configuration List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfigurationListResult'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-pageable:
        nextLinkName: nextLink
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}?api-version=2024-09-01-preview:
    get:
      tags:
        - NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_Get
      description: Gets effective Network Security Perimeter Configuration for association
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/networkSecurityPerimeterConfigurationName'
      responses:
        '200':
          description: Network Security Perimeter Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkSecurityPerimeterConfiguration'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/networkSecurityPerimeterConfigurations/{networkSecurityPerimeterConfigurationName}/reconcile?api-version=2024-09-01-preview:
    post:
      tags:
        - NetworkSecurityPerimeterConfigurations
      operationId: NetworkSecurityPerimeterConfigurations_Reconcile
      description: Refreshes any information about the association.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/networkSecurityPerimeterConfigurationName'
      responses:
        '202':
          description: Request to reconcile the association accepted.
          headers:
            Location:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-ms-long-running-operation: true
      x-ms-long-running-operation-options:
        final-state-via: location
  /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/cassandraClusters?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClusters_ListBySubscription
      description: List all managed Cassandra clusters in this subscription.
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the list of managed Cassandra clusters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusters'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClusters_ListByResourceGroup
      description: List all managed Cassandra clusters in this resource group.
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
      responses:
        '200':
          description: Successfully retrieved the list of managed Cassandra clusters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusters'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClusters_Get
      description: Get the properties of a managed Cassandra cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      responses:
        '200':
          description: The properties of the managed Cassandra cluster were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      operationId: CassandraClusters_Delete
      description: Deletes a managed Cassandra cluster.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      responses:
        '202':
          description: Accepted. The managed Cassandra cluster will be deleted asynchronously.
        '204':
          description: No such cluster to delete.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      operationId: CassandraClusters_CreateUpdate
      description: Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update only some properties, use PATCH.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      requestBody:
        description: The properties specifying the desired state of the managed Cassandra cluster.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterResource'
      responses:
        '200':
          description: The managed Cassandra cluster is being updated. Poll for provisioningState=Succeeded to find when creation completes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResource'
        '201':
          description: The managed Cassandra cluster is being created. Poll for provisioningState=Succeeded to find when creation completes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      operationId: CassandraClusters_Update
      description: Updates some of the properties of a managed Cassandra cluster.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      requestBody:
        description: Parameters to provide for specifying the managed Cassandra cluster.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterResource'
      responses:
        '200':
          description: Completed synchronously. This will only happen if the fields changed by patch require no changes to the actual Cassandra data center.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResource'
        '202':
          description: The managed Cassandra cluster is being updated. Poll the provided operation for completion.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/invokeCommand?api-version=2024-09-01-preview:
    post:
      operationId: CassandraClusters_InvokeCommand
      description: 'Invoke a command like nodetool for cassandra maintenance '
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      requestBody:
        description: Specification which command to run where
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandPostBody'
      responses:
        '202':
          description: Success. The command operation will begin as soon as possible.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandOutput'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/invokeCommandAsync?api-version=2024-09-01-preview:
    post:
      operationId: CassandraClusters_InvokeCommandAsync
      description: Invoke a command like nodetool for cassandra maintenance asynchronously
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      requestBody:
        description: Specification which command to run where
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandPostBody'
      responses:
        '200':
          description: The command operation was completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandPublicResource'
        '202':
          description: Success. The command operation will begin as soon as possible.
          headers:
            azure-AsyncOperation:
              schema:
                type: string
              description: URI to poll for completion status.
            location:
              schema:
                type: string
              description: URI to poll for completion status.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/commands?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClustersCommand_List
      description: List all commands currently running on ring info
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      responses:
        '200':
          description: Successfully retrieved the list of shell commands.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommands'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: CassandraClusters_ListCommand
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/commands/{commandId}?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClustersCommandAsync_Get
      description: Get details about a specified command that was run asynchronously.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/commandId'
      responses:
        '200':
          description: Success. Return a command resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommands'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: CassandraClusters_GetCommandAsync
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/backups?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClustersBackups_List
      description: List the backups of this cluster that are available to restore.
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      responses:
        '200':
          description: Successfully retrieved the list of restorable backups for this Cassandra cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackups'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: CassandraClusters_ListBackups
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/backups/{backupId}?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClustersBackup_Get
      description: Get the properties of an individual backup of this cluster that is available to restore.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/backupNameParameter'
      responses:
        '200':
          description: Successfully retrieved the properties of the backup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
      x-ms-original-operationId: CassandraClusters_GetBackup
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/dataCenters?api-version=2024-09-01-preview:
    get:
      operationId: CassandraDataCenters_List
      description: List all data centers in a particular managed Cassandra cluster.
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      responses:
        '200':
          description: Successfully retrieved the list of managed Cassandra data centers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDataCenters'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/dataCenters/{dataCenterName}?api-version=2024-09-01-preview:
    get:
      operationId: CassandraDataCenters_Get
      description: Get the properties of a managed Cassandra data center.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/dataCenterNameParameter'
      responses:
        '200':
          description: The properties of the managed Cassandra data center were retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCenterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    delete:
      operationId: CassandraDataCenters_Delete
      description: Delete a managed Cassandra data center.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/dataCenterNameParameter'
      responses:
        '202':
          description: Accepted. Deletion will complete asynchronously.
        '204':
          description: Cassandra cluster with the specified name does not exist.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    put:
      operationId: CassandraDataCenters_CreateUpdate
      description: Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some properties, use PATCH.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/dataCenterNameParameter'
      requestBody:
        description: Parameters specifying the managed Cassandra data center.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCenterResource'
      responses:
        '200':
          description: Accepted. The data center will be updated asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCenterResource'
        '201':
          description: Accepted. The data center will be created asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCenterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
    patch:
      operationId: CassandraDataCenters_Update
      description: Update some of the properties of a managed Cassandra data center.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/dataCenterNameParameter'
      requestBody:
        description: Parameters to provide for specifying the managed Cassandra data center.
        required: true
        x-ms-requestBody-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCenterResource'
      responses:
        '200':
          description: Completed synchronously. This will only happen if the fields changed by patch require no changes to the actual Cassandra cluster, such as editing the tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCenterResource'
        '202':
          description: Accepted. Update will proceed asynchronously.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataCenterResource'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/deallocate?api-version=2024-09-01-preview:
    post:
      operationId: CassandraClusters_Deallocate
      description: Deallocate the Managed Cassandra Cluster and Associated Data Centers. Deallocation will deallocate the host virtual machine of this cluster, and reserved the data disk. This won't do anything on an already deallocated cluster. Use Start to restart the cluster.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/forceDeallocate'
      responses:
        '202':
          description: Cluster deallocated.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/start?api-version=2024-09-01-preview:
    post:
      operationId: CassandraClusters_Start
      description: Start the Managed Cassandra Cluster and Associated Data Centers. Start will start the host virtual machine of this cluster with reserved data disk. This won't do anything on an already running cluster. Use Deallocate to deallocate the cluster.
      x-ms-long-running-operation: true
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      responses:
        '202':
          description: Enqueued Operation to start the cluster.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/status?api-version=2024-09-01-preview:
    get:
      operationId: CassandraClusters_Status
      description: Gets the CPU, memory, and disk usage statistics for each Cassandra node in a cluster.
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
      responses:
        '200':
          description: Successfully fetched the usage statistics of all nodes in the cluster.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CassandraClusterPublicStatus'
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateLinkResources?api-version=2024-09-01-preview:
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources that need to be created for a Cosmos DB account.
      operationId: PrivateLinkResources_ListByDatabaseAccount
      x-ms-pageable:
        nextLinkName: null
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
      responses:
        '200':
          description: Successfully retrieved private link resources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateLinkResources/{groupName}?api-version=2024-09-01-preview:
    get:
      tags:
        - PrivateLinkResources
      description: Gets the private link resources that need to be created for a Cosmos DB account.
      operationId: PrivateLinkResources_Get
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: '#/components/parameters/GroupNameParameter'
      responses:
        '200':
          description: Successfully retrieved a specified private link resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResource'
